uint64_t type metadata accessor for NativeAdInfo(uint64_t a1)
{
  return sub_1BA21CE7C(a1, qword_1ED5B18B0);
}

ValueMetadata *type metadata accessor for BannerAd()
{
  return &type metadata for BannerAd;
}

uint64_t getEnumTagSinglePayload for SponsorshipAdInfo(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 105))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 104);
  if (v3 >= 2)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

ValueMetadata *type metadata accessor for SponsorshipAdInfo()
{
  return &type metadata for SponsorshipAdInfo;
}

uint64_t getEnumTagSinglePayload for AdHostDescription(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t type metadata accessor for NativeAd.Headline(uint64_t a1)
{
  return sub_1BA21CE7C(a1, qword_1ED5B1308);
}

ValueMetadata *type metadata accessor for BannerAdState()
{
  return &type metadata for BannerAdState;
}

uint64_t type metadata accessor for NativeAd(uint64_t a1)
{
  return sub_1BA21CE7C(a1, qword_1ED5B28A0);
}

ValueMetadata *type metadata accessor for FeedGroupAdData.Article()
{
  return &type metadata for FeedGroupAdData.Article;
}

ValueMetadata *type metadata accessor for FeedGroupAdData()
{
  return &type metadata for FeedGroupAdData;
}

ValueMetadata *type metadata accessor for AdPolicyContentType()
{
  return &type metadata for AdPolicyContentType;
}

ValueMetadata *type metadata accessor for AdPolicyContentType.EngagementBannerState()
{
  return &type metadata for AdPolicyContentType.EngagementBannerState;
}

ValueMetadata *type metadata accessor for AdPolicyContentType.AdState()
{
  return &type metadata for AdPolicyContentType.AdState;
}

ValueMetadata *type metadata accessor for FeedGroupAdData.AdjacentPosition()
{
  return &type metadata for FeedGroupAdData.AdjacentPosition;
}

uint64_t BannerAd.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA2283EC(v1 + 16, a1);
}

ValueMetadata *type metadata accessor for FeedGroupAdData.Kind()
{
  return &type metadata for FeedGroupAdData.Kind;
}

uint64_t sub_1BA21C368(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 80) = a2;
  return result;
}

uint64_t sub_1BA21C394@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1BA229C2C(v1[3], v1[4], v1[5], v1[2], a1);
}

uint64_t storeEnumTagSinglePayload for BannerAdViewLayoutAttributes(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 488) = 0;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 489) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 489) = 0;
    if (a2)
      *(_BYTE *)(result + 488) = ~(_BYTE)a2;
  }
  return result;
}

double sub_1BA21C464()
{
  uint64_t v0;

  return *(double *)v0;
}

ValueMetadata *type metadata accessor for DebugJournal()
{
  return &type metadata for DebugJournal;
}

ValueMetadata *type metadata accessor for BannerAdViewLayoutAttributes()
{
  return &type metadata for BannerAdViewLayoutAttributes;
}

uint64_t sub_1BA21C49C(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 80);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

_QWORD *sub_1BA21C4B8(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

uint64_t sub_1BA21C4D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA229410(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48), *(_QWORD *)(v1 + 16), a1);
}

ValueMetadata *type metadata accessor for BannerAdState.Recover()
{
  return &type metadata for BannerAdState.Recover;
}

unint64_t destroy for FeedGroupAdData.Kind(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

double sub_1BA21C514(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 72) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

void *__swift_memcpy489_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1E9uLL);
}

uint64_t BannerAdUpdate.model.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 68));
}

ValueMetadata *type metadata accessor for AdPolicyLayoutEnvironment()
{
  return &type metadata for AdPolicyLayoutEnvironment;
}

uint64_t sub_1BA21C580()
{
  uint64_t *v0;

  return sub_1BA22A250(v0[4], v0[5], v0[6], v0[7], v0[2], v0[3]);
}

uint64_t storeEnumTagSinglePayload for SponsorshipAdInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 89) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 105) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 105) = 0;
    if (a2)
      *(_BYTE *)(result + 104) = -(char)a2;
  }
  return result;
}

_BYTE *sub_1BA21C5EC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for JournalEntryStatus()
{
  return &type metadata for JournalEntryStatus;
}

uint64_t sub_1BA21C604()
{
  return sub_1BA2C14F0();
}

uint64_t getEnumTagSinglePayload for BannerAdViewLayoutAttributes(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 489))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 488);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = (v3 ^ 0xFF) - 1;
  return (v4 + 1);
}

ValueMetadata *type metadata accessor for BannerAdViewLayoutOptions.Embedded()
{
  return &type metadata for BannerAdViewLayoutOptions.Embedded;
}

uint64_t storeEnumTagSinglePayload for BannerAdLayout(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

uint64_t _s3AdsV9DebuggingV15VisualDebuggingC4ModeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA21C6EC + 4 * byte_1BA2C9839[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA21C720 + 4 * byte_1BA2C9834[v4]))();
}

uint64_t sub_1BA21C720(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA21C728(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA21C730);
  return result;
}

uint64_t sub_1BA21C73C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA21C744);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA21C748(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA21C750(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for AdInsertionType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_1BA21C7F0(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

ValueMetadata *type metadata accessor for AdPolicyFailureType()
{
  return &type metadata for AdPolicyFailureType;
}

unint64_t destroy for JournalEntryStatus(unint64_t *a1)
{
  return sub_1BA22C4F0(*a1);
}

ValueMetadata *type metadata accessor for AdPolicyPlacement()
{
  return &type metadata for AdPolicyPlacement;
}

ValueMetadata *type metadata accessor for AdPolicyFailure()
{
  return &type metadata for AdPolicyFailure;
}

uint64_t type metadata accessor for InterstitialAdPlacement()
{
  uint64_t result;

  result = qword_1ED5B3D00;
  if (!qword_1ED5B3D00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t destroy for AdContextDataNamespace(uint64_t a1)
{
  return sub_1BA229ED4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1BA21C894(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

uint64_t storeEnumTagSinglePayload for AdContextDataNamespace(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AdContextDataNamespace(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

_BYTE *sub_1BA21C92C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

uint64_t dispatch thunk of AdContextBuilderType.pushData<A>(_:namespace:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t destroy for DebugJournal.Action(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 2)
    v1 = *(_DWORD *)a1 + 2;
  if (v1 == 1)
    return swift_bridgeObjectRelease();
  else
    return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t static Ads.Feed.banner.getter()
{
  sub_1BA23540C();
  return swift_initStaticObject();
}

uint64_t sub_1BA21C988()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1BA21C990()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t JournalEntryStatus.displayName.getter()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;
  BOOL v6;

  v1 = *v0;
  v2 = (unint64_t)*v0 >> 62;
  if (!(_DWORD)v2)
    return 0x64656C696146;
  if ((_DWORD)v2 == 1)
    return 0x6564726163736944;
  v4 = v0[2] | v0[3] | v0[1];
  if (v1 == 0x8000000000000000 && v4 == 0)
    return 0x64657461657243;
  if (v1 == 0x8000000000000008 && !v4)
    return 0x656C756465686353;
  if (v1 == 0x8000000000000010 && !v4)
    return 0x656D726177657250;
  if (v1 == 0x8000000000000018 && !v4)
    return 0x6574736575716552;
  if (v1 == 0x8000000000000020 && !v4)
    return 0x656C6C69666C7546;
  if (v4)
    v6 = 0;
  else
    v6 = v1 == 0x8000000000000028;
  if (v6)
    return 0x65746E6573657250;
  else
    return 0x657370616C6C6F43;
}

ValueMetadata *type metadata accessor for DebugJournal.Summary()
{
  return &type metadata for DebugJournal.Summary;
}

unint64_t DebugJournal.Summary.status.getter@<X0>(unint64_t *a1@<X8>)
{
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v2 = v1[4];
  v3 = v1[5];
  v4 = v1[6];
  v5 = v1[7];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1BA22C6F4(v2);
}

uint64_t dispatch thunk of AdPlacementPolicyValidatorType.addPolicy(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1BA21CB10(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*a1 >> 3) + 2;
}

unint64_t JournalEntry.status.getter@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = (unint64_t *)(v2 + *(int *)(a1 + 60));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a2 = *v3;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  return sub_1BA22C6F4(v4);
}

unint64_t *initializeWithCopy for JournalEntryStatus(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_1BA22C6F4(*a2);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t type metadata accessor for AdStatusConditionReporter()
{
  return objc_opt_self();
}

void VideoAdProviderFactory.init(adManager:adRequestStore:journal:appConfigurationManager:prerollAdRequester:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1BA2BC2D4(a1, a2, a3, a4, a5);
}

uint64_t sub_1BA21CBE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 88) - 8) + 8))(v1);
  return a1;
}

uint64_t sub_1BA21CC14()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BA21CCA8(uint64_t a1, void *a2)
{
  uint64_t v4;

  if (qword_1ED5B2E38 != -1)
    swift_once();
  if ((sub_1BA2C152C() & 1) != 0)
  {
    type metadata accessor for AdsModuleStartupTask();
    sub_1BA23ABD0();
    swift_retain();
    sub_1BA2C14FC();
    swift_release();
    return v4;
  }
  else if (a2 && (objc_msgSend(a2, sel_respondsToSelector_, sel_articleAdPrefetchLimit) & 1) != 0)
  {
    return (uint64_t)objc_msgSend(a2, sel_articleAdPrefetchLimit);
  }
  else
  {
    return 3;
  }
}

uint64_t _s7NewsAds18JournalEntryStatusO7FailureVwxx_0(id *a1)
{

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA21CDCC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v0 = sub_1BA2C1610();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v3 + 104))(v2, *MEMORY[0x1E0DB57E8]);
  type metadata accessor for Settings.Ads.PromotedContentParameters.ContextPrefetchLimit(0);
  swift_allocObject();
  result = Settings.Ads.PromotedContentParameters.ContextPrefetchLimit.init(key:defaultValue:access:)(0xD000000000000039, 0x80000001BA2D0FA0, 0, (uint64_t)v2);
  qword_1ED5B2D10 = result;
  return result;
}

uint64_t sub_1BA21CE7C(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for Assembly()
{
  return objc_opt_self();
}

uint64_t JournalEntry.createdDate.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 52);
  v5 = sub_1BA2C1424();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

void sub_1BA21CF10()
{
  type metadata accessor for AdRequest();
}

uint64_t type metadata accessor for AdSegmentUpdater()
{
  return objc_opt_self();
}

uint64_t sub_1BA21CFC0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BA21CFD4(a1, a2);
}

uint64_t sub_1BA21CFD4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  *a2 = v3;
  a2[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t AdPolicyLayoutEnvironmentProvider.init()()
{
  uint64_t v0;

  sub_1BA236CFC();
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1BA2C1904();
  return v0;
}

uint64_t type metadata accessor for NativeAdProviderFactory()
{
  return objc_opt_self();
}

uint64_t sub_1BA21D060()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BA2C1AC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA21D0E8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BA2C1AC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for FeedBannerAdProviderFactory()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for RendererAssembly()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for NativeAdProvider()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ManagerAssembly()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SponsorshipAdProvider()
{
  return objc_opt_self();
}

uint64_t sub_1BA21D210()
{
  return swift_initClassMetadata2();
}

unint64_t sub_1BA21D258()
{
  unint64_t result;

  result = qword_1ED5B2BD0;
  if (!qword_1ED5B2BD0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5B2BD0);
  }
  return result;
}

void BannerAdViewManager.init(adManager:requestStore:layoutStore:journal:host:)()
{
  type metadata accessor for DisposableObserver();
}

uint64_t sub_1BA21D2F8()
{
  uint64_t v0;
  uint64_t v1;
  __int128 *v2;
  uint64_t v3;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;

  *(_QWORD *)(v1 + 144) = sub_1BA2C22AC();
  *(_QWORD *)(v1 + 152) = sub_1BA21D608(MEMORY[0x1E0DEE9D8]);
  sub_1BA21D3D4(v4, v1 + 16);
  *(_QWORD *)(v1 + 56) = v3;
  sub_1BA21D3D4(v2, v1 + 64);
  *(_QWORD *)(v1 + 104) = v0;
  *(_OWORD *)(v1 + 112) = v8;
  *(_QWORD *)(v1 + 128) = v5;
  *(_QWORD *)(v1 + 136) = v6;
  return v1;
}

uint64_t AdRequestManager.init(contextBuilder:adManager:requestStore:journal:host:)(__int128 *a1, __int128 *a2, uint64_t a3, uint64_t a4, __int128 *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;

  v12 = *a5;
  v9 = *((_QWORD *)a5 + 2);
  v10 = *((_QWORD *)a5 + 3);
  sub_1BA21D3D4(a1, v5 + 16);
  sub_1BA21D3D4(a2, v5 + 56);
  *(_QWORD *)(v5 + 96) = a3;
  *(_QWORD *)(v5 + 104) = a4;
  *(_OWORD *)(v5 + 112) = v12;
  *(_QWORD *)(v5 + 128) = v9;
  *(_QWORD *)(v5 + 136) = v10;
  return v5;
}

uint64_t sub_1BA21D3D4(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1BA21D3EC()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ArticleBannerAdProviderFactory()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for StoreAssembly()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for AdContextManager()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DebugJournalSummaryViewStyler()
{
  return objc_opt_self();
}

uint64_t sub_1BA21D4C8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BA2C1AC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1BA21D550()
{
  unint64_t result;

  result = qword_1ED5B2C18;
  if (!qword_1ED5B2C18)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5B2C18);
  }
  return result;
}

uint64_t sub_1BA21D58C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BA2C1AC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1BA21D608(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA266130();
  v2 = (_QWORD *)sub_1BA2C25B8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_OWORD *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v14 = *v4;
    swift_bridgeObjectRetain();
    v7 = (id)v14;
    result = sub_1BA229E28(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_OWORD *)(v2[7] + 16 * result) = v14;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1BA21D72C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v0 = sub_1BA2C1610();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v3 + 104))(v2, *MEMORY[0x1E0DB57E8]);
  type metadata accessor for Settings.Ads.Debugging.FeedPrefetchDistance(0);
  swift_allocObject();
  result = Settings.Ads.Debugging.FeedPrefetchDistance.init(key:defaultValue:access:)(0xD000000000000036, 0x80000001BA2D0FE0, 0, (uint64_t)v2);
  qword_1ED5B1230 = result;
  return result;
}

uint64_t type metadata accessor for ProviderAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1BA21D7FC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BA2C1AC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA21D880@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = type metadata accessor for BannerAdLayoutStore();
  v3 = swift_allocObject();
  sub_1BA236EC0();
  swift_allocObject();
  result = sub_1BA2C18B0();
  *(_QWORD *)(v3 + 16) = result;
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for BannerAdLayoutStore;
  *a1 = v3;
  return result;
}

uint64_t destroy for FirstViewportAdPolicy()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for CommandAssembly()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PreviewAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1BA21D958(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _QWORD v5[5];

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v2 = type metadata accessor for AdsModuleStartupTask();
  result = sub_1BA2C1760();
  if (result)
  {
    v4 = result;
    v5[3] = v2;
    v5[4] = sub_1BA221230((unint64_t *)&unk_1ED5B1580, (uint64_t (*)(uint64_t))type metadata accessor for AdsModuleStartupTask, (uint64_t)&unk_1BA2C3AFC);
    v5[0] = v4;
    sub_1BA2C1820();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA21DA04()
{
  sub_1BA2C1784();
  sub_1BA234F20();
  sub_1BA2C1850();
  swift_release();
  return swift_release();
}

unint64_t sub_1BA21DA54(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA236D60(0, &qword_1EF27F038, &qword_1EF27F040, (uint64_t)&type metadata for AdPreviewQueue.AdPreviewWrapper, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
  v2 = (_QWORD *)sub_1BA2C25B8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1BA229E28(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for PPTAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1BA21DBA8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v0 = sub_1BA2C1610();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v3 + 104))(v2, *MEMORY[0x1E0DB57E8]);
  type metadata accessor for Settings.Ads.Debugging.VisualDebugging(0);
  swift_allocObject();
  result = Settings.Ads.Debugging.VisualDebugging.init(key:defaultValue:access:)(0xD000000000000022, 0x80000001BA2D15D0, 0, (uint64_t)v2);
  qword_1ED5B10E8 = result;
  return result;
}

uint64_t type metadata accessor for PrerollAdProviderFactory()
{
  return objc_opt_self();
}

uint64_t sub_1BA21DC78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return v4;
}

uint64_t type metadata accessor for ContextAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1BA21DCF4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  _BYTE v5[24];
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA222948(0, (unint64_t *)&qword_1ED5B3918);
  result = sub_1BA2C176C();
  if (v6)
  {
    v4 = type metadata accessor for AdManager();
    swift_allocObject();
    result = (uint64_t)AdManager.init(previewQueue:)((uint64_t)v5);
    a2[3] = v4;
    a2[4] = (uint64_t)&protocol witness table for AdManager;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for AdPlacementPolicyValidator()
{
  return objc_opt_self();
}

uint64_t sub_1BA21DDBC(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t type metadata accessor for SponsorshipAdProviderFactory()
{
  return objc_opt_self();
}

uint64_t sub_1BA21DE44()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BA2C1AC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for InterstitialAdProviderFactory()
{
  return objc_opt_self();
}

uint64_t sub_1BA21DEE0(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1BA21DF18()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for BannerAdViewStyler()
{
  return objc_opt_self();
}

uint64_t dispatch thunk of AdContextBuilderType.build<A, B, C>(for:build:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a11 + 40))(a1, a2, a3);
}

char *sub_1BA21DFD4@<X0>(uint64_t *a1@<X0>, void (*a2)(_QWORD *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return AdContextBuilder.build<A, B, C>(for:build:)(a1, a2, a3, a4);
}

uint64_t sub_1BA21DFF4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BA21E038@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[5];
  _BYTE v18[24];
  uint64_t v19;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA222948(0, &qword_1ED5B2548);
  result = sub_1BA2C176C();
  if (v19)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v19);
    MEMORY[0x1E0C80A78](v4);
    v6 = (_QWORD *)((char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v7 + 16))(v6);
    v8 = *v6;
    v9 = type metadata accessor for AdStatusConditionReporter();
    v17[3] = v9;
    v17[4] = &off_1E71FF120;
    v17[0] = v8;
    v10 = type metadata accessor for AdStatusConditionManager();
    v11 = (_QWORD *)swift_allocObject();
    v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v9);
    MEMORY[0x1E0C80A78](v12);
    v14 = (_QWORD *)((char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v15 + 16))(v14);
    v16 = *v14;
    v11[5] = v9;
    v11[6] = &off_1E71FF120;
    v11[2] = v16;
    v11[7] = MEMORY[0x1E0DEE9D8];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    a2[3] = v10;
    a2[4] = &protocol witness table for AdStatusConditionManager;
    *a2 = v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA21E1D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];
  uint64_t v11;
  uint64_t v12;

  v0 = sub_1BA2C23CC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BA2C23B4();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1BA2C2060();
  MEMORY[0x1E0C80A78](v6);
  v10[1] = sub_1BA21D258();
  sub_1BA2C203C();
  v12 = MEMORY[0x1E0DEE9D8];
  sub_1BA221230((unint64_t *)&unk_1ED5B2BC0, v5, MEMORY[0x1E0DEF828]);
  sub_1BA22053C(0, &qword_1ED5B2B90, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA234968((unint64_t *)&qword_1ED5B2B98, &qword_1ED5B2B90, v5);
  sub_1BA2C2480();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  v7 = sub_1BA2C23F0();
  v8 = v11;
  *(_QWORD *)(v11 + 16) = v7;
  return v8;
}

uint64_t sub_1BA21E3B0(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  __int128 v5[2];

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for AdContextManager();
  sub_1BA22068C(a1, (uint64_t)v5);
  v3 = swift_allocObject();
  sub_1BA21D3D4(v5, v3 + 16);
  sub_1BA2C1754();
  swift_release();
  return swift_release();
}

uint64_t sub_1BA21E468()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
    type metadata accessor for AdRequest();
  return result;
}

id sub_1BA21E524()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  objc_msgSend(v0, sel_setDateStyle_, 2);
  result = objc_msgSend(v0, sel_setTimeStyle_, 2);
  qword_1ED5B1768 = (uint64_t)v0;
  return result;
}

uint64_t type metadata accessor for ArticleBannerAdProvider()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for AdsModuleStartupTask()
{
  return objc_opt_self();
}

uint64_t sub_1BA21E5C4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1BA234828();
    v4 = sub_1BA2C227C();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA21E640(uint64_t a1, _QWORD *a2)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for DebugCommandHandler();
  result = sub_1BA2C1760();
  if (result)
  {
    swift_getObjectType();
    if (qword_1ED5B2E60 != -1)
      swift_once();
    sub_1BA235FA4();
    sub_1BA2C1F04();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA21E724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _BYTE v13[16];

  v5 = sub_1BA2C161C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_1BA2C1610();
  MEMORY[0x1E0C80A78](v9);
  (*(void (**)(_BYTE *, _QWORD))(v11 + 104))(&v13[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB57E8]);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB5800], v5);
  v13[15] = 1;
  sub_1BA21F7F0(0, &qword_1ED5B1460, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DB5980], MEMORY[0x1E0DB5878]);
  swift_allocObject();
  result = sub_1BA2C1658();
  *a4 = result;
  return result;
}

uint64_t type metadata accessor for DebugCommandHandler()
{
  return objc_opt_self();
}

uint64_t sub_1BA21E88C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  void *v3;
  void *v4;
  _QWORD v5[6];

  v1 = v0;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  sub_1BA2347D4();
  result = sub_1BA2C1760();
  if (result)
  {
    v3 = (void *)result;
    v5[4] = sub_1BA236C28;
    v5[5] = v1;
    v5[0] = MEMORY[0x1E0C809B0];
    v5[1] = 1107296256;
    v5[2] = sub_1BA21DDBC;
    v5[3] = &block_descriptor_0;
    v4 = _Block_copy(v5);
    swift_retain();
    swift_release();
    objc_msgSend(v3, sel_fetchAppConfigurationIfNeededWithCompletion_, v4);
    _Block_release(v4);
    swift_unknownObjectRelease();
    sub_1BA236CA4();
    swift_allocObject();
    return sub_1BA2C197C();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA21E988(uint64_t a1)
{
  return AdPlacementPolicyValidator.addPolicy(_:)(a1);
}

uint64_t sub_1BA21E9A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DB46A0];
  v3 = sub_1BA2C1874();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

void sub_1BA21E9EC()
{
  type metadata accessor for AdRequest();
}

uint64_t sub_1BA21EA84@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[5];
  _BYTE v18[24];
  uint64_t v19;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA224288(0, &qword_1ED5B4378);
  result = sub_1BA2C176C();
  if (v19)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v19);
    MEMORY[0x1E0C80A78](v4);
    v6 = (_QWORD *)((char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v7 + 16))(v6);
    v8 = *v6;
    v9 = type metadata accessor for DebugJournalSummaryViewStyler();
    v17[3] = v9;
    v17[4] = &off_1E71FA8C8;
    v17[0] = v8;
    v10 = type metadata accessor for DebugJournalSummaryViewLayoutAttributesFactory();
    v11 = (_QWORD *)swift_allocObject();
    v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v9);
    MEMORY[0x1E0C80A78](v12);
    v14 = (_QWORD *)((char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v15 + 16))(v14);
    v16 = *v14;
    v11[5] = v9;
    v11[6] = &off_1E71FA8C8;
    v11[2] = v16;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    a2[3] = v10;
    a2[4] = &protocol witness table for DebugJournalSummaryViewLayoutAttributesFactory;
    *a2 = v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA21EC1C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t (*v11)(uint64_t);
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[5];
  _BYTE v27[24];
  uint64_t v28;

  v4 = sub_1BA2C23CC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BA2C23B4();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1BA2C2060();
  MEMORY[0x1E0C80A78](v9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA222948(0, &qword_1ED5B2150);
  result = sub_1BA2C176C();
  if (v28)
  {
    sub_1BA21DEE0(0, (unint64_t *)&qword_1ED5B2BD0);
    sub_1BA2C203C();
    v26[0] = MEMORY[0x1E0DEE9D8];
    v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
    sub_1BA221230((unint64_t *)&unk_1ED5B2BC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
    sub_1BA22053C(0, &qword_1ED5B2B90, v11, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA234898();
    sub_1BA2C2480();
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF8D0], v4);
    v12 = (void *)sub_1BA2C23F0();
    v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v28);
    MEMORY[0x1E0C80A78](v13);
    v15 = (_QWORD *)((char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v16 + 16))(v15);
    v17 = *v15;
    v18 = type metadata accessor for AdSegmentUpdater();
    v26[3] = v18;
    v26[4] = &off_1E71FF4F0;
    v26[0] = v17;
    v19 = type metadata accessor for AdSegmentManager();
    v20 = swift_allocObject();
    v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v18);
    MEMORY[0x1E0C80A78](v21);
    v23 = (_QWORD *)((char *)v26 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v24 + 16))(v23);
    v25 = sub_1BA221550(*v23, v12, v20, 10.0);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    a2[3] = v19;
    a2[4] = (uint64_t)&off_1E71FABF0;
    *a2 = v25;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA21EF5C(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  _BYTE v5[24];
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA222948(0, (unint64_t *)&qword_1ED5B3A48);
  result = sub_1BA2C176C();
  if (v6)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA21DEE0(0, &qword_1ED5B2BD8);
    result = sub_1BA2C1760();
    if (result)
    {
      v3 = result;
      type metadata accessor for AdContextManager();
      v4 = swift_allocObject();
      sub_1BA22068C((uint64_t)v5, v4 + 16);
      *(_QWORD *)(v4 + 56) = v3;
      sub_1BA21FEE8();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA21F050(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  v2 = sub_1BA2C1460();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78]();
  v5 = (char *)&v13[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA235E40();
  result = sub_1BA2C1748();
  v7 = v14;
  if (v14)
  {
    v8 = v15;
    __swift_project_boxed_opaque_existential_1(v13, v14);
    sub_1BA2C1454();
    v9 = sub_1BA2C143C();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 24))(0x656E656353, 0xE500000000000000, v9, v11, v7, v8);
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA21F194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1BA2C18E0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78]();
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA2C1784();
  sub_1BA2360DC();
  sub_1BA2C1850();
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB4A18], v0);
  sub_1BA2C16D0();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t type metadata accessor for PrerollAdProvider()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for AdPolicyLayoutEnvironmentProvider()
{
  return objc_opt_self();
}

uint64_t sub_1BA21F2B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1BA2C18E0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78]();
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA2C1784();
  sub_1BA235958();
  sub_1BA2C1850();
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB4A18], v0);
  sub_1BA2C16D0();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1BA21F39C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for InterstitialAdProvider()
{
  return objc_opt_self();
}

double sub_1BA21F40C@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  sub_1BA2C170C();
  MEMORY[0x1E0C80A78]();
  v2 = type metadata accessor for AdContextBuilder();
  v3 = swift_allocObject();
  sub_1BA2C1700();
  sub_1BA2C1724();
  swift_allocObject();
  *(_QWORD *)(v3 + 40) = sub_1BA2C1718();
  *(_QWORD *)(v3 + 48) = sub_1BA2340BC(MEMORY[0x1E0DEE9D8]);
  result = 0.0;
  *(_OWORD *)(v3 + 16) = xmmword_1BA2C8A30;
  *(_QWORD *)(v3 + 32) = 0xE400000000000000;
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for AdContextBuilder;
  *a1 = v3;
  return result;
}

uint64_t sub_1BA21F4E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD v6[4];

  v0 = sub_1BA2C1778();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78]();
  v3 = (char *)&v6[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA2C179C();
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_1BA236C54();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB36E0], v0);
  sub_1BA2C1868();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  sub_1BA2C1790();
  sub_1BA2C1838();
  return swift_release();
}

uint64_t sub_1BA21F604()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FeedBannerAdProvider()
{
  return objc_opt_self();
}

uint64_t sub_1BA21F680(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _DWORD v15[2];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v15[1] = a3;
  v8 = sub_1BA2C1610();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a5;
  sub_1BA21F7F0(0, &qword_1ED5B1270, MEMORY[0x1E0DEB418], MEMORY[0x1E0DB59B8], MEMORY[0x1E0DB5878]);
  v17 = 0;
  v18 = 3;
  v16 = 1000;
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB57E8], v8);
  swift_retain();
  *(_QWORD *)(v5 + v12) = sub_1BA2C164C();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a4, v8);
  v13 = sub_1BA2C1520();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a4, v8);
  return v13;
}

void sub_1BA21F7F0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v6 = a5(0, a3, a4);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t type metadata accessor for Ads()
{
  return objc_opt_self();
}

uint64_t sub_1BA21F858()
{
  return swift_initClassMetadata2();
}

uint64_t Settings.Ads.Debugging.VisualDebugging.init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  char v24;
  char v25;
  char v26;

  v5 = v4;
  v20 = a4;
  v21 = a1;
  v23 = a3;
  v22 = a2;
  v19 = sub_1BA2C161C();
  v17 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BA2C1610();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = qword_1ED5B10A8;
  sub_1BA236F78(0, &qword_1ED5B1250, (uint64_t (*)(void))sub_1BA2370F0, (uint64_t)&type metadata for Settings.Ads.Debugging.VisualDebugging.Mode, MEMORY[0x1E0DB5878]);
  v16 = v12;
  v26 = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB57E8], v8);
  sub_1BA234760(0, &qword_1ED5B13B8, &qword_1ED5B1238, (uint64_t)&type metadata for Settings.Ads.Debugging.VisualDebugging.Mode);
  sub_1BA22920C(0, &qword_1ED5B1238, (uint64_t)&type metadata for Settings.Ads.Debugging.VisualDebugging.Mode, MEMORY[0x1E0DB5820]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BA2C37C0;
  v25 = 0;
  swift_retain();
  sub_1BA2C1628();
  v24 = 1;
  sub_1BA2C1628();
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v7, *MEMORY[0x1E0DB5800], v19);
  sub_1BA237134();
  *(_QWORD *)(v5 + v18) = sub_1BA2C1634();
  swift_release();
  v13 = v20;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v20, v8);
  v14 = sub_1BA2C1520();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v8);
  return v14;
}

_QWORD *AdManager.init(previewQueue:)(uint64_t a1)
{
  _QWORD *v1;
  __int128 v4;
  uint64_t v5;
  _UNKNOWN **v6;

  if (qword_1ED5B2D20 != -1)
    swift_once();
  sub_1BA236FD4();
  swift_allocObject();
  swift_retain();
  v1[2] = sub_1BA2C158C();
  v1[13] = sub_1BA2349C0(MEMORY[0x1E0DEE9D8]);
  sub_1BA236E4C();
  swift_allocObject();
  v1[14] = sub_1BA2C18B0();
  swift_allocObject();
  v1[15] = sub_1BA2C18B0();
  sub_1BA22068C(a1, (uint64_t)(v1 + 3));
  v5 = type metadata accessor for PromotedContentContextFactory();
  v6 = &off_1E71FDBF8;
  *(_QWORD *)&v4 = swift_allocObject();
  __swift_destroy_boxed_opaque_existential_1(a1);
  sub_1BA21D3D4(&v4, (uint64_t)(v1 + 8));
  return v1;
}

uint64_t sub_1BA21FC70(unint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = (_QWORD *)result;
    if (!a1)
    {
      v16 = MEMORY[0x1E0DEE9D8];
LABEL_22:
      v17 = v3[5];
      v18 = v3[6];
      __swift_project_boxed_opaque_existential_1(v3 + 2, v17);
      v21 = v16;
      v19 = sub_1BA236A3C();
      AdContextBuilderType.pushData<A>(_:)((uint64_t)&v21, v17, (uint64_t)&type metadata for UserAdData, v18, v19);
      swift_bridgeObjectRelease();
      return swift_release();
    }
    v20 = (_QWORD *)result;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain_n();
      result = sub_1BA2C2594();
      v4 = result;
      if (result)
        goto LABEL_5;
    }
    else
    {
      v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain_n();
      if (v4)
      {
LABEL_5:
        if (v4 < 1)
        {
          __break(1u);
          return result;
        }
        v5 = 0;
        v6 = (char *)MEMORY[0x1E0DEE9D8];
        do
        {
          if ((a1 & 0xC000000000000001) != 0)
          {
            v7 = (void *)MEMORY[0x1BCCD8C98](v5, a1);
          }
          else
          {
            v7 = *(void **)(a1 + 8 * v5 + 32);
            swift_unknownObjectRetain();
          }
          v8 = objc_msgSend(v7, sel_language, v20);
          if (v8)
          {
            v9 = v8;
            v10 = sub_1BA2C2150();
            v12 = v11;
            swift_unknownObjectRelease();

            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v6 = sub_1BA22C18C(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
            v14 = *((_QWORD *)v6 + 2);
            v13 = *((_QWORD *)v6 + 3);
            if (v14 >= v13 >> 1)
              v6 = sub_1BA22C18C((char *)(v13 > 1), v14 + 1, 1, v6);
            *((_QWORD *)v6 + 2) = v14 + 1;
            v15 = &v6[16 * v14];
            *((_QWORD *)v15 + 4) = v10;
            *((_QWORD *)v15 + 5) = v12;
          }
          else
          {
            swift_unknownObjectRelease();
          }
          ++v5;
        }
        while (v4 != v5);
        goto LABEL_21;
      }
    }
    v6 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_21:
    swift_bridgeObjectRelease_n();
    v21 = (uint64_t)v6;
    sub_1BA234914();
    sub_1BA226F18();
    v16 = sub_1BA2C21E0();
    swift_bridgeObjectRelease();
    v3 = v20;
    goto LABEL_22;
  }
  return result;
}

void sub_1BA21FEE8()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  _QWORD v10[6];

  v1 = v0;
  v2 = v0 + 2;
  v3 = v0[5];
  v4 = v0[6];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  v10[0] = MEMORY[0x1E0DEE9D8];
  v5 = sub_1BA236A3C();
  AdContextBuilderType.pushData<A>(_:)((uint64_t)v10, v3, (uint64_t)&type metadata for UserAdData, v4, v5);
  v6 = (void *)v1[7];
  sub_1BA21D258();
  v7 = (void *)sub_1BA2C23D8();
  v8 = swift_allocObject();
  swift_weakInit();
  v10[4] = sub_1BA236380;
  v10[5] = v8;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_1BA21E5C4;
  v10[3] = &block_descriptor_6;
  v9 = _Block_copy(v10);
  swift_release();
  objc_msgSend(v6, sel_fetchSubscribedTagsWithCallbackQueue_preferCache_completion_, v7, 1, v9);
  _Block_release(v9);

}

uint64_t sub_1BA220008()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1BA2C2150();

  }
  sub_1BA21D550();
  result = sub_1BA2C2450();
  qword_1ED5B2888 = result;
  return result;
}

void BannerAdViewManager.onUpdate(_:)()
{
  type metadata accessor for DisposableObserver();
}

uint64_t sub_1BA220120(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v6;

  v6 = sub_1BA21DC78(v3, v2);
  swift_beginAccess();
  sub_1BA2C22F4();
  swift_retain();
  swift_retain();
  sub_1BA2C22DC();
  swift_endAccess();
  v1[3] = a1;
  result = MEMORY[0x1BCCD93D0](&unk_1BA2CB208, a1);
  v1[4] = result;
  *v1 = v6;
  return result;
}

uint64_t sub_1BA2201C0()
{
  return swift_initClassMetadata2();
}

unint64_t destroy for DebugJournal.Summary(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1BA22C4F0(*(_QWORD *)(a1 + 32));
}

uint64_t sub_1BA220234()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t DebugJournal.summary.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v1[2];
  v3 = v1[3];
  v5 = v1[4];
  v4 = v1[5];
  v6 = v1[6];
  v7 = v1[7];
  v9 = v1[8];
  v8 = v1[9];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v9;
  a1[7] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BA22C6F4(v6);
}

_QWORD *AdPlacementPolicyValidator.init(layoutEnvironmentProvider:viewportEnvironmentProvider:)(__int128 *a1, __int128 *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  __int128 *v12;
  __int128 *v13;
  uint64_t v14;

  v12 = a1;
  v13 = a2;
  v3 = sub_1BA2C23CC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BA2C23B4();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1BA2C2060();
  MEMORY[0x1E0C80A78](v8);
  v9 = MEMORY[0x1E0DEE9D8];
  v2[12] = MEMORY[0x1E0DEE9D8];
  v14 = v9;
  sub_1BA22053C(0, &qword_1ED5B1498, (uint64_t (*)(uint64_t))sub_1BA23487C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4AE8]);
  swift_allocObject();
  v2[13] = sub_1BA2C1904();
  sub_1BA21D258();
  sub_1BA2C2054();
  v14 = v9;
  sub_1BA223FC4((unint64_t *)&unk_1ED5B2BC0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  sub_1BA2348F8(0);
  sub_1BA223FC4((unint64_t *)&qword_1ED5B2B98, 255, (uint64_t (*)(uint64_t))sub_1BA2348F8, MEMORY[0x1E0DEAF38]);
  sub_1BA2C2480();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF8D0], v3);
  v2[14] = sub_1BA2C23F0();
  sub_1BA21D3D4(v12, (uint64_t)(v2 + 2));
  sub_1BA21D3D4(v13, (uint64_t)(v2 + 7));
  return v2;
}

void sub_1BA22053C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

__n128 BannerAd.init(placementIdentifier:state:journal:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X8>)
{
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __int128 v11;

  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  sub_1BA2205FC(a3, a5 + 16);
  v7 = a4[4];
  *(_OWORD *)(a5 + 184) = a4[5];
  v8 = a4[7];
  *(_OWORD *)(a5 + 200) = a4[6];
  *(_OWORD *)(a5 + 216) = v8;
  *(_OWORD *)(a5 + 232) = a4[8];
  v9 = *a4;
  *(_OWORD *)(a5 + 120) = a4[1];
  result = (__n128)a4[2];
  v11 = a4[3];
  *(__n128 *)(a5 + 136) = result;
  *(_OWORD *)(a5 + 152) = v11;
  *(_OWORD *)(a5 + 168) = v7;
  *(_OWORD *)(a5 + 104) = v9;
  return result;
}

uint64_t sub_1BA2205FC(uint64_t a1, uint64_t a2)
{
  __swift_memcpy81_8(a2, a1);
  return a2;
}

uint64_t sub_1BA220638(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v3;
  __int128 v5[2];

  sub_1BA22068C(a1, (uint64_t)v5);
  a2(0);
  v3 = swift_allocObject();
  sub_1BA21D3D4(v5, v3 + 16);
  return v3;
}

uint64_t sub_1BA22068C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t AdPolicyLayoutEnvironmentProvider.environment.setter()
{
  swift_retain();
  sub_1BA2C1928();
  return swift_release();
}

uint64_t sub_1BA220714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void (*v4)(char *, _QWORD, uint64_t);
  void (*v5)(char *, uint64_t);
  uint64_t v7;

  v0 = sub_1BA2C18E0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78]();
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA2C1784();
  sub_1BA235E40();
  sub_1BA2C1850();
  swift_release();
  v4 = *(void (**)(char *, _QWORD, uint64_t))(v1 + 104);
  v4(v3, *MEMORY[0x1E0DB4A00], v0);
  sub_1BA2C16D0();
  swift_release();
  swift_release();
  v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  sub_1BA2C1784();
  sub_1BA2C1850();
  swift_release();
  v4(v3, *MEMORY[0x1E0DB4A18], v0);
  sub_1BA2C16D0();
  swift_release();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v5)(v3, v0);
}

NewsAds::AdPolicyLayoutEnvironment __swiftcall AdPolicyLayoutEnvironment.init()()
{
  NewsAds::AdPolicyLayoutEnvironment *v0;
  NewsAds::AdPolicyLayoutEnvironment *v1;
  NewsAds::AdPolicyLayoutEnvironment result;

  v1 = v0;
  result.content._rawValue = (void *)sub_1BA2662C8(MEMORY[0x1E0DEE9D8]);
  v1->content._rawValue = result.content._rawValue;
  return result;
}

uint64_t AdContextBuilderType.pushData<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[2];
  char v7;

  v6[0] = 0;
  v6[1] = 0;
  v7 = -1;
  return (*(uint64_t (**)(uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 32))(a1, v6, a3, a5, a2, a4);
}

uint64_t sub_1BA2208EC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return AdContextBuilder.pushData<A>(_:namespace:)(a1, a2, a3);
}

uint64_t AdContextBuilder.__deallocating_deinit()
{
  AdContextBuilder.deinit();
  return swift_deallocClassInstance();
}

uint64_t AdContextBuilder.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 16) = 0;
  if (v1)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native())
        break;
      v2 = *(_QWORD *)(v1 + 16);
      swift_retain();
      swift_release();
      v1 = v2;
    }
    while (v2);
  }
  swift_release();
  return v0;
}

uint64_t type metadata accessor for BannerAdViewLayoutAttributesFactory()
{
  return objc_opt_self();
}

uint64_t sub_1BA2209C4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BA2C1424();
  if (v1 <= 0x3F)
    type metadata accessor for AdRequest();
  return result;
}

uint64_t FeedBannerAdPlacement.init(placementIdentifier:boundingSize:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  int *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  double *v19;

  v10 = (int *)type metadata accessor for FeedBannerAdPlacement();
  v11 = (_QWORD *)((char *)a3 + v10[5]);
  sub_1BA220BB8();
  v13 = (char *)v11 + *(int *)(v12 + 48);
  *v11 = 1;
  v14 = *MEMORY[0x1E0D81B90];
  v15 = sub_1BA2C1A54();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v13, v14, v15);
  v16 = *MEMORY[0x1E0D81E88];
  v17 = sub_1BA2C1AC0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v11, v16, v17);
  *((_BYTE *)a3 + v10[7]) = 0;
  *a3 = a1;
  a3[1] = a2;
  v19 = (double *)((char *)a3 + v10[6]);
  *v19 = a4;
  v19[1] = a5;
  return result;
}

uint64_t type metadata accessor for FeedBannerAdPlacement()
{
  uint64_t result;

  result = qword_1ED5B3B00;
  if (!qword_1ED5B3B00)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BA220BB8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED5B2BB0)
  {
    sub_1BA2C1A54();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED5B2BB0);
  }
}

_QWORD *sub_1BA220C20(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unsigned int v16;
  uint64_t v18;
  id v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  unint64_t v26;
  unint64_t v27;
  void (*v28)(unint64_t, unint64_t, uint64_t);
  _QWORD *v29;
  _QWORD *v30;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;

  v6 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80) & 0xF8;
  v9 = v8 | 7;
  v10 = *(_QWORD *)(v7 + 64) + 7;
  v11 = *(_QWORD *)(v5 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64) + 7;
  v14 = (v13 + (((v10 & 0xFFFFFFFFFFFFFFF8) + 8 + v12 + ((v8 + 23) & ~(v8 | 7))) & ~v12)) & 0xFFFFFFFFFFFFFFF8;
  if (((v14 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 <= 0x10)
    v15 = 16;
  else
    v15 = ((v14 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  v16 = *((unsigned __int8 *)a2 + v15);
  if (v16 >= 2 && (v15 & 0xFFFFFFF8) != 0)
    v16 = *(_DWORD *)a2 + 2;
  if (v16 == 1)
  {
    v18 = *a2;
    v19 = (id)*a2;
    v20 = a2[1];
    *a1 = v18;
    a1[1] = v20;
    v21 = 1;
  }
  else
  {
    v34 = v14 + 16;
    v22 = a2[1];
    *a1 = *a2;
    a1[1] = v22;
    v35 = v15;
    v23 = ((unint64_t)a1 + v9 + 16) & ~v9;
    v24 = ((unint64_t)a2 + v9 + 16) & ~v9;
    v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v32 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    v33 = v5;
    swift_bridgeObjectRetain();
    v25(v23, v24, v6);
    *(_QWORD *)((v10 + v23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v10 + v24) & 0xFFFFFFFFFFFFF8);
    v26 = (v23 + v32 + v12) & ~v12;
    v27 = (v24 + v32 + v12) & ~v12;
    v28 = *(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16);
    swift_bridgeObjectRetain();
    v28(v26, v27, v33);
    v29 = (_QWORD *)((v13 + v26) & 0xFFFFFFFFFFFFFFF8);
    v30 = (_QWORD *)((v13 + v27) & 0xFFFFFFFFFFFFFFF8);
    *v29 = *v30;
    v29[1] = v30[1];
    v15 = v35;
    *(_QWORD *)(((unint64_t)a1 + v34 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v34 + 7) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    v21 = 0;
  }
  swift_retain();
  *((_BYTE *)a1 + v15) = v21;
  return a1;
}

uint64_t sub_1BA220E08(id *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v17;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_DWORD *)(v4 + 80) & 0xF8;
  v6 = v5 | 7;
  v7 = ((*(_QWORD *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v8 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + 7 + ((v7 + v9 + ((v5 + 23) & ~(v5 | 7))) & ~v9)) & 0xFFFFFFFFFFFFFFF8;
  v11 = 16;
  if (((v10 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x10)
    v11 = ((v10 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  v12 = *((unsigned __int8 *)a1 + v11);
  v13 = v11 & 0xFFFFFFF8;
  if (v12 >= 2 && v13 != 0)
    v12 = *(_DWORD *)a1 + 2;
  if (v12 == 1)
  {

  }
  else
  {
    v17 = *(_QWORD *)(a2 + 24);
    swift_bridgeObjectRelease();
    v15 = ((unint64_t)a1 + v6 + 16) & ~v6;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v15, v3);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))((v15 + v7 + v9) & ~v9, v17);
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

id Assembly.init()()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  objc_super v21;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = OBJC_IVAR___NMAssembly_assemblies;
  sub_1BA23470C();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BA2C4550;
  v4 = type metadata accessor for ContextAssembly();
  v5 = swift_allocObject();
  *(_QWORD *)(v3 + 56) = v4;
  *(_QWORD *)(v3 + 64) = sub_1BA221230(&qword_1ED5B4940, (uint64_t (*)(uint64_t))type metadata accessor for ContextAssembly, (uint64_t)&unk_1BA2C8A50);
  *(_QWORD *)(v3 + 32) = v5;
  v6 = type metadata accessor for CommandAssembly();
  v7 = swift_allocObject();
  *(_QWORD *)(v3 + 96) = v6;
  *(_QWORD *)(v3 + 104) = sub_1BA221230(&qword_1ED5B4910, (uint64_t (*)(uint64_t))type metadata accessor for CommandAssembly, (uint64_t)&unk_1BA2CA198);
  *(_QWORD *)(v3 + 72) = v7;
  v8 = type metadata accessor for ManagerAssembly();
  v9 = swift_allocObject();
  *(_QWORD *)(v3 + 136) = v8;
  *(_QWORD *)(v3 + 144) = sub_1BA221230(&qword_1ED5B4970, (uint64_t (*)(uint64_t))type metadata accessor for ManagerAssembly, (uint64_t)&unk_1BA2CA8C0);
  *(_QWORD *)(v3 + 112) = v9;
  v10 = type metadata accessor for PPTAssembly();
  v11 = swift_allocObject();
  *(_QWORD *)(v3 + 176) = v10;
  *(_QWORD *)(v3 + 184) = sub_1BA221230(&qword_1ED5B48B0, (uint64_t (*)(uint64_t))type metadata accessor for PPTAssembly, (uint64_t)&unk_1BA2C5B28);
  *(_QWORD *)(v3 + 152) = v11;
  v12 = type metadata accessor for PreviewAssembly();
  v13 = swift_allocObject();
  *(_QWORD *)(v3 + 216) = v12;
  *(_QWORD *)(v3 + 224) = sub_1BA221230(&qword_1ED5B49A0, (uint64_t (*)(uint64_t))type metadata accessor for PreviewAssembly, (uint64_t)&unk_1BA2C8600);
  *(_QWORD *)(v3 + 192) = v13;
  v14 = type metadata accessor for ProviderAssembly();
  v15 = swift_allocObject();
  *(_QWORD *)(v3 + 256) = v14;
  *(_QWORD *)(v3 + 264) = sub_1BA221230(&qword_1ED5B49D0, (uint64_t (*)(uint64_t))type metadata accessor for ProviderAssembly, (uint64_t)&unk_1BA2CCD34);
  *(_QWORD *)(v3 + 232) = v15;
  v16 = type metadata accessor for RendererAssembly();
  v17 = swift_allocObject();
  *(_QWORD *)(v3 + 296) = v16;
  *(_QWORD *)(v3 + 304) = sub_1BA221230(&qword_1ED5B4A00, (uint64_t (*)(uint64_t))type metadata accessor for RendererAssembly, (uint64_t)&unk_1BA2C5AF4);
  *(_QWORD *)(v3 + 272) = v17;
  v18 = type metadata accessor for StoreAssembly();
  v19 = swift_allocObject();
  *(_QWORD *)(v3 + 336) = v18;
  *(_QWORD *)(v3 + 344) = sub_1BA221230(&qword_1ED5B48E0, (uint64_t (*)(uint64_t))type metadata accessor for StoreAssembly, (uint64_t)&unk_1BA2C5DBC);
  *(_QWORD *)(v3 + 312) = v19;
  *(_QWORD *)&v0[v2] = v3;
  v21.receiver = v0;
  v21.super_class = ObjectType;
  return objc_msgSendSuper2(&v21, sel_init);
}

uint64_t sub_1BA221230(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1BCCD93D0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FeedBannerAdPlacement.placementIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DebugJournal.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BA2212C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;
  unint64_t v6;

  result = type metadata accessor for AdContext(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 32), a4);
  if (v5 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v6 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t destroy for FeedGroupAdData.Article()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void Journal.addProcessor<A>(_:)(uint64_t a1)
{
  MEMORY[0x1E0C80A78](a1);
  type metadata accessor for AnyProcessor();
}

uint64_t sub_1BA221414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v2, v1);
  swift_allocObject();
  *(_QWORD *)(v5 - 104) = sub_1BA2214AC(v3, v1, v0);
  swift_beginAccess();
  sub_1BA2C22F4();
  sub_1BA2C22DC();
  return swift_endAccess();
}

uint64_t *sub_1BA2214AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;

  v7 = *v3;
  v8 = *(_QWORD *)(a2 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (char *)swift_allocObject();
  *((_QWORD *)v10 + 2) = *(_QWORD *)(v7 + 80);
  *((_QWORD *)v10 + 3) = *(_QWORD *)(v7 + 88);
  *((_QWORD *)v10 + 4) = a2;
  *((_QWORD *)v10 + 5) = a3;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(&v10[v9], a1, a2);
  v3[2] = (uint64_t)sub_1BA22D768;
  v3[3] = (uint64_t)v10;
  return v3;
}

uint64_t sub_1BA221550(uint64_t a1, void *a2, uint64_t a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  id v40;
  _QWORD *v41;
  _QWORD v42[5];

  v8 = sub_1BA2C170C();
  MEMORY[0x1E0C80A78](v8);
  v42[3] = type metadata accessor for AdSegmentUpdater();
  v42[4] = &off_1E71FF4F0;
  v42[0] = a1;
  v9 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a3 + 56) = sub_1BA234B14(MEMORY[0x1E0DEE9D8]);
  sub_1BA2C1700();
  sub_1BA2C1724();
  swift_allocObject();
  *(_QWORD *)(a3 + 64) = sub_1BA2C1718();
  *(_QWORD *)(a3 + 72) = sub_1BA221E88(v9);
  *(_QWORD *)(a3 + 80) = 0;
  sub_1BA22068C((uint64_t)v42, a3 + 16);
  *(double *)(a3 + 88) = a4;
  *(_QWORD *)(a3 + 96) = a2;
  v40 = a2;
  v10 = (_QWORD *)sub_1BA221E88(v9);
  sub_1BA236DDC(0, &qword_1ED5B1488, (unint64_t *)&qword_1ED5B2B70, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DB49C0]);
  v12 = v11;
  v13 = 0;
  swift_allocObject();
  v14 = sub_1BA2C18B0();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v41 = v10;
  v17 = sub_1BA221910(0);
  v18 = v10[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
    goto LABEL_20;
  v21 = v16;
  if (v10[3] < v20)
  {
    sub_1BA221ADC(v20, isUniquelyReferenced_nonNull_native);
    v22 = sub_1BA221910(0);
    if ((v21 & 1) != (v23 & 1))
      goto LABEL_26;
    v17 = v22;
    if ((v21 & 1) == 0)
      goto LABEL_10;
LABEL_8:
    v24 = v10[7];
    swift_release();
    *(_QWORD *)(v24 + 8 * v17) = v14;
    goto LABEL_12;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    if ((v16 & 1) != 0)
      goto LABEL_8;
  }
  else
  {
    sub_1BA2A24B8();
    if ((v21 & 1) != 0)
      goto LABEL_8;
  }
LABEL_10:
  v10[(v17 >> 6) + 8] |= 1 << v17;
  *(_BYTE *)(v10[6] + v17) = 0;
  *(_QWORD *)(v10[7] + 8 * v17) = v14;
  v25 = v10[2];
  v26 = __OFADD__(v25, 1);
  v27 = v25 + 1;
  if (v26)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v10[2] = v27;
LABEL_12:
  swift_bridgeObjectRelease();
  v13 = 1;
  swift_allocObject();
  v12 = sub_1BA2C18B0();
  v28 = swift_isUniquelyReferenced_nonNull_native();
  v41 = v10;
  v14 = sub_1BA221910(1);
  v30 = v10[2];
  v31 = (v29 & 1) == 0;
  v32 = v30 + v31;
  if (__OFADD__(v30, v31))
  {
LABEL_20:
    __break(1u);
LABEL_21:
    sub_1BA2A24B8();
    v35 = v41;
    if ((v17 & 1) == 0)
      goto LABEL_22;
    goto LABEL_19;
  }
  LOBYTE(v17) = v29;
  if (v10[3] >= v32)
  {
    if ((v28 & 1) != 0)
    {
      v35 = v10;
      if ((v29 & 1) == 0)
        goto LABEL_22;
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  sub_1BA221ADC(v32, v28);
  v33 = sub_1BA221910(1);
  if ((v17 & 1) == (v34 & 1))
  {
    v14 = v33;
    v35 = v10;
    if ((v17 & 1) == 0)
    {
LABEL_22:
      v35[(v14 >> 6) + 8] |= 1 << v14;
      *(_BYTE *)(v35[6] + v14) = v13;
      *(_QWORD *)(v35[7] + 8 * v14) = v12;
      v37 = v35[2];
      v26 = __OFADD__(v37, 1);
      v38 = v37 + 1;
      if (!v26)
      {
        v35[2] = v38;
        goto LABEL_24;
      }
      goto LABEL_25;
    }
LABEL_19:
    v36 = v35[7];
    swift_release();
    *(_QWORD *)(v36 + 8 * v14) = v12;
LABEL_24:
    swift_bridgeObjectRelease();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
    swift_beginAccess();
    *(_QWORD *)(a3 + 72) = v35;
    swift_bridgeObjectRelease();
    return a3;
  }
LABEL_26:
  result = sub_1BA2C26D8();
  __break(1u);
  return result;
}

unint64_t sub_1BA221910(char a1)
{
  uint64_t v2;

  sub_1BA2C2720();
  sub_1BA2C21A4();
  swift_bridgeObjectRelease();
  v2 = sub_1BA2C2738();
  return sub_1BA2219A0(a1 & 1, v2);
}

unint64_t sub_1BA2219A0(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v11;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    if ((a1 & 1) != 0)
      v6 = 0x63696C627570;
    else
      v6 = 0x65746176697270;
    if ((a1 & 1) != 0)
      v7 = 0xE600000000000000;
    else
      v7 = 0xE700000000000000;
    while (1)
    {
      v8 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0x63696C627570 : 0x65746176697270;
      v9 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0xE600000000000000 : 0xE700000000000000;
      if (v8 == v6 && v9 == v7)
        break;
      v11 = sub_1BA2C26A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

uint64_t sub_1BA221ADC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  uint64_t v34;

  v3 = v2;
  v5 = *v2;
  sub_1BA221E00();
  v6 = a2;
  v7 = sub_1BA2C25AC();
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v34 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v32 = v2;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v19 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_31;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v33)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v34 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v33)
        goto LABEL_33;
      v23 = *(_QWORD *)(v34 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v33)
        {
LABEL_33:
          swift_release();
          v3 = v32;
          if ((v6 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v34 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v14 >= v33)
              goto LABEL_33;
            v23 = *(_QWORD *)(v34 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v14 = v24;
      }
    }
LABEL_30:
    v11 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_31:
    v29 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v20);
    v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v6 & 1) == 0)
      swift_retain();
    sub_1BA2C2720();
    sub_1BA2C21A4();
    swift_bridgeObjectRelease();
    result = sub_1BA2C2738();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v17 == v26;
        if (v17 == v26)
          v17 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v28 == -1);
      v18 = __clz(__rbit64(~v28)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_BYTE *)(*(_QWORD *)(v8 + 48) + v18) = v29;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v30;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v3 = v32;
  v22 = (_QWORD *)(v5 + 64);
  if ((v6 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v31 = 1 << *(_BYTE *)(v5 + 32);
  if (v31 >= 64)
    bzero(v22, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v31;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v8;
  return result;
}

void sub_1BA221E00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B2C28)
  {
    sub_1BA236D60(255, &qword_1ED5B1488, (unint64_t *)&qword_1ED5B2B70, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DB49C0]);
    sub_1BA236854();
    v0 = sub_1BA2C25C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B2C28);
  }
}

unint64_t sub_1BA221E88(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  char v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA221E00();
  v2 = (_QWORD *)sub_1BA2C25B8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_QWORD *)(a1 + 40);
  while (1)
  {
    v5 = *((_BYTE *)v4 - 8);
    v6 = *v4;
    swift_retain();
    result = sub_1BA221910(v5);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v2[6] + result) = v5;
    *(_QWORD *)(v2[7] + 8 * result) = v6;
    v9 = v2[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      goto LABEL_11;
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void Journal.init()()
{
  type metadata accessor for AnyProcessor();
}

void sub_1BA221FC0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = sub_1BA2C20B4();
  type metadata accessor for JournalEntry();
}

uint64_t sub_1BA221FDC()
{
  uint64_t v0;

  sub_1BA2C22F4();
  sub_1BA2C18BC();
  *(_QWORD *)(v0 + 24) = sub_1BA2C18A4();
  return v0;
}

uint64_t sub_1BA22202C(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t result;
  float v7;
  float v8;
  double v9;
  double v10;
  float v11;
  float v12;
  double v13;
  double v14;
  float v15;
  float v16;
  double v17;
  double v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  id v42;
  __int128 v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  void *v59;
  __int128 v60;
  uint64_t v61;
  _QWORD v62[3];
  uint64_t v63;
  uint64_t v64;

  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v5 = (id)qword_1ED5B2888;
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  __swift_project_boxed_opaque_existential_1((_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 40));
  sub_1BA222948(0, &qword_1ED5B3A50);
  result = sub_1BA2C176C();
  if (!v63)
  {
    __break(1u);
    goto LABEL_31;
  }
  sub_1BA2228A4((uint64_t)v62, &qword_1ED5B2148, &qword_1ED5B3A50, (uint64_t)&protocol descriptor for AdSegmentManagerType);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 40));
  sub_1BA222948(0, &qword_1ED5B4160);
  result = sub_1BA2C176C();
  if (!v63)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  sub_1BA2228A4((uint64_t)v62, &qword_1ED5B2508, &qword_1ED5B4160, (uint64_t)&protocol descriptor for AdStatusConditionManagerType);
  if (a1)
  {
    v7 = 1.0;
    v8 = 1.0;
    if ((objc_msgSend(a1, sel_respondsToSelector_, sel_feedBannerAdRequestThrottle) & 1) != 0)
    {
      objc_msgSend(a1, sel_feedBannerAdRequestThrottle);
      v8 = v9;
    }
    if ((objc_msgSend(a1, sel_respondsToSelector_, sel_articleBannerAdRequestThrottle) & 1) != 0)
    {
      objc_msgSend(a1, sel_articleBannerAdRequestThrottle);
      v7 = v10;
    }
    v11 = 1.0;
    v12 = 1.0;
    if ((objc_msgSend(a1, sel_respondsToSelector_, sel_interstitialAdRequestThrottle) & 1) != 0)
    {
      objc_msgSend(a1, sel_interstitialAdRequestThrottle);
      v12 = v13;
    }
    if ((objc_msgSend(a1, sel_respondsToSelector_, sel_prerollAdRequestThrottle) & 1) != 0)
    {
      objc_msgSend(a1, sel_prerollAdRequestThrottle);
      v11 = v14;
    }
    v15 = 1.0;
    v16 = 1.0;
    if ((objc_msgSend(a1, sel_respondsToSelector_, sel_nativeInFeedAdRequestThrottle) & 1) != 0)
    {
      objc_msgSend(a1, sel_nativeInFeedAdRequestThrottle);
      v16 = v17;
    }
    if ((objc_msgSend(a1, sel_respondsToSelector_, sel_nativeInArticleAdRequestThrottle) & 1) != 0)
    {
      objc_msgSend(a1, sel_nativeInArticleAdRequestThrottle);
      v15 = v18;
    }
  }
  else
  {
    v15 = 1.0;
    v8 = 1.0;
    v7 = 1.0;
    v12 = 1.0;
    v11 = 1.0;
    v16 = 1.0;
  }
  v19 = (void *)qword_1ED5B2888;
  sub_1BA2228E8(0, (unint64_t *)&qword_1ED5B2CC0, (unint64_t *)&qword_1ED5B2CD8, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1BA2C39C0;
  v21 = MEMORY[0x1E0DEB188];
  v22 = MEMORY[0x1E0DEB1E8];
  *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEB188];
  *(_QWORD *)(v20 + 64) = v22;
  *(float *)(v20 + 32) = v8;
  *(_QWORD *)(v20 + 96) = v21;
  *(_QWORD *)(v20 + 104) = v22;
  *(float *)(v20 + 72) = v7;
  *(_QWORD *)(v20 + 136) = v21;
  *(_QWORD *)(v20 + 144) = v22;
  *(float *)(v20 + 112) = v12;
  *(_QWORD *)(v20 + 176) = v21;
  *(_QWORD *)(v20 + 184) = v22;
  *(float *)(v20 + 152) = v11;
  *(_QWORD *)(v20 + 216) = v21;
  *(_QWORD *)(v20 + 224) = v22;
  *(float *)(v20 + 192) = v16;
  *(_QWORD *)(v20 + 256) = v21;
  *(_QWORD *)(v20 + 264) = v22;
  *(float *)(v20 + 232) = v15;
  v23 = v19;
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  v24 = (void *)objc_opt_self();
  *(float *)&v25 = v8;
  *(float *)&v26 = v7;
  *(float *)&v27 = v12;
  *(float *)&v28 = v11;
  *(float *)&v29 = v16;
  *(float *)&v30 = v15;
  objc_msgSend(v24, sel_rateLimitRequestsInFeed_inArticle_betweenArticle_videoInArticle_nativeInFeed_nativeInArticle_, v25, v26, v27, v28, v29, v30);
  v31 = sub_1BA21CCA8(a3, a1);
  v32 = (void *)qword_1ED5B2888;
  v33 = swift_allocObject();
  v34 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v33 + 16) = xmmword_1BA2C37D0;
  v35 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v33 + 56) = v34;
  *(_QWORD *)(v33 + 64) = v35;
  *(_QWORD *)(v33 + 32) = v31;
  v36 = v32;
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  objc_msgSend(v24, sel_setContextPrefetchLimit_, v31);
  if (*(_BYTE *)(a3 + 56) != 1)
  {
LABEL_29:
    sub_1BA2C1DFC();
    return sub_1BA2C1DF0();
  }
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 40));
  sub_1BA222948(0, (unint64_t *)&qword_1ED5B48A0);
  result = sub_1BA2C176C();
  if (v61)
  {
    sub_1BA21D3D4(&v60, (uint64_t)v62);
    v37 = (void *)qword_1ED5B2888;
    v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1BA2C37D0;
    *(_QWORD *)&v60 = 0;
    *((_QWORD *)&v60 + 1) = 0xE000000000000000;
    v39 = v63;
    v40 = v64;
    __swift_project_boxed_opaque_existential_1(v62, v63);
    v41 = *(void (**)(uint64_t, uint64_t))(v40 + 48);
    v42 = v37;
    v41(v39, v40);
    sub_1BA2C21C8();
    swift_bridgeObjectRelease();
    v43 = v60;
    *(_QWORD *)(v38 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v38 + 64) = sub_1BA2291C8();
    *(_OWORD *)(v38 + 32) = v43;
    sub_1BA2C239C();
    sub_1BA2C1EB0();

    swift_bridgeObjectRelease();
    v44 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    if (v44)
    {
      v45 = v44;
      v46 = v63;
      v47 = v64;
      __swift_project_boxed_opaque_existential_1(v62, v63);
      objc_msgSend(v45, sel_setServerToTest_, (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 48))(v46, v47));

    }
    v48 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
    v49 = (void *)sub_1BA2C212C();
    v50 = objc_msgSend(v48, sel_initWithSuiteName_, v49);

    if (!v50)
    {
      v55 = (id)qword_1ED5B2888;
      sub_1BA2C2390();
      sub_1BA2C1EB0();

      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
    }
    v51 = v63;
    v52 = v64;
    __swift_project_boxed_opaque_existential_1(v62, v63);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v52 + 32))(v51, v52) & 1) != 0)
    {
      v53 = (void *)sub_1BA2C212C();
      v54 = (void *)sub_1BA2C212C();
      objc_msgSend(v50, sel_setObject_forKey_, v53, v54);

    }
    else
    {
      v54 = (void *)sub_1BA2C212C();
      objc_msgSend(v50, sel_removeObjectForKey_, v54);
    }

    v56 = v63;
    v57 = v64;
    __swift_project_boxed_opaque_existential_1(v62, v63);
    v58 = (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 40))(v56, v57);
    v59 = (void *)sub_1BA2C212C();
    objc_msgSend(v50, sel_setBool_forKey_, v58 & 1, v59);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
    goto LABEL_29;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1BA2228A4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v5;

  sub_1BA2228E8(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_1BA2228E8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1BA222948(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BA222948(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1BA222994()
{
  return 0;
}

uint64_t sub_1BA22299C()
{
  sub_1BA2C1784();
  type metadata accessor for ArticleBannerAdProviderFactory();
  sub_1BA2C1844();
  swift_release();
  swift_release();
  sub_1BA2C1784();
  type metadata accessor for FeedBannerAdProviderFactory();
  sub_1BA2C1844();
  swift_release();
  swift_release();
  sub_1BA2C1784();
  type metadata accessor for InterstitialAdProviderFactory();
  sub_1BA2C1844();
  swift_release();
  swift_release();
  sub_1BA2C1784();
  type metadata accessor for PrerollAdProviderFactory();
  sub_1BA2C1844();
  swift_release();
  swift_release();
  sub_1BA2C1784();
  type metadata accessor for PrerollAdProvider();
  sub_1BA2C1844();
  swift_release();
  swift_release();
  sub_1BA2C1784();
  type metadata accessor for NativeAdProviderFactory();
  sub_1BA2C1844();
  swift_release();
  swift_release();
  sub_1BA2C1784();
  type metadata accessor for SponsorshipAdProviderFactory();
  sub_1BA2C1844();
  swift_release();
  swift_release();
  sub_1BA2C1790();
  sub_1BA2C1838();
  return swift_release();
}

_QWORD *sub_1BA222B7C(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  unsigned int v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  size_t v34;
  unint64_t v35;
  int v36;
  unint64_t v37;
  unint64_t v38;
  void (*v39)(unint64_t, unint64_t, uint64_t);
  unint64_t v40;
  unint64_t v41;
  void (*v42)(unint64_t, unint64_t, uint64_t);
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a3[2];
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  swift_bridgeObjectRetain();
  v11(v9, v10, v6);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = a3[3];
  v14 = a3[4];
  v15 = *(_QWORD *)(v13 - 8);
  v16 = *(_DWORD *)(v15 + 80) & 0xF8;
  v17 = v16 | 7;
  v18 = *(_QWORD *)(v14 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = v19 | v16 | 7;
  v21 = v20 + v12;
  v22 = (_QWORD *)((v21 + v9) & ~v20);
  v23 = (_QWORD *)((v21 + v10) & ~v20);
  if (*(_DWORD *)(v15 + 84) <= 0x7FFFFFFFu)
    v24 = 0x7FFFFFFF;
  else
    v24 = *(_DWORD *)(v15 + 84);
  v25 = *(unsigned int *)(v18 + 84);
  if (v25 <= v24)
    v26 = v24;
  else
    v26 = *(_DWORD *)(v18 + 84);
  v27 = ~v17;
  v28 = v16 + 23;
  v29 = *(_QWORD *)(v15 + 64) + 7;
  v30 = (v29 & 0xFFFFFFFFFFFFFFF8) + v19 + 8;
  v31 = *(_QWORD *)(v18 + 64) + 7;
  v32 = (v31 + ((v30 + ((v16 + 23) & ~v17)) & ~v19)) & 0xFFFFFFFFFFFFFFF8;
  v49 = v13;
  v50 = v14;
  v48 = ~v19;
  if (v26 == 0x7FFFFFFF)
  {
    v33 = v23[1];
    if (v33 >= 0xFFFFFFFF)
      LODWORD(v33) = -1;
    v34 = v32 + 16;
    if ((_DWORD)v33 != -1)
      goto LABEL_11;
LABEL_16:
    *v22 = *v23;
    v22[1] = v23[1];
    v47 = v31;
    v37 = ((unint64_t)v22 + v28) & v27;
    v38 = ((unint64_t)v23 + v28) & v27;
    v39 = *(void (**)(unint64_t, unint64_t, uint64_t))(v15 + 16);
    swift_bridgeObjectRetain();
    v39(v37, v38, v49);
    *(_QWORD *)((v29 + v37) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v29 + v38) & 0xFFFFFFFFFFFFF8);
    v40 = (v30 + v37) & v48;
    v41 = (v30 + v38) & v48;
    v42 = *(void (**)(unint64_t, unint64_t, uint64_t))(v18 + 16);
    swift_bridgeObjectRetain();
    v42(v40, v41, v50);
    v43 = (_QWORD *)((v47 + v40) & 0xFFFFFFFFFFFFFFF8);
    v44 = (_QWORD *)((v47 + v41) & 0xFFFFFFFFFFFFFFF8);
    *v43 = *v44;
    v43[1] = v44[1];
    swift_bridgeObjectRetain();
    goto LABEL_17;
  }
  v46 = ~v17;
  v35 = ((unint64_t)v23 + v28) & v27;
  if (v24 >= v25)
    v36 = (*(uint64_t (**)(unint64_t))(v15 + 48))(v35);
  else
    v36 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v18 + 48))((v30 + v35) & ~v19, v25, v14);
  v27 = v46;
  v34 = v32 + 16;
  if (!v36)
    goto LABEL_16;
LABEL_11:
  memcpy(v22, v23, v34);
LABEL_17:
  *(_QWORD *)(((unint64_t)v22 + v34) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v23 + v34) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  return a1;
}

uint64_t BannerAd.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BA222E08(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v23;
  unint64_t v24;

  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2[2] - 8);
  v5 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v5);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  v8 = a2[3];
  v7 = a2[4];
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v11 = *(_QWORD *)(v7 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v6 + (v12 | v10)) & ~(v12 | v10);
  if (*(_DWORD *)(v9 + 84) <= 0x7FFFFFFFu)
    v14 = 0x7FFFFFFF;
  else
    v14 = *(_DWORD *)(v9 + 84);
  v15 = *(unsigned int *)(v11 + 84);
  if (v15 <= v14)
    v16 = v14;
  else
    v16 = *(_DWORD *)(v11 + 84);
  v17 = ~v10;
  v23 = ~v12;
  v24 = ((*(_QWORD *)(v9 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v16 != 0x7FFFFFFF)
  {
    v19 = (v10 + v13 + 16) & v17;
    if (v14 >= v15)
      v20 = (*(uint64_t (**)(uint64_t))(v9 + 48))(v19);
    else
      v20 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))((v24 + v12 + v19) & v23, v15, v7);
    if (v20)
      return swift_release();
LABEL_16:
    swift_bridgeObjectRelease();
    v21 = (v10 + 16 + v13) & v17;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v21, v8);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v11 + 8))((v24 + v12 + v21) & v23, v7);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v18 = *(_QWORD *)(v13 + 8);
  if (v18 >= 0xFFFFFFFF)
    LODWORD(v18) = -1;
  if ((_DWORD)v18 == -1)
    goto LABEL_16;
  return swift_release();
}

void AdRequestStore.init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1BA2C170C();
  MEMORY[0x1E0C80A78](v1);
  sub_1BA2C1700();
  sub_1BA2C1724();
  swift_allocObject();
  *(_QWORD *)(v0 + 24) = sub_1BA2C1718();
  type metadata accessor for AdRequest();
}

uint64_t sub_1BA223094()
{
  uint64_t v0;

  swift_getTupleTypeMetadata2();
  sub_1BA2C22AC();
  *(_QWORD *)(v0 + 16) = sub_1BA2C20D8();
  return v0;
}

uint64_t initializeWithCopy for FeedAdData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1BA223188(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  BOOL v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  int v24;

  v8 = *(_QWORD *)(sub_1BA2C1424() - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v10 = *(_DWORD *)(v9 + 80);
  if (*(_DWORD *)(v9 + 84) <= 0x7FFFFFFFu)
    v11 = 0x7FFFFFFF;
  else
    v11 = *(_DWORD *)(v9 + 84);
  v12 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v12 + 84) <= v11)
    v13 = v11;
  else
    v13 = *(_DWORD *)(v12 + 84);
  if (*(_DWORD *)(v8 + 84) <= v13 - 1)
    v14 = v13 - 1;
  else
    v14 = *(_DWORD *)(v8 + 84);
  if (v14 <= 0x7FFFFFFF)
    v15 = 0x7FFFFFFF;
  else
    v15 = v14;
  v16 = v10 & 0xF8 | 7;
  v17 = *(unsigned __int8 *)(v12 + 80);
  v18 = (((v17 | v16)
        + 33
        + ((((((((((*(_QWORD *)(v8 + 64)
                  + 7
                  + ((*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8)
              + 39) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)) & ~(v17 | v16))
      + ((*(_QWORD *)(v12 + 64)
        + ((((*(_QWORD *)(v9 + 64) + 7) & 0xFFFFFFFFFFFFFFF8)
          + 8
          + v17
          + (((v10 & 0xF8) + 23) & ~v16)) & ~v17)
        + 7) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v19 = a3 >= v15;
  v20 = a3 - v15;
  if (v20 != 0 && v19)
  {
    if (v18 <= 3)
    {
      v23 = ((v20 + ~(-1 << (8 * v18))) >> (8 * v18)) + 1;
      if (HIWORD(v23))
      {
        v21 = 4u;
      }
      else if (v23 >= 0x100)
      {
        v21 = 2;
      }
      else
      {
        v21 = v23 > 1;
      }
    }
    else
    {
      v21 = 1u;
    }
  }
  else
  {
    v21 = 0u;
  }
  if (v15 < a2)
  {
    v22 = ~v15 + a2;
    if (v18 < 4)
    {
      if ((_DWORD)v18)
      {
        v24 = v22 & ~(-1 << (8 * v18));
        bzero(a1, v18);
        if ((_DWORD)v18 == 3)
        {
          *(_WORD *)a1 = v24;
          a1[2] = BYTE2(v24);
        }
        else if ((_DWORD)v18 == 2)
        {
          *(_WORD *)a1 = v24;
        }
        else
        {
          *a1 = v24;
        }
      }
    }
    else
    {
      bzero(a1, v18);
      *(_DWORD *)a1 = v22;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X25 }
}

uint64_t sub_1BA223568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void (*v10)(unint64_t, _QWORD, uint64_t);
  uint64_t v12;

  v0 = sub_1BA2C18E0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AdsModuleStartupTask();
  sub_1BA2C1844();
  sub_1BA22053C(0, &qword_1ED5B13D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5038], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = sub_1BA2C19B8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 72);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BA2C37C0;
  v9 = v8 + v7;
  v10 = *(void (**)(unint64_t, _QWORD, uint64_t))(v5 + 104);
  v10(v9, *MEMORY[0x1E0DB5020], v4);
  v10(v9 + v6, *MEMORY[0x1E0DB5028], v4);
  sub_1BA2C16B8();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BA222948(0, &qword_1ED5B2150);
  sub_1BA2C1850();
  swift_release();
  sub_1BA222948(0, &qword_1ED5B2548);
  sub_1BA2C1850();
  swift_release();
  type metadata accessor for AdContextManager();
  sub_1BA2C1844();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB4A18], v0);
  sub_1BA2C16D0();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1BA2237AC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t);
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  void (*v11)(_QWORD *, _QWORD, uint64_t);
  void (*v12)(_QWORD *, uint64_t);
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;

  v0 = sub_1BA2C1778();
  v14 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v2 = (_QWORD *)((char *)&v15[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = sub_1BA2C18E0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA2C1784();
  sub_1BA222948(0, qword_1ED5B3620);
  sub_1BA2C1850();
  swift_release();
  sub_1BA2C16C4();
  swift_release();
  v7 = *MEMORY[0x1E0DB4A18];
  v8 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v8(v6, v7, v3);
  sub_1BA2C16D0();
  swift_release();
  swift_release();
  v9 = *(void (**)(char *, uint64_t))(v4 + 8);
  v9(v6, v3);
  sub_1BA2C1784();
  sub_1BA222948(0, &qword_1ED5B3A50);
  sub_1BA2C1850();
  swift_release();
  v8(v6, v7, v3);
  sub_1BA2C16D0();
  swift_release();
  swift_release();
  v9(v6, v3);
  sub_1BA2C1784();
  sub_1BA222948(0, &qword_1ED5B4160);
  sub_1BA2C1850();
  swift_release();
  swift_release();
  sub_1BA2C179C();
  __swift_project_boxed_opaque_existential_1(v15, v16);
  sub_1BA2C182C();
  v10 = v14;
  v11 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104);
  v11(v2, *MEMORY[0x1E0DB36E0], v0);
  sub_1BA2C185C();
  v12 = *(void (**)(_QWORD *, uint64_t))(v10 + 8);
  v12(v2, v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  sub_1BA2C179C();
  __swift_project_boxed_opaque_existential_1(v15, v16);
  sub_1BA222948(0, (unint64_t *)&qword_1ED5B3A48);
  *v2 = 7368801;
  v2[1] = 0xE300000000000000;
  v11(v2, *MEMORY[0x1E0DB36E8], v0);
  sub_1BA2C1868();
  v12(v2, v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  sub_1BA2C1784();
  sub_1BA222948(0, &qword_1ED5B4870);
  sub_1BA2C1850();
  swift_release();
  swift_release();
  sub_1BA2C1790();
  sub_1BA2C1838();
  return swift_release();
}

void BannerAdUpdate.init(model:request:journal:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[8];

  v21[0] = a1;
  v21[1] = a2;
  v9 = (_QWORD *)*a3;
  v10 = sub_1BA2C1460();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA2C1454();
  v14 = sub_1BA2C143C();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *a6 = v14;
  a6[1] = v16;
  v17 = v9[10];
  v18 = v9[11];
  v20 = v9[12];
  v19 = v9[13];
  v21[2] = a4;
  v21[3] = v17;
  v21[4] = v18;
  v21[5] = a5;
  v21[6] = v20;
  v21[7] = v19;
  type metadata accessor for BannerAdUpdate();
}

void sub_1BA223C2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 32))(v1 + *(int *)(a1 + 68), *(_QWORD *)(v7 - 144), v3);
  *(_QWORD *)(v7 - 128) = v4;
  *(_QWORD *)(v7 - 120) = v5;
  *(_QWORD *)(v7 - 112) = v6;
  *(_QWORD *)(v7 - 104) = v2;
  type metadata accessor for AdRequest();
}

uint64_t sub_1BA223C68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v5 = sub_1BA2C245C();
  result = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, *(_QWORD *)(v4 - 136), v5);
  *(_QWORD *)(v2 + *(int *)(v1 + 76)) = v0;
  return result;
}

void type metadata accessor for BannerAdUpdate()
{
  JUMPOUT(0x1BCCD9364);
}

uint64_t sub_1BA223CC0(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_1BA223CEC()
{
  uint64_t v0;

  return sub_1BA223CF8(*(_QWORD *)(v0 + 16), v0 + 24);
}

uint64_t sub_1BA223CF8(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v5;
  unint64_t v6;
  __int128 v8[2];

  sub_1BA22068C(a2, (uint64_t)v8);
  v3 = *(_QWORD **)(a1 + 96);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a1 + 96) = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v3 = sub_1BA224058(0, v3[2] + 1, 1, v3);
    *(_QWORD *)(a1 + 96) = v3;
  }
  v6 = v3[2];
  v5 = v3[3];
  if (v6 >= v5 >> 1)
  {
    v3 = sub_1BA224058((_QWORD *)(v5 > 1), v6 + 1, 1, v3);
    *(_QWORD *)(a1 + 96) = v3;
  }
  v3[2] = v6 + 1;
  return sub_1BA21D3D4(v8, (uint64_t)&v3[5 * v6 + 4]);
}

uint64_t AdPlacementPolicyValidator.addPolicy(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v16;
  _QWORD aBlock[6];
  __int128 v18[2];

  v2 = v1;
  v4 = sub_1BA2C2030();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78]();
  v8 = (char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BA2C2060();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78]();
  v12 = (char *)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA22068C(a1, (uint64_t)v18);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v2;
  sub_1BA21D3D4(v18, v13 + 24);
  aBlock[4] = sub_1BA223CEC;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA223CC0;
  aBlock[3] = &block_descriptor_12;
  v14 = _Block_copy(aBlock);
  swift_retain();
  sub_1BA2C2048();
  v16 = MEMORY[0x1E0DEE9D8];
  sub_1BA223FC4((unint64_t *)&qword_1ED5B2B40, 255, v5, MEMORY[0x1E0DEF510]);
  sub_1BA224004();
  sub_1BA223FC4((unint64_t *)&qword_1ED5B2B68, 255, (uint64_t (*)(uint64_t))sub_1BA224004, MEMORY[0x1E0DEAF38]);
  sub_1BA2C2480();
  MEMORY[0x1BCCD8B9C](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_1BA223FC4(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x1BCCD93D0](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BA224004()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B2B60)
  {
    sub_1BA2C2030();
    v0 = sub_1BA2C22F4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B2B60);
  }
}

_QWORD *sub_1BA224058(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA2241B4(0, &qword_1ED5B2C58, qword_1ED5B16E0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4])
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
  }
  else
  {
    sub_1BA224288(0, qword_1ED5B16E0);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void sub_1BA2241B4(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BA224288(255, a3);
    v4 = sub_1BA2C269C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t _s7NewsAds23MinimumDistanceAdPolicyVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_retain();
  return a1;
}

_QWORD *_s7NewsAds21FirstViewportAdPolicyVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA224288(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1BA2242D4(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _BYTE v20[24];
  uint64_t v21;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA224288(0, &qword_1ED5B22C8);
  result = sub_1BA2C176C();
  if (!v21)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA224288(0, qword_1ED5B4440);
  result = sub_1BA2C176C();
  if (!v19)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA224288(0, (unint64_t *)&qword_1ED5B3CF8);
  result = sub_1BA2C176C();
  if (v17)
  {
    v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    MEMORY[0x1E0C80A78](v3);
    v5 = (_QWORD *)((char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v6 + 16))(v5);
    v7 = *v5;
    v8 = type metadata accessor for BannerAdViewStyler();
    v15[3] = v8;
    v15[4] = &off_1E71F9360;
    v15[0] = v7;
    type metadata accessor for BannerAdViewLayoutAttributesFactory();
    v9 = (_QWORD *)swift_allocObject();
    v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v15, v8);
    MEMORY[0x1E0C80A78](v10);
    v12 = (_QWORD *)((char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v13 + 16))(v12);
    v14 = *v12;
    v9[5] = v8;
    v9[6] = &off_1E71F9360;
    v9[2] = v14;
    sub_1BA21D3D4(&v18, (uint64_t)(v9 + 7));
    sub_1BA21D3D4(&v16, (uint64_t)(v9 + 12));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    return (uint64_t)v9;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1BA224510@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[5];
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _BYTE v26[24];
  uint64_t v27;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA224288(0, &qword_1ED5B22C8);
  result = sub_1BA2C176C();
  if (!v27)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA224288(0, &qword_1ED5B4430);
  result = sub_1BA2C176C();
  if (!v25)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA224288(0, (unint64_t *)&qword_1ED5B3618);
  result = sub_1BA2C176C();
  v5 = v22;
  if (v22)
  {
    v6 = v23;
    v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
    MEMORY[0x1E0C80A78](v7);
    v9 = (_QWORD *)((char *)&v21[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v10 + 16))(v9);
    v11 = *v9;
    v12 = type metadata accessor for BannerAdViewStyler();
    v21[3] = v12;
    v21[4] = &off_1E71F9360;
    v21[0] = v11;
    v13 = type metadata accessor for BannerAdViewRenderer();
    v14 = (_QWORD *)swift_allocObject();
    v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v12);
    MEMORY[0x1E0C80A78](v15);
    v17 = (_QWORD *)((char *)&v21[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v18 + 16))(v17);
    v19 = *v17;
    v14[5] = v12;
    v14[6] = &off_1E71F9360;
    v14[2] = v19;
    sub_1BA21D3D4(&v24, (uint64_t)(v14 + 7));
    v14[12] = v5;
    v14[13] = v6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    a2[3] = v13;
    a2[4] = &protocol witness table for BannerAdViewRenderer;
    *a2 = v14;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1BA22476C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[5];
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[24];
  uint64_t v24;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA224288(0, &qword_1ED5B4378);
  result = sub_1BA2C176C();
  if (v24)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA224288(0, (unint64_t *)&qword_1ED5B3618);
    result = sub_1BA2C176C();
    v5 = v21;
    if (v21)
    {
      v6 = v22;
      v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
      MEMORY[0x1E0C80A78](v7);
      v9 = (_QWORD *)((char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v10 + 16))(v9);
      v11 = *v9;
      v12 = type metadata accessor for DebugJournalSummaryViewStyler();
      v20[3] = v12;
      v20[4] = &off_1E71FA8C8;
      v20[0] = v11;
      v13 = type metadata accessor for DebugJournalSummaryViewRenderer();
      v14 = (_QWORD *)swift_allocObject();
      v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v12);
      MEMORY[0x1E0C80A78](v15);
      v17 = (_QWORD *)((char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v18 + 16))(v17);
      v19 = *v17;
      v14[5] = v12;
      v14[6] = &off_1E71FA8C8;
      v14[2] = v19;
      v14[7] = v5;
      v14[8] = v6;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      a2[3] = v13;
      a2[4] = &off_1E71FBC00;
      *a2 = v14;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA22496C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1BA2C18E0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA2C1784();
  sub_1BA224288(0, &qword_1ED5B3ED8);
  sub_1BA2C1850();
  swift_release();
  swift_release();
  sub_1BA2C1784();
  sub_1BA224288(0, (unint64_t *)&qword_1ED5B3CF8);
  sub_1BA2C1850();
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB4A18], v0);
  sub_1BA2C16D0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1BA2C1784();
  type metadata accessor for BannerAdViewLayoutAttributesFactory();
  sub_1BA2C1844();
  swift_release();
  swift_release();
  sub_1BA2C1790();
  sub_1BA2C1838();
  swift_release();
  sub_1BA2C1784();
  sub_1BA224288(0, &qword_1ED5B42D0);
  sub_1BA2C1850();
  swift_release();
  swift_release();
  sub_1BA2C1790();
  sub_1BA224288(0, &qword_1ED5B4178);
  sub_1BA2C1850();
  swift_release();
  swift_release();
  sub_1BA2C1784();
  sub_1BA224288(0, &qword_1ED5B4438);
  sub_1BA2C1850();
  swift_release();
  swift_release();
  sub_1BA2C1784();
  sub_1BA224288(0, &qword_1ED5B4430);
  sub_1BA2C1850();
  swift_release();
  swift_release();
  sub_1BA2C1790();
  sub_1BA224288(0, &qword_1ED5B4378);
  sub_1BA2C1850();
  swift_release();
  swift_release();
  sub_1BA2C1784();
  sub_1BA224288(0, qword_1ED5B4440);
  sub_1BA2C1850();
  swift_release();
  return swift_release();
}

void sub_1BA224CF8()
{
  type metadata accessor for JournalEntry();
}

void sub_1BA224D4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v7 - 120))(*(_QWORD *)(v7 - 152), v3, v2, *(_QWORD *)(v7 - 136), *(_QWORD *)(v7 - 128), *(_QWORD *)(v7 - 144), v5, v6, v1, v4);
  sub_1BA22A46C();
}

void sub_1BA224DE4(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  _QWORD v12[4];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v17 = a4;
  v14 = a3;
  v21 = a1;
  v22 = a2;
  v20 = a7;
  v13 = type metadata accessor for AdContext(0, a5, a8, a3);
  v12[3] = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v12[2] = (char *)v12 - v11;
  v15 = a5;
  v16 = a6;
  v23 = a5;
  v24 = a6;
  v18 = a8;
  v19 = a9;
  v25 = a8;
  v26 = a9;
  type metadata accessor for AdRequest();
}

void sub_1BA224E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  char v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v13 = sub_1BA2C245C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  *(_QWORD *)(v11 - 224) = (char *)&a9 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&a9 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&a9 - v20;
  v22 = v9;
  sub_1BA22520C(v9, (_QWORD *)(v11 - 176));
  v24 = *(void **)(v11 - 176);
  v23 = *(_QWORD *)(v11 - 168);
  v26 = *(_QWORD *)(v11 - 160);
  v25 = *(_QWORD *)(v11 - 152);
  *(_QWORD *)(v11 - 120) = v24;
  *(_QWORD *)(v11 - 112) = v23;
  *(_QWORD *)(v11 - 104) = v26;
  *(_QWORD *)(v11 - 96) = v25;
  *(_QWORD *)(v11 - 128) = v24;
  v27 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v28 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = v24;
  sub_1BA2251B8();
  v30 = swift_dynamicCast();
  *(_QWORD *)(v11 - 264) = v10;
  if ((v30 & 1) != 0)
  {
    *(_QWORD *)(v11 - 296) = a1;
    v31 = *(_QWORD *)(v11 - 160);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v32 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    v32(v21, v10, v13);
    if (v31)
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v21, v13);
      goto LABEL_9;
    }
    a1 = *(_QWORD *)(v11 - 296);
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v32 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    v32(v21, v10, v13);
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v21, v13);
  v33 = *(_QWORD *)(a1 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v19, 1, a1) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    v31 = 0;
  }
  else
  {
    v34 = &v19[*(int *)(a1 + 52)];
    *(_QWORD *)(v11 - 296) = v13;
    v35 = *(_QWORD *)(v11 - 288);
    v36 = *(_QWORD *)(v11 - 280);
    v37 = *(_QWORD *)(v11 - 272);
    (*(void (**)(uint64_t, char *, uint64_t))(v36 + 16))(v35, v34, v37);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v19, a1);
    v31 = *(_QWORD *)(v35 + *(int *)(v37 + 36));
    v38 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    swift_bridgeObjectRetain();
    v39 = v35;
    v13 = *(_QWORD *)(v11 - 296);
    v38(v39, v37);
  }
LABEL_9:
  v41 = *(_QWORD *)(v11 - 240);
  v40 = *(_QWORD *)(v11 - 232);
  v43 = *(_QWORD *)(v11 - 256);
  v42 = *(_QWORD *)(v11 - 248);
  v44 = *(_QWORD *)(v11 - 264);
  *(_QWORD *)(v11 - 128) = v31;
  *(_OWORD *)(v11 - 176) = 0u;
  *(_OWORD *)(v11 - 160) = 0u;
  *(_BYTE *)(v11 - 144) = 1;
  v45 = *(_QWORD *)(v11 - 224);
  v32((char *)v45, v44, v13);
  swift_bridgeObjectRetain();
  v46 = *(_QWORD *)(v11 - 184);
  swift_bridgeObjectRetain();
  sub_1BA233490(*(_QWORD *)(v11 - 192), v46, (__int128 *)(v11 - 120), v43, v40, (uint64_t *)(v11 - 128), (__int128 *)(v11 - 176), v45, *(uint64_t **)(v11 - 200), v42, v41, *(_QWORD *)(v11 - 216), *(_QWORD *)(v11 - 208));
}

uint64_t sub_1BA22517C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  void *v24;

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1BA2251B8()
{
  unint64_t result;

  result = qword_1ED5B2CD0;
  if (!qword_1ED5B2CD0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5B2CD0);
  }
  return result;
}

void sub_1BA22520C(void *a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18[5];
  id v19;
  char v20;
  id v21;

  v21 = a1;
  v4 = a1;
  v5 = a1;
  sub_1BA2251B8();
  if (swift_dynamicCast() && (v20 & 1) == 0)
  {
    v14 = v19;
    sub_1BA2C24C8();
    swift_bridgeObjectRelease();
    v18[4] = v19;
    v15 = MEMORY[0x1E0DEB418];
    sub_1BA2C2690();
    sub_1BA2C21C8();
    swift_bridgeObjectRelease();
    v10 = 0xD000000000000010;
    v11 = 0x80000001BA2CEE70;
    sub_1BA22920C(0, &qword_1ED5B2C98, (uint64_t)&type metadata for JournalEntryStatus.Info, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1BA2C37C0;
    *(_QWORD *)(v9 + 72) = v15;
    *(_QWORD *)(v9 + 32) = 0x6F4320726F727245;
    *(_QWORD *)(v9 + 40) = 0xEA00000000006564;
    *(_QWORD *)(v9 + 48) = v14;
    sub_1BA2C1A9C();
    v16 = (void *)sub_1BA2C1A90();
    v18[3] = (id)MEMORY[0x1E0DEA968];
    v18[0] = v16;
    v18[1] = v17;
    *(_QWORD *)(v9 + 80) = 0x64656C6C69666E55;
    *(_QWORD *)(v9 + 88) = 0xEF6E6F7361655220;
    sub_1BA22E0C4(v18, (_OWORD *)(v9 + 96));

  }
  else
  {

    v19 = a1;
    v6 = a1;
    if (swift_dynamicCast())
    {
      v7 = v18[0];
      v8 = v18[1];
      swift_bridgeObjectRelease();
      sub_1BA22920C(0, &qword_1ED5B2C98, (uint64_t)&type metadata for JournalEntryStatus.Info, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1BA2C37D0;
      *(_QWORD *)(v9 + 72) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v9 + 48) = v7;
      *(_QWORD *)(v9 + 56) = v8;
      *(_QWORD *)(v9 + 32) = 0x20676E697373694DLL;
      *(_QWORD *)(v9 + 40) = 0xEB0000000079654BLL;

      v10 = 0xD000000000000025;
      v11 = 0x80000001BA2CEE40;
    }
    else
    {

      v18[0] = a1;
      v12 = a1;
      if (swift_dynamicCast() && v19 == 2)
      {

        v9 = MEMORY[0x1E0DEE9D8];
        v11 = 0xEC00000064656C62;
        v10 = 0x6173696420736441;
      }
      else
      {

        v18[0] = a1;
        v13 = a1;
        if (swift_dynamicCast() && v19 == 1)
        {

          v10 = 0xD000000000000019;
          v11 = 0x80000001BA2CEE20;
        }
        else
        {

          v19 = a1;
          sub_1BA2C2570();
          v10 = 0;
          v11 = 0xE000000000000000;

        }
        v9 = MEMORY[0x1E0DEE9D8];
      }
    }
  }
  *a2 = a1;
  a2[1] = v10;
  a2[2] = v11;
  a2[3] = v9;
}

void Journal.createDebugJournal(for:)()
{
  sub_1BA225748();
  type metadata accessor for JournalEntry();
}

void sub_1BA225648()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  uint64_t v6;

  v4 = sub_1BA2C22F4();
  MEMORY[0x1BCCD93D0](MEMORY[0x1E0DEAF50], v4);
  if ((sub_1BA2C233C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v5._countAndFlagsBits = v2;
    v5._object = v1;
    Journal.addCreatedEntry(placementIdentifier:)(v5);
  }
  sub_1BA22AE04(v3, 1, v0, (uint64_t)&v6);
}

uint64_t sub_1BA225748()
{
  uint64_t result;
  uint64_t v1;

  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BA2C18C8();
  swift_bridgeObjectRelease();
  swift_release();
  result = v1;
  if (!v1)
    type metadata accessor for JournalEntry();
  return result;
}

uint64_t destroy for AdHostDescription()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void FeedGroupAdData.Article.init(headline:adjacentPosition:)(void *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  char v22;

  v22 = *a2;
  v5 = objc_msgSend(a1, sel_identifier);
  v6 = sub_1BA2C2150();
  v8 = v7;

  v9 = objc_msgSend(a1, sel_title);
  if (v9)
  {
    v10 = v9;
    v11 = sub_1BA2C2150();
    v13 = v12;

  }
  else
  {
    v11 = 0;
    v13 = 0xE000000000000000;
  }
  v14 = objc_msgSend(a1, sel_language);
  if (v14)
  {
    v15 = v14;
    v16 = sub_1BA2C2150();
    v18 = v17;

  }
  else
  {
    v16 = 0;
    v18 = 0;
  }
  v19 = objc_msgSend(a1, sel_iAdKeywords);
  if (v19)
  {
    v20 = v19;
    v21 = sub_1BA2C227C();
    swift_unknownObjectRelease();

  }
  else
  {
    swift_unknownObjectRelease();
    v21 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v8;
  *(_QWORD *)(a3 + 16) = v11;
  *(_QWORD *)(a3 + 24) = v13;
  *(_QWORD *)(a3 + 32) = v16;
  *(_QWORD *)(a3 + 40) = v18;
  *(_QWORD *)(a3 + 48) = v21;
  *(_BYTE *)(a3 + 56) = v22;
}

uint64_t sub_1BA225950(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  void (*v10)(uint64_t *, uint64_t, ValueMetadata *, uint64_t, uint64_t, uint64_t, unint64_t, _UNKNOWN **, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t *, uint64_t, ValueMetadata *, uint64_t, uint64_t, uint64_t, unint64_t, _UNKNOWN **, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t *, uint64_t, ValueMetadata *, uint64_t, uint64_t, uint64_t, unint64_t, _UNKNOWN **, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t *, uint64_t, ValueMetadata *, uint64_t, uint64_t, uint64_t, unint64_t, _UNKNOWN **, _UNKNOWN **, uint64_t, uint64_t);
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t *, uint64_t, ValueMetadata *, uint64_t, uint64_t, uint64_t, unint64_t, _UNKNOWN **, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t *, uint64_t, ValueMetadata *, uint64_t, uint64_t, uint64_t, unint64_t, _UNKNOWN **, _UNKNOWN **, uint64_t, uint64_t);
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t *, uint64_t, ValueMetadata *, uint64_t, uint64_t, uint64_t, unint64_t, _UNKNOWN **, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t *, uint64_t, ValueMetadata *, uint64_t, uint64_t, uint64_t, unint64_t, _UNKNOWN **, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v4 = type metadata accessor for ArticleBannerAdProviderFactory();
  result = sub_1BA2C1760();
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  v6 = result;
  v8 = a1[3];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  v69 = v6;
  sub_1BA235238();
  inited = swift_initStaticObject();
  v10 = *(void (**)(uint64_t *, uint64_t, ValueMetadata *, uint64_t, uint64_t, uint64_t, unint64_t, _UNKNOWN **, _UNKNOWN **, uint64_t, uint64_t))(v7 + 40);
  v11 = type metadata accessor for ArticleBannerAdProvider();
  v12 = type metadata accessor for ArticleBannerAdPlacement();
  v13 = sub_1BA235AFC();
  v10(&v69, inited, &type metadata for ArticleBannerAdContext, v11, v12, v4, v13, &protocol witness table for ArticleBannerAdPlacement, &protocol witness table for ArticleBannerAdProviderFactory, v8, v7);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v14 = type metadata accessor for FeedBannerAdProviderFactory();
  result = sub_1BA2C1760();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v15 = result;
  v17 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v69 = v15;
  sub_1BA23540C();
  v18 = swift_initStaticObject();
  v19 = *(void (**)(uint64_t *, uint64_t, ValueMetadata *, uint64_t, uint64_t, uint64_t, unint64_t, _UNKNOWN **, _UNKNOWN **, uint64_t, uint64_t))(v16 + 40);
  v20 = type metadata accessor for FeedBannerAdProvider();
  v21 = type metadata accessor for FeedBannerAdPlacement();
  v22 = sub_1BA235EAC();
  v19(&v69, v18, &type metadata for FeedBannerAdContext, v20, v21, v14, v22, &protocol witness table for FeedBannerAdPlacement, &protocol witness table for FeedBannerAdProviderFactory, v17, v16);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v23 = type metadata accessor for InterstitialAdProviderFactory();
  result = sub_1BA2C1760();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v24 = result;
  v25 = a1[3];
  v26 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v25);
  v69 = v24;
  sub_1BA235100();
  v27 = swift_initStaticObject();
  v28 = *(void (**)(uint64_t *, uint64_t, ValueMetadata *, uint64_t, uint64_t, uint64_t, unint64_t, _UNKNOWN **, _UNKNOWN **, uint64_t, uint64_t))(v26 + 40);
  v29 = type metadata accessor for InterstitialAdProvider();
  v30 = type metadata accessor for InterstitialAdPlacement();
  v31 = sub_1BA235724();
  v28(&v69, v27, &type metadata for ArticleInterstitialAdContext, v29, v30, v23, v31, &protocol witness table for InterstitialAdPlacement, &protocol witness table for InterstitialAdProviderFactory, v25, v26);
  v32 = a1[3];
  v33 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v32);
  v69 = v24;
  sub_1BA235064();
  v34 = swift_initStaticObject();
  v35 = *(void (**)(uint64_t *, uint64_t, ValueMetadata *, uint64_t, uint64_t, uint64_t, unint64_t, _UNKNOWN **, _UNKNOWN **, uint64_t, uint64_t))(v33 + 40);
  v36 = sub_1BA2354C8();
  v35(&v69, v34, &type metadata for PreviewInterstitialAdContext, v29, v30, v23, v36, &protocol witness table for InterstitialAdPlacement, &protocol witness table for InterstitialAdProviderFactory, v32, v33);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v37 = type metadata accessor for PrerollAdProviderFactory();
  result = sub_1BA2C1760();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v38 = result;
  v39 = a1[3];
  v40 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v39);
  v69 = v38;
  sub_1BA23519C();
  v41 = swift_initStaticObject();
  v42 = *(void (**)(uint64_t *, uint64_t, ValueMetadata *, uint64_t, uint64_t, uint64_t, unint64_t, _UNKNOWN **, _UNKNOWN **, uint64_t, uint64_t))(v40 + 40);
  v68 = type metadata accessor for PrerollAdProvider();
  v43 = type metadata accessor for PrerollAdPlacement();
  v44 = sub_1BA2359AC();
  v42(&v69, v41, &type metadata for ArticlePrerollAdContext, v68, v43, v37, v44, &protocol witness table for PrerollAdPlacement, &protocol witness table for PrerollAdProviderFactory, v39, v40);
  v45 = a1[3];
  v46 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v45);
  v69 = v38;
  sub_1BA235370();
  v47 = swift_initStaticObject();
  v48 = *(void (**)(uint64_t *, uint64_t, ValueMetadata *, uint64_t, uint64_t, uint64_t, unint64_t, _UNKNOWN **, _UNKNOWN **, uint64_t, uint64_t))(v46 + 40);
  v49 = sub_1BA235D28();
  v48(&v69, v47, &type metadata for FeedPrerollAdContext, v68, v43, v37, v49, &protocol witness table for PrerollAdPlacement, &protocol witness table for PrerollAdProviderFactory, v45, v46);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v50 = type metadata accessor for NativeAdProviderFactory();
  result = sub_1BA2C1760();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v51 = result;
  v52 = a1[3];
  v53 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v52);
  v69 = v51;
  sub_1BA234FC8();
  v54 = swift_initStaticObject();
  v55 = *(void (**)(uint64_t *, uint64_t, ValueMetadata *, uint64_t, uint64_t, uint64_t, unint64_t, _UNKNOWN **, _UNKNOWN **, uint64_t, uint64_t))(v53 + 40);
  v56 = type metadata accessor for NativeAdProvider();
  v57 = type metadata accessor for NativeAdPlacement();
  v58 = sub_1BA23640C();
  v55(&v69, v54, &type metadata for NativeAdContext, v56, v57, v50, v58, &protocol witness table for NativeAdPlacement, &protocol witness table for NativeAdProviderFactory, v52, v53);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v59 = type metadata accessor for SponsorshipAdProviderFactory();
  result = sub_1BA2C1760();
  if (result)
  {
    v60 = result;
    v61 = a1[3];
    v62 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v61);
    v69 = v60;
    sub_1BA2352D4();
    v63 = swift_initStaticObject();
    v64 = *(void (**)(uint64_t *, uint64_t, ValueMetadata *, uint64_t, uint64_t, uint64_t, unint64_t, _UNKNOWN **, _UNKNOWN **, uint64_t, uint64_t))(v62 + 40);
    v65 = type metadata accessor for SponsorshipAdProvider();
    v66 = type metadata accessor for SponsorshipAdPlacement();
    v67 = sub_1BA235C20();
    v64(&v69, v63, &type metadata for SponsorshipAdContext, v65, v66, v59, v67, &protocol witness table for SponsorshipAdPlacement, &protocol witness table for SponsorshipAdProviderFactory, v61, v62);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
LABEL_13:
  __break(1u);
  return result;
}

void sub_1BA225F80(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  AdManager.register<A, B, C, D>(factory:for:)(a1, a2, a6);
}

void AdManager.register<A, B, C, D>(factory:for:)(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;

  v6 = *a2;
  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v10 = (void *)qword_1ED5B2888;
  sub_1BA2228E8(0, (unint64_t *)&qword_1ED5B2CC0, (unint64_t *)&qword_1ED5B2CD8, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BA2C37D0;
  v12 = a2[2];
  v13 = a2[3];
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 64) = sub_1BA2291C8();
  *(_QWORD *)(v11 + 32) = v12;
  *(_QWORD *)(v11 + 40) = v13;
  v14 = v10;
  swift_bridgeObjectRetain();
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  v15 = *(_QWORD *)(v6 + 88);
  v16 = *(_QWORD *)(v6 + 96);
  v17 = *(_QWORD *)(v6 + 104);
  v18 = *(_QWORD *)(v6 + 128);
  swift_bridgeObjectRetain();
  v20 = v15;
  v21 = v16;
  v22 = v17;
  v19 = *(_OWORD *)(v6 + 112);
  v23 = v19;
  v24 = v18;
  type metadata accessor for Ad();
}

uint64_t type metadata accessor for AnyFactory(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyFactory);
}

uint64_t sub_1BA2261E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _OWORD v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1BA22E0C4((_OWORD *)a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = 0x8000000000000000;
    sub_1BA228E3C(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA2AE6DC(a1, (unint64_t *)&unk_1ED5B2FD0);
    sub_1BA2ADA84(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_1BA2AE6DC((uint64_t)v9, (unint64_t *)&unk_1ED5B2FD0);
  }
}

void type metadata accessor for Ad()
{
  JUMPOUT(0x1BCCD9364);
}

uint64_t *sub_1BA2262D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  type metadata accessor for AnyFactory(0, a2, a3, a4);
  swift_allocObject();
  return sub_1BA22635C(a1, a4, a5, a6, a7, a8, a9);
}

uint64_t *sub_1BA22635C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t *v7;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;

  v13 = *v7;
  v14 = *(_QWORD *)(a4 - 8);
  v15 = (*(unsigned __int8 *)(v14 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = (char *)swift_allocObject();
  *((_QWORD *)v16 + 2) = *(_QWORD *)(v13 + 80);
  *((_QWORD *)v16 + 3) = *(_QWORD *)(v13 + 88);
  *((_QWORD *)v16 + 4) = a2;
  *((_QWORD *)v16 + 5) = a3;
  *((_QWORD *)v16 + 6) = a4;
  *((_QWORD *)v16 + 7) = a5;
  *((_QWORD *)v16 + 8) = a6;
  *((_QWORD *)v16 + 9) = a7;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(&v16[v15], a1, a4);
  v7[2] = (uint64_t)sub_1BA2AE770;
  v7[3] = (uint64_t)v16;
  return v7;
}

uint64_t BannerAd.journal.getter@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[9];

  v2 = *(_OWORD *)(v1 + 184);
  v3 = *(_OWORD *)(v1 + 216);
  v11[6] = *(_OWORD *)(v1 + 200);
  v11[7] = v3;
  v11[8] = *(_OWORD *)(v1 + 232);
  v4 = *(_OWORD *)(v1 + 120);
  v5 = *(_OWORD *)(v1 + 152);
  v11[2] = *(_OWORD *)(v1 + 136);
  v11[3] = v5;
  v11[4] = *(_OWORD *)(v1 + 168);
  v11[5] = v2;
  v11[0] = *(_OWORD *)(v1 + 104);
  v11[1] = v4;
  v6 = *(_OWORD *)(v1 + 184);
  v7 = *(_OWORD *)(v1 + 216);
  a1[6] = *(_OWORD *)(v1 + 200);
  a1[7] = v7;
  a1[8] = *(_OWORD *)(v1 + 232);
  v8 = *(_OWORD *)(v1 + 120);
  v9 = *(_OWORD *)(v1 + 152);
  a1[2] = *(_OWORD *)(v1 + 136);
  a1[3] = v9;
  a1[4] = *(_OWORD *)(v1 + 168);
  a1[5] = v6;
  *a1 = *(_OWORD *)(v1 + 104);
  a1[1] = v8;
  return sub_1BA243268((uint64_t)v11);
}

__n128 FeedGroupAdData.init(kind:adjacentArticles:tag:keywords:)@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 result;
  __int128 v16;
  __int128 v17;
  id v18;
  uint64_t v19;
  __n128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  v7 = *a1;
  v8 = a1[1];
  v19 = *a1;
  v20.n128_u64[0] = v8;
  v9 = FeedGroupAdData.Kind.description.getter();
  v11 = v10;
  v12 = 1;
  if (v8 > 0x3A)
    goto LABEL_11;
  if (((1 << v8) & 0x7FFF7FFFFFF03FDLL) == 0)
  {
    if (((1 << v8) & 0xBC02) != 0)
    {
      if (a3)
      {
        v12 = (uint64_t)objc_msgSend(a3, sel_contentProvider);
LABEL_11:
        sub_1BA29ED84(v7, v8);
        goto LABEL_3;
      }
    }
    else if (a3)
    {
      v18 = objc_msgSend((id)swift_unknownObjectRetain(), sel_asTopic);
      swift_unknownObjectRelease();
      if (!v18)
      {
        v12 = (uint64_t)objc_msgSend(a3, sel_contentProvider);
        swift_unknownObjectRelease();
        goto LABEL_11;
      }
      swift_unknownObjectRelease();
    }
    v12 = 1;
    goto LABEL_11;
  }
LABEL_3:
  FeedGroupAdData.init(identifier:adjacentArticles:tag:contentProviderID:keywords:)(a3, v9, v11, a2, v12, &v19);
  v13 = v23;
  v14 = v24;
  result = v20;
  v16 = v21;
  v17 = v22;
  *(_QWORD *)a4 = v19;
  *(__n128 *)(a4 + 8) = result;
  *(_OWORD *)(a4 + 24) = v16;
  *(_OWORD *)(a4 + 40) = v17;
  *(_QWORD *)(a4 + 56) = v13;
  *(_QWORD *)(a4 + 64) = v14;
  return result;
}

uint64_t FeedGroupAdData.Kind.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;

  v1 = *v0;
  v2 = v0[1];
  v3 = 0x64657461727543;
  switch(v2)
  {
    case 0uLL:
      break;
    case 1uLL:
      v3 = 0x657061707377654ELL;
      break;
    case 2uLL:
      v3 = 0x77654E6C61636F4CLL;
      break;
    case 3uLL:
      v3 = 0x676E69646E657254;
      break;
    case 4uLL:
      v3 = 0x756F59726F46;
      break;
    case 5uLL:
      v4 = 0x64657373694DLL;
      goto LABEL_9;
    case 6uLL:
      v4 = 0x74736574614CLL;
LABEL_9:
      v3 = v4 & 0xFFFFFFFFFFFFLL | 0x7453000000000000;
      break;
    case 7uLL:
      v3 = 0x59726F4665726F4DLL;
      break;
    case 8uLL:
      v3 = 0xD000000000000012;
      break;
    case 9uLL:
      v3 = 0x6F72476369706F54;
      break;
    case 0xAuLL:
      v3 = 0x656E697A6167614DLL;
      break;
    case 0xBuLL:
      v3 = 0x726F76614677654ELL;
      break;
    case 0xCuLL:
    case 0x1DuLL:
    case 0x1FuLL:
    case 0x27uLL:
    case 0x29uLL:
    case 0x33uLL:
    case 0x35uLL:
    case 0x3AuLL:
      v3 = 0xD000000000000010;
      break;
    case 0xDuLL:
      v3 = 0x6F7661466F747541;
      break;
    case 0xEuLL:
      v3 = 0x6369747241676154;
      break;
    case 0xFuLL:
      v3 = 0x6575737349676154;
      break;
    case 0x10uLL:
      v3 = 0x6C6C6177796150;
      break;
    case 0x11uLL:
      v3 = 25665;
      break;
    case 0x12uLL:
      v5 = 1953460307;
      goto LABEL_33;
    case 0x13uLL:
      v3 = 0x72656874616557;
      break;
    case 0x14uLL:
      v3 = 7364935;
      break;
    case 0x15uLL:
      v3 = 0x746E6F436E656553;
      break;
    case 0x16uLL:
      v3 = 0x6957646572616853;
      break;
    case 0x17uLL:
      v3 = 0x656D656761676E45;
      break;
    case 0x18uLL:
      v3 = 0x536F546F72746E49;
      break;
    case 0x19uLL:
    case 0x1AuLL:
      v3 = 0x7374726F7053794DLL;
      break;
    case 0x1BuLL:
      v3 = 0x65527374726F7053;
      break;
    case 0x1CuLL:
      v3 = 0x63537374726F7053;
      break;
    case 0x1EuLL:
      v3 = 0x63537374726F7053;
      break;
    case 0x20uLL:
      v3 = 0x61467374726F7053;
      break;
    case 0x21uLL:
      v5 = 1751607624;
LABEL_33:
      v3 = v5 | 0x6867696C00000000;
      break;
    case 0x22uLL:
      v3 = 0x74537374726F7053;
      break;
    case 0x23uLL:
      v3 = 0x72427374726F7053;
      break;
    case 0x24uLL:
      v3 = 0x6F427374726F7053;
      break;
    case 0x25uLL:
      v3 = 0x76457374726F7053;
      break;
    case 0x26uLL:
      v3 = 0xD000000000000013;
      break;
    case 0x28uLL:
      v3 = 0xD000000000000013;
      break;
    case 0x2AuLL:
      v3 = 0x74756374726F6853;
      break;
    case 0x2BuLL:
      v3 = 0xD000000000000017;
      break;
    case 0x2CuLL:
      v3 = 0x6C656E6E616843;
      break;
    case 0x2DuLL:
      v3 = 0xD000000000000011;
      break;
    case 0x2EuLL:
      v3 = 0x694C656C7A7A7550;
      break;
    case 0x2FuLL:
      v3 = 0x7241656C7A7A7550;
      break;
    case 0x30uLL:
      v3 = 0xD000000000000015;
      break;
    case 0x31uLL:
      v3 = 0x6546656C7A7A7550;
      break;
    case 0x32uLL:
      v3 = 0xD000000000000011;
      break;
    case 0x34uLL:
      v3 = 0x6F59726F46676154;
      break;
    case 0x36uLL:
      v3 = 0x5265746144676154;
      break;
    case 0x37uLL:
      v3 = 0x614D7374726F7053;
      break;
    case 0x38uLL:
      v3 = 0x7974696E69666641;
      break;
    case 0x39uLL:
      v3 = 0x6F74536465766153;
      break;
    default:
      v3 = v1;
      break;
  }
  sub_1BA226C94(v1, v2);
  return v3;
}

uint64_t sub_1BA226C94(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 0x3B)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t FeedGroupAdData.init(identifier:adjacentArticles:tag:contentProviderID:keywords:)@<X0>(id a1@<X3>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X2>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  id v10;
  id v11;
  uint64_t v12;
  uint64_t *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;

  if (a1
    && (v10 = objc_msgSend(a1, sel_asTopic)) != 0
    && (v11 = objc_msgSend(v10, sel_iAdCategories), swift_unknownObjectRelease(),
                                                                                        v11))
  {
    v27 = sub_1BA2C227C();

  }
  else
  {
    v27 = MEMORY[0x1E0DEE9D8];
  }
  v28 = sub_1BA226F60(a4);
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a4 + 16);
  if (v12)
  {
    v26 = a5;
    swift_bridgeObjectRetain();
    v13 = (uint64_t *)(a4 + 72);
    v14 = (char *)MEMORY[0x1E0DEE9D8];
    do
    {
      v16 = *v13;
      if (*v13)
      {
        v17 = *(v13 - 1);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v14 = sub_1BA22C18C(0, *((_QWORD *)v14 + 2) + 1, 1, v14);
        v19 = *((_QWORD *)v14 + 2);
        v18 = *((_QWORD *)v14 + 3);
        if (v19 >= v18 >> 1)
          v14 = sub_1BA22C18C((char *)(v18 > 1), v19 + 1, 1, v14);
        *((_QWORD *)v14 + 2) = v19 + 1;
        v15 = &v14[16 * v19];
        *((_QWORD *)v15 + 4) = v17;
        *((_QWORD *)v15 + 5) = v16;
      }
      v13 += 8;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    a5 = v26;
  }
  sub_1BA229250(0, (unint64_t *)&qword_1ED5B2B70);
  sub_1BA226F18();
  v20 = sub_1BA2C21E0();
  result = swift_bridgeObjectRelease();
  if (a1)
  {
    v22 = objc_msgSend(a1, sel_identifier);
    v23 = sub_1BA2C2150();
    v25 = v24;

    result = swift_unknownObjectRelease();
  }
  else
  {
    v23 = 0;
    v25 = 0;
  }
  *a6 = a2;
  a6[1] = a3;
  a6[2] = v27;
  a6[3] = v28;
  a6[4] = v20;
  a6[5] = a5;
  a6[6] = v23;
  a6[7] = v25;
  a6[8] = a4;
  return result;
}

unint64_t sub_1BA226F18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED5B2B80;
  if (!qword_1ED5B2B80)
  {
    sub_1BA234914();
    result = MEMORY[0x1BCCD93D0](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED5B2B80);
  }
  return result;
}

char *sub_1BA226F60(uint64_t a1)
{
  int64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char *result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1BA2271C0(0, v1, 0);
    v3 = v22;
    v4 = (uint64_t *)(a1 + 80);
    do
    {
      v5 = *v4;
      v6 = *(_QWORD *)(v22 + 16);
      v7 = *(_QWORD *)(v22 + 24);
      v8 = v6 + 1;
      swift_bridgeObjectRetain();
      if (v6 >= v7 >> 1)
        sub_1BA2271C0((_QWORD *)(v7 > 1), v6 + 1, 1);
      *(_QWORD *)(v22 + 16) = v8;
      *(_QWORD *)(v22 + 8 * v6 + 32) = v5;
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  else
  {
    v3 = MEMORY[0x1E0DEE9D8];
    v8 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (!v8)
    {
LABEL_25:
      swift_bridgeObjectRelease();
      sub_1BA229250(0, (unint64_t *)&qword_1ED5B2B70);
      sub_1BA226F18();
      v20 = sub_1BA2C21E0();
      swift_bridgeObjectRelease();
      v21 = swift_bridgeObjectRetain();
      sub_1BA227378(v21);
      return (char *)v20;
    }
  }
  result = (char *)swift_bridgeObjectRetain();
  v10 = 0;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v12 = *(_QWORD *)(v3 + 8 * v10 + 32);
    v13 = *(_QWORD *)(v12 + 16);
    v14 = *((_QWORD *)v11 + 2);
    v15 = v14 + v13;
    if (__OFADD__(v14, v13))
      break;
    swift_bridgeObjectRetain();
    result = (char *)swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)result && v15 <= *((_QWORD *)v11 + 3) >> 1)
    {
      if (*(_QWORD *)(v12 + 16))
        goto LABEL_20;
    }
    else
    {
      if (v14 <= v15)
        v16 = v14 + v13;
      else
        v16 = v14;
      result = sub_1BA22C18C(result, v16, 1, v11);
      v11 = result;
      if (*(_QWORD *)(v12 + 16))
      {
LABEL_20:
        if ((*((_QWORD *)v11 + 3) >> 1) - *((_QWORD *)v11 + 2) < v13)
          goto LABEL_28;
        result = (char *)swift_arrayInitWithCopy();
        if (v13)
        {
          v17 = *((_QWORD *)v11 + 2);
          v18 = __OFADD__(v17, v13);
          v19 = v17 + v13;
          if (v18)
            goto LABEL_29;
          *((_QWORD *)v11 + 2) = v19;
        }
        goto LABEL_10;
      }
    }
    if (v13)
      goto LABEL_27;
LABEL_10:
    result = (char *)swift_bridgeObjectRelease();
    if (v8 == ++v10)
    {
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

_QWORD *sub_1BA2271C0(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_1BA2271DC(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

_QWORD *sub_1BA2271DC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA22730C();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[v8 + 4])
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
  }
  else
  {
    sub_1BA22920C(0, (unint64_t *)&qword_1ED5B2B70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void sub_1BA22730C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B2CB0)
  {
    sub_1BA22920C(255, (unint64_t *)&qword_1ED5B2B70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BA2C269C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B2CB0);
  }
}

uint64_t sub_1BA227378(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  int64_t v10;

  v2 = *(_QWORD *)(result + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = result;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(v6 + 16))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v10 = v4 + v2;
  else
    v10 = v4;
  result = (uint64_t)sub_1BA22C18C((char *)result, v10, 1, (char *)v3);
  v3 = result;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  if ((*(_QWORD *)(v3 + 24) >> 1) - *(_QWORD *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v7 = *(_QWORD *)(v3 + 16);
  v8 = __OFADD__(v7, v2);
  v9 = v7 + v2;
  if (!v8)
  {
    *(_QWORD *)(v3 + 16) = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t destroy for DebugJournal(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA22C4F0(*(_QWORD *)(a1 + 48));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1BCCD9364](a1, v6, a5);
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_2(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

void *__swift_memcpy513_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x201uLL);
}

uint64_t sub_1BA227624@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return BannerAdViewLayoutAttributesFactory.createLayoutAttributes(model:options:cursor:)(a1, a2);
}

uint64_t BannerAdViewLayoutAttributesFactory.createLayoutAttributes(model:options:cursor:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  void (*v36)(double, double, double, double);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[2];
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[8];
  char v56;
  uint64_t v57;
  _BYTE v58[432];

  v4 = sub_1BA2C167C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v47 - v9;
  sub_1BA2C1688();
  v12 = v11;
  v14 = v13;
  sub_1BA2C1694();
  v15 = (void *)sub_1BA2C1670();
  v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v10, v4);
  objc_msgSend(v15, sel_displayScale);
  v18 = v17;

  sub_1BA2C1694();
  sub_1BA2C1664();
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v16(v8, v4);
  *(_QWORD *)&v48 = v12;
  *((_QWORD *)&v48 + 1) = v14;
  v49 = v18;
  v50 = v20;
  v51 = v22;
  v52 = v24;
  v53 = v26;
  v54 = 0x4044000000000000;
  BannerAdViewLayoutAttributesFactory.makeLayoutAttributes(for:with:)(a1, &v48, (uint64_t)v55);
  v27 = *(double *)v55;
  v28 = *(double *)&v55[1];
  v29 = *(double *)&v55[2];
  v30 = *(double *)&v55[3];
  v31 = v55[4];
  v32 = v55[5];
  v33 = v55[6];
  v34 = v55[7];
  v35 = v56;
  sub_1BA227BF4((uint64_t)&v57, (uint64_t)v58, (unint64_t *)&qword_1ED5B3258);
  v36 = (void (*)(double, double, double, double))sub_1BA2C16A0();
  v37 = v47[1];
  v36(v27, v28, v29, v30);
  if (v37)
    return swift_release();
  v43 = v38;
  v44 = v39;
  v45 = v40;
  v46 = v41;
  swift_release();
  *(_QWORD *)a2 = v43;
  *(_QWORD *)(a2 + 8) = v44;
  *(_QWORD *)(a2 + 16) = v45;
  *(_QWORD *)(a2 + 24) = v46;
  *(_QWORD *)(a2 + 32) = v31;
  *(_QWORD *)(a2 + 40) = v32;
  *(_QWORD *)(a2 + 48) = v33;
  *(_QWORD *)(a2 + 56) = v34;
  *(_BYTE *)(a2 + 64) = v35;
  return sub_1BA227BF4((uint64_t)v58, a2 + 72, (unint64_t *)&qword_1ED5B3258);
}

uint64_t BannerAdViewLayoutAttributesFactory.makeLayoutAttributes(for:with:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  _QWORD *v4;
  __int128 v7;
  __int128 v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  double MaxY;
  uint64_t v24;
  CGRect v26;
  char v27;
  char v28;
  _QWORD v29[53];
  _QWORD v30[53];
  _QWORD v31[5];
  _QWORD v32[4];
  char v33;
  _OWORD v34[3];
  __int128 v35;
  _BYTE v36[40];
  _BYTE v37[16];
  double v38;
  char v39;
  CGRect v40;
  CGRect v41;

  v4 = v3;
  v7 = a2[1];
  v34[0] = *a2;
  v34[1] = v7;
  v8 = a2[3];
  v34[2] = a2[2];
  v35 = v8;
  if (qword_1ED5B2D28 != -1)
    swift_once();
  sub_1BA227C94();
  swift_retain();
  sub_1BA2C14FC();
  swift_release();
  v9 = v30[0];
  v10 = v3[15];
  v11 = v3[16];
  __swift_project_boxed_opaque_existential_1(v3 + 12, v10);
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v13 + 8))(v30, v12, v13);
  v14 = v30[0];
  v15 = v30[1];
  swift_bridgeObjectRetain();
  sub_1BA228114((uint64_t)v30);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8))(v29, v14, v15, v10, v11);
  swift_bridgeObjectRelease();
  sub_1BA227BF4((uint64_t)v29, (uint64_t)v36, qword_1ED5B2FF0);
  v16 = *(double *)&v29[3];
  sub_1BA227BF4((uint64_t)v36, (uint64_t)v37, qword_1ED5B2FF0);
  if (v39)
    v17 = *((double *)&v35 + 1);
  else
    v17 = v16;
  if (v39)
    v18 = *((double *)&v35 + 1);
  else
    v18 = v38;
  sub_1BA227CD8(a1, (uint64_t)v36, (double *)v34, (uint64_t)v31, v18);
  v19 = *(double *)v31;
  v20 = *(double *)&v31[1];
  v21 = *(double *)&v31[2];
  v22 = *(double *)&v31[3];
  sub_1BA22899C(v4, a1, (uint64_t)v31, v9, (uint64_t)v34, (uint64_t)v30, v18);
  sub_1BA227BF4((uint64_t)v30, (uint64_t)v29, (unint64_t *)&qword_1ED5B3258);
  sub_1BA227BF4((uint64_t)v29, (uint64_t)v30, (unint64_t *)&qword_1ED5B3258);
  if (sub_1BA249C64((uint64_t)v30) == 1
    || (sub_1BA249C78(v30, &v26), sub_1BA24FFF4((uint64_t)&v26) >= 2))
  {
    sub_1BA25F4B8((uint64_t)v31, (uint64_t)&v26);
    MaxY = 0.0;
    if ((v27 & 1) != 0)
      goto LABEL_16;
    MaxY = CGRectGetMaxY(v26);
  }
  else
  {
    v40 = *(CGRect *)nullsub_1(&v26);
    MaxY = CGRectGetMaxY(v40);
    sub_1BA25F4B8((uint64_t)v31, (uint64_t)v32);
    if (v33 == 1)
      goto LABEL_16;
    v19 = *(double *)v32;
    v20 = *(double *)&v32[1];
    v21 = *(double *)&v32[2];
    v22 = *(double *)&v32[3];
  }
  v41.origin.x = v19;
  v41.origin.y = v20;
  v41.size.width = v21;
  v41.size.height = v22;
  if (CGRectGetHeight(v41) > 0.0)
    goto LABEL_19;
LABEL_16:
  if ((sub_1BA2C152C() & 1) != 0)
  {
    swift_retain();
    sub_1BA2C14FC();
    swift_release();
    if ((v28 & 1) != 0)
    {
      MaxY = v17 * 0.5 + MaxY;
      goto LABEL_20;
    }
LABEL_19:
    MaxY = v17 + MaxY;
  }
LABEL_20:
  v24 = *(_QWORD *)&v34[0];
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = v24;
  *(double *)(a3 + 24) = MaxY;
  sub_1BA25F4B8((uint64_t)v31, a3 + 32);
  return sub_1BA227BF4((uint64_t)v29, a3 + 72, (unint64_t *)&qword_1ED5B3258);
}

uint64_t sub_1BA227BF4(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v5;

  sub_1BA24A1EC(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1BA227C40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B2BF0)
  {
    type metadata accessor for CGRect(255);
    v0 = sub_1BA2C245C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B2BF0);
  }
}

unint64_t sub_1BA227C94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED5B27E0;
  if (!qword_1ED5B27E0)
  {
    v1 = type metadata accessor for BannerAdViewLayoutAttributesFactory();
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for BannerAdViewLayoutAttributesFactory, v1);
    atomic_store(result, (unint64_t *)&qword_1ED5B27E0);
  }
  return result;
}

uint64_t sub_1BA227CD8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, double *a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  double v12;
  char v13;
  double v14;
  double v15;
  _BYTE v16[88];
  double v17[2];
  _BYTE v18[232];

  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  (*(void (**)(double *__return_ptr, uint64_t, uint64_t))(v10 + 8))(v17, v9, v10);
  sub_1BA2283EC((uint64_t)v18, (uint64_t)v16);
  sub_1BA228114((uint64_t)v17);
  if (v16[80])
  {
    result = sub_1BA228524((uint64_t)v16);
LABEL_4:
    v12 = 0.0;
    v13 = 1;
    v14 = 0.0;
    a5 = 0.0;
    v15 = 0.0;
    goto LABEL_9;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  result = sub_1BA227BF4(a2, (uint64_t)v17, qword_1ED5B2FF0);
  if ((v18[16] & 1) != 0)
    goto LABEL_4;
  v13 = 0;
  v12 = v17[1];
  if (*a3 >= v17[0])
    v15 = v17[0];
  else
    v15 = *a3;
  v14 = (*a3 - v15) * 0.5;
LABEL_9:
  *(double *)a4 = v14;
  *(double *)(a4 + 8) = a5;
  *(double *)(a4 + 16) = v15;
  *(double *)(a4 + 24) = v12;
  *(_BYTE *)(a4 + 32) = v13;
  return result;
}

uint64_t BannerAdState.description.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int8x16_t v4;
  int8x16_t v5;
  int8x16_t v6;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  uint64_t v14;
  int8x16_t v15;
  int8x16_t v16;
  int8x16_t v17;
  uint64_t v18;
  char v19;

  sub_1BA2283EC(v0, (uint64_t)&v13);
  if (v19)
  {
    if (v19 == 1)
    {
      sub_1BA228630(&v13, &v8);
      v11 = 0;
      v12 = 0xE000000000000000;
      sub_1BA2C24C8();
      swift_bridgeObjectRelease();
      v11 = 0xD000000000000010;
      v12 = 0x80000001BA2CFF00;
      BannerAdState.Recover.description.getter();
      sub_1BA2C21C8();
      swift_bridgeObjectRelease();
      sub_1BA2C21C8();
      v1 = v11;
      sub_1BA2285BC((uint64_t)&v8);
    }
    else
    {
      v4.i64[0] = v13;
      v4.i64[1] = v18;
      v5 = vorrq_s8(v17, v15);
      v6 = vorrq_s8(v4, vorrq_s8(vextq_s8(v16, v16, 8uLL), vextq_s8(v5, v5, 8uLL)));
      if (*(_QWORD *)&vorr_s8(*(int8x8_t *)v6.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v6, v6, 8uLL)) | v14 | *((_QWORD *)&v13 + 1))
        return 0x676E69646E6570;
      else
        return 0x6C616974696E69;
    }
  }
  else
  {
    sub_1BA21D3D4(&v13, (uint64_t)&v8);
    v11 = 0;
    v12 = 0xE000000000000000;
    sub_1BA2C24C8();
    swift_bridgeObjectRelease();
    v11 = 0xD000000000000017;
    v12 = 0x80000001BA2CFEE0;
    v2 = v9;
    v3 = v10;
    __swift_project_boxed_opaque_existential_1(&v8, v9);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
    sub_1BA2C21C8();
    swift_bridgeObjectRelease();
    sub_1BA2C21C8();
    v1 = v11;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
  }
  return v1;
}

uint64_t _s7NewsAds8BannerAdV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  char v5;
  char v6;
  char v7;
  _QWORD v9[31];
  _BYTE v10[104];
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[16];
  uint64_t v14;
  _BYTE v15[16];
  uint64_t v16;

  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_1BA228148((uint64_t)a1, (uint64_t)v15);
    sub_1BA228148((uint64_t)a2, (uint64_t)v13);
  }
  else
  {
    v5 = sub_1BA2C26A8();
    sub_1BA228148((uint64_t)a1, (uint64_t)v15);
    sub_1BA228148((uint64_t)a2, (uint64_t)v13);
    if ((v5 & 1) == 0)
    {
      sub_1BA228114((uint64_t)v13);
      sub_1BA228114((uint64_t)v15);
      sub_1BA228148((uint64_t)a1, (uint64_t)v10);
      sub_1BA228148((uint64_t)a2, (uint64_t)v9);
LABEL_12:
      v7 = 0;
      goto LABEL_14;
    }
  }
  v6 = _s7NewsAds13BannerAdStateO2eeoiySbAC_ACtFZ_0((uint64_t)&v16, (uint64_t)&v14);
  sub_1BA228114((uint64_t)v13);
  sub_1BA228114((uint64_t)v15);
  sub_1BA228148((uint64_t)a1, (uint64_t)v10);
  sub_1BA228148((uint64_t)a2, (uint64_t)v9);
  if ((v6 & 1) == 0)
    goto LABEL_12;
  if (v11 == v9[13] && v12 == v9[14])
    v7 = 1;
  else
    v7 = sub_1BA2C26A8();
LABEL_14:
  sub_1BA228114((uint64_t)v10);
  sub_1BA228114((uint64_t)v9);
  return v7 & 1;
}

uint64_t sub_1BA228114(uint64_t a1)
{
  destroy for BannerAd(a1);
  return a1;
}

uint64_t sub_1BA228148(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for BannerAd(a2, a1);
  return a2;
}

uint64_t _s7NewsAds13BannerAdStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v3;
  int8x16_t v4;
  int8x16_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int8x16_t v15;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  int8x16_t v26;
  int8x16_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  int8x16_t v32;
  int8x16_t v33;
  int8x16_t v34;
  int8x16_t v35;
  char v36;

  sub_1BA2283EC(a1, (uint64_t)&v23);
  sub_1BA2283EC(a2, (uint64_t)&v31);
  if (v30)
  {
    if (v30 != 1)
    {
      v4 = vorrq_s8(v26, v27);
      if ((unint64_t)v23 | *(_QWORD *)&vorr_s8(*(int8x8_t *)v4.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL)) | v28 | v29 | *((_QWORD *)&v23 + 1) | v24 | v25)
      {
        if (v36 != 2)
          goto LABEL_20;
        if ((_QWORD)v31 != 1)
          goto LABEL_20;
        v5 = vorrq_s8(vorrq_s8(v32, v34), vorrq_s8(v33, v35));
        if (*(_QWORD *)&vorr_s8(*(int8x8_t *)v5.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v5, v5, 8uLL)) | *((_QWORD *)&v31 + 1))
          goto LABEL_20;
      }
      else
      {
        if (v36 != 2)
          goto LABEL_20;
        v15 = vorrq_s8(vorrq_s8(v32, v34), vorrq_s8(v33, v35));
        if (*(_QWORD *)&vorr_s8(*(int8x8_t *)v15.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v15, v15, 8uLL)) | *((_QWORD *)&v31 + 1) | (unint64_t)v31)
          goto LABEL_20;
      }
      v3 = 1;
      return v3 & 1;
    }
    if (v36 == 1)
    {
      sub_1BA228630(&v23, &v20);
      sub_1BA228630(&v31, &v17);
      v3 = _s7NewsAds13BannerAdStateO7RecoverO2eeoiySbAE_AEtFZ_0((uint64_t)&v20, (uint64_t)&v17);
      sub_1BA2285BC((uint64_t)&v17);
      sub_1BA2285BC((uint64_t)&v20);
      return v3 & 1;
    }
    sub_1BA2285BC((uint64_t)&v23);
LABEL_20:
    sub_1BA228524((uint64_t)&v31);
    v3 = 0;
    return v3 & 1;
  }
  if (v36)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
    goto LABEL_20;
  }
  sub_1BA21D3D4(&v23, (uint64_t)&v20);
  sub_1BA21D3D4(&v31, (uint64_t)&v17);
  v6 = v21;
  v7 = v22;
  __swift_project_boxed_opaque_existential_1(&v20, v21);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  v10 = v9;
  v11 = v18;
  v12 = v19;
  __swift_project_boxed_opaque_existential_1(&v17, v18);
  if (v8 == (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12) && v10 == v13)
    v3 = 1;
  else
    v3 = sub_1BA2C26A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  return v3 & 1;
}

uint64_t sub_1BA2283EC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for BannerAdState(a2, a1);
  return a2;
}

uint64_t initializeWithCopy for BannerAdState(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  __int128 v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;

  v4 = *(unsigned __int8 *)(a2 + 80);
  if (v4 >= 2)
    v4 = *(_DWORD *)a2 + 2;
  if (v4 == 1)
  {
    v6 = *(_QWORD *)(a2 + 24);
    if (v6 >= 2)
    {
      v11 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = v11;
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      v12 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 64) = v12;
      (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 40, a2 + 40);
    }
    else
    {
      v7 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v7;
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
    }
    *(_BYTE *)(a1 + 80) = 1;
  }
  else if (v4)
  {
    v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    *(_BYTE *)(a1 + 80) = 0;
  }
  return a1;
}

uint64_t sub_1BA228524(uint64_t a1)
{
  destroy for BannerAdState(a1);
  return a1;
}

uint64_t destroy for BannerAdState(uint64_t result)
{
  uint64_t v1;
  unsigned int v2;

  v1 = result;
  v2 = *(unsigned __int8 *)(result + 80);
  if (v2 >= 2)
    v2 = *(_DWORD *)result + 2;
  if (!v2)
    return __swift_destroy_boxed_opaque_existential_1(v1);
  if (v2 == 1 && *(_QWORD *)(result + 24) >= 2uLL)
  {
    __swift_destroy_boxed_opaque_existential_1(result);
    v1 += 40;
    return __swift_destroy_boxed_opaque_existential_1(v1);
  }
  return result;
}

uint64_t sub_1BA2285BC(uint64_t a1)
{
  destroy for BannerAdState.Recover(a1);
  return a1;
}

uint64_t destroy for BannerAdState.Recover(uint64_t result)
{
  uint64_t v1;

  if (*(_QWORD *)(result + 24) >= 0xFFFFFFFFuLL)
  {
    v1 = result;
    __swift_destroy_boxed_opaque_existential_1(result);
    return __swift_destroy_boxed_opaque_existential_1(v1 + 40);
  }
  return result;
}

_OWORD *sub_1BA228630(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  *a2 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[4];
  a2[3] = a1[3];
  a2[4] = v4;
  a2[1] = v2;
  a2[2] = v3;
  return a2;
}

uint64_t _s7NewsAds13BannerAdStateO7RecoverO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[40];
  _BYTE v30[40];
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39[2];
  __int128 v40;
  unint64_t v41;
  __int128 v42;

  sub_1BA2288DC(a1, (uint64_t)&v37);
  sub_1BA2288DC(a2, (uint64_t)&v40);
  if (v38 != 1)
  {
    if (!v38)
    {
      if (!v41)
        goto LABEL_6;
LABEL_9:
      sub_1BA2285BC((uint64_t)&v40);
      v3 = 0;
      return v3 & 1;
    }
    if (v41 < 2)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v37);
      goto LABEL_9;
    }
    sub_1BA21D3D4(&v37, (uint64_t)v34);
    sub_1BA21D3D4(&v40, (uint64_t)v31);
    sub_1BA21D3D4(v39, (uint64_t)v30);
    sub_1BA21D3D4(&v42, (uint64_t)v29);
    v4 = v35;
    v5 = v36;
    __swift_project_boxed_opaque_existential_1(v34, v35);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
    v8 = v7;
    v9 = v32;
    v10 = v33;
    __swift_project_boxed_opaque_existential_1(v31, v32);
    if (v6 == (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10) && v8 == v11)
    {
      swift_bridgeObjectRelease_n();
      sub_1BA22068C((uint64_t)v30, (uint64_t)v26);
      sub_1BA22068C((uint64_t)v29, (uint64_t)v23);
    }
    else
    {
      v13 = sub_1BA2C26A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA22068C((uint64_t)v30, (uint64_t)v26);
      sub_1BA22068C((uint64_t)v29, (uint64_t)v23);
      v3 = 0;
      if ((v13 & 1) == 0)
      {
LABEL_22:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
        return v3 & 1;
      }
    }
    v14 = v27;
    v15 = v28;
    __swift_project_boxed_opaque_existential_1(v26, v27);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
    v18 = v17;
    v19 = v24;
    v20 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    if (v16 == (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20) && v18 == v21)
      v3 = 1;
    else
      v3 = sub_1BA2C26A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  if (v41 != 1)
    goto LABEL_9;
LABEL_6:
  v3 = 1;
  return v3 & 1;
}

uint64_t sub_1BA2288DC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for BannerAdState.Recover(a2, a1);
  return a2;
}

uint64_t initializeWithCopy for BannerAdState.Recover(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4 < 0xFFFFFFFF)
  {
    v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
  }
  else
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
    v6 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 64) = v6;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 40, a2 + 40);
  }
  return a1;
}

uint64_t sub_1BA22899C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  _QWORD *v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v24;
  _BYTE v25[424];
  _OWORD v26[3];
  uint64_t v27;
  _OWORD v28[9];
  _QWORD v29[13];
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _QWORD v48[53];
  CGRect v49;
  char v50;

  if (qword_1ED5B2D28 != -1)
    swift_once();
  if ((sub_1BA2C152C() & 1) != 0)
  {
    v14 = a1 + 7;
    v15 = a1[10];
    v16 = a1[11];
    v24 = v15;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    v18 = a2[3];
    v17 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v18);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v17 + 8))(v29, v18, v17);
    v45 = v36;
    v46 = v37;
    v47 = v38;
    v41 = v32;
    v42 = v33;
    v43 = v34;
    v44 = v35;
    v39 = v30;
    v40 = v31;
    sub_1BA243268((uint64_t)&v39);
    sub_1BA228114((uint64_t)v29);
    v28[6] = v45;
    v28[7] = v46;
    v28[8] = v47;
    v28[2] = v41;
    v28[3] = v42;
    v28[4] = v43;
    v28[5] = v44;
    v28[0] = v39;
    v28[1] = v40;
    sub_1BA25F4B8(a3, (uint64_t)&v49);
    if ((v50 & 1) != 0)
    {
      if ((a4 & 1) != 0)
        v19.n128_f64[0] = a7 * 0.5;
      else
        v19.n128_f64[0] = a7;
    }
    else
    {
      v19.n128_u64[0] = CGRectGetMaxY(v49);
    }
    v21 = *(_QWORD *)(a5 + 48);
    v22 = *(_OWORD *)(a5 + 16);
    v26[0] = *(_OWORD *)a5;
    v26[1] = v22;
    v26[2] = *(_OWORD *)(a5 + 32);
    v27 = v21;
    (*(void (**)(_QWORD *__return_ptr, _OWORD *, _OWORD *, uint64_t, uint64_t, double, __n128))(v16 + 8))(v48, v28, v26, v24, v16, 0.0, v19);
    sub_1BA249CB4((uint64_t)&v39);
    sub_1BA249C78(v48, v25);
    sub_1BA249C78(v25, v26);
    nullsub_1(v26);
    v20 = v26;
  }
  else
  {
    sub_1BA25F508((uint64_t)v48);
    v20 = v48;
  }
  return sub_1BA227BF4((uint64_t)v20, a6, (unint64_t *)&qword_1ED5B3258);
}

uint64_t sub_1BA228BD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return BannerAdLayoutStore.layout(for:)(a1, a2, a3);
}

uint64_t BannerAdLayoutStore.layout(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BA2C18C8();
  swift_bridgeObjectRelease();
  swift_release();
  if ((v18 & 1) != 0)
  {
    if (qword_1ED5B2DB0 != -1)
      swift_once();
    v6 = (void *)qword_1ED5B2888;
    sub_1BA22D5D8();
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1BA2C37D0;
    *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v7 + 64) = sub_1BA2291C8();
    *(_QWORD *)(v7 + 32) = a1;
    *(_QWORD *)(v7 + 40) = a2;
    swift_bridgeObjectRetain();
    v8 = v6;
    sub_1BA2C239C();
    sub_1BA2C1EB0();
    v9 = v17;
  }
  else
  {
    if (qword_1ED5B2DB0 != -1)
      swift_once();
    v10 = (void *)qword_1ED5B2888;
    sub_1BA22D5D8();
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1BA2C37C0;
    *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
    v12 = sub_1BA2291C8();
    *(_QWORD *)(v11 + 64) = v12;
    *(_QWORD *)(v11 + 32) = a1;
    *(_QWORD *)(v11 + 40) = a2;
    v9 = v17;
    swift_bridgeObjectRetain();
    v8 = v10;
    sub_1BA2C2570();
    *(_QWORD *)(v11 + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v11 + 104) = v12;
    *(_QWORD *)(v11 + 72) = 0;
    *(_QWORD *)(v11 + 80) = 0xE000000000000000;
    sub_1BA2C239C();
    sub_1BA2C1EB0();
  }

  result = swift_bridgeObjectRelease();
  *(_QWORD *)a3 = v14;
  *(_QWORD *)(a3 + 8) = v15;
  *(_QWORD *)(a3 + 16) = v16;
  *(_QWORD *)(a3 + 24) = v9;
  *(_BYTE *)(a3 + 32) = v18;
  return result;
}

_OWORD *sub_1BA228E3C(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1BA229E28(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        return sub_1BA22E0C4(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1BA2A2A00();
      goto LABEL_7;
    }
    sub_1BA22DDB4(v15, a4 & 1);
    v21 = sub_1BA229E28(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BA22D834(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_1BA2C26D8();
  __break(1u);
  return result;
}

uint64_t AdContextBuilder.pushData<A>(_:namespace:)(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];
  char v23;
  _QWORD v24[4];

  v4 = v3;
  v6 = *a2;
  v7 = a2[1];
  v8 = *((_BYTE *)a2 + 16);
  v24[3] = swift_getMetatypeMetadata();
  v24[0] = a3;
  v22[0] = v6;
  v22[1] = v7;
  v23 = v8;
  v9 = sub_1BA229A8C(v24, (uint64_t)v22);
  v11 = v10;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v12 = (void *)qword_1ED5B2888;
  sub_1BA2228E8(0, (unint64_t *)&qword_1ED5B2CC0, (unint64_t *)&qword_1ED5B2CD8, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BA2C37C0;
  v14 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
  v15 = sub_1BA2291C8();
  *(_QWORD *)(v13 + 64) = v15;
  *(_QWORD *)(v13 + 32) = v9;
  *(_QWORD *)(v13 + 40) = v11;
  v16 = v12;
  swift_bridgeObjectRetain();
  v24[0] = AdContextBuilder.path.getter();
  sub_1BA22920C(0, (unint64_t *)&qword_1ED5B2B70, v14, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA229294();
  v17 = sub_1BA2C2120();
  v19 = v18;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 96) = v14;
  *(_QWORD *)(v13 + 104) = v15;
  *(_QWORD *)(v13 + 72) = v17;
  *(_QWORD *)(v13 + 80) = v19;
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  v20 = swift_bridgeObjectRelease();
  v24[0] = *(_QWORD *)(v4 + 40);
  MEMORY[0x1E0C80A78](v20);
  sub_1BA2C1724();
  swift_retain();
  sub_1BA2C1880();
  swift_bridgeObjectRelease();
  return swift_release();
}

unint64_t sub_1BA2291C8()
{
  unint64_t result;

  result = qword_1ED5B2B50;
  if (!qword_1ED5B2B50)
  {
    result = MEMORY[0x1BCCD93D0](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED5B2B50);
  }
  return result;
}

void sub_1BA22920C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, a3);
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1BA229250(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BA2C22F4();
    if (!v4)
      atomic_store(v3, a2);
  }
}

unint64_t sub_1BA229294()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED5B2B78;
  if (!qword_1ED5B2B78)
  {
    sub_1BA234914();
    result = MEMORY[0x1BCCD93D0](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1ED5B2B78);
  }
  return result;
}

uint64_t sub_1BA2292DC(__int128 *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1BA229E28(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7] + 40 * v12;
        __swift_destroy_boxed_opaque_existential_1(v19);
        return sub_1BA21D3D4(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1BA2A22D4();
      goto LABEL_7;
    }
    sub_1BA22D89C(v15, a4 & 1);
    v21 = sub_1BA229E28(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BA22A1E4(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1BA2C26D8();
  __break(1u);
  return result;
}

uint64_t sub_1BA229410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  int v18;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _QWORD v23[2];
  char v24;

  *((_QWORD *)&v21 + 1) = swift_getMetatypeMetadata();
  *(_QWORD *)&v20 = a5;
  v23[0] = a2;
  v23[1] = a3;
  v24 = a4;
  v12 = sub_1BA229A8C(&v20, (uint64_t)v23);
  v14 = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  swift_beginAccess();
  v15 = *(_QWORD *)(a1 + 48);
  if (*(_QWORD *)(v15 + 16) && (v16 = sub_1BA229E28(v12, v14), (v17 & 1) != 0))
  {
    sub_1BA22068C(*(_QWORD *)(v15 + 56) + 40 * v16, (uint64_t)&v20);
  }
  else
  {
    v22 = 0;
    v20 = 0u;
    v21 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_1BA2228E8(0, &qword_1ED5B1EC0, (unint64_t *)&qword_1ED5B1EB8, (uint64_t)&protocol descriptor for AdContextDataType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v18 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 56))(a6, v18 ^ 1u, 1, a5);
}

char *AdContextBuilder.data<A>(for:namespace:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  char *result;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t inited;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[2];
  char v65;
  _QWORD v66[2];
  char v67;
  uint64_t MetatypeMetadata;
  uint64_t v69;

  v5 = v4;
  v55 = a1;
  v59 = a4;
  v69 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v56 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BA2C245C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v50 - v14;
  v16 = *a2;
  v17 = a2[1];
  LODWORD(a2) = *((unsigned __int8 *)a2 + 16);
  MetatypeMetadata = swift_getMetatypeMetadata();
  v66[0] = a3;
  v54 = v16;
  v64[0] = v16;
  v64[1] = v17;
  v53 = v17;
  v52 = (int)a2;
  v65 = (char)a2;
  v18 = sub_1BA229A8C(v66, (uint64_t)v64);
  v20 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
  v66[0] = *(_QWORD *)(v5 + 40);
  v60 = a3;
  v61 = v5;
  v57 = v5;
  v51 = v18;
  v62 = v18;
  v63 = v20;
  sub_1BA2C1724();
  swift_retain();
  sub_1BA2C1880();
  v21 = v69;
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48))(v13, 1, a3);
  v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  if (v22 != 1)
  {
    v23(v15, v9);
    swift_bridgeObjectRelease();
    v26 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v27 = v56;
    v26(v56, v13, a3);
    return (char *)((uint64_t (*)(uint64_t, char *, uint64_t))v26)(v59, v27, a3);
  }
  v69 = v20;
  v56 = v15;
  v23(v13, v9);
  v24 = v57;
  if (*(_QWORD *)(v57 + 16))
  {
    swift_retain();
    swift_bridgeObjectRelease();
    v66[0] = v54;
    v66[1] = v53;
    v67 = v52;
    AdContextBuilder.data<A>(for:namespace:)(v55, v66, a3);
    v23(v56, v9);
    return (char *)swift_release();
  }
  sub_1BA22920C(0, &qword_1ED5B3610, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BA2C35D0;
  *(_QWORD *)(inited + 32) = v24;
  v66[0] = inited;
  sub_1BA2C2288();
  v29 = v66[0];
  swift_retain();
  v30 = sub_1BA232448();
  v66[0] = v29;
  sub_1BA231408(v30);
  v31 = v66[0];
  if (!(v66[0] >> 62))
  {
    v32 = *(_QWORD *)((v66[0] & 0xFFFFFFFFFFFFF8) + 0x10);
    v33 = v69;
    if (v32)
      goto LABEL_7;
LABEL_20:
    swift_bridgeObjectRelease();
    v34 = MEMORY[0x1E0DEE9D8];
LABEL_21:
    sub_1BA266064();
    swift_allocError();
    *v49 = v51;
    v49[1] = v33;
    v49[2] = v34;
    swift_willThrow();
    return (char *)((uint64_t (*)(char *, uint64_t))v23)(v56, v9);
  }
  swift_bridgeObjectRetain();
  v32 = sub_1BA2C2594();
  swift_bridgeObjectRelease();
  v33 = v69;
  if (!v32)
    goto LABEL_20;
LABEL_7:
  v64[0] = MEMORY[0x1E0DEE9D8];
  result = sub_1BA23110C(0, v32 & ~(v32 >> 63), 0);
  if ((v32 & 0x8000000000000000) == 0)
  {
    v58 = v23;
    v59 = v9;
    v34 = v64[0];
    if ((v31 & 0xC000000000000001) != 0)
    {
      v35 = 0;
      do
      {
        v36 = MEMORY[0x1BCCD8C98](v35, v31);
        v37 = AdContextBuilder.path.getter();
        swift_beginAccess();
        v38 = *(_QWORD *)(v36 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        v64[0] = v34;
        v40 = *(_QWORD *)(v34 + 16);
        v39 = *(_QWORD *)(v34 + 24);
        if (v40 >= v39 >> 1)
        {
          sub_1BA23110C((char *)(v39 > 1), v40 + 1, 1);
          v34 = v64[0];
        }
        ++v35;
        *(_QWORD *)(v34 + 16) = v40 + 1;
        v41 = v34 + 16 * v40;
        *(_QWORD *)(v41 + 32) = v37;
        *(_QWORD *)(v41 + 40) = v38;
      }
      while (v32 != v35);
    }
    else
    {
      v42 = 0;
      do
      {
        v43 = *(_QWORD *)(v31 + 8 * v42 + 32);
        swift_retain();
        v44 = AdContextBuilder.path.getter();
        swift_beginAccess();
        v45 = *(_QWORD *)(v43 + 48);
        swift_bridgeObjectRetain();
        swift_release();
        v64[0] = v34;
        v47 = *(_QWORD *)(v34 + 16);
        v46 = *(_QWORD *)(v34 + 24);
        if (v47 >= v46 >> 1)
        {
          sub_1BA23110C((char *)(v46 > 1), v47 + 1, 1);
          v34 = v64[0];
        }
        ++v42;
        *(_QWORD *)(v34 + 16) = v47 + 1;
        v48 = v34 + 16 * v47;
        *(_QWORD *)(v48 + 32) = v44;
        *(_QWORD *)(v48 + 40) = v45;
      }
      while (v32 != v42);
    }
    swift_bridgeObjectRelease();
    v23 = v58;
    v9 = v59;
    v33 = v69;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA229A8C(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t result;
  uint64_t v6;

  v3 = *(_QWORD *)a2;
  v2 = *(_QWORD *)(a2 + 8);
  v4 = *(unsigned __int8 *)(a2 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_getDynamicType();
  result = sub_1BA2C2780();
  v6 = result;
  if (v4 != 255)
  {
    if ((v4 & 1) != 0)
    {
      sub_1BA23E568(v3, v2, 1);
    }
    else
    {
      sub_1BA2C21C8();
      swift_bridgeObjectRelease();
      sub_1BA22A17C(v3, v2, v4);
    }
    sub_1BA2C21C8();
    swift_bridgeObjectRelease();
    sub_1BA2C21C8();
    sub_1BA2C21C8();
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t destroy for FeedGroupAdData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA229C2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v13;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  swift_beginAccess();
  v10 = *(_QWORD *)(a1 + 48);
  if (*(_QWORD *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BA229E28(a2, a3);
    if ((v12 & 1) != 0)
    {
      sub_1BA22068C(*(_QWORD *)(v10 + 56) + 40 * v11, (uint64_t)&v15);
    }
    else
    {
      v17 = 0;
      v15 = 0u;
      v16 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = 0;
    v15 = 0u;
    v16 = 0u;
  }
  swift_endAccess();
  sub_1BA2228E8(0, &qword_1ED5B1EC0, (unint64_t *)&qword_1ED5B1EB8, (uint64_t)&protocol descriptor for AdContextDataType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v13 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 56))(a5, v13 ^ 1u, 1, a4);
}

unint64_t sub_1BA229D48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1BA2C26A8() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1BA2C26A8() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1BA229E28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA2C2720();
  sub_1BA2C21A4();
  v4 = sub_1BA2C2738();
  return sub_1BA229D48(a1, a2, v4);
}

uint64_t getEnumTagSinglePayload for FeedAdData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1BA229ED4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t getEnumTagSinglePayload for FeedGroupAdData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s7NewsAds14ReferralAdDataV6OriginOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BA229F78 + 4 * byte_1BA2C8FA9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BA229FAC + 4 * byte_1BA2C8FA4[v4]))();
}

uint64_t sub_1BA229FAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA229FB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA229FBCLL);
  return result;
}

uint64_t sub_1BA229FC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA229FD0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BA229FD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA229FDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for AdPreview(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t _s7NewsAds9AppAdDataV18ContentEnvironmentOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1BA22A074 + 4 * byte_1BA2CC66F[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1BA22A0A8 + 4 * byte_1BA2CC66A[v4]))();
}

uint64_t sub_1BA22A0A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA22A0B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA22A0B8);
  return result;
}

uint64_t sub_1BA22A0C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA22A0CCLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1BA22A0D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA22A0D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t _s7NewsAds9AppAdDataV18ContentEnvironmentOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_1BA22A17C(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_1BA229ED4(result, a2, a3 & 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedGroupAdData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1BA22A1E4(unint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, _QWORD *a5)
{
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1BA21D3D4(a4, a5[7] + 40 * a1);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_1BA22A250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *boxed_opaque_existential_2;
  uint64_t v12[5];

  v12[3] = a5;
  v12[4] = a6;
  boxed_opaque_existential_2 = __swift_allocate_boxed_opaque_existential_2(v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(boxed_opaque_existential_2, a4, a5);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BA22A370((uint64_t)v12, a2, a3);
  return swift_endAccess();
}

uint64_t initializeWithCopy for FeedGroupAdData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA22A370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  __int128 v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1BA21D3D4((__int128 *)a1, (uint64_t)v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = 0x8000000000000000;
    sub_1BA2292DC(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA2228A4(a1, &qword_1ED5B1EC0, (unint64_t *)&qword_1ED5B1EB8, (uint64_t)&protocol descriptor for AdContextDataType);
    sub_1BA2AD880(a2, a3, (uint64_t)v9);
    swift_bridgeObjectRelease();
    return sub_1BA2228A4((uint64_t)v9, &qword_1ED5B1EC0, (unint64_t *)&qword_1ED5B1EB8, (uint64_t)&protocol descriptor for AdContextDataType);
  }
}

void sub_1BA22A46C()
{
  type metadata accessor for JournalEntry();
}

_QWORD *sub_1BA22A91C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  unsigned int v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  void (*v49)(unint64_t, unint64_t, uint64_t);
  unint64_t v50;
  unint64_t v51;
  void (*v52)(unint64_t, unint64_t, uint64_t);
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *__dst;
  _QWORD *v65;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = sub_1BA2C1424();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v65 = a1;
  v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  swift_bridgeObjectRetain();
  v12(v10, v11, v7);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v10) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  v14[1] = v15[1];
  v16 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = (unint64_t *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  v18 = *v17;
  v19 = v17[1];
  v20 = v17[2];
  v21 = v17[3];
  swift_bridgeObjectRetain();
  sub_1BA22C6F4(v18);
  *v16 = v18;
  v16[1] = v19;
  v16[2] = v20;
  v16[3] = v21;
  v22 = (_QWORD *)(((unint64_t)v16 + 39) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)(((unint64_t)v17 + 39) & 0xFFFFFFFFFFFFFFF8);
  *v22 = *v23;
  v22[1] = v23[1];
  v24 = (_QWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFF8);
  v25 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFF8);
  *v24 = *v25;
  v26 = ((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  v27 = ((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  v28 = *(_OWORD *)v27;
  v29 = *(_OWORD *)(v27 + 16);
  *(_BYTE *)(v26 + 32) = *(_BYTE *)(v27 + 32);
  *(_OWORD *)v26 = v28;
  *(_OWORD *)(v26 + 16) = v29;
  v61 = *(_QWORD *)(a3 + 16);
  v62 = *(_QWORD *)(a3 + 24);
  v30 = *(_QWORD *)(v61 - 8);
  v31 = *(unsigned int *)(v30 + 84);
  v32 = *(_DWORD *)(v30 + 80) & 0xF8;
  v33 = *(_QWORD *)(v62 - 8);
  v34 = *(unsigned __int8 *)(v33 + 80);
  v35 = v34 | v32 | 7;
  __dst = (_QWORD *)((v35 + 33 + v26) & ~v35);
  v36 = (_QWORD *)((v35 + 33 + v27) & ~v35);
  if (v31 <= 0x7FFFFFFF)
    v37 = 0x7FFFFFFF;
  else
    v37 = *(_DWORD *)(v30 + 84);
  v38 = *(unsigned int *)(v33 + 84);
  if (v38 <= v37)
    v39 = v37;
  else
    v39 = *(_DWORD *)(v33 + 84);
  v40 = ~(v32 | 7);
  v41 = v32 + 23;
  v56 = *(_QWORD *)(v30 + 64) + 7;
  v57 = *(_QWORD *)(v61 - 8);
  v59 = v32 | 7;
  v60 = ~v34;
  v58 = *(_QWORD *)(v62 - 8);
  v63 = *(_QWORD *)(v33 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v39 == 0x7FFFFFFF)
  {
    v42 = v36[1];
    if (v42 >= 0xFFFFFFFF)
      LODWORD(v42) = -1;
    v43 = v42 + 1;
  }
  else
  {
    v44 = ((unint64_t)v36 + v41) & v40;
    if (v37 < v38)
    {
      v45 = (v56 & 0xFFFFFFFFFFFFFFF8) + v34 + 8;
      v43 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v58 + 48))((v45 + v44) & v60, v38, v62);
      goto LABEL_15;
    }
    v43 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v57 + 48))(v44, v31, v61);
  }
  v45 = (v56 & 0xFFFFFFFFFFFFFFF8) + v34 + 8;
LABEL_15:
  v46 = v63 + 7;
  if (v43)
  {
    memcpy(__dst, v36, ((v46 + ((v45 + (v41 & ~v59)) & ~v34)) & 0xFFFFFFFFFFFFFFF8) + 16);
  }
  else
  {
    *__dst = *v36;
    __dst[1] = v36[1];
    v47 = ((unint64_t)__dst + v41) & v40;
    v48 = ((unint64_t)v36 + v41) & v40;
    v49 = *(void (**)(unint64_t, unint64_t, uint64_t))(v57 + 16);
    swift_bridgeObjectRetain();
    v49(v47, v48, v61);
    *(_QWORD *)((v56 + v47) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v56 + v48) & 0xFFFFFFFFFFFFF8);
    v50 = (v45 + v47) & v60;
    v51 = (v45 + v48) & v60;
    v52 = *(void (**)(unint64_t, unint64_t, uint64_t))(v58 + 16);
    swift_bridgeObjectRetain();
    v52(v50, v51, v62);
    v53 = (_QWORD *)((v46 + v50) & 0xFFFFFFFFFFFFFFF8);
    v54 = (_QWORD *)((v46 + v51) & 0xFFFFFFFFFFFFFFF8);
    *v53 = *v54;
    v53[1] = v54[1];
    swift_bridgeObjectRetain();
  }
  return v65;
}

_QWORD *sub_1BA22AC5C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  void (*v14)(unint64_t, unint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  void (*v22)(unint64_t, unint64_t, uint64_t);
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80) & 0xF8;
  v9 = v8 + 23;
  v10 = (unint64_t)a1 + v8 + 23;
  v11 = ~v8 & 0xFFFFFFFFFFFFFFF8;
  v12 = v10 & v11;
  v13 = ((unint64_t)a2 + v9) & v11;
  v14 = *(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16);
  swift_bridgeObjectRetain();
  v14(v12, v13, v6);
  v15 = *(_QWORD *)(v7 + 64) + 7;
  *(_QWORD *)((v15 + v12) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v15 + v13) & 0xFFFFFFFFFFFFF8);
  v16 = *(_QWORD *)(a3 + 24);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = (v15 & 0xFFFFFFFFFFFFFFF8) + v18 + 8;
  v20 = (v19 + v12) & ~v18;
  v21 = (v19 + v13) & ~v18;
  v22 = *(void (**)(unint64_t, unint64_t, uint64_t))(v17 + 16);
  swift_bridgeObjectRetain();
  v22(v20, v21, v16);
  v23 = *(_QWORD *)(v17 + 64) + 7;
  v24 = (_QWORD *)((v23 + v20) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_QWORD *)((v23 + v21) & 0xFFFFFFFFFFFFFFF8);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *initializeWithCopy for PrerollAdPlacement(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BA2C1AC0();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  return a1;
}

void sub_1BA22AE04(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[28];
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v12 = a2;
  v13 = a4;
  v11[26] = *(_QWORD *)(a3 - 8);
  v4 = MEMORY[0x1E0C80A78](a1);
  v11[21] = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v11[20] = (char *)v11 - v6;
  v14 = v7;
  v15 = v8;
  v16 = v9;
  v17 = v10;
  type metadata accessor for AdRequest();
}

void sub_1BA22BBC4()
{
  sub_1BA22CE58();
}

uint64_t sub_1BA22BCB4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  unint64_t v17;
  uint64_t v18;

  v3 = *(_QWORD *)(a3 + 24);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_DWORD *)(v4 + 84) <= 0x7FFFFFFFu)
    v5 = 0x7FFFFFFF;
  else
    v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(v3 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = v5;
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (!a2)
    return 0;
  v9 = *(_DWORD *)(v4 + 80) & 0xF8;
  v10 = v9 | 7;
  v11 = *(unsigned __int8 *)(v6 + 80);
  v12 = ((*(_QWORD *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + v11 + 8;
  if (v8 >= a2)
  {
    if (v8 == 0x7FFFFFFF)
    {
      v17 = *(_QWORD *)(a1 + 8);
      if (v17 >= 0xFFFFFFFF)
        LODWORD(v17) = -1;
      return (v17 + 1);
    }
    else
    {
      v18 = (a1 + v10 + 16) & ~v10;
      if (v5 >= v7)
        return (*(uint64_t (**)(uint64_t))(v4 + 48))(v18);
      else
        return (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v6 + 48))((v12 + v18) & ~v11, *(unsigned int *)(v6 + 84), v3);
    }
  }
  else
  {
    if (((((*(_QWORD *)(v6 + 64) + ((v12 + ((v9 + 23) & ~v10)) & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v13 = 2;
    else
      v13 = a2 - v8 + 1;
    if (v13 >= 0x10000)
      v14 = 4;
    else
      v14 = 2;
    if (v13 < 0x100)
      v14 = 1;
    if (v13 >= 2)
      v15 = v14;
    else
      v15 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BA22BD80 + 4 * byte_1BA2CB558[v15]))();
  }
}

void type metadata accessor for JournalEntry()
{
  JUMPOUT(0x1BCCD9364);
}

void type metadata accessor for AdRequest()
{
  JUMPOUT(0x1BCCD9364);
}

uint64_t sub_1BA22BE4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;

  swift_bridgeObjectRelease();
  v4 = sub_1BA2C1424();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (a1 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v6, v4);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  v8 = (unint64_t *)((v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  sub_1BA22C4F0(*v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = ((((((unint64_t)v8 + 39) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 80) & 0xF8 | 7;
  v14 = *(_QWORD *)(v10 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (v9 + (v15 | v13) + 33) & ~(v15 | v13);
  if (*(_DWORD *)(v12 + 84) <= 0x7FFFFFFFu)
    v17 = 0x7FFFFFFF;
  else
    v17 = *(_DWORD *)(v12 + 84);
  v18 = *(unsigned int *)(v14 + 84);
  if (v18 <= v17)
    v19 = v17;
  else
    v19 = *(_DWORD *)(v14 + 84);
  v20 = ~v13;
  v21 = *(_QWORD *)(v12 + 64) + 7;
  if (v19 != 0x7FFFFFFF)
  {
    v25 = (v13 + v16 + 16) & v20;
    if (v17 >= v18)
    {
      v22 = ~v15;
      result = (*(uint64_t (**)(uint64_t))(v12 + 48))(v25);
      if ((_DWORD)result)
        return result;
    }
    else
    {
      v22 = ~v15;
      result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v14 + 48))(((v21 & 0xFFFFFFFFFFFFFFF8) + 8 + v15 + v25) & ~v15, v18, v10);
      if ((_DWORD)result)
        return result;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    v26 = (v13 + v16 + 16) & v20;
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v26, v11);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v14 + 8))(((v21 & 0xFFFFFFFFFFFFFFF8) + 8 + v15 + v26) & v22, v10);
    return swift_bridgeObjectRelease();
  }
  v22 = ~v15;
  v23 = *(_QWORD *)(v16 + 8);
  if (v23 >= 0xFFFFFFFF)
    LODWORD(v23) = -1;
  result = (v23 + 1);
  if ((_DWORD)v23 == -1)
    goto LABEL_16;
  return result;
}

char *sub_1BA22C078(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA22920C(0, &qword_1ED5B2C68, (uint64_t)&type metadata for DebugJournal.Detail, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1BA22C18C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA22920C(0, (unint64_t *)&qword_1ED5B2CA8, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t initializeWithCopy for FeedBannerAdContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  v5 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v5;
  v6 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v6;
  v7 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v7;
  v8 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v8;
  v9 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v9;
  v10 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v10;
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  v11 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v11;
  v12 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v12;
  v15 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v15;
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  v13 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v13;
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for BannerAd(uint64_t a1)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  v2 = a1 + 16;
  if (!*(_BYTE *)(a1 + 96))
    goto LABEL_5;
  if (*(_BYTE *)(a1 + 96) == 1 && *(_QWORD *)(a1 + 40) >= 2uLL)
  {
    __swift_destroy_boxed_opaque_existential_1(v2);
    v2 = a1 + 56;
LABEL_5:
    __swift_destroy_boxed_opaque_existential_1(v2);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA22C4F0(*(_QWORD *)(a1 + 152));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1BA22C4F0(unint64_t result)
{
  if (result >> 62)
  {
    if (result >> 62 != 1)
      return result;
    result &= 0x3FFFFFFFFFFFFFFFuLL;
  }

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BannerAd(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  int v7;
  __int128 v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = (_OWORD *)(a1 + 16);
  v6 = a2 + 16;
  v7 = *(unsigned __int8 *)(a2 + 96);
  swift_bridgeObjectRetain();
  if (v7 == 1)
  {
    v9 = *(_QWORD *)(a2 + 40);
    if (v9 >= 2)
    {
      v14 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v9;
      *(_QWORD *)(a1 + 48) = v14;
      (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 16, v6);
      v15 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 80) = v15;
      (**(void (***)(uint64_t, uint64_t))(v15 - 8))(a1 + 56, a2 + 56);
    }
    else
    {
      v10 = *(_OWORD *)(v6 + 48);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(v6 + 32);
      *(_OWORD *)(a1 + 64) = v10;
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(v6 + 64);
      v11 = *(_OWORD *)(v6 + 16);
      *v5 = *(_OWORD *)v6;
      *(_OWORD *)(a1 + 32) = v11;
    }
    *(_BYTE *)(a1 + 96) = 1;
  }
  else if (v7)
  {
    v12 = *(_OWORD *)(v6 + 48);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(v6 + 32);
    *(_OWORD *)(a1 + 64) = v12;
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(v6 + 64);
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(v6 + 80);
    v13 = *(_OWORD *)(v6 + 16);
    *v5 = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 32) = v13;
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 40) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 16, v6);
    *(_BYTE *)(a1 + 96) = 0;
  }
  v16 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v16;
  v17 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v17;
  v18 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v18;
  v19 = *(_QWORD *)(a2 + 152);
  v20 = *(_QWORD *)(a2 + 160);
  v21 = *(_QWORD *)(a2 + 168);
  v22 = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA22C6F4(v19);
  *(_QWORD *)(a1 + 152) = v19;
  *(_QWORD *)(a1 + 160) = v20;
  *(_QWORD *)(a1 + 168) = v21;
  *(_QWORD *)(a1 + 176) = v22;
  v23 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v23;
  v24 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v24;
  v25 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v25;
  v27 = *(_QWORD *)(a2 + 232);
  v26 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = v27;
  *(_QWORD *)(a1 + 240) = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_1BA22C6F4(unint64_t result)
{
  id v1;

  if (result >> 62)
  {
    if (result >> 62 != 1)
      return result;
    result &= 0x3FFFFFFFFFFFFFFFuLL;
  }
  v1 = (id)result;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA22C744(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t v4;

  sub_1BA22C780(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1BA22C780(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BA222948(255, a3);
    v4 = sub_1BA2C245C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BA22C7D4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  char v28;
  int v29;
  unsigned int v31;
  int v32;
  int v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unsigned int v37;
  unint64_t v38;

  v6 = sub_1BA2C1424();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 24);
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_DWORD *)(v10 + 84) <= 0x7FFFFFFFu)
    v11 = 0x7FFFFFFF;
  else
    v11 = *(_DWORD *)(v10 + 84);
  v12 = *(_QWORD *)(v9 - 8);
  v13 = *(_DWORD *)(v12 + 84);
  if (v13 <= v11)
    v14 = v11;
  else
    v14 = *(_DWORD *)(v12 + 84);
  v15 = v14 - 1;
  if (v8 > v14 - 1)
    v15 = *(_DWORD *)(v7 + 84);
  if (v15 <= 0x7FFFFFFF)
    v16 = 0x7FFFFFFF;
  else
    v16 = v15;
  if (!a2)
    return 0;
  v17 = *(unsigned __int8 *)(v7 + 80);
  v18 = *(_DWORD *)(v10 + 80) & 0xF8;
  v19 = v18 | 7;
  v20 = *(unsigned __int8 *)(v12 + 80);
  v21 = v20 | v18 | 7;
  v22 = v18 + 23;
  v23 = ((*(_QWORD *)(v10 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + v20 + 8;
  v24 = *(_QWORD *)(v7 + 64) + 7;
  v25 = v21 + 33;
  v26 = a2 - v16;
  if (a2 <= v16)
    goto LABEL_32;
  v27 = ((*(_QWORD *)(v12 + 64) + ((v23 + (v22 & ~v19)) & ~v20) + 7) & 0xFFFFFFFFFFFFFFF8)
      + ((v25
        + ((((((((((v24 + ((v17 + 16) & ~v17)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v21)
      + 16;
  v28 = 8 * v27;
  if (v27 <= 3)
  {
    v31 = ((v26 + ~(-1 << v28)) >> v28) + 1;
    if (HIWORD(v31))
    {
      v29 = *(_DWORD *)(a1 + v27);
      if (!v29)
        goto LABEL_32;
      goto LABEL_23;
    }
    if (v31 > 0xFF)
    {
      v29 = *(unsigned __int16 *)(a1 + v27);
      if (!*(_WORD *)(a1 + v27))
        goto LABEL_32;
      goto LABEL_23;
    }
    if (v31 < 2)
    {
LABEL_32:
      if ((v15 & 0x80000000) != 0)
      {
        v35 = (a1 + v17 + 16) & ~v17;
        if (v8 == v16)
        {
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v7 + 48))(v35, *(unsigned int *)(v7 + 84), v6);
        }
        else
        {
          if (v14 == 0x7FFFFFFF)
          {
            v36 = *(_QWORD *)(((v25
                              + ((((((((((v24 + v35) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
                                  + 23) & 0xFFFFFFFFFFFFFFF8)
                                + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v21)
                            + 8);
            if (v36 >= 0xFFFFFFFF)
              LODWORD(v36) = -1;
            v37 = v36 + 1;
          }
          else
          {
            v38 = (v22
                 + ((v25
                   + ((((((((((v24 + v35) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
                       + 23) & 0xFFFFFFFFFFFFFFF8)
                     + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v21)) & ~v19;
            if (v11 >= v13)
              v37 = (*(uint64_t (**)(unint64_t))(v10 + 48))(v38);
            else
              v37 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v12 + 48))((v23 + v38) & ~v20, *(unsigned int *)(v12 + 84), v9);
          }
          if (v37 >= 2)
            return v37 - 1;
          else
            return 0;
        }
      }
      else
      {
        v34 = *(_QWORD *)(a1 + 8);
        if (v34 >= 0xFFFFFFFF)
          LODWORD(v34) = -1;
        return (v34 + 1);
      }
    }
  }
  v29 = *(unsigned __int8 *)(a1 + v27);
  if (!*(_BYTE *)(a1 + v27))
    goto LABEL_32;
LABEL_23:
  v32 = (v29 - 1) << v28;
  if (v27 > 3)
    v32 = 0;
  if (((*(_DWORD *)(v12 + 64) + (((_DWORD)v23 + (v22 & ~(_DWORD)v19)) & ~(_DWORD)v20) + 7) & 0xFFFFFFF8)
     + (((_DWORD)v25
       + (((((((((((_DWORD)v24 + (((_DWORD)v17 + 16) & ~(_DWORD)v17)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8)
           + 23) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8)) & ~(_DWORD)v21) != -16)
  {
    if (v27 <= 3)
      v33 = ((*(_DWORD *)(v12 + 64) + ((v23 + (v22 & ~(_DWORD)v19)) & ~(_DWORD)v20) + 7) & 0xFFFFFFF8)
          + ((v25
            + ((((((((((v24 + ((v17 + 16) & ~(_DWORD)v17)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)
              + 15) & 0xFFFFFFF8)) & ~(_DWORD)v21)
          + 16;
    else
      v33 = 4;
    __asm { BR              X11 }
  }
  return v16 + v32 + 1;
}

uint64_t JournalEntryStatus.shortDescription.getter()
{
  unint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  BOOL v7;
  uint64_t v8;

  v1 = *v0;
  v2 = *v0 >> 62;
  if (!(_DWORD)v2)
  {
    v3 = 0x203A64656C696146;
    goto LABEL_5;
  }
  if ((_DWORD)v2 == 1)
  {
    v3 = 0x6564726163736944;
LABEL_5:
    v8 = v3;
    sub_1BA22C6F4(v1);
    swift_bridgeObjectRetain();
    sub_1BA2C21C8();
    swift_bridgeObjectRelease();
    sub_1BA22C4F0(v1);
    return v8;
  }
  v5 = v0[2] | v0[1] | v0[3];
  if (v1 == 0x8000000000000000 && v5 == 0)
    return 0x64657461657243;
  result = 0xD000000000000011;
  if (v1 != 0x8000000000000008 || v5)
  {
    if (v1 != 0x8000000000000010 || v5)
    {
      if (v1 != 0x8000000000000018 || v5)
      {
        if (v1 != 0x8000000000000020 || v5)
        {
          if (v5)
            v7 = 0;
          else
            v7 = v1 == 0x8000000000000028;
          if (v7)
            return 0x6579616C70736944;
          else
            return 0x657370616C6C6F43;
        }
        else
        {
          return 0x656C6C69666C7546;
        }
      }
      else
      {
        return 0xD000000000000017;
      }
    }
    else
    {
      return 0xD000000000000015;
    }
  }
  return result;
}

uint64_t sub_1BA22CCA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80) & 0xF8 | 7;
  v6 = (a1 + v5 + 16) & ~v5;
  (*(void (**)(uint64_t))(v4 + 8))(v6);
  v7 = *(_QWORD *)(v4 + 64) + 7;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))(((v7 & 0xFFFFFFFFFFFFFFF8)
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)
                                                                                            + v6
                                                                                            + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
  return swift_bridgeObjectRelease();
}

uint64_t destroy for SponsorshipAdPlacement(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BA2C1AC0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t destroy for FeedBannerAdContext()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BA22CE58()
{
  type metadata accessor for JournalEntry();
}

void sub_1BA22D0BC()
{
  type metadata accessor for AdRequest();
}

void sub_1BA22D104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v14 = sub_1BA2C245C();
  MEMORY[0x1E0C80A78](v14);
  v16 = type metadata accessor for AdContext(0, v11, v12, v15);
  *(_QWORD *)(v13 - 152) = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v13 - 144) = v16;
  v17 = MEMORY[0x1E0C80A78](v16);
  MEMORY[0x1E0C80A78](v17);
  *(_QWORD *)(v13 - 160) = (char *)&a9 - v18;
  *(_QWORD *)(v13 - 128) = v11;
  *(_QWORD *)(v13 - 120) = v9;
  *(_QWORD *)(v13 - 112) = v12;
  *(_QWORD *)(v13 - 104) = v10;
  type metadata accessor for JournalEntry();
}

char *sub_1BA22D1B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *boxed_opaque_existential_2;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;

  v11 = *(int *)(a1 + 76);
  *(_QWORD *)(v9 - 136) = v3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v6, v3 + v11, v7);
  v12 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v6, 1, v5) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v6, v7);
    v13 = (char *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v15 = *(_QWORD *)(v9 - 152);
    v14 = *(_QWORD *)(v9 - 144);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v8, v6 + *(int *)(v5 + 52), v14);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v6, v5);
    v16 = *(_QWORD *)(v9 - 160);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v16, v8, v14);
    *(_QWORD *)(v9 - 104) = v2;
    *(_QWORD *)(v9 - 96) = v4;
    boxed_opaque_existential_2 = __swift_allocate_boxed_opaque_existential_2((uint64_t *)(v9 - 128));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(boxed_opaque_existential_2, v16, v2);
    *(_BYTE *)(v9 - 88) = 0;
    v13 = sub_1BA22DC30(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v19 = *((_QWORD *)v13 + 2);
    v18 = *((_QWORD *)v13 + 3);
    if (v19 >= v18 >> 1)
      v13 = sub_1BA22DC30((char *)(v18 > 1), v19 + 1, 1, v13);
    *((_QWORD *)v13 + 2) = v19 + 1;
    sub_1BA22DD8C((__int128 *)(v9 - 128), &v13[48 * v19 + 32]);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v14);
  }
  v20 = *(_QWORD *)(*(_QWORD *)(v9 - 136) + *(int *)(a1 + 68));
  if (v20)
  {
    *(_QWORD *)(v9 - 128) = v20;
    *(_BYTE *)(v9 - 88) = 1;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_1BA22DC30(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
    v22 = *((_QWORD *)v13 + 2);
    v21 = *((_QWORD *)v13 + 3);
    if (v22 >= v21 >> 1)
      v13 = sub_1BA22DC30((char *)(v21 > 1), v22 + 1, 1, v13);
    *((_QWORD *)v13 + 2) = v22 + 1;
    sub_1BA22DD8C((__int128 *)(v9 - 128), &v13[48 * v22 + 32]);
  }
  return v13;
}

uint64_t type metadata accessor for AdContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AdContext);
}

void sub_1BA22D3B4()
{
  type metadata accessor for AdRequest();
}

void sub_1BA22D400()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = sub_1BA2C245C();
  v6 = MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  *(_QWORD *)(v4 - 176) = v3;
  *(_QWORD *)(v4 - 168) = v0;
  *(_QWORD *)(v4 - 160) = v2;
  *(_QWORD *)(v4 - 152) = v1;
  type metadata accessor for JournalEntry();
}

uint64_t sub_1BA22D47C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;

  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 16))(v4, *(_QWORD *)(v8 - 184) + *(int *)(a1 + 76), v5);
  v9 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v4, 1, v2) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v5);
LABEL_6:
    *(_QWORD *)(v8 - 112) = 0;
    *(_OWORD *)(v8 - 144) = 0u;
    *(_OWORD *)(v8 - 128) = 0u;
    goto LABEL_7;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v3, v4 + *(int *)(v2 + 56), v1);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v4, v2);
  sub_1BA222948(0, (unint64_t *)&qword_1ED5B22F0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_6;
  v10 = *(_QWORD *)(v8 - 120);
  if (v10)
  {
    v11 = *(_QWORD *)(v8 - 112);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v8 - 144), *(_QWORD *)(v8 - 120));
    v12 = (*(double (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
    v14 = v13;
    __swift_destroy_boxed_opaque_existential_1(v8 - 144);
    *(double *)(v8 - 144) = v12;
    *(_QWORD *)(v8 - 136) = v14;
    type metadata accessor for CGSize(0);
    return sub_1BA2C218C();
  }
LABEL_7:
  sub_1BA22C744(v8 - 144, &qword_1ED5B22F8, (unint64_t *)&qword_1ED5B22F0);
  return 0;
}

void sub_1BA22D5D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B2CC0)
  {
    sub_1BA2395A0();
    v0 = sub_1BA2C269C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B2CC0);
  }
}

void type metadata accessor for AnyProcessor()
{
  JUMPOUT(0x1BCCD9364);
}

char *sub_1BA22D638(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA22920C(0, &qword_1ED5B2C70, (uint64_t)&type metadata for DebugJournal, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 144);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[144 * v8])
      memmove(v12, v13, 144 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1BA22D768()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 40) + 40))();
}

uint64_t storeEnumTagSinglePayload for FeedAdData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1BA22D7F4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_bridgeObjectRelease();
}

_OWORD *sub_1BA22D834(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1BA22E0C4(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_1BA22D89C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  __int128 v38[2];

  v3 = v2;
  v5 = *v2;
  sub_1BA22DBBC();
  v37 = a2;
  v6 = sub_1BA2C25AC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v35)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v35)
        goto LABEL_34;
      v20 = *(_QWORD *)(v36 + 8 * v13);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_34:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v13 >= v35)
              goto LABEL_34;
            v20 = *(_QWORD *)(v36 + 8 * v13);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v13 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    v22 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v24 = *v22;
    v23 = v22[1];
    v25 = (__int128 *)(*(_QWORD *)(v5 + 56) + 40 * v17);
    if ((v37 & 1) != 0)
    {
      sub_1BA21D3D4(v25, (uint64_t)v38);
    }
    else
    {
      sub_1BA22068C((uint64_t)v25, (uint64_t)v38);
      swift_bridgeObjectRetain();
    }
    sub_1BA2C2720();
    sub_1BA2C21A4();
    result = sub_1BA2C2738();
    v26 = -1 << *(_BYTE *)(v7 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v24;
    v15[1] = v23;
    result = sub_1BA21D3D4(v38, *(_QWORD *)(v7 + 56) + 40 * v14);
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v19 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

void sub_1BA22DBBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B2C40)
  {
    sub_1BA222948(255, (unint64_t *)&qword_1ED5B1EB8);
    v0 = sub_1BA2C25C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B2C40);
  }
}

char *sub_1BA22DC30(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA22920C(0, &qword_1ED5B2C60, (uint64_t)&type metadata for DebugJournal.Action, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8])
      memmove(v12, v13, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t initializeBufferWithCopyOfBuffer for FeedAdData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

_OWORD *sub_1BA22DD8C(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_OWORD *)((char *)a2 + 25) = *(__int128 *)((char *)a1 + 25);
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

double sub_1BA22DDA4(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 24));
}

uint64_t sub_1BA22DDB4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  _OWORD v36[2];

  v3 = v2;
  v5 = *v2;
  sub_1BA22E0D4(0, &qword_1ED5B2C48);
  v6 = a2;
  v7 = sub_1BA2C25AC();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v35 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v34 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v14 << 6);
      }
      else
      {
        v19 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v19 >= v34)
          goto LABEL_34;
        v20 = v35[v19];
        ++v14;
        if (!v20)
        {
          v14 = v19 + 1;
          if (v19 + 1 >= v34)
            goto LABEL_34;
          v20 = v35[v14];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v34)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v20 = v35[v21];
            if (!v20)
            {
              while (1)
              {
                v14 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_41;
                if (v14 >= v34)
                  goto LABEL_34;
                v20 = v35[v14];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v14 = v21;
          }
        }
LABEL_21:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v14 << 6);
      }
      v22 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
      v24 = *v22;
      v23 = v22[1];
      v25 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v18);
      if ((v6 & 1) != 0)
      {
        sub_1BA22E0C4(v25, v36);
      }
      else
      {
        sub_1BA2605C4((uint64_t)v25, (uint64_t)v36);
        swift_bridgeObjectRetain();
      }
      sub_1BA2C2720();
      sub_1BA2C21A4();
      result = sub_1BA2C2738();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        v15 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v15);
      *v16 = v24;
      v16[1] = v23;
      result = (uint64_t)sub_1BA22E0C4(v36, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v15));
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

_OWORD *sub_1BA22E0C4(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_1BA22E0D4(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BA2C25C4();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t BannerAdState.Recover.description.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;

  sub_1BA2288DC(v0, (uint64_t)&v13);
  if (!v14)
    return 0x726576656ELL;
  if (v14 == 1)
    return 0xD000000000000013;
  sub_1BA21D3D4(&v13, (uint64_t)v10);
  sub_1BA21D3D4(&v15, (uint64_t)v7);
  sub_1BA2C24C8();
  swift_bridgeObjectRelease();
  v2 = v11;
  v3 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  sub_1BA2C21C8();
  swift_bridgeObjectRelease();
  sub_1BA2C21C8();
  v4 = v8;
  v5 = v9;
  __swift_project_boxed_opaque_existential_1(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  sub_1BA2C21C8();
  swift_bridgeObjectRelease();
  sub_1BA2C21C8();
  v1 = 0xD000000000000017;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return v1;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_1BA22E2C8(a1, &qword_1ED5B2C00);
}

void sub_1BA22E2C8(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_1BA22E30C@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_BYTE *)(v2 + *(int *)(result + 28));
  return result;
}

void AdRequestManager.initiateRequest(for:placement:builder:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[10];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v15 = a4;
  v16 = a3;
  v21 = a2;
  v20 = a1;
  v18 = a5;
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 + 80);
  v8 = *(_QWORD *)(*v5 + 104);
  v13 = type metadata accessor for AdContext(0, v7, v8, a4);
  v12[9] = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v12 - v9;
  v10 = *(_QWORD *)(v6 + 96);
  v14 = v6;
  v11 = *(_QWORD *)(v6 + 120);
  v22 = v7;
  v23 = v10;
  v19 = v8;
  v24 = v8;
  v25 = v11;
  type metadata accessor for AdRequest();
}

void sub_1BA22E3CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);

  v13 = sub_1BA2C245C();
  *(_QWORD *)(v12 - 240) = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x1E0C80A78](v13);
  *(_QWORD *)(v12 - 248) = (char *)&a9 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v17 = MEMORY[0x1E0C80A78](v16);
  *(_QWORD *)(v12 - 256) = (char *)&a9 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  *(_QWORD *)(v12 - 192) = v9;
  v19 = *(_QWORD *)(v9 + 96);
  v20 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  *(_QWORD *)(v12 - 160) = v11;
  *(_QWORD *)(v12 - 152) = v10;
  v20(v11, v10);
  *(_BYTE *)(v12 - 120) = 1;
  *(_QWORD *)(v12 - 288) = v19;
  AdRequestStore.request(for:behavior:)();
}

void sub_1BA22E4C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  int v8;
  void (*v9)(uint64_t, uint64_t);
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  BOOL v32;
  void *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  swift_bridgeObjectRelease();
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  *(_QWORD *)(v7 - 184) = v4;
  *(_QWORD *)(v7 - 208) = v2;
  if (v8 == 1)
  {
    *(_QWORD *)(v7 - 312) = v3;
    v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 240) + 8);
    *(_QWORD *)(v7 - 304) = v6;
    *(_QWORD *)(v7 - 296) = v9;
    v9(v1, v6);
    if (qword_1ED5B2DB0 != -1)
      swift_once();
    v10 = (void *)qword_1ED5B2888;
    sub_1BA22D5D8();
    *(_QWORD *)(v7 - 336) = v11;
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1BA2C3840;
    v13 = v10;
    v14 = *(_QWORD *)(v7 - 152);
    v15 = *(_QWORD *)(v7 - 160);
    *(_QWORD *)(v7 - 240) = v5;
    v16 = v5(v15, v14);
    v18 = v17;
    v19 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
    v20 = sub_1BA2291C8();
    *(_QWORD *)(v12 + 32) = v16;
    *(_QWORD *)(v12 + 40) = v18;
    v21 = *(_QWORD *)(v7 - 168);
    v23 = *(_QWORD *)(v21 + 16);
    v22 = *(_QWORD *)(v21 + 24);
    *(_QWORD *)(v12 + 96) = v19;
    *(_QWORD *)(v12 + 104) = v20;
    *(_QWORD *)(v12 + 64) = v20;
    *(_QWORD *)(v12 + 72) = v23;
    *(_QWORD *)(v7 - 328) = v23;
    *(_QWORD *)(v12 + 80) = v22;
    v24 = *(_QWORD **)(v7 - 192);
    v26 = v24[14];
    v25 = v24[15];
    v27 = v24[17];
    v28 = *(_QWORD *)(v7 - 216);
    *(_QWORD *)(v7 - 352) = v24[16];
    *(_QWORD *)(v7 - 344) = v26;
    *(_QWORD *)(v7 - 320) = v22;
    if (v27)
    {
      *(_QWORD *)(v7 - 120) = v26;
      *(_QWORD *)(v7 - 112) = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1BA2C21C8();
      sub_1BA2C21C8();
      sub_1BA2C21C8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v29 = *(_QWORD *)(v7 - 120);
      v30 = *(_QWORD *)(v7 - 112);
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29 = v26;
      v30 = v25;
    }
    *(_QWORD *)(v12 + 136) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v12 + 144) = v20;
    *(_QWORD *)(v12 + 112) = v29;
    *(_QWORD *)(v12 + 120) = v30;
    sub_1BA2C239C();
    sub_1BA2C1EB0();

    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *))(v7 - 224))(v24 + 2);
    *(_QWORD *)(v7 - 224) = v27;
    v51 = v24[11];
    __swift_project_boxed_opaque_existential_1(v24 + 7, v24[10]);
    v52 = *(_QWORD *)(v7 - 160);
    (*(void (**)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD))(v51 + 16))(*(_QWORD *)(v7 - 168), v28, *(_QWORD *)(v7 - 144), *(_QWORD *)(v7 - 184), *(_QWORD *)(*(_QWORD *)(v7 - 264) + 88));
    (*(void (**)(uint64_t, _QWORD))(v7 - 240))(v52, *(_QWORD *)(v7 - 152));
    Journal.addPrewarmedEntry(request:placementIdentifier:)();
  }
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
  *(_QWORD *)(v7 - 216) = v31;
  v31(v0, v1, v2);
  v32 = qword_1ED5B2DB0 == -1;
  *(_QWORD *)(v7 - 224) = v0;
  if (!v32)
    swift_once();
  v33 = (void *)qword_1ED5B2888;
  sub_1BA22D5D8();
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1BA2C3840;
  v35 = v33;
  v36 = *(_QWORD *)(v7 - 160);
  v37 = v5(v36, *(_QWORD *)(v7 - 152));
  v39 = v38;
  v40 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v34 + 56) = MEMORY[0x1E0DEA968];
  v41 = sub_1BA2291C8();
  *(_QWORD *)(v34 + 32) = v37;
  *(_QWORD *)(v34 + 40) = v39;
  v42 = *(_QWORD *)(v7 - 168);
  v44 = *(_QWORD *)(v42 + 16);
  v43 = *(_QWORD *)(v42 + 24);
  v45 = v40;
  *(_QWORD *)(v34 + 96) = v40;
  *(_QWORD *)(v34 + 104) = v41;
  *(_QWORD *)(v34 + 64) = v41;
  *(_QWORD *)(v34 + 72) = v44;
  *(_QWORD *)(v34 + 80) = v43;
  v46 = *(_QWORD **)(v7 - 192);
  v47 = v46[14];
  v48 = v46[15];
  if (v46[17])
  {
    *(_QWORD *)(v7 - 120) = v47;
    *(_QWORD *)(v7 - 112) = v48;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1BA2C21C8();
    v36 = *(_QWORD *)(v7 - 160);
    sub_1BA2C21C8();
    sub_1BA2C21C8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v47 = *(_QWORD *)(v7 - 120);
    v48 = *(_QWORD *)(v7 - 112);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(v34 + 136) = v45;
  *(_QWORD *)(v34 + 144) = v41;
  *(_QWORD *)(v34 + 112) = v47;
  *(_QWORD *)(v34 + 120) = v48;
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  v49 = *(_QWORD *)(v7 - 176);
  *(_QWORD *)(v7 - 120) = *(_QWORD *)(v7 - 184);
  *(_QWORD *)(v7 - 112) = v36;
  v50 = *(_QWORD *)(v7 - 152);
  *(_QWORD *)(v7 - 104) = v49;
  *(_QWORD *)(v7 - 96) = v50;
  type metadata accessor for Journal();
}

uint64_t sub_1BA22EF64()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BA22EF90@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return AdManager.createRequest<A, B, C>(for:context:placement:)(a1, a2, a3, a4);
}

uint64_t AdManager.createRequest<A, B, C>(for:context:placement:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  _QWORD *v4;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  _QWORD *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;

  v84 = a3;
  v8 = (_QWORD *)*a1;
  v9 = *(_QWORD *)(*a1 + 104);
  v83 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v8[11];
  v13 = v8[14];
  v15 = type metadata accessor for AdContext(0, v12, v13, v14);
  v80 = *(_QWORD *)(v15 - 8);
  v81 = v15;
  MEMORY[0x1E0C80A78](v15);
  v82 = (char *)&v65 - v16;
  v17 = sub_1BA2C1460();
  v78 = *(_QWORD *)(v17 - 8);
  v79 = v17;
  MEMORY[0x1E0C80A78](v17);
  v77 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = v4;
  swift_retain();
  sub_1BA2C1574();
  swift_release();
  if (v89 == 1)
  {
    v75 = v11;
    v76 = a4;
    v19 = v93[6];
    v20 = v93[7];
    __swift_project_boxed_opaque_existential_1(v93 + 3, v19);
    v21 = *(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 16);
    v22 = v8[12];
    v23 = v8[15];
    v24 = v8[16];
    v74 = v12;
    v25 = v12;
    v26 = v24;
    v21(&v89, a1, a2, v25, v22, v9, v13, v23, v24, v19, v20);
    v71 = v89;
    v87 = v89;
    v88 = v90;
    v70 = v90;
    sub_1BA22F720(a1, a2, v84, &v89);
    if (qword_1ED5B2DB0 != -1)
      swift_once();
    v72 = a2;
    v73 = v13;
    v27 = (void *)qword_1ED5B2888;
    sub_1BA2228E8(0, (unint64_t *)&qword_1ED5B2CC0, (unint64_t *)&qword_1ED5B2CD8, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v67 = v28;
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1BA2C37C0;
    v30 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8);
    v31 = v27;
    v69 = v30;
    v32 = v30(v9, v26);
    v66 = v9;
    v33 = v32;
    v35 = v34;
    v36 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v29 + 56) = MEMORY[0x1E0DEA968];
    v37 = sub_1BA2291C8();
    *(_QWORD *)(v29 + 32) = v33;
    *(_QWORD *)(v29 + 40) = v35;
    v38 = a1[2];
    v39 = a1[3];
    *(_QWORD *)(v29 + 96) = v36;
    *(_QWORD *)(v29 + 104) = v37;
    *(_QWORD *)(v29 + 64) = v37;
    *(_QWORD *)(v29 + 72) = v38;
    v68 = v38;
    *(_QWORD *)(v29 + 80) = v39;
    swift_bridgeObjectRetain();
    sub_1BA2C239C();
    sub_1BA2C1EB0();

    swift_bridgeObjectRelease();
    v40 = v91;
    v41 = v92;
    __swift_project_boxed_opaque_existential_1(&v89, v91);
    v42 = v84;
    v43 = v66;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 16))(v84, v66, v26, v40, v41);
    v44 = v77;
    sub_1BA2C1454();
    v45 = (_QWORD *)sub_1BA2C143C();
    v47 = v46;
    (*(void (**)(char *, uint64_t))(v78 + 8))(v44, v79);
    sub_1BA22068C((uint64_t)&v89, (uint64_t)&v87);
    v93 = v45;
    v85 = v45;
    v86 = v47;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BA2C18D4();
    swift_release();
    v48 = v43;
    v79 = v26;
    v49 = v70;
    v50 = (void *)qword_1ED5B2888;
    if (v70)
    {
      v51 = swift_allocObject();
      *(_OWORD *)(v51 + 16) = xmmword_1BA2C4620;
      swift_bridgeObjectRetain();
      v52 = v50;
      v53 = v69(v48, v79);
      v54 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v51 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v51 + 64) = v37;
      *(_QWORD *)(v51 + 32) = v53;
      *(_QWORD *)(v51 + 40) = v55;
      *(_QWORD *)(v51 + 96) = v54;
      *(_QWORD *)(v51 + 104) = v37;
      *(_QWORD *)(v51 + 72) = v68;
      *(_QWORD *)(v51 + 80) = v39;
      *(_QWORD *)(v51 + 136) = v54;
      *(_QWORD *)(v51 + 144) = v37;
      *(_QWORD *)(v51 + 112) = v93;
      *(_QWORD *)(v51 + 120) = v47;
      *(_QWORD *)(v51 + 176) = v54;
      *(_QWORD *)(v51 + 184) = v37;
      v56 = v71;
      *(_QWORD *)(v51 + 152) = v71;
      *(_QWORD *)(v51 + 160) = v49;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA2C239C();
      sub_1BA2C1EB0();
      v57 = v75;
      v58 = v49;
    }
    else
    {
      v61 = swift_allocObject();
      *(_OWORD *)(v61 + 16) = xmmword_1BA2C3840;
      v52 = v50;
      v62 = v69(v48, v79);
      v63 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v61 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v61 + 64) = v37;
      *(_QWORD *)(v61 + 32) = v62;
      *(_QWORD *)(v61 + 40) = v64;
      *(_QWORD *)(v61 + 96) = v63;
      *(_QWORD *)(v61 + 104) = v37;
      *(_QWORD *)(v61 + 72) = v68;
      *(_QWORD *)(v61 + 80) = v39;
      *(_QWORD *)(v61 + 136) = v63;
      *(_QWORD *)(v61 + 144) = v37;
      *(_QWORD *)(v61 + 112) = v93;
      *(_QWORD *)(v61 + 120) = v47;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA2C239C();
      sub_1BA2C1EB0();
      v57 = v75;
      v58 = 0;
      v56 = v71;
    }

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v82, v72, v81);
    (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v57, v42, v48);
    v87 = v56;
    v88 = v58;
    sub_1BA22F64C((uint64_t)v93, v47, v76);
  }
  sub_1BA2AE118();
  swift_allocError();
  *v59 = 2;
  return swift_willThrow();
}

uint64_t sub_1BA22F5EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1BA22F64C(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  type metadata accessor for AdRequest();
}

uint64_t sub_1BA22F6A4(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _QWORD *v16;

  v13 = v9 + a1[13];
  v14 = type metadata accessor for AdContext(0, v6, v4, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v13, v8, v14);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v9 + a1[14], v7, v5);
  v16 = (_QWORD *)(v9 + a1[15]);
  *v16 = v10;
  v16[1] = v11;
  return result;
}

uint64_t sub_1BA22F720@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _UNKNOWN **v17;
  uint64_t (*v18)(uint64_t, _UNKNOWN **);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *boxed_opaque_existential_2;
  uint64_t *v26;
  uint64_t v27;
  _UNKNOWN **v28;
  uint64_t (*v29)(uint64_t, _UNKNOWN **);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  _UNKNOWN **v45;
  _UNKNOWN **v46;

  v8 = *a1;
  v9 = *(_QWORD *)(*a1 + 104);
  MEMORY[0x1E0C80A78](a1);
  v12 = *v11;
  v13 = v11[1];
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v15, v9);
  sub_1BA230764();
  if (swift_dynamicCast())
  {
    v35 = v13;
    v36 = a2;
    v37 = a4;
    sub_1BA2AE7BC(&v40, &v43);
    v16 = v44;
    v17 = v45;
    __swift_project_boxed_opaque_existential_1(&v43, v44);
    v18 = (uint64_t (*)(uint64_t, _UNKNOWN **))v17[1];
    swift_retain();
    v38 = v18(v16, v17);
    v39 = v19;
    sub_1BA2C18C8();
    swift_bridgeObjectRelease();
    swift_release();
    if (*((_QWORD *)&v41 + 1))
    {
      sub_1BA21D3D4(&v40, (uint64_t)v37);
    }
    else
    {
      sub_1BA2228A4((uint64_t)&v40, &qword_1ED5B2FC8, (unint64_t *)&qword_1ED5B27D8, (uint64_t)&protocol descriptor for PromotedContentContextWrapperType);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 64), *(_QWORD *)(v4 + 88));
      v24 = type metadata accessor for AdContext(0, *(_QWORD *)(v8 + 88), *(_QWORD *)(v8 + 112), v23);
      *((_QWORD *)&v41 + 1) = v24;
      *(_QWORD *)&v42 = &protocol witness table for AdContext<A>;
      *((_QWORD *)&v42 + 1) = &protocol witness table for AdContext<A>;
      boxed_opaque_existential_2 = __swift_allocate_boxed_opaque_existential_2((uint64_t *)&v40);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(boxed_opaque_existential_2, v36, v24);
      v38 = v12;
      v39 = v35;
      v26 = v37;
      sub_1BA22FBC0((uint64_t)&v40, a3, v37);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
      v27 = v44;
      v28 = v45;
      __swift_project_boxed_opaque_existential_1(&v43, v44);
      v29 = (uint64_t (*)(uint64_t, _UNKNOWN **))v28[1];
      swift_retain();
      v30 = v29(v27, v28);
      v32 = v31;
      sub_1BA22068C((uint64_t)v26, (uint64_t)&v40);
      v38 = v30;
      v39 = v32;
      sub_1BA2C18D4();
      swift_release();
    }
  }
  else
  {
    v41 = 0u;
    v42 = 0u;
    v40 = 0u;
    sub_1BA2306D4((uint64_t)&v40);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 64), *(_QWORD *)(v4 + 88));
    v21 = type metadata accessor for AdContext(0, *(_QWORD *)(v8 + 88), *(_QWORD *)(v8 + 112), v20);
    v44 = v21;
    v45 = &protocol witness table for AdContext<A>;
    v46 = &protocol witness table for AdContext<A>;
    v22 = __swift_allocate_boxed_opaque_existential_2((uint64_t *)&v43);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v22, a2, v21);
    *(_QWORD *)&v40 = v12;
    *((_QWORD *)&v40 + 1) = v13;
    sub_1BA22FBC0((uint64_t)&v43, a3, a4);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
}

void type metadata accessor for Journal()
{
  JUMPOUT(0x1BCCD9364);
}

void Journal.addPrewarmedEntry(request:placementIdentifier:)()
{
  type metadata accessor for JournalEntry();
}

void sub_1BA22FA64(uint64_t a1)
{
  MEMORY[0x1E0C80A78](a1);
  sub_1BA232BCC();
}

void sub_1BA22FAB4()
{
  sub_1BA22A46C();
}

uint64_t sub_1BA22FAF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1BA22FB04(a1, *v3, a2, a3);
}

uint64_t sub_1BA22FB04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1BA22053C(0, &qword_1ED5B2C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D81E98], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BA2C1AC0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BA2C37D0;
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  sub_1BA2C1DD8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA22FBC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  _QWORD v6[6];

  sub_1BA233800(a1, (uint64_t)v6);
  swift_bridgeObjectRetain();
  result = sub_1BA22FC48(v6, a2);
  a3[3] = (uint64_t)&type metadata for PromotedContentContextWrapper;
  a3[4] = (uint64_t)&off_1E71FCE10;
  *a3 = result;
  return result;
}

uint64_t sub_1BA22FC48(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1BA22FE30(a2);
  v3 = a1[3];
  v4 = a1[5];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  v7 = objc_allocWithZone((Class)sub_1BA2C1A84());
  v8 = (void *)sub_1BA2C1A78();
  v9 = a1[3];
  v10 = a1[5];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10))
  {
    sub_1BA2C1A60();
    swift_unknownObjectRelease();
  }
  v11 = a1[3];
  v12 = a1[5];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(v11, v12))
  {
    sub_1BA2C1A60();
    swift_unknownObjectRelease();
  }
  v13 = sub_1BA2C1A6C();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v13;
}

uint64_t AdContext.currentPromotableContentDepiction.getter(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)(a1 + 24) + 16) + 16))(*(_QWORD *)(a1 + 16));
}

uint64_t AdContext.nextPromotableContentDepiction.getter(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)(a1 + 24) + 16) + 24))(*(_QWORD *)(a1 + 16));
}

uint64_t AdContext.newsSupplementalContext.getter(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)(a1 + 24) + 8) + 8))(*(_QWORD *)(a1 + 16));
}

double sub_1BA22FE30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  id v6;
  double v7;
  __int128 v9[2];
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v2 + 16))((char *)v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA22FF64();
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BA21D3D4(v9, (uint64_t)v11);
    v3 = v12;
    v4 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    v5 = (*(double (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    v10 = 0;
    memset(v9, 0, sizeof(v9));
    sub_1BA2A2DEC((uint64_t)v9);
    v6 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v6, sel_bounds);
    v5 = v7;

  }
  return v5;
}

unint64_t sub_1BA22FF64()
{
  unint64_t result;

  result = qword_1ED5B22F0;
  if (!qword_1ED5B22F0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5B22F0);
  }
  return result;
}

uint64_t sub_1BA22FFB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_1BA2C1AC0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1BA22FFF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15[3];
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v13 = *(_BYTE *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 64);
  v12 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 88);
  v9 = *(_QWORD *)(v0 + 96);
  v10 = *(_QWORD *)(v0 + 104);
  sub_1BA2C19E8();
  v14 = v1;
  v15[0] = v3;
  v15[1] = v2;
  v15[2] = v4;
  v16 = v13;
  v17 = v12;
  v18 = v5;
  v19 = v7;
  v20 = v6;
  v21 = v8;
  v22 = v9;
  v23 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BA233C54(0, v15, (uint64_t)&v14, 101);
}

uint64_t sub_1BA2300E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  _QWORD v13[9];

  v1 = v0[1];
  v3 = v0[25];
  v2 = v0[26];
  v4 = v0[27];
  v5 = v0[28];
  v6 = v0[29];
  v7 = v0[30];
  v9 = v0[31];
  v8 = v0[32];
  v10 = v0[33];
  sub_1BA2C19E8();
  v12 = v1;
  v13[0] = v3;
  v13[1] = v2;
  v13[2] = v4;
  v13[3] = v5;
  v13[4] = v6;
  v13[5] = v7;
  v13[6] = v9;
  v13[7] = v8;
  v13[8] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BA233A54(151, v13, &v12, 101);
}

void FeedBannerAdContext.newsSupplementalContext.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[12];

  v1 = *(_QWORD *)(v0 + 32);
  v9 = *(_QWORD *)(v0 + 40);
  v2 = *(unsigned __int8 *)(v0 + 48);
  v12 = *(_QWORD *)(v0 + 56);
  v13 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 72);
  v10 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 80);
  v11 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 120);
  v14 = *(_QWORD *)(v0 + 168);
  v15 = *(_QWORD *)(v0 + 240);
  v16 = *(unsigned __int8 *)(v0 + 272);
  objc_msgSend(objc_allocWithZone((Class)sub_1BA2C1DC0()), sel_init);
  sub_1BA2C1DB4();
  sub_1BA2C1C94();
  swift_bridgeObjectRetain_n();
  sub_1BA2C1D00();
  swift_bridgeObjectRelease();
  sub_1BA2C1C58();
  v17[0] = v13;
  v17[1] = v1;
  v17[2] = v9;
  v17[3] = v2;
  v17[4] = v12;
  v17[5] = v10;
  v17[6] = v3;
  v17[7] = v4;
  v17[8] = v11;
  v17[9] = v6;
  v17[10] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA2338F8((uint64_t)v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7)
  {
    if (v9 > 0)
      v8 = 1;
    else
      v8 = v2;
    if (v8 == 1)
      swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA2C1D0C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA2C1BF8();
  swift_bridgeObjectRetain();
  sub_1BA2C1BA4();
  swift_bridgeObjectRetain();
  sub_1BA2C1B8C();
  swift_bridgeObjectRetain();
  sub_1BA2C1BB0();
  swift_bridgeObjectRetain();
  sub_1BA2C1BD4();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v14);
  sub_1BA2C1C28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA2C1C04();
  swift_bridgeObjectRetain();
  sub_1BA2C1BBC();
  swift_bridgeObjectRetain();
  sub_1BA2C1B98();
  swift_bridgeObjectRetain();
  sub_1BA2C1BC8();
  swift_bridgeObjectRetain();
  sub_1BA2C1BE0();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v15);
  sub_1BA2C1C34();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __asm { BR              X9 }
}

uint64_t sub_1BA230640()
{
  uint64_t v0;

  sub_1BA2C1C64();
  sub_1BA23DAE0();
  sub_1BA2C2438();
  sub_1BA2C1D54();
  return v0;
}

uint64_t sub_1BA2306D4(uint64_t a1)
{
  uint64_t v2;

  sub_1BA230710();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BA230710()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B12D8)
  {
    sub_1BA230764();
    v0 = sub_1BA2C245C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B12D8);
  }
}

unint64_t sub_1BA230764()
{
  unint64_t result;

  result = qword_1ED5B12D0;
  if (!qword_1ED5B12D0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5B12D0);
  }
  return result;
}

char *AdContextBuilder.build<A, B, C>(for:build:)@<X0>(uint64_t *a1@<X0>, void (*a2)(_QWORD *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_QWORD *);
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t inited;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *result;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  void (*v79)(_QWORD *);
  _QWORD *v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  _QWORD v86[2];
  _QWORD *v87;
  _UNKNOWN **v88;
  _QWORD *v89;

  v5 = v4;
  v73 = a3;
  v79 = a2;
  v72 = a4;
  v7 = *a1;
  v80 = (_QWORD *)*v5;
  v81 = v7;
  v84 = *(_QWORD *)(v7 + 88);
  MEMORY[0x1E0C80A78]();
  v83 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA2C170C();
  MEMORY[0x1E0C80A78]();
  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v9 = (void *)qword_1ED5B2888;
  sub_1BA2228E8(0, (unint64_t *)&qword_1ED5B2CC0, (unint64_t *)&qword_1ED5B2CD8, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v74 = v10;
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BA2C37C0;
  v13 = a1[2];
  v12 = a1[3];
  v14 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
  v15 = sub_1BA2291C8();
  *(_QWORD *)(v11 + 64) = v15;
  v75 = v13;
  *(_QWORD *)(v11 + 32) = v13;
  *(_QWORD *)(v11 + 40) = v12;
  v16 = v9;
  v76 = v12;
  swift_bridgeObjectRetain();
  v86[0] = AdContextBuilder.path.getter();
  sub_1BA22920C(0, (unint64_t *)&qword_1ED5B2B70, v14, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v18 = v17;
  v19 = sub_1BA229294();
  v78 = v18;
  v77 = v19;
  v20 = sub_1BA2C2120();
  v21 = v5;
  v23 = v22;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 96) = v14;
  *(_QWORD *)(v11 + 104) = v15;
  *(_QWORD *)(v11 + 72) = v20;
  *(_QWORD *)(v11 + 80) = v23;
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  v24 = v79;
  if (v79)
  {
    v25 = v80;
    v26 = (_QWORD *)swift_allocObject();
    swift_retain();
    sub_1BA266044((uint64_t)v24);
    sub_1BA2C1700();
    sub_1BA2C1724();
    swift_allocObject();
    v26[5] = sub_1BA2C1718();
    v26[6] = sub_1BA2340BC(MEMORY[0x1E0DEE9D8]);
    v26[2] = v21;
    v26[3] = 0x6C61636F6CLL;
    v26[4] = 0xE500000000000000;
    v87 = v25;
    v88 = &protocol witness table for AdContextBuilder;
    v86[0] = v26;
    swift_retain();
    v24(v86);
    sub_1BA266054((uint64_t)v24);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
    v28 = (uint64_t)v83;
    v27 = v84;
  }
  else
  {
    swift_retain();
    v26 = v21;
    v28 = (uint64_t)v83;
    v27 = v84;
    v25 = v80;
  }
  v87 = v25;
  v88 = &protocol witness table for AdContextBuilder;
  v86[0] = v26;
  v29 = *(_QWORD *)(v81 + 112);
  v30 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v29 + 40);
  swift_retain();
  v31 = v82;
  v30(v86, v27, v29);
  if (!v31)
  {
    v81 = v29;
    v82 = 0;
    sub_1BA22920C(0, &qword_1ED5B3610, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BA2C35D0;
    *(_QWORD *)(inited + 32) = v26;
    v86[0] = inited;
    sub_1BA2C2288();
    v42 = v86[0];
    swift_retain();
    v43 = sub_1BA232448();
    v86[0] = v42;
    sub_1BA231408(v43);
    v44 = v86[0];
    if (v86[0] >> 62)
    {
      swift_bridgeObjectRetain();
      v45 = sub_1BA2C2594();
      swift_bridgeObjectRelease();
      if (v45)
        goto LABEL_11;
    }
    else
    {
      v45 = *(_QWORD *)((v86[0] & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v45)
      {
LABEL_11:
        v89 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        result = sub_1BA23110C(0, v45 & ~(v45 >> 63), 0);
        if (v45 < 0)
        {
          __break(1u);
          return result;
        }
        v80 = v26;
        v47 = v89;
        if ((v44 & 0xC000000000000001) != 0)
        {
          v48 = 0;
          do
          {
            v49 = MEMORY[0x1BCCD8C98](v48, v44);
            v50 = AdContextBuilder.path.getter();
            swift_beginAccess();
            v51 = *(_QWORD *)(v49 + 48);
            swift_bridgeObjectRetain();
            swift_unknownObjectRelease();
            v89 = v47;
            v53 = v47[2];
            v52 = v47[3];
            if (v53 >= v52 >> 1)
            {
              sub_1BA23110C((char *)(v52 > 1), v53 + 1, 1);
              v47 = v89;
            }
            ++v48;
            v47[2] = v53 + 1;
            v54 = &v47[2 * v53];
            v54[4] = v50;
            v54[5] = v51;
          }
          while (v45 != v48);
        }
        else
        {
          v64 = 0;
          do
          {
            v65 = *(_QWORD *)(v44 + 8 * v64 + 32);
            swift_retain();
            v66 = AdContextBuilder.path.getter();
            swift_beginAccess();
            v67 = *(_QWORD *)(v65 + 48);
            swift_bridgeObjectRetain();
            swift_release();
            v89 = v47;
            v69 = v47[2];
            v68 = v47[3];
            if (v69 >= v68 >> 1)
            {
              sub_1BA23110C((char *)(v68 > 1), v69 + 1, 1);
              v47 = v89;
            }
            ++v64;
            v47[2] = v69 + 1;
            v70 = &v47[2 * v69];
            v70[4] = v66;
            v70[5] = v67;
          }
          while (v45 != v64);
        }
        swift_release();
        swift_bridgeObjectRelease();
        v28 = (uint64_t)v83;
        v27 = v84;
LABEL_27:
        v89 = v47;
        return (char *)sub_1BA2315CC(v28, (uint64_t *)&v89, v27, v81, v72);
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    v47 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_27;
  }
  v89 = v31;
  v32 = v31;
  sub_1BA222948(0, (unint64_t *)&qword_1ED5B2CD0);
  if (swift_dynamicCast())
  {
    v33 = v86[0];
    v34 = v86[1];
    swift_bridgeObjectRelease();
    v35 = (id)qword_1ED5B2888;
    LODWORD(v84) = sub_1BA2C2390();
    v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1BA2C3840;
    v37 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v36 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v36 + 64) = v15;
    *(_QWORD *)(v36 + 32) = v33;
    *(_QWORD *)(v36 + 40) = v34;
    *(_QWORD *)(v36 + 96) = v37;
    *(_QWORD *)(v36 + 104) = v15;
    *(_QWORD *)(v36 + 72) = v75;
    *(_QWORD *)(v36 + 80) = v76;
    swift_bridgeObjectRetain();
    v85 = AdContextBuilder.path.getter();
    v38 = sub_1BA2C2120();
    v40 = v39;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v36 + 136) = v37;
    *(_QWORD *)(v36 + 144) = v15;
    *(_QWORD *)(v36 + 112) = v38;
    *(_QWORD *)(v36 + 120) = v40;
    sub_1BA2C1EB0();

    swift_bridgeObjectRelease();
  }
  else
  {

    v55 = (id)qword_1ED5B2888;
    LODWORD(v84) = sub_1BA2C2390();
    v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = xmmword_1BA2C3840;
    *(_QWORD *)(v56 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v56 + 64) = v15;
    v57 = v76;
    *(_QWORD *)(v56 + 32) = v75;
    *(_QWORD *)(v56 + 40) = v57;
    swift_getErrorValue();
    swift_bridgeObjectRetain();
    v58 = sub_1BA2C26E4();
    v59 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v56 + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v56 + 104) = v15;
    *(_QWORD *)(v56 + 72) = v58;
    *(_QWORD *)(v56 + 80) = v60;
    v86[0] = AdContextBuilder.path.getter();
    v61 = sub_1BA2C2120();
    v63 = v62;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v56 + 136) = v59;
    *(_QWORD *)(v56 + 144) = v15;
    *(_QWORD *)(v56 + 112) = v61;
    *(_QWORD *)(v56 + 120) = v63;
    sub_1BA2C1EB0();

    swift_bridgeObjectRelease();
  }
  swift_willThrow();
  return (char *)swift_release();
}

char *AdContextBuilder.path.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  unint64_t v6;
  char *v7;

  if (v0[2])
    v1 = AdContextBuilder.path.getter();
  else
    v1 = MEMORY[0x1E0DEE9D8];
  v3 = v0[3];
  v2 = v0[4];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v4 = (char *)v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = sub_1BA22C18C(0, *(_QWORD *)(v1 + 16) + 1, 1, (char *)v1);
  v6 = *((_QWORD *)v4 + 2);
  v5 = *((_QWORD *)v4 + 3);
  if (v6 >= v5 >> 1)
    v4 = sub_1BA22C18C((char *)(v5 > 1), v6 + 1, 1, v4);
  *((_QWORD *)v4 + 2) = v6 + 1;
  v7 = &v4[16 * v6];
  *((_QWORD *)v7 + 4) = v3;
  *((_QWORD *)v7 + 5) = v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

char *sub_1BA23110C(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_1BA231138(a1, a2, a3, *v3, &qword_1ED5B2CA0, (uint64_t)&type metadata for AdContextBuilderSnapshot.Entry);
  *v3 = result;
  return result;
}

char *sub_1BA231138(char *result, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  char v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;

  v7 = (char)result;
  if ((a3 & 1) != 0)
  {
    v8 = *((_QWORD *)a4 + 3);
    v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v9 = a2;
    }
  }
  else
  {
    v9 = a2;
  }
  v10 = *((_QWORD *)a4 + 2);
  if (v9 <= v10)
    v11 = *((_QWORD *)a4 + 2);
  else
    v11 = v9;
  if (v11)
  {
    sub_1BA22920C(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v12 = (char *)swift_allocObject();
    v13 = _swift_stdlib_malloc_size(v12);
    v14 = v13 - 32;
    if (v13 < 32)
      v14 = v13 - 17;
    *((_QWORD *)v12 + 2) = v10;
    *((_QWORD *)v12 + 3) = 2 * (v14 >> 4);
  }
  else
  {
    v12 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v15 = v12 + 32;
  v16 = a4 + 32;
  if ((v7 & 1) != 0)
  {
    if (v12 != a4 || v15 >= &v16[16 * v10])
      memmove(v15, v16, 16 * v10);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v12;
}

uint64_t sub_1BA23124C(unint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t))
{
  unint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1BA2C2594();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BA2C2594();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_23;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if (v6 >> 62)
    goto LABEL_25;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain();
    v6 = MEMORY[0x1BCCD8CA4](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v11 = sub_1BA2C2594();
    swift_bridgeObjectRelease();
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_1BA2C2288();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA231408(unint64_t a1)
{
  return sub_1BA23124C(a1, sub_1BA231414);
}

uint64_t sub_1BA231414(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t i;
  uint64_t (*v10)();
  uint64_t *v11;
  uint64_t v12;
  uint64_t (*v13[4])();

  v5 = result;
  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BA2C2594();
    result = swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      v8 = sub_1BA2C2594();
      result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          sub_1BA242F08(0, &qword_1EF27EA20, (void (*)(uint64_t))type metadata accessor for AdContextBuilder);
          sub_1BA242EC8(&qword_1EF27EA28, &qword_1EF27EA20, (void (*)(uint64_t))type metadata accessor for AdContextBuilder);
          swift_bridgeObjectRetain();
          for (i = 0; i != v7; ++i)
          {
            v10 = sub_1BA265E8C(v13, i, a3);
            v12 = *v11;
            swift_retain();
            ((void (*)(uint64_t (**)(), _QWORD))v10)(v13, 0);
            *(_QWORD *)(v5 + 8 * i) = v12;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        type metadata accessor for AdContextBuilder();
        swift_arrayInitWithCopy();
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA2315CC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v8 = *a2;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a1);
  result = type metadata accessor for AdContext(0, a3, a4, v9);
  *(_QWORD *)(a5 + *(int *)(result + 36)) = v8;
  return result;
}

uint64_t sub_1BA23162C@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return FeedBannerAdContext.init(provider:)(a1, a2);
}

uint64_t FeedBannerAdContext.init(provider:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  void (*v20)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  void (*v24)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  void (*v35)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  void (*v36)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v37;
  void (*v38)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  char v39;
  uint64_t v40;
  void (*v41)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  char v42;
  char v43;
  uint64_t v44;
  void (*v45)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  void (*v46)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v47;
  void (*v48)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  void (*v49)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v50;
  void (*v51)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  void (*v52)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v53;
  void (*v54)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  void (*v55)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  void (*v56)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v57;
  uint64_t v58;
  _BYTE __src[273];
  void (*v60)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  void (*v61)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v62;
  void (*v63)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  void (*v64)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v65;
  uint64_t v66;
  void (*v67)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v68;
  uint64_t v69;
  void (*v70)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v71;
  uint64_t v72;
  void (*v73)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  void (*v74)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  void (*v75)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  void (*v76)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  void (*v77)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v78;
  void (*v79)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  void (*v80)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v81;
  uint64_t v82;
  void (*v83)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v84;
  void (*v85)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  void (*v86)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v87;
  void (*v88)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  void (*v89)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v90;
  uint64_t v91;
  void (*v92)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v93;
  char v94;
  char v95;
  _BYTE v96[7];
  _BYTE v97[7];
  _DWORD v98[5];
  void (*v99)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);

  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  AdContextDataProviding.data<A>(for:)((uint64_t)&type metadata for AppAdData, v5, (uint64_t)&type metadata for AppAdData, v6);
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v7 = a1[3];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  AdContextDataProviding.data<A>(for:)((uint64_t)&type metadata for UserAdData, v7, (uint64_t)&type metadata for UserAdData, v8);
  v9 = v60;
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  swift_bridgeObjectRetain();
  AdContextDataProviding.data<A>(for:)((uint64_t)&type metadata for CreativeAdData, v10, (uint64_t)&type metadata for CreativeAdData, v11);
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  AdContextDataProviding.data<A>(for:)((uint64_t)&type metadata for FeedAdData, v12, (uint64_t)&type metadata for FeedAdData, v13);
  v42 = (char)v60;
  v43 = (char)v60;
  v37 = v62;
  v38 = v60;
  v39 = (char)v63;
  v53 = v65;
  v40 = v68;
  v41 = v64;
  v44 = v69;
  v14 = a1[3];
  v99 = (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  swift_bridgeObjectRetain();
  v52 = v61;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v51 = v67;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  AdContextDataProviding.dataIfPresent<A>(for:)((uint64_t)&type metadata for SectionAdData, v14, (uint64_t)&type metadata for SectionAdData, (uint64_t)v99);
  v49 = v70;
  v50 = v66;
  v15 = v69;
  v35 = v60;
  v16 = v61;
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  memset(__src, 0, 17);
  v99 = *(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v18 + 8);
  swift_bridgeObjectRetain();
  v99(&v60, &type metadata for FeedGroupAdData, __src, &type metadata for FeedGroupAdData, v17, v18);
  v48 = v16;
  v34 = v60;
  v19 = v61;
  v47 = v62;
  v99 = v63;
  v36 = v64;
  v32 = v66;
  v33 = v65;
  v20 = v67;
  v21 = v68;
  v22 = a1[4];
  v57 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v57);
  *(_OWORD *)__src = xmmword_1BA2C6960;
  __src[16] = 0;
  v55 = *(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v22 + 8);
  v46 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v45 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v55(&v60, &type metadata for FeedGroupAdData, __src, &type metadata for FeedGroupAdData, v57, v22);
  v23 = v61;
  v54 = v63;
  v56 = v64;
  v58 = v62;
  v28 = v65;
  v29 = v60;
  v27 = v66;
  v24 = v67;
  v25 = v68;
  v30 = a1[3];
  v31 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v30);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  AdContextDataProviding.dataIfPresent<A>(for:)((uint64_t)&type metadata for ReferralAdData, v30, (uint64_t)&type metadata for ReferralAdData, v31);
  LOBYTE(v31) = v95;
  __src[0] = v43;
  *(_QWORD *)&__src[8] = v9;
  __src[16] = v42;
  *(_QWORD *)&__src[24] = v38;
  *(_QWORD *)&__src[32] = v52;
  *(_QWORD *)&__src[40] = v37;
  __src[48] = v39;
  *(_QWORD *)&__src[56] = v41;
  *(_QWORD *)&__src[64] = v53;
  *(_QWORD *)&__src[72] = v50;
  *(_QWORD *)&__src[80] = v51;
  *(_QWORD *)&__src[88] = v40;
  *(_QWORD *)&__src[96] = v15;
  *(_QWORD *)&__src[104] = v49;
  *(_QWORD *)&__src[112] = v35;
  *(_QWORD *)&__src[120] = v48;
  *(_QWORD *)&__src[128] = v34;
  *(_QWORD *)&__src[136] = v45;
  *(_QWORD *)&__src[144] = v47;
  *(_QWORD *)&__src[152] = v99;
  *(_QWORD *)&__src[160] = v36;
  *(_QWORD *)&__src[168] = v33;
  *(_QWORD *)&__src[176] = v32;
  *(_QWORD *)&__src[184] = v46;
  *(_QWORD *)&__src[192] = v21;
  *(_QWORD *)&__src[200] = v29;
  *(_QWORD *)&__src[208] = v23;
  *(_QWORD *)&__src[216] = v58;
  *(_QWORD *)&__src[224] = v54;
  *(_QWORD *)&__src[232] = v56;
  *(_QWORD *)&__src[240] = v28;
  *(_QWORD *)&__src[248] = v27;
  *(_QWORD *)&__src[256] = v24;
  *(_QWORD *)&__src[264] = v25;
  __src[272] = v95;
  sub_1BA263038((uint64_t)__src);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  memcpy(a2, __src, 0x111uLL);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v60) = v43;
  v61 = v9;
  LOBYTE(v62) = v42;
  v63 = v38;
  v64 = v52;
  v65 = v37;
  *(_DWORD *)((char *)&v60 + 1) = v98[0];
  HIDWORD(v60) = *(_DWORD *)((char *)v98 + 3);
  *(_DWORD *)((char *)&v62 + 1) = *(_DWORD *)v97;
  HIDWORD(v62) = *(_DWORD *)&v97[3];
  LOBYTE(v66) = v39;
  HIDWORD(v66) = *(_DWORD *)&v96[3];
  *(_DWORD *)((char *)&v66 + 1) = *(_DWORD *)v96;
  v67 = v41;
  v68 = v53;
  v69 = v50;
  v70 = v51;
  v71 = v40;
  v72 = v44;
  v73 = v49;
  v74 = v35;
  v75 = v48;
  v76 = v34;
  v77 = v45;
  v78 = v47;
  v79 = v99;
  v80 = v36;
  v81 = v33;
  v82 = v32;
  v83 = v46;
  v84 = v21;
  v85 = v29;
  v86 = v23;
  v87 = v58;
  v88 = v54;
  v89 = v56;
  v90 = v28;
  v91 = v27;
  v92 = v24;
  v93 = v25;
  v94 = v31;
  return sub_1BA263178((uint64_t)&v60);
}

uint64_t AdContextDataProviding.data<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v5[2];
  char v6;

  v5[0] = 0;
  v5[1] = 0;
  v6 = -1;
  return (*(uint64_t (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(a4 + 8))(a1, v5, a3, a2);
}

char *sub_1BA232098@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return AdContextBuilder.data<A>(for:namespace:)(a1, a2, a3, a4);
}

uint64_t AdContextDataProviding.dataIfPresent<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v5[2];
  char v6;

  v5[0] = 0;
  v5[1] = 0;
  v6 = -1;
  return (*(uint64_t (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(a4 + 16))(a1, v5, a3, a2);
}

uint64_t sub_1BA2320F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  return AdContextBuilder.dataIfPresent<A>(for:namespace:)(a1, a2, a3, a4);
}

uint64_t AdContextBuilder.dataIfPresent<A>(for:namespace:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  void (*v21)(_BYTE *, uint64_t);
  void (*v23)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v24;
  _BYTE *v25;
  _BYTE v26[12];
  int v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  _QWORD v37[2];
  char v38;

  v5 = v4;
  v29 = a1;
  v31 = a4;
  v8 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v30 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_1BA2C245C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = &v26[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v12);
  v16 = &v26[-v15];
  v18 = *a2;
  v17 = a2[1];
  v19 = *((unsigned __int8 *)a2 + 16);
  v37[0] = *(_QWORD *)(v5 + 40);
  v32 = a3;
  v33 = v5;
  v34 = v18;
  v35 = v17;
  v28 = v17;
  v27 = v19;
  v36 = v19;
  sub_1BA2C1724();
  swift_retain();
  sub_1BA2C1880();
  swift_release();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 16))(v14, v16, v10);
  v20 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v14, 1, a3);
  v21 = *(void (**)(_BYTE *, uint64_t))(v11 + 8);
  if (v20 == 1)
  {
    v21(v14, v10);
    if (*(_QWORD *)(v5 + 16))
    {
      v37[0] = v18;
      v37[1] = v28;
      v38 = v27;
      AdContextBuilder.dataIfPresent<A>(for:namespace:)(v29, v37, a3);
      return ((uint64_t (*)(_BYTE *, uint64_t))v21)(v16, v10);
    }
    else
    {
      v21(v16, v10);
      return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v31, 1, 1, a3);
    }
  }
  else
  {
    v21(v16, v10);
    v23 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32);
    v24 = v30;
    v23(v30, v14, a3);
    v25 = v31;
    v23(v31, v24, a3);
    return (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, a3);
  }
}

uint64_t getEnumTagSinglePayload for AdPreview(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t getEnumTagSinglePayload for FeedGroupAdData.AdjacentPosition(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t type metadata accessor for AdContextBuilder()
{
  return objc_opt_self();
}

uint64_t sub_1BA232448()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = MEMORY[0x1E0DEE9D8];
  v6 = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(v0 + 16);
  swift_retain();
  if (v2)
  {
    do
    {
      v3 = swift_retain();
      MEMORY[0x1BCCD8A1C](v3);
      if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BA2C22A0();
      sub_1BA2C22C4();
      sub_1BA2C2288();
      v4 = *(_QWORD *)(v2 + 16);
      swift_retain();
      swift_release();
      v2 = v4;
    }
    while (v4);
    return v6;
  }
  return v1;
}

void type metadata accessor for AdRequestResult()
{
  JUMPOUT(0x1BCCD9364);
}

void AdRequestStore.store(request:for:)()
{
  type metadata accessor for AdRequest();
}

uint64_t sub_1BA232568(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t *, uint64_t, uint64_t);
  int v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(uint64_t *, _QWORD, uint64_t);
  uint64_t v25;
  void (*v26)(uint64_t *, uint64_t);
  void *v27;
  id v28;
  _QWORD *v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  void (*v33)(uint64_t *, uint64_t);
  id v34;
  _BYTE v36[96];

  v7 = sub_1BA2C245C();
  *(_QWORD *)(v5 - 144) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = &v36[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v13 = (uint64_t *)&v36[-v12];
  sub_1BA2C16E8();
  v14 = *(_QWORD *)(a1 - 8);
  v15 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v14 + 48);
  *(_QWORD *)(v5 - 136) = v3;
  v16 = v15(v3, 1, a1);
  v17 = qword_1ED5B2DB0;
  if (v16 != 1)
  {
    *(_QWORD *)(v5 - 176) = v1;
    *(_QWORD *)(v5 - 160) = v11;
    if (v17 != -1)
      swift_once();
    *(_QWORD *)(v5 - 168) = qword_1ED5B2888;
    sub_1BA22D5D8();
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1BA2C37C0;
    *(_QWORD *)(v22 + 56) = MEMORY[0x1E0DEA968];
    v23 = sub_1BA2291C8();
    *(_QWORD *)(v22 + 64) = v23;
    *(_QWORD *)(v5 - 152) = v4;
    *(_QWORD *)(v22 + 32) = v4;
    *(_QWORD *)(v22 + 40) = v2;
    v24 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 16);
    v25 = *(_QWORD *)(v5 - 144);
    v24(v13, *(_QWORD *)(v5 - 136), v25);
    if (v15(v13, 1, a1) == 1)
    {
      v26 = *(void (**)(uint64_t *, uint64_t))(v8 + 8);
      v27 = *(void **)(v5 - 168);
      v28 = v27;
      swift_bridgeObjectRetain();
      v26(v13, v25);
      v29 = (_QWORD *)(v22 + 72);
      *(_QWORD *)(v22 + 96) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v22 + 104) = v23;
      v30 = v27;
    }
    else
    {
      v31 = *v13;
      v32 = v13[1];
      v33 = *(void (**)(uint64_t *, uint64_t))(v14 + 8);
      v30 = *(void **)(v5 - 168);
      v34 = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v33(v13, a1);
      v29 = (_QWORD *)(v22 + 72);
      *(_QWORD *)(v22 + 96) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v22 + 104) = v23;
      if (v32)
      {
        *v29 = v31;
        v25 = *(_QWORD *)(v5 - 144);
LABEL_13:
        *(_QWORD *)(v22 + 80) = v32;
        sub_1BA2C239C();
        sub_1BA2C1EB0();

        swift_bridgeObjectRelease();
        v21 = *(_QWORD *)(v5 - 152);
        v24(*(uint64_t **)(v5 - 160), *(_QWORD *)(v5 - 136), v25);
        goto LABEL_14;
      }
      v25 = *(_QWORD *)(v5 - 144);
    }
    *v29 = 0;
    v32 = 0xE000000000000000;
    goto LABEL_13;
  }
  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v18 = (void *)qword_1ED5B2888;
  sub_1BA22D5D8();
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BA2C37D0;
  *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v19 + 64) = sub_1BA2291C8();
  *(_QWORD *)(v19 + 32) = v4;
  *(_QWORD *)(v19 + 40) = v2;
  swift_bridgeObjectRetain();
  v20 = v18;
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  v21 = v4;
  (*(void (**)(_BYTE *, _QWORD, _QWORD))(v8 + 16))(v11, *(_QWORD *)(v5 - 136), *(_QWORD *)(v5 - 144));
LABEL_14:
  *(_QWORD *)(v5 - 128) = v21;
  *(_QWORD *)(v5 - 120) = v2;
  swift_beginAccess();
  sub_1BA2C20E4();
  swift_bridgeObjectRetain();
  sub_1BA2C20FC();
  swift_endAccess();
  return sub_1BA2C16F4();
}

uint64_t sub_1BA2328CC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t **a3@<X8>)
{
  return sub_1BA2328EC(a1, a2, a3);
}

uint64_t sub_1BA2328EC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t **a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  __int128 v16;
  uint64_t *v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t result;
  _OWORD v30[4];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[8];
  uint64_t v35;

  v6 = *a1;
  v8 = a1[2];
  v7 = a1[3];
  v9 = (uint64_t *)(v3 + 16);
  swift_beginAccess();
  v10 = *(_QWORD *)(v3 + 16);
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_9;
  swift_bridgeObjectRetain();
  v11 = sub_1BA229E28(v8, v7);
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    result = swift_endAccess();
    goto LABEL_10;
  }
  v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v11);
  v35 = v13;
  swift_endAccess();
  swift_bridgeObjectRetain();
  v14 = swift_bridgeObjectRelease();
  v15 = &v32;
  MEMORY[0x1E0C80A78](v14);
  v16 = *(_OWORD *)(v6 + 104);
  v30[1] = *(_OWORD *)(v6 + 88);
  v30[2] = v16;
  v30[3] = *(_OWORD *)(v6 + 120);
  v31 = a2;
  swift_bridgeObjectRetain();
  v17 = 0;
  v18 = sub_1BA261880((uint64_t (*)(uint64_t *))sub_1BA261B64, (uint64_t)v30, v13);
  if ((v19 & 1) == 0)
  {
    v20 = v18;
    if ((v18 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v18 < *(_QWORD *)(v13 + 16))
    {
      v21 = v13 + 32 * v18;
      v15 = *(uint64_t **)(v21 + 32);
      v17 = *(uint64_t **)(v21 + 40);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRelease();
      sub_1BA261958(v20, (uint64_t)v34);
      swift_release();
      swift_bridgeObjectRelease();
      v22 = v35;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v33 = *v9;
      *v9 = 0x8000000000000000;
      sub_1BA2882D8(v22, v8, v7, isUniquelyReferenced_nonNull_native);
      *v9 = v33;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      if (qword_1ED5B2DB0 == -1)
      {
LABEL_7:
        v24 = (void *)qword_1ED5B2888;
        sub_1BA22D5D8();
        v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_1BA2C37C0;
        v26 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEA968];
        v27 = sub_1BA2291C8();
        *(_QWORD *)(v25 + 32) = v8;
        *(_QWORD *)(v25 + 40) = v7;
        *(_QWORD *)(v25 + 96) = v26;
        *(_QWORD *)(v25 + 104) = v27;
        *(_QWORD *)(v25 + 64) = v27;
        *(_QWORD *)(v25 + 72) = v15;
        *(_QWORD *)(v25 + 80) = v17;
        swift_bridgeObjectRetain();
        v28 = v24;
        swift_bridgeObjectRetain();
        sub_1BA2C239C();
        sub_1BA2C1EB0();
        swift_release();

        result = swift_bridgeObjectRelease();
        *a3 = v15;
        a3[1] = v17;
        return result;
      }
LABEL_14:
      swift_once();
      goto LABEL_7;
    }
    __break(1u);
    goto LABEL_14;
  }
  result = swift_bridgeObjectRelease_n();
LABEL_10:
  *a3 = 0;
  a3[1] = 0;
  return result;
}

void sub_1BA232BCC()
{
  type metadata accessor for AdRequest();
}

void sub_1BA232C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v17 = sub_1BA2C245C();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&a9 - v18;
  *(_QWORD *)(v15 - 112) = 0x8000000000000010;
  *(_QWORD *)(v15 - 104) = 0;
  *(_QWORD *)(v15 - 96) = 0;
  *(_QWORD *)(v15 - 88) = 0;
  v20 = v14 + *(int *)(a1 + 52);
  *(_QWORD *)(v15 - 120) = *(_QWORD *)(v20 + *(int *)(type metadata accessor for AdContext(0, v10, v12, v21) + 36));
  *(_OWORD *)(v15 - 160) = 0u;
  *(_OWORD *)(v15 - 144) = 0u;
  *(_BYTE *)(v15 - 128) = 1;
  v22 = *(_QWORD *)(a1 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v19, v14, a1);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA233490(*(_QWORD *)(v15 - 168), v11, (__int128 *)(v15 - 112), 0, 0, (uint64_t *)(v15 - 120), (__int128 *)(v15 - 160), (uint64_t)v19, *(uint64_t **)(v15 - 176), v10, v9, v12, v13);
}

void AdRequestStore.request(for:behavior:)()
{
  type metadata accessor for AdRequest();
}

uint64_t sub_1BA232D78(uint64_t a1)
{
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  void (*v21)(_BYTE *, _BYTE *, uint64_t);
  void *v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v33[96];

  v7 = sub_1BA2C245C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  *(_QWORD *)(v5 - 168) = &v33[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = &v33[-v12];
  v14 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](v11);
  v16 = &v33[-v15];
  *(_DWORD *)(v5 - 156) = *v2;
  sub_1BA2C16E8();
  *(_QWORD *)(v5 - 176) = v3 + 16;
  swift_beginAccess();
  *(_QWORD *)(v5 - 152) = v1;
  *(_QWORD *)(v5 - 144) = v3;
  v17 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v5 - 128) = v1;
  *(_QWORD *)(v5 - 120) = v4;
  swift_bridgeObjectRetain();
  v18 = MEMORY[0x1E0DEA968];
  MEMORY[0x1BCCD88A8](v5 - 128, v17, MEMORY[0x1E0DEA968], a1, MEMORY[0x1E0DEA978]);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v13, 1, a1) == 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
    swift_endAccess();
    v19 = 1;
    v20 = *(_BYTE **)(v5 - 136);
  }
  else
  {
    *(_QWORD *)(v5 - 192) = v7;
    *(_QWORD *)(v5 - 184) = v8;
    v21 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 32);
    v21(v16, v13, a1);
    swift_endAccess();
    if (qword_1ED5B2DB0 != -1)
      swift_once();
    v22 = (void *)qword_1ED5B2888;
    sub_1BA22D5D8();
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1BA2C37C0;
    *(_QWORD *)(v23 + 56) = v18;
    v24 = sub_1BA2291C8();
    v25 = *(_DWORD *)(v5 - 156);
    v26 = 7368560;
    if (v25)
      v26 = 1701736302;
    v27 = 0xE300000000000000;
    if (v25)
      v27 = 0xE400000000000000;
    v28 = *(_QWORD *)(v5 - 152);
    *(_QWORD *)(v23 + 32) = v28;
    *(_QWORD *)(v23 + 40) = v4;
    *(_QWORD *)(v23 + 96) = v18;
    *(_QWORD *)(v23 + 104) = v24;
    *(_QWORD *)(v23 + 64) = v24;
    *(_QWORD *)(v23 + 72) = v26;
    *(_QWORD *)(v23 + 80) = v27;
    swift_bridgeObjectRetain();
    v29 = v22;
    sub_1BA2C239C();
    sub_1BA2C1EB0();

    swift_bridgeObjectRelease();
    v30 = *(_QWORD *)(v5 - 184);
    if ((v25 & 1) == 0)
    {
      *(_QWORD *)(v5 - 128) = v28;
      *(_QWORD *)(v5 - 120) = v4;
      swift_beginAccess();
      sub_1BA2C20E4();
      v31 = *(_QWORD *)(v5 - 168);
      sub_1BA2C20CC();
      swift_endAccess();
      (*(void (**)(uint64_t, _QWORD))(v30 + 8))(v31, *(_QWORD *)(v5 - 192));
    }
    v20 = *(_BYTE **)(v5 - 136);
    v21(v20, v16, a1);
    v19 = 0;
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v20, v19, 1, a1);
  return sub_1BA2C16F4();
}

void sub_1BA233070()
{
  type metadata accessor for JournalEntry();
}

void sub_1BA2330BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 - 120))(v2, v1, v3, v4, v5, v6);
  sub_1BA22A46C();
}

void sub_1BA23314C()
{
  type metadata accessor for AdRequest();
}

void sub_1BA2331A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  char *v21;

  v19 = sub_1BA2C245C();
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&a9 - v20;
  *(_QWORD *)(v17 - 112) = v16;
  *(_QWORD *)(v17 - 104) = 0;
  *(_QWORD *)(v17 - 96) = 0;
  *(_QWORD *)(v17 - 88) = 0;
  *(_QWORD *)(v17 - 120) = 0;
  *(_OWORD *)(v17 - 160) = 0u;
  *(_OWORD *)(v17 - 144) = 0u;
  *(_BYTE *)(v17 - 128) = 1;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))((char *)&a9 - v20, 1, 1, a1);
  swift_bridgeObjectRetain();
  sub_1BA233490(v12, v9, (__int128 *)(v17 - 112), 0, 0, (uint64_t *)(v17 - 120), (__int128 *)(v17 - 160), (uint64_t)v21, v13, v11, v10, v14, v15);
}

void sub_1BA233270(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  _DWORD *v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_DWORD **)(*(_QWORD *)(a4 + 16) - 8);
  if (v5[21] <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = v5[21];
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v7 + 84) <= v6)
    v8 = v6;
  else
    v8 = *(_DWORD *)(v7 + 84);
  if (v8 >= a3)
  {
    v11 = 0u;
    if (a2 <= v8)
      goto LABEL_20;
  }
  else
  {
    if (((*(_DWORD *)(v7 + 64)
         + ((((v5[16] + 7) & 0xFFFFFFF8)
           + 8
           + *(unsigned __int8 *)(v7 + 80)
           + (((v5[20] & 0xF8) + 23) & ~(v5[20] & 0xF8 | 7))) & ~*(unsigned __int8 *)(v7 + 80))
         + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v9 = a3 - v8 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v8)
LABEL_20:
      __asm { BR              X6 }
  }
  if (((*(_DWORD *)(v7 + 64)
       + ((((v5[16] + 7) & 0xFFFFFFF8)
         + 8
         + *(unsigned __int8 *)(v7 + 80)
         + (((v5[20] & 0xF8) + 23) & ~(v5[20] & 0xF8 | 7))) & ~*(unsigned __int8 *)(v7 + 80))
       + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v12 = ~v8 + a2;
    bzero(a1, ((*(_QWORD *)(v7 + 64)+ ((((*((_QWORD *)v5 + 8) + 7) & 0xFFFFFFFFFFFFFFF8)+ 8+ *(unsigned __int8 *)(v7 + 80)+ (((v5[20] & 0xF8) + 23) & ~(v5[20] & 0xF8 | 7))) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ 7) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_1BA2333B8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1BA23345CLL);
}

void sub_1BA2333C0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1BA2333C8);
  JUMPOUT(0x1BA23345CLL);
}

void sub_1BA233410()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BA23345CLL);
}

void sub_1BA233418()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BA23345CLL);
}

void sub_1BA233420(uint64_t a1, int a2)
{
  unsigned int v2;
  unsigned int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (a2)
  {
    if (v4 != 0x7FFFFFFF)
    {
      if (v3 < v2)
        JUMPOUT(0x1BA233478);
      JUMPOUT(0x1BA23342CLL);
    }
    if (a2 < 0)
      JUMPOUT(0x1BA233454);
    *(_QWORD *)(v5 + 8) = (a2 - 1);
  }
  JUMPOUT(0x1BA23345CLL);
}

void sub_1BA233490(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, __int128 *a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v36 = a5;
  v37 = a8;
  v34 = a2;
  v35 = a4;
  v33 = a1;
  v27 = a13;
  v17 = sub_1BA2C1460();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *a3;
  v25[1] = *((_QWORD *)a3 + 2);
  v28 = *a6;
  v32 = *a7;
  v21 = *((_QWORD *)a7 + 2);
  v30 = *((_QWORD *)a7 + 3);
  v31 = v21;
  v29 = *((unsigned __int8 *)a7 + 32);
  sub_1BA2C1454();
  v22 = sub_1BA2C143C();
  v24 = v23;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  *a9 = v22;
  a9[1] = v24;
  v38 = a10;
  v39 = a11;
  v40 = a12;
  v41 = v27;
  type metadata accessor for JournalEntry();
}

void sub_1BA233584(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1BA2C1418();
  v9 = (_QWORD *)(v2 + a1[14]);
  v10 = *(_QWORD *)(v7 - 152);
  *v9 = *(_QWORD *)(v7 - 160);
  v9[1] = v10;
  v11 = v2 + a1[15];
  *(_OWORD *)v11 = *(_OWORD *)(v7 - 240);
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v7 - 248);
  *(_QWORD *)(v11 + 24) = v6;
  v12 = (_QWORD *)(v2 + a1[16]);
  v13 = *(_QWORD *)(v7 - 136);
  *v12 = *(_QWORD *)(v7 - 144);
  v12[1] = v13;
  *(_QWORD *)(v2 + a1[17]) = *(_QWORD *)(v7 - 208);
  v14 = v2 + a1[18];
  *(_OWORD *)v14 = *(_OWORD *)(v7 - 176);
  v15 = *(_QWORD *)(v7 - 192);
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v7 - 184);
  *(_QWORD *)(v14 + 24) = v15;
  *(_BYTE *)(v14 + 32) = *(_DWORD *)(v7 - 196);
  *(_QWORD *)(v7 - 120) = v5;
  *(_QWORD *)(v7 - 112) = v3;
  *(_QWORD *)(v7 - 104) = v4;
  *(_QWORD *)(v7 - 96) = v1;
  type metadata accessor for AdRequest();
}

uint64_t sub_1BA233620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1BA2C245C();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, *(_QWORD *)(v1 - 128), v2);
}

void sub_1BA233664()
{
  sub_1BA23314C();
}

uint64_t _s7NewsAds12CreativeTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1BA2336B8 + 4 * byte_1BA2CC37C[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1BA2336EC + 4 * byte_1BA2CC377[v4]))();
}

uint64_t sub_1BA2336EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA2336F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA2336FCLL);
  return result;
}

uint64_t sub_1BA233708(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA233710);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1BA233714(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA23371C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for ArticleAdData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t destroy for FeedAdData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA233800(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t *sub_1BA233844(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1BA2338F8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (*(_QWORD *)(result + 8))
  {
    v1 = *(_QWORD *)(result + 16);
    v2 = *(_QWORD *)(result + 72);
    v4 = *(_QWORD *)(result + 64);
    if ((*(_BYTE *)(result + 24) & 1) != 0 || v1 >= 1)
      swift_bridgeObjectRetain();
    sub_1BA2C1CF4();
    swift_bridgeObjectRetain();
    sub_1BA2C1D18();
    swift_bridgeObjectRetain();
    sub_1BA2C1CDC();
    swift_bridgeObjectRetain();
    sub_1BA2C1CA0();
    objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v1);
    sub_1BA2C1B50();
    swift_bridgeObjectRetain();
    sub_1BA2C1CA0();
    swift_bridgeObjectRetain();
    result = sub_1BA2C1C88();
    if (v2)
    {
      sub_1BA26FDCC();
      v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_1BA2C37D0;
      *(_QWORD *)(v3 + 32) = v4;
      *(_QWORD *)(v3 + 40) = v2;
      swift_bridgeObjectRetain();
      return sub_1BA2C1D00();
    }
  }
  return result;
}

uint64_t sub_1BA233A54(uint64_t a1, _QWORD *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v26 = a4;
  v25 = a1;
  v22 = sub_1BA2C1484();
  v20 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BA2C1460();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a2[1];
  v13 = a2[4];
  v23 = a2[7];
  v24 = v12;
  v21 = a2[8];
  v14 = *a3;
  sub_1BA2C1454();
  v15 = sub_1BA2C143C();
  v19[0] = v16;
  v19[1] = v15;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (*(_QWORD *)(v13 + 16) || *(_QWORD *)(v14 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1BA2C1478();
  sub_1BA2C146C();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = sub_1BA2C19DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1BA233C54(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v19 = a4;
  v17 = a1;
  v14 = sub_1BA2C1484();
  v6 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a2[5];
  v15 = *a2;
  v16 = v9;
  v10 = a2[9];
  v18 = a2[10];
  if (!v10 && *(_QWORD *)(*(_QWORD *)a3 + 16))
    swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BA2C1478();
  sub_1BA2C146C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = sub_1BA2C19DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

void sub_1BA233DF8()
{
  sub_1BA23314C();
}

uint64_t sub_1BA233E04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  return AdContextBuilder.chain(_:identifier:)(a1, a2, a3, a4);
}

uint64_t AdContextBuilder.chain(_:identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;

  v9 = *v4;
  v10 = sub_1BA2C170C();
  MEMORY[0x1E0C80A78](v10);
  v11 = (_QWORD *)swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BA2C1700();
  sub_1BA2C1724();
  swift_allocObject();
  v11[5] = sub_1BA2C1718();
  v11[6] = sub_1BA2340BC(MEMORY[0x1E0DEE9D8]);
  v11[2] = v4;
  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1BA2C21C8();
    sub_1BA2C21C8();
    sub_1BA2C21C8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  v11[3] = a1;
  v11[4] = a2;
  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v12 = (void *)qword_1ED5B2888;
  sub_1BA2228E8(0, (unint64_t *)&qword_1ED5B2CC0, (unint64_t *)&qword_1ED5B2CD8, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BA2C37D0;
  v14 = v12;
  AdContextBuilder.path.getter();
  v15 = MEMORY[0x1E0DEA968];
  sub_1BA22920C(0, (unint64_t *)&qword_1ED5B2B70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA229294();
  v16 = sub_1BA2C2120();
  v18 = v17;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 56) = v15;
  *(_QWORD *)(v13 + 64) = sub_1BA2291C8();
  *(_QWORD *)(v13 + 32) = v16;
  *(_QWORD *)(v13 + 40) = v18;
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  result = swift_bridgeObjectRelease();
  a4[3] = v9;
  a4[4] = &protocol witness table for AdContextBuilder;
  *a4 = v11;
  return result;
}

unint64_t sub_1BA2340BC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA22DBBC();
  v2 = sub_1BA2C25B8();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BA24AA98(v6, (uint64_t)&v15, (uint64_t (*)(_QWORD))sub_1BA2664C4);
    v7 = v15;
    v8 = v16;
    result = sub_1BA229E28(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = sub_1BA21D3D4(&v17, v3[7] + 40 * result);
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void *__swift_memcpy273_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x111uLL);
}

Swift::Void __swiftcall Journal.addCreatedEntry(placementIdentifier:)(Swift::String placementIdentifier)
{
  sub_1BA233070();
}

ValueMetadata *type metadata accessor for AdContextDataNamespace()
{
  return &type metadata for AdContextDataNamespace;
}

ValueMetadata *type metadata accessor for AdContextDataNamespace.Edge()
{
  return &type metadata for AdContextDataNamespace.Edge;
}

ValueMetadata *type metadata accessor for FeedBannerAdContext()
{
  return &type metadata for FeedBannerAdContext;
}

ValueMetadata *type metadata accessor for CreativeAdData()
{
  return &type metadata for CreativeAdData;
}

NewsAds::CreativeAdData __swiftcall CreativeAdData.init(creativeType:)(NewsAds::CreativeAdData creativeType)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)creativeType.creativeType;
  return creativeType;
}

uint64_t sub_1BA234258()
{
  return swift_allocateGenericValueMetadata();
}

ValueMetadata *type metadata accessor for CreativeType()
{
  return &type metadata for CreativeType;
}

Swift::Void __swiftcall Journal.addScheduledEntry(placementIdentifier:)(Swift::String placementIdentifier)
{
  sub_1BA233070();
}

void Journal.addFailedEntry(error:request:placementIdentifier:contentIdentifier:)()
{
  sub_1BA224CF8();
}

ValueMetadata *type metadata accessor for PreviewInterstitialAdContext()
{
  return &type metadata for PreviewInterstitialAdContext;
}

ValueMetadata *type metadata accessor for ArticleInterstitialAdContext()
{
  return &type metadata for ArticleInterstitialAdContext;
}

uint64_t sub_1BA2342A8()
{
  return swift_allocateGenericValueMetadata();
}

void type metadata accessor for InterstitialViewInsertion()
{
  JUMPOUT(0x1BCCD9364);
}

ValueMetadata *type metadata accessor for ArticlePrerollAdContext()
{
  return &type metadata for ArticlePrerollAdContext;
}

uint64_t type metadata accessor for PrerollAdPlacement()
{
  uint64_t result;

  result = qword_1ED5B3920;
  if (!qword_1ED5B3920)
    return swift_getSingletonMetadata();
  return result;
}

ValueMetadata *type metadata accessor for AdHostDescription()
{
  return &type metadata for AdHostDescription;
}

NewsAds::AdHostDescription __swiftcall AdHostDescription.init(name:identifier:)(Swift::String name, Swift::String_optional identifier)
{
  Swift::String_optional *v2;
  NewsAds::AdHostDescription result;

  v2->value = name;
  v2[1] = identifier;
  result.identifier = identifier;
  result.name = name;
  return result;
}

uint64_t sub_1BA234328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1BA2343F4(0, &qword_1ED5B14D0, MEMORY[0x1E0DBC400]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78]();
  v4 = (char *)&v6 - v3;
  sub_1BA2343F4(0, &qword_1ED5B14D8, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1BA2C1FC4();
  qword_1ED5B14E0 = result;
  return result;
}

void sub_1BA2343F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, ValueMetadata *))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, &type metadata for DebugJournal);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for BannerAdLayout(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

ValueMetadata *type metadata accessor for AdLayout()
{
  return &type metadata for AdLayout;
}

uint64_t dispatch thunk of PPTType.disablePersonalization.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PPTType.todayConfigOverrides.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

ValueMetadata *type metadata accessor for PPTTodayConfigOverrides()
{
  return &type metadata for PPTTodayConfigOverrides;
}

uint64_t PPTTodayConfigOverrides.init(configData:configID:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

ValueMetadata *type metadata accessor for JournalEntryStatus.Failure()
{
  return &type metadata for JournalEntryStatus.Failure;
}

ValueMetadata *type metadata accessor for JournalEntryStatus.Discard()
{
  return &type metadata for JournalEntryStatus.Discard;
}

__n128 JournalEntry.layout.getter@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  __n128 result;
  __int128 v6;

  v3 = v2 + *(int *)(a1 + 72);
  v4 = *(_BYTE *)(v3 + 32);
  result = *(__n128 *)v3;
  v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(_OWORD *)(a2 + 16) = v6;
  *(_BYTE *)(a2 + 32) = v4;
  return result;
}

void sub_1BA23457C(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 24) = &type metadata for NoopPPTType;
  *(_QWORD *)(a1 + 32) = &protocol witness table for NoopPPTType;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

__n128 __swift_memcpy248_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __n128 result;
  __int128 v12;
  __int128 v13;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  v8 = a2[8];
  v9 = a2[9];
  v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  result = (__n128)a2[12];
  v12 = a2[13];
  v13 = a2[14];
  *(_QWORD *)(a1 + 240) = *((_QWORD *)a2 + 30);
  *(_OWORD *)(a1 + 208) = v12;
  *(_OWORD *)(a1 + 224) = v13;
  *(__n128 *)(a1 + 192) = result;
  return result;
}

unint64_t sub_1BA2346CC()
{
  unint64_t result;

  result = qword_1ED5B2CE0;
  if (!qword_1ED5B2CE0)
  {
    result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_1ED5B2CE0);
  }
  return result;
}

void sub_1BA23470C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B4A30)
  {
    sub_1BA236F24();
    v0 = sub_1BA2C269C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B4A30);
  }
}

void sub_1BA234760(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BA22920C(255, a3, a4, MEMORY[0x1E0DB5820]);
    v5 = sub_1BA2C269C();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_1BA22E2C8(a1, &qword_1ED5B2BE8);
}

unint64_t sub_1BA2347D4()
{
  unint64_t result;

  result = qword_1ED5B2BE0;
  if (!qword_1ED5B2BE0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5B2BE0);
  }
  return result;
}

unint64_t sub_1BA234828()
{
  unint64_t result;

  result = qword_1ED5B2BB8;
  if (!qword_1ED5B2BB8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5B2BB8);
  }
  return result;
}

void sub_1BA23487C(uint64_t a1)
{
  sub_1BA22053C(a1, &qword_1ED5B2BA8, (uint64_t (*)(uint64_t))sub_1BA2346CC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

unint64_t sub_1BA234898()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED5B2B98;
  if (!qword_1ED5B2B98)
  {
    sub_1BA22053C(255, &qword_1ED5B2B90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCD93D0](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED5B2B98);
  }
  return result;
}

void sub_1BA2348F8(uint64_t a1)
{
  sub_1BA22053C(a1, &qword_1ED5B2B90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

void sub_1BA234914()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B2B70)
  {
    v0 = sub_1BA2C22F4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B2B70);
  }
}

uint64_t sub_1BA234968(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BA22053C(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCD93D0](MEMORY[0x1E0DEAF38], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static String.appContextBuilderName.getter()
{
  return 7368801;
}

unint64_t sub_1BA2349C0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA22E0D4(0, &qword_1ED5B2C48);
  v2 = sub_1BA2C25B8();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BA26622C(v6, (uint64_t)&v15, &qword_1EF27F050);
    v7 = v15;
    v8 = v16;
    result = sub_1BA229E28(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1BA22E0C4(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BA234B14(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA22E0D4(0, &qword_1ED5B0EF8);
  v2 = (_QWORD *)sub_1BA2C25B8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BA26622C(v4, (uint64_t)&v17, &qword_1EF27F030);
    v5 = v17;
    v6 = v18;
    result = sub_1BA229E28(v17, v18);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = (uint64_t *)(v2[6] + 16 * result);
    *v9 = v5;
    v9[1] = v6;
    v10 = v2[7] + 72 * result;
    *(_OWORD *)v10 = v19;
    v11 = v20;
    v12 = v21;
    v13 = v22;
    *(_QWORD *)(v10 + 64) = v23;
    *(_OWORD *)(v10 + 32) = v12;
    *(_OWORD *)(v10 + 48) = v13;
    *(_OWORD *)(v10 + 16) = v11;
    v14 = v2[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v2[2] = v16;
    v4 += 88;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for AppAdData()
{
  return &type metadata for AppAdData;
}

unint64_t sub_1BA234C90()
{
  unint64_t result;

  result = qword_1ED5B2B38;
  if (!qword_1ED5B2B38)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for AppAdData, &type metadata for AppAdData);
    atomic_store(result, (unint64_t *)&qword_1ED5B2B38);
  }
  return result;
}

unint64_t sub_1BA234CD4()
{
  unint64_t result;

  result = qword_1ED5B2B30;
  if (!qword_1ED5B2B30)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for AppAdData, &type metadata for AppAdData);
    atomic_store(result, (unint64_t *)&qword_1ED5B2B30);
  }
  return result;
}

unint64_t sub_1BA234D18(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BA234C90();
  result = sub_1BA234CD4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

NewsAds::AppAdData __swiftcall AppAdData.init(contentEnvironment:)(NewsAds::AppAdData contentEnvironment)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)contentEnvironment.contentEnvironment;
  return contentEnvironment;
}

ValueMetadata *type metadata accessor for AppAdData.ContentEnvironment()
{
  return &type metadata for AppAdData.ContentEnvironment;
}

void sub_1BA234D60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for NativeAdContext;
    v8[1] = type metadata accessor for NativeAdPlacement();
    v8[2] = sub_1BA23640C();
    v8[3] = &protocol witness table for NativeAdPlacement;
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t type metadata accessor for AdManager()
{
  return objc_opt_self();
}

uint64_t sub_1BA234E00()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for NativeAd.Headline(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1BA234E70()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for NativeAdHeadline(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1BA234EFC()
{
  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for AdErrors()
{
  return &type metadata for AdErrors;
}

unint64_t sub_1BA234F20()
{
  unint64_t result;

  result = qword_1ED5B48A0;
  if (!qword_1ED5B48A0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5B48A0);
  }
  return result;
}

uint64_t dispatch thunk of PPTType.mockTagFeed.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PPTType.mockImages.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for DebugJournalSummaryViewLayoutAttributesFactory()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DebugJournalSummaryViewRenderer()
{
  return objc_opt_self();
}

uint64_t sub_1BA234FC8()
{
  uint64_t result;

  result = qword_1ED5B2728;
  if (!qword_1ED5B2728)
  {
    type metadata accessor for NativeAdProvider();
    type metadata accessor for NativeAdPlacement();
    sub_1BA23640C();
    type metadata accessor for Ad();
  }
  return result;
}

uint64_t sub_1BA235064()
{
  uint64_t result;

  result = qword_1ED5B2720;
  if (!qword_1ED5B2720)
  {
    type metadata accessor for InterstitialAdProvider();
    type metadata accessor for InterstitialAdPlacement();
    sub_1BA2354C8();
    type metadata accessor for Ad();
  }
  return result;
}

uint64_t sub_1BA235100()
{
  uint64_t result;

  result = qword_1ED5B2718;
  if (!qword_1ED5B2718)
  {
    type metadata accessor for InterstitialAdProvider();
    type metadata accessor for InterstitialAdPlacement();
    sub_1BA235724();
    type metadata accessor for Ad();
  }
  return result;
}

uint64_t sub_1BA23519C()
{
  uint64_t result;

  result = qword_1ED5B3120;
  if (!qword_1ED5B3120)
  {
    type metadata accessor for PrerollAdProvider();
    type metadata accessor for PrerollAdPlacement();
    sub_1BA2359AC();
    type metadata accessor for Ad();
  }
  return result;
}

uint64_t sub_1BA235238()
{
  uint64_t result;

  result = qword_1ED5B2710;
  if (!qword_1ED5B2710)
  {
    type metadata accessor for ArticleBannerAdProvider();
    type metadata accessor for ArticleBannerAdPlacement();
    sub_1BA235AFC();
    type metadata accessor for Ad();
  }
  return result;
}

uint64_t sub_1BA2352D4()
{
  uint64_t result;

  result = qword_1ED5B34D8;
  if (!qword_1ED5B34D8)
  {
    type metadata accessor for SponsorshipAdProvider();
    type metadata accessor for SponsorshipAdPlacement();
    sub_1BA235C20();
    type metadata accessor for Ad();
  }
  return result;
}

uint64_t sub_1BA235370()
{
  uint64_t result;

  result = qword_1ED5B3118;
  if (!qword_1ED5B3118)
  {
    type metadata accessor for PrerollAdProvider();
    type metadata accessor for PrerollAdPlacement();
    sub_1BA235D28();
    type metadata accessor for Ad();
  }
  return result;
}

uint64_t sub_1BA23540C()
{
  uint64_t result;

  result = qword_1ED5B2708;
  if (!qword_1ED5B2708)
  {
    type metadata accessor for FeedBannerAdProvider();
    type metadata accessor for FeedBannerAdPlacement();
    sub_1BA235EAC();
    type metadata accessor for Ad();
  }
  return result;
}

uint64_t type metadata accessor for PromotedContentContextFactory()
{
  return objc_opt_self();
}

unint64_t sub_1BA2354C8()
{
  unint64_t result;

  result = qword_1ED5B2540;
  if (!qword_1ED5B2540)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for PreviewInterstitialAdContext, &type metadata for PreviewInterstitialAdContext);
    atomic_store(result, (unint64_t *)&qword_1ED5B2540);
  }
  return result;
}

unint64_t sub_1BA23550C()
{
  unint64_t result;

  result = qword_1ED5B4188;
  if (!qword_1ED5B4188)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for PreviewInterstitialAdContext, &type metadata for PreviewInterstitialAdContext);
    atomic_store(result, (unint64_t *)&qword_1ED5B4188);
  }
  return result;
}

unint64_t sub_1BA235550()
{
  unint64_t result;

  result = qword_1ED5B4180;
  if (!qword_1ED5B4180)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for PreviewInterstitialAdContext, &type metadata for PreviewInterstitialAdContext);
    atomic_store(result, (unint64_t *)&qword_1ED5B4180);
  }
  return result;
}

unint64_t sub_1BA235594(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 24) = sub_1BA23550C();
  result = sub_1BA235550();
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

unint64_t sub_1BA2355C0()
{
  unint64_t result;

  result = qword_1ED5B2538;
  if (!qword_1ED5B2538)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for BannerAdViewLayoutAttributes, &type metadata for BannerAdViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED5B2538);
  }
  return result;
}

unint64_t sub_1BA235604()
{
  unint64_t result;

  result = qword_1ED5B2530;
  if (!qword_1ED5B2530)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for BannerAdViewLayoutAttributes, &type metadata for BannerAdViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED5B2530);
  }
  return result;
}

unint64_t sub_1BA235648()
{
  unint64_t result;

  result = qword_1ED5B2528;
  if (!qword_1ED5B2528)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for BannerAdViewLayoutAttributes, &type metadata for BannerAdViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED5B2528);
  }
  return result;
}

unint64_t sub_1BA23568C()
{
  unint64_t result;

  result = qword_1ED5B2520;
  if (!qword_1ED5B2520)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for BannerAdViewLayoutAttributes, &type metadata for BannerAdViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED5B2520);
  }
  return result;
}

unint64_t sub_1BA2356D0()
{
  unint64_t result;

  result = qword_1ED5B2518;
  if (!qword_1ED5B2518)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for BannerAdViewLayoutAttributes, &type metadata for BannerAdViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED5B2518);
  }
  return result;
}

unint64_t sub_1BA235724()
{
  unint64_t result;

  result = qword_1ED5B2510;
  if (!qword_1ED5B2510)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for ArticleInterstitialAdContext, &type metadata for ArticleInterstitialAdContext);
    atomic_store(result, (unint64_t *)&qword_1ED5B2510);
  }
  return result;
}

unint64_t sub_1BA235768()
{
  unint64_t result;

  result = qword_1ED5B4170;
  if (!qword_1ED5B4170)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for ArticleInterstitialAdContext, &type metadata for ArticleInterstitialAdContext);
    atomic_store(result, (unint64_t *)&qword_1ED5B4170);
  }
  return result;
}

unint64_t sub_1BA2357AC()
{
  unint64_t result;

  result = qword_1ED5B4168;
  if (!qword_1ED5B4168)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for ArticleInterstitialAdContext, &type metadata for ArticleInterstitialAdContext);
    atomic_store(result, (unint64_t *)&qword_1ED5B4168);
  }
  return result;
}

unint64_t sub_1BA2357F0(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 24) = sub_1BA235768();
  result = sub_1BA2357AC();
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

void type metadata accessor for InterstitialAdViewManager()
{
  JUMPOUT(0x1BCCD9364);
}

uint64_t sub_1BA235828()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

void sub_1BA23584C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, ValueMetadata *))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, &type metadata for AdPolicyLayoutEnvironment);
    if (!v5)
      atomic_store(v4, a2);
  }
}

ValueMetadata *type metadata accessor for EngagementBannerAdPolicy()
{
  return &type metadata for EngagementBannerAdPolicy;
}

uint64_t type metadata accessor for ArticleBannerAdPlacement()
{
  uint64_t result;

  result = qword_1ED5B3E38;
  if (!qword_1ED5B3E38)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t AdStatusConditionManager.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AdStatusConditionManager()
{
  return objc_opt_self();
}

uint64_t destroy for MinimumDistanceAdPolicy()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for MinimumDistanceAdPolicy()
{
  return &type metadata for MinimumDistanceAdPolicy;
}

uint64_t MinimumDistanceAdPolicy.init(numberOfViewports:adState:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v4;

  v4 = *a3;
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = v4;
  return result;
}

unint64_t sub_1BA235958()
{
  unint64_t result;

  result = qword_1ED5B3CF8;
  if (!qword_1ED5B3CF8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5B3CF8);
  }
  return result;
}

unint64_t sub_1BA2359AC()
{
  unint64_t result;

  result = qword_1ED5B3110;
  if (!qword_1ED5B3110)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for ArticlePrerollAdContext, &type metadata for ArticlePrerollAdContext);
    atomic_store(result, (unint64_t *)&qword_1ED5B3110);
  }
  return result;
}

unint64_t sub_1BA2359F0()
{
  unint64_t result;

  result = qword_1ED5B4890;
  if (!qword_1ED5B4890)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for ArticlePrerollAdContext, &type metadata for ArticlePrerollAdContext);
    atomic_store(result, (unint64_t *)&qword_1ED5B4890);
  }
  return result;
}

unint64_t sub_1BA235A34()
{
  unint64_t result;

  result = qword_1ED5B4888;
  if (!qword_1ED5B4888)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for ArticlePrerollAdContext, &type metadata for ArticlePrerollAdContext);
    atomic_store(result, (unint64_t *)&qword_1ED5B4888);
  }
  return result;
}

unint64_t sub_1BA235A78(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 24) = sub_1BA2359F0();
  result = sub_1BA235A34();
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

void type metadata accessor for VideoAdProviderFactory()
{
  JUMPOUT(0x1BCCD9364);
}

uint64_t type metadata accessor for SponsorshipAdPlacement()
{
  uint64_t result;

  result = qword_1ED5B3248;
  if (!qword_1ED5B3248)
    return swift_getSingletonMetadata();
  return result;
}

ValueMetadata *type metadata accessor for ArticleBannerAdContext()
{
  return &type metadata for ArticleBannerAdContext;
}

unint64_t sub_1BA235AFC()
{
  unint64_t result;

  result = qword_1ED5B22C0;
  if (!qword_1ED5B22C0)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for ArticleBannerAdContext, &type metadata for ArticleBannerAdContext);
    atomic_store(result, (unint64_t *)&qword_1ED5B22C0);
  }
  return result;
}

unint64_t sub_1BA235B40()
{
  unint64_t result;

  result = qword_1ED5B3BA0;
  if (!qword_1ED5B3BA0)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for ArticleBannerAdContext, &type metadata for ArticleBannerAdContext);
    atomic_store(result, (unint64_t *)&qword_1ED5B3BA0);
  }
  return result;
}

unint64_t sub_1BA235B84()
{
  unint64_t result;

  result = qword_1ED5B3B98;
  if (!qword_1ED5B3B98)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for ArticleBannerAdContext, &type metadata for ArticleBannerAdContext);
    atomic_store(result, (unint64_t *)&qword_1ED5B3B98);
  }
  return result;
}

unint64_t sub_1BA235BC8(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 24) = sub_1BA235B40();
  result = sub_1BA235B84();
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

ValueMetadata *type metadata accessor for FirstViewportAdPolicy()
{
  return &type metadata for FirstViewportAdPolicy;
}

uint64_t FirstViewportAdPolicy.init(numberOfViewports:traits:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

ValueMetadata *type metadata accessor for SponsorshipAdContext()
{
  return &type metadata for SponsorshipAdContext;
}

unint64_t sub_1BA235C20()
{
  unint64_t result;

  result = qword_1ED5B34D0;
  if (!qword_1ED5B34D0)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for SponsorshipAdContext, &type metadata for SponsorshipAdContext);
    atomic_store(result, (unint64_t *)&qword_1ED5B34D0);
  }
  return result;
}

unint64_t sub_1BA235C64()
{
  unint64_t result;

  result = qword_1ED5B34C8;
  if (!qword_1ED5B34C8)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for SponsorshipAdContext, &type metadata for SponsorshipAdContext);
    atomic_store(result, (unint64_t *)&qword_1ED5B34C8);
  }
  return result;
}

unint64_t sub_1BA235CA8()
{
  unint64_t result;

  result = qword_1ED5B34C0;
  if (!qword_1ED5B34C0)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for SponsorshipAdContext, &type metadata for SponsorshipAdContext);
    atomic_store(result, (unint64_t *)&qword_1ED5B34C0);
  }
  return result;
}

unint64_t sub_1BA235CEC(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 24) = sub_1BA235C64();
  result = sub_1BA235CA8();
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

ValueMetadata *type metadata accessor for FeedPrerollAdContext()
{
  return &type metadata for FeedPrerollAdContext;
}

unint64_t sub_1BA235D28()
{
  unint64_t result;

  result = qword_1ED5B3080[0];
  if (!qword_1ED5B3080[0])
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for FeedPrerollAdContext, &type metadata for FeedPrerollAdContext);
    atomic_store(result, qword_1ED5B3080);
  }
  return result;
}

unint64_t sub_1BA235D6C()
{
  unint64_t result;

  result = qword_1ED5B4880;
  if (!qword_1ED5B4880)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for FeedPrerollAdContext, &type metadata for FeedPrerollAdContext);
    atomic_store(result, (unint64_t *)&qword_1ED5B4880);
  }
  return result;
}

unint64_t sub_1BA235DB0()
{
  unint64_t result;

  result = qword_1ED5B4878;
  if (!qword_1ED5B4878)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for FeedPrerollAdContext, &type metadata for FeedPrerollAdContext);
    atomic_store(result, (unint64_t *)&qword_1ED5B4878);
  }
  return result;
}

unint64_t sub_1BA235DF4(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 24) = sub_1BA235D6C();
  result = sub_1BA235DB0();
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

uint64_t type metadata accessor for BannerAdViewRenderer()
{
  return objc_opt_self();
}

unint64_t sub_1BA235E40()
{
  unint64_t result;

  result = qword_1ED5B3A48;
  if (!qword_1ED5B3A48)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5B3A48);
  }
  return result;
}

uint64_t AdContextBuilderType.chain(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(a4 + 24))(a1, a2, 0, 0, a3, a4);
}

unint64_t sub_1BA235EAC()
{
  unint64_t result;

  result = qword_1ED5B2138;
  if (!qword_1ED5B2138)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for FeedBannerAdContext, &type metadata for FeedBannerAdContext);
    atomic_store(result, (unint64_t *)&qword_1ED5B2138);
  }
  return result;
}

unint64_t sub_1BA235EF0()
{
  unint64_t result;

  result = qword_1ED5B3A40;
  if (!qword_1ED5B3A40)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for FeedBannerAdContext, &type metadata for FeedBannerAdContext);
    atomic_store(result, (unint64_t *)&qword_1ED5B3A40);
  }
  return result;
}

unint64_t sub_1BA235F34()
{
  unint64_t result;

  result = qword_1ED5B3A38;
  if (!qword_1ED5B3A38)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for FeedBannerAdContext, &type metadata for FeedBannerAdContext);
    atomic_store(result, (unint64_t *)&qword_1ED5B3A38);
  }
  return result;
}

unint64_t sub_1BA235F78(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 24) = sub_1BA235EF0();
  result = sub_1BA235F34();
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

unint64_t sub_1BA235FA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED5B2098;
  if (!qword_1ED5B2098)
  {
    v1 = type metadata accessor for DebugCommandHandler();
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C58F4, v1);
    atomic_store(result, (unint64_t *)&qword_1ED5B2098);
  }
  return result;
}

void type metadata accessor for BannerAdViewManager()
{
  JUMPOUT(0x1BCCD9364);
}

uint64_t type metadata accessor for BannerAdLayoutStore()
{
  return objc_opt_self();
}

_QWORD *sub_1BA236018(_QWORD *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

id JournalEntryStatus.Discard.error.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

uint64_t sub_1BA236058()
{
  return sub_1BA2360D0();
}

uint64_t sub_1BA236078()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for DisposableObserver()
{
  JUMPOUT(0x1BCCD9364);
}

uint64_t sub_1BA2360D0()
{
  return swift_unknownObjectWeakAssign();
}

unint64_t sub_1BA2360DC()
{
  unint64_t result;

  result = qword_1ED5B3918;
  if (!qword_1ED5B3918)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5B3918);
  }
  return result;
}

uint64_t type metadata accessor for NativeAdPlacement()
{
  uint64_t result;

  result = qword_1ED5B37E0;
  if (!qword_1ED5B37E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA23616C@<X0>(uint64_t (*a1)(_QWORD)@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t result;

  v5 = a1(0);
  result = swift_allocObject();
  a3[3] = v5;
  a3[4] = a2;
  *a3 = result;
  return result;
}

uint64_t sub_1BA2361B4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BA23616C((uint64_t (*)(_QWORD))type metadata accessor for BannerAdViewStyler, (uint64_t)&off_1E71F9360, a1);
}

uint64_t sub_1BA2361C8()
{
  sub_1BA224288(0, &qword_1ED5B22C8);
  sub_1BA2C1850();
  return swift_release();
}

uint64_t sub_1BA23621C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for DebugJournalSummaryViewStyler();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0x402E000000000000;
  a1[3] = v2;
  a1[4] = (uint64_t)&off_1E71FA8C8;
  *a1 = result;
  return result;
}

uint64_t sub_1BA23626C(uint64_t a1)
{
  return sub_1BA220638(a1, (void (*)(_QWORD))type metadata accessor for PrerollAdProviderFactory);
}

uint64_t sub_1BA236278(uint64_t a1)
{
  return sub_1BA220638(a1, (void (*)(_QWORD))type metadata accessor for NativeAdProviderFactory);
}

uint64_t sub_1BA236284(uint64_t a1)
{
  return sub_1BA220638(a1, (void (*)(_QWORD))type metadata accessor for ArticleBannerAdProviderFactory);
}

uint64_t sub_1BA236290(uint64_t a1)
{
  return sub_1BA220638(a1, (void (*)(_QWORD))type metadata accessor for InterstitialAdProviderFactory);
}

uint64_t sub_1BA23629C(uint64_t a1)
{
  return sub_1BA220638(a1, (void (*)(_QWORD))type metadata accessor for SponsorshipAdProviderFactory);
}

uint64_t sub_1BA2362A8(uint64_t a1)
{
  return sub_1BA220638(a1, (void (*)(_QWORD))type metadata accessor for FeedBannerAdProviderFactory);
}

uint64_t sub_1BA2362B8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for NativeAdInfo.Fulfilled(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for NativeAdHeadline(uint64_t a1)
{
  return sub_1BA21CE7C(a1, qword_1ED5B1E18);
}

uint64_t type metadata accessor for AdSegmentManager()
{
  return objc_opt_self();
}

void type metadata accessor for AdRequestManager()
{
  JUMPOUT(0x1BCCD9364);
}

uint64_t sub_1BA236380(unint64_t a1)
{
  return sub_1BA21FC70(a1);
}

ValueMetadata *type metadata accessor for VisibleAdPolicy()
{
  return &type metadata for VisibleAdPolicy;
}

unint64_t sub_1BA23639C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t result;

  v2 = type metadata accessor for AdPreviewQueue();
  v3 = swift_allocObject();
  result = sub_1BA21DA54(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(v3 + 16) = result;
  a1[3] = v2;
  a1[4] = (uint64_t)&off_1E71F8C28;
  *a1 = v3;
  return result;
}

ValueMetadata *type metadata accessor for NativeAdContext()
{
  return &type metadata for NativeAdContext;
}

unint64_t sub_1BA23640C()
{
  unint64_t result;

  result = qword_1ED5B1B30;
  if (!qword_1ED5B1B30)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for NativeAdContext, &type metadata for NativeAdContext);
    atomic_store(result, (unint64_t *)&qword_1ED5B1B30);
  }
  return result;
}

unint64_t sub_1BA236450()
{
  unint64_t result;

  result = qword_1ED5B36B0[0];
  if (!qword_1ED5B36B0[0])
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for NativeAdContext, &type metadata for NativeAdContext);
    atomic_store(result, qword_1ED5B36B0);
  }
  return result;
}

unint64_t sub_1BA236494()
{
  unint64_t result;

  result = qword_1ED5B36A8;
  if (!qword_1ED5B36A8)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for NativeAdContext, &type metadata for NativeAdContext);
    atomic_store(result, (unint64_t *)&qword_1ED5B36A8);
  }
  return result;
}

unint64_t sub_1BA2364D8(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 24) = sub_1BA236450();
  result = sub_1BA236494();
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

uint64_t sub_1BA236504@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for AdStatusConditionReporter();
  swift_allocObject();
  result = sub_1BA21E1D8();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_1E71FF120;
  *a1 = result;
  return result;
}

uint64_t sub_1BA236558@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BA23616C((uint64_t (*)(_QWORD))type metadata accessor for AdSegmentUpdater, (uint64_t)&off_1E71FF4F0, a1);
}

uint64_t sub_1BA23656C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  __int128 v5[2];

  sub_1BA22068C(a1, (uint64_t)v5);
  type metadata accessor for AdsModuleStartupTask();
  v3 = swift_allocObject();
  result = sub_1BA21D3D4(v5, v3 + 16);
  *(_BYTE *)(v3 + 56) = 1;
  *a2 = v3;
  return result;
}

uint64_t sub_1BA2365C8(_QWORD *a1)
{
  return sub_1BA2365D0(a1);
}

uint64_t sub_1BA2365D0(_QWORD *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA222948(0, (unint64_t *)&qword_1ED5B3A48);
  return sub_1BA2C1730();
}

unint64_t sub_1BA236638()
{
  unint64_t result;

  result = qword_1ED5B1B28;
  if (!qword_1ED5B1B28)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for FeedGroupAdData, &type metadata for FeedGroupAdData);
    atomic_store(result, (unint64_t *)&qword_1ED5B1B28);
  }
  return result;
}

unint64_t sub_1BA23667C()
{
  unint64_t result;

  result = qword_1ED5B1B20;
  if (!qword_1ED5B1B20)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for FeedGroupAdData, &type metadata for FeedGroupAdData);
    atomic_store(result, (unint64_t *)&qword_1ED5B1B20);
  }
  return result;
}

unint64_t sub_1BA2366C0(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BA236638();
  result = sub_1BA23667C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1BA2366F0()
{
  type metadata accessor for DebugCommandHandler();
  return swift_allocObject();
}

uint64_t sub_1BA236710()
{
  type metadata accessor for DebugCommandHandler();
  sub_1BA2C1844();
  return swift_release();
}

uint64_t sub_1BA236750()
{
  return swift_allocateGenericValueMetadata();
}

unint64_t sub_1BA236758()
{
  unint64_t result;

  result = qword_1ED5B1B18;
  if (!qword_1ED5B1B18)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for CreativeAdData, &type metadata for CreativeAdData);
    atomic_store(result, (unint64_t *)&qword_1ED5B1B18);
  }
  return result;
}

unint64_t sub_1BA23679C()
{
  unint64_t result;

  result = qword_1ED5B1B10;
  if (!qword_1ED5B1B10)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for CreativeAdData, &type metadata for CreativeAdData);
    atomic_store(result, (unint64_t *)&qword_1ED5B1B10);
  }
  return result;
}

unint64_t sub_1BA2367E0(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BA236758();
  result = sub_1BA23679C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BA236810()
{
  unint64_t result;

  result = qword_1ED5B1A88[0];
  if (!qword_1ED5B1A88[0])
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for AdSegmentScope, &type metadata for AdSegmentScope);
    atomic_store(result, qword_1ED5B1A88);
  }
  return result;
}

unint64_t sub_1BA236854()
{
  unint64_t result;

  result = qword_1ED5B1A80;
  if (!qword_1ED5B1A80)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for AdSegmentScope, &type metadata for AdSegmentScope);
    atomic_store(result, (unint64_t *)&qword_1ED5B1A80);
  }
  return result;
}

void type metadata accessor for AdRequestStore()
{
  JUMPOUT(0x1BCCD9364);
}

uint64_t type metadata accessor for AdPreviewQueue()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for AdManagerError()
{
  return &type metadata for AdManagerError;
}

ValueMetadata *type metadata accessor for AdContextError()
{
  return &type metadata for AdContextError;
}

uint64_t sub_1BA2368E4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for NativeAdInfo.Fulfilled(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void sub_1BA236954()
{
  unint64_t v0;

  sub_1BA234D60(319, (unint64_t *)&qword_1ED5B2B20, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for AdRequest);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t type metadata accessor for NativeAdInfo.Fulfilled(uint64_t a1)
{
  return sub_1BA21CE7C(a1, qword_1ED5B1800);
}

uint64_t sub_1BA236A24()
{
  return 0;
}

ValueMetadata *type metadata accessor for UserAdData()
{
  return &type metadata for UserAdData;
}

unint64_t sub_1BA236A3C()
{
  unint64_t result;

  result = qword_1ED5B16D8;
  if (!qword_1ED5B16D8)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for UserAdData, &type metadata for UserAdData);
    atomic_store(result, (unint64_t *)&qword_1ED5B16D8);
  }
  return result;
}

unint64_t sub_1BA236A80()
{
  unint64_t result;

  result = qword_1ED5B16D0;
  if (!qword_1ED5B16D0)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for UserAdData, &type metadata for UserAdData);
    atomic_store(result, (unint64_t *)&qword_1ED5B16D0);
  }
  return result;
}

unint64_t sub_1BA236AC4()
{
  unint64_t result;

  result = qword_1ED5B16C8;
  if (!qword_1ED5B16C8)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for UserAdData, &type metadata for UserAdData);
    atomic_store(result, (unint64_t *)&qword_1ED5B16C8);
  }
  return result;
}

unint64_t sub_1BA236B08(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BA236A80();
  result = sub_1BA236AC4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

NewsAds::UserAdData __swiftcall UserAdData.init(preferredLanguages:)(NewsAds::UserAdData preferredLanguages)
{
  NewsAds::UserAdData *v1;

  v1->preferredLanguages._rawValue = preferredLanguages.preferredLanguages._rawValue;
  return preferredLanguages;
}

ValueMetadata *type metadata accessor for FeedAdData()
{
  return &type metadata for FeedAdData;
}

unint64_t sub_1BA236B4C()
{
  unint64_t result;

  result = qword_1ED5B16C0;
  if (!qword_1ED5B16C0)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for FeedAdData, &type metadata for FeedAdData);
    atomic_store(result, (unint64_t *)&qword_1ED5B16C0);
  }
  return result;
}

unint64_t sub_1BA236B90()
{
  unint64_t result;

  result = qword_1ED5B16B8;
  if (!qword_1ED5B16B8)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for FeedAdData, &type metadata for FeedAdData);
    atomic_store(result, (unint64_t *)&qword_1ED5B16B8);
  }
  return result;
}

unint64_t sub_1BA236BD4(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BA236B4C();
  result = sub_1BA236B90();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

__n128 FeedAdData.init(identifier:contentProviderID:isWhitelisted:primaryAudience:adKeywords:adCategories:language:targetingKeywords:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unsigned __int8 a4@<W3>, unint64_t a5@<X4>, unint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, __n128 *a9@<X8>, __n128 a10, unint64_t a11)
{
  __n128 result;

  result = a10;
  a9->n128_u64[0] = a1;
  a9->n128_u64[1] = a2;
  a9[1].n128_u64[0] = a3;
  a9[1].n128_u8[8] = a4;
  a9[2].n128_u64[0] = a5;
  a9[2].n128_u64[1] = a6;
  a9[3].n128_u64[0] = a7;
  a9[3].n128_u64[1] = a8;
  a9[4] = a10;
  a9[5].n128_u64[0] = a11;
  return result;
}

uint64_t sub_1BA236C28(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BA22202C(a1, a2, v2);
}

uint64_t sub_1BA236C30()
{
  return sub_1BA21E88C();
}

unint64_t sub_1BA236C54()
{
  unint64_t result;

  result = qword_1ED5B3618;
  if (!qword_1ED5B3618)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5B3618);
  }
  return result;
}

void sub_1BA236CA4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B14B8)
  {
    v0 = sub_1BA2C1994();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B14B8);
  }
}

void sub_1BA236CFC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B1490)
  {
    sub_1BA23584C(255, &qword_1ED5B23A8, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DEB940]);
    v0 = sub_1BA2C1934();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B1490);
  }
}

void sub_1BA236D60(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, _QWORD, uint64_t, _QWORD))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BA22920C(255, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v9 = a5(a1, MEMORY[0x1E0DEA968], v8, MEMORY[0x1E0DEA978]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BA236DDC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, _QWORD, uint64_t, _QWORD))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BA229250(255, a3);
    v9 = a5(a1, MEMORY[0x1E0DEA968], v8, MEMORY[0x1E0DEA978]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BA236E4C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B1480)
  {
    sub_1BA222948(255, (unint64_t *)&qword_1ED5B27D8);
    v0 = sub_1BA2C18BC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B1480);
  }
}

void sub_1BA236EC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B1478)
  {
    v0 = sub_1BA2C18BC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B1478);
  }
}

unint64_t sub_1BA236F24()
{
  unint64_t result;

  result = qword_1ED5B48A8;
  if (!qword_1ED5B48A8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5B48A8);
  }
  return result;
}

void sub_1BA236F78(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v9 = a3();
    v10 = a5(a1, a4, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

void sub_1BA236FD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B1450)
  {
    v0 = sub_1BA2C1580();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B1450);
  }
}

uint64_t static Settings.Ads.Debugging.feedPrefetchDistance.getter()
{
  return sub_1BA237268(&qword_1ED5B2DE0);
}

uint64_t sub_1BA23704C()
{
  return sub_1BA21D210();
}

uint64_t type metadata accessor for Settings.Ads.Debugging.FeedPrefetchDistance(uint64_t a1)
{
  return sub_1BA21CE7C(a1, (uint64_t *)&unk_1ED5B11F8);
}

uint64_t Settings.Ads.Debugging.FeedPrefetchDistance.init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1BA21F680(a1, a2, a3, a4, &qword_1ED5B11F0);
}

uint64_t sub_1BA237088()
{
  return sub_1BA21D210();
}

uint64_t type metadata accessor for Settings.Ads.Debugging.VisualDebugging(uint64_t a1)
{
  return sub_1BA21CE7C(a1, (uint64_t *)&unk_1ED5B10B0);
}

void sub_1BA2370A8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 0x72616C75676572;
  if (*v1)
    v2 = 0x746361706D6F63;
  *a1 = v2;
  a1[1] = 0xE700000000000000;
}

ValueMetadata *type metadata accessor for Settings.Ads.Debugging.VisualDebugging.Mode()
{
  return &type metadata for Settings.Ads.Debugging.VisualDebugging.Mode;
}

unint64_t sub_1BA2370F0()
{
  unint64_t result;

  result = qword_1ED5B10A0;
  if (!qword_1ED5B10A0)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for Settings.Ads.Debugging.VisualDebugging.Mode, &type metadata for Settings.Ads.Debugging.VisualDebugging.Mode);
    atomic_store(result, (unint64_t *)&qword_1ED5B10A0);
  }
  return result;
}

unint64_t sub_1BA237134()
{
  unint64_t result;

  result = qword_1ED5B1098;
  if (!qword_1ED5B1098)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for Settings.Ads.Debugging.VisualDebugging.Mode, &type metadata for Settings.Ads.Debugging.VisualDebugging.Mode);
    atomic_store(result, (unint64_t *)&qword_1ED5B1098);
  }
  return result;
}

unint64_t sub_1BA237178()
{
  unint64_t result;

  result = qword_1ED5B1090;
  if (!qword_1ED5B1090)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for Settings.Ads.Debugging.VisualDebugging.Mode, &type metadata for Settings.Ads.Debugging.VisualDebugging.Mode);
    atomic_store(result, (unint64_t *)&qword_1ED5B1090);
  }
  return result;
}

unint64_t sub_1BA2371BC()
{
  unint64_t result;

  result = qword_1ED5B1088;
  if (!qword_1ED5B1088)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for Settings.Ads.Debugging.VisualDebugging.Mode, &type metadata for Settings.Ads.Debugging.VisualDebugging.Mode);
    atomic_store(result, (unint64_t *)&qword_1ED5B1088);
  }
  return result;
}

uint64_t sub_1BA237200()
{
  sub_1BA237178();
  return sub_1BA2C21F8();
}

uint64_t sub_1BA237244(uint64_t a1)
{
  return sub_1BA21E724(a1, 0xD000000000000010, 0x80000001BA2D1180, &qword_1ED5B13E8);
}

uint64_t sub_1BA237268(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_1BA2372A0()
{
  return sub_1BA21D210();
}

uint64_t type metadata accessor for Settings.Ads.PromotedContentParameters.ContextPrefetchLimit(uint64_t a1)
{
  return sub_1BA21CE7C(a1, (uint64_t *)&unk_1ED5B2DF8);
}

uint64_t Settings.Ads.PromotedContentParameters.ContextPrefetchLimit.init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1BA21F680(a1, a2, a3, a4, &qword_1ED5B2DF0);
}

uint64_t SponsorshipAdPlacement.placementIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SponsorshipAdPlacement.desiredPlacement.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SponsorshipAdPlacement() + 20);
  v4 = sub_1BA2C1AC0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SponsorshipAdPlacement.insertionType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SponsorshipAdPlacement();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t SponsorshipAdPlacement.init(placementIdentifier:insertionType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, _QWORD *a4@<X8>)
{
  char v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v7 = *a3;
  v8 = type metadata accessor for SponsorshipAdPlacement();
  v9 = (_QWORD *)((char *)a4 + *(int *)(v8 + 20));
  *v9 = 1;
  v10 = *MEMORY[0x1E0D81E68];
  v11 = sub_1BA2C1AC0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  *a4 = a1;
  a4[1] = a2;
  *((_BYTE *)a4 + *(int *)(v8 + 24)) = v7;
  return result;
}

uint64_t sub_1BA237414@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_BYTE *)(v2 + *(int *)(result + 24));
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for SponsorshipAdPlacement(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BA2C1AC0();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *((_BYTE *)v4 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

_QWORD *initializeWithCopy for SponsorshipAdPlacement(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BA2C1AC0();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *assignWithCopy for SponsorshipAdPlacement(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BA2C1AC0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *initializeWithTake for SponsorshipAdPlacement(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BA2C1AC0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *assignWithTake for SponsorshipAdPlacement(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BA2C1AC0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for SponsorshipAdPlacement()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA2376FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BA2C1AC0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SponsorshipAdPlacement()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA237784(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BA2C1AC0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
  sub_1BA22E2C8(a1, &qword_1EF27E468);
}

void type metadata accessor for SVVideoQuartile(uint64_t a1)
{
  sub_1BA22E2C8(a1, &qword_1EF27E470);
}

void type metadata accessor for AdPlatformsServerEnvironment(uint64_t a1)
{
  sub_1BA22E2C8(a1, (unint64_t *)&unk_1EF27E478);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1BA237840(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1BA237860(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_1BA22E2C8(a1, &qword_1ED5B2C10);
}

uint64_t sub_1BA23789C(uint64_t a1, uint64_t a2)
{
  return sub_1BA2379E4(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

uint64_t sub_1BA2378A8(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1BA2C2138();
  *a2 = 0;
  return result;
}

uint64_t sub_1BA23791C(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1BA2C2144();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1BA237998@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1BA2C2150();
  v2 = sub_1BA2C212C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1BA2379D8(uint64_t a1, uint64_t a2)
{
  return sub_1BA2379E4(a1, a2, MEMORY[0x1E0DEA950]);
}

uint64_t sub_1BA2379E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1BA2C2150();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1BA237A20()
{
  sub_1BA2C2150();
  sub_1BA2C21A4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA237A60()
{
  uint64_t v0;

  sub_1BA2C2150();
  sub_1BA2C2720();
  sub_1BA2C21A4();
  v0 = sub_1BA2C2738();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BA237AD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1BA2C2150();
  v2 = v1;
  if (v0 == sub_1BA2C2150() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1BA2C26A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void type metadata accessor for MatchingFlags(uint64_t a1)
{
  sub_1BA22E2C8(a1, &qword_1EF27E488);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_1BA22E2C8(a1, &qword_1EF27E490);
}

uint64_t sub_1BA237B80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BA2C212C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1BA237BC4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1BA2C2150();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BA237BEC()
{
  sub_1BA237CA0((unint64_t *)&qword_1EF27E4B0, (uint64_t)&unk_1BA2C3580);
  sub_1BA237CA0(&qword_1EF27E4B8, (uint64_t)&unk_1BA2C34D4);
  return sub_1BA2C25D0();
}

uint64_t sub_1BA237C58()
{
  return sub_1BA237CA0(&qword_1EF27E498, (uint64_t)&unk_1BA2C3498);
}

uint64_t sub_1BA237C7C()
{
  return sub_1BA237CA0(&qword_1EF27E4A0, (uint64_t)&unk_1BA2C346C);
}

uint64_t sub_1BA237CA0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for Key(255);
    result = MEMORY[0x1BCCD93D0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA237CE0()
{
  return sub_1BA237CA0(&qword_1EF27E4A8, (uint64_t)&unk_1BA2C3508);
}

char *sub_1BA237D14(unsigned __int8 *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  objc_class *v9;
  objc_class *v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  char *v24;
  uint64_t v25;
  void *v26;
  char *v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  uint64_t v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  void *v41;
  uint64_t v43;
  objc_class *ObjectType;
  int v45;
  uint64_t v46;
  objc_super v47;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v4 = sub_1BA2C1460();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = *a1;
  v8 = OBJC_IVAR____TtC7NewsAds23DebugInterstitialAdView_onLongPress;
  sub_1BA22920C(0, (unint64_t *)&qword_1ED5B14C8, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC348]);
  v10 = v9;
  v11 = objc_allocWithZone(v9);
  v12 = v2;
  *(_QWORD *)&v2[v8] = objc_msgSend(v11, sel_init);
  v13 = OBJC_IVAR____TtC7NewsAds23DebugInterstitialAdView_onCollapse;
  *(_QWORD *)&v12[v13] = objc_msgSend(objc_allocWithZone(v10), sel_init);
  v14 = OBJC_IVAR____TtC7NewsAds23DebugInterstitialAdView_label;
  *(_QWORD *)&v12[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v15 = OBJC_IVAR____TtC7NewsAds23DebugInterstitialAdView_moreButton;
  v16 = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 0);
  v17 = (void *)sub_1BA2C212C();
  v18 = (void *)objc_opt_self();
  v19 = objc_msgSend(v18, sel_systemImageNamed_, v17);

  objc_msgSend(v16, sel_setImage_forState_, v19, 0);
  *(_QWORD *)&v12[v15] = v16;
  sub_1BA2C1454();
  v20 = sub_1BA2C143C();
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v23 = (uint64_t *)&v12[OBJC_IVAR____TtC7NewsAds23DebugInterstitialAdView_contentIdentifier];
  *v23 = v20;
  v23[1] = v22;

  v47.receiver = v12;
  v47.super_class = ObjectType;
  v24 = (char *)objc_msgSendSuper2(&v47, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v25 = OBJC_IVAR____TtC7NewsAds23DebugInterstitialAdView_moreButton;
  v26 = *(void **)&v24[OBJC_IVAR____TtC7NewsAds23DebugInterstitialAdView_moreButton];
  v27 = v24;
  objc_msgSend(v26, sel_setShowsMenuAsPrimaryAction_, 1);
  sub_1BA21DEE0(0, &qword_1EF27E870);
  sub_1BA22920C(0, &qword_1ED5B3610, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1BA2C35D0;
  sub_1BA21DEE0(0, &qword_1EF27E878);
  v29 = v26;
  v30 = (void *)sub_1BA2C212C();
  v31 = objc_msgSend(v18, sel_systemImageNamed_, v30);

  swift_allocObject();
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v28 + 32) = sub_1BA2C2444();
  v46 = v28;
  sub_1BA2C2288();
  v32 = (void *)sub_1BA2C242C();
  objc_msgSend(v29, sel_setMenu_, v32);

  v33 = objc_msgSend(*(id *)&v24[v25], sel_imageView);
  if (v33)
  {
    v34 = v33;
    objc_msgSend(v33, sel_setContentMode_, 1);

  }
  objc_msgSend(*(id *)&v24[v25], sel_setFrame_, 0.0, 0.0, 30.0, 30.0);
  v35 = OBJC_IVAR____TtC7NewsAds23DebugInterstitialAdView_label;
  v36 = *(id *)&v27[OBJC_IVAR____TtC7NewsAds23DebugInterstitialAdView_label];
  v37 = (void *)sub_1BA2C212C();
  objc_msgSend(v36, sel_setText_, v37);

  v38 = *(void **)&v27[v35];
  sub_1BA21DEE0(0, &qword_1EF27E880);
  v39 = v38;
  v40 = (void *)sub_1BA2C2420();
  objc_msgSend(v39, sel_setFont_, v40);

  v41 = *(void **)&v27[v35];
  objc_msgSend(v41, sel_sizeToFit);
  objc_msgSend(v27, sel_addSubview_, *(_QWORD *)&v24[v25]);
  objc_msgSend(v27, sel_addSubview_, v41);
  LOBYTE(v46) = v45;
  sub_1BA2382C8(&v46);

  return v27;
}

void sub_1BA238260(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1BCCD9544](v2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = *(id *)(v3 + OBJC_IVAR____TtC7NewsAds23DebugInterstitialAdView_onCollapse);
    MEMORY[0x1BCCD874C]();

  }
}

uint64_t sub_1BA2382C8(_BYTE *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  int v19;
  double v20;
  void *v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_1BA2C2030();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BA2C2060();
  v28 = *(_QWORD *)(v8 - 8);
  v29 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BA2C2078();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v26 - v17;
  v19 = *a1;
  if (*a1)
  {
    v27 = v5;
    if (v19 == 1)
      v20 = 0.001;
    else
      v20 = 2.0;
    sub_1BA21DEE0(0, (unint64_t *)&qword_1ED5B2BD0);
    v21 = (void *)sub_1BA2C23D8();
    sub_1BA2C206C();
    MEMORY[0x1BCCD8848](v15, v20);
    v22 = *(void (**)(char *, uint64_t))(v12 + 8);
    v22(v15, v11);
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = v2;
    aBlock[4] = sub_1BA238A28;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BA223CC0;
    aBlock[3] = &block_descriptor;
    v24 = _Block_copy(aBlock);
    v25 = v2;
    swift_release();
    sub_1BA2C2048();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_1BA221230((unint64_t *)&qword_1ED5B2B40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BA224004();
    sub_1BA221230((unint64_t *)&qword_1ED5B2B68, (uint64_t (*)(uint64_t))sub_1BA224004, MEMORY[0x1E0DEAF38]);
    sub_1BA2C2480();
    MEMORY[0x1BCCD8B78](v18, v10, v7, v24);
    _Block_release(v24);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v29);
    return ((uint64_t (*)(char *, uint64_t))v22)(v18, v11);
  }
  return result;
}

id sub_1BA2385A8()
{
  char *v0;
  void *v1;
  double Width;
  double v3;
  void *v4;
  CGFloat v5;
  objc_super v7;
  CGRect v8;
  CGRect v9;
  CGRect v10;
  CGRect v11;
  CGRect v12;

  v7.receiver = v0;
  v7.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v7, sel_layoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC7NewsAds23DebugInterstitialAdView_moreButton];
  objc_msgSend(v0, sel_bounds);
  Width = CGRectGetWidth(v8);
  objc_msgSend(v1, sel_frame);
  v3 = Width - CGRectGetWidth(v9) * 0.5 + -8.0;
  objc_msgSend(v1, sel_frame);
  objc_msgSend(v1, sel_setCenter_, v3, CGRectGetWidth(v10) * 0.5 + 8.0);
  v4 = *(void **)&v0[OBJC_IVAR____TtC7NewsAds23DebugInterstitialAdView_label];
  objc_msgSend(v0, sel_bounds);
  v5 = CGRectGetWidth(v11) * 0.5;
  objc_msgSend(v0, sel_bounds);
  return objc_msgSend(v4, sel_setCenter_, v5, CGRectGetHeight(v12) * 0.5);
}

id _s7NewsAds26DebugJournalViewControllerCfD_0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DebugInterstitialAdView()
{
  return objc_opt_self();
}

uint64_t sub_1BA2387D4()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC7NewsAds23DebugInterstitialAdView_contentIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1BA238810()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC7NewsAds23DebugInterstitialAdView_onLongPress);
}

id sub_1BA238824()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC7NewsAds23DebugInterstitialAdView_onCollapse);
}

void sub_1BA23883C()
{
  char *v0;
  uint64_t v1;
  objc_class *v2;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC7NewsAds23DebugInterstitialAdView_onLongPress;
  sub_1BA22920C(0, (unint64_t *)&qword_1ED5B14C8, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC348]);
  v3 = v2;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(v2), sel_init);
  v4 = OBJC_IVAR____TtC7NewsAds23DebugInterstitialAdView_onCollapse;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(v3), sel_init);
  v5 = OBJC_IVAR____TtC7NewsAds23DebugInterstitialAdView_label;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v6 = OBJC_IVAR____TtC7NewsAds23DebugInterstitialAdView_moreButton;
  v7 = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 0);
  v8 = (void *)sub_1BA2C212C();
  v9 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v8);

  objc_msgSend(v7, sel_setImage_forState_, v9, 0);
  *(_QWORD *)&v0[v6] = v7;

  sub_1BA2C257C();
  __break(1u);
}

uint64_t sub_1BA2389D8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BA2389FC(uint64_t a1)
{
  uint64_t v1;

  sub_1BA238260(a1, v1);
}

uint64_t sub_1BA238A04()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BA238A28()
{
  return MEMORY[0x1BCCD874C]();
}

double VideoAdData.playerAspectRatio.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

NewsAds::VideoAdData __swiftcall VideoAdData.init(playerAspectRatio:)(NewsAds::VideoAdData playerAspectRatio)
{
  NewsAds::VideoAdData *v1;

  v1->playerAspectRatio = playerAspectRatio.playerAspectRatio;
  return playerAspectRatio;
}

uint64_t sub_1BA238A64()
{
  return 1;
}

uint64_t sub_1BA238A6C()
{
  sub_1BA2C2720();
  sub_1BA2C272C();
  return sub_1BA2C2738();
}

uint64_t sub_1BA238AAC()
{
  return sub_1BA2C272C();
}

uint64_t sub_1BA238AD0()
{
  sub_1BA2C2720();
  sub_1BA2C272C();
  return sub_1BA2C2738();
}

unint64_t sub_1BA238B0C()
{
  return 0xD000000000000011;
}

uint64_t sub_1BA238B28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA239200(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1BA238B50()
{
  return 0;
}

void sub_1BA238B5C(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1BA238B68()
{
  sub_1BA238CA8();
  return sub_1BA2C275C();
}

uint64_t sub_1BA238B90()
{
  sub_1BA238CA8();
  return sub_1BA2C2768();
}

uint64_t VideoAdData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BA238E14(0, &qword_1EF27E888, MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA238CA8();
  sub_1BA2C2750();
  sub_1BA2C266C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1BA238CA8()
{
  unint64_t result;

  result = qword_1EF27E890;
  if (!qword_1EF27E890)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C3764, &type metadata for VideoAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27E890);
  }
  return result;
}

uint64_t VideoAdData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_1BA238E14(0, &qword_1EF27E898, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA238CA8();
  sub_1BA2C2744();
  if (!v2)
  {
    sub_1BA2C2618();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA238E14(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA238CA8();
    v7 = a3(a1, &type metadata for VideoAdData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BA238E70(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BA238E9C();
  result = sub_1BA238EE0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BA238E9C()
{
  unint64_t result;

  result = qword_1EF27E8A0;
  if (!qword_1EF27E8A0)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for VideoAdData, &type metadata for VideoAdData);
    atomic_store(result, (unint64_t *)&qword_1EF27E8A0);
  }
  return result;
}

unint64_t sub_1BA238EE0()
{
  unint64_t result;

  result = qword_1EF27E8A8;
  if (!qword_1EF27E8A8)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for VideoAdData, &type metadata for VideoAdData);
    atomic_store(result, (unint64_t *)&qword_1EF27E8A8);
  }
  return result;
}

uint64_t sub_1BA238F24@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return VideoAdData.init(from:)(a1, a2);
}

uint64_t sub_1BA238F38(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BA238E14(0, &qword_1EF27E888, MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA238CA8();
  sub_1BA2C2750();
  sub_1BA2C266C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for VideoAdData()
{
  return &type metadata for VideoAdData;
}

uint64_t getEnumTagSinglePayload for VideoAdData.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for VideoAdData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BA2390CC + 4 * byte_1BA2C3618[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BA2390EC + 4 * byte_1BA2C361D[v4]))();
}

_BYTE *sub_1BA2390CC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BA2390EC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA2390F4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA2390FC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA239104(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA23910C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for VideoAdData.CodingKeys()
{
  return &type metadata for VideoAdData.CodingKeys;
}

unint64_t sub_1BA23912C()
{
  unint64_t result;

  result = qword_1EF27E8B0;
  if (!qword_1EF27E8B0)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C373C, &type metadata for VideoAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27E8B0);
  }
  return result;
}

unint64_t sub_1BA239174()
{
  unint64_t result;

  result = qword_1EF27E8B8;
  if (!qword_1EF27E8B8)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C36AC, &type metadata for VideoAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27E8B8);
  }
  return result;
}

unint64_t sub_1BA2391BC()
{
  unint64_t result;

  result = qword_1EF27E8C0;
  if (!qword_1EF27E8C0)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C36D4, &type metadata for VideoAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27E8C0);
  }
  return result;
}

uint64_t sub_1BA239200(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000011 && a2 == 0x80000001BA2CD9D0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1BA2C26A8();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t BannerAdLayoutStore.storeLayout(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;

  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v5 = (void *)qword_1ED5B2888;
  sub_1BA22D5D8();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BA2C37C0;
  v7 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  v8 = sub_1BA2291C8();
  *(_QWORD *)(v6 + 64) = v8;
  *(_QWORD *)(v6 + 32) = a2;
  *(_QWORD *)(v6 + 40) = a3;
  v9 = v5;
  swift_bridgeObjectRetain();
  sub_1BA2C2570();
  *(_QWORD *)(v6 + 96) = v7;
  *(_QWORD *)(v6 + 104) = v8;
  *(_QWORD *)(v6 + 72) = 0;
  *(_QWORD *)(v6 + 80) = 0xE000000000000000;
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BA2C18D4();
  return swift_release();
}

Swift::Void __swiftcall BannerAdLayoutStore.reset()()
{
  id v0;

  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v0 = (id)qword_1ED5B2888;
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  swift_retain();
  sub_1BA2C1898();
  swift_release();
}

uint64_t BannerAdLayoutStore.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t BannerAdLayoutStore.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA2394E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return BannerAdLayoutStore.storeLayout(_:for:)(a1, a2, a3);
}

uint64_t sub_1BA239504()
{
  id v0;

  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v0 = (id)qword_1ED5B2888;
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  swift_retain();
  sub_1BA2C1898();
  return swift_release();
}

unint64_t sub_1BA2395A0()
{
  unint64_t result;

  result = qword_1ED5B2CD8;
  if (!qword_1ED5B2CD8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5B2CD8);
  }
  return result;
}

uint64_t dispatch thunk of BannerAdLayoutStoreType.layout(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of BannerAdLayoutStoreType.storeLayout(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of BannerAdLayoutStoreType.reset()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t method lookup function for BannerAdLayoutStore()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_1BA239628()
{
  return 0xD000000000000026;
}

uint64_t sub_1BA239644@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[40];
  __int128 v7;
  uint64_t v8;
  _UNKNOWN **v9;

  swift_beginAccess();
  sub_1BA23A304(v1 + 56, (uint64_t)&v7);
  if (!v8)
  {
    sub_1BA23A294((uint64_t)&v7);
    sub_1BA22068C(v1 + 16, (uint64_t)&v7);
    v3 = type metadata accessor for DebugSponsorshipAdProvider();
    v4 = swift_allocObject();
    if (qword_1ED5B0FF8 != -1)
      swift_once();
    sub_1BA23A368();
    swift_allocObject();
    swift_retain();
    *(_QWORD *)(v4 + 16) = sub_1BA2C158C();
    sub_1BA21D3D4(&v7, v4 + 24);
    v8 = v3;
    v9 = &off_1E71FEA38;
    *(_QWORD *)&v7 = v4;
    sub_1BA22068C((uint64_t)&v7, (uint64_t)v6);
    swift_beginAccess();
    sub_1BA23A3C4((uint64_t)v6, v1 + 56);
    swift_endAccess();
  }
  return sub_1BA21D3D4(&v7, a1);
}

uint64_t SponsorshipAdProvider.fetchSponsoredAdInfo(request:journal:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  sub_1BA239904();
  if (qword_1ED5B0FF8 != -1)
    swift_once();
  if ((sub_1BA2C152C() & 1) != 0)
  {
    sub_1BA239644((uint64_t)v9);
    v4 = v10;
    v5 = v11;
    __swift_project_boxed_opaque_existential_1(v9, v10);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, v4, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  else
  {
    swift_allocObject();
    v7 = swift_weakInit();
    MEMORY[0x1E0C80A78](v7);
    sub_1BA23A240();
    swift_allocObject();
    v6 = sub_1BA2C1988();
    swift_release();
  }
  return v6;
}

uint64_t sub_1BA239904()
{
  uint64_t result;

  result = qword_1ED5B1078;
  if (!qword_1ED5B1078)
  {
    type metadata accessor for SponsorshipAdPlacement();
    sub_1BA235C20();
    type metadata accessor for AdRequest();
  }
  return result;
}

void sub_1BA239980(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *Strong;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  void (*v25)(_QWORD);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void (*v31)(_QWORD);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = a8;
  v35 = a1;
  v14 = sub_1BA239904();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x1E0C80A78](v14);
  swift_beginAccess();
  Strong = (_QWORD *)swift_weakLoadStrong();
  if (Strong)
  {
    v32 = a6;
    v33 = a9;
    v31 = a3;
    v18 = Strong[5];
    v19 = Strong[6];
    __swift_project_boxed_opaque_existential_1(Strong + 2, v18);
    v20 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19);
    v21 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v21, sel_bounds);

    v22 = swift_allocObject();
    swift_weakInit();
    sub_1BA23A470(v34, (uint64_t)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
    v23 = (*(unsigned __int8 *)(v15 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v24 = (_QWORD *)swift_allocObject();
    v25 = v31;
    v24[2] = v22;
    v24[3] = v25;
    v26 = v32;
    v24[4] = a4;
    v24[5] = v26;
    v27 = v35;
    v24[6] = a7;
    v24[7] = v27;
    v24[8] = a2;
    sub_1BA23A5E4((uint64_t)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v24 + v23);
    *(_QWORD *)((char *)v24 + ((v16 + v23 + 7) & 0xFFFFFFFFFFFFFFF8)) = v33;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1BA2C1DCC();
    swift_release();
    swift_release();
    swift_release();

  }
  else
  {
    v28 = sub_1BA2C173C();
    sub_1BA23A428();
    v29 = (void *)swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v30, *MEMORY[0x1E0DB3590], v28);
    a3(v29);

  }
}

void sub_1BA239BF8(void *a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t *), uint64_t a8, uint64_t *a9, uint64_t a10)
{
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  void (*v73)(uint64_t *);
  __int128 v74;
  ValueMetadata *v75;
  _UNKNOWN **v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE v84[40];
  uint64_t v85;
  char v86;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    if (a1)
    {
      v71 = (_QWORD *)Strong;
      v16 = a6;
      v73 = a7;
      v17 = qword_1ED5B2DB0;
      v18 = a1;
      if (v17 != -1)
        swift_once();
      v19 = (void *)qword_1ED5B2888;
      sub_1BA2228E8(0, (unint64_t *)&qword_1ED5B2CC0, (unint64_t *)&qword_1ED5B2CD8, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1BA2C37C0;
      v21 = v19;
      v22 = sub_1BA2C1A00();
      v24 = v23;
      v25 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
      v26 = sub_1BA2291C8();
      *(_QWORD *)(v20 + 32) = v22;
      *(_QWORD *)(v20 + 40) = v24;
      *(_QWORD *)(v20 + 96) = v25;
      *(_QWORD *)(v20 + 104) = v26;
      *(_QWORD *)(v20 + 64) = v26;
      *(_QWORD *)(v20 + 72) = a5;
      *(_QWORD *)(v20 + 80) = v16;
      swift_bridgeObjectRetain();
      sub_1BA2C239C();
      sub_1BA2C1EB0();

      swift_bridgeObjectRelease();
      objc_msgSend(v18, sel_unfilledReason);
      v27 = sub_1BA2C1AA8();
      v28 = sub_1BA2C1AA8();
      v29 = (void *)qword_1ED5B2888;
      if (v27 == v28)
      {
        v30 = swift_allocObject();
        *(_OWORD *)(v30 + 16) = xmmword_1BA2C37C0;
        v31 = v29;
        v32 = sub_1BA2C1A00();
        v33 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v30 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v30 + 64) = v26;
        *(_QWORD *)(v30 + 32) = v32;
        *(_QWORD *)(v30 + 40) = v34;
        *(_QWORD *)(v30 + 96) = v33;
        *(_QWORD *)(v30 + 104) = v26;
        *(_QWORD *)(v30 + 72) = a5;
        *(_QWORD *)(v30 + 80) = v16;
        swift_bridgeObjectRetain();
        sub_1BA2C239C();
        sub_1BA2C1EB0();

        swift_bridgeObjectRelease();
        v35 = a9[1];
        v67 = *a9;
        v69 = a9[5];
        v72 = a9[6];
        v75 = &type metadata for SponsorshipAdContentInfo;
        v76 = &protocol witness table for SponsorshipAdContentInfo;
        v36 = (_QWORD *)swift_allocObject();
        *(_QWORD *)&v74 = v36;
        v37 = v18;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        v38 = sub_1BA2C1A00();
        v40 = v39;
        v41 = sub_1BA2C1A24();
        v36[2] = v38;
        v36[3] = v40;
        v36[4] = v41;
        v36[5] = v37;
        v42 = v71[5];
        v43 = v71[6];
        __swift_project_boxed_opaque_existential_1(v71 + 2, v42);
        v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8))(v42, v43);
        v77 = v67;
        v78 = v35;
        v79 = a5;
        v80 = v16;
        v81 = v69;
        v82 = v72;
        v83 = a10;
        sub_1BA21D3D4(&v74, (uint64_t)v84);
        v85 = v44;
        v86 = 0;
      }
      else
      {
        v49 = swift_allocObject();
        *(_OWORD *)(v49 + 16) = xmmword_1BA2C3840;
        v50 = v29;
        v51 = v18;
        v52 = sub_1BA2C1A00();
        v53 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v49 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v49 + 64) = v26;
        *(_QWORD *)(v49 + 32) = v52;
        *(_QWORD *)(v49 + 40) = v54;
        objc_msgSend(v51, sel_unfilledReason);
        v55 = sub_1BA2C1A90();
        *(_QWORD *)(v49 + 96) = v53;
        *(_QWORD *)(v49 + 104) = v26;
        *(_QWORD *)(v49 + 72) = v55;
        *(_QWORD *)(v49 + 80) = v56;
        *(_QWORD *)(v49 + 136) = v53;
        *(_QWORD *)(v49 + 144) = v26;
        *(_QWORD *)(v49 + 112) = a5;
        *(_QWORD *)(v49 + 120) = v16;
        swift_bridgeObjectRetain();
        sub_1BA2C239C();
        sub_1BA2C1EB0();

        swift_bridgeObjectRelease();
        v57 = a9[1];
        v58 = a9[6];
        v68 = *a9;
        v70 = a9[5];
        v75 = &type metadata for SponsorshipAdContentInfo;
        v76 = &protocol witness table for SponsorshipAdContentInfo;
        v59 = (_QWORD *)swift_allocObject();
        *(_QWORD *)&v74 = v59;
        v37 = v51;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v60 = sub_1BA2C1A00();
        v62 = v61;
        v63 = sub_1BA2C1A24();
        v59[2] = v60;
        v59[3] = v62;
        v59[4] = v63;
        v59[5] = v37;
        v64 = v71[5];
        v65 = v71[6];
        __swift_project_boxed_opaque_existential_1(v71 + 2, v64);
        v66 = (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 8))(v64, v65);
        v77 = v68;
        v78 = v57;
        v79 = a5;
        v80 = v16;
        v81 = v70;
        v82 = v58;
        v83 = a10;
        sub_1BA21D3D4(&v74, (uint64_t)v84);
        v85 = v66;
        v86 = 1;
      }
      v73(&v77);

      swift_release();
      sub_1BA23A710((uint64_t)&v77);
    }
    else
    {
      sub_1BA23A698();
      v48 = (void *)swift_allocError();
      a3();

      swift_release();
    }
  }
  else
  {
    v45 = sub_1BA2C173C();
    sub_1BA23A428();
    v46 = (void *)swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v45 - 8) + 104))(v47, *MEMORY[0x1E0DB3590], v45);
    ((void (*)(void *))a3)(v46);

  }
}

uint64_t SponsorshipAdProvider.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_1BA23A294(v0 + 56);
  return v0;
}

uint64_t SponsorshipAdProvider.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_1BA23A294(v0 + 56);
  return swift_deallocClassInstance();
}

uint64_t sub_1BA23A1D0(uint64_t a1, uint64_t a2)
{
  return SponsorshipAdProvider.fetchSponsoredAdInfo(request:journal:)(a1, a2);
}

uint64_t sub_1BA23A1F0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1BA23A214(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4)
{
  uint64_t *v4;

  sub_1BA239980(a1, a2, a3, a4, v4[2], v4[3], v4[4], v4[5], v4[6]);
}

void sub_1BA23A240()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B1058)
  {
    v0 = sub_1BA2C1994();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B1058);
  }
}

uint64_t sub_1BA23A294(uint64_t a1)
{
  uint64_t v2;

  sub_1BA2228E8(0, &qword_1ED5B1070, &qword_1ED5B1068, (uint64_t)&protocol descriptor for SponsorshipAdProviderType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of SponsorshipAdProviderType.fetchSponsoredAdInfo(request:journal:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t method lookup function for SponsorshipAdProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BA23A304(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA2228E8(0, &qword_1ED5B1070, &qword_1ED5B1068, (uint64_t)&protocol descriptor for SponsorshipAdProviderType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BA23A368()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B35B8)
  {
    v0 = sub_1BA2C1580();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B35B8);
  }
}

uint64_t sub_1BA23A3C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA2228E8(0, &qword_1ED5B1070, &qword_1ED5B1068, (uint64_t)&protocol descriptor for SponsorshipAdProviderType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BA23A428()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED5B1008;
  if (!qword_1ED5B1008)
  {
    v1 = sub_1BA2C173C();
    result = MEMORY[0x1BCCD93D0](MEMORY[0x1E0DB35A8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED5B1008);
  }
  return result;
}

uint64_t sub_1BA23A470(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BA239904();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA23A4B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1BA239904();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 72) & ~v2;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v0 + v3 + *(int *)(v1 + 56);
  swift_bridgeObjectRelease();
  v5 = v4 + *(int *)(type metadata accessor for SponsorshipAdPlacement() + 20);
  v6 = sub_1BA2C1AC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA23A5E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BA239904();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BA23A628(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_1BA239904() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_1BA239BF8(a1, *(_QWORD *)(v1 + 16), *(void (**)(void))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(void (**)(uint64_t *))(v1 + 56), *(_QWORD *)(v1 + 64), (uint64_t *)(v1 + v4), *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

unint64_t sub_1BA23A698()
{
  unint64_t result;

  result = qword_1EF27E8C8;
  if (!qword_1EF27E8C8)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C3970, &type metadata for SponsorshipAdProvider.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF27E8C8);
  }
  return result;
}

uint64_t sub_1BA23A6DC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BA23A710(uint64_t a1)
{
  destroy for SponsorshipAdInfo(a1);
  return a1;
}

uint64_t storeEnumTagSinglePayload for SponsorshipAdProvider.Errors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BA23A784 + 4 * byte_1BA2C3850[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BA23A7A4 + 4 * byte_1BA2C3855[v4]))();
}

_BYTE *sub_1BA23A784(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BA23A7A4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA23A7AC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA23A7B4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA23A7BC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA23A7C4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SponsorshipAdProvider.Errors()
{
  return &type metadata for SponsorshipAdProvider.Errors;
}

unint64_t sub_1BA23A7E4()
{
  unint64_t result;

  result = qword_1EF27E8D0;
  if (!qword_1EF27E8D0)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C3948, &type metadata for SponsorshipAdProvider.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF27E8D0);
  }
  return result;
}

BOOL sub_1BA23A828(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t _s7NewsAds19AdPolicyContentTypeO0C5StateO9hashValueSivg_0()
{
  sub_1BA2C2720();
  sub_1BA2C272C();
  return sub_1BA2C2738();
}

uint64_t sub_1BA23A884()
{
  return sub_1BA2C272C();
}

uint64_t sub_1BA23A8AC()
{
  sub_1BA2C2720();
  sub_1BA2C272C();
  return sub_1BA2C2738();
}

uint64_t sub_1BA23A904()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1BA23A928()
{
  return sub_1BA2C14FC();
}

uint64_t sub_1BA23A934()
{
  return sub_1BA2C1508();
}

uint64_t sub_1BA23A940()
{
  return sub_1BA2C14E4();
}

uint64_t AdPlatformsServerEnvironment.description.getter(uint64_t a1)
{
  uint64_t result;

  result = 0x69746375646F7270;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 3229009;
      break;
    case 2:
      result = 3294545;
      break;
    case 3:
      result = 3360081;
      break;
    case 4:
      result = 3425617;
      break;
    case 5:
      result = 3491153;
      break;
    default:
      result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t sub_1BA23AA00()
{
  _QWORD *v0;
  uint64_t result;

  result = 0x69746375646F7270;
  switch(*v0)
  {
    case 0:
      return result;
    case 1:
      result = 3229009;
      break;
    case 2:
      result = 3294545;
      break;
    case 3:
      result = 3360081;
      break;
    case 4:
      result = 3425617;
      break;
    case 5:
      result = 3491153;
      break;
    default:
      result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AdsModuleStartupTask.Environment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA23AB00 + 4 * byte_1BA2C39E1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA23AB34 + 4 * byte_1BA2C39DC[v4]))();
}

uint64_t sub_1BA23AB34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA23AB3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA23AB44);
  return result;
}

uint64_t sub_1BA23AB50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA23AB58);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA23AB5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA23AB64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA23AB70(unsigned __int8 *a1)
{
  return *a1;
}

ValueMetadata *type metadata accessor for AdsModuleStartupTask.Environment()
{
  return &type metadata for AdsModuleStartupTask.Environment;
}

unint64_t sub_1BA23AB8C()
{
  unint64_t result;

  result = qword_1EF27E8D8;
  if (!qword_1EF27E8D8)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C3A94, &type metadata for AdsModuleStartupTask.Environment);
    atomic_store(result, (unint64_t *)&qword_1EF27E8D8);
  }
  return result;
}

unint64_t sub_1BA23ABD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED5B2DC0;
  if (!qword_1ED5B2DC0)
  {
    v1 = type metadata accessor for AdsModuleStartupTask();
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C3ABC, v1);
    atomic_store(result, (unint64_t *)&qword_1ED5B2DC0);
  }
  return result;
}

uint64_t sub_1BA23AC14()
{
  return 0x6574616C756D6953;
}

char *sub_1BA23AC38(uint64_t a1, uint64_t a2, char *a3, float a4, float a5, double a6, double a7)
{
  char *v7;
  objc_class *ObjectType;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  Class v19;
  char *v20;
  uint64_t v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void *v33;
  char *v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  uint64_t v43;
  id v44;
  void *v45;
  void *v46;
  id v47;
  void *v48;
  void *v49;
  id v50;
  id v51;
  double v52;
  double v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  char v59;
  objc_super v60;
  uint64_t v61;

  ObjectType = (objc_class *)swift_getObjectType();
  v59 = *a3;
  v16 = OBJC_IVAR____TtC7NewsAds17DebugBannerAdView_state;
  v61 = 0;
  sub_1BA22920C(0, &qword_1ED5B1470, (uint64_t)&type metadata for BannerAdViewState, MEMORY[0x1E0DB3938]);
  swift_allocObject();
  v17 = v7;
  *(_QWORD *)&v7[v16] = sub_1BA2C17B4();
  v18 = OBJC_IVAR____TtC7NewsAds17DebugBannerAdView_onLongPress;
  sub_1BA22920C(0, (unint64_t *)&qword_1ED5B14C8, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC348]);
  *(_QWORD *)&v17[v18] = objc_msgSend(objc_allocWithZone(v19), sel_init);
  v20 = &v17[OBJC_IVAR____TtC7NewsAds17DebugBannerAdView_additionalEdgeInsets];
  *(_OWORD *)v20 = xmmword_1BA2C3B40;
  *((_OWORD *)v20 + 1) = xmmword_1BA2C3B40;
  v21 = OBJC_IVAR____TtC7NewsAds17DebugBannerAdView_moreButton;
  v22 = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 0);
  v23 = (void *)sub_1BA2C212C();
  v24 = (void *)objc_opt_self();
  v25 = objc_msgSend(v24, sel_systemImageNamed_, v23);

  objc_msgSend(v22, sel_setImage_forState_, v25, 0);
  *(_QWORD *)&v17[v21] = v22;
  v26 = OBJC_IVAR____TtC7NewsAds17DebugBannerAdView_label;
  *(_QWORD *)&v17[v26] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v27 = &v17[OBJC_IVAR____TtC7NewsAds17DebugBannerAdView_contentIdentifier];
  *(_QWORD *)v27 = a1;
  *((_QWORD *)v27 + 1) = a2;
  v28 = (uint64_t *)&v17[OBJC_IVAR____TtC7NewsAds17DebugBannerAdView_contentInfo];
  v28[3] = (uint64_t)&type metadata for DebugAdContentInfo;
  v28[4] = (uint64_t)&protocol witness table for DebugAdContentInfo;
  v29 = swift_allocObject();
  *v28 = v29;
  type metadata accessor for DebugLifecycleMetricsHelper();
  v30 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = a1;
  *(_QWORD *)(v29 + 24) = a2;
  *(_QWORD *)(v29 + 32) = v30;
  *(_WORD *)(v29 + 40) = 0;
  *(_BYTE *)(v29 + 42) = 0;
  *(_QWORD *)(v29 + 48) = 200;
  swift_bridgeObjectRetain();

  v60.receiver = v17;
  v60.super_class = ObjectType;
  v31 = (char *)objc_msgSendSuper2(&v60, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v32 = OBJC_IVAR____TtC7NewsAds17DebugBannerAdView_moreButton;
  v33 = *(void **)&v31[OBJC_IVAR____TtC7NewsAds17DebugBannerAdView_moreButton];
  v34 = v31;
  objc_msgSend(v33, sel_setShowsMenuAsPrimaryAction_, 1);
  sub_1BA21DEE0(0, &qword_1EF27E870);
  sub_1BA22920C(0, &qword_1ED5B3610, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1BA2C35D0;
  sub_1BA21DEE0(0, &qword_1EF27E878);
  v36 = v33;
  v37 = (void *)sub_1BA2C212C();
  v38 = objc_msgSend(v24, sel_systemImageNamed_, v37);

  v39 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v35 + 32) = sub_1BA2C2444();
  v61 = v35;
  sub_1BA2C2288();
  v40 = (void *)sub_1BA2C242C();
  objc_msgSend(v36, sel_setMenu_, v40, 0, 0, 0, sub_1BA23C384, v39);

  v41 = objc_msgSend(*(id *)&v31[v32], sel_imageView);
  if (v41)
  {
    v42 = v41;
    objc_msgSend(v41, sel_setContentMode_, 1);

  }
  objc_msgSend(*(id *)&v31[v32], sel_setFrame_, 0.0, 0.0, 30.0, 30.0);
  v43 = OBJC_IVAR____TtC7NewsAds17DebugBannerAdView_label;
  v44 = *(id *)&v34[OBJC_IVAR____TtC7NewsAds17DebugBannerAdView_label];
  v45 = (void *)sub_1BA2C212C();
  objc_msgSend(v44, sel_setText_, v45);

  v46 = *(void **)&v34[v43];
  sub_1BA21DEE0(0, &qword_1EF27E880);
  v47 = v46;
  v48 = (void *)sub_1BA2C2420();
  objc_msgSend(v47, sel_setFont_, v48);

  v49 = *(void **)&v34[v43];
  objc_msgSend(v49, sel_sizeToFit);
  objc_msgSend(v34, sel_addSubview_, *(_QWORD *)&v31[v32]);
  objc_msgSend(v34, sel_addSubview_, v49);
  v50 = objc_msgSend(v34, sel_layer);
  v51 = objc_msgSend(v34, sel_traitCollection);
  objc_msgSend(v51, sel_displayScale);
  v53 = v52;

  objc_msgSend(v50, sel_setBorderWidth_, 1.0 / v53);
  v54 = objc_msgSend(v34, sel_layer);
  v55 = objc_msgSend((id)objc_opt_self(), sel_separatorColor);
  v56 = objc_msgSend(v55, sel_CGColor);

  objc_msgSend(v54, sel_setBorderColor_, v56);
  v57 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BA23BD88(v34, v57, v59, a5, a6, a7, a4);
  swift_release();

  return v34;
}

void sub_1BA23B300(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1BCCD9544](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_1BA23C4E8();
    sub_1BA2C17D8();

  }
}

void sub_1BA23B374(void **a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void *v19;
  void *v20;
  void *v21;
  double v22;
  void *v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[6];

  v6 = sub_1BA2C2030();
  v31 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BA2C2060();
  v29 = *(_QWORD *)(v9 - 8);
  v30 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BA2C2078();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v27 - v17;
  v19 = *a1;
  if (v19 == (void *)1)
  {
    sub_1BA23C52C((id)1);
    sub_1BA23C52C((id)1);
    swift_beginAccess();
    v20 = (void *)MEMORY[0x1BCCD9544](a2 + 16);
    if (v20)
    {
      v21 = v20;
      if (a3)
      {
        if (a3 == 1)
          v22 = 0.001;
        else
          v22 = 2.0;
        sub_1BA21DEE0(0, (unint64_t *)&qword_1ED5B2BD0);
        v23 = (void *)sub_1BA2C23D8();
        sub_1BA2C206C();
        MEMORY[0x1BCCD8848](v16, v22);
        v24 = *(void (**)(char *, uint64_t))(v13 + 8);
        v24(v16, v12);
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 16) = v21;
        aBlock[4] = sub_1BA23C570;
        aBlock[5] = v25;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1BA223CC0;
        aBlock[3] = &block_descriptor_16;
        v26 = _Block_copy(aBlock);
        v28 = v21;
        swift_release();
        sub_1BA2C2048();
        aBlock[0] = MEMORY[0x1E0DEE9D8];
        sub_1BA23C3FC();
        sub_1BA22053C(0, (unint64_t *)&qword_1ED5B2B60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BA23C444();
        sub_1BA2C2480();
        MEMORY[0x1BCCD8B78](v18, v11, v8, v26);
        _Block_release(v26);

        (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v6);
        (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v30);
        v24(v18, v12);

      }
      else
      {

      }
    }
  }
  else
  {
    sub_1BA23C53C(v19);
    sub_1BA23C52C(v19);
    sub_1BA23C52C((id)1);
  }
}

id sub_1BA23B6D0()
{
  char *v0;
  void *v1;
  double Width;
  double v3;
  void *v4;
  CGFloat v5;
  objc_super v7;
  CGRect v8;
  CGRect v9;
  CGRect v10;
  CGRect v11;
  CGRect v12;

  v7.receiver = v0;
  v7.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v7, sel_layoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC7NewsAds17DebugBannerAdView_moreButton];
  objc_msgSend(v0, sel_bounds);
  Width = CGRectGetWidth(v8);
  objc_msgSend(v1, sel_frame);
  v3 = Width - CGRectGetWidth(v9) * 0.5 + -8.0;
  objc_msgSend(v1, sel_frame);
  objc_msgSend(v1, sel_setCenter_, v3, CGRectGetWidth(v10) * 0.5 + 8.0);
  v4 = *(void **)&v0[OBJC_IVAR____TtC7NewsAds17DebugBannerAdView_label];
  objc_msgSend(v0, sel_bounds);
  v5 = CGRectGetWidth(v11) * 0.5;
  objc_msgSend(v0, sel_bounds);
  return objc_msgSend(v4, sel_setCenter_, v5, CGRectGetHeight(v12) * 0.5);
}

uint64_t type metadata accessor for DebugBannerAdView()
{
  return objc_opt_self();
}

uint64_t sub_1BA23B8D8()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC7NewsAds17DebugBannerAdView_contentIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BA23B914@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_1BA23B970(*v1 + OBJC_IVAR____TtC7NewsAds17DebugBannerAdView_contentInfo, a1);
}

uint64_t sub_1BA23B92C()
{
  return swift_retain();
}

id sub_1BA23B940()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC7NewsAds17DebugBannerAdView_onLongPress);
}

double sub_1BA23B954()
{
  _QWORD *v0;

  return *(double *)(*v0 + OBJC_IVAR____TtC7NewsAds17DebugBannerAdView_additionalEdgeInsets);
}

uint64_t sub_1BA23B970(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA22053C(0, (unint64_t *)&qword_1ED5B12C8, (uint64_t (*)(uint64_t))sub_1BA23B9CC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BA23B9CC()
{
  unint64_t result;

  result = qword_1ED5B12C0;
  if (!qword_1ED5B12C0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5B12C0);
  }
  return result;
}

void sub_1BA23BA20(void *a1, void (*a2)(uint64_t *), float a3, double a4)
{
  id v7;
  uint64_t v8;
  uint64_t v9;

  if ((float)((float)((float)sub_1BA23BBC4(16777217) * 0.000000059605) + 0.0) >= a3)
  {
    sub_1BA23C4A4();
    v9 = swift_allocError();
    sub_1BA23C4E8();
    sub_1BA2C17D8();

  }
  else
  {
    objc_msgSend(a1, sel_setFrame_, 0.0, 0.0, a4, 150.0);
    v9 = 1;
    sub_1BA23C4E8();
    sub_1BA2C17D8();
  }
  sub_1BA2C17C0();
  v7 = (id)v9;
  v8 = v9;
  a2(&v8);
  sub_1BA23C52C(v7);
}

void sub_1BA23BB54(float a1, float a2)
{
  if ((~COERCE_INT(a2 - a1) & 0x7F800000) != 0)
    sub_1BA23BBC4(16777217);
  else
    __break(1u);
}

uint64_t sub_1BA23BBC4(uint64_t result)
{
  unsigned int v1;
  unsigned int v2;
  unint64_t v3;
  unsigned int v4;
  int64_t v5;
  uint64_t v6;

  if ((_DWORD)result)
  {
    v1 = result;
    v2 = result;
    v6 = 0;
    MEMORY[0x1BCCD94C0](&v6, 8);
    v3 = v6 * (unint64_t)v2;
    result = HIDWORD(v3);
    if (v3 < v1)
    {
      v4 = -v1 % v1;
      if (v4 > v3)
      {
        do
        {
          v6 = 0;
          MEMORY[0x1BCCD94C0](&v6, 8);
          v5 = v6 * (unint64_t)v2;
        }
        while (v4 > v5);
        return v5 >> 32;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BA23BC50(void *a1, uint64_t a2, char a3, float a4, double a5)
{
  id v9;
  uint64_t v10;
  uint64_t v11;

  if ((float)((float)((float)sub_1BA23BBC4(16777217) * 0.000000059605) + 0.0) >= a4)
  {
    sub_1BA23C4A4();
    v11 = swift_allocError();
    sub_1BA23C4E8();
    sub_1BA2C17D8();

  }
  else
  {
    objc_msgSend(a1, sel_setFrame_, 0.0, 0.0, a5, 150.0);
    v11 = 1;
    sub_1BA23C4E8();
    sub_1BA2C17D8();
  }
  sub_1BA2C17C0();
  v9 = (id)v11;
  v10 = v11;
  sub_1BA23B374((void **)&v10, a2, a3);
  sub_1BA23C52C(v9);
}

uint64_t sub_1BA23BD88(void *a1, uint64_t a2, char a3, float a4, double a5, double a6, float a7)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  id v29;
  void *v30;
  void *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD aBlock[6];

  v14 = sub_1BA2C2030();
  v36 = *(_QWORD *)(v14 - 8);
  v37 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1BA2C2060();
  v34 = *(_QWORD *)(v17 - 8);
  v35 = v17;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_1BA2C2078();
  v20 = *(_QWORD *)(v38 - 8);
  v21 = MEMORY[0x1E0C80A78](v38);
  v23 = (char *)&v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v33 - v24;
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = a2;
  *(_BYTE *)(v26 + 24) = a3;
  v27 = swift_allocObject();
  *(float *)(v27 + 16) = a7;
  *(_QWORD *)(v27 + 24) = a1;
  *(double *)(v27 + 32) = a5;
  *(double *)(v27 + 40) = a6;
  *(_QWORD *)(v27 + 48) = sub_1BA23C3B0;
  *(_QWORD *)(v27 + 56) = v26;
  if (a4 <= 0.0)
  {
    sub_1BA21DEE0(0, (unint64_t *)&qword_1ED5B2BD0);
    swift_retain();
    swift_retain();
    v29 = a1;
    v30 = (void *)sub_1BA2C23D8();
    sub_1BA2C206C();
    MEMORY[0x1BCCD8848](v23, a4);
    v33 = *(void (**)(char *, uint64_t))(v20 + 8);
    v33(v23, v38);
    aBlock[4] = sub_1BA23C3E8;
    aBlock[5] = v27;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BA223CC0;
    aBlock[3] = &block_descriptor_1;
    v31 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    sub_1BA2C2048();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_1BA23C3FC();
    sub_1BA22053C(0, (unint64_t *)&qword_1ED5B2B60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA23C444();
    v32 = v37;
    sub_1BA2C2480();
    MEMORY[0x1BCCD8B78](v25, v19, v16, v31);
    _Block_release(v31);
    swift_release();

    (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v32);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v35);
    v33(v25, v38);
  }
  else
  {
    swift_retain();
    swift_retain();
    sub_1BA23BC50(a1, a2, a3, a7, a5);
    swift_release();
  }
  return swift_release();
}

void sub_1BA23C0FC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  Class v4;
  char *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;

  v1 = v0;
  v2 = OBJC_IVAR____TtC7NewsAds17DebugBannerAdView_state;
  sub_1BA22920C(0, &qword_1ED5B1470, (uint64_t)&type metadata for BannerAdViewState, MEMORY[0x1E0DB3938]);
  swift_allocObject();
  *(_QWORD *)&v0[v2] = sub_1BA2C17B4();
  v3 = OBJC_IVAR____TtC7NewsAds17DebugBannerAdView_onLongPress;
  sub_1BA22920C(0, (unint64_t *)&qword_1ED5B14C8, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC348]);
  *(_QWORD *)&v1[v3] = objc_msgSend(objc_allocWithZone(v4), sel_init);
  v5 = &v1[OBJC_IVAR____TtC7NewsAds17DebugBannerAdView_additionalEdgeInsets];
  *(_OWORD *)v5 = xmmword_1BA2C3B40;
  *((_OWORD *)v5 + 1) = xmmword_1BA2C3B40;
  v6 = OBJC_IVAR____TtC7NewsAds17DebugBannerAdView_moreButton;
  v7 = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 0);
  v8 = (void *)sub_1BA2C212C();
  v9 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v8);

  objc_msgSend(v7, sel_setImage_forState_, v9, 0);
  *(_QWORD *)&v1[v6] = v7;
  v10 = OBJC_IVAR____TtC7NewsAds17DebugBannerAdView_label;
  *(_QWORD *)&v1[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1BA2C257C();
  __break(1u);
}

uint64_t sub_1BA23C2E0(uint64_t a1)
{
  uint64_t v2;

  sub_1BA22053C(0, (unint64_t *)&qword_1ED5B12C8, (uint64_t (*)(uint64_t))sub_1BA23B9CC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA23C334()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA23C360()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BA23C384(uint64_t a1)
{
  uint64_t v1;

  sub_1BA23B300(a1, v1);
}

uint64_t sub_1BA23C38C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BA23C3B0(void **a1)
{
  uint64_t v1;

  sub_1BA23B374(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_1BA23C3BC()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1BA23C3E8()
{
  uint64_t v0;

  sub_1BA23BA20(*(void **)(v0 + 24), *(void (**)(uint64_t *))(v0 + 48), *(float *)(v0 + 16), *(double *)(v0 + 32));
}

unint64_t sub_1BA23C3FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED5B2B40;
  if (!qword_1ED5B2B40)
  {
    v1 = sub_1BA2C2030();
    result = MEMORY[0x1BCCD93D0](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1ED5B2B40);
  }
  return result;
}

unint64_t sub_1BA23C444()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED5B2B68;
  if (!qword_1ED5B2B68)
  {
    sub_1BA22053C(255, (unint64_t *)&qword_1ED5B2B60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCD93D0](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED5B2B68);
  }
  return result;
}

unint64_t sub_1BA23C4A4()
{
  unint64_t result;

  result = qword_1EF27E940;
  if (!qword_1EF27E940)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C3C1C, &type metadata for DebugBannerAdView.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF27E940);
  }
  return result;
}

unint64_t sub_1BA23C4E8()
{
  unint64_t result;

  result = qword_1ED5B1EC8;
  if (!qword_1ED5B1EC8)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for BannerAdViewState, &type metadata for BannerAdViewState);
    atomic_store(result, (unint64_t *)&qword_1ED5B1EC8);
  }
  return result;
}

void sub_1BA23C52C(id a1)
{
  if ((unint64_t)a1 >= 3)

}

id sub_1BA23C53C(id result)
{
  if ((unint64_t)result >= 3)
    return result;
  return result;
}

uint64_t sub_1BA23C54C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BA23C570()
{
  return sub_1BA2C17A8();
}

uint64_t storeEnumTagSinglePayload for DebugBannerAdView.Errors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BA23C5F4 + 4 * byte_1BA2C3B50[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BA23C614 + 4 * byte_1BA2C3B55[v4]))();
}

_BYTE *sub_1BA23C5F4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BA23C614(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA23C61C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA23C624(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA23C62C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA23C634(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DebugBannerAdView.Errors()
{
  return &type metadata for DebugBannerAdView.Errors;
}

unint64_t sub_1BA23C654()
{
  unint64_t result;

  result = qword_1EF27E948;
  if (!qword_1EF27E948)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C3BF4, &type metadata for DebugBannerAdView.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF27E948);
  }
  return result;
}

BOOL static AdPolicyFailureType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AdPolicyFailureType.hash(into:)()
{
  return sub_1BA2C272C();
}

uint64_t AdPolicyFailureType.hashValue.getter()
{
  sub_1BA2C2720();
  sub_1BA2C272C();
  return sub_1BA2C2738();
}

BOOL sub_1BA23C720(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_1BA23C738()
{
  unint64_t result;

  result = qword_1ED5B12F8;
  if (!qword_1ED5B12F8)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for AdPolicyFailureType, &type metadata for AdPolicyFailureType);
    atomic_store(result, (unint64_t *)&qword_1ED5B12F8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AdPolicyFailureType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AdPolicyFailureType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BA23C858 + 4 * byte_1BA2C3C65[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BA23C88C + 4 * byte_1BA2C3C60[v4]))();
}

uint64_t sub_1BA23C88C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA23C894(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA23C89CLL);
  return result;
}

uint64_t sub_1BA23C8A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA23C8B0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BA23C8B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA23C8BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void SponsorshipAdContext.appData.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t SponsorshipAdContext.userData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_bridgeObjectRetain();
}

void SponsorshipAdContext.placementData.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t SponsorshipAdContext.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  v4 = *(_BYTE *)(v1 + 48);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = *(_QWORD *)(v1 + 64);
  v7 = *(_QWORD *)(v1 + 72);
  v8 = *(_QWORD *)(v1 + 80);
  v9 = *(_QWORD *)(v1 + 88);
  v10 = *(_QWORD *)(v1 + 96);
  v11 = *(_QWORD *)(v1 + 104);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  *(_QWORD *)(a1 + 80) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void SponsorshipAdContext.referralData.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 112);
}

uint64_t SponsorshipAdContext.init(provider:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  AdContextDataProviding.data<A>(for:)((uint64_t)&type metadata for AppAdData, v5, (uint64_t)&type metadata for AppAdData, v6);
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v7 = a1[3];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  AdContextDataProviding.data<A>(for:)((uint64_t)&type metadata for UserAdData, v7, (uint64_t)&type metadata for UserAdData, v8);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  swift_bridgeObjectRetain();
  AdContextDataProviding.data<A>(for:)((uint64_t)&type metadata for PlacementAdData, v9, (uint64_t)&type metadata for PlacementAdData, v10);
  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  AdContextDataProviding.data<A>(for:)((uint64_t)&type metadata for FeedAdData, v11, (uint64_t)&type metadata for FeedAdData, v12);
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  AdContextDataProviding.dataIfPresent<A>(for:)((uint64_t)&type metadata for ReferralAdData, v14, (uint64_t)&type metadata for ReferralAdData, v15);
  *(_BYTE *)a2 = v16;
  *(_QWORD *)(a2 + 8) = v16;
  *(_BYTE *)(a2 + 16) = v16;
  *(_QWORD *)(a2 + 24) = v16;
  *(_QWORD *)(a2 + 32) = v17;
  *(_QWORD *)(a2 + 40) = v18;
  *(_BYTE *)(a2 + 48) = v19;
  *(_QWORD *)(a2 + 56) = v20;
  *(_QWORD *)(a2 + 64) = v21;
  *(_QWORD *)(a2 + 72) = v22;
  *(_QWORD *)(a2 + 80) = v23;
  *(_QWORD *)(a2 + 88) = v24;
  *(_QWORD *)(a2 + 96) = v25;
  *(_QWORD *)(a2 + 104) = v26;
  *(_BYTE *)(a2 + 112) = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA23CCE8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA23CD18 + 4 * byte_1BA2C3D10[*v0]))(0x61746144707061, 0xE700000000000000);
}

uint64_t sub_1BA23CD18()
{
  return 0x6174614472657375;
}

uint64_t sub_1BA23CD64()
{
  return 0x6C61727265666572;
}

uint64_t sub_1BA23CD84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA23E078(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BA23CDA8(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1BA23CDB4()
{
  sub_1BA23D0CC();
  return sub_1BA2C275C();
}

uint64_t sub_1BA23CDDC()
{
  sub_1BA23D0CC();
  return sub_1BA2C2768();
}

uint64_t SponsorshipAdContext.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  char v39;

  sub_1BA23D5B4(0, &qword_1EF27E950, MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v16 - v7;
  v9 = *v1;
  v10 = *((_QWORD *)v1 + 1);
  v38 = v1[16];
  v26 = *((_QWORD *)v1 + 3);
  v27 = v10;
  v25 = *((_QWORD *)v1 + 4);
  v17 = *((_QWORD *)v1 + 5);
  v23 = v1[48];
  v11 = *((_QWORD *)v1 + 7);
  v24 = *((_OWORD *)v1 + 4);
  v21 = *((_QWORD *)v1 + 10);
  v22 = v11;
  v20 = *((_QWORD *)v1 + 11);
  v19 = *((_QWORD *)v1 + 12);
  v18 = *((_QWORD *)v1 + 13);
  HIDWORD(v16) = v1[112];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA23D0CC();
  sub_1BA2C2750();
  LOBYTE(v28) = v9;
  v39 = 0;
  sub_1BA234CD4();
  sub_1BA2C2684();
  if (!v2)
  {
    v12 = v38;
    v14 = v25;
    v13 = v26;
    v28 = v27;
    v39 = 1;
    sub_1BA236AC4();
    sub_1BA2C2684();
    LOBYTE(v28) = v12;
    v39 = 2;
    sub_1BA23D110();
    sub_1BA2C2684();
    v28 = v13;
    v29 = v14;
    v30 = v17;
    v31 = v23;
    v32 = v22;
    v33 = v24;
    v34 = v21;
    v35 = v20;
    v36 = v19;
    v37 = v18;
    v39 = 3;
    sub_1BA236B90();
    sub_1BA2C2684();
    LOBYTE(v28) = BYTE4(v16);
    v39 = 4;
    sub_1BA23D154();
    sub_1BA2C2648();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1BA23D0CC()
{
  unint64_t result;

  result = qword_1EF27E958;
  if (!qword_1EF27E958)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C3EA8, &type metadata for SponsorshipAdContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27E958);
  }
  return result;
}

unint64_t sub_1BA23D110()
{
  unint64_t result;

  result = qword_1ED5B1B38;
  if (!qword_1ED5B1B38)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for PlacementAdData, &type metadata for PlacementAdData);
    atomic_store(result, (unint64_t *)&qword_1ED5B1B38);
  }
  return result;
}

unint64_t sub_1BA23D154()
{
  unint64_t result;

  result = qword_1ED5B0D70;
  if (!qword_1ED5B0D70)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for ReferralAdData, &type metadata for ReferralAdData);
    atomic_store(result, (unint64_t *)&qword_1ED5B0D70);
  }
  return result;
}

uint64_t SponsorshipAdContext.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  char v44;

  sub_1BA23D5B4(0, &qword_1EF27E960, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA23D0CC();
  sub_1BA2C2744();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v44 = 0;
  sub_1BA234C90();
  sub_1BA2C2630();
  v10 = v32;
  v44 = 1;
  sub_1BA236A80();
  sub_1BA2C2630();
  v11 = v32;
  v44 = 2;
  sub_1BA23D610();
  swift_bridgeObjectRetain();
  sub_1BA2C2630();
  v43 = v32;
  v44 = 3;
  sub_1BA236B4C();
  sub_1BA2C2630();
  v24 = v34;
  v25 = v32;
  v23 = v35;
  v13 = v37;
  v22 = v36;
  v30 = v38;
  v31 = v33;
  v29 = v39;
  v21 = v40;
  v27 = v42;
  v28 = v41;
  v44 = 4;
  sub_1BA23D654();
  swift_bridgeObjectRetain();
  v26 = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA2C25F4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v14 = v32;
  *(_BYTE *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v43;
  v15 = v26;
  v17 = v30;
  v16 = v31;
  *(_QWORD *)(a2 + 24) = v25;
  *(_QWORD *)(a2 + 32) = v16;
  *(_QWORD *)(a2 + 40) = v24;
  *(_BYTE *)(a2 + 48) = v23;
  *(_QWORD *)(a2 + 56) = v22;
  *(_QWORD *)(a2 + 64) = v15;
  v19 = v28;
  v18 = v29;
  *(_QWORD *)(a2 + 72) = v17;
  *(_QWORD *)(a2 + 80) = v18;
  *(_QWORD *)(a2 + 88) = v21;
  *(_QWORD *)(a2 + 96) = v19;
  *(_QWORD *)(a2 + 104) = v27;
  *(_BYTE *)(a2 + 112) = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BA23D5B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA23D0CC();
    v7 = a3(a1, &type metadata for SponsorshipAdContext.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BA23D610()
{
  unint64_t result;

  result = qword_1ED5B1B40;
  if (!qword_1ED5B1B40)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for PlacementAdData, &type metadata for PlacementAdData);
    atomic_store(result, (unint64_t *)&qword_1ED5B1B40);
  }
  return result;
}

unint64_t sub_1BA23D654()
{
  unint64_t result;

  result = qword_1ED5B0D78;
  if (!qword_1ED5B0D78)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for ReferralAdData, &type metadata for ReferralAdData);
    atomic_store(result, (unint64_t *)&qword_1ED5B0D78);
  }
  return result;
}

uint64_t sub_1BA23D698@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SponsorshipAdContext.init(provider:)(a1, a2);
}

uint64_t sub_1BA23D6AC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SponsorshipAdContext.init(from:)(a1, a2);
}

uint64_t sub_1BA23D6C0(_QWORD *a1)
{
  return SponsorshipAdContext.encode(to:)(a1);
}

uint64_t SponsorshipAdContext.currentPromotableContentDepiction.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15[3];
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v13 = *(_BYTE *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 64);
  v12 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 88);
  v9 = *(_QWORD *)(v0 + 96);
  v10 = *(_QWORD *)(v0 + 104);
  sub_1BA2C19E8();
  v14 = v1;
  v15[0] = v3;
  v15[1] = v2;
  v15[2] = v4;
  v16 = v13;
  v17 = v12;
  v18 = v5;
  v19 = v7;
  v20 = v6;
  v21 = v8;
  v22 = v9;
  v23 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BA233C54(0, v15, (uint64_t)&v14, 100);
}

uint64_t sub_1BA23D7BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15[3];
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v13 = *(_BYTE *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 64);
  v12 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 88);
  v9 = *(_QWORD *)(v0 + 96);
  v10 = *(_QWORD *)(v0 + 104);
  sub_1BA2C19E8();
  v14 = v1;
  v15[0] = v3;
  v15[1] = v2;
  v15[2] = v4;
  v16 = v13;
  v17 = v12;
  v18 = v5;
  v19 = v7;
  v20 = v6;
  v21 = v8;
  v22 = v9;
  v23 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BA233C54(0, v15, (uint64_t)&v14, 100);
}

void SponsorshipAdContext.newsSupplementalContext.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[11];

  v10 = *(_QWORD *)(v0 + 40);
  v11 = *(_QWORD *)(v0 + 24);
  v8 = *(_QWORD *)(v0 + 32);
  v9 = *(unsigned __int8 *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 104);
  v12 = *(unsigned __int8 *)(v0 + 112);
  objc_msgSend(objc_allocWithZone((Class)sub_1BA2C1DC0()), sel_init);
  sub_1BA2C1DB4();
  sub_1BA2C1C58();
  sub_1BA2C1C94();
  swift_bridgeObjectRetain_n();
  sub_1BA2C1D00();
  swift_bridgeObjectRelease();
  v13[0] = v11;
  v13[1] = v8;
  v13[2] = v10;
  v13[3] = v9;
  v13[4] = v7;
  v13[5] = v1;
  v13[6] = v2;
  v13[7] = v3;
  v13[8] = v6;
  v13[9] = v4;
  v13[10] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA2338F8((uint64_t)v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __asm { BR              X9 }
}

uint64_t sub_1BA23DA48()
{
  uint64_t v0;

  sub_1BA2C1C64();
  sub_1BA23DAE0();
  sub_1BA2C2438();
  sub_1BA2C1D54();
  return v0;
}

unint64_t sub_1BA23DAE0()
{
  unint64_t result;

  result = qword_1ED5B0F68;
  if (!qword_1ED5B0F68)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5B0F68);
  }
  return result;
}

uint64_t destroy for SponsorshipAdContext()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SponsorshipAdContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  v5 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v5;
  v6 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v6;
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SponsorshipAdContext(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  return a1;
}

__n128 __swift_memcpy113_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for SponsorshipAdContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for SponsorshipAdContext(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 113))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SponsorshipAdContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 112) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 113) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 113) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SponsorshipAdContext.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BA23DF20 + 4 * byte_1BA2C3D1F[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BA23DF54 + 4 * byte_1BA2C3D1A[v4]))();
}

uint64_t sub_1BA23DF54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA23DF5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA23DF64);
  return result;
}

uint64_t sub_1BA23DF70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA23DF78);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BA23DF7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA23DF84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SponsorshipAdContext.CodingKeys()
{
  return &type metadata for SponsorshipAdContext.CodingKeys;
}

unint64_t sub_1BA23DFA4()
{
  unint64_t result;

  result = qword_1EF27E968;
  if (!qword_1EF27E968)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C3E80, &type metadata for SponsorshipAdContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27E968);
  }
  return result;
}

unint64_t sub_1BA23DFEC()
{
  unint64_t result;

  result = qword_1EF27E970;
  if (!qword_1EF27E970)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C3DF0, &type metadata for SponsorshipAdContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27E970);
  }
  return result;
}

unint64_t sub_1BA23E034()
{
  unint64_t result;

  result = qword_1EF27E978;
  if (!qword_1EF27E978)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C3E18, &type metadata for SponsorshipAdContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27E978);
  }
  return result;
}

uint64_t sub_1BA23E078(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x61746144707061 && a2 == 0xE700000000000000;
  if (v2 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614472657375 && a2 == 0xE800000000000000 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E656D6563616C70 && a2 == 0xED00006174614474 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C61727265666572 && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BA2C26A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

NewsAds::AdContextDataNamespace::Edge_optional __swiftcall AdContextDataNamespace.Edge.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsAds::AdContextDataNamespace::Edge_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BA2C25DC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t AdContextDataNamespace.Edge.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x676E696C69617274;
  else
    return 0x676E696461656CLL;
}

uint64_t sub_1BA23E36C(char *a1, char *a2)
{
  return sub_1BA26DC20(*a1, *a2);
}

unint64_t sub_1BA23E37C()
{
  unint64_t result;

  result = qword_1EF27E980;
  if (!qword_1EF27E980)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for AdContextDataNamespace.Edge, &type metadata for AdContextDataNamespace.Edge);
    atomic_store(result, (unint64_t *)&qword_1EF27E980);
  }
  return result;
}

uint64_t sub_1BA23E3C0()
{
  sub_1BA2C2720();
  sub_1BA2C21A4();
  swift_bridgeObjectRelease();
  return sub_1BA2C2738();
}

uint64_t sub_1BA23E440()
{
  sub_1BA2C21A4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA23E49C()
{
  sub_1BA2C2720();
  sub_1BA2C21A4();
  swift_bridgeObjectRelease();
  return sub_1BA2C2738();
}

NewsAds::AdContextDataNamespace::Edge_optional sub_1BA23E518(Swift::String *a1)
{
  return AdContextDataNamespace.Edge.init(rawValue:)(*a1);
}

void sub_1BA23E524(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x676E696461656CLL;
  if (*v1)
    v2 = 0x676E696C69617274;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BA23E568(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t _s7NewsAds22AdContextDataNamespaceOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA23E568(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for AdContextDataNamespace(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA23E568(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BA229ED4(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for AdContextDataNamespace(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BA229ED4(v4, v5, v6);
  return a1;
}

uint64_t sub_1BA23E66C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t storeEnumTagSinglePayload for AdContextDataNamespace.Edge(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA23E6C0 + 4 * byte_1BA2C4005[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA23E6F4 + 4 * byte_1BA2C4000[v4]))();
}

uint64_t sub_1BA23E6F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA23E6FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA23E704);
  return result;
}

uint64_t sub_1BA23E710(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA23E718);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA23E71C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA23E724(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t AdStatusConditionManager.addProvider(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t ObjectType;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v23;
  uint64_t v24[2];
  char v25;

  v3 = v2;
  v6 = *(_QWORD **)(v2 + 56);
  swift_unknownObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v3 + 56) = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v6 = sub_1BA23EF98(0, v6[2] + 1, 1, v6);
    *(_QWORD *)(v3 + 56) = v6;
  }
  v9 = v6[2];
  v8 = v6[3];
  if (v9 >= v8 >> 1)
  {
    v6 = sub_1BA23EF98((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
    *(_QWORD *)(v3 + 56) = v6;
  }
  v6[2] = v9 + 1;
  v10 = &v6[2 * v9];
  v10[4] = a1;
  v10[5] = a2;
  v11 = swift_allocObject();
  ObjectType = swift_getObjectType();
  v13 = *(void (**)(uint64_t, uint64_t))(a2 + 8);
  v13(ObjectType, a2);
  sub_1BA2C17C0();
  swift_release();
  v13(ObjectType, a2);
  v14 = swift_allocObject();
  swift_weakInit();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 24) = a2;
  swift_unknownObjectWeakInit();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v11;
  v16[3] = v14;
  v16[4] = v15;
  swift_retain();
  sub_1BA2C17CC();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  v13(ObjectType, a2);
  sub_1BA2C17C0();
  swift_release();
  v17 = *(_QWORD *)(v23 + 16);
  if (v17)
  {
    swift_bridgeObjectRetain();
    v18 = (_BYTE *)(v23 + 48);
    do
    {
      v19 = *((_QWORD *)v18 - 2);
      v20 = *((_QWORD *)v18 - 1);
      v21 = *v18;
      v18 += 24;
      v24[0] = v19;
      v24[1] = v20;
      v25 = v21;
      swift_bridgeObjectRetain();
      sub_1BA23EC14(v24);
      swift_bridgeObjectRelease();
      --v17;
    }
    while (v17);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA23E990(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33[2];
  char v34;
  uint64_t v35;
  uint64_t v36[2];
  char v37;

  v4 = a4;
  v6 = *a1;
  v7 = (_QWORD *)(a2 + 16);
  v8 = a4 + 16;
  swift_beginAccess();
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v29 = v8;
    v30 = v4;
    v31 = v7;
    v11 = v9 + 32;
    v12 = *(_QWORD *)(v6 + 16);
    swift_bridgeObjectRetain();
    swift_beginAccess();
    v13 = 0;
    v32 = v6;
    v14 = (_QWORD *)(v6 + 40);
    do
    {
      v15 = (uint64_t *)(v11 + 24 * v13);
      v16 = *v15;
      v17 = v15[1];
      v18 = v14;
      v19 = v12;
      if (v12)
      {
        while (1)
        {
          v20 = *(v18 - 1) == v16 && *v18 == v17;
          if (v20 || (sub_1BA2C26A8() & 1) != 0)
            break;
          v18 += 3;
          if (!--v19)
            goto LABEL_11;
        }
      }
      else
      {
LABEL_11:
        if (swift_weakLoadStrong())
        {
          v36[0] = v16;
          v36[1] = v17;
          v37 = 1;
          swift_bridgeObjectRetain_n();
          sub_1BA23EC14(v36);
          swift_bridgeObjectRelease_n();
          swift_release();
        }
      }
      ++v13;
    }
    while (v13 != v10);
    swift_bridgeObjectRelease();
    v7 = v31;
    v6 = v32;
    v4 = v30;
    v8 = v29;
  }
  swift_beginAccess();
  if (MEMORY[0x1BCCD9544](v8))
  {
    v21 = *(_QWORD *)(v4 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(ObjectType, v21);
    swift_unknownObjectRelease();
    sub_1BA2C17C0();
    swift_release();
    v23 = *(_QWORD *)(v35 + 16);
    if (v23)
    {
      swift_bridgeObjectRetain();
      swift_beginAccess();
      v24 = (_BYTE *)(v35 + 48);
      do
      {
        v26 = *((_QWORD *)v24 - 2);
        v25 = *((_QWORD *)v24 - 1);
        v27 = *v24;
        if (swift_weakLoadStrong())
        {
          v33[0] = v26;
          v33[1] = v25;
          v34 = v27;
          swift_bridgeObjectRetain();
          sub_1BA23EC14(v33);
          swift_bridgeObjectRelease();
          swift_release();
        }
        v24 += 24;
        --v23;
      }
      while (v23);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  *v7 = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA23EC14(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  int v27;
  char v28;
  uint64_t v29;
  unint64_t v30;

  sub_1BA22053C(0, &qword_1ED5B0D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v23 - v3;
  v5 = sub_1BA2C1460();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v25 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v8 = a1[1];
  v27 = *((unsigned __int8 *)a1 + 16);
  if (qword_1ED5B0F20 != -1)
    swift_once();
  v10 = (id)qword_1ED5B0E40;
  sub_1BA2C2390();
  sub_1BA2241B4(0, (unint64_t *)&qword_1ED5B2CC0, (unint64_t *)&qword_1ED5B2CD8);
  v24 = v11;
  v12 = swift_allocObject();
  v23 = xmmword_1BA2C37C0;
  *(_OWORD *)(v12 + 16) = xmmword_1BA2C37C0;
  v13 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
  v14 = sub_1BA2291C8();
  *(_QWORD *)(v12 + 64) = v14;
  *(_QWORD *)(v12 + 32) = v9;
  *(_QWORD *)(v12 + 40) = v8;
  v29 = 0;
  v30 = 0xE000000000000000;
  v28 = v27;
  swift_bridgeObjectRetain();
  sub_1BA2C2570();
  v15 = v29;
  v16 = v30;
  *(_QWORD *)(v12 + 96) = v13;
  *(_QWORD *)(v12 + 104) = v14;
  *(_QWORD *)(v12 + 72) = v15;
  *(_QWORD *)(v12 + 80) = v16;
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  sub_1BA2C1430();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1BA23FD60((uint64_t)v4);
    v17 = (id)qword_1ED5B0E40;
    sub_1BA2C2390();
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = v23;
    *(_QWORD *)(v18 + 56) = v13;
    *(_QWORD *)(v18 + 64) = v14;
    *(_QWORD *)(v18 + 32) = v9;
    *(_QWORD *)(v18 + 40) = v8;
    v29 = 0;
    v30 = 0xE000000000000000;
    v28 = v27;
    swift_bridgeObjectRetain();
    sub_1BA2C2570();
    v19 = v29;
    v20 = v30;
    *(_QWORD *)(v18 + 96) = v13;
    *(_QWORD *)(v18 + 104) = v14;
    *(_QWORD *)(v18 + 72) = v19;
    *(_QWORD *)(v18 + 80) = v20;
    sub_1BA2C1EB0();

    return swift_bridgeObjectRelease();
  }
  else
  {
    v22 = (uint64_t)v25;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v25, v4, v5);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v26 + 16), *(_QWORD *)(v26 + 40));
    if ((v27 & 1) != 0)
      sub_1BA2BA720(v22);
    else
      sub_1BA2BA6B0(v22);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v22, v5);
  }
}

uint64_t AdStatusConditionManager.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BA23EF78(uint64_t a1, uint64_t a2)
{
  return AdStatusConditionManager.addProvider(_:)(a1, a2);
}

_QWORD *sub_1BA23EF98(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA2241B4(0, &qword_1ED5B0F00, qword_1ED5B0E48);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[2 * v8 + 4])
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
  }
  else
  {
    sub_1BA224288(0, qword_1ED5B0E48);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1BA23F0E0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA23F104()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BA23F128()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BA23F14C()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA23F180(uint64_t *a1)
{
  uint64_t *v1;

  return sub_1BA23E990(a1, v1[2], v1[3], v1[4]);
}

uint64_t dispatch thunk of AdStatusConditionManagerType.addProvider(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t method lookup function for AdStatusConditionManager()
{
  return swift_lookUpClassMethod();
}

char *sub_1BA23F1A0(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA22920C(0, &qword_1EF27E988, (uint64_t)&type metadata for AdPreviewQueue.AdPreviewWrapper, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1BA23F2B4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA22920C(0, &qword_1ED5B2C90, (uint64_t)&type metadata for AdPolicyFailure, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 31;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8])
      memmove(v13, v14, v8 << 6);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

size_t sub_1BA23F3C8(size_t a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BA23F754(a1, a2, a3, a4, &qword_1ED5B13D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D81F30]);
}

size_t sub_1BA23F3DC(size_t a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BA23F754(a1, a2, a3, a4, &qword_1ED5B2C78, (uint64_t (*)(uint64_t))sub_1BA23FCE4);
}

char *sub_1BA23F3F0(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA22920C(0, &qword_1ED5B2C98, (uint64_t)&type metadata for JournalEntryStatus.Info, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8])
      memmove(v12, v13, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1BA23F51C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA22920C(0, &qword_1ED5B2C80, (uint64_t)&type metadata for AdSegmentScope, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

_QWORD *sub_1BA23F618(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BA23F8F4(a1, a2, a3, a4, (unint64_t *)&qword_1ED5B2CB0, (unint64_t *)&qword_1ED5B2B70, MEMORY[0x1E0DEA968]);
}

char *sub_1BA23F634(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA22053C(0, &qword_1ED5B2CB8, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 32 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

size_t sub_1BA23F740(size_t a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BA23F754(a1, a2, a3, a4, &qword_1EF27E9A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB79E8]);
}

size_t sub_1BA23F754(size_t result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  unint64_t v19;

  v8 = result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BA22053C(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_29;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(result - v15) / v14);
LABEL_19:
  v18 = *(_QWORD *)(a6(0) - 8);
  if ((v8 & 1) != 0)
  {
    if (v16 < a4
      || (v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80),
          (char *)v16 + v19 >= (char *)a4 + v19 + *(_QWORD *)(v18 + 72) * v11))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v16;
}

_QWORD *sub_1BA23F8D8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BA23F8F4(a1, a2, a3, a4, &qword_1EF27E990, &qword_1EF27E998, (uint64_t)&type metadata for DebugJournal.Detail);
}

_QWORD *sub_1BA23F8F4(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, unint64_t *a6, uint64_t a7)
{
  char v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int64_t v16;
  uint64_t v17;

  v10 = (char)result;
  if ((a3 & 1) != 0)
  {
    v11 = a4[3];
    v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v12 = a2;
    }
  }
  else
  {
    v12 = a2;
  }
  v13 = a4[2];
  if (v12 <= v13)
    v14 = a4[2];
  else
    v14 = v12;
  if (v14)
  {
    sub_1BA23FA38(0, a5, a6, a7);
    v15 = (_QWORD *)swift_allocObject();
    v16 = _swift_stdlib_malloc_size(v15);
    v17 = v16 - 32;
    if (v16 < 32)
      v17 = v16 - 25;
    v15[2] = v13;
    v15[3] = 2 * (v17 >> 3);
  }
  else
  {
    v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((v10 & 1) != 0)
  {
    if (v15 != a4 || v15 + 4 >= &a4[v13 + 4])
      memmove(v15 + 4, a4 + 4, 8 * v13);
    a4[2] = 0;
  }
  else
  {
    sub_1BA22920C(0, a6, a7, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v15;
}

void sub_1BA23FA38(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BA22920C(255, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v5 = sub_1BA2C269C();
    if (!v6)
      atomic_store(v5, a2);
  }
}

_QWORD *sub_1BA23FA98(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA22053C(0, &qword_1ED5B2CC8, (uint64_t (*)(uint64_t))sub_1BA2346CC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[2 * v8 + 4])
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
  }
  else
  {
    sub_1BA2346CC();
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1BA23FBC8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA22920C(0, &qword_1EF27E9A8, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1BA23FCE4()
{
  uint64_t result;

  result = qword_1ED5B17F8;
  if (!qword_1ED5B17F8)
  {
    type metadata accessor for NativeAdPlacement();
    sub_1BA23640C();
    type metadata accessor for JournalEntry();
  }
  return result;
}

uint64_t sub_1BA23FD60(uint64_t a1)
{
  uint64_t v2;

  sub_1BA22053C(0, &qword_1ED5B0D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of AdStatusConditionProviderType.statusConditions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t ArticleAdData.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArticleAdData.isDraft.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t ArticleAdData.isSponsored.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t ArticleAdData.primaryAudience.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArticleAdData.adSections.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ArticleAdData.adKeywords.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ArticleAdData.adCategories.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ArticleAdData.language.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BA23FE68()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA23FE9C + 4 * a0[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA23FE9C()
{
  return 0x74666172447369;
}

uint64_t sub_1BA23FEB4()
{
  return 0x6F736E6F70537369;
}

uint64_t sub_1BA23FED4()
{
  return 0x417972616D697270;
}

uint64_t sub_1BA23FEF8()
{
  return 0x6F69746365536461;
}

uint64_t sub_1BA23FF10()
{
  return 0x726F7779654B6461;
}

uint64_t sub_1BA23FF28()
{
  return 0x6F67657461436461;
}

uint64_t sub_1BA23FF48()
{
  return 0x65676175676E616CLL;
}

uint64_t sub_1BA23FF60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA240FBC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BA23FF84(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1BA23FF90()
{
  sub_1BA240278();
  return sub_1BA2C275C();
}

uint64_t sub_1BA23FFB8()
{
  sub_1BA240278();
  return sub_1BA2C2768();
}

uint64_t ArticleAdData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  char v26;
  uint64_t v27;

  sub_1BA240780(0, &qword_1EF27E9B0, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v17 - v6;
  v8 = *(unsigned __int8 *)(v1 + 16);
  v23 = *(unsigned __int8 *)(v1 + 17);
  v24 = v8;
  v9 = *(_QWORD *)(v1 + 24);
  v21 = *(_QWORD *)(v1 + 32);
  v22 = v9;
  v10 = *(_QWORD *)(v1 + 40);
  v19 = *(_QWORD *)(v1 + 48);
  v20 = v10;
  v11 = *(_QWORD *)(v1 + 56);
  v17[1] = *(_QWORD *)(v1 + 64);
  v18 = v11;
  v17[0] = *(_QWORD *)(v1 + 72);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA240278();
  v12 = v4;
  sub_1BA2C2750();
  LOBYTE(v27) = 0;
  v13 = v25;
  sub_1BA2C2654();
  if (!v13)
  {
    v14 = v19;
    v15 = v20;
    LOBYTE(v27) = 1;
    sub_1BA2C2660();
    LOBYTE(v27) = 2;
    sub_1BA2C2660();
    LOBYTE(v27) = 3;
    sub_1BA2C2654();
    v27 = v15;
    v26 = 4;
    sub_1BA234914();
    sub_1BA2407DC(&qword_1EF27E9C0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1BA2C2684();
    v27 = v14;
    v26 = 5;
    sub_1BA2C2684();
    v27 = v18;
    v26 = 6;
    sub_1BA2C2684();
    LOBYTE(v27) = 7;
    sub_1BA2C263C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
}

unint64_t sub_1BA240278()
{
  unint64_t result;

  result = qword_1EF27E9B8;
  if (!qword_1EF27E9B8)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C42E4, &type metadata for ArticleAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27E9B8);
  }
  return result;
}

uint64_t ArticleAdData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  char v37;
  uint64_t v38;

  sub_1BA240780(0, &qword_1EF27E9C8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v27 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA240278();
  sub_1BA2C2744();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v38) = 0;
  v10 = sub_1BA2C2600();
  v12 = v11;
  LOBYTE(v38) = 1;
  swift_bridgeObjectRetain();
  v36 = sub_1BA2C260C();
  LOBYTE(v38) = 2;
  v34 = sub_1BA2C260C();
  LOBYTE(v38) = 3;
  v31 = sub_1BA2C2600();
  v35 = v14;
  sub_1BA234914();
  v16 = v15;
  v37 = 4;
  v17 = sub_1BA2407DC(&qword_1EF27E9D0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  v32 = v17;
  v33 = v16;
  sub_1BA2C2630();
  v37 = 5;
  v30 = v38;
  swift_bridgeObjectRetain();
  v29 = 0;
  sub_1BA2C2630();
  v37 = 6;
  v28 = v38;
  swift_bridgeObjectRetain();
  sub_1BA2C2630();
  v18 = v38;
  LOBYTE(v38) = 7;
  v33 = v18;
  swift_bridgeObjectRetain();
  v19 = sub_1BA2C25E8();
  v21 = v20;
  v36 &= 1u;
  v34 &= 1u;
  v22 = *(void (**)(char *, uint64_t))(v7 + 8);
  v32 = v19;
  v22(v9, v6);
  swift_bridgeObjectRetain();
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = v36;
  *(_BYTE *)(a2 + 17) = v34;
  v23 = v30;
  v24 = v35;
  *(_QWORD *)(a2 + 24) = v31;
  *(_QWORD *)(a2 + 32) = v24;
  v25 = v28;
  *(_QWORD *)(a2 + 40) = v23;
  *(_QWORD *)(a2 + 48) = v25;
  v26 = v32;
  *(_QWORD *)(a2 + 56) = v33;
  *(_QWORD *)(a2 + 64) = v26;
  *(_QWORD *)(a2 + 72) = v21;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BA240780(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA240278();
    v7 = a3(a1, &type metadata for ArticleAdData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BA2407DC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1BA234914();
    v8 = a2;
    result = MEMORY[0x1BCCD93D0](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA240838@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArticleAdData.init(from:)(a1, a2);
}

uint64_t sub_1BA24084C(_QWORD *a1)
{
  return ArticleAdData.encode(to:)(a1);
}

uint64_t ArticleAdData.init(headline:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  unsigned __int8 v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;

  v4 = objc_msgSend(a1, sel_identifier);
  v5 = sub_1BA2C2150();
  v29 = v6;
  v30 = v5;

  v28 = objc_msgSend(a1, sel_isDraft);
  v27 = objc_msgSend(a1, sel_isSponsored);
  v7 = objc_msgSend(a1, sel_primaryAudience);
  if (v7)
  {
    v8 = v7;
    v9 = sub_1BA2C2150();
    v11 = v10;

  }
  else
  {
    v11 = 0xE700000000000000;
    v9 = 0x4C4152454E4547;
  }
  v12 = objc_msgSend(a1, sel_iAdSectionIDs);
  if (v12)
  {
    v13 = v12;
    v14 = sub_1BA2C227C();

  }
  else
  {
    v14 = MEMORY[0x1E0DEE9D8];
  }
  v15 = objc_msgSend(a1, sel_iAdKeywords);
  if (v15)
  {
    v16 = v15;
    v17 = sub_1BA2C227C();

  }
  else
  {
    v17 = MEMORY[0x1E0DEE9D8];
  }
  v18 = objc_msgSend(a1, sel_iAdCategories);
  if (v18)
  {
    v19 = v18;
    v20 = sub_1BA2C227C();

  }
  else
  {
    v20 = MEMORY[0x1E0DEE9D8];
  }
  v21 = objc_msgSend(a1, sel_language);
  if (v21)
  {
    v22 = v21;
    v23 = sub_1BA2C2150();
    v25 = v24;

    result = swift_unknownObjectRelease();
  }
  else
  {
    result = swift_unknownObjectRelease();
    v23 = 0;
    v25 = 0;
  }
  *(_QWORD *)a2 = v30;
  *(_QWORD *)(a2 + 8) = v29;
  *(_BYTE *)(a2 + 16) = v28;
  *(_BYTE *)(a2 + 17) = v27;
  *(_QWORD *)(a2 + 24) = v9;
  *(_QWORD *)(a2 + 32) = v11;
  *(_QWORD *)(a2 + 40) = v14;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v20;
  *(_QWORD *)(a2 + 64) = v23;
  *(_QWORD *)(a2 + 72) = v25;
  return result;
}

unint64_t sub_1BA240A74(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BA240AA0();
  result = sub_1BA240AE4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BA240AA0()
{
  unint64_t result;

  result = qword_1ED5B12A8;
  if (!qword_1ED5B12A8)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for ArticleAdData, &type metadata for ArticleAdData);
    atomic_store(result, (unint64_t *)&qword_1ED5B12A8);
  }
  return result;
}

unint64_t sub_1BA240AE4()
{
  unint64_t result;

  result = qword_1ED5B12A0;
  if (!qword_1ED5B12A0)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for ArticleAdData, &type metadata for ArticleAdData);
    atomic_store(result, (unint64_t *)&qword_1ED5B12A0);
  }
  return result;
}

uint64_t destroy for ArticleAdData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArticleAdData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArticleAdData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ArticleAdData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleAdData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleAdData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArticleAdData()
{
  return &type metadata for ArticleAdData;
}

uint64_t storeEnumTagSinglePayload for ArticleAdData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1BA240E64 + 4 * byte_1BA2C417D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1BA240E98 + 4 * byte_1BA2C4178[v4]))();
}

uint64_t sub_1BA240E98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA240EA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA240EA8);
  return result;
}

uint64_t sub_1BA240EB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA240EBCLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1BA240EC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA240EC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleAdData.CodingKeys()
{
  return &type metadata for ArticleAdData.CodingKeys;
}

unint64_t sub_1BA240EE8()
{
  unint64_t result;

  result = qword_1EF27E9D8;
  if (!qword_1EF27E9D8)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C42BC, &type metadata for ArticleAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27E9D8);
  }
  return result;
}

unint64_t sub_1BA240F30()
{
  unint64_t result;

  result = qword_1EF27E9E0;
  if (!qword_1EF27E9E0)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C422C, &type metadata for ArticleAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27E9E0);
  }
  return result;
}

unint64_t sub_1BA240F78()
{
  unint64_t result;

  result = qword_1EF27E9E8;
  if (!qword_1EF27E9E8)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C4254, &type metadata for ArticleAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27E9E8);
  }
  return result;
}

uint64_t sub_1BA240FBC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74666172447369 && a2 == 0xE700000000000000 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F736E6F70537369 && a2 == 0xEB00000000646572 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x417972616D697270 && a2 == 0xEF65636E65696475 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F69746365536461 && a2 == 0xEA0000000000736ELL || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x726F7779654B6461 && a2 == 0xEA00000000007364 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6F67657461436461 && a2 == 0xEC00000073656972 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x65676175676E616CLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1BA2C26A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t FeedAdData.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedAdData.contentProviderID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t FeedAdData.isWhitelisted.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t FeedAdData.primaryAudience.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedAdData.adKeywords.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedAdData.adCategories.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedAdData.language.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedAdData.targetingKeywords.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA241414(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1BA2C26A8(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a1 + 7;
    for (i = a2 + 7; ; i += 2)
    {
      v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (sub_1BA2C26A8() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1BA2414D8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA241510 + 4 * byte_1BA2C4334[a1]))(0x696669746E656469, 0xEA00000000007265);
}

unint64_t sub_1BA241510()
{
  return 0xD000000000000011;
}

uint64_t sub_1BA2415D0()
{
  unsigned __int8 *v0;

  return sub_1BA2414D8(*v0);
}

uint64_t sub_1BA2415D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA242B24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BA2415FC()
{
  sub_1BA242768();
  return sub_1BA2C275C();
}

uint64_t sub_1BA241624()
{
  sub_1BA242768();
  return sub_1BA2C2768();
}

uint64_t FeedAdData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  sub_1BA2427AC(0, &qword_1EF27E9F0, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v22 = *(_QWORD *)(v1 + 16);
  v21 = *(unsigned __int8 *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v19 = *(_QWORD *)(v1 + 40);
  v20 = v6;
  v7 = *(_QWORD *)(v1 + 48);
  v17 = *(_QWORD *)(v1 + 56);
  v18 = v7;
  v8 = *(_QWORD *)(v1 + 72);
  v9 = *(_QWORD *)(v1 + 80);
  v16[0] = *(_QWORD *)(v1 + 64);
  v16[1] = v8;
  v10 = a1[3];
  v11 = a1;
  v13 = (char *)v16 - v12;
  __swift_project_boxed_opaque_existential_1(v11, v10);
  sub_1BA242768();
  sub_1BA2C2750();
  LOBYTE(v25) = 0;
  v14 = v23;
  sub_1BA2C2654();
  if (!v14)
  {
    LOBYTE(v25) = 1;
    sub_1BA2C2678();
    LOBYTE(v25) = 2;
    sub_1BA2C2660();
    LOBYTE(v25) = 3;
    sub_1BA2C2654();
    v25 = v18;
    v24 = 4;
    sub_1BA234914();
    sub_1BA2407DC(&qword_1EF27E9C0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1BA2C2684();
    v25 = v17;
    v24 = 5;
    sub_1BA2C2684();
    LOBYTE(v25) = 6;
    sub_1BA2C263C();
    v25 = v9;
    v24 = 7;
    sub_1BA2C2648();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v13, v4);
}

uint64_t FeedAdData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;

  sub_1BA2427AC(0, &qword_1EF27EA00, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA242768();
  sub_1BA2C2744();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v37) = 0;
  v10 = sub_1BA2C2600();
  v12 = v11;
  LOBYTE(v37) = 1;
  swift_bridgeObjectRetain();
  v35 = sub_1BA2C2624();
  LOBYTE(v37) = 2;
  v33 = sub_1BA2C260C();
  LOBYTE(v37) = 3;
  v30 = sub_1BA2C2600();
  v34 = v14;
  sub_1BA234914();
  v16 = v15;
  v36 = 4;
  v17 = sub_1BA2407DC(&qword_1EF27E9D0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  v31 = v17;
  v32 = v16;
  sub_1BA2C2630();
  v36 = 5;
  v29 = v37;
  swift_bridgeObjectRetain();
  v28 = 0;
  sub_1BA2C2630();
  v18 = v37;
  LOBYTE(v37) = 6;
  v27 = v18;
  swift_bridgeObjectRetain();
  v25 = sub_1BA2C25E8();
  v26 = v19;
  v36 = 7;
  swift_bridgeObjectRetain();
  sub_1BA2C25F4();
  v33 &= 1u;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v20 = v37;
  swift_bridgeObjectRetain();
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  v21 = v34;
  *(_QWORD *)(a2 + 16) = v35;
  *(_BYTE *)(a2 + 24) = v33;
  v22 = v29;
  *(_QWORD *)(a2 + 32) = v30;
  *(_QWORD *)(a2 + 40) = v21;
  v24 = v26;
  v23 = v27;
  *(_QWORD *)(a2 + 48) = v22;
  *(_QWORD *)(a2 + 56) = v23;
  *(_QWORD *)(a2 + 64) = v25;
  *(_QWORD *)(a2 + 72) = v24;
  *(_QWORD *)(a2 + 80) = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA241DB8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedAdData.init(from:)(a1, a2);
}

uint64_t sub_1BA241DCC(_QWORD *a1)
{
  return FeedAdData.encode(to:)(a1);
}

__n128 FeedAdData.init(feedDescriptor:)@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  __n128 result;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  _QWORD v13[3];
  char v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;

  v4 = objc_msgSend(a1, sel_backingChannel);
  if (v4)
    FeedAdData.init(channel:section:)(v4, objc_msgSend(a1, sel_backingTag), (uint64_t)v13);
  else
    FeedAdData.init(tag:)(objc_msgSend(a1, sel_backingTag), (uint64_t)v13);

  v5 = v13[1];
  v6 = v13[2];
  v7 = v14;
  v8 = v15;
  result = v16;
  v10 = v17;
  v11 = v18;
  v12 = v19;
  *(_QWORD *)a2 = v13[0];
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v6;
  *(_BYTE *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 32) = v8;
  *(__n128 *)(a2 + 40) = result;
  *(_QWORD *)(a2 + 56) = v10;
  *(_OWORD *)(a2 + 64) = v11;
  *(_QWORD *)(a2 + 80) = v12;
  return result;
}

uint64_t FeedAdData.init(channel:section:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  id v38;
  uint64_t v39;
  uint64_t v40;

  v6 = objc_msgSend(a1, sel_identifier);
  v7 = sub_1BA2C2150();
  v39 = v8;
  v40 = v7;

  v38 = objc_msgSend(a1, sel_contentProvider);
  v37 = objc_msgSend(a1, sel_isWhitelisted);
  v9 = objc_msgSend(a2, sel_primaryAudience);
  if (v9)
  {
    v10 = v9;
    v33 = sub_1BA2C2150();
    v35 = v11;

  }
  else
  {
    v33 = 0x4C4152454E4547;
    v35 = 0xE700000000000000;
  }
  v12 = objc_msgSend(a1, sel_iAdKeywords, v33, v35);
  if (v12)
  {
    v13 = v12;
    sub_1BA2C227C();

  }
  v14 = objc_msgSend(a2, sel_iAdKeywords);
  if (v14)
  {
    v15 = v14;
    v16 = sub_1BA2C227C();

  }
  else
  {
    v16 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BA227378(v16);
  sub_1BA234914();
  sub_1BA226F18();
  v17 = sub_1BA2C21E0();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(a1, sel_iAdCategories);
  if (v18)
  {
    v19 = v18;
    sub_1BA2C227C();

  }
  v20 = objc_msgSend(a2, sel_iAdCategories);
  if (v20)
  {
    v21 = v20;
    v22 = sub_1BA2C227C();

  }
  else
  {
    v22 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BA227378(v22);
  v23 = sub_1BA2C21E0();
  swift_bridgeObjectRelease();
  v24 = objc_msgSend(a2, sel_language);
  if (v24)
  {
    v25 = v24;
    v26 = sub_1BA2C2150();
    v28 = v27;

  }
  else
  {
    v26 = 0;
    v28 = 0;
  }
  v29 = objc_msgSend(a1, sel_adTargetingKeywords);
  if (v29)
  {
    v30 = v29;
    v31 = sub_1BA2C227C();

    swift_unknownObjectRelease();
    result = swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    result = swift_unknownObjectRelease();
    v31 = 0;
  }
  *(_QWORD *)a3 = v40;
  *(_QWORD *)(a3 + 8) = v39;
  *(_QWORD *)(a3 + 16) = v38;
  *(_BYTE *)(a3 + 24) = v37;
  *(_QWORD *)(a3 + 32) = v34;
  *(_QWORD *)(a3 + 40) = v36;
  *(_QWORD *)(a3 + 48) = v17;
  *(_QWORD *)(a3 + 56) = v23;
  *(_QWORD *)(a3 + 64) = v26;
  *(_QWORD *)(a3 + 72) = v28;
  *(_QWORD *)(a3 + 80) = v31;
  return result;
}

uint64_t FeedAdData.init(tag:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = objc_msgSend(a1, sel_identifier);
  v5 = sub_1BA2C2150();
  v27 = v6;
  v29 = v5;

  v7 = objc_msgSend(a1, sel_primaryAudience);
  if (v7)
  {
    v8 = v7;
    v9 = sub_1BA2C2150();
    v11 = v10;

  }
  else
  {
    v11 = 0xE700000000000000;
    v9 = 0x4C4152454E4547;
  }
  v12 = objc_msgSend(a1, sel_iAdKeywords, v27, v29);
  if (v12)
  {
    v13 = v12;
    v14 = sub_1BA2C227C();

  }
  else
  {
    v14 = MEMORY[0x1E0DEE9D8];
  }
  v15 = objc_msgSend(a1, sel_iAdCategories);
  if (v15)
  {
    v16 = v15;
    v17 = sub_1BA2C227C();

  }
  else
  {
    v17 = MEMORY[0x1E0DEE9D8];
  }
  v18 = objc_msgSend(a1, sel_language);
  if (v18)
  {
    v19 = v18;
    v20 = sub_1BA2C2150();
    v22 = v21;

  }
  else
  {
    v20 = 0;
    v22 = 0;
  }
  v23 = objc_msgSend(a1, sel_adTargetingKeywords);
  if (v23)
  {
    v24 = v23;
    v25 = sub_1BA2C227C();

    result = swift_unknownObjectRelease();
  }
  else
  {
    result = swift_unknownObjectRelease();
    v25 = 0;
  }
  *(_QWORD *)a2 = v30;
  *(_QWORD *)(a2 + 8) = v28;
  *(_QWORD *)(a2 + 16) = 1;
  *(_BYTE *)(a2 + 24) = 1;
  *(_QWORD *)(a2 + 32) = v9;
  *(_QWORD *)(a2 + 40) = v11;
  *(_QWORD *)(a2 + 48) = v14;
  *(_QWORD *)(a2 + 56) = v17;
  *(_QWORD *)(a2 + 64) = v20;
  *(_QWORD *)(a2 + 72) = v22;
  *(_QWORD *)(a2 + 80) = v25;
  return result;
}

uint64_t sub_1BA2423FC(unint64_t a1)
{
  return sub_1BA23124C(a1, sub_1BA242408);
}

uint64_t sub_1BA242408(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  unint64_t i;
  uint64_t (*v11)();
  id *v12;
  id v13;
  void (*v14[4])(id *);

  v5 = result;
  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BA2C2594();
    result = swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      v8 = sub_1BA2C2594();
      result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          v9 = (void (*)(uint64_t))MEMORY[0x1E0D81AD0];
          sub_1BA242F08(0, &qword_1EF27EA30, (void (*)(uint64_t))MEMORY[0x1E0D81AD0]);
          sub_1BA242EC8(&qword_1EF27EA38, &qword_1EF27EA30, v9);
          swift_bridgeObjectRetain();
          for (i = 0; i != v7; ++i)
          {
            v11 = sub_1BA265EE4(v14, i, a3);
            v13 = *v12;
            ((void (*)(void (**)(id *), _QWORD))v11)(v14, 0);
            *(_QWORD *)(v5 + 8 * i) = v13;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        sub_1BA2C19E8();
        swift_arrayInitWithCopy();
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t _s7NewsAds10FeedAdDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t result;
  char v17;
  char v18;
  char v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD **)(a1 + 48);
  v6 = *(_QWORD **)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v9 = *(_QWORD *)(a1 + 72);
  v10 = *(_QWORD **)(a1 + 80);
  v11 = *(_QWORD *)(a2 + 16);
  v12 = *(unsigned __int8 *)(a2 + 24);
  v13 = *(_QWORD *)(a2 + 32);
  v14 = *(_QWORD *)(a2 + 40);
  v15 = *(_QWORD **)(a2 + 48);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
  {
    result = 0;
    if (v2 != v11)
      return result;
    v26 = *(_QWORD **)(a2 + 56);
    v27 = v6;
    v22 = *(_QWORD *)(a2 + 64);
    v23 = v8;
    v24 = *(_QWORD *)(a2 + 72);
    v25 = v9;
    v20 = *(_QWORD **)(a2 + 80);
    v21 = v10;
  }
  else
  {
    v26 = *(_QWORD **)(a2 + 56);
    v27 = *(_QWORD **)(a1 + 56);
    v22 = *(_QWORD *)(a2 + 64);
    v23 = *(_QWORD *)(a1 + 64);
    v24 = *(_QWORD *)(a2 + 72);
    v25 = *(_QWORD *)(a1 + 72);
    v20 = *(_QWORD **)(a2 + 80);
    v21 = *(_QWORD **)(a1 + 80);
    v17 = sub_1BA2C26A8();
    result = 0;
    if ((v17 & 1) == 0 || v2 != v11)
      return result;
  }
  if (((v3 ^ v12) & 1) == 0)
  {
    if (v4 == v13 && v5 == v14 || (v18 = sub_1BA2C26A8(), result = 0, (v18 & 1) != 0))
    {
      if ((sub_1BA241414(v7, v15) & 1) == 0 || (sub_1BA241414(v27, v26) & 1) == 0)
        return 0;
      if (v25)
      {
        if (!v24)
          return 0;
        if (v23 != v22 || v25 != v24)
        {
          v19 = sub_1BA2C26A8();
          result = 0;
          if ((v19 & 1) == 0)
            return result;
        }
      }
      else if (v24)
      {
        return 0;
      }
      if (v21)
      {
        if (v20 && (sub_1BA241414(v21, v20) & 1) != 0)
          return 1;
      }
      else if (!v20)
      {
        return 1;
      }
      return 0;
    }
  }
  return result;
}

unint64_t sub_1BA242768()
{
  unint64_t result;

  result = qword_1EF27E9F8;
  if (!qword_1EF27E9F8)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C44CC, &type metadata for FeedAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27E9F8);
  }
  return result;
}

void sub_1BA2427AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA242768();
    v7 = a3(a1, &type metadata for FeedAdData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t assignWithCopy for FeedAdData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FeedAdData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t storeEnumTagSinglePayload for FeedAdData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1BA2429CC + 4 * byte_1BA2C4341[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1BA242A00 + 4 * byte_1BA2C433C[v4]))();
}

uint64_t sub_1BA242A00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA242A08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA242A10);
  return result;
}

uint64_t sub_1BA242A1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA242A24);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1BA242A28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA242A30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedAdData.CodingKeys()
{
  return &type metadata for FeedAdData.CodingKeys;
}

unint64_t sub_1BA242A50()
{
  unint64_t result;

  result = qword_1EF27EA08;
  if (!qword_1EF27EA08)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C44A4, &type metadata for FeedAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27EA08);
  }
  return result;
}

unint64_t sub_1BA242A98()
{
  unint64_t result;

  result = qword_1EF27EA10;
  if (!qword_1EF27EA10)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C4414, &type metadata for FeedAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27EA10);
  }
  return result;
}

unint64_t sub_1BA242AE0()
{
  unint64_t result;

  result = qword_1EF27EA18;
  if (!qword_1EF27EA18)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C443C, &type metadata for FeedAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27EA18);
  }
  return result;
}

uint64_t sub_1BA242B24(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BA2CE080 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C65746968577369 && a2 == 0xED00006465747369 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x417972616D697270 && a2 == 0xEF65636E65696475 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726F7779654B6461 && a2 == 0xEA00000000007364 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F67657461436461 && a2 == 0xEC00000073656972 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x65676175676E616CLL && a2 == 0xE800000000000000 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BA2CE0A0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1BA2C26A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_1BA242EC8(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BA242F08(255, a2, a3);
    result = MEMORY[0x1BCCD93D0](MEMORY[0x1E0DEAF50], v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BA242F08(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BA2C22F4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t dispatch thunk of AdSegmentProviderType.needsUpdate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AdSegmentProviderType.segmentValues()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t Assembly.assemblies.getter()
{
  return swift_bridgeObjectRetain();
}

id Assembly.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id Assembly.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t static Commands.DebugAds.presentDebugger.getter()
{
  if (qword_1ED5B2E60 != -1)
    swift_once();
  return swift_retain();
}

uint64_t static ContextMenuItem.debugAd(_:)(__int128 *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t ObjCClassFromMetadata;
  void *v11;
  id v12;
  void *v13;
  id v14;
  _OWORD v16[9];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  v2 = sub_1BA2C1F10();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1[7];
  v23 = a1[6];
  v24 = v6;
  v25 = a1[8];
  v7 = a1[3];
  v19 = a1[2];
  v20 = v7;
  v8 = a1[5];
  v21 = a1[4];
  v22 = v8;
  v9 = a1[1];
  v17 = *a1;
  v18 = v9;
  if (qword_1ED5B2E60 != -1)
    swift_once();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v11 = (void *)objc_opt_self();
  swift_retain();
  sub_1BA243268((uint64_t)&v17);
  v12 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BA2C1370();

  v13 = (void *)sub_1BA2C212C();
  v14 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v13);

  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB8530], v2);
  v16[6] = v23;
  v16[7] = v24;
  v16[8] = v25;
  v16[2] = v19;
  v16[3] = v20;
  v16[4] = v21;
  v16[5] = v22;
  v16[0] = v17;
  v16[1] = v18;
  swift_allocObject();
  return sub_1BA2C1ED4();
}

uint64_t sub_1BA243268(uint64_t a1)
{
  unint64_t v2;

  v2 = *(_QWORD *)(a1 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA22C6F4(v2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

ValueMetadata *type metadata accessor for Commands.DebugAds()
{
  return &type metadata for Commands.DebugAds;
}

double BannerAdLayout.size.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double BannerAdLayout.topPadding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double BannerAdLayout.bottomPadding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void BannerAdLayout.init(size:topPadding:bottomPadding:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  a1[3] = a5;
}

ValueMetadata *type metadata accessor for BannerAdLayout()
{
  return &type metadata for BannerAdLayout;
}

uint64_t FeedBannerAdProviderFactory.createAdProvider<A, B>(for:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BA243468(a2);
}

uint64_t sub_1BA243398(_QWORD *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA243568();
  return sub_1BA2C1730();
}

uint64_t FeedBannerAdProviderFactory.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t FeedBannerAdProviderFactory.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1BA24342C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1BA243468(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1BA243468(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  __int128 v6[2];

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  type metadata accessor for FeedBannerAdProvider();
  sub_1BA22068C(a1, (uint64_t)v6);
  v3 = swift_allocObject();
  sub_1BA21D3D4(v6, v3 + 16);
  v4 = sub_1BA2C1754();
  result = swift_release();
  if (v4)
    return v4;
  __break(1u);
  return result;
}

_UNKNOWN **sub_1BA243524()
{
  return &protocol witness table for FeedBannerAdProvider;
}

uint64_t method lookup function for FeedBannerAdProviderFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BA24353C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1BA243560(_QWORD *a1)
{
  return sub_1BA243398(a1);
}

unint64_t sub_1BA243568()
{
  unint64_t result;

  result = qword_1ED5B27D8;
  if (!qword_1ED5B27D8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5B27D8);
  }
  return result;
}

uint64_t AdRequestManager.__allocating_init(contextBuilder:adManager:requestStore:journal:host:)(__int128 *a1, __int128 *a2, uint64_t a3, uint64_t a4, __int128 *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;

  v10 = swift_allocObject();
  v14 = *a5;
  v12 = *((_QWORD *)a5 + 2);
  v11 = *((_QWORD *)a5 + 3);
  sub_1BA21D3D4(a1, v10 + 16);
  sub_1BA21D3D4(a2, v10 + 56);
  *(_QWORD *)(v10 + 96) = a3;
  *(_QWORD *)(v10 + 104) = a4;
  *(_OWORD *)(v10 + 112) = v14;
  *(_QWORD *)(v10 + 128) = v12;
  *(_QWORD *)(v10 + 136) = v11;
  return v10;
}

void AdRequestManager.existingRequest(for:)()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 120) + 8))(*(_QWORD *)(*(_QWORD *)v0 + 96));
  AdRequestStore.request(for:behavior:)();
}

uint64_t sub_1BA2436A8()
{
  return swift_bridgeObjectRelease();
}

uint64_t AdRequestManager.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AdRequestManager.__deallocating_deinit()
{
  AdRequestManager.deinit();
  return swift_deallocClassInstance();
}

char *sub_1BA243730(char *a1, id *a2, uint64_t a3)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  char *v20;
  unsigned int v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void (*v30)(unint64_t, unint64_t, uint64_t);
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  unint64_t v37;

  v4 = a1;
  v6 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8 & 0xF8 | 7;
  v10 = *(_QWORD *)(v7 + 64) + 7;
  v11 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
  v12 = *(_QWORD *)(v5 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 64) + 7;
  v15 = (v14 + ((v11 + v13 + (((v8 & 0xF8) + 23) & ~v9)) & ~v13)) & 0xFFFFFFFFFFFFFFF8;
  if (((v15 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 <= 0x10)
    v16 = 16;
  else
    v16 = ((v15 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  v17 = (*(_DWORD *)(v12 + 80) | v8) & 0x100000;
  if ((v13 | v9) != 7 || v17 != 0 || (v16 | 1) > 0x18)
  {
    v20 = (char *)*a2;
    *(_QWORD *)a1 = *a2;
    v4 = &v20[((v13 | v9) + 16) & ~(v13 | v9)];
  }
  else
  {
    v21 = *((unsigned __int8 *)a2 + v16);
    if (v21 >= 2)
      v21 = *(_DWORD *)a2 + 2;
    if (v21 == 1)
    {
      v22 = (char *)*a2;
      v23 = (char *)*a2;
      v24 = (char *)a2[1];
      *(_QWORD *)v4 = v22;
      *((_QWORD *)v4 + 1) = v24;
      v4[v16] = 1;
    }
    else
    {
      v37 = v15 + 16;
      v25 = (char *)a2[1];
      *(_QWORD *)v4 = *a2;
      *((_QWORD *)v4 + 1) = v25;
      v26 = (unint64_t)&v4[v9 + 16] & ~v9;
      v27 = ((unint64_t)a2 + v9 + 16) & ~v9;
      v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
      v36 = v5;
      v34 = v6;
      swift_bridgeObjectRetain();
      v35(v26, v27, v34);
      *(_QWORD *)((v10 + v26) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v10 + v27) & 0xFFFFFFFFFFFFF8);
      v28 = (v26 + v11 + v13) & ~v13;
      v29 = (v27 + v11 + v13) & ~v13;
      v30 = *(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 16);
      swift_bridgeObjectRetain();
      v30(v28, v29, v36);
      v31 = (_QWORD *)((v14 + v28) & 0xFFFFFFFFFFFFFFF8);
      v32 = (_QWORD *)((v14 + v29) & 0xFFFFFFFFFFFFFFF8);
      *v31 = *v32;
      v31[1] = v32[1];
      *(_QWORD *)((unint64_t)&v4[v37 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v37 + 7) & 0xFFFFFFFFFFFFF8);
      v4[v16] = 0;
      swift_bridgeObjectRetain();
    }
  }
  swift_retain();
  return v4;
}

uint64_t sub_1BA243948(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v15;
  unsigned int v16;
  BOOL v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  unint64_t v23;
  unint64_t v24;
  void (*v25)(unint64_t, unint64_t, uint64_t);
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;

  if ((uint64_t *)a1 != a2)
  {
    v34 = *(_QWORD *)(a3 + 16);
    v5 = *(_QWORD *)(v34 - 8);
    v6 = *(_DWORD *)(v5 + 80) & 0xF8;
    v7 = v6 | 7;
    v32 = *(_QWORD *)(v5 + 64) + 7;
    v36 = *(_QWORD *)(a3 + 24);
    v8 = *(_QWORD *)(v36 - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v33 = (v32 & 0xFFFFFFFFFFFFFFF8) + 8;
    v31 = v8;
    v35 = *(_QWORD *)(v8 + 64) + 7;
    v10 = (v35 + ((v33 + v9 + ((v6 + 23) & ~(v6 | 7))) & ~v9)) & 0xFFFFFFFFFFFFFFF8;
    v11 = 16;
    if (((v10 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x10)
      v11 = ((v10 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    v12 = *(unsigned __int8 *)(a1 + v11);
    v37 = v11;
    v13 = v11 & 0xFFFFFFF8;
    if (v12 >= 2 && v13 != 0)
      v12 = *(_DWORD *)a1 + 2;
    v29 = ~v7;
    v30 = v10 + 16;
    if (v12 == 1)
    {
      v15 = ~v9;

    }
    else
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))((a1 + v7 + 16) & ~v7, v34);
      swift_bridgeObjectRelease();
      v15 = ~v9;
      (*(void (**)(unint64_t, uint64_t))(v31 + 8))((((a1 + v7 + 16) & ~v7) + v33 + v9) & ~v9, v36);
      swift_bridgeObjectRelease();
    }
    swift_release();
    v16 = *((unsigned __int8 *)a2 + v37);
    if (v13)
      v17 = v16 >= 2;
    else
      v17 = 0;
    if (v17)
      v16 = *(_DWORD *)a2 + 2;
    if (v16 == 1)
    {
      v18 = *a2;
      v19 = (id)*a2;
      *(_QWORD *)a1 = v18;
      *(_QWORD *)(a1 + 8) = a2[1];
      *(_BYTE *)(a1 + v37) = 1;
    }
    else
    {
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = a2[1];
      v20 = (a1 + v7 + 16) & v29;
      v21 = ((unint64_t)a2 + v7 + 16) & v29;
      v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
      swift_bridgeObjectRetain();
      v22(v20, v21, v34);
      *(_QWORD *)((v32 + v20) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v32 + v21) & 0xFFFFFFFFFFFFF8);
      v23 = (v20 + v33 + v9) & v15;
      v24 = (v21 + v33 + v9) & v15;
      v25 = *(void (**)(unint64_t, unint64_t, uint64_t))(v31 + 16);
      swift_bridgeObjectRetain();
      v25(v23, v24, v36);
      v26 = (_QWORD *)((v35 + v23) & 0xFFFFFFFFFFFFFFF8);
      v27 = (_QWORD *)((v35 + v24) & 0xFFFFFFFFFFFFFFF8);
      *v26 = *v27;
      v26[1] = v27[1];
      *(_QWORD *)((a1 + v30 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v30 + 7) & 0xFFFFFFFFFFFFF8);
      *(_BYTE *)(a1 + v37) = 0;
      swift_bridgeObjectRetain();
    }
    swift_retain();
  }
  return a1;
}

_OWORD *sub_1BA243C2C(_OWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unsigned int v16;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  unint64_t v25;

  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 80) & 0xF8;
  v8 = v7 | 7;
  v9 = *(_QWORD *)(v6 + 64) + 7;
  v10 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
  v11 = *(_QWORD *)(v5 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64) + 7;
  v14 = (v13 + ((v10 + v12 + ((v7 + 23) & ~(v7 | 7))) & ~v12)) & 0xFFFFFFFFFFFFFFF8;
  if (((v14 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 <= 0x10)
    v15 = 16;
  else
    v15 = ((v14 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  v16 = *((unsigned __int8 *)a2 + v15);
  if (v16 >= 2 && (v15 & 0xFFFFFFF8) != 0)
    v16 = *a2 + 2;
  *a1 = *(_OWORD *)a2;
  if (v16 == 1)
  {
    v18 = 1;
  }
  else
  {
    v25 = v14 + 16;
    v19 = ((unint64_t)a1 + v8 + 16) & ~v8;
    v20 = ((unint64_t)a2 + v8 + 16) & ~v8;
    v24 = v5;
    (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v19, v20);
    *(_QWORD *)((v9 + v19) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v9 + v20) & 0xFFFFFFFFFFFFF8);
    v21 = (v19 + v10 + v12) & ~v12;
    v22 = (v20 + v10 + v12) & ~v12;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 32))(v21, v22, v24);
    v18 = 0;
    *(_OWORD *)((v13 + v21) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v13 + v22) & 0xFFFFFFFFFFFFF8);
    *(_QWORD *)(((unint64_t)a1 + v25 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v25 + 7) & 0xFFFFFFFFFFFFF8);
  }
  *((_BYTE *)a1 + v15) = v18;
  return a1;
}

id *sub_1BA243DDC(id *a1, id *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unsigned int v12;
  unint64_t v14;
  unint64_t v15;
  unsigned int v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (a1 != a2)
  {
    v28 = *(_QWORD *)(a3 + 16);
    v5 = *(_QWORD *)(v28 - 8);
    v6 = *(_DWORD *)(v5 + 80) & 0xF8;
    v7 = v6 | 7;
    v24 = v5;
    v26 = *(_QWORD *)(v5 + 64) + 7;
    v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v27 = (v26 & 0xFFFFFFFFFFFFFFF8) + 8;
    v29 = *(_QWORD *)(v8 + 64) + 7;
    v30 = *(_QWORD *)(a3 + 24);
    v10 = (v29 + ((v27 + v9 + ((v6 + 23) & ~(v6 | 7))) & ~v9)) & 0xFFFFFFFFFFFFFFF8;
    if (((v10 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 <= 0x10)
      v11 = 16;
    else
      v11 = ((v10 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    v12 = *((unsigned __int8 *)a1 + v11);
    if (v12 >= 2 && (v11 & 0xFFFFFFF8) != 0)
      v12 = *(_DWORD *)a1 + 2;
    v14 = v10 + 16;
    v22 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
    v23 = ~v7;
    v25 = ~v9;
    if (v12 == 1)
    {
      v15 = v10 + 16;

    }
    else
    {
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v24 + 8))(((unint64_t)a1 + v7 + 16) & ~v7, v28);
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v8 + 8))(((((unint64_t)a1 + v7 + 16) & ~v7) + v27 + v9) & ~v9, v30);
      swift_bridgeObjectRelease();
      v15 = v14;
    }
    swift_release();
    v16 = *((unsigned __int8 *)a2 + v11);
    if ((v11 & 0xFFFFFFF8) != 0 && v16 >= 2)
      v16 = *(_DWORD *)a2 + 2;
    *(_OWORD *)a1 = *(_OWORD *)a2;
    if (v16 != 1)
    {
      v18 = ((unint64_t)a1 + v7 + 16) & v23;
      v19 = ((unint64_t)a2 + v7 + 16) & v23;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v18, v19, v28);
      *(_QWORD *)((v26 + v18) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v26 + v19) & 0xFFFFFFFFFFFFF8);
      v20 = (v18 + v27 + v9) & v25;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v22 + 32))(v20, (v19 + v27 + v9) & v25, v30);
      LOBYTE(v16) = 0;
      *(_OWORD *)((v29 + v20) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v29 + ((v19 + v27 + v9) & v25)) & 0xFFFFFFFFFFFFF8);
      *(_QWORD *)(((unint64_t)a1 + v15 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v15 + 7) & 0xFFFFFFFFFFFFF8);
    }
    *((_BYTE *)a1 + v11) = v16;
  }
  return a1;
}

uint64_t sub_1BA244070(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  __int16 v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  unsigned int v8;
  int v9;
  int v11;
  int v12;
  unsigned int v13;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v4 = *(_DWORD *)(v3 + 80) & 0xF8;
  v5 = ((((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64)
         + ((((*(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8)
           + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 80)
           + ((unsigned __int16)(v4 + 23) & (unsigned __int16)~v4 & 0x1F8)
           + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 80))
         + 7) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  if (v5 <= 0x10)
    v5 = 16;
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_20;
  v6 = v5 | 1;
  v7 = 8 * (v5 | 1);
  if ((v5 | 1) <= 3)
  {
    v8 = (a2 + ~(-1 << v7) - 254) >> v7;
    if (v8 > 0xFFFE)
    {
      v9 = *(_DWORD *)&a1[v6];
      if (!v9)
        goto LABEL_20;
      goto LABEL_13;
    }
    if (v8 > 0xFE)
    {
      v9 = *(unsigned __int16 *)&a1[v6];
      if (!*(_WORD *)&a1[v6])
        goto LABEL_20;
      goto LABEL_13;
    }
    if (!v8)
      goto LABEL_20;
  }
  v9 = a1[v6];
  if (!a1[v6])
  {
LABEL_20:
    v13 = a1[v5];
    if (v13 >= 2)
      return (v13 ^ 0xFF) + 1;
    else
      return 0;
  }
LABEL_13:
  v11 = (v9 - 1) << v7;
  if (v6 >= 4)
    v11 = 0;
  if ((_DWORD)v6 == 1)
    v12 = *a1;
  else
    v12 = *(_DWORD *)a1;
  return (v12 | v11) + 255;
}

void sub_1BA24418C(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  __int16 v6;
  unint64_t v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_DWORD *)(v5 + 80) & 0xF8;
  v7 = ((((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 64)
         + ((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8)
           + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 80)
           + ((unsigned __int16)(v6 + 23) & (unsigned __int16)~v6 & 0x1F8)
           + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 80))
         + 7) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  if (v7 <= 0x10)
    v7 = 16;
  v8 = v7 | 1;
  if (a3 < 0xFF)
  {
    v9 = 0u;
  }
  else if (v8 <= 3)
  {
    v11 = (a3 + ~(-1 << (8 * v8)) - 254) >> (8 * v8);
    if (v11 > 0xFFFE)
    {
      v9 = 4u;
    }
    else if (v11 >= 0xFF)
    {
      v9 = 2;
    }
    else
    {
      v9 = v11 != 0;
    }
  }
  else
  {
    v9 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v10 = a2 - 255;
  if (v8 < 4)
  {
    v10 &= ~(-1 << (8 * v8));
    bzero(a1, v8);
    if ((_DWORD)v8 == 1)
    {
      *a1 = v10;
      goto LABEL_18;
    }
  }
  else
  {
    bzero(a1, v7 | 1);
  }
  *(_DWORD *)a1 = v10;
LABEL_18:
  __asm { BR              X10 }
}

uint64_t sub_1BA244364(_DWORD *a1, uint64_t a2)
{
  uint64_t v2;
  __int16 v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_DWORD *)(v2 + 80) & 0xF8;
  v4 = ((((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 64)
         + ((((*(_QWORD *)(v2 + 64) + 7) & 0xFFFFFFFFFFFFFFF8)
           + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)
           + ((unsigned __int16)(v3 + 23) & (unsigned __int16)~v3 & 0x1F8)
           + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80))
         + 7) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  v5 = 16;
  if (v4 > 0x10)
    v5 = v4;
  v6 = *((unsigned __int8 *)a1 + v5);
  v7 = v5 & 0xFFFFFFF8;
  if (v6 >= 2 && v7 != 0)
    return (*a1 + 2);
  return v6;
}

void sub_1BA2443F0(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80) & 0xF8 | 7;
  v6 = ((((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64)
         + 7
         + ((((*(_QWORD *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8)
           + 8
           + ((v5 + 16) & ~v5)
           + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 80))) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  if (a2 > 1)
  {
    if (v6 <= 0x10)
      v6 = 16;
    if ((_DWORD)v6)
      v7 = 2;
    else
      v7 = a2;
    if ((_DWORD)v6)
      v8 = a2 - 2;
    else
      v8 = 0;
    a1[v6] = v7;
    bzero(a1, v6);
    *(_DWORD *)a1 = v8;
  }
  else
  {
    if (v6 <= 0x10)
      v6 = 16;
    a1[v6] = a2;
  }
}

uint64_t method lookup function for AdRequestManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AdRequestManager.__allocating_init(contextBuilder:adManager:requestStore:journal:host:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

void FeedPrerollAdContext.appData.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t FeedPrerollAdContext.userData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t FeedPrerollAdContext.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_BYTE *)(v1 + 32);
  v4 = *(_BYTE *)(v1 + 33);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 48);
  v7 = *(_QWORD *)(v1 + 56);
  v8 = *(_QWORD *)(v1 + 64);
  v10 = *(_QWORD *)(v1 + 72);
  v9 = *(_QWORD *)(v1 + 80);
  v11 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 17) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FeedPrerollAdContext.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(v1 + 96);
  v2 = *(_QWORD *)(v1 + 104);
  v4 = *(_BYTE *)(v1 + 112);
  v5 = *(_QWORD *)(v1 + 120);
  v6 = *(_QWORD *)(v1 + 128);
  v7 = *(_QWORD *)(v1 + 136);
  v8 = *(_QWORD *)(v1 + 144);
  v9 = *(_QWORD *)(v1 + 152);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double FeedPrerollAdContext.videoData.getter@<D0>(double *a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + 160);
  *a1 = result;
  return result;
}

void FeedPrerollAdContext.placementData.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 168);
}

uint64_t FeedPrerollAdContext.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v1 + 184);
  v3 = *(_QWORD *)(v1 + 192);
  v4 = *(_QWORD *)(v1 + 200);
  v5 = *(_QWORD *)(v1 + 208);
  v6 = *(_QWORD *)(v1 + 232);
  v7 = *(_QWORD *)(v1 + 240);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 176);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 216);
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FeedPrerollAdContext.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD *)(v1 + 248);
  v3 = *(_QWORD *)(v1 + 256);
  v4 = v1 + 248;
  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_BYTE *)(v4 + 24);
  v7 = *(_QWORD *)(v4 + 32);
  v8 = *(_QWORD *)(v4 + 40);
  v9 = *(_QWORD *)(v4 + 48);
  v10 = *(_QWORD *)(v4 + 56);
  v11 = *(_QWORD *)(v4 + 64);
  v12 = *(_QWORD *)(v4 + 72);
  v13 = *(_QWORD *)(v4 + 80);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v12;
  *(_QWORD *)(a1 + 80) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FeedPrerollAdContext.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int16 v3;

  v2 = *(_QWORD *)(v1 + 344);
  v3 = *(_WORD *)(v1 + 352);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 336);
  *(_QWORD *)(a1 + 8) = v2;
  *(_WORD *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t FeedPrerollAdContext.sectionData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 368);
  *a1 = *(_QWORD *)(v1 + 360);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void FeedPrerollAdContext.referralData.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 376);
}

uint64_t FeedPrerollAdContext.init(provider:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  __int16 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  void *__dst;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD __src[48];
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  _BYTE v95[7];
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  _BYTE v103[7];
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  _BYTE v117[7];
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  __int16 v127;
  int v128;
  __int16 v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  char v133;
  int v134;
  __int16 v135;
  _BYTE v136[7];
  _BYTE v137[7];
  _BYTE v138[11];
  __int16 v139;
  _DWORD v140[3];

  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  AdContextDataProviding.data<A>(for:)((uint64_t)&type metadata for AppAdData, v5, (uint64_t)&type metadata for AppAdData, v6);
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v76;
  }
  else
  {
    v7 = a1[3];
    v8 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v7);
    AdContextDataProviding.data<A>(for:)((uint64_t)&type metadata for UserAdData, v7, (uint64_t)&type metadata for UserAdData, v8);
    v9 = a1[3];
    v10 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v9);
    swift_bridgeObjectRetain();
    AdContextDataProviding.data<A>(for:)((uint64_t)&type metadata for ArticleAdData, v9, (uint64_t)&type metadata for ArticleAdData, v10);
    v73 = v80;
    v51 = v80;
    v50 = v80;
    v48 = BYTE1(v82);
    v49 = v82;
    v47 = v83;
    __dst = a2;
    v46 = v88;
    v11 = a1[3];
    v77 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v11);
    swift_bridgeObjectRetain();
    v72 = v81;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    AdContextDataProviding.data<A>(for:)((uint64_t)&type metadata for ChannelAdData, v11, (uint64_t)&type metadata for ChannelAdData, v77);
    v69 = v84;
    v70 = v89;
    v67 = v87;
    v68 = v85;
    v71 = v86;
    v44 = v80;
    v43 = v82;
    v42 = v83;
    v12 = a1[3];
    v13 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    AdContextDataProviding.data<A>(for:)((uint64_t)&type metadata for VideoAdData, v12, (uint64_t)&type metadata for VideoAdData, v13);
    v65 = v84;
    v66 = v87;
    v64 = v86;
    v41 = v85;
    v14 = v81;
    v15 = v80;
    v16 = a1[3];
    v17 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v16);
    AdContextDataProviding.data<A>(for:)((uint64_t)&type metadata for PlacementAdData, v16, (uint64_t)&type metadata for PlacementAdData, v17);
    v18 = a1[3];
    v19 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v18);
    AdContextDataProviding.data<A>(for:)((uint64_t)&type metadata for FeedAdData, v18, (uint64_t)&type metadata for FeedAdData, v19);
    v39 = v80;
    v35 = v82;
    v36 = v80;
    v34 = v83;
    v63 = v85;
    v37 = v88;
    v38 = v84;
    v20 = a1[3];
    v60 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v20);
    v62 = v90;
    swift_bridgeObjectRetain();
    v40 = v81;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    AdContextDataProviding.data<A>(for:)((uint64_t)&type metadata for FeedGroupAdData, v20, (uint64_t)&type metadata for FeedGroupAdData, v60);
    v75 = v86;
    v78 = v87;
    v74 = v89;
    v59 = v83;
    v61 = v82;
    v32 = v85;
    v33 = v80;
    v31 = v86;
    v21 = a1[3];
    v53 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v21);
    v57 = v87;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v58 = v81;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    AdContextDataProviding.dataIfPresent<A>(for:)((uint64_t)&type metadata for IssueAdData, v21, (uint64_t)&type metadata for IssueAdData, v53);
    v55 = v88;
    v56 = v84;
    v22 = v80;
    v23 = a1[3];
    v24 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v23);
    swift_bridgeObjectRetain();
    AdContextDataProviding.dataIfPresent<A>(for:)((uint64_t)&type metadata for SectionAdData, v23, (uint64_t)&type metadata for SectionAdData, v24);
    v54 = v81;
    v30 = v82;
    v25 = v80;
    v26 = a1[3];
    v27 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v26);
    v52 = v81;
    swift_bridgeObjectRetain();
    AdContextDataProviding.dataIfPresent<A>(for:)((uint64_t)&type metadata for ReferralAdData, v26, (uint64_t)&type metadata for ReferralAdData, v27);
    v29 = v133;
    LOBYTE(__src[0]) = v80;
    __src[1] = v80;
    __src[2] = v80;
    __src[3] = v81;
    LOWORD(__src[4]) = v82;
    __src[5] = v83;
    __src[6] = v84;
    __src[7] = v85;
    __src[8] = v86;
    __src[9] = v87;
    __src[10] = v88;
    __src[11] = v89;
    __src[12] = v80;
    __src[13] = v81;
    LOBYTE(__src[14]) = v82;
    __src[15] = v83;
    __src[16] = v84;
    __src[17] = v85;
    __src[18] = v86;
    __src[19] = v87;
    __src[20] = v80;
    LOBYTE(__src[21]) = v80;
    __src[22] = v80;
    __src[23] = v81;
    __src[24] = v82;
    __src[25] = v83;
    __src[26] = v84;
    __src[27] = v85;
    __src[28] = v86;
    __src[29] = v87;
    __src[30] = v88;
    __src[31] = v80;
    __src[32] = v81;
    __src[33] = v82;
    LOBYTE(__src[34]) = v83;
    __src[35] = v84;
    __src[36] = v85;
    __src[37] = v86;
    __src[38] = v87;
    __src[39] = v88;
    __src[40] = v89;
    __src[41] = v90;
    __src[42] = v80;
    __src[43] = v81;
    LOWORD(__src[44]) = v82;
    __src[45] = v80;
    __src[46] = v81;
    LOBYTE(__src[47]) = v133;
    sub_1BA24565C((uint64_t)__src);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    memcpy(__dst, __src, 0x179uLL);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    LOBYTE(v80) = v51;
    v81 = v73;
    v82 = v50;
    v83 = v72;
    LOBYTE(v84) = v49;
    BYTE1(v84) = v48;
    v85 = v47;
    v86 = v69;
    v87 = v68;
    v88 = v71;
    v89 = v67;
    v90 = v46;
    v91 = v70;
    v92 = v44;
    v93 = v14;
    v94 = v43;
    v96 = v42;
    v97 = v65;
    v98 = v41;
    v99 = v64;
    *(_DWORD *)((char *)&v80 + 1) = v140[0];
    HIDWORD(v80) = *(_DWORD *)((char *)v140 + 3);
    *(_DWORD *)((char *)&v84 + 2) = *(_DWORD *)&v138[7];
    HIWORD(v84) = v139;
    *(_DWORD *)v95 = *(_DWORD *)v138;
    *(_DWORD *)&v95[3] = *(_DWORD *)&v138[3];
    v100 = v66;
    v101 = v15;
    v102 = v39;
    *(_DWORD *)v103 = *(_DWORD *)v137;
    *(_DWORD *)&v103[3] = *(_DWORD *)&v137[3];
    v104 = v33;
    v105 = v58;
    v106 = v61;
    v107 = v59;
    v108 = v56;
    v109 = v32;
    v110 = v31;
    v111 = v57;
    v112 = v55;
    v113 = v36;
    v114 = v40;
    v115 = v35;
    v116 = v34;
    *(_DWORD *)v117 = *(_DWORD *)v136;
    *(_DWORD *)&v117[3] = *(_DWORD *)&v136[3];
    v118 = v38;
    v119 = v63;
    v120 = v75;
    v121 = v78;
    v122 = v37;
    v123 = v74;
    v124 = v62;
    v125 = v22;
    v126 = v54;
    v127 = v30;
    v128 = v134;
    v129 = v135;
    v130 = v25;
    v131 = v52;
    v132 = v29;
    return sub_1BA2457E4((uint64_t)&v80);
  }
}

uint64_t sub_1BA24565C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA2457E4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BA24596C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA2459A0 + 4 * byte_1BA2C4710[a1]))(0x61746144707061, 0xE700000000000000);
}

uint64_t sub_1BA2459A0()
{
  return 0x6174614472657375;
}

uint64_t sub_1BA245A54()
{
  return 0x6C61727265666572;
}

uint64_t sub_1BA245A90()
{
  unsigned __int8 *v0;

  return sub_1BA24596C(*v0);
}

uint64_t sub_1BA245A98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA247DA8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BA245ABC(_BYTE *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_1BA245AC8()
{
  sub_1BA2461B4();
  return sub_1BA2C275C();
}

uint64_t sub_1BA245AF0()
{
  sub_1BA2461B4();
  return sub_1BA2C2768();
}

uint64_t FeedPrerollAdContext.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  _BYTE v61[40];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;

  sub_1BA247340(0, &qword_1EF27EA48, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v20 - v6;
  v8 = *v1;
  v9 = *((_QWORD *)v1 + 1);
  v56 = *((_QWORD *)v1 + 2);
  v57 = v9;
  v55 = *((_QWORD *)v1 + 3);
  LODWORD(v9) = v1[32];
  v53 = v1[33];
  v54 = v9;
  v50 = *((_QWORD *)v1 + 5);
  v10 = *((_OWORD *)v1 + 3);
  v51 = *((_OWORD *)v1 + 4);
  v52 = v10;
  v49 = *((_QWORD *)v1 + 10);
  v48 = *((_QWORD *)v1 + 11);
  v41 = *((_QWORD *)v1 + 12);
  v42 = *((_QWORD *)v1 + 13);
  v43 = v1[112];
  v44 = *((_QWORD *)v1 + 15);
  v46 = *((_QWORD *)v1 + 16);
  v45 = *((_QWORD *)v1 + 17);
  v47 = *((_OWORD *)v1 + 9);
  v11 = *((_QWORD *)v1 + 20);
  v40 = v1[168];
  v34 = *((_QWORD *)v1 + 22);
  v39 = *(_OWORD *)(v1 + 184);
  v38 = *(_OWORD *)(v1 + 200);
  v35 = *(_OWORD *)(v1 + 216);
  v25 = *((_QWORD *)v1 + 31);
  v36 = *((_QWORD *)v1 + 29);
  v37 = *((_QWORD *)v1 + 30);
  v26 = *((_OWORD *)v1 + 16);
  v32 = v1[272];
  v31 = *((_QWORD *)v1 + 35);
  v33 = *((_OWORD *)v1 + 18);
  v30 = *((_QWORD *)v1 + 38);
  v29 = *((_QWORD *)v1 + 39);
  v28 = *((_QWORD *)v1 + 40);
  v27 = *((_QWORD *)v1 + 41);
  v22 = *((_QWORD *)v1 + 42);
  v23 = *((_QWORD *)v1 + 43);
  v24 = *((unsigned __int16 *)v1 + 176);
  v20 = *((_QWORD *)v1 + 45);
  v21 = *((_QWORD *)v1 + 46);
  v12 = v1[376];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA2461B4();
  v13 = v4;
  sub_1BA2C2750();
  LOBYTE(v59) = v8;
  v65 = 0;
  sub_1BA234CD4();
  v14 = v58;
  sub_1BA2C2684();
  if (!v14)
  {
    v15 = v53;
    v16 = v54;
    v17 = v55;
    v18 = v56;
    v59 = v57;
    v65 = 1;
    sub_1BA236AC4();
    sub_1BA2C2684();
    v59 = v18;
    *(_QWORD *)&v60 = v17;
    BYTE8(v60) = v16;
    BYTE9(v60) = v15;
    *(_QWORD *)v61 = v50;
    *(_OWORD *)&v61[8] = v52;
    *(_OWORD *)&v61[24] = v51;
    v62 = v49;
    v63 = v48;
    v65 = 2;
    sub_1BA240AE4();
    sub_1BA2C2684();
    v58 = v5;
    v59 = v41;
    *(_QWORD *)&v60 = v42;
    BYTE8(v60) = v43;
    *(_QWORD *)v61 = v44;
    *(_QWORD *)&v61[8] = v46;
    *(_QWORD *)&v61[16] = v45;
    *(_OWORD *)&v61[24] = v47;
    v65 = 3;
    sub_1BA2461F8();
    sub_1BA2C2684();
    v59 = v11;
    v65 = 4;
    sub_1BA238EE0();
    sub_1BA2C2684();
    LOBYTE(v59) = v40;
    v65 = 5;
    sub_1BA23D110();
    sub_1BA2C2684();
    v59 = v34;
    v60 = v39;
    *(_OWORD *)v61 = v38;
    *(_OWORD *)&v61[16] = v35;
    *(_QWORD *)&v61[32] = v36;
    v62 = v37;
    v65 = 6;
    sub_1BA23667C();
    sub_1BA2C2684();
    v59 = v25;
    v60 = v26;
    v61[0] = v32;
    *(_QWORD *)&v61[8] = v31;
    *(_OWORD *)&v61[16] = v33;
    *(_QWORD *)&v61[32] = v30;
    v62 = v29;
    v63 = v28;
    v64 = v27;
    v65 = 7;
    sub_1BA236B90();
    sub_1BA2C2684();
    v59 = v22;
    *(_QWORD *)&v60 = v23;
    WORD4(v60) = v24;
    v65 = 8;
    sub_1BA24623C();
    sub_1BA2C2648();
    v59 = v20;
    *(_QWORD *)&v60 = v21;
    v65 = 9;
    sub_1BA246280();
    sub_1BA2C2648();
    LOBYTE(v59) = v12;
    v65 = 10;
    sub_1BA23D154();
    sub_1BA2C2648();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v13);
}

unint64_t sub_1BA2461B4()
{
  unint64_t result;

  result = qword_1EF27EA50;
  if (!qword_1EF27EA50)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C48C8, &type metadata for FeedPrerollAdContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27EA50);
  }
  return result;
}

unint64_t sub_1BA2461F8()
{
  unint64_t result;

  result = qword_1ED5B12B0;
  if (!qword_1ED5B12B0)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for ChannelAdData, &type metadata for ChannelAdData);
    atomic_store(result, (unint64_t *)&qword_1ED5B12B0);
  }
  return result;
}

unint64_t sub_1BA24623C()
{
  unint64_t result;

  result = qword_1EF27EA58;
  if (!qword_1EF27EA58)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for IssueAdData, &type metadata for IssueAdData);
    atomic_store(result, (unint64_t *)&qword_1EF27EA58);
  }
  return result;
}

unint64_t sub_1BA246280()
{
  unint64_t result;

  result = qword_1EF27EA60;
  if (!qword_1EF27EA60)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for SectionAdData, &type metadata for SectionAdData);
    atomic_store(result, (unint64_t *)&qword_1EF27EA60);
  }
  return result;
}

uint64_t FeedPrerollAdContext.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  int v62;
  int v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD v91[48];
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  _BYTE v107[7];
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  _BYTE v115[7];
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  _BYTE v129[7];
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  __int16 v139;
  int v140;
  __int16 v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  char v145;
  unsigned __int8 v146;
  int v147;
  __int16 v148;
  _BYTE v149[7];
  _BYTE v150[7];
  _BYTE v151[11];
  __int16 v152;
  _DWORD v153[3];

  sub_1BA247340(0, &qword_1EF27EA68, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v40 - v8;
  v10 = a1[3];
  v90 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1BA2461B4();
  sub_1BA2C2744();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
    return v87;
  }
  else
  {
    v65 = a2;
    LOBYTE(v91[0]) = 0;
    sub_1BA234C90();
    sub_1BA2C2630();
    v11 = v92;
    LOBYTE(v91[0]) = 1;
    sub_1BA236A80();
    sub_1BA2C2630();
    v12 = v92;
    LOBYTE(v91[0]) = 2;
    sub_1BA240AA0();
    swift_bridgeObjectRetain();
    sub_1BA2C2630();
    v84 = v12;
    v64 = v92;
    v13 = v93;
    v62 = v94;
    v63 = v11;
    v61 = BYTE1(v94);
    v14 = v96;
    v82 = v98;
    v83 = v97;
    v15 = v99;
    v59 = v100;
    v60 = v95;
    v16 = v101;
    LOBYTE(v91[0]) = 3;
    sub_1BA24739C();
    v79 = v13;
    swift_bridgeObjectRetain();
    v80 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v81 = v16;
    swift_bridgeObjectRetain();
    sub_1BA2C2630();
    v78 = v15;
    v17 = v93;
    v57 = v94;
    v56 = v95;
    v18 = v96;
    v54 = v92;
    v55 = v97;
    v19 = v98;
    v20 = v99;
    LOBYTE(v91[0]) = 4;
    sub_1BA238E9C();
    v58 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA2C2630();
    v76 = v18;
    v77 = v20;
    v75 = v19;
    v21 = v58;
    v22 = v92;
    LOBYTE(v91[0]) = 5;
    sub_1BA23D610();
    sub_1BA2C2630();
    v53 = v92;
    LOBYTE(v91[0]) = 6;
    sub_1BA236638();
    sub_1BA2C2630();
    v23 = v93;
    v24 = v94;
    v25 = v95;
    v51 = v97;
    v52 = v92;
    v50 = v98;
    v72 = v96;
    v73 = v99;
    v74 = v100;
    LOBYTE(v91[0]) = 7;
    sub_1BA236B4C();
    v69 = v23;
    swift_bridgeObjectRetain();
    v70 = v24;
    swift_bridgeObjectRetain();
    v71 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA2C2630();
    v26 = v93;
    v46 = v94;
    v47 = v92;
    v45 = v95;
    v27 = v97;
    v28 = v98;
    v48 = v100;
    v49 = v96;
    v87 = v99;
    v88 = v101;
    v89 = v102;
    LOBYTE(v91[0]) = 8;
    sub_1BA2473E0();
    v68 = v26;
    swift_bridgeObjectRetain();
    v85 = v27;
    swift_bridgeObjectRetain();
    v86 = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA2C25F4();
    v29 = v92;
    v30 = v93;
    LODWORD(v26) = (unsigned __int16)v94;
    LOBYTE(v91[0]) = 9;
    sub_1BA247424();
    v67 = v30;
    swift_bridgeObjectRetain();
    sub_1BA2C25F4();
    v44 = v92;
    v31 = v93;
    v145 = 10;
    sub_1BA23D654();
    v66 = v31;
    swift_bridgeObjectRetain();
    sub_1BA2C25F4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v43 = v146;
    LOBYTE(v91[0]) = v63;
    v91[1] = v84;
    v91[2] = v64;
    v91[3] = v79;
    LOBYTE(v91[4]) = v62;
    BYTE1(v91[4]) = v61;
    v91[5] = v60;
    v91[6] = v80;
    v91[7] = v83;
    v91[8] = v82;
    v91[9] = v78;
    v91[10] = v59;
    v91[11] = v81;
    v91[12] = v54;
    v91[13] = v21;
    LOBYTE(v91[14]) = v57;
    v91[15] = v56;
    v91[16] = v76;
    v91[17] = v55;
    v91[18] = v75;
    v91[19] = v77;
    v91[20] = v22;
    LOBYTE(v91[21]) = v53;
    v91[22] = v52;
    v91[23] = v69;
    v91[24] = v70;
    v91[25] = v71;
    v91[26] = v72;
    v91[27] = v51;
    v91[28] = v50;
    v91[29] = v73;
    v91[30] = v74;
    v91[31] = v47;
    v91[32] = v68;
    v91[33] = v46;
    LOBYTE(v91[34]) = v45;
    v91[35] = v49;
    v91[36] = v85;
    v91[37] = v86;
    v91[38] = v87;
    v91[39] = v48;
    v91[40] = v88;
    v91[41] = v89;
    v42 = v29;
    v91[42] = v29;
    v91[43] = v67;
    v41 = v26;
    LOWORD(v91[44]) = v26;
    v91[45] = v44;
    v91[46] = v66;
    LOBYTE(v91[47]) = v146;
    sub_1BA24565C((uint64_t)v91);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v32 = v80;
    swift_bridgeObjectRelease();
    v33 = v79;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v34 = v75;
    swift_bridgeObjectRelease();
    v35 = v76;
    swift_bridgeObjectRelease();
    v36 = v58;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v37 = v68;
    swift_bridgeObjectRelease();
    v38 = v67;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    memcpy(v65, v91, 0x179uLL);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
    LOBYTE(v92) = v63;
    v93 = v84;
    v94 = v64;
    v95 = v33;
    LOBYTE(v96) = v62;
    BYTE1(v96) = v61;
    v97 = v60;
    v98 = v32;
    v99 = v83;
    v100 = v82;
    v101 = v78;
    v102 = v59;
    v103 = v81;
    v104 = v54;
    v105 = v36;
    v106 = v57;
    v108 = v56;
    v109 = v35;
    v110 = v55;
    v111 = v34;
    *(_DWORD *)((char *)&v92 + 1) = v153[0];
    HIDWORD(v92) = *(_DWORD *)((char *)v153 + 3);
    *(_DWORD *)((char *)&v96 + 2) = *(_DWORD *)&v151[7];
    HIWORD(v96) = v152;
    *(_DWORD *)v107 = *(_DWORD *)v151;
    *(_DWORD *)&v107[3] = *(_DWORD *)&v151[3];
    v112 = v77;
    v113 = v22;
    v114 = v53;
    *(_DWORD *)v115 = *(_DWORD *)v150;
    *(_DWORD *)&v115[3] = *(_DWORD *)&v150[3];
    v116 = v52;
    v117 = v69;
    v118 = v70;
    v119 = v71;
    v120 = v72;
    v121 = v51;
    v122 = v50;
    v123 = v73;
    v124 = v74;
    v125 = v47;
    v126 = v37;
    v127 = v46;
    v128 = v45;
    *(_DWORD *)v129 = *(_DWORD *)v149;
    *(_DWORD *)&v129[3] = *(_DWORD *)&v149[3];
    v130 = v49;
    v131 = v85;
    v132 = v86;
    v133 = v87;
    v134 = v48;
    v135 = v88;
    v136 = v89;
    v137 = v42;
    v138 = v38;
    v139 = v41;
    v140 = v147;
    v141 = v148;
    v142 = v44;
    v143 = v66;
    v144 = v43;
    return sub_1BA2457E4((uint64_t)&v92);
  }
}

void sub_1BA247340(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA2461B4();
    v7 = a3(a1, &type metadata for FeedPrerollAdContext.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BA24739C()
{
  unint64_t result;

  result = qword_1ED5B12B8;
  if (!qword_1ED5B12B8)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for ChannelAdData, &type metadata for ChannelAdData);
    atomic_store(result, (unint64_t *)&qword_1ED5B12B8);
  }
  return result;
}

unint64_t sub_1BA2473E0()
{
  unint64_t result;

  result = qword_1EF27EA70;
  if (!qword_1EF27EA70)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for IssueAdData, &type metadata for IssueAdData);
    atomic_store(result, (unint64_t *)&qword_1EF27EA70);
  }
  return result;
}

unint64_t sub_1BA247424()
{
  unint64_t result;

  result = qword_1EF27EA78;
  if (!qword_1EF27EA78)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for SectionAdData, &type metadata for SectionAdData);
    atomic_store(result, (unint64_t *)&qword_1EF27EA78);
  }
  return result;
}

uint64_t sub_1BA247468@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return FeedPrerollAdContext.init(provider:)(a1, a2);
}

uint64_t sub_1BA24747C@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return FeedPrerollAdContext.init(from:)(a1, a2);
}

uint64_t sub_1BA247490(_QWORD *a1)
{
  return FeedPrerollAdContext.encode(to:)(a1);
}

void FeedPrerollAdContext.newsSupplementalContext.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[9];

  v24 = *(unsigned __int8 *)(v0 + 32);
  v25 = *(_QWORD *)(v0 + 16);
  v15 = *(unsigned __int8 *)(v0 + 33);
  v1 = *(_QWORD *)(v0 + 48);
  v22 = *(_QWORD *)(v0 + 40);
  v23 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 96);
  v21 = *(_QWORD *)(v0 + 80);
  v41 = *(_QWORD *)(v0 + 88);
  v42 = *(_QWORD *)(v0 + 104);
  v19 = *(unsigned __int8 *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 128);
  v17 = *(_QWORD *)(v0 + 136);
  v18 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 152);
  v16 = *(_QWORD *)(v0 + 144);
  v37 = *(_QWORD *)(v0 + 216);
  v30 = *(_QWORD *)(v0 + 280);
  v31 = *(_QWORD *)(v0 + 264);
  v35 = *(_QWORD *)(v0 + 288);
  v36 = *(_QWORD *)(v0 + 256);
  v33 = *(_QWORD *)(v0 + 304);
  v34 = *(_QWORD *)(v0 + 296);
  v32 = *(_QWORD *)(v0 + 320);
  v26 = *(_QWORD *)(v0 + 344);
  v27 = *(_QWORD *)(v0 + 368);
  v38 = *(unsigned __int8 *)(v0 + 376);
  v28 = *(_QWORD *)(v0 + 248);
  v29 = *(_QWORD *)(v0 + 312);
  v39 = *(unsigned __int8 *)(v0 + 272);
  v40 = *(_QWORD *)(v0 + 328);
  objc_msgSend(objc_allocWithZone((Class)sub_1BA2C1DC0()), sel_init);
  sub_1BA2C1DB4();
  sub_1BA2C1C94();
  swift_bridgeObjectRetain_n();
  sub_1BA2C1D00();
  swift_bridgeObjectRelease();
  v7 = 256;
  if (!v15)
    v7 = 0;
  v43 = v25;
  v44 = v23;
  v45 = v7 | v24;
  v46 = v22;
  v47 = v1;
  v48 = v2;
  v49 = v3;
  v50 = v4;
  v51 = v21;
  v52 = v41;
  v54[0] = v20;
  v54[1] = v42;
  v54[2] = v19;
  v54[3] = v18;
  v54[4] = v5;
  v54[5] = v17;
  v54[6] = v16;
  v54[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA26F958((uint64_t)&v43, v54);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v26)
  {
    swift_bridgeObjectRetain_n();
    sub_1BA2C1C4C();
    sub_1BA2C1CB8();
    sub_1BA2C1CE8();
    swift_bridgeObjectRelease();
  }
  v8 = v40;
  if (v27)
  {
    v9 = v31;
    if ((v39 & 1) != 0 || v31 >= 1)
      swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = v35;
    swift_bridgeObjectRetain();
    v12 = v34;
    swift_bridgeObjectRetain();
    v13 = v33;
    swift_bridgeObjectRetain();
    v14 = v32;
    swift_bridgeObjectRetain();
    sub_1BA2C1D0C();
    v10 = v36;
    v8 = v40;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = v35;
    v10 = v36;
    v13 = v33;
    v12 = v34;
    v9 = v31;
    v14 = v32;
  }
  v43 = v28;
  v44 = v10;
  v45 = v9;
  v46 = v39;
  v47 = v30;
  v48 = v11;
  v49 = v12;
  v50 = v13;
  v51 = v29;
  v52 = v14;
  v53 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA2338F8((uint64_t)&v43);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA2C1BEC();
  swift_bridgeObjectRetain();
  sub_1BA2C1C10();
  swift_bridgeObjectRetain();
  sub_1BA2C1C1C();
  swift_bridgeObjectRetain();
  sub_1BA2C1B80();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v37);
  sub_1BA2C1C40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __asm { BR              X9 }
}

uint64_t sub_1BA247A34()
{
  uint64_t v0;
  uint64_t v1;
  double v2;

  sub_1BA2C1C64();
  sub_1BA23DAE0();
  sub_1BA2C2438();
  sub_1BA2C1D54();
  objc_msgSend(objc_allocWithZone(*(Class *)(v1 + 2024)), sel_initWithDouble_, v2);
  sub_1BA2C1C7C();
  return v0;
}

uint64_t FeedPrerollAdContext.currentPromotableContentDepiction.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15[2];
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 32);
  v13 = *(_BYTE *)(v0 + 33);
  v5 = *(_QWORD *)(v0 + 48);
  v12 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 88);
  sub_1BA2C19E8();
  v14 = v1;
  v15[0] = v2;
  v15[1] = v3;
  v16 = v4;
  v17 = v13;
  v18 = v12;
  v19 = v5;
  v20 = v7;
  v21 = v6;
  v22 = v9;
  v23 = v8;
  v24 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BA26D49C(0, v15, &v14, 104);
}

uint64_t FeedPrerollAdContext.additionalPromotableContentDepictions.getter()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD __dst[48];

  memcpy(__dst, v0, 0x179uLL);
  sub_1BA24565C((uint64_t)__dst);
  v1 = swift_bridgeObjectRetain();
  v2 = sub_1BA2482A4(v1, (uint64_t)__dst);
  sub_1BA2457E4((uint64_t)__dst);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1BA247C4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15[2];
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 32);
  v13 = *(_BYTE *)(v0 + 33);
  v5 = *(_QWORD *)(v0 + 48);
  v12 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 88);
  sub_1BA2C19E8();
  v14 = v1;
  v15[0] = v2;
  v15[1] = v3;
  v16 = v4;
  v17 = v13;
  v18 = v12;
  v19 = v5;
  v20 = v7;
  v21 = v6;
  v22 = v9;
  v23 = v8;
  v24 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BA26D49C(0, v15, &v14, 104);
}

uint64_t sub_1BA247D34()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD __dst[48];

  memcpy(__dst, v0, 0x179uLL);
  sub_1BA24565C((uint64_t)__dst);
  v1 = swift_bridgeObjectRetain();
  v2 = sub_1BA2482A4(v1, (uint64_t)__dst);
  sub_1BA2457E4((uint64_t)__dst);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1BA247DA8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x61746144707061 && a2 == 0xE700000000000000;
  if (v2 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614472657375 && a2 == 0xE800000000000000 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7461446F65646976 && a2 == 0xE900000000000061 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E656D6563616C70 && a2 == 0xED00006174614474 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x446E6F6974636573 && a2 == 0xEB00000000617461 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6C61727265666572 && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v6 = sub_1BA2C26A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

uint64_t sub_1BA2482A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v5 = sub_1BA2C1484();
  v26 = *(_QWORD *)(v5 - 8);
  v27 = v5;
  MEMORY[0x1E0C80A78](v5);
  v25 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BA2C1460();
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  MEMORY[0x1E0C80A78](v7);
  v22 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v21[0] = v2;
    v33 = MEMORY[0x1E0DEE9D8];
    sub_1BA2C2528();
    v34 = *(_QWORD *)(a2 + 8);
    v21[1] = sub_1BA2C19E8();
    v11 = (char *)(a1 + 88);
    do
    {
      v13 = *((_QWORD *)v11 - 6);
      v14 = *((_QWORD *)v11 - 4);
      v15 = *((_QWORD *)v11 - 2);
      v16 = *v11;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_1BA24910C((uint64_t)&v34);
      v17 = v22;
      sub_1BA2C1454();
      v18 = sub_1BA2C143C();
      v29 = v19;
      v30 = v18;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v24);
      v20 = qword_1BA2C4A20[v16];
      v31 = v14;
      v32 = v13;
      v28 = v20;
      if (v15 || *(_QWORD *)(v34 + 16))
        swift_bridgeObjectRetain();
      v11 += 64;
      sub_1BA249134((uint64_t)&v34);
      v12 = v25;
      sub_1BA2C1478();
      sub_1BA2C146C();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v27);
      swift_bridgeObjectRetain();
      sub_1BA2C19DC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      sub_1BA2C2504();
      sub_1BA2C2534();
      sub_1BA2C2540();
      sub_1BA2C2510();
      --v9;
    }
    while (v9);
    return v33;
  }
  return result;
}

uint64_t destroy for FeedPrerollAdContext()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeedPrerollAdContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v8 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v8;
  v9 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v9;
  v10 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v10;
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  v11 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v11;
  v12 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v12;
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  v20 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v20;
  v13 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = v13;
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  v14 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = v14;
  v19 = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = v19;
  v15 = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = v15;
  v16 = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = v16;
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_BYTE *)(a1 + 352) = *(_BYTE *)(a2 + 352);
  *(_BYTE *)(a1 + 353) = *(_BYTE *)(a2 + 353);
  v17 = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = v17;
  *(_BYTE *)(a1 + 376) = *(_BYTE *)(a2 + 376);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedPrerollAdContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = a2 + 272;
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 352) = *(_BYTE *)(v4 + 80);
  *(_BYTE *)(a1 + 353) = *(_BYTE *)(v4 + 81);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 376) = *(_BYTE *)(a2 + 376);
  return a1;
}

void *__swift_memcpy377_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x179uLL);
}

uint64_t assignWithTake for FeedPrerollAdContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a2 + 272;
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v9 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  v11 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v11;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = v12;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  v13 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = v13;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = v14;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 352) = *(_BYTE *)(v4 + 80);
  *(_BYTE *)(a1 + 353) = *(_BYTE *)(v4 + 81);
  v16 = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = v16;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 376) = *(_BYTE *)(a2 + 376);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedPrerollAdContext(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 377))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedPrerollAdContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 376) = 0;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 377) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 377) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FeedPrerollAdContext.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedPrerollAdContext.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1BA248FB4 + 4 * byte_1BA2C4725[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1BA248FE8 + 4 * byte_1BA2C4720[v4]))();
}

uint64_t sub_1BA248FE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA248FF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA248FF8);
  return result;
}

uint64_t sub_1BA249004(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA24900CLL);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1BA249010(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA249018(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedPrerollAdContext.CodingKeys()
{
  return &type metadata for FeedPrerollAdContext.CodingKeys;
}

unint64_t sub_1BA249038()
{
  unint64_t result;

  result = qword_1EF27EA80;
  if (!qword_1EF27EA80)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C48A0, &type metadata for FeedPrerollAdContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27EA80);
  }
  return result;
}

unint64_t sub_1BA249080()
{
  unint64_t result;

  result = qword_1EF27EA88;
  if (!qword_1EF27EA88)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C4810, &type metadata for FeedPrerollAdContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27EA88);
  }
  return result;
}

unint64_t sub_1BA2490C8()
{
  unint64_t result;

  result = qword_1EF27EA90;
  if (!qword_1EF27EA90)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C4838, &type metadata for FeedPrerollAdContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27EA90);
  }
  return result;
}

uint64_t sub_1BA24910C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA249134(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

void Journal.__allocating_init()()
{
  swift_allocObject();
  Journal.init()();
}

uint64_t sub_1BA249180()
{
  uint64_t v0;

  return v0;
}

uint64_t *sub_1BA249190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_allocObject();
  return sub_1BA2214AC(a1, a2, a3);
}

void Journal.addRequestedEntry(request:placementIdentifier:contentIdentifier:)()
{
  type metadata accessor for JournalEntry();
}

void sub_1BA249230(uint64_t a1)
{
  MEMORY[0x1E0C80A78](a1);
  sub_1BA2B2078();
}

void sub_1BA249284()
{
  sub_1BA22A46C();
}

void Journal.addFulfilledEntry(request:placementIdentifier:contentIdentifier:layout:)()
{
  sub_1BA2492F8();
}

void Journal.addDiscardedEntry(error:request:placementIdentifier:contentIdentifier:)()
{
  sub_1BA224CF8();
}

void Journal.addPresentedEntry(request:placementIdentifier:contentIdentifier:layout:)()
{
  sub_1BA2492F8();
}

void Journal.addCollapsedEntry(request:placementIdentifier:contentIdentifier:layout:)()
{
  sub_1BA2492F8();
}

void sub_1BA2492F8()
{
  type metadata accessor for JournalEntry();
}

void sub_1BA24934C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;

  MEMORY[0x1E0C80A78](a1);
  v8 = *(_BYTE *)(v1 + 32);
  v9 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v7 - 128) = *(_OWORD *)v1;
  *(_OWORD *)(v7 - 112) = v9;
  *(_BYTE *)(v7 - 96) = v8;
  (*(void (**)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 - 136))(v3, *(_QWORD *)(v7 - 160), *(_QWORD *)(v7 - 152), *(_QWORD *)(v7 - 144), *(_QWORD *)(v7 - 168), v7 - 128, v5, v6, v2, v4);
  sub_1BA22A46C();
}

Swift::Void __swiftcall Journal.removeEntries(for:)(Swift::String a1)
{
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BA2C18D4();
  swift_release();
}

void Journal.lastEntry(for:)()
{
  sub_1BA225748();
  type metadata accessor for JournalEntry();
}

uint64_t sub_1BA249488()
{
  uint64_t v0;

  v0 = sub_1BA2C22F4();
  MEMORY[0x1BCCD93D0](MEMORY[0x1E0DEAF20], v0);
  sub_1BA2C2114();
  return swift_bridgeObjectRelease();
}

Swift::Bool __swiftcall Journal.containsEntry(for:)(Swift::String a1)
{
  sub_1BA225748();
  type metadata accessor for JournalEntry();
}

BOOL sub_1BA249510()
{
  uint64_t v0;
  char v1;

  v0 = sub_1BA2C22F4();
  MEMORY[0x1BCCD93D0](MEMORY[0x1E0DEAF50], v0);
  v1 = sub_1BA2C233C();
  swift_bridgeObjectRelease();
  return (v1 & 1) == 0;
}

uint64_t sub_1BA249568(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA2495AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BA2495AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B3238)
  {
    v0 = sub_1BA2C245C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B3238);
  }
}

uint64_t Journal.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t Journal.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for Journal()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Journal.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1BA249664()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA249688()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t InterstitialAdProviderFactory.createAdProvider<A, B>(for:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BA249778(a2);
}

uint64_t InterstitialAdProviderFactory.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t InterstitialAdProviderFactory.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1BA24973C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1BA249778(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1BA249778(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  __int128 v6[2];

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  type metadata accessor for InterstitialAdProvider();
  sub_1BA22068C(a1, (uint64_t)v6);
  v3 = swift_allocObject();
  sub_1BA21D3D4(v6, v3 + 16);
  v4 = sub_1BA2C1754();
  result = swift_release();
  if (v4)
    return v4;
  __break(1u);
  return result;
}

_UNKNOWN **sub_1BA249834()
{
  return &protocol witness table for InterstitialAdProvider;
}

uint64_t method lookup function for InterstitialAdProviderFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BA24984C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t BannerAdViewRenderer.render(for:with:in:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  double v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  _BYTE v39[424];
  _OWORD v40[9];
  _QWORD v41[13];
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60[26];
  _BYTE v61[440];

  v5 = v4;
  v8 = *(double *)(a2 + 32);
  v9 = *(double *)(a2 + 40);
  v10 = *(double *)(a2 + 48);
  v11 = *(double *)(a2 + 56);
  v12 = *(unsigned __int8 *)(a2 + 64);
  sub_1BA227BF4(a2 + 72, (uint64_t)v61, (unint64_t *)&qword_1ED5B3258);
  ObjectType = swift_getObjectType();
  *(_QWORD *)&v60[0] = a3;
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(ObjectType, a4);
  if (v14)
  {
    v16 = (void *)v14;
    v17 = v15;
    v18 = swift_getObjectType();
    objc_msgSend(v16, sel_setHidden_, v12);
    v19 = v16;
    if ((_DWORD)v12)
    {
      sub_1BA2C2414();
      v8 = v20;
      v9 = v21;
      v10 = v22;
      v11 = v23;
    }
    objc_msgSend(v19, sel_setFrame_, v8, v9, v10, v11);

    if (!objc_msgSend((id)objc_opt_self(), sel_isInternalBuild))
      goto LABEL_9;
    if (qword_1ED5B2FE0 != -1)
      swift_once();
    sub_1BA223FC4(&qword_1ED5B3078, v24, (uint64_t (*)(uint64_t))type metadata accessor for BannerAdViewRenderer, (uint64_t)&protocol conformance descriptor for BannerAdViewRenderer);
    sub_1BA2C14FC();
    if (LOBYTE(v60[0]) == 1)
    {
      *(_QWORD *)&v60[0] = v19;
      v25 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 32);
      v26 = (void *)v25(v18, v17);

      *(_QWORD *)&v60[0] = v19;
      v27 = (void *)v25(v18, v17);
      v28 = swift_allocObject();
      swift_weakInit();
      v29 = swift_allocObject();
      *(_QWORD *)(v29 + 24) = a4;
      swift_unknownObjectWeakInit();
      sub_1BA22068C((uint64_t)a1, (uint64_t)v60);
      v30 = swift_allocObject();
      *(_QWORD *)(v30 + 16) = v28;
      *(_QWORD *)(v30 + 24) = v29;
      sub_1BA21D3D4(v60, v30 + 32);

      swift_release();
    }
    else
    {
LABEL_9:

    }
  }
  sub_1BA227BF4((uint64_t)v61, (uint64_t)v60, (unint64_t *)&qword_1ED5B3258);
  result = sub_1BA249C64((uint64_t)v60);
  if ((_DWORD)result != 1)
  {
    v32 = v5 + 7;
    v34 = v5[10];
    v33 = v5[11];
    __swift_project_boxed_opaque_existential_1(v32, v34);
    v35 = a1[3];
    v36 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v35);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v36 + 8))(v41, v35, v36);
    v57 = v48;
    v58 = v49;
    v59 = v50;
    v53 = v44;
    v54 = v45;
    v55 = v46;
    v56 = v47;
    v51 = v42;
    v52 = v43;
    sub_1BA243268((uint64_t)&v51);
    sub_1BA228114((uint64_t)v41);
    v40[6] = v57;
    v40[7] = v58;
    v40[8] = v59;
    v40[2] = v53;
    v40[3] = v54;
    v40[4] = v55;
    v40[5] = v56;
    v40[0] = v51;
    v40[1] = v52;
    sub_1BA249C78(v60, v39);
    v37 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(ObjectType, a4);
    (*(void (**)(_OWORD *, _BYTE *, void *, uint64_t, uint64_t))(v33 + 8))(v40, v39, v37, v34, v33);

    return sub_1BA249CB4((uint64_t)&v51);
  }
  return result;
}

uint64_t sub_1BA249C64(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 416);
  if (v1 > 2)
    return (v1 ^ 0xFF) + 1;
  else
    return 0;
}

void *sub_1BA249C78(const void *a1, void *a2)
{
  __swift_memcpy417_8(a2, a1);
  return a2;
}

uint64_t sub_1BA249CB4(uint64_t a1)
{
  unint64_t v2;

  v2 = *(_QWORD *)(a1 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA22C4F0(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1BA249D80(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  id v18;
  uint64_t v19;
  _QWORD v20[13];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _OWORD v39[14];
  char v40;

  v5 = sub_1BA2C1F40();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v10 = Strong;
    swift_beginAccess();
    v11 = MEMORY[0x1BCCD9544](a2 + 16);
    if (v11)
    {
      v12 = (void *)v11;
      (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB9F00], v5);
      v13 = type metadata accessor for Tracker();
      v14 = swift_allocObject();
      v20[3] = v13;
      v20[4] = sub_1BA223FC4(&qword_1EF27EB30, 255, (uint64_t (*)(uint64_t))type metadata accessor for Tracker, (uint64_t)&unk_1BA2C4BC0);
      v20[0] = v14;
      memset(&v39[12], 0, 32);
      v40 = 1;
      sub_1BA2C1F34();
      swift_allocObject();
      v18 = v12;
      sub_1BA2C1F28();
      v17[2] = *(_QWORD *)(v10 + 104);
      v17[1] = swift_getObjectType();
      if (qword_1ED5B2E60 != -1)
        swift_once();
      v15 = a3[3];
      v16 = a3[4];
      __swift_project_boxed_opaque_existential_1(a3, v15);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v16 + 8))(v20, v15, v16);
      v36 = v27;
      v37 = v28;
      v38 = v29;
      v32 = v23;
      v33 = v24;
      v34 = v25;
      v35 = v26;
      v30 = v21;
      v31 = v22;
      sub_1BA243268((uint64_t)&v30);
      sub_1BA228114((uint64_t)v20);
      v39[6] = v36;
      v39[7] = v37;
      v39[8] = v38;
      v39[2] = v32;
      v39[3] = v33;
      v39[4] = v34;
      v39[5] = v35;
      v39[0] = v30;
      v39[1] = v31;
      nullsub_1(v39);
      sub_1BA227BF4((uint64_t)v39, (uint64_t)&v19, (unint64_t *)&qword_1ED5B3238);
      swift_retain();
      sub_1BA2C1EF8();
      sub_1BA249CB4((uint64_t)&v30);
      swift_release();
      swift_release_n();

    }
    else
    {
      swift_release();
    }
  }
}

uint64_t BannerAdViewRenderer.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_unknownObjectRelease();
  return v0;
}

uint64_t BannerAdViewRenderer.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA24A100(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return BannerAdViewRenderer.render(for:with:in:)(a1, a2, a3, a4);
}

uint64_t sub_1BA24A120()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1BA24A130()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BA24A154()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BA24A178()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocObject();
}

void sub_1BA24A1AC()
{
  uint64_t *v0;

  sub_1BA249D80(v0[2], v0[3], v0 + 4);
}

uint64_t dispatch thunk of BannerAdViewRendererType.render(for:with:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t method lookup function for BannerAdViewRenderer()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Tracker()
{
  return objc_opt_self();
}

void sub_1BA24A1EC(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BA2C245C();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t AdPreview.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

NewsAds::AdPreview __swiftcall AdPreview.init(identifier:)(NewsAds::AdPreview identifier)
{
  NewsAds::AdPreview *v1;

  *v1 = identifier;
  return identifier;
}

_QWORD *initializeBufferWithCopyOfBuffer for AdPreview(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for AdPreview()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for AdPreview(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for AdPreview(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AdPreview()
{
  return &type metadata for AdPreview;
}

uint64_t dispatch thunk of AdContextDataProviding.data<A>(for:namespace:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of AdContextDataProviding.dataIfPresent<A>(for:namespace:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t sub_1BA24A34C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  ValueMetadata *v29;
  _UNKNOWN **v30;

  v3 = v2;
  v27 = a2;
  v26 = type metadata accessor for NativeAdInfo(0);
  v5 = MEMORY[0x1E0C80A78](v26);
  v23 = (uint64_t)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v23 - v7;
  v9 = (uint64_t *)(a1 + *(int *)(sub_1BA24A9F0() + 56));
  v10 = v9[1];
  v25 = *v9;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BA2C1574();
  swift_release();
  v11 = *((_QWORD *)&v28 + 1);
  v24 = v28;
  swift_retain();
  sub_1BA2C1574();
  swift_release();
  v12 = v28;
  swift_retain();
  sub_1BA2C1574();
  swift_release();
  v13 = v28;
  type metadata accessor for DebugLifecycleMetricsHelper();
  v14 = swift_allocObject();
  v29 = &type metadata for DebugNativeAdContentInfo;
  v30 = &off_1E71F9FE0;
  v15 = swift_allocObject();
  *(_QWORD *)&v28 = v15;
  *(_OWORD *)(v15 + 16) = v13;
  *(_QWORD *)(v15 + 32) = v14;
  *(_WORD *)(v15 + 40) = 0;
  *(_BYTE *)(v15 + 42) = 0;
  *(_OWORD *)(v15 + 48) = xmmword_1BA2C4C30;
  v17 = v3[7];
  v16 = v3[8];
  __swift_project_boxed_opaque_existential_1(v3 + 4, v17);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v17, v16);
  v19 = (int *)type metadata accessor for NativeAdInfo.Fulfilled(0);
  sub_1BA24AA98(a1, (uint64_t)&v8[v19[11]], (uint64_t (*)(_QWORD))sub_1BA24A9F0);
  *(_QWORD *)v8 = v25;
  *((_QWORD *)v8 + 1) = v10;
  *((_QWORD *)v8 + 2) = 0;
  *((_QWORD *)v8 + 3) = 0;
  *((_QWORD *)v8 + 4) = v24;
  *((_QWORD *)v8 + 5) = v11;
  *((_QWORD *)v8 + 6) = 0;
  *((_QWORD *)v8 + 7) = 0;
  *((_QWORD *)v8 + 8) = 0;
  *((_QWORD *)v8 + 9) = 0xE000000000000000;
  *((_OWORD *)v8 + 5) = v12;
  sub_1BA21D3D4(&v28, (uint64_t)&v8[v19[12]]);
  *(_QWORD *)&v8[v19[13]] = v18;
  *((_QWORD *)v8 + 12) = v27;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_retain();
  sub_1BA2C1574();
  v20 = swift_release();
  if (*(float *)&v28 <= 0.0)
  {
    sub_1BA24AA98((uint64_t)v8, v23, type metadata accessor for NativeAdInfo);
    sub_1BA22053C(0, &qword_1ED5B14A0, type metadata accessor for NativeAdInfo, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v21 = sub_1BA2C197C();
  }
  else
  {
    MEMORY[0x1E0C80A78](v20);
    *(&v23 - 2) = (uint64_t)v3;
    *(&v23 - 1) = (uint64_t)v8;
    sub_1BA22053C(0, &qword_1ED5B14A0, type metadata accessor for NativeAdInfo, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v21 = sub_1BA2C1988();
  }
  sub_1BA24AADC((uint64_t)v8);
  return v21;
}

uint64_t sub_1BA24A674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD aBlock[6];

  v31[1] = a5;
  v32 = a6;
  v34 = a1;
  v35 = a2;
  v36 = sub_1BA2C2030();
  v39 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BA2C2060();
  v37 = *(_QWORD *)(v8 - 8);
  v38 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for NativeAdInfo(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  v14 = sub_1BA2C2078();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v31 - v19;
  sub_1BA21D258();
  v33 = sub_1BA2C23D8();
  sub_1BA2C206C();
  swift_retain();
  sub_1BA2C1574();
  swift_release();
  MEMORY[0x1BCCD8848](v18, *(float *)aBlock);
  v21 = *(void (**)(char *, uint64_t))(v15 + 8);
  v22 = v18;
  v23 = v14;
  v21(v22, v14);
  sub_1BA24AA98(v32, (uint64_t)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NativeAdInfo);
  v24 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v25 = swift_allocObject();
  v26 = v35;
  *(_QWORD *)(v25 + 16) = v34;
  *(_QWORD *)(v25 + 24) = v26;
  sub_1BA24ADE4((uint64_t)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v25 + v24);
  aBlock[4] = sub_1BA24AE28;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA223CC0;
  aBlock[3] = &block_descriptor_2;
  v27 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1BA2C2048();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1BA23C3FC();
  sub_1BA22053C(0, (unint64_t *)&qword_1ED5B2B60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA23C444();
  v28 = v36;
  sub_1BA2C2480();
  v29 = (void *)v33;
  MEMORY[0x1BCCD8B78](v20, v10, v7, v27);
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v7, v28);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v38);
  return ((uint64_t (*)(char *, uint64_t))v21)(v20, v23);
}

uint64_t sub_1BA24A97C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugNativeAdProvider()
{
  return objc_opt_self();
}

uint64_t sub_1BA24A9D0(uint64_t a1, uint64_t a2)
{
  return sub_1BA24A34C(a1, a2);
}

uint64_t sub_1BA24A9F0()
{
  uint64_t result;

  result = qword_1ED5B2B20;
  if (!qword_1ED5B2B20)
  {
    type metadata accessor for NativeAdPlacement();
    sub_1BA23640C();
    type metadata accessor for AdRequest();
  }
  return result;
}

uint64_t sub_1BA24AA6C()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA24AA98(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BA24AADC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NativeAdInfo(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA24AB18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BA24A674(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1BA24AB20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int EnumCaseMultiPayload;
  int *v4;
  _QWORD *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  id *v9;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NativeAdInfo(0) - 8) + 80);
  swift_release();
  v2 = v0 + ((v1 + 32) & ~v1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 40);
    v9 = (id *)(v2 + 80);
LABEL_16:

    return swift_deallocObject();
  }
  if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v4 = (int *)type metadata accessor for NativeAdInfo.Fulfilled(0);
    v5 = (_QWORD *)(v2 + v4[11]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v5[6])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v5[26])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v5[35])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v5[49])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v5[59])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v6 = (char *)v5 + *(int *)(sub_1BA24A9F0() + 56);
    swift_bridgeObjectRelease();
    v7 = &v6[*(int *)(type metadata accessor for NativeAdPlacement() + 20)];
    v8 = sub_1BA2C1AC0();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v2 + v4[12]);
    v9 = (id *)(v2 + v4[13]);
    goto LABEL_16;
  }
  return swift_deallocObject();
}

uint64_t sub_1BA24ADE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NativeAdInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA24AE28()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NativeAdInfo(0) - 8) + 80);
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(v0 + ((v1 + 32) & ~v1));
}

uint64_t sub_1BA24AE68()
{
  return sub_1BA24AE80((uint64_t)&selRef_discarded);
}

uint64_t sub_1BA24AE74()
{
  return sub_1BA24AE80((uint64_t)&selRef_missedOpportunity);
}

uint64_t sub_1BA24AE80(uint64_t result)
{
  uint64_t v1;
  void *v2;
  SEL *v3;
  id v4;

  v2 = *(void **)(v1 + 16);
  if (v2)
  {
    v3 = (SEL *)result;
    v4 = v2;
    objc_msgSend((id)sub_1BA2C1A24(), *v3);

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t AdPendingLoadToken.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t AdPendingLoadToken.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AdPendingLoadToken()
{
  return objc_opt_self();
}

uint64_t method lookup function for AdPendingLoadToken()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AdPendingLoadToken.discard()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of AdPendingLoadToken.missedOpportunity()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

void **initializeBufferWithCopyOfBuffer for AdPendingLoadToken.Content(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void destroy for AdPendingLoadToken.Content(id *a1)
{

}

void **assignWithCopy for AdPendingLoadToken.Content(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  v5 = v3;

  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **assignWithTake for AdPendingLoadToken.Content(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for AdPendingLoadToken.Content(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AdPendingLoadToken.Content(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_1BA24B0A8(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1BA24B0C0(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for AdPendingLoadToken.Content()
{
  return &type metadata for AdPendingLoadToken.Content;
}

uint64_t AdRequestPolicyValidator.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t AdRequestPolicyValidator.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t AdRequestPolicyValidator.validatePlacement(_:environments:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  char *v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t result;
  void *v30;
  uint64_t v31;
  id v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v36;
  _OWORD v37[7];
  uint64_t v38;

  v4 = *a1;
  v3 = a1[1];
  v5 = *((double *)a1 + 2);
  v6 = *((double *)a1 + 3);
  v7 = *(_OWORD *)(a2 + 80);
  v37[4] = *(_OWORD *)(a2 + 64);
  v37[5] = v7;
  v37[6] = *(_OWORD *)(a2 + 96);
  v38 = *(_QWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 16);
  v37[0] = *(_OWORD *)a2;
  v37[1] = v8;
  v9 = *(_OWORD *)(a2 + 48);
  v37[2] = *(_OWORD *)(a2 + 32);
  v37[3] = v9;
  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v10 = (void *)qword_1ED5B2888;
  sub_1BA22D5D8();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BA2C37C0;
  v12 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
  v13 = sub_1BA2291C8();
  *(_QWORD *)(v11 + 64) = v13;
  *(_QWORD *)(v11 + 32) = v4;
  *(_QWORD *)(v11 + 40) = v3;
  type metadata accessor for CGPoint(0);
  v14 = v10;
  swift_bridgeObjectRetain();
  sub_1BA2C2570();
  *(_QWORD *)(v11 + 96) = v12;
  *(_QWORD *)(v11 + 104) = v13;
  *(_QWORD *)(v11 + 72) = 0;
  *(_QWORD *)(v11 + 80) = 0xE000000000000000;
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BA24910C((uint64_t)v37);
  v15 = swift_bridgeObjectRetain();
  v16 = sub_1BA24BB24(v15, v4, v3, (uint64_t)v37, v5, v6);
  sub_1BA249134((uint64_t)v37);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = *((_QWORD *)v16 + 2);
  if (v17)
  {
    v33 = v13;
    v34 = v4;
    v36 = MEMORY[0x1E0DEE9D8];
    sub_1BA24B61C(0, v17, 0);
    v18 = (uint64_t *)(v16 + 80);
    do
    {
      v19 = *(v18 - 1);
      v20 = *v18;
      v22 = *(_QWORD *)(v36 + 16);
      v21 = *(_QWORD *)(v36 + 24);
      swift_bridgeObjectRetain();
      if (v22 >= v21 >> 1)
        sub_1BA24B61C((char *)(v21 > 1), v22 + 1, 1);
      *(_QWORD *)(v36 + 16) = v22 + 1;
      v23 = v36 + 16 * v22;
      *(_QWORD *)(v23 + 32) = v19;
      *(_QWORD *)(v23 + 40) = v20;
      v18 += 8;
      --v17;
    }
    while (v17);
    v24 = (void *)qword_1ED5B2888;
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1BA2C37C0;
    v26 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v25 + 64) = v33;
    *(_QWORD *)(v25 + 32) = v34;
    *(_QWORD *)(v25 + 40) = v3;
    sub_1BA22920C(0, (unint64_t *)&qword_1ED5B2B70, v26, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    *(_QWORD *)(v25 + 96) = v27;
    *(_QWORD *)(v25 + 104) = sub_1BA24BCDC();
    *(_QWORD *)(v25 + 72) = v36;
    swift_bridgeObjectRetain();
    v28 = v24;
    sub_1BA2C239C();
    sub_1BA2C1EB0();

    result = swift_bridgeObjectRelease();
    *(_QWORD *)a3 = v16;
    *(_QWORD *)(a3 + 8) = 0;
    *(_WORD *)(a3 + 16) = 257;
  }
  else
  {
    swift_bridgeObjectRelease();
    v30 = (void *)qword_1ED5B2888;
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1BA2C37D0;
    *(_QWORD *)(v31 + 56) = v12;
    *(_QWORD *)(v31 + 64) = v13;
    *(_QWORD *)(v31 + 32) = v4;
    *(_QWORD *)(v31 + 40) = v3;
    swift_bridgeObjectRetain();
    v32 = v30;
    sub_1BA2C239C();
    sub_1BA2C1EB0();

    result = swift_bridgeObjectRelease();
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_WORD *)(a3 + 16) = 0;
  }
  return result;
}

uint64_t AdRequestPolicyValidator.addPolicy(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v4;
  unint64_t v5;
  __int128 v7[2];

  sub_1BA22068C(a1, (uint64_t)v7);
  v2 = *(_QWORD **)(v1 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v1 + 16) = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_1BA224058(0, v2[2] + 1, 1, v2);
    *(_QWORD *)(v1 + 16) = v2;
  }
  v5 = v2[2];
  v4 = v2[3];
  if (v5 >= v4 >> 1)
  {
    v2 = sub_1BA224058((_QWORD *)(v4 > 1), v5 + 1, 1, v2);
    *(_QWORD *)(v1 + 16) = v2;
  }
  v2[2] = v5 + 1;
  return sub_1BA21D3D4(v7, (uint64_t)&v2[5 * v5 + 4]);
}

uint64_t AdRequestPolicyValidator.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AdRequestPolicyValidator.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA24B5DC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return AdRequestPolicyValidator.validatePlacement(_:environments:)(a1, a2, a3);
}

uint64_t sub_1BA24B5FC(uint64_t a1)
{
  return AdRequestPolicyValidator.addPolicy(_:)(a1);
}

char *sub_1BA24B61C(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_1BA24B6F4(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_1BA24B638(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_1BA24B808(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_1BA24B654(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_1BA24BA30(a1, a2, a3, *v3, &qword_1ED5B13E0, (uint64_t)&type metadata for AdPolicyFailureType);
  *v3 = result;
  return result;
}

char *sub_1BA24B680(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_1BA231138(a1, a2, a3, *v3, &qword_1EF27EBE8, (uint64_t)&type metadata for AdContextBuilderSnapshot.SerializedSnapshotEntry);
  *v3 = result;
  return result;
}

char *sub_1BA24B6AC(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_1BA24B91C(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_1BA24B6C8(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_1BA24BA30(a1, a2, a3, *v3, &qword_1EF27EBF0, (uint64_t)&type metadata for DebugJournalViewController.Section);
  *v3 = result;
  return result;
}

char *sub_1BA24B6F4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA22920C(0, (unint64_t *)&qword_1ED5B2CA8, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_1BA24B808(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA22920C(0, &qword_1ED5B2C90, (uint64_t)&type metadata for AdPolicyFailure, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 31;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8])
      memmove(v13, v14, v8 << 6);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_1BA24B91C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA22920C(0, &qword_1EF27E988, (uint64_t)&type metadata for AdPreviewQueue.AdPreviewWrapper, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_1BA24BA30(char *result, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  char v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  int64_t v11;
  char *v12;
  size_t v13;
  char *v14;
  char *v15;

  v7 = (char)result;
  if ((a3 & 1) != 0)
  {
    v8 = *((_QWORD *)a4 + 3);
    v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v9 = a2;
    }
  }
  else
  {
    v9 = a2;
  }
  v10 = *((_QWORD *)a4 + 2);
  if (v9 <= v10)
    v11 = *((_QWORD *)a4 + 2);
  else
    v11 = v9;
  if (v11)
  {
    sub_1BA22920C(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v12 = (char *)swift_allocObject();
    v13 = _swift_stdlib_malloc_size(v12);
    *((_QWORD *)v12 + 2) = v10;
    *((_QWORD *)v12 + 3) = 2 * v13 - 64;
  }
  else
  {
    v12 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v12 + 32;
  v15 = a4 + 32;
  if ((v7 & 1) != 0)
  {
    if (v12 != a4 || v14 >= &v15[v10])
      memmove(v14, v15, v10);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, v10);
  }
  swift_release();
  return v12;
}

char *sub_1BA24BB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v6;
  _QWORD *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  __int128 v28;
  _OWORD v29[7];
  uint64_t v30;
  _QWORD v31[4];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;

  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
    return (char *)MEMORY[0x1E0DEE9D8];
  v10 = (_QWORD *)(a1 + 32);
  swift_bridgeObjectRetain();
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  do
  {
    v14 = v10[3];
    v13 = v10[4];
    __swift_project_boxed_opaque_existential_1(v10, v14);
    v31[0] = a2;
    v31[1] = a3;
    *(double *)&v31[2] = a5;
    *(double *)&v31[3] = a6;
    v15 = *(_OWORD *)(a4 + 80);
    v29[4] = *(_OWORD *)(a4 + 64);
    v29[5] = v15;
    v29[6] = *(_OWORD *)(a4 + 96);
    v30 = *(_QWORD *)(a4 + 112);
    v16 = *(_OWORD *)(a4 + 16);
    v29[0] = *(_OWORD *)a4;
    v29[1] = v16;
    v17 = *(_OWORD *)(a4 + 48);
    v29[2] = *(_OWORD *)(a4 + 32);
    v29[3] = v17;
    (*(void (**)(uint64_t *__return_ptr, _QWORD *, _OWORD *, uint64_t, uint64_t))(v13 + 8))(&v32, v31, v29, v14, v13);
    v18 = v33;
    if (v33)
    {
      v19 = v32;
      v28 = v38;
      v20 = v36;
      v39 = v37;
      v22 = v34;
      v21 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1BA23F2B4(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
      v24 = *((_QWORD *)v11 + 2);
      v23 = *((_QWORD *)v11 + 3);
      if (v24 >= v23 >> 1)
        v11 = sub_1BA23F2B4((char *)(v23 > 1), v24 + 1, 1, v11);
      *((_QWORD *)v11 + 2) = v24 + 1;
      v12 = &v11[64 * v24];
      *((_QWORD *)v12 + 4) = v19;
      *((_QWORD *)v12 + 5) = v18;
      *((_QWORD *)v12 + 6) = v22;
      *((_QWORD *)v12 + 7) = v21;
      v12[64] = v20;
      v12[65] = HIBYTE(v20) & 1;
      *((_QWORD *)v12 + 9) = v39;
      *((_OWORD *)v12 + 5) = v28;
    }
    v10 += 5;
    --v6;
  }
  while (v6);
  swift_bridgeObjectRelease();
  return v11;
}

unint64_t sub_1BA24BCDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED5B2B88;
  if (!qword_1ED5B2B88)
  {
    sub_1BA22920C(255, (unint64_t *)&qword_1ED5B2B70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCD93D0](MEMORY[0x1E0CB1B18], v1);
    atomic_store(result, (unint64_t *)&qword_1ED5B2B88);
  }
  return result;
}

uint64_t dispatch thunk of AdRequestPolicyValidatorType.validatePlacement(_:environments:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of AdRequestPolicyValidatorType.addPolicy(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t type metadata accessor for AdRequestPolicyValidator()
{
  return objc_opt_self();
}

uint64_t method lookup function for AdRequestPolicyValidator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AdRequestPolicyValidator.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

void *DebugJournalSummaryViewLayoutAttributesFactory.makeLayoutAttributes(for:origin:with:)@<X0>(__int128 *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>, CGFloat a4@<D0>, CGFloat a5@<D1>)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  _BYTE v50[440];

  v24 = *((_QWORD *)a1 + 2);
  v25 = *((_QWORD *)a1 + 3);
  v7 = *((_QWORD *)a1 + 6);
  v26 = *((_QWORD *)a1 + 4);
  v27 = *((_QWORD *)a1 + 5);
  v8 = *((_QWORD *)a1 + 7);
  v9 = *((_QWORD *)a1 + 8);
  v10 = *((_QWORD *)a1 + 9);
  v11 = *a2;
  v12 = a2[1];
  v14 = a2[2];
  v13 = a2[3];
  v16 = a2[4];
  v15 = a2[5];
  v17 = a2[6];
  if (qword_1ED5B2D28 != -1)
    swift_once();
  v18 = a1 + 5;
  sub_1BA223FC4(&qword_1EF27EBF8, (uint64_t)a2, (uint64_t (*)(uint64_t))type metadata accessor for DebugJournalSummaryViewLayoutAttributesFactory, (uint64_t)&protocol conformance descriptor for DebugJournalSummaryViewLayoutAttributesFactory);
  swift_retain();
  sub_1BA2C14FC();
  swift_release();
  if ((v50[423] & 1) != 0)
  {
    if (v7 >> 62 == 2 && (v7 & 0xFFFFFFFFFFFFFFF7) == 0x8000000000000020 && !(v9 | v8 | v10))
    {
      sub_1BA24D1AC((uint64_t)v50);
    }
    else
    {
      v37 = *a1;
      v38 = v24;
      v39 = v25;
      v40 = v26;
      v41 = v27;
      v42 = v7;
      v43 = v8;
      v44 = v9;
      v45 = v10;
      v21 = a1[6];
      v46 = *v18;
      v47 = v21;
      v22 = a1[8];
      v48 = a1[7];
      v49 = v22;
      v30 = v11;
      v31 = v12;
      v32 = v14;
      v33 = v13;
      v34 = v16;
      v35 = v15;
      v36 = v17;
      sub_1BA24CF30((double *)&v30, (uint64_t)v50, a4, a5);
      sub_1BA24D1A0((uint64_t)v50);
    }
  }
  else
  {
    v37 = *a1;
    v38 = v24;
    v39 = v25;
    v40 = v26;
    v41 = v27;
    v42 = v7;
    v43 = v8;
    v44 = v9;
    v45 = v10;
    v19 = a1[6];
    v46 = *v18;
    v47 = v19;
    v20 = a1[8];
    v48 = a1[7];
    v49 = v20;
    v30 = v11;
    v31 = v12;
    v32 = v14;
    v33 = v13;
    v34 = v16;
    v35 = v15;
    v36 = v17;
    sub_1BA24BFD0((uint64_t)&v37, (CGFloat *)&v30, (uint64_t)v50, a4, a5);
    sub_1BA24D1F0((uint64_t)v50);
  }
  return sub_1BA249C78(v50, a3);
}

double sub_1BA24BFD0@<D0>(uint64_t a1@<X0>, CGFloat *a2@<X1>, uint64_t a3@<X8>, CGFloat a4@<D0>, CGFloat a5@<D1>)
{
  uint64_t v5;
  uint64_t v6;
  double v8;
  double v9;
  double v10;
  _QWORD *v11;
  double v12;
  double v13;
  double v14;
  CGFloat v15;
  double v16;
  uint64_t v17;
  uint64_t inited;
  void **v19;
  void *v20;
  double v21;
  double v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  void *v47;
  id v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  CGFloat v56;
  double v57;
  CGFloat v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  id v63;
  id v64;
  id v65;
  void *v66;
  void *v67;
  id v68;
  double v69;
  double v70;
  double v71;
  CGFloat v72;
  double v73;
  uint64_t v74;
  id v75;
  id v76;
  id v77;
  void *v78;
  void *v79;
  id v80;
  void *v81;
  double v82;
  double v83;
  double v84;
  double v85;
  uint64_t v86;
  id v87;
  id v88;
  id v89;
  id v90;
  void *v91;
  void *v92;
  id v93;
  void *v94;
  void *v95;
  double v96;
  double v97;
  double Width;
  double v99;
  double v100;
  double v101;
  CGFloat v102;
  double v103;
  CGFloat v104;
  CGFloat v105;
  CGFloat v106;
  double v107;
  double v108;
  double v109;
  double v110;
  double v111;
  CGFloat v112;
  CGFloat v113;
  CGFloat v114;
  CGFloat v115;
  CGFloat v116;
  double v117;
  CGFloat v118;
  double v119;
  CGFloat v120;
  CGFloat v121;
  CGFloat v122;
  double v123;
  double MaxY;
  double v125;
  CGFloat v126;
  CGFloat v127;
  CGFloat v128;
  CGFloat v129;
  CGFloat v130;
  double v131;
  CGFloat v132;
  double v133;
  double v134;
  CGFloat v135;
  double v136;
  double result;
  CGFloat v138;
  CGFloat v139;
  id v140;
  CGFloat v141;
  CGFloat v142;
  CGFloat v143;
  CGFloat v144;
  CGFloat v145;
  CGFloat v146;
  double v147;
  CGFloat v148;
  double v149;
  CGFloat v150;
  double height;
  CGFloat v152;
  double v153;
  CGFloat v154;
  double v155;
  void *v156;
  double v157;
  double v158;
  id v159;
  void *v160;
  id v161;
  void *v162;
  double v163;
  double v164;
  id v165;
  CGFloat v168;
  id v169;
  CGFloat v170;
  double v171;
  CGFloat v172;
  double v173;
  CGFloat v174;
  CGFloat v175;
  CGFloat v176;
  CGFloat v177;
  CGFloat v178;
  CGFloat y;
  double v180;
  CGFloat v181;
  CGFloat v182;
  uint64_t v183;
  CGFloat MinY;
  uint64_t v185;
  CGFloat v186;
  id v187;
  id v188;
  id v189;
  id v190;
  CGFloat v191;
  CGFloat v192;
  CGFloat v193;
  CGFloat v194;
  CGFloat v195;
  CGFloat rect;
  CGFloat v197;
  CGFloat v198;
  CGFloat v199;
  CGFloat v200;
  uint64_t v201;
  CGFloat v202;
  uint64_t v203;
  id v204;
  CGFloat v205;
  __int128 v206;
  CGFloat v207;
  CGFloat v208;
  __int128 v209;
  uint64_t v210;
  uint64_t v211;
  CGRect v212;
  CGRect v213;
  CGRect v214;
  CGRect v215;
  CGRect v216;
  CGRect v217;
  CGRect v218;
  CGRect v219;
  CGRect v220;
  CGRect v221;
  CGRect v222;
  CGRect v223;
  CGRect v224;
  CGRect v225;
  CGRect v226;
  CGRect v227;
  CGRect v228;
  CGRect v229;
  CGRect v230;
  CGRect v231;
  CGRect v232;
  CGRect v233;
  CGRect v234;
  CGRect v235;
  CGRect v236;
  CGRect v237;
  CGRect v238;
  CGRect v239;
  CGRect v240;
  CGRect v241;
  CGRect v242;
  CGRect v243;
  CGRect v244;
  CGRect v245;
  CGRect v246;
  CGRect v247;
  CGRect v248;
  CGRect v249;
  CGRect v250;

  v6 = v5;
  v206 = *(_OWORD *)(a1 + 48);
  v203 = *(_QWORD *)(a1 + 64);
  v201 = *(_QWORD *)(a1 + 72);
  v163 = a2[2];
  v8 = a2[4];
  v9 = a2[6];
  if (v8 <= 25.0)
    v8 = 25.0;
  v180 = v8;
  if (v9 <= 25.0)
    v9 = 25.0;
  v157 = v9;
  v168 = *a2;
  v10 = *a2 - v8 - v9;
  v11 = (_QWORD *)(v5 + 16);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 40));
  v165 = sub_1BA27A110();
  sub_1BA2C23FC();
  v152 = v13;
  v154 = v12;
  v15 = v14;
  v181 = v16;
  v17 = *__swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 40));
  sub_1BA24D20C();
  inited = swift_initStackObject();
  v19 = (void **)MEMORY[0x1E0DC1138];
  *(_OWORD *)(inited + 16) = xmmword_1BA2C37C0;
  v20 = *v19;
  *(_QWORD *)(inited + 32) = *v19;
  v187 = (id)objc_opt_self();
  v21 = *(double *)(v17 + 16);
  v22 = *MEMORY[0x1E0DC1430];
  swift_bridgeObjectRetain();
  v23 = v20;
  v24 = objc_msgSend(v187, sel_systemFontOfSize_weight_, v21, v22);
  v183 = sub_1BA21DEE0(0, &qword_1EF27E880);
  *(_QWORD *)(inited + 40) = v24;
  v25 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v183;
  *(_QWORD *)(inited + 72) = v25;
  v189 = (id)objc_opt_self();
  v26 = v25;
  v27 = objc_msgSend(v189, sel_secondaryLabelColor);
  v185 = sub_1BA21DEE0(0, &qword_1EF27EC10);
  *(_QWORD *)(inited + 104) = v185;
  *(_QWORD *)(inited + 80) = v27;
  sub_1BA265D04(inited);
  v28 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v29 = (void *)sub_1BA2C212C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BA223FC4((unint64_t *)&qword_1EF27E4B0, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BA2C3580);
  v30 = (void *)sub_1BA2C20C0();
  swift_bridgeObjectRelease();
  v31 = objc_msgSend(v28, sel_initWithString_attributes_, v29, v30);

  v162 = v31;
  sub_1BA2C23FC();
  v150 = v32;
  v178 = v33;
  v182 = v34;
  v200 = v35;
  __swift_project_boxed_opaque_existential_1(v11, *(_QWORD *)(v6 + 40));
  v161 = sub_1BA27A110();
  sub_1BA2C23FC();
  v146 = v37;
  v148 = v36;
  v199 = v38;
  rect = v39;
  sub_1BA22068C((uint64_t)v11, (uint64_t)&v209);
  v40 = *__swift_project_boxed_opaque_existential_1(&v209, v211);
  v41 = swift_initStackObject();
  *(_OWORD *)(v41 + 16) = xmmword_1BA2C37C0;
  *(_QWORD *)(v41 + 32) = v23;
  v42 = *(double *)(v40 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v43 = v23;
  *(_QWORD *)(v41 + 40) = objc_msgSend(v187, sel_systemFontOfSize_weight_, v42, v22);
  *(_QWORD *)(v41 + 64) = v183;
  *(_QWORD *)(v41 + 72) = v26;
  v169 = v26;
  v44 = objc_msgSend(v189, sel_secondaryLabelColor);
  *(_QWORD *)(v41 + 104) = v185;
  *(_QWORD *)(v41 + 80) = v44;
  sub_1BA265D04(v41);
  v45 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v46 = (void *)sub_1BA2C212C();
  swift_bridgeObjectRelease();
  v47 = (void *)sub_1BA2C20C0();
  swift_bridgeObjectRelease();
  v48 = objc_msgSend(v45, sel_initWithString_attributes_, v46, v47);
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v209);
  v160 = v48;
  sub_1BA2C23FC();
  v174 = v50;
  v176 = v49;
  v197 = v52;
  v198 = v51;
  __swift_project_boxed_opaque_existential_1(v11, *(_QWORD *)(v6 + 40));
  v159 = sub_1BA27A110();
  sub_1BA2C23FC();
  v143 = v54;
  v144 = v53;
  v56 = v55;
  v58 = v57;
  v59 = __swift_project_boxed_opaque_existential_1(v11, *(_QWORD *)(v6 + 40));
  v209 = v206;
  v210 = v203;
  v211 = v201;
  JournalEntryStatus.shortDescription.getter();
  v60 = *v59;
  v61 = swift_initStackObject();
  *(_OWORD *)(v61 + 16) = xmmword_1BA2C37C0;
  *(_QWORD *)(v61 + 32) = v43;
  v62 = *(double *)(v60 + 16);
  swift_bridgeObjectRetain();
  v63 = v43;
  *(_QWORD *)(v61 + 40) = objc_msgSend(v187, sel_systemFontOfSize_weight_, v62, v22);
  *(_QWORD *)(v61 + 64) = v183;
  *(_QWORD *)(v61 + 72) = v169;
  v204 = v169;
  v64 = objc_msgSend(v189, sel_secondaryLabelColor);
  *(_QWORD *)(v61 + 104) = v185;
  *(_QWORD *)(v61 + 80) = v64;
  sub_1BA265D04(v61);
  v65 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v66 = (void *)sub_1BA2C212C();
  swift_bridgeObjectRelease();
  v67 = (void *)sub_1BA2C20C0();
  swift_bridgeObjectRelease();
  v68 = objc_msgSend(v65, sel_initWithString_attributes_, v66, v67);
  swift_bridgeObjectRelease();

  v156 = v68;
  sub_1BA2C23FC();
  v170 = v70;
  v172 = v69;
  v72 = v71;
  v207 = v73;
  v74 = swift_initStackObject();
  *(_OWORD *)(v74 + 16) = xmmword_1BA2C37C0;
  *(_QWORD *)(v74 + 32) = v63;
  v140 = v63;
  objc_msgSend(v187, sel_buttonFontSize);
  *(_QWORD *)(v74 + 40) = objc_msgSend(v187, sel_systemFontOfSize_);
  *(_QWORD *)(v74 + 64) = v183;
  *(_QWORD *)(v74 + 72) = v204;
  v75 = v204;
  v76 = objc_msgSend(v189, sel_systemBlueColor);
  *(_QWORD *)(v74 + 104) = v185;
  *(_QWORD *)(v74 + 80) = v76;
  sub_1BA265D04(v74);
  v77 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v78 = (void *)sub_1BA2C212C();
  v79 = (void *)sub_1BA2C20C0();
  swift_bridgeObjectRelease();
  v80 = objc_msgSend(v77, sel_initWithString_attributes_, v78, v79);

  v81 = v80;
  sub_1BA2C23FC();
  v138 = v83;
  v139 = v82;
  v202 = v85;
  v205 = v84;
  v86 = swift_initStackObject();
  *(_OWORD *)(v86 + 16) = xmmword_1BA2C37C0;
  *(_QWORD *)(v86 + 32) = v140;
  v87 = v140;
  objc_msgSend(v187, sel_buttonFontSize);
  *(_QWORD *)(v86 + 40) = objc_msgSend(v187, sel_systemFontOfSize_);
  *(_QWORD *)(v86 + 64) = v183;
  *(_QWORD *)(v86 + 72) = v75;
  v88 = v75;
  v89 = objc_msgSend(v189, sel_systemBlueColor);
  *(_QWORD *)(v86 + 104) = v185;
  *(_QWORD *)(v86 + 80) = v89;
  sub_1BA265D04(v86);
  v90 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v91 = (void *)sub_1BA2C212C();
  v92 = (void *)sub_1BA2C20C0();
  swift_bridgeObjectRelease();
  v93 = objc_msgSend(v90, sel_initWithString_attributes_, v91, v92);

  sub_1BA2C23FC();
  v188 = v95;
  v190 = v94;
  v141 = v96;
  v186 = v97;
  v212.origin.y = v152;
  v212.origin.x = v154;
  v195 = v15;
  v212.size.width = v15;
  v212.size.height = v181;
  Width = CGRectGetWidth(v212);
  v213.origin.y = v146;
  v213.origin.x = v148;
  v213.size.width = v199;
  v213.size.height = rect;
  v99 = CGRectGetWidth(v213);
  v214.origin.y = v143;
  v214.origin.x = v144;
  v193 = v58;
  v194 = v56;
  v214.size.width = v56;
  v214.size.height = v58;
  v100 = CGRectGetWidth(v214);
  if (Width > v99)
    v101 = Width;
  else
    v101 = v99;
  v102 = v182;
  if (v101 > v100)
    v103 = v101;
  else
    v103 = v100;
  v104 = v150;
  v105 = v178;
  v106 = v200;
  v107 = CGRectGetWidth(*(CGRect *)(&v102 - 2));
  v215.origin.y = v174;
  v215.origin.x = v176;
  v215.size.height = v197;
  v215.size.width = v198;
  v108 = CGRectGetWidth(v215);
  v216.origin.y = v170;
  v216.origin.x = v172;
  v192 = v72;
  v216.size.width = v72;
  v216.size.height = v207;
  v109 = CGRectGetWidth(v216);
  if (v107 > v108)
    v110 = v107;
  else
    v110 = v108;
  if (v110 > v109)
    v109 = v110;
  v111 = v157 + v180 + v103 + 10.0 + v109;
  if (v10 >= v111)
  {
    v119 = v10;
    v228.origin.x = v150;
    v228.origin.y = v178;
    v228.size.width = v182;
    v228.size.height = v200;
    v158 = v111 - CGRectGetWidth(v228);
    v208 = 20.0;
    v229.origin.y = 20.0;
    v229.origin.x = v180;
    v229.size.width = v15;
    v229.size.height = v181;
    MinY = CGRectGetMinY(v229);
    v230.origin.y = 20.0;
    v230.origin.x = v180;
    v230.size.width = v15;
    v230.size.height = v181;
    v120 = CGRectGetMaxY(v230) + 5.0;
    v231.origin.y = v174;
    v231.origin.x = v176;
    v231.size.height = v197;
    v231.size.width = v198;
    v155 = v111 - CGRectGetWidth(v231);
    v232.origin.x = v180;
    v232.origin.y = v120;
    v232.size.width = v199;
    v232.size.height = rect;
    v177 = CGRectGetMinY(v232);
    y = v120;
    v233.origin.x = v180;
    v233.origin.y = v120;
    v233.size.width = v199;
    v233.size.height = rect;
    v121 = CGRectGetMaxY(v233) + 5.0;
    v234.origin.y = v170;
    v234.origin.x = v172;
    v234.size.width = v72;
    v234.size.height = v207;
    v122 = v111 - CGRectGetWidth(v234);
    v235.origin.x = v180;
    v175 = v121;
    v235.origin.y = v121;
    v235.size.height = v193;
    v235.size.width = v194;
    v117 = CGRectGetMinY(v235);
    v236.origin.y = v138;
    v236.origin.x = v139;
    v236.size.height = v202;
    v236.size.width = v205;
    v123 = v111 + CGRectGetWidth(v236);
    v145 = v122;
    v237.origin.x = v122;
    v237.origin.y = v117;
    v237.size.width = v72;
    v237.size.height = v207;
    MaxY = CGRectGetMaxY(v237);
    v125 = MaxY;
    if (v123 >= v119)
    {
      v127 = MaxY + 10.0;
      v243.origin.x = v180;
      v243.origin.y = v125 + 10.0;
      v243.size.width = v205;
      v243.size.height = v202;
      v128 = CGRectGetMaxX(v243) + 10.0;
      v244.origin.x = v180;
      v244.origin.y = v127;
      v244.size.width = v205;
      v244.size.height = v202;
      v129 = CGRectGetMinY(v244);
      v245.origin.x = v180;
      v245.origin.y = v127;
      v245.size.width = v205;
      v245.size.height = v202;
      v246.size.height = CGRectGetHeight(v245);
      v171 = v129;
      v173 = v128;
      v246.origin.x = v128;
      v246.origin.y = v129;
      v246.size.width = 1.0 / v163;
      height = v246.size.height;
      v153 = CGRectGetMaxX(v246) + 10.0;
      v247.origin.x = v180;
      v208 = v127;
      v247.origin.y = v127;
      v247.size.width = v205;
      v247.size.height = v202;
      v147 = 1.0 / v163;
      v149 = CGRectGetMinY(v247);
      v115 = v180;
    }
    else
    {
      v238.origin.y = v138;
      v238.origin.x = v139;
      v238.size.width = v205;
      v238.size.height = v202;
      v126 = v180 + v119 - CGRectGetWidth(v238);
      v239.origin.y = 20.0;
      v239.origin.x = v126;
      v239.size.width = v205;
      v239.size.height = v202;
      v171 = (v125 + 20.0) * 0.5;
      v173 = v180 + v119 - CGRectGetWidth(v239) * 0.7;
      v240.origin.y = 20.0;
      v240.origin.x = v126;
      v240.size.width = v205;
      v240.size.height = v202;
      v147 = CGRectGetWidth(v240) * 0.7;
      *(_QWORD *)&v241.origin.x = v190;
      v241.origin.y = v141;
      *(_QWORD *)&v241.size.width = v188;
      v241.size.height = v186;
      v153 = v180 + v119 - CGRectGetWidth(v241);
      *(_QWORD *)&v242.origin.x = v190;
      v242.origin.y = v141;
      *(_QWORD *)&v242.size.width = v188;
      v115 = v126;
      v242.size.height = v186;
      v149 = v125 - CGRectGetHeight(v242);
      height = 1.0 / v163;
    }
    v164 = 1.0 / v163;
    v118 = v207;
    v116 = v145;
  }
  else
  {
    v217.origin.y = 20.0;
    v217.origin.x = v180;
    v217.size.width = v15;
    v217.size.height = v181;
    v218.origin.y = CGRectGetMaxY(v217) + 5.0;
    v218.origin.x = v180;
    MinY = v218.origin.y;
    v218.size.width = v182;
    v218.size.height = v200;
    v219.origin.y = CGRectGetMaxY(v218) + 5.0;
    v219.origin.x = v180;
    y = v219.origin.y;
    v219.size.width = v199;
    v219.size.height = rect;
    v220.origin.y = CGRectGetMaxY(v219) + 5.0;
    v220.origin.x = v180;
    v177 = v220.origin.y;
    v220.size.height = v197;
    v220.size.width = v198;
    v221.origin.y = CGRectGetMaxY(v220) + 5.0;
    v221.origin.x = v180;
    v175 = v221.origin.y;
    v221.size.height = v58;
    v221.size.width = v194;
    v222.origin.y = CGRectGetMaxY(v221) + 5.0;
    v191 = v222.origin.y;
    v222.origin.x = v180;
    v222.size.width = v72;
    v222.size.height = v207;
    v112 = CGRectGetMaxY(v222) + 10.0;
    v223.origin.x = v180;
    v223.origin.y = v112;
    v223.size.width = v205;
    v223.size.height = v202;
    v113 = CGRectGetMaxX(v223) + 10.0;
    v224.origin.x = v180;
    v224.origin.y = v112;
    v224.size.width = v205;
    v224.size.height = v202;
    v114 = CGRectGetMinY(v224);
    v225.origin.x = v180;
    v225.origin.y = v112;
    v225.size.width = v205;
    v225.size.height = v202;
    v226.size.height = CGRectGetHeight(v225);
    v171 = v114;
    v173 = v113;
    v226.origin.x = v113;
    v226.origin.y = v114;
    v226.size.width = 1.0 / v163;
    height = v226.size.height;
    v153 = CGRectGetMaxX(v226) + 10.0;
    v227.origin.x = v180;
    v208 = v112;
    v227.origin.y = v112;
    v227.size.width = v205;
    v227.size.height = v202;
    v147 = 1.0 / v163;
    v149 = CGRectGetMinY(v227);
    v115 = v180;
    v116 = v180;
    v158 = v180;
    v164 = 1.0 / v163;
    v155 = v180;
    v117 = v191;
    v118 = v207;
  }
  v130 = v116;
  v131 = v117;
  v132 = v72;
  v133 = CGRectGetMaxY(*(CGRect *)(&v118 - 3));
  v248.origin.x = v115;
  v248.origin.y = v208;
  v248.size.height = v202;
  v248.size.width = v205;
  v134 = CGRectGetMaxY(v248);
  if (v133 > v134)
    v134 = v133;
  v135 = v134 + 20.0;
  v249.origin.x = a4;
  v249.origin.y = a5;
  v249.size.width = v168;
  v249.size.height = v135;
  v142 = CGRectGetHeight(v249) + -30.0;
  v250.origin.x = a4;
  v250.origin.y = a5;
  v250.size.width = v168;
  v250.size.height = v135;
  v136 = CGRectGetHeight(v250);

  *(CGFloat *)a3 = a4;
  *(CGFloat *)(a3 + 8) = a5;
  *(CGFloat *)(a3 + 48) = v195;
  *(CGFloat *)(a3 + 56) = v181;
  *(double *)(a3 + 64) = v158;
  *(CGFloat *)(a3 + 72) = MinY;
  *(CGFloat *)(a3 + 80) = v182;
  *(CGFloat *)(a3 + 88) = v200;
  *(CGFloat *)(a3 + 112) = v199;
  *(CGFloat *)(a3 + 120) = rect;
  result = v136 - v164;
  *(CGFloat *)(a3 + 16) = v168;
  *(CGFloat *)(a3 + 24) = v135;
  *(double *)(a3 + 32) = v180;
  *(_QWORD *)(a3 + 40) = 0x4034000000000000;
  *(double *)(a3 + 96) = v180;
  *(CGFloat *)(a3 + 104) = y;
  *(double *)(a3 + 128) = v155;
  *(CGFloat *)(a3 + 136) = v177;
  *(CGFloat *)(a3 + 144) = v198;
  *(CGFloat *)(a3 + 152) = v197;
  *(double *)(a3 + 160) = v180;
  *(CGFloat *)(a3 + 168) = v175;
  *(CGFloat *)(a3 + 176) = v194;
  *(CGFloat *)(a3 + 184) = v193;
  *(CGFloat *)(a3 + 192) = v116;
  *(double *)(a3 + 200) = v117;
  *(CGFloat *)(a3 + 208) = v192;
  *(CGFloat *)(a3 + 216) = v207;
  *(double *)(a3 + 224) = v180 * 0.5;
  *(_OWORD *)(a3 + 232) = xmmword_1BA2C4D50;
  *(CGFloat *)(a3 + 248) = v142;
  *(CGFloat *)(a3 + 256) = v115;
  *(CGFloat *)(a3 + 264) = v208;
  *(CGFloat *)(a3 + 272) = v205;
  *(CGFloat *)(a3 + 280) = v202;
  *(double *)(a3 + 288) = v173;
  *(double *)(a3 + 296) = v171;
  *(double *)(a3 + 304) = v147;
  *(double *)(a3 + 312) = height;
  *(double *)(a3 + 320) = v153;
  *(double *)(a3 + 328) = v149;
  *(_QWORD *)(a3 + 336) = v188;
  *(CGFloat *)(a3 + 344) = v186;
  *(_QWORD *)(a3 + 352) = 0;
  *(_QWORD *)(a3 + 360) = 0;
  *(CGFloat *)(a3 + 368) = v168;
  *(double *)(a3 + 376) = v164;
  *(_QWORD *)(a3 + 384) = 0;
  *(double *)(a3 + 392) = v136 - v164;
  *(CGFloat *)(a3 + 400) = v168;
  *(double *)(a3 + 408) = v164;
  return result;
}

double sub_1BA24CF30@<D0>(double *a1@<X1>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>)
{
  uint64_t v4;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  CGFloat height;
  CGFloat width;
  CGFloat v15;
  double v16;
  BOOL v17;
  double v18;
  CGFloat v19;
  double v20;
  double result;
  CGFloat v22;
  CGFloat v23;
  double v24;
  double v25;
  double v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;

  v8 = *a1;
  v26 = a1[2];
  if (a1[4] > 25.0)
    v9 = a1[4];
  else
    v9 = 25.0;
  if (a1[6] > 25.0)
    v10 = a1[6];
  else
    v10 = 25.0;
  v11 = v8 - v9 - v10;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 40));
  JournalEntryStatus.shortDescription.getter();
  v12 = sub_1BA27A110();
  swift_bridgeObjectRelease();
  sub_1BA2C23FC();
  height = v27.size.height;
  width = v27.size.width;
  v23 = v27.size.width;
  v15 = CGRectGetHeight(v27);
  v16 = (v15 + -44.0) * 0.5 + 7.0;
  v17 = v15 <= 51.0;
  v18 = 10.5;
  if (v17)
    v18 = v16;
  v24 = v18;
  v25 = v9 + v11 + -22.0;
  v28.origin.y = 7.0;
  v28.origin.x = v9;
  v28.size.width = width;
  v28.size.height = height;
  v19 = CGRectGetMaxY(v28) + 7.0;
  v29.origin.x = a3;
  v29.origin.y = a4;
  v29.size.width = v8;
  v29.size.height = v19;
  v22 = CGRectGetHeight(v29) + -7.0;
  v30.origin.x = a3;
  v30.origin.y = a4;
  v30.size.width = v8;
  v30.size.height = v19;
  v20 = CGRectGetHeight(v30);

  result = v20 - 1.0 / v26;
  *(CGFloat *)a2 = a3;
  *(CGFloat *)(a2 + 8) = a4;
  *(double *)(a2 + 16) = v8;
  *(CGFloat *)(a2 + 24) = v19;
  *(double *)(a2 + 32) = v9 * 0.5;
  *(_OWORD *)(a2 + 40) = xmmword_1BA2C4D60;
  *(CGFloat *)(a2 + 56) = v22;
  *(double *)(a2 + 64) = v9;
  *(_QWORD *)(a2 + 72) = 0x401C000000000000;
  *(CGFloat *)(a2 + 80) = v23;
  *(CGFloat *)(a2 + 88) = height;
  *(double *)(a2 + 96) = v25;
  *(double *)(a2 + 104) = v24;
  *(int64x2_t *)(a2 + 112) = vdupq_n_s64(0x4046000000000000uLL);
  *(_QWORD *)(a2 + 128) = 0;
  *(_QWORD *)(a2 + 136) = 0;
  *(double *)(a2 + 144) = v8;
  *(double *)(a2 + 152) = 1.0 / v26;
  *(_QWORD *)(a2 + 160) = 0;
  *(double *)(a2 + 168) = result;
  *(double *)(a2 + 176) = v8;
  *(double *)(a2 + 184) = 1.0 / v26;
  return result;
}

uint64_t DebugJournalSummaryViewLayoutAttributesFactory.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t DebugJournalSummaryViewLayoutAttributesFactory.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

void *sub_1BA24D180@<X0>(__int128 *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>, CGFloat a4@<D0>, CGFloat a5@<D1>)
{
  return DebugJournalSummaryViewLayoutAttributesFactory.makeLayoutAttributes(for:origin:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1BA24D1A0(uint64_t result)
{
  *(_BYTE *)(result + 416) = 1;
  return result;
}

double sub_1BA24D1AC(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 416) = 2;
  return result;
}

uint64_t sub_1BA24D1F0(uint64_t result)
{
  *(_BYTE *)(result + 416) = 0;
  return result;
}

uint64_t dispatch thunk of DebugJournalSummaryViewLayoutAttributesFactoryType.makeLayoutAttributes(for:origin:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t method lookup function for DebugJournalSummaryViewLayoutAttributesFactory()
{
  return swift_lookUpClassMethod();
}

void sub_1BA24D20C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF27EC00)
  {
    sub_1BA24D260();
    v0 = sub_1BA2C269C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF27EC00);
  }
}

void sub_1BA24D260()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF27EC08)
  {
    type metadata accessor for Key(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF27EC08);
  }
}

uint64_t type metadata accessor for DebugAdsMetricsView()
{
  return objc_opt_self();
}

void *sub_1BA24D428()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC7NewsAds19DebugAdsMetricsView_privacyMarkerView);
  v2 = v1;
  return v1;
}

uint64_t sub_1BA24D454()
{
  return sub_1BA24D4C0();
}

uint64_t sub_1BA24D460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA24D510(a1, a2, a3, &OBJC_IVAR____TtC7NewsAds19DebugAdsMetricsView_readyDelegate);
}

uint64_t (*sub_1BA24D46C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BA24D4B4()
{
  return sub_1BA24D4C0();
}

uint64_t sub_1BA24D4C0()
{
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t sub_1BA24D504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA24D510(a1, a2, a3, &OBJC_IVAR____TtC7NewsAds19DebugAdsMetricsView_interactionPresentationDelegate);
}

uint64_t sub_1BA24D510(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  _QWORD *v6;

  v6 = (_QWORD *)(v4 + *a4);
  swift_beginAccess();
  *v6 = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1BA24D55C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t dispatch thunk of BannerAdHosting.bannerView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BannerAdHosting.debugView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t AdPolicyPlacement.placementIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

double AdPolicyPlacement.position.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

NewsAds::AdPolicyPlacement __swiftcall AdPolicyPlacement.init(placementIdentifier:position:)(Swift::String placementIdentifier, CGPoint position)
{
  uint64_t v2;
  NewsAds::AdPolicyPlacement result;

  *(Swift::String *)v2 = placementIdentifier;
  *(CGFloat *)(v2 + 16) = position.x;
  *(CGFloat *)(v2 + 24) = position.y;
  result.position.y = position.y;
  result.position.x = position.x;
  result.placementIdentifier = placementIdentifier;
  return result;
}

uint64_t initializeWithCopy for AdPolicyPlacement(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AdPolicyPlacement(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for AdPolicyPlacement(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

uint64_t storeEnumTagSinglePayload for AdHostDescription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

id sub_1BA24D7A4()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id result;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t inited;
  void **v16;
  void *v17;
  void *v18;
  double v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  void *v36;
  _QWORD aBlock[6];
  objc_super v38;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = sub_1BA2C2180();
  MEMORY[0x1E0C80A78](v2);
  v38.receiver = v0;
  v38.super_class = ObjectType;
  objc_msgSendSuper2(&v38, sel_viewDidLoad);
  v3 = *(void **)&v0[OBJC_IVAR____TtC7NewsAds33DebugJournalCodableViewController_textView];
  objc_msgSend(v3, sel_setTextContainerInset_, 20.0, 10.0, 20.0, 10.0);
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_secondarySystemBackgroundColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v5);

  objc_msgSend(v3, sel_setEditable_, 0);
  result = objc_msgSend(v0, sel_view);
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  v7 = result;
  objc_msgSend(result, sel_addSubview_, v3);

  __swift_project_boxed_opaque_existential_1(&v0[OBJC_IVAR____TtC7NewsAds33DebugJournalCodableViewController_codable], *(_QWORD *)&v0[OBJC_IVAR____TtC7NewsAds33DebugJournalCodableViewController_codable + 24]);
  result = (id)sub_1BA2A5E38();
  if (v8 >> 60 != 15)
  {
    v9 = (uint64_t)result;
    v10 = v8;
    sub_1BA2C2174();
    sub_1BA2C215C();
    if (!v11)
      return (id)sub_1BA24E01C(v9, v10);
    v12 = objc_allocWithZone(MEMORY[0x1E0CB38E8]);
    v13 = sub_1BA24E074(0x3A2022292A2E2822, 0xE800000000000000, 0);
    v14 = v13;
    if (v13)
    {
      sub_1BA24D20C();
      inited = swift_initStackObject();
      v16 = (void **)MEMORY[0x1E0DC1138];
      *(_OWORD *)(inited + 16) = xmmword_1BA2C37C0;
      v17 = *v16;
      *(_QWORD *)(inited + 32) = *v16;
      v36 = v14;
      v18 = (void *)objc_opt_self();
      v19 = *MEMORY[0x1E0DC1440];
      swift_bridgeObjectRetain();
      v20 = v17;
      v21 = objc_msgSend(v18, sel_monospacedSystemFontOfSize_weight_, 15.0, v19);
      v22 = sub_1BA21DEE0(0, &qword_1EF27E880);
      *(_QWORD *)(inited + 40) = v21;
      v23 = (void *)*MEMORY[0x1E0DC1140];
      *(_QWORD *)(inited + 64) = v22;
      *(_QWORD *)(inited + 72) = v23;
      v24 = v23;
      v25 = objc_msgSend(v4, sel_labelColor);
      *(_QWORD *)(inited + 104) = sub_1BA21DEE0(0, &qword_1EF27EC10);
      *(_QWORD *)(inited + 80) = v25;
      sub_1BA265D04(inited);
      v26 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
      v27 = (void *)sub_1BA2C212C();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_1BA24E14C();
      v28 = (void *)sub_1BA2C20C0();
      swift_bridgeObjectRelease();
      v29 = objc_msgSend(v26, sel_initWithString_attributes_, v27, v28);

      v30 = (void *)sub_1BA2C212C();
      v31 = sub_1BA2C21B0();
      swift_bridgeObjectRelease();
      v32 = swift_allocObject();
      *(_QWORD *)(v32 + 16) = v29;
      v33 = swift_allocObject();
      *(_QWORD *)(v33 + 16) = sub_1BA24E1B8;
      *(_QWORD *)(v33 + 24) = v32;
      aBlock[4] = sub_1BA24E1D0;
      aBlock[5] = v33;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BA24DE30;
      aBlock[3] = &block_descriptor_3;
      v34 = _Block_copy(aBlock);
      v35 = v29;
      swift_retain();
      swift_release();
      objc_msgSend(v36, sel_enumerateMatchesInString_options_range_usingBlock_, v30, 2, 0, v31, v34);

      _Block_release(v34);
      LOBYTE(v34) = swift_isEscapingClosureAtFileLocation();
      result = (id)swift_release();
      if ((v34 & 1) == 0)
      {
        objc_msgSend(v3, sel_setAttributedText_, v35);

        sub_1BA24E01C(v9, v10);
        return (id)swift_release();
      }
      __break(1u);
      goto LABEL_12;
    }
    sub_1BA24E01C(v9, v10);
    return (id)swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BA24DCDC(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  void **v9;
  void *v10;
  void *v11;
  double v12;
  id v13;
  id v14;
  void *v15;

  if (a1)
  {
    v5 = objc_msgSend(a1, sel_range);
    v7 = v6;
    sub_1BA24D20C();
    inited = swift_initStackObject();
    v9 = (void **)MEMORY[0x1E0DC1138];
    *(_OWORD *)(inited + 16) = xmmword_1BA2C37D0;
    v10 = *v9;
    *(_QWORD *)(inited + 32) = *v9;
    v11 = (void *)objc_opt_self();
    v12 = *MEMORY[0x1E0DC1448];
    v13 = v10;
    v14 = objc_msgSend(v11, sel_monospacedSystemFontOfSize_weight_, 15.0, v12);
    *(_QWORD *)(inited + 64) = sub_1BA21DEE0(0, &qword_1EF27E880);
    *(_QWORD *)(inited + 40) = v14;
    sub_1BA265D04(inited);
    type metadata accessor for Key(0);
    sub_1BA24E14C();
    v15 = (void *)sub_1BA2C20C0();
    swift_bridgeObjectRelease();
    objc_msgSend(a4, sel_addAttributes_range_, v15, v5, v7);

  }
}

void sub_1BA24DE30(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void (*v7)(void *, uint64_t, uint64_t);
  id v8;

  v7 = *(void (**)(void *, uint64_t, uint64_t))(a1 + 32);
  v8 = a2;
  v7(a2, a3, a4);

}

uint64_t type metadata accessor for DebugJournalCodableViewController()
{
  return objc_opt_self();
}

uint64_t sub_1BA24E01C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1BA24E030(a1, a2);
  return a1;
}

uint64_t sub_1BA24E030(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

id sub_1BA24E074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = (void *)sub_1BA2C212C();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  v6 = objc_msgSend(v3, sel_initWithPattern_options_error_, v5, a3, v10);

  if (v6)
  {
    v7 = v10[0];
  }
  else
  {
    v8 = v10[0];
    sub_1BA2C137C();

    swift_willThrow();
  }
  return v6;
}

unint64_t sub_1BA24E14C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF27E4B0;
  if (!qword_1EF27E4B0)
  {
    type metadata accessor for Key(255);
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C3580, v1);
    atomic_store(result, (unint64_t *)&qword_1EF27E4B0);
  }
  return result;
}

uint64_t sub_1BA24E194()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BA24E1B8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1BA24DCDC(a1, a2, a3, *(void **)(v3 + 16));
}

uint64_t sub_1BA24E1C0()
{
  return swift_deallocObject();
}

uint64_t sub_1BA24E1D0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

id sub_1BA24E1F0(uint64_t a1, objc_class *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_2;
  char *v9;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  objc_super v15;
  uint64_t v16[6];

  v16[3] = a3;
  v16[4] = a4;
  v16[5] = a5;
  boxed_opaque_existential_2 = __swift_allocate_boxed_opaque_existential_2(v16);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_2, a1, a3);
  v9 = (char *)objc_allocWithZone(a2);
  v10 = OBJC_IVAR____TtC7NewsAds33DebugJournalCodableViewController_textView;
  v11 = objc_allocWithZone(MEMORY[0x1E0DC3E50]);
  v12 = v9;
  *(_QWORD *)&v9[v10] = objc_msgSend(v11, sel_init);
  sub_1BA233800((uint64_t)v16, (uint64_t)&v12[OBJC_IVAR____TtC7NewsAds33DebugJournalCodableViewController_codable]);

  v15.receiver = v12;
  v15.super_class = a2;
  v13 = objc_msgSendSuper2(&v15, sel_initWithNibName_bundle_, 0, 0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return v13;
}

uint64_t sub_1BA24E2D4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BA26D9F0(*a1, *a2);
}

uint64_t sub_1BA24E2E0()
{
  sub_1BA2C2720();
  sub_1BA2C21A4();
  swift_bridgeObjectRelease();
  return sub_1BA2C2738();
}

uint64_t sub_1BA24E37C()
{
  sub_1BA2C21A4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA24E3F4()
{
  sub_1BA2C2720();
  sub_1BA2C21A4();
  swift_bridgeObjectRelease();
  return sub_1BA2C2738();
}

uint64_t sub_1BA24E48C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA2513A4();
  *a1 = result;
  return result;
}

void sub_1BA24E4B8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x746361706D6F63;
  if (v2 != 1)
  {
    v5 = 0x6E6564646968;
    v4 = 0xE600000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x72616C75676572;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BA24E514()
{
  sub_1BA251BE0();
  return sub_1BA2C2258();
}

uint64_t sub_1BA24E570()
{
  sub_1BA251BE0();
  return sub_1BA2C2228();
}

uint64_t sub_1BA24E5BC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA24E5EC + 4 * aF[a1]))(0x656D617266, 0xE500000000000000);
}

unint64_t sub_1BA24E5EC()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1BA24E710()
{
  unsigned __int8 *v0;

  return sub_1BA24E5BC(*v0);
}

uint64_t sub_1BA24E718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA2513EC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BA24E73C(_BYTE *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_1BA24E748()
{
  sub_1BA24EEB8();
  return sub_1BA2C275C();
}

uint64_t sub_1BA24E770()
{
  sub_1BA24EEB8();
  return sub_1BA2C2768();
}

uint64_t DebugJournalSummaryViewLayoutAttributes.Regular.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  char v61;

  sub_1BA236F78(0, &qword_1EF27EC90, (uint64_t (*)(void))sub_1BA24EEB8, (uint64_t)&type metadata for DebugJournalSummaryViewLayoutAttributes.Regular.CodingKeys, MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v24 - v7;
  v57 = *v1;
  v9 = *((_QWORD *)v1 + 2);
  v10 = *((_QWORD *)v1 + 3);
  v11 = *((_QWORD *)v1 + 4);
  v55 = *((_QWORD *)v1 + 5);
  v56 = v11;
  v12 = *((_QWORD *)v1 + 6);
  v53 = *((_QWORD *)v1 + 7);
  v54 = v12;
  v13 = *((_QWORD *)v1 + 8);
  v51 = *((_QWORD *)v1 + 9);
  v52 = v13;
  v50 = *((_QWORD *)v1 + 10);
  v49 = *((_QWORD *)v1 + 11);
  v46 = v1[6];
  v48 = *((_QWORD *)v1 + 14);
  v47 = *((_QWORD *)v1 + 15);
  v43 = v1[8];
  v45 = *((_QWORD *)v1 + 18);
  v44 = *((_QWORD *)v1 + 19);
  v40 = v1[10];
  v42 = *((_QWORD *)v1 + 22);
  v41 = *((_QWORD *)v1 + 23);
  v37 = v1[12];
  v39 = *((_QWORD *)v1 + 26);
  v38 = *((_QWORD *)v1 + 27);
  v34 = v1[14];
  v36 = *((_QWORD *)v1 + 30);
  v35 = *((_QWORD *)v1 + 31);
  v14 = a1[3];
  v31 = v1[16];
  v32 = *((_QWORD *)v1 + 34);
  v33 = *((_QWORD *)v1 + 35);
  v28 = v1[18];
  v29 = *((_QWORD *)v1 + 38);
  v30 = *((_QWORD *)v1 + 39);
  v25 = v1[20];
  v26 = *((_QWORD *)v1 + 42);
  v27 = *((_QWORD *)v1 + 43);
  *(_QWORD *)&v24 = *((_QWORD *)v1 + 44);
  v15 = *((_QWORD *)v1 + 46);
  *((_QWORD *)&v24 + 1) = *((_QWORD *)v1 + 45);
  v17 = *((_QWORD *)v1 + 47);
  v16 = *((_QWORD *)v1 + 48);
  v18 = *((_QWORD *)v1 + 49);
  v19 = *((_QWORD *)v1 + 50);
  v20 = *((_QWORD *)v1 + 51);
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1BA24EEB8();
  sub_1BA2C2750();
  v58 = v57;
  v59 = v9;
  v60 = v10;
  v61 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA24F660(&qword_1EF27ECA0, MEMORY[0x1E0C9B9C0]);
  sub_1BA2C2684();
  if (!v2)
  {
    v22 = v51;
    v21 = v52;
    *(_QWORD *)&v58 = v56;
    *((_QWORD *)&v58 + 1) = v55;
    v59 = v54;
    v60 = v53;
    v61 = 1;
    sub_1BA2C2684();
    *(_QWORD *)&v58 = v21;
    *((_QWORD *)&v58 + 1) = v22;
    v59 = v50;
    v60 = v49;
    v61 = 2;
    sub_1BA2C2684();
    v58 = v46;
    v59 = v48;
    v60 = v47;
    v61 = 3;
    sub_1BA2C2684();
    v58 = v43;
    v59 = v45;
    v60 = v44;
    v61 = 4;
    sub_1BA2C2684();
    v58 = v40;
    v59 = v42;
    v60 = v41;
    v61 = 5;
    sub_1BA2C2684();
    v58 = v37;
    v59 = v39;
    v60 = v38;
    v61 = 6;
    sub_1BA2C2684();
    v58 = v34;
    v59 = v36;
    v60 = v35;
    v61 = 7;
    sub_1BA2C2684();
    v58 = v31;
    v59 = v32;
    v60 = v33;
    v61 = 8;
    sub_1BA2C2684();
    v58 = v28;
    v59 = v29;
    v60 = v30;
    v61 = 9;
    sub_1BA2C2684();
    v58 = v25;
    v59 = v26;
    v60 = v27;
    v61 = 10;
    sub_1BA2C2684();
    v58 = v24;
    v59 = v15;
    v60 = v17;
    v61 = 11;
    sub_1BA2C2684();
    *(_QWORD *)&v58 = v16;
    *((_QWORD *)&v58 + 1) = v18;
    v59 = v19;
    v60 = v20;
    v61 = 12;
    sub_1BA2C2684();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1BA24EEB8()
{
  unint64_t result;

  result = qword_1EF27EC98;
  if (!qword_1EF27EC98)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C54C8, &type metadata for DebugJournalSummaryViewLayoutAttributes.Regular.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27EC98);
  }
  return result;
}

uint64_t DebugJournalSummaryViewLayoutAttributes.Regular.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _OWORD *v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  char v88;

  sub_1BA236F78(0, &qword_1EF27ECA8, (uint64_t (*)(void))sub_1BA24EEB8, (uint64_t)&type metadata for DebugJournalSummaryViewLayoutAttributes.Regular.CodingKeys, MEMORY[0x1E0DED048]);
  v85 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v44 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA24EEB8();
  sub_1BA2C2744();
  if (!v2)
  {
    v84 = a2;
    type metadata accessor for CGRect(0);
    v88 = 0;
    sub_1BA24F660(&qword_1EF27ECB0, MEMORY[0x1E0C9B9E0]);
    sub_1BA2C2630();
    v9 = v86;
    v10 = v87;
    v88 = 1;
    sub_1BA2C2630();
    v11 = v86;
    v12 = v87;
    v88 = 2;
    sub_1BA2C2630();
    v80 = *((_QWORD *)&v12 + 1);
    v81 = v12;
    v82 = *((_QWORD *)&v11 + 1);
    v83 = v11;
    v13 = v86;
    v14 = v87;
    v88 = 3;
    sub_1BA2C2630();
    v76 = *((_QWORD *)&v14 + 1);
    v77 = v14;
    v78 = *((_QWORD *)&v13 + 1);
    v79 = v13;
    v15 = v86;
    v16 = v87;
    v88 = 4;
    sub_1BA2C2630();
    v72 = *((_QWORD *)&v16 + 1);
    v73 = v16;
    v74 = *((_QWORD *)&v15 + 1);
    v75 = v15;
    v17 = v86;
    v18 = v87;
    v88 = 5;
    sub_1BA2C2630();
    v68 = *((_QWORD *)&v18 + 1);
    v69 = v18;
    v70 = *((_QWORD *)&v17 + 1);
    v71 = v17;
    v19 = v86;
    v20 = v87;
    v88 = 6;
    sub_1BA2C2630();
    v66 = *((_QWORD *)&v86 + 1);
    v67 = v86;
    v64 = *((_QWORD *)&v87 + 1);
    v65 = v87;
    v88 = 7;
    sub_1BA2C2630();
    v62 = *((_QWORD *)&v86 + 1);
    v63 = v86;
    v60 = *((_QWORD *)&v87 + 1);
    v61 = v87;
    v88 = 8;
    sub_1BA2C2630();
    v58 = *((_QWORD *)&v86 + 1);
    v59 = v86;
    v56 = *((_QWORD *)&v87 + 1);
    v57 = v87;
    v88 = 9;
    sub_1BA2C2630();
    v54 = *((_QWORD *)&v86 + 1);
    v55 = v86;
    v52 = *((_QWORD *)&v87 + 1);
    v53 = v87;
    v88 = 10;
    sub_1BA2C2630();
    v50 = *((_QWORD *)&v86 + 1);
    v51 = v86;
    v48 = *((_QWORD *)&v87 + 1);
    v49 = v87;
    v88 = 11;
    sub_1BA2C2630();
    v46 = *((_QWORD *)&v86 + 1);
    v47 = v86;
    v44 = *((_QWORD *)&v87 + 1);
    v45 = v87;
    v88 = 12;
    sub_1BA2C2630();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v85);
    v22 = v84;
    *v84 = v9;
    v22[1] = v10;
    v23 = v82;
    *((_QWORD *)v22 + 4) = v83;
    *((_QWORD *)v22 + 5) = v23;
    v24 = v80;
    *((_QWORD *)v22 + 6) = v81;
    *((_QWORD *)v22 + 7) = v24;
    v25 = v78;
    *((_QWORD *)v22 + 8) = v79;
    *((_QWORD *)v22 + 9) = v25;
    v26 = v76;
    *((_QWORD *)v22 + 10) = v77;
    *((_QWORD *)v22 + 11) = v26;
    v27 = v74;
    *((_QWORD *)v22 + 12) = v75;
    *((_QWORD *)v22 + 13) = v27;
    v28 = v72;
    *((_QWORD *)v22 + 14) = v73;
    *((_QWORD *)v22 + 15) = v28;
    v29 = v70;
    *((_QWORD *)v22 + 16) = v71;
    *((_QWORD *)v22 + 17) = v29;
    v30 = v68;
    *((_QWORD *)v22 + 18) = v69;
    *((_QWORD *)v22 + 19) = v30;
    v22[10] = v19;
    v22[11] = v20;
    v31 = v66;
    *((_QWORD *)v22 + 24) = v67;
    *((_QWORD *)v22 + 25) = v31;
    v32 = v64;
    *((_QWORD *)v22 + 26) = v65;
    *((_QWORD *)v22 + 27) = v32;
    v33 = v62;
    *((_QWORD *)v22 + 28) = v63;
    *((_QWORD *)v22 + 29) = v33;
    v34 = v60;
    *((_QWORD *)v22 + 30) = v61;
    *((_QWORD *)v22 + 31) = v34;
    v35 = v58;
    *((_QWORD *)v22 + 32) = v59;
    *((_QWORD *)v22 + 33) = v35;
    v36 = v56;
    *((_QWORD *)v22 + 34) = v57;
    *((_QWORD *)v22 + 35) = v36;
    v37 = v54;
    *((_QWORD *)v22 + 36) = v55;
    *((_QWORD *)v22 + 37) = v37;
    v38 = v52;
    *((_QWORD *)v22 + 38) = v53;
    *((_QWORD *)v22 + 39) = v38;
    v39 = v50;
    *((_QWORD *)v22 + 40) = v51;
    *((_QWORD *)v22 + 41) = v39;
    v40 = v48;
    *((_QWORD *)v22 + 42) = v49;
    *((_QWORD *)v22 + 43) = v40;
    v41 = v46;
    *((_QWORD *)v22 + 44) = v47;
    *((_QWORD *)v22 + 45) = v41;
    v42 = v44;
    *((_QWORD *)v22 + 46) = v45;
    *((_QWORD *)v22 + 47) = v42;
    v43 = v87;
    v22[24] = v86;
    v22[25] = v43;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BA24F660(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for CGRect(255);
    result = MEMORY[0x1BCCD93D0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA24F6A0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA24F6D0 + 4 * byte_1BA2C4EFD[a1]))(0x656D617266, 0xE500000000000000);
}

unint64_t sub_1BA24F6D0()
{
  return 0xD000000000000018;
}

uint64_t sub_1BA24F75C@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return DebugJournalSummaryViewLayoutAttributes.Regular.init(from:)(a1, a2);
}

uint64_t sub_1BA24F770(_QWORD *a1)
{
  return DebugJournalSummaryViewLayoutAttributes.Regular.encode(to:)(a1);
}

uint64_t sub_1BA24F784()
{
  unsigned __int8 *v0;

  return sub_1BA24F6A0(*v0);
}

uint64_t sub_1BA24F78C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA2518A4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BA24F7B0(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1BA24F7BC()
{
  sub_1BA24FBAC();
  return sub_1BA2C275C();
}

uint64_t sub_1BA24F7E4()
{
  sub_1BA24FBAC();
  return sub_1BA2C2768();
}

uint64_t DebugJournalSummaryViewLayoutAttributes.Compact.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char v46;

  sub_1BA236F78(0, &qword_1EF27ECB8, (uint64_t (*)(void))sub_1BA24FBAC, (uint64_t)&type metadata for DebugJournalSummaryViewLayoutAttributes.Compact.CodingKeys, MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v25 - v7;
  v42 = *v1;
  v9 = *((_QWORD *)v1 + 2);
  v10 = *((_QWORD *)v1 + 3);
  v11 = *((_QWORD *)v1 + 4);
  v40 = *((_QWORD *)v1 + 5);
  v41 = v11;
  v12 = *((_QWORD *)v1 + 6);
  v38 = *((_QWORD *)v1 + 7);
  v39 = v12;
  v13 = *((_QWORD *)v1 + 8);
  v36 = *((_QWORD *)v1 + 9);
  v37 = v13;
  v33 = *((_QWORD *)v1 + 10);
  v32 = *((_QWORD *)v1 + 11);
  v29 = v1[6];
  v31 = *((_QWORD *)v1 + 14);
  v30 = *((_QWORD *)v1 + 15);
  v35 = *((_QWORD *)v1 + 16);
  v14 = *((_QWORD *)v1 + 18);
  v34 = *((_QWORD *)v1 + 17);
  v15 = *((_QWORD *)v1 + 19);
  v16 = *((_QWORD *)v1 + 20);
  v18 = *((_QWORD *)v1 + 21);
  v17 = *((_QWORD *)v1 + 22);
  v19 = *((_QWORD *)v1 + 23);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA24FBAC();
  sub_1BA2C2750();
  v43 = v42;
  v44 = v9;
  v45 = v10;
  v46 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA24F660(&qword_1EF27ECA0, MEMORY[0x1E0C9B9C0]);
  sub_1BA2C2684();
  if (!v2)
  {
    v20 = v36;
    v21 = v37;
    v28 = v15;
    *(_QWORD *)&v42 = v14;
    v22 = v34;
    v23 = v35;
    v26 = v19;
    v27 = v17;
    *(_QWORD *)&v43 = v41;
    *((_QWORD *)&v43 + 1) = v40;
    v44 = v39;
    v45 = v38;
    v46 = 1;
    sub_1BA2C2684();
    *(_QWORD *)&v43 = v21;
    *((_QWORD *)&v43 + 1) = v20;
    v44 = v33;
    v45 = v32;
    v46 = 2;
    sub_1BA2C2684();
    v43 = v29;
    v44 = v31;
    v45 = v30;
    v46 = 3;
    sub_1BA2C2684();
    *(_QWORD *)&v43 = v23;
    *((_QWORD *)&v43 + 1) = v22;
    v44 = v42;
    v45 = v28;
    v46 = 4;
    sub_1BA2C2684();
    *(_QWORD *)&v43 = v16;
    *((_QWORD *)&v43 + 1) = v18;
    v44 = v27;
    v45 = v26;
    v46 = 5;
    sub_1BA2C2684();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1BA24FBAC()
{
  unint64_t result;

  result = qword_1EF27ECC0;
  if (!qword_1EF27ECC0)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C5478, &type metadata for DebugJournalSummaryViewLayoutAttributes.Compact.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27ECC0);
  }
  return result;
}

uint64_t DebugJournalSummaryViewLayoutAttributes.Compact.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  __int128 v41;
  __int128 v42;
  char v43;

  sub_1BA236F78(0, &qword_1EF27ECC8, (uint64_t (*)(void))sub_1BA24FBAC, (uint64_t)&type metadata for DebugJournalSummaryViewLayoutAttributes.Compact.CodingKeys, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v27 - v8;
  v10 = a1[3];
  v40 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1BA24FBAC();
  sub_1BA2C2744();
  if (!v2)
  {
    type metadata accessor for CGRect(0);
    v43 = 0;
    sub_1BA24F660(&qword_1EF27ECB0, MEMORY[0x1E0C9B9E0]);
    sub_1BA2C2630();
    v11 = v41;
    v12 = v42;
    v43 = 1;
    sub_1BA2C2630();
    v13 = v41;
    v14 = v42;
    v43 = 2;
    sub_1BA2C2630();
    v36 = *((_QWORD *)&v14 + 1);
    v37 = v14;
    v38 = *((_QWORD *)&v13 + 1);
    v39 = v13;
    v15 = v41;
    v16 = v42;
    v43 = 3;
    sub_1BA2C2630();
    v32 = *((_QWORD *)&v16 + 1);
    v33 = v16;
    v34 = *((_QWORD *)&v15 + 1);
    v35 = v15;
    v17 = v41;
    v18 = v42;
    v43 = 4;
    sub_1BA2C2630();
    v30 = *((_QWORD *)&v41 + 1);
    v31 = v41;
    v28 = *((_QWORD *)&v42 + 1);
    v29 = v42;
    v43 = 5;
    sub_1BA2C2630();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_OWORD *)a2 = v11;
    *(_OWORD *)(a2 + 16) = v12;
    v20 = v38;
    *(_QWORD *)(a2 + 32) = v39;
    *(_QWORD *)(a2 + 40) = v20;
    v21 = v36;
    *(_QWORD *)(a2 + 48) = v37;
    *(_QWORD *)(a2 + 56) = v21;
    v22 = v34;
    *(_QWORD *)(a2 + 64) = v35;
    *(_QWORD *)(a2 + 72) = v22;
    v23 = v32;
    *(_QWORD *)(a2 + 80) = v33;
    *(_QWORD *)(a2 + 88) = v23;
    *(_OWORD *)(a2 + 96) = v17;
    *(_OWORD *)(a2 + 112) = v18;
    v24 = v30;
    *(_QWORD *)(a2 + 128) = v31;
    *(_QWORD *)(a2 + 136) = v24;
    v25 = v28;
    *(_QWORD *)(a2 + 144) = v29;
    *(_QWORD *)(a2 + 152) = v25;
    v26 = v42;
    *(_OWORD *)(a2 + 160) = v41;
    *(_OWORD *)(a2 + 176) = v26;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
}

uint64_t sub_1BA24FF64@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DebugJournalSummaryViewLayoutAttributes.Compact.init(from:)(a1, a2);
}

uint64_t sub_1BA24FF78(_QWORD *a1)
{
  return DebugJournalSummaryViewLayoutAttributes.Compact.encode(to:)(a1);
}

double DebugJournalSummaryViewLayoutAttributes.frame.getter()
{
  const void *v0;
  unsigned int v1;
  double result;
  _BYTE v3[424];
  _BYTE v4[424];

  sub_1BA249C78(v0, v3);
  sub_1BA249C78(v3, v4);
  v1 = sub_1BA24FFF4((uint64_t)v4);
  result = 0.0;
  if (v1 <= 1)
    return *(double *)nullsub_1(v4);
  return result;
}

uint64_t sub_1BA24FFF4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 416) <= 1u)
    return *(unsigned __int8 *)(a1 + 416);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1BA25000C()
{
  _BYTE *v0;

  if (*v0)
    return 1635017060;
  else
    return 1701869940;
}

uint64_t sub_1BA250030@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA251B10(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BA250054(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1BA250060()
{
  sub_1BA250308();
  return sub_1BA2C275C();
}

uint64_t sub_1BA250088()
{
  sub_1BA250308();
  return sub_1BA2C2768();
}

uint64_t DebugJournalSummaryViewLayoutAttributes.encode(to:)(_QWORD *a1)
{
  const void *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  __int128 *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  const void *v19;
  uint64_t v21;
  uint64_t v22;
  _OWORD v23[26];
  _BYTE v24[424];
  _BYTE v25[432];
  char v26;

  sub_1BA236F78(0, &qword_1EF27ECD0, (uint64_t (*)(void))sub_1BA250308, (uint64_t)&type metadata for DebugJournalSummaryViewLayoutAttributes.CodingKeys, MEMORY[0x1E0DED170]);
  v5 = v4;
  v22 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - v6;
  sub_1BA249C78(v1, v24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA250308();
  sub_1BA2C2750();
  sub_1BA249C78(v24, v25);
  v8 = sub_1BA24FFF4((uint64_t)v25);
  if (v8)
  {
    if (v8 != 1)
    {
      LOBYTE(v23[0]) = 2;
      v26 = 0;
      sub_1BA25034C();
      goto LABEL_8;
    }
    v9 = (__int128 *)nullsub_1(v25);
    LOBYTE(v23[0]) = 1;
    v26 = 0;
    sub_1BA25034C();
    sub_1BA2C2684();
    if (!v2)
    {
      v10 = *v9;
      v11 = v9[1];
      v12 = v9[3];
      v23[2] = v9[2];
      v23[3] = v12;
      v23[0] = v10;
      v23[1] = v11;
      v13 = v9[4];
      v14 = v9[5];
      v15 = v9[7];
      v23[6] = v9[6];
      v23[7] = v15;
      v23[4] = v13;
      v23[5] = v14;
      v16 = v9[8];
      v17 = v9[9];
      v18 = v9[11];
      v23[10] = v9[10];
      v23[11] = v18;
      v23[8] = v16;
      v23[9] = v17;
      v26 = 1;
      sub_1BA250390();
LABEL_8:
      sub_1BA2C2684();
    }
  }
  else
  {
    v19 = (const void *)nullsub_1(v25);
    LOBYTE(v23[0]) = 0;
    v26 = 0;
    sub_1BA25034C();
    sub_1BA2C2684();
    if (!v2)
    {
      memcpy(v23, v19, sizeof(v23));
      v26 = 1;
      sub_1BA2503D4();
      goto LABEL_8;
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v7, v5);
}

unint64_t sub_1BA250308()
{
  unint64_t result;

  result = qword_1EF27ECD8;
  if (!qword_1EF27ECD8)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C5428, &type metadata for DebugJournalSummaryViewLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27ECD8);
  }
  return result;
}

unint64_t sub_1BA25034C()
{
  unint64_t result;

  result = qword_1EF27ECE0;
  if (!qword_1EF27ECE0)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C5400, &type metadata for DebugJournalSummaryViewLayoutAttributes.AttributesType);
    atomic_store(result, (unint64_t *)&qword_1EF27ECE0);
  }
  return result;
}

unint64_t sub_1BA250390()
{
  unint64_t result;

  result = qword_1EF27ECE8;
  if (!qword_1EF27ECE8)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for DebugJournalSummaryViewLayoutAttributes.Compact, &type metadata for DebugJournalSummaryViewLayoutAttributes.Compact);
    atomic_store(result, (unint64_t *)&qword_1EF27ECE8);
  }
  return result;
}

unint64_t sub_1BA2503D4()
{
  unint64_t result;

  result = qword_1EF27ECF0;
  if (!qword_1EF27ECF0)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for DebugJournalSummaryViewLayoutAttributes.Regular, &type metadata for DebugJournalSummaryViewLayoutAttributes.Regular);
    atomic_store(result, (unint64_t *)&qword_1EF27ECF0);
  }
  return result;
}

uint64_t DebugJournalSummaryViewLayoutAttributes.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v12;
  _OWORD v13[26];
  _QWORD v14[5];
  _OWORD v15[26];
  _BYTE v16[423];
  char v17;
  uint64_t v18;

  v12 = a2;
  sub_1BA236F78(0, &qword_1EF27ECF8, (uint64_t (*)(void))sub_1BA250308, (uint64_t)&type metadata for DebugJournalSummaryViewLayoutAttributes.CodingKeys, MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v12 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA250308();
  v8 = v18;
  sub_1BA2C2744();
  if (!v8)
  {
    v9 = v5;
    v10 = v12;
    v16[422] = 0;
    sub_1BA25067C();
    sub_1BA2C2630();
    if (v17)
    {
      if (v17 == 1)
      {
        sub_1BA22068C((uint64_t)a1, (uint64_t)v14);
        DebugJournalSummaryViewLayoutAttributes.Compact.init(from:)(v14, (uint64_t)v13);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v4);
        v15[8] = v13[8];
        v15[9] = v13[9];
        v15[10] = v13[10];
        v15[11] = v13[11];
        v15[4] = v13[4];
        v15[5] = v13[5];
        v15[6] = v13[6];
        v15[7] = v13[7];
        v15[0] = v13[0];
        v15[1] = v13[1];
        v15[2] = v13[2];
        v15[3] = v13[3];
        sub_1BA24D1A0((uint64_t)v15);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v4);
        sub_1BA24D1AC((uint64_t)v15);
      }
    }
    else
    {
      sub_1BA22068C((uint64_t)a1, (uint64_t)v14);
      DebugJournalSummaryViewLayoutAttributes.Regular.init(from:)(v14, v13);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v4);
      memcpy(v15, v13, sizeof(v15));
      sub_1BA24D1F0((uint64_t)v15);
    }
    sub_1BA249C78(v15, v16);
    sub_1BA249C78(v16, v10);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA25067C()
{
  unint64_t result;

  result = qword_1EF27ED00;
  if (!qword_1EF27ED00)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C53D8, &type metadata for DebugJournalSummaryViewLayoutAttributes.AttributesType);
    atomic_store(result, (unint64_t *)&qword_1EF27ED00);
  }
  return result;
}

unint64_t sub_1BA2506C4()
{
  unint64_t result;

  result = qword_1EF27ED08;
  if (!qword_1EF27ED08)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for DebugJournalSummaryViewLayoutAttributes, &type metadata for DebugJournalSummaryViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF27ED08);
  }
  return result;
}

double sub_1BA250708()
{
  const void *v0;
  unsigned int v1;
  double result;
  _BYTE v3[424];
  _BYTE v4[424];

  sub_1BA249C78(v0, v3);
  sub_1BA249C78(v3, v4);
  v1 = sub_1BA24FFF4((uint64_t)v4);
  result = 0.0;
  if (v1 <= 1)
    return *(double *)nullsub_1(v4);
  return result;
}

unint64_t sub_1BA250774()
{
  unint64_t result;

  result = qword_1EF27ED10;
  if (!qword_1EF27ED10)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for DebugJournalSummaryViewLayoutAttributes, &type metadata for DebugJournalSummaryViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF27ED10);
  }
  return result;
}

unint64_t sub_1BA2507BC()
{
  unint64_t result;

  result = qword_1EF27ED18;
  if (!qword_1EF27ED18)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for DebugJournalSummaryViewLayoutAttributes, &type metadata for DebugJournalSummaryViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF27ED18);
  }
  return result;
}

unint64_t sub_1BA250804()
{
  unint64_t result;

  result = qword_1EF27ED20;
  if (!qword_1EF27ED20)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for DebugJournalSummaryViewLayoutAttributes, &type metadata for DebugJournalSummaryViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF27ED20);
  }
  return result;
}

uint64_t sub_1BA250848@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return DebugJournalSummaryViewLayoutAttributes.init(from:)(a1, a2);
}

uint64_t sub_1BA25085C(_QWORD *a1)
{
  return DebugJournalSummaryViewLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1BA250870()
{
  sub_1BA251C24();
  return sub_1BA2C16AC();
}

void *__swift_memcpy417_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1A1uLL);
}

uint64_t getEnumTagSinglePayload for DebugJournalSummaryViewLayoutAttributes(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 417))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 416);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugJournalSummaryViewLayoutAttributes(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 408) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_BYTE *)(result + 416) = 0;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 417) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 417) = 0;
    if (a2)
      *(_BYTE *)(result + 416) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BA2509DC(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    LOBYTE(a2) = 2;
    *(_QWORD *)(result + 408) = 0;
  }
  *(_BYTE *)(result + 416) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DebugJournalSummaryViewLayoutAttributes()
{
  return &type metadata for DebugJournalSummaryViewLayoutAttributes;
}

void *__swift_memcpy416_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1A0uLL);
}

uint64_t getEnumTagSinglePayload for DebugJournalSummaryViewLayoutAttributes.Regular(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 416))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DebugJournalSummaryViewLayoutAttributes.Regular(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 408) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 416) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DebugJournalSummaryViewLayoutAttributes.Regular()
{
  return &type metadata for DebugJournalSummaryViewLayoutAttributes.Regular;
}

__n128 __swift_memcpy192_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v9;
  return result;
}

uint64_t getEnumTagSinglePayload for DebugJournalSummaryViewLayoutAttributes.Compact(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 192))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DebugJournalSummaryViewLayoutAttributes.Compact(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 192) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DebugJournalSummaryViewLayoutAttributes.Compact()
{
  return &type metadata for DebugJournalSummaryViewLayoutAttributes.Compact;
}

uint64_t getEnumTagSinglePayload for DebugJournalSummaryViewLayoutAttributes.AttributesType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugJournalSummaryViewLayoutAttributes.AttributesType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BA250CD0 + 4 * byte_1BA2C4F08[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BA250D04 + 4 * byte_1BA2C4F03[v4]))();
}

uint64_t sub_1BA250D04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA250D0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA250D14);
  return result;
}

uint64_t sub_1BA250D20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA250D28);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BA250D2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA250D34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugJournalSummaryViewLayoutAttributes.AttributesType()
{
  return &type metadata for DebugJournalSummaryViewLayoutAttributes.AttributesType;
}

uint64_t storeEnumTagSinglePayload for DebugJournalSummaryViewLayoutAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA250D9C + 4 * byte_1BA2C4F12[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA250DD0 + 4 * byte_1BA2C4F0D[v4]))();
}

uint64_t sub_1BA250DD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA250DD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA250DE0);
  return result;
}

uint64_t sub_1BA250DEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA250DF4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA250DF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA250E00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugJournalSummaryViewLayoutAttributes.CodingKeys()
{
  return &type metadata for DebugJournalSummaryViewLayoutAttributes.CodingKeys;
}

uint64_t getEnumTagSinglePayload for DebugJournalSummaryViewLayoutAttributes.Compact.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugJournalSummaryViewLayoutAttributes.Compact.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BA250EF8 + 4 * byte_1BA2C4F1C[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BA250F2C + 4 * byte_1BA2C4F17[v4]))();
}

uint64_t sub_1BA250F2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA250F34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA250F3CLL);
  return result;
}

uint64_t sub_1BA250F48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA250F50);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BA250F54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA250F5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugJournalSummaryViewLayoutAttributes.Compact.CodingKeys()
{
  return &type metadata for DebugJournalSummaryViewLayoutAttributes.Compact.CodingKeys;
}

uint64_t getEnumTagSinglePayload for DebugJournalSummaryViewLayoutAttributes.Regular.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugJournalSummaryViewLayoutAttributes.Regular.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1BA251054 + 4 * byte_1BA2C4F26[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1BA251088 + 4 * byte_1BA2C4F21[v4]))();
}

uint64_t sub_1BA251088(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA251090(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA251098);
  return result;
}

uint64_t sub_1BA2510A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA2510ACLL);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1BA2510B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA2510B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugJournalSummaryViewLayoutAttributes.Regular.CodingKeys()
{
  return &type metadata for DebugJournalSummaryViewLayoutAttributes.Regular.CodingKeys;
}

unint64_t sub_1BA2510D8()
{
  unint64_t result;

  result = qword_1EF27ED28;
  if (!qword_1EF27ED28)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C51A0, &type metadata for DebugJournalSummaryViewLayoutAttributes.Regular.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27ED28);
  }
  return result;
}

unint64_t sub_1BA251120()
{
  unint64_t result;

  result = qword_1EF27ED30;
  if (!qword_1EF27ED30)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C5258, &type metadata for DebugJournalSummaryViewLayoutAttributes.Compact.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27ED30);
  }
  return result;
}

unint64_t sub_1BA251168()
{
  unint64_t result;

  result = qword_1EF27ED38;
  if (!qword_1EF27ED38)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C5310, &type metadata for DebugJournalSummaryViewLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27ED38);
  }
  return result;
}

unint64_t sub_1BA2511B0()
{
  unint64_t result;

  result = qword_1EF27ED40;
  if (!qword_1EF27ED40)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C53B0, &type metadata for DebugJournalSummaryViewLayoutAttributes.AttributesType);
    atomic_store(result, (unint64_t *)&qword_1EF27ED40);
  }
  return result;
}

unint64_t sub_1BA2511F8()
{
  unint64_t result;

  result = qword_1EF27ED48;
  if (!qword_1EF27ED48)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C5280, &type metadata for DebugJournalSummaryViewLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27ED48);
  }
  return result;
}

unint64_t sub_1BA251240()
{
  unint64_t result;

  result = qword_1EF27ED50;
  if (!qword_1EF27ED50)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C52A8, &type metadata for DebugJournalSummaryViewLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27ED50);
  }
  return result;
}

unint64_t sub_1BA251288()
{
  unint64_t result;

  result = qword_1EF27ED58;
  if (!qword_1EF27ED58)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C51C8, &type metadata for DebugJournalSummaryViewLayoutAttributes.Compact.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27ED58);
  }
  return result;
}

unint64_t sub_1BA2512D0()
{
  unint64_t result;

  result = qword_1EF27ED60;
  if (!qword_1EF27ED60)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C51F0, &type metadata for DebugJournalSummaryViewLayoutAttributes.Compact.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27ED60);
  }
  return result;
}

unint64_t sub_1BA251318()
{
  unint64_t result;

  result = qword_1EF27ED68;
  if (!qword_1EF27ED68)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C5110, &type metadata for DebugJournalSummaryViewLayoutAttributes.Regular.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27ED68);
  }
  return result;
}

unint64_t sub_1BA251360()
{
  unint64_t result;

  result = qword_1EF27ED70;
  if (!qword_1EF27ED70)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C5138, &type metadata for DebugJournalSummaryViewLayoutAttributes.Regular.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27ED70);
  }
  return result;
}

uint64_t sub_1BA2513A4()
{
  unint64_t v0;

  v0 = sub_1BA2C25DC();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1BA2513EC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001BA2CE820 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BA2CE840 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001BA2CE860 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001BA2CE880 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BA2CE8A0 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7246737574617473 && a2 == 0xEB00000000656D61 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BA2CE8C0 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001BA2CE8E0 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BA2CE900 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001BA2CE920 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BA2CE940 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BA2CE960)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    v6 = sub_1BA2C26A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

uint64_t sub_1BA2518A4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BA2CE8C0 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7246737574617473 && a2 == 0xEB00000000656D61 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001BA2CE8E0 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BA2CE940 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BA2CE960)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1BA2C26A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1BA251B10(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BA2C26A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1BA251BE0()
{
  unint64_t result;

  result = qword_1EF27ED78;
  if (!qword_1EF27ED78)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C5338, &type metadata for DebugJournalSummaryViewLayoutAttributes.AttributesType);
    atomic_store(result, (unint64_t *)&qword_1EF27ED78);
  }
  return result;
}

unint64_t sub_1BA251C24()
{
  unint64_t result;

  result = qword_1EF27ED80;
  if (!qword_1EF27ED80)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for DebugJournalSummaryViewLayoutAttributes, &type metadata for DebugJournalSummaryViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF27ED80);
  }
  return result;
}

uint64_t sub_1BA251C74()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InterstitialAdViewRenderer()
{
  return objc_opt_self();
}

uint64_t AdRequestStore.Behavior.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BA2C25DC();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t AdRequestStore.Behavior.rawValue.getter()
{
  return 7368560;
}

uint64_t sub_1BA251D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1BCCD93D0](&protocol conformance descriptor for AdRequestStore<A, B>.Behavior, a3);
  return sub_1BA2C26C0();
}

uint64_t sub_1BA251D70(uint64_t a1)
{
  MEMORY[0x1BCCD93D0](&protocol conformance descriptor for AdRequestStore<A, B>.Behavior, a1);
  return sub_1BA2C2234();
}

uint64_t sub_1BA251DBC()
{
  MEMORY[0x1BCCD93D0](&protocol conformance descriptor for AdRequestStore<A, B>.Behavior);
  return sub_1BA2C224C();
}

uint64_t sub_1BA251E0C()
{
  MEMORY[0x1BCCD93D0](&protocol conformance descriptor for AdRequestStore<A, B>.Behavior);
  return sub_1BA2C2240();
}

uint64_t sub_1BA251E5C@<X0>(BOOL *a1@<X8>)
{
  return AdRequestStore.Behavior.init(rawValue:)(a1);
}

void sub_1BA251E68(_QWORD *a1@<X8>)
{
  *a1 = 7368560;
  a1[1] = 0xE300000000000000;
}

void AdRequestStore.__allocating_init()()
{
  swift_allocObject();
  AdRequestStore.init()();
}

uint64_t sub_1BA251EA0()
{
  uint64_t v0;

  return v0;
}

uint64_t AdRequestStore.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t AdRequestStore.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

void sub_1BA251F00()
{
  JUMPOUT(0x1BCCD93D0);
}

uint64_t method lookup function for AdRequestStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AdRequestStore.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1BA251F24()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1BA251F2C(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BA251F6C + 4 * byte_1BA2C5580[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BA251F8C + 4 * byte_1BA2C5585[v4]))();
}

_BYTE *sub_1BA251F6C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BA251F8C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA251F94(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA251F9C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA251FA4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA251FAC(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for AdRequestStore.Behavior()
{
  JUMPOUT(0x1BCCD9364);
}

uint64_t sub_1BA251FC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 56))
  {
    v1 = *(_QWORD *)(v0 + 56);
  }
  else
  {
    v2 = v0;
    type metadata accessor for DebugInterstitialAdProvider();
    swift_allocObject();
    v1 = sub_1BA280AD0();
    *(_QWORD *)(v2 + 56) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t InterstitialAdProvider.fetchInterstitialAd(for:contentFetched:)(void (*a1)(void *, _UNKNOWN **, uint64_t), uint64_t a2, double a3, double a4)
{
  _QWORD *v4;
  uint64_t result;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  _QWORD aBlock[6];
  __int128 v18[2];

  if (qword_1ED5B0F80 != -1)
    swift_once();
  if ((sub_1BA2C152C() & 1) != 0)
  {
    sub_1BA251FC4();
    swift_retain();
    sub_1BA2C1574();
    swift_release();
    swift_retain();
    sub_1BA2C1574();
    swift_release();
    sub_1BA280D00(a1, a2, *(float *)aBlock, *(float *)aBlock);
    swift_release();
    type metadata accessor for AdPendingLoadToken();
    result = swift_allocObject();
    v10 = 0;
  }
  else
  {
    v11 = (uint64_t)(v4 + 2);
    v13 = v4[5];
    v12 = v4[6];
    __swift_project_boxed_opaque_existential_1(v4 + 2, v13);
    v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v13, v12);
    sub_1BA22068C(v11, (uint64_t)v18);
    v15 = swift_allocObject();
    sub_1BA21D3D4(v18, v15 + 16);
    *(_QWORD *)(v15 + 56) = a1;
    *(_QWORD *)(v15 + 64) = a2;
    aBlock[4] = sub_1BA252468;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BA25237C;
    aBlock[3] = &block_descriptor_4;
    v16 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    v10 = objc_msgSend(v14, sel_promotedContentInterstitialWithSize_ready_, v16, a3, a4);
    _Block_release(v16);

    type metadata accessor for AdPendingLoadToken();
    result = swift_allocObject();
  }
  *(_QWORD *)(result + 16) = v10;
  return result;
}

void sub_1BA252240(void *a1, _QWORD *a2, void (*a3)(id, _UNKNOWN **, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;

  v5 = a2[3];
  v6 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v5);
  v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  v8 = objc_msgSend(v7, sel_promotedContentInterstitialViewWithInfo_, a1);

  if (v8)
  {
    v9 = objc_allocWithZone((Class)type metadata accessor for InterstitialAdMetricsView());
    v10 = v8;
    v14 = sub_1BA2A6600(v10);

    a3(v14, &protocol witness table for InterstitialAdMetricsView, 0);
  }
  else
  {
    objc_msgSend(a1, sel_unfilledReason);
    v11 = sub_1BA2C1AA8();
    sub_1BA252488();
    v12 = (void *)swift_allocError();
    *(_QWORD *)v13 = v11;
    *(_BYTE *)(v13 + 8) = 0;
    a3(v12, 0, 1);

  }
}

void sub_1BA25237C(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t InterstitialAdProvider.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return v0;
}

uint64_t InterstitialAdProvider.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA25241C(void (*a1)(void *, _UNKNOWN **, uint64_t), uint64_t a2, double a3, double a4)
{
  return InterstitialAdProvider.fetchInterstitialAd(for:contentFetched:)(a1, a2, a3, a4);
}

uint64_t sub_1BA25243C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocObject();
}

void sub_1BA252468(void *a1)
{
  uint64_t v1;

  sub_1BA252240(a1, (_QWORD *)(v1 + 16), *(void (**)(id, _UNKNOWN **, uint64_t))(v1 + 56));
}

uint64_t dispatch thunk of InterstitialAdProviderType.fetchInterstitialAd(for:contentFetched:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t method lookup function for InterstitialAdProvider()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_1BA252488()
{
  unint64_t result;

  result = qword_1ED5B2890;
  if (!qword_1ED5B2890)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for AdErrors, &type metadata for AdErrors);
    atomic_store(result, (unint64_t *)&qword_1ED5B2890);
  }
  return result;
}

uint64_t sub_1BA2524CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1BA234D60(0, (unint64_t *)&qword_1ED5B17F8, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for JournalEntry);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v47 - v10;
  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v12 = qword_1ED5B2888;
  sub_1BA22053C(0, (unint64_t *)&qword_1ED5B2CC0, (uint64_t (*)(uint64_t))sub_1BA2395A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = swift_allocObject();
  v14 = (_QWORD *)v13;
  *(_OWORD *)(v13 + 16) = xmmword_1BA2C3840;
  v15 = (uint64_t *)(a1 + *(int *)(v8 + 60));
  v16 = *v15;
  v17 = v15[1];
  v18 = v15[2];
  v19 = v15[3];
  v20 = (unint64_t)*v15 >> 62;
  v52 = v9;
  v53 = v3;
  v50 = v18;
  v51 = v11;
  v48 = v16;
  v49 = v19;
  if (!(_DWORD)v20)
  {
    v22 = 0xE600000000000000;
    v21 = 0x64656C696146;
    goto LABEL_27;
  }
  if ((_DWORD)v20 == 1)
  {
    v21 = 0x6564726163736944;
    v22 = 0xE900000000000064;
LABEL_27:
    v28 = (void *)v12;
    goto LABEL_28;
  }
  v23 = v18 | v17 | v19;
  if (v16 == 0x8000000000000000 && v23 == 0)
  {
    v22 = 0xE700000000000000;
    v21 = 0x64657461657243;
    goto LABEL_27;
  }
  if (v16 == 0x8000000000000008 && v23 == 0)
  {
    v21 = 0x656C756465686353;
  }
  else if (v16 == 0x8000000000000010 && v23 == 0)
  {
    v21 = 0x656D726177657250;
  }
  else if (v16 == 0x8000000000000018 && v23 == 0)
  {
    v21 = 0x6574736575716552;
  }
  else if (v16 != 0x8000000000000020 || v23)
  {
    if (v23)
      v46 = 0;
    else
      v46 = v16 == 0x8000000000000028;
    if (v46)
      v21 = 0x65746E6573657250;
    else
      v21 = 0x657370616C6C6F43;
  }
  else
  {
    v21 = 0x656C6C69666C7546;
  }
  v28 = (void *)v12;
  v22 = 0xE900000000000064;
LABEL_28:
  v29 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
  v30 = sub_1BA2291C8();
  v14[4] = v21;
  v14[5] = v22;
  v14[12] = v29;
  v14[13] = v30;
  v14[8] = v30;
  v14[9] = a2;
  v14[10] = a3;
  v55 = v48;
  v56 = v17;
  v57 = v50;
  v58 = v49;
  v31 = v28;
  swift_bridgeObjectRetain();
  v32 = JournalEntryStatus.shortDescription.getter();
  v14[17] = v29;
  v14[18] = v30;
  v14[14] = v32;
  v14[15] = v33;
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  v34 = v53;
  v55 = a2;
  v56 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BA2C18C8();
  swift_bridgeObjectRelease();
  swift_release();
  if (v54)
    v35 = v54;
  else
    v35 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v36 = (uint64_t)v51;
  sub_1BA258AF0(a1, (uint64_t)v51, (unint64_t *)&qword_1ED5B17F8, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for JournalEntry);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v35 = (_QWORD *)sub_1BA23F3DC(0, v35[2] + 1, 1, v35);
  v37 = v52;
  v39 = v35[2];
  v38 = v35[3];
  if (v39 >= v38 >> 1)
    v35 = (_QWORD *)sub_1BA23F3DC(v38 > 1, v39 + 1, 1, v35);
  v35[2] = v39 + 1;
  sub_1BA258C20(v36, (uint64_t)v35+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v39);
  v54 = v35;
  v55 = a2;
  v56 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BA2C18D4();
  swift_release();
  swift_beginAccess();
  v40 = *(_QWORD *)(v34 + 16);
  if (!(v40 >> 62))
  {
    v41 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v41)
      goto LABEL_37;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_1BA2C2594();
  v41 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_37:
  if (v41 >= 1)
  {
    v43 = 0;
    do
    {
      if ((v40 & 0xC000000000000001) != 0)
      {
        v44 = MEMORY[0x1BCCD8C98](v43, v40);
      }
      else
      {
        v44 = *(_QWORD *)(v40 + 8 * v43 + 32);
        swift_retain();
      }
      ++v43;
      v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16);
      swift_retain();
      v45(a1, a2, a3);
      swift_release();
      swift_release();
    }
    while (v41 != v43);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA2529B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  int *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v34 = a6;
  v32 = a2;
  v33 = a4;
  v30 = a3;
  v31 = sub_1BA2C1460();
  v8 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA258A8C();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA234D60(0, (unint64_t *)&qword_1ED5B17F8, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for JournalEntry);
  v15 = v14;
  MEMORY[0x1E0C80A78](v14);
  v17 = (uint64_t *)((char *)&v30 - v16);
  v18 = *(_QWORD *)(a1 + 536);
  sub_1BA258AF0(a1, (uint64_t)v13, (unint64_t *)&qword_1ED5B2B20, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for AdRequest);
  sub_1BA234D60(0, (unint64_t *)&qword_1ED5B2B20, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for AdRequest);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v13, 0, 1, v19);
  v20 = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA2C1454();
  v21 = sub_1BA2C143C();
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v31);
  *v17 = v21;
  v17[1] = v23;
  sub_1BA2C1418();
  v24 = (uint64_t *)((char *)v17 + v15[14]);
  v25 = v32;
  *v24 = v32;
  v24[1] = v20;
  v26 = (uint64_t *)((char *)v17 + v15[15]);
  *v26 = 0x8000000000000028;
  v26[1] = 0;
  v26[2] = 0;
  v26[3] = 0;
  v27 = (uint64_t *)((char *)v17 + v15[16]);
  v28 = v34;
  *v27 = v33;
  v27[1] = a5;
  *(uint64_t *)((char *)v17 + v15[17]) = v18;
  sub_1BA258B3C(v28, (uint64_t)v17 + v15[18], (uint64_t (*)(_QWORD))sub_1BA258B80);
  sub_1BA258B3C((uint64_t)v13, (uint64_t)v17 + v15[19], (uint64_t (*)(_QWORD))sub_1BA258A8C);
  sub_1BA2524CC((uint64_t)v17, v25, v20);
  return sub_1BA258BD4((uint64_t)v17);
}

char *sub_1BA252BE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  char *result;
  int64_t v17;
  unint64_t v18;
  unint64_t i;
  int v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  void (*v24)(char *, char *, uint64_t);
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t (*v32)(char *, char *, uint64_t);
  char *v33;
  char *v34;
  char *v35;

  sub_1BA22053C(0, (unint64_t *)&qword_1ED5B1290, (uint64_t (*)(uint64_t))MEMORY[0x1E0D81F30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v30 - v3;
  v5 = sub_1BA2C1B20();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v33 = (char *)&v30 - v10;
  v11 = a1 + 56;
  v12 = 1 << *(_BYTE *)(a1 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(a1 + 56);
  v15 = (unint64_t)(v12 + 63) >> 6;
  result = (char *)swift_bridgeObjectRetain();
  v17 = 0;
  v35 = (char *)MEMORY[0x1E0DEE9D8];
  v34 = v9;
  if (!v14)
    goto LABEL_7;
LABEL_4:
  v18 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (i = v18 | (v17 << 6); ; i = __clz(__rbit64(v22)) + (v17 << 6))
  {
    v20 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + i);
    if ((v20 - 2) >= 3)
    {
      if (v20)
        sub_1BA2C1B08();
      else
        sub_1BA2C1AFC();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
      v24 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v24(v33, v4, v5);
      v32 = (uint64_t (*)(char *, char *, uint64_t))v24;
      v24(v34, v33, v5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v35 = (char *)sub_1BA23F3C8(0, *((_QWORD *)v35 + 2) + 1, 1, v35);
      v26 = *((_QWORD *)v35 + 2);
      v25 = *((_QWORD *)v35 + 3);
      v27 = v26 + 1;
      if (v26 >= v25 >> 1)
      {
        v31 = v26 + 1;
        v29 = (char *)sub_1BA23F3C8(v25 > 1, v26 + 1, 1, v35);
        v27 = v31;
        v35 = v29;
      }
      v28 = v35;
      *((_QWORD *)v35 + 2) = v27;
      result = (char *)v32(&v28[((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v26], v34, v5);
      if (v14)
        goto LABEL_4;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
      result = (char *)sub_1BA258C74((uint64_t)v4);
      if (v14)
        goto LABEL_4;
    }
LABEL_7:
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v21 >= v15)
      goto LABEL_32;
    v22 = *(_QWORD *)(v11 + 8 * v21);
    ++v17;
    if (!v22)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_32;
      v22 = *(_QWORD *)(v11 + 8 * v17);
      if (!v22)
      {
        v17 = v21 + 2;
        if (v21 + 2 >= v15)
          goto LABEL_32;
        v22 = *(_QWORD *)(v11 + 8 * v17);
        if (!v22)
        {
          v17 = v21 + 3;
          if (v21 + 3 >= v15)
            goto LABEL_32;
          v22 = *(_QWORD *)(v11 + 8 * v17);
          if (!v22)
            break;
        }
      }
    }
LABEL_22:
    v14 = (v22 - 1) & v22;
  }
  v23 = v21 + 4;
  if (v23 >= v15)
  {
LABEL_32:
    swift_release();
    return v35;
  }
  v22 = *(_QWORD *)(v11 + 8 * v23);
  if (v22)
  {
    v17 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v17 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v17 >= v15)
      goto LABEL_32;
    v22 = *(_QWORD *)(v11 + 8 * v17);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t NativeAdInfo.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  int EnumCaseMultiPayload;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  _OWORD v14[5];
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for NativeAdInfo.Fulfilled(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for NativeAdInfo(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA24AA98(v1, (uint64_t)v7, v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    v10 = *((_OWORD *)v7 + 3);
    v14[2] = *((_OWORD *)v7 + 2);
    v14[3] = v10;
    v14[4] = *((_OWORD *)v7 + 4);
    v15 = *((_QWORD *)v7 + 10);
    v11 = *((_OWORD *)v7 + 1);
    v14[0] = *(_OWORD *)v7;
    v14[1] = v11;
    v12 = v11;
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRetain();
      sub_1BA2530B4((uint64_t)v14);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1BA253088((uint64_t)v14);
    }
  }
  else
  {
    sub_1BA258B3C((uint64_t)v7, (uint64_t)v4, type metadata accessor for NativeAdInfo.Fulfilled);
    v12 = *((_QWORD *)v4 + 10);
    swift_bridgeObjectRetain();
    sub_1BA258A50((uint64_t)v4, type metadata accessor for NativeAdInfo.Fulfilled);
  }
  return v12;
}

uint64_t sub_1BA253088(uint64_t a1)
{
  destroy for NativeAdInfo.Unfilled(a1, &type metadata for NativeAdInfo.Discarded);
  return a1;
}

uint64_t sub_1BA2530B4(uint64_t a1)
{
  destroy for NativeAdInfo.Unfilled(a1, &type metadata for NativeAdInfo.Unfilled);
  return a1;
}

uint64_t NativeAdInfo.placementIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  int EnumCaseMultiPayload;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  _OWORD v14[5];
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for NativeAdInfo.Fulfilled(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t *)((char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for NativeAdInfo(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA24AA98(v1, (uint64_t)v7, v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    v10 = *((_OWORD *)v7 + 3);
    v14[2] = *((_OWORD *)v7 + 2);
    v14[3] = v10;
    v14[4] = *((_OWORD *)v7 + 4);
    v15 = *((_QWORD *)v7 + 10);
    v11 = *((_OWORD *)v7 + 1);
    v14[0] = *(_OWORD *)v7;
    v14[1] = v11;
    v12 = *(_QWORD *)&v14[0];
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRetain();
      sub_1BA2530B4((uint64_t)v14);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1BA253088((uint64_t)v14);
    }
  }
  else
  {
    sub_1BA258B3C((uint64_t)v7, (uint64_t)v4, type metadata accessor for NativeAdInfo.Fulfilled);
    v12 = *v4;
    swift_bridgeObjectRetain();
    sub_1BA258A50((uint64_t)v4, type metadata accessor for NativeAdInfo.Fulfilled);
  }
  return v12;
}

uint64_t NativeAdInfo.journal.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  int EnumCaseMultiPayload;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  _OWORD v14[2];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v1 = v0;
  v2 = type metadata accessor for NativeAdInfo.Fulfilled(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for NativeAdInfo(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA24AA98(v1, (uint64_t)v7, v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    v10 = *((_OWORD *)v7 + 3);
    v15 = *((_OWORD *)v7 + 2);
    v16 = v10;
    v17 = *((_OWORD *)v7 + 4);
    v18 = *((_QWORD *)v7 + 10);
    v11 = *((_OWORD *)v7 + 1);
    v14[0] = *(_OWORD *)v7;
    v14[1] = v11;
    v12 = v15;
    if (EnumCaseMultiPayload == 1)
    {
      swift_retain();
      sub_1BA2530B4((uint64_t)v14);
    }
    else
    {
      swift_retain();
      sub_1BA253088((uint64_t)v14);
    }
  }
  else
  {
    sub_1BA258B3C((uint64_t)v7, (uint64_t)v4, type metadata accessor for NativeAdInfo.Fulfilled);
    v12 = *((_QWORD *)v4 + 12);
    swift_retain();
    sub_1BA258A50((uint64_t)v4, type metadata accessor for NativeAdInfo.Fulfilled);
  }
  return v12;
}

uint64_t NativeAdInfo.attachContent(view:at:)(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t (*v25)(void);
  id v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t (*v31)(void);
  id v32;
  uint64_t (*v33)(void);
  id v34;
  _QWORD v36[2];
  _OWORD v37[2];
  _OWORD v38[2];
  __int128 v39;
  id v40;

  v36[1] = a1;
  v36[0] = type metadata accessor for NativeAdInfo.Fulfilled(0);
  MEMORY[0x1E0C80A78](v36[0]);
  v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for NativeAdInfo(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v11 = (void *)qword_1ED5B2888;
  sub_1BA22053C(0, (unint64_t *)&qword_1ED5B2CC0, (uint64_t (*)(uint64_t))sub_1BA2395A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BA2C37C0;
  v13 = v11;
  v14 = NativeAdInfo.placementIdentifier.getter();
  v16 = v15;
  v17 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
  v18 = sub_1BA2291C8();
  *(_QWORD *)(v12 + 64) = v18;
  *(_QWORD *)(v12 + 32) = v14;
  *(_QWORD *)(v12 + 40) = v16;
  *(double *)v37 = a2;
  *((double *)v37 + 1) = a3;
  type metadata accessor for CGPoint(0);
  v19 = sub_1BA2C218C();
  *(_QWORD *)(v12 + 96) = v17;
  *(_QWORD *)(v12 + 104) = v18;
  *(_QWORD *)(v12 + 72) = v19;
  *(_QWORD *)(v12 + 80) = v20;
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  sub_1BA24AA98(v3, (uint64_t)v10, type metadata accessor for NativeAdInfo);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    v22 = *((_OWORD *)v10 + 4);
    v38[1] = *((_OWORD *)v10 + 3);
    v39 = v22;
    v23 = *((_OWORD *)v10 + 2);
    v37[1] = *((_OWORD *)v10 + 1);
    v38[0] = v23;
    v40 = (id)*((_QWORD *)v10 + 10);
    v37[0] = *(_OWORD *)v10;
    v24 = *((_QWORD *)&v39 + 1);
    if (EnumCaseMultiPayload == 1)
    {
      __swift_project_boxed_opaque_existential_1((_QWORD *)v38 + 1, v39);
      v25 = *(uint64_t (**)(void))(v24 + 24);
      v26 = v40;
      v27 = v25();

      sub_1BA2530B4((uint64_t)v37);
    }
    else
    {
      __swift_project_boxed_opaque_existential_1((_QWORD *)v38 + 1, v39);
      v33 = *(uint64_t (**)(void))(v24 + 24);
      v34 = v40;
      v27 = v33();

      sub_1BA253088((uint64_t)v37);
    }
  }
  else
  {
    sub_1BA258B3C((uint64_t)v10, (uint64_t)v7, type metadata accessor for NativeAdInfo.Fulfilled);
    v28 = v36[0];
    v29 = &v7[*(int *)(v36[0] + 48)];
    v30 = *((_QWORD *)v29 + 4);
    __swift_project_boxed_opaque_existential_1(v29, *((_QWORD *)v29 + 3));
    v31 = *(uint64_t (**)(void))(v30 + 24);
    v32 = *(id *)&v7[*(int *)(v28 + 52)];
    v27 = v31();

    sub_1BA258A50((uint64_t)v7, type metadata accessor for NativeAdInfo.Fulfilled);
  }
  return v27;
}

__n128 NativeAdInfo.discard(policyFailures:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, uint64_t);
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  int EnumCaseMultiPayload;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __n128 result;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  _OWORD v79[3];
  id v80;
  _QWORD v81[3];
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  id v89;

  v69 = type metadata accessor for NativeAdInfo.Fulfilled(0);
  MEMORY[0x1E0C80A78](v69);
  v68 = (uint64_t)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for NativeAdInfo(0);
  MEMORY[0x1E0C80A78](v72);
  v73 = (uint64_t)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BA2C1B20();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v70 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v65 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v65 - v14;
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v65 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v65 - v19;
  v21 = sub_1BA252BE4(a1);
  sub_1BA2C1B14();
  v22 = *((_QWORD *)v21 + 2);
  v71 = v22;
  if (v22)
  {
    v66 = v20;
    v67 = a2;
    v23 = &v21[(*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)];
    v76 = *(_QWORD *)(v7 + 72);
    v75 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v65 = v21;
    swift_bridgeObjectRetain();
    v24 = v22;
    v25 = v7;
    v26 = v70;
    do
    {
      v27 = v75;
      v75(v15, v23, v6);
      sub_1BA254134(&qword_1ED5B1278, MEMORY[0x1E0D81F38]);
      sub_1BA2C221C();
      sub_1BA254134(&qword_1ED5B1288, MEMORY[0x1E0D81F48]);
      sub_1BA2C2774();
      v27(v26, v15, v6);
      sub_1BA254134(&qword_1ED5B1280, MEMORY[0x1E0D81F40]);
      sub_1BA2C2474();
      v28 = *(void (**)(char *, uint64_t))(v25 + 8);
      v28(v18, v6);
      v29 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
      v29(v18, v12, v6);
      v28(v15, v6);
      v23 += v76;
      --v24;
    }
    while (v24);
    swift_bridgeObjectRelease();
    a2 = v67;
    v20 = v66;
  }
  else
  {
    v25 = v7;
    v29 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  }
  v29(v20, v18, v6);
  v30 = v73;
  sub_1BA24AA98(v74, v73, type metadata accessor for NativeAdInfo);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v32 = *(_OWORD *)(v30 + 48);
      v86 = *(_OWORD *)(v30 + 32);
      v87 = v32;
      v88 = *(_OWORD *)(v30 + 64);
      v89 = *(id *)(v30 + 80);
      v33 = *(_OWORD *)(v30 + 16);
      v84 = *(__n128 *)v30;
      v85 = v33;
      swift_bridgeObjectRelease();
      if (v71)
      {
        v34 = v88;
        __swift_project_boxed_opaque_existential_1((_QWORD *)&v86 + 1, v88);
        (*(void (**)(_QWORD))(*(_QWORD *)(*((_QWORD *)&v34 + 1) + 8) + 16))(v34);
        sub_1BA2C1B38();
        if (swift_dynamicCastClass())
          sub_1BA2C1B2C();
        swift_unknownObjectRelease();
      }
      v35 = NativeAdInfo.placementIdentifier.getter();
      v37 = v36;
      sub_1BA22068C((uint64_t)&v86 + 8, (uint64_t)v81);
      v38 = v89;
      v39 = NativeAdInfo.journal.getter();
      *(_QWORD *)&v77 = v35;
      *((_QWORD *)&v77 + 1) = v37;
      v40 = v82;
      v41 = v83;
      __swift_project_boxed_opaque_existential_1(v81, v82);
      *(_QWORD *)&v78 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v41 + 8) + 8))(v40);
      *((_QWORD *)&v78 + 1) = v42;
      sub_1BA22068C((uint64_t)v81, (uint64_t)v79 + 8);
      v80 = v38;
      *(_QWORD *)&v79[0] = v39;
      *(_QWORD *)(a2 + 80) = v38;
      v43 = v79[2];
      v44 = v78;
      *(_OWORD *)a2 = v77;
      *(_OWORD *)(a2 + 16) = v44;
      v45 = v79[0];
      *(_OWORD *)(a2 + 48) = v79[1];
      *(_OWORD *)(a2 + 64) = v43;
      *(_OWORD *)(a2 + 32) = v45;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v6);
      sub_1BA2530B4((uint64_t)&v84);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v6);
      swift_bridgeObjectRelease();
      v63 = *(_OWORD *)(v30 + 48);
      *(_OWORD *)(a2 + 32) = *(_OWORD *)(v30 + 32);
      *(_OWORD *)(a2 + 48) = v63;
      *(_OWORD *)(a2 + 64) = *(_OWORD *)(v30 + 64);
      *(_QWORD *)(a2 + 80) = *(_QWORD *)(v30 + 80);
      result = *(__n128 *)v30;
      v64 = *(_OWORD *)(v30 + 16);
      *(_OWORD *)a2 = *(_OWORD *)v30;
      *(_OWORD *)(a2 + 16) = v64;
    }
  }
  else
  {
    v47 = v68;
    sub_1BA258B3C(v30, v68, type metadata accessor for NativeAdInfo.Fulfilled);
    swift_bridgeObjectRelease();
    if (v71)
    {
      v48 = (_QWORD *)(v47 + *(int *)(v69 + 48));
      v49 = v48[3];
      v50 = v48[4];
      __swift_project_boxed_opaque_existential_1(v48, v49);
      (*(void (**)(uint64_t))(*(_QWORD *)(v50 + 8) + 16))(v49);
      sub_1BA2C1B38();
      if (swift_dynamicCastClass())
        sub_1BA2C1B2C();
      swift_unknownObjectRelease();
    }
    v51 = NativeAdInfo.placementIdentifier.getter();
    v53 = v52;
    v54 = v69;
    sub_1BA22068C(v47 + *(int *)(v69 + 48), (uint64_t)&v77);
    v55 = *(id *)(v47 + *(int *)(v54 + 52));
    v56 = NativeAdInfo.journal.getter();
    v84.n128_u64[0] = v51;
    v84.n128_u64[1] = v53;
    v57 = *((_QWORD *)&v78 + 1);
    v58 = *(_QWORD *)&v79[0];
    __swift_project_boxed_opaque_existential_1(&v77, *((uint64_t *)&v78 + 1));
    *(_QWORD *)&v85 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v58 + 8) + 8))(v57);
    *((_QWORD *)&v85 + 1) = v59;
    sub_1BA22068C((uint64_t)&v77, (uint64_t)&v86 + 8);
    v89 = v55;
    *(_QWORD *)&v86 = v56;
    *(_QWORD *)(a2 + 80) = v55;
    v60 = v88;
    v61 = v85;
    *(__n128 *)a2 = v84;
    *(_OWORD *)(a2 + 16) = v61;
    v62 = v86;
    *(_OWORD *)(a2 + 48) = v87;
    *(_OWORD *)(a2 + 64) = v60;
    *(_OWORD *)(a2 + 32) = v62;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v77);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v6);
    sub_1BA258A50(v47, type metadata accessor for NativeAdInfo.Fulfilled);
  }
  return result;
}

uint64_t NativeAdInfo.Fulfilled.placementIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NativeAdInfo.Fulfilled.advertiserName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NativeAdInfo.Fulfilled.articleID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NativeAdInfo.Fulfilled.articleTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NativeAdInfo.Fulfilled.campaignData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NativeAdInfo.Fulfilled.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NativeAdInfo.Fulfilled.journal.getter()
{
  return swift_retain();
}

uint64_t NativeAdInfo.Fulfilled.info.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1BA24AA98(v1, a1, type metadata accessor for NativeAdInfo.Fulfilled);
  type metadata accessor for NativeAdInfo(0);
  return swift_storeEnumTagMultiPayload();
}

Swift::Void __swiftcall NativeAdInfo.Fulfilled.failedToLoadContent()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for NativeAdInfo.Fulfilled(0) + 48));
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  objc_msgSend((id)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 16))(v2), sel_contentLoadFailure);
  swift_unknownObjectRelease();
}

Swift::Void __swiftcall NativeAdInfo.Fulfilled.markPresented()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _OWORD v6[2];
  char v7;

  v1 = (uint64_t)v0 + *(int *)(type metadata accessor for NativeAdInfo.Fulfilled(0) + 44);
  v2 = *v0;
  v3 = v0[1];
  v4 = v0[10];
  v5 = v0[11];
  memset(v6, 0, sizeof(v6));
  v7 = 1;
  sub_1BA2529B4(v1, v2, v3, v4, v5, (uint64_t)v6);
}

uint64_t NativeAdInfo.Unfilled.placementIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NativeAdInfo.Unfilled.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NativeAdInfo.Unfilled.journal.getter()
{
  return swift_retain();
}

uint64_t NativeAdInfo.Unfilled.info.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA254098((void (*)(uint64_t, uint64_t))sub_1BA2547E8, a1);
}

uint64_t NativeAdInfo.Unfilled.unfilledReason.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0 + 5;
  v2 = v0[8];
  v3 = v0[9];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 48))(v2);
}

uint64_t static NativeAdInfo.Unfilled.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return sub_1BA254174(a1, a2, (void (*)(_QWORD *, _BYTE *))sub_1BA2547E8, (void (*)(_BYTE *))sub_1BA2530B4) & 1;
}

uint64_t sub_1BA254060(_QWORD *a1, _QWORD *a2)
{
  return sub_1BA254174(a1, a2, (void (*)(_QWORD *, _BYTE *))sub_1BA2547E8, (void (*)(_BYTE *))sub_1BA2530B4) & 1;
}

uint64_t NativeAdInfo.Discarded.info.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA254098((void (*)(uint64_t, uint64_t))sub_1BA25481C, a1);
}

uint64_t sub_1BA254098@<X0>(void (*a1)(uint64_t, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  a1(v2, a2);
  type metadata accessor for NativeAdInfo(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t static NativeAdInfo.Discarded.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return sub_1BA254174(a1, a2, (void (*)(_QWORD *, _BYTE *))sub_1BA25481C, (void (*)(_BYTE *))sub_1BA253088) & 1;
}

uint64_t sub_1BA254104(_QWORD *a1, _QWORD *a2)
{
  return sub_1BA254174(a1, a2, (void (*)(_QWORD *, _BYTE *))sub_1BA25481C, (void (*)(_BYTE *))sub_1BA253088) & 1;
}

uint64_t sub_1BA254134(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1BA2C1B20();
    result = MEMORY[0x1BCCD93D0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA254174(_QWORD *a1, _QWORD *a2, void (*a3)(_QWORD *, _BYTE *), void (*a4)(_BYTE *))
{
  char v9;
  char v10;
  _QWORD v12[11];
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;

  if (*a1 == *a2 && a1[1] == a2[1])
  {
    a3(a1, v13);
    a3(a2, v12);
  }
  else
  {
    v9 = sub_1BA2C26A8();
    a3(a1, v13);
    a3(a2, v12);
    v10 = 0;
    if ((v9 & 1) == 0)
      goto LABEL_12;
  }
  if (v14 == v12[2] && v15 == v12[3])
    v10 = 1;
  else
    v10 = sub_1BA2C26A8();
LABEL_12:
  a4(v13);
  a4(v12);
  return v10 & 1;
}

uint64_t _s7NewsAds12NativeAdInfoO9FulfilledV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char v26;
  char v28;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v37;
  uint64_t v38;
  uint64_t v39;

  v4 = type metadata accessor for NativeAdInfo.Fulfilled(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v39 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v38 = (uint64_t)&v38 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v38 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v38 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v38 - v16;
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v38 - v19;
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = (char *)&v38 - v22;
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v38 - v24;
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_1BA24AA98((uint64_t)a1, (uint64_t)&v38 - v24, type metadata accessor for NativeAdInfo.Fulfilled);
    sub_1BA24AA98((uint64_t)a2, (uint64_t)v23, type metadata accessor for NativeAdInfo.Fulfilled);
  }
  else
  {
    v26 = sub_1BA2C26A8();
    sub_1BA24AA98((uint64_t)a1, (uint64_t)v25, type metadata accessor for NativeAdInfo.Fulfilled);
    sub_1BA24AA98((uint64_t)a2, (uint64_t)v23, type metadata accessor for NativeAdInfo.Fulfilled);
    if ((v26 & 1) == 0)
    {
      sub_1BA258A50((uint64_t)v25, type metadata accessor for NativeAdInfo.Fulfilled);
      sub_1BA258A50((uint64_t)v23, type metadata accessor for NativeAdInfo.Fulfilled);
      sub_1BA24AA98((uint64_t)a1, (uint64_t)v20, type metadata accessor for NativeAdInfo.Fulfilled);
      sub_1BA24AA98((uint64_t)a2, (uint64_t)v17, type metadata accessor for NativeAdInfo.Fulfilled);
LABEL_25:
      sub_1BA258A50((uint64_t)v20, type metadata accessor for NativeAdInfo.Fulfilled);
      sub_1BA258A50((uint64_t)v17, type metadata accessor for NativeAdInfo.Fulfilled);
      sub_1BA24AA98((uint64_t)a1, (uint64_t)v14, type metadata accessor for NativeAdInfo.Fulfilled);
      sub_1BA24AA98((uint64_t)a2, (uint64_t)v11, type metadata accessor for NativeAdInfo.Fulfilled);
LABEL_26:
      sub_1BA258A50((uint64_t)v11, type metadata accessor for NativeAdInfo.Fulfilled);
      sub_1BA258A50((uint64_t)v14, type metadata accessor for NativeAdInfo.Fulfilled);
LABEL_31:
      v33 = v38;
      v34 = v39;
      sub_1BA24AA98((uint64_t)a1, v38, type metadata accessor for NativeAdInfo.Fulfilled);
      sub_1BA24AA98((uint64_t)a2, v34, type metadata accessor for NativeAdInfo.Fulfilled);
      v35 = 0;
      goto LABEL_32;
    }
  }
  if (*((_QWORD *)v25 + 10) == *((_QWORD *)v23 + 10) && *((_QWORD *)v25 + 11) == *((_QWORD *)v23 + 11))
  {
    sub_1BA258A50((uint64_t)v25, type metadata accessor for NativeAdInfo.Fulfilled);
    sub_1BA258A50((uint64_t)v23, type metadata accessor for NativeAdInfo.Fulfilled);
    sub_1BA24AA98((uint64_t)a1, (uint64_t)v20, type metadata accessor for NativeAdInfo.Fulfilled);
    sub_1BA24AA98((uint64_t)a2, (uint64_t)v17, type metadata accessor for NativeAdInfo.Fulfilled);
  }
  else
  {
    v28 = sub_1BA2C26A8();
    sub_1BA258A50((uint64_t)v25, type metadata accessor for NativeAdInfo.Fulfilled);
    sub_1BA258A50((uint64_t)v23, type metadata accessor for NativeAdInfo.Fulfilled);
    sub_1BA24AA98((uint64_t)a1, (uint64_t)v20, type metadata accessor for NativeAdInfo.Fulfilled);
    sub_1BA24AA98((uint64_t)a2, (uint64_t)v17, type metadata accessor for NativeAdInfo.Fulfilled);
    if ((v28 & 1) == 0)
      goto LABEL_25;
  }
  if (*((_QWORD *)v20 + 4) == *((_QWORD *)v17 + 4) && *((_QWORD *)v20 + 5) == *((_QWORD *)v17 + 5))
  {
    sub_1BA258A50((uint64_t)v20, type metadata accessor for NativeAdInfo.Fulfilled);
    sub_1BA258A50((uint64_t)v17, type metadata accessor for NativeAdInfo.Fulfilled);
    sub_1BA24AA98((uint64_t)a1, (uint64_t)v14, type metadata accessor for NativeAdInfo.Fulfilled);
    sub_1BA24AA98((uint64_t)a2, (uint64_t)v11, type metadata accessor for NativeAdInfo.Fulfilled);
  }
  else
  {
    v30 = sub_1BA2C26A8();
    sub_1BA258A50((uint64_t)v20, type metadata accessor for NativeAdInfo.Fulfilled);
    sub_1BA258A50((uint64_t)v17, type metadata accessor for NativeAdInfo.Fulfilled);
    sub_1BA24AA98((uint64_t)a1, (uint64_t)v14, type metadata accessor for NativeAdInfo.Fulfilled);
    sub_1BA24AA98((uint64_t)a2, (uint64_t)v11, type metadata accessor for NativeAdInfo.Fulfilled);
    if ((v30 & 1) == 0)
      goto LABEL_26;
  }
  v31 = *((_QWORD *)v14 + 7);
  v32 = *((_QWORD *)v11 + 7);
  if (!v31)
  {
    swift_bridgeObjectRetain();
    sub_1BA258A50((uint64_t)v11, type metadata accessor for NativeAdInfo.Fulfilled);
    sub_1BA258A50((uint64_t)v14, type metadata accessor for NativeAdInfo.Fulfilled);
    if (!v32)
      goto LABEL_28;
LABEL_30:
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  if (!v32)
  {
    swift_bridgeObjectRetain();
    sub_1BA258A50((uint64_t)v11, type metadata accessor for NativeAdInfo.Fulfilled);
    sub_1BA258A50((uint64_t)v14, type metadata accessor for NativeAdInfo.Fulfilled);
    goto LABEL_30;
  }
  if (*((_QWORD *)v14 + 6) != *((_QWORD *)v11 + 6) || v31 != v32)
  {
    v37 = sub_1BA2C26A8();
    swift_bridgeObjectRetain();
    sub_1BA258A50((uint64_t)v11, type metadata accessor for NativeAdInfo.Fulfilled);
    sub_1BA258A50((uint64_t)v14, type metadata accessor for NativeAdInfo.Fulfilled);
    swift_bridgeObjectRelease();
    v33 = v38;
    sub_1BA24AA98((uint64_t)a1, v38, type metadata accessor for NativeAdInfo.Fulfilled);
    v34 = v39;
    sub_1BA24AA98((uint64_t)a2, v39, type metadata accessor for NativeAdInfo.Fulfilled);
    v35 = 0;
    if ((v37 & 1) == 0)
      goto LABEL_32;
    goto LABEL_34;
  }
  swift_bridgeObjectRetain();
  sub_1BA258A50((uint64_t)v11, type metadata accessor for NativeAdInfo.Fulfilled);
  sub_1BA258A50((uint64_t)v14, type metadata accessor for NativeAdInfo.Fulfilled);
  swift_bridgeObjectRelease();
LABEL_28:
  v33 = v38;
  sub_1BA24AA98((uint64_t)a1, v38, type metadata accessor for NativeAdInfo.Fulfilled);
  v34 = v39;
  sub_1BA24AA98((uint64_t)a2, v39, type metadata accessor for NativeAdInfo.Fulfilled);
LABEL_34:
  if (*(_QWORD *)(v33 + 64) == *(_QWORD *)(v34 + 64) && *(_QWORD *)(v33 + 72) == *(_QWORD *)(v34 + 72))
    v35 = 1;
  else
    v35 = sub_1BA2C26A8();
LABEL_32:
  sub_1BA258A50(v33, type metadata accessor for NativeAdInfo.Fulfilled);
  sub_1BA258A50(v34, type metadata accessor for NativeAdInfo.Fulfilled);
  return v35 & 1;
}

uint64_t sub_1BA2547E8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for NativeAdInfo.Unfilled(a2, a1, &type metadata for NativeAdInfo.Unfilled);
  return a2;
}

uint64_t sub_1BA25481C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for NativeAdInfo.Unfilled(a2, a1, &type metadata for NativeAdInfo.Discarded);
  return a2;
}

uint64_t _s7NewsAds12NativeAdInfoO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  __int128 v21;
  __int128 v22;
  char v24;
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  char v29;
  char v30;
  uint64_t (*v31)(_QWORD);
  char v32;
  char v33;
  uint64_t v35;
  _QWORD *v36;
  _BYTE v37[16];
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[16];
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;

  v4 = type metadata accessor for NativeAdInfo.Fulfilled(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for NativeAdInfo(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v36 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (uint64_t *)((char *)&v35 - v11);
  MEMORY[0x1E0C80A78](v10);
  v14 = (uint64_t *)((char *)&v35 - v13);
  sub_1BA2589F0();
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_1BA24AA98(a1, (uint64_t)v18, type metadata accessor for NativeAdInfo);
  sub_1BA24AA98(a2, v19, type metadata accessor for NativeAdInfo);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BA24AA98((uint64_t)v18, (uint64_t)v12, type metadata accessor for NativeAdInfo);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v21 = *(_OWORD *)(v19 + 48);
        v45 = *(_OWORD *)(v19 + 32);
        v46 = v21;
        v47 = *(_OWORD *)(v19 + 64);
        v48 = *(_QWORD *)(v19 + 80);
        v22 = *(_OWORD *)(v19 + 16);
        v43 = *(_OWORD *)v19;
        v44 = v22;
        if (*v12 == (_QWORD)v43 && v12[1] == *((_QWORD *)&v43 + 1))
        {
          sub_1BA2547E8((uint64_t)v12, (uint64_t)v40);
          sub_1BA2547E8((uint64_t)&v43, (uint64_t)v37);
        }
        else
        {
          v24 = sub_1BA2C26A8();
          sub_1BA2547E8((uint64_t)v12, (uint64_t)v40);
          sub_1BA2547E8((uint64_t)&v43, (uint64_t)v37);
          if ((v24 & 1) == 0)
          {
            sub_1BA2530B4((uint64_t)v40);
            sub_1BA2530B4((uint64_t)v37);
            sub_1BA2530B4((uint64_t)&v43);
            sub_1BA2530B4((uint64_t)v12);
LABEL_34:
            v30 = 0;
            goto LABEL_35;
          }
        }
        if (v41 == v38 && v42 == v39)
        {
          sub_1BA2530B4((uint64_t)v40);
          sub_1BA2530B4((uint64_t)v37);
          sub_1BA2530B4((uint64_t)&v43);
          sub_1BA2530B4((uint64_t)v12);
        }
        else
        {
          v32 = sub_1BA2C26A8();
          sub_1BA2530B4((uint64_t)v40);
          sub_1BA2530B4((uint64_t)v37);
          sub_1BA2530B4((uint64_t)&v43);
          sub_1BA2530B4((uint64_t)v12);
          if ((v32 & 1) == 0)
            goto LABEL_34;
        }
LABEL_32:
        v30 = 1;
        goto LABEL_35;
      }
      sub_1BA2530B4((uint64_t)v12);
    }
    else
    {
      v25 = v36;
      sub_1BA24AA98((uint64_t)v18, (uint64_t)v36, type metadata accessor for NativeAdInfo);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v26 = *(_OWORD *)(v19 + 48);
        v45 = *(_OWORD *)(v19 + 32);
        v46 = v26;
        v47 = *(_OWORD *)(v19 + 64);
        v48 = *(_QWORD *)(v19 + 80);
        v27 = *(_OWORD *)(v19 + 16);
        v43 = *(_OWORD *)v19;
        v44 = v27;
        if (*v25 == (_QWORD)v43 && v25[1] == *((_QWORD *)&v43 + 1))
        {
          sub_1BA25481C((uint64_t)v25, (uint64_t)v40);
          sub_1BA25481C((uint64_t)&v43, (uint64_t)v37);
        }
        else
        {
          v29 = sub_1BA2C26A8();
          sub_1BA25481C((uint64_t)v25, (uint64_t)v40);
          sub_1BA25481C((uint64_t)&v43, (uint64_t)v37);
          if ((v29 & 1) == 0)
          {
            sub_1BA253088((uint64_t)v40);
            sub_1BA253088((uint64_t)v37);
            sub_1BA253088((uint64_t)&v43);
            sub_1BA253088((uint64_t)v25);
            goto LABEL_34;
          }
        }
        if (v41 == v38 && v42 == v39)
        {
          sub_1BA253088((uint64_t)v40);
          sub_1BA253088((uint64_t)v37);
          sub_1BA253088((uint64_t)&v43);
          sub_1BA253088((uint64_t)v25);
        }
        else
        {
          v33 = sub_1BA2C26A8();
          sub_1BA253088((uint64_t)v40);
          sub_1BA253088((uint64_t)v37);
          sub_1BA253088((uint64_t)&v43);
          sub_1BA253088((uint64_t)v25);
          if ((v33 & 1) == 0)
            goto LABEL_34;
        }
        goto LABEL_32;
      }
      sub_1BA253088((uint64_t)v25);
    }
  }
  else
  {
    sub_1BA24AA98((uint64_t)v18, (uint64_t)v14, type metadata accessor for NativeAdInfo);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_1BA258B3C(v19, (uint64_t)v6, type metadata accessor for NativeAdInfo.Fulfilled);
      v30 = _s7NewsAds12NativeAdInfoO9FulfilledV2eeoiySbAE_AEtFZ_0(v14, v6);
      sub_1BA258A50((uint64_t)v6, type metadata accessor for NativeAdInfo.Fulfilled);
      sub_1BA258A50((uint64_t)v14, type metadata accessor for NativeAdInfo.Fulfilled);
LABEL_35:
      v31 = type metadata accessor for NativeAdInfo;
      goto LABEL_36;
    }
    sub_1BA258A50((uint64_t)v14, type metadata accessor for NativeAdInfo.Fulfilled);
  }
  v30 = 0;
  v31 = (uint64_t (*)(_QWORD))sub_1BA2589F0;
LABEL_36:
  sub_1BA258A50((uint64_t)v18, v31);
  return v30 & 1;
}

uint64_t initializeBufferWithCopyOfBuffer for NativeAdInfo(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  void *v77;
  id v78;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  int *v84;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      v7 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v7;
      v8 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v8;
      *(_QWORD *)(a1 + 32) = a2[4];
      v9 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 64) = v9;
      v10 = v9;
      v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      v11(a1 + 40, (uint64_t)(a2 + 5), v10);
      v12 = (void *)a2[10];
      *(_QWORD *)(a1 + 80) = v12;
      v13 = v12;
LABEL_21:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    v15 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v15;
    v16 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v16;
    v17 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v17;
    v18 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v18;
    v19 = a2[9];
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v19;
    v20 = a2[11];
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_QWORD *)(a1 + 88) = v20;
    *(_QWORD *)(a1 + 96) = a2[12];
    v84 = (int *)type metadata accessor for NativeAdInfo.Fulfilled(0);
    v21 = v84[11];
    v22 = a1 + v21;
    v23 = (uint64_t)a2 + v21;
    v24 = *(uint64_t *)((char *)a2 + v21 + 8);
    *(_QWORD *)v22 = *(uint64_t *)((char *)a2 + v21);
    *(_QWORD *)(v22 + 8) = v24;
    *(_BYTE *)(v22 + 16) = *((_BYTE *)a2 + v21 + 16);
    *(_QWORD *)(v22 + 24) = *(uint64_t *)((char *)a2 + v21 + 24);
    *(_BYTE *)(v22 + 32) = *((_BYTE *)a2 + v21 + 32);
    v80 = *(uint64_t *)((char *)a2 + v21 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v80)
    {
      *(_QWORD *)(v22 + 40) = *(_QWORD *)(v23 + 40);
      *(_QWORD *)(v22 + 48) = v80;
      *(_QWORD *)(v22 + 56) = *(_QWORD *)(v23 + 56);
      *(_BYTE *)(v22 + 64) = *(_BYTE *)(v23 + 64);
      v25 = *(_QWORD *)(v23 + 80);
      *(_QWORD *)(v22 + 72) = *(_QWORD *)(v23 + 72);
      *(_QWORD *)(v22 + 80) = v25;
      v26 = *(_QWORD *)(v23 + 96);
      *(_QWORD *)(v22 + 88) = *(_QWORD *)(v23 + 88);
      *(_QWORD *)(v22 + 96) = v26;
      v27 = *(_QWORD *)(v23 + 112);
      *(_QWORD *)(v22 + 104) = *(_QWORD *)(v23 + 104);
      *(_QWORD *)(v22 + 112) = v27;
      *(_QWORD *)(v22 + 120) = *(_QWORD *)(v23 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v28 = *(_OWORD *)(v23 + 88);
      *(_OWORD *)(v22 + 72) = *(_OWORD *)(v23 + 72);
      *(_OWORD *)(v22 + 88) = v28;
      *(_OWORD *)(v22 + 104) = *(_OWORD *)(v23 + 104);
      *(_QWORD *)(v22 + 120) = *(_QWORD *)(v23 + 120);
      v29 = *(_OWORD *)(v23 + 56);
      *(_OWORD *)(v22 + 40) = *(_OWORD *)(v23 + 40);
      *(_OWORD *)(v22 + 56) = v29;
    }
    v30 = *(_QWORD *)(v23 + 136);
    *(_QWORD *)(v22 + 128) = *(_QWORD *)(v23 + 128);
    *(_QWORD *)(v22 + 136) = v30;
    v31 = *(_QWORD *)(v23 + 152);
    *(_QWORD *)(v22 + 144) = *(_QWORD *)(v23 + 144);
    *(_QWORD *)(v22 + 152) = v31;
    *(_QWORD *)(v22 + 160) = *(_QWORD *)(v23 + 160);
    *(_OWORD *)(v22 + 168) = *(_OWORD *)(v23 + 168);
    v32 = *(_QWORD *)(v23 + 192);
    *(_QWORD *)(v22 + 184) = *(_QWORD *)(v23 + 184);
    *(_QWORD *)(v22 + 192) = v32;
    v33 = *(_QWORD *)(v23 + 208);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v33)
    {
      *(_QWORD *)(v22 + 200) = *(_QWORD *)(v23 + 200);
      *(_QWORD *)(v22 + 208) = v33;
      v34 = *(_QWORD *)(v23 + 224);
      *(_QWORD *)(v22 + 216) = *(_QWORD *)(v23 + 216);
      *(_QWORD *)(v22 + 224) = v34;
      *(_QWORD *)(v22 + 232) = *(_QWORD *)(v23 + 232);
      *(_OWORD *)(v22 + 240) = *(_OWORD *)(v23 + 240);
      v35 = *(_QWORD *)(v23 + 264);
      *(_QWORD *)(v22 + 256) = *(_QWORD *)(v23 + 256);
      *(_QWORD *)(v22 + 264) = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v36 = *(_QWORD *)(v23 + 280);
      if (v36)
      {
LABEL_12:
        *(_QWORD *)(v22 + 272) = *(_QWORD *)(v23 + 272);
        *(_QWORD *)(v22 + 280) = v36;
        v37 = *(_QWORD *)(v23 + 296);
        *(_QWORD *)(v22 + 288) = *(_QWORD *)(v23 + 288);
        *(_QWORD *)(v22 + 296) = v37;
        v38 = *(_QWORD *)(v23 + 312);
        *(_QWORD *)(v22 + 304) = *(_QWORD *)(v23 + 304);
        *(_QWORD *)(v22 + 312) = v38;
        v39 = *(_QWORD *)(v23 + 328);
        *(_QWORD *)(v22 + 320) = *(_QWORD *)(v23 + 320);
        *(_QWORD *)(v22 + 328) = v39;
        *(_QWORD *)(v22 + 336) = *(_QWORD *)(v23 + 336);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_15;
      }
    }
    else
    {
      v40 = *(_OWORD *)(v23 + 248);
      *(_OWORD *)(v22 + 232) = *(_OWORD *)(v23 + 232);
      *(_OWORD *)(v22 + 248) = v40;
      *(_QWORD *)(v22 + 264) = *(_QWORD *)(v23 + 264);
      v41 = *(_OWORD *)(v23 + 216);
      *(_OWORD *)(v22 + 200) = *(_OWORD *)(v23 + 200);
      *(_OWORD *)(v22 + 216) = v41;
      v36 = *(_QWORD *)(v23 + 280);
      if (v36)
        goto LABEL_12;
    }
    v42 = *(_OWORD *)(v23 + 320);
    *(_OWORD *)(v22 + 304) = *(_OWORD *)(v23 + 304);
    *(_OWORD *)(v22 + 320) = v42;
    *(_QWORD *)(v22 + 336) = *(_QWORD *)(v23 + 336);
    v43 = *(_OWORD *)(v23 + 288);
    *(_OWORD *)(v22 + 272) = *(_OWORD *)(v23 + 272);
    *(_OWORD *)(v22 + 288) = v43;
LABEL_15:
    v44 = *(_QWORD *)(v23 + 352);
    *(_QWORD *)(v22 + 344) = *(_QWORD *)(v23 + 344);
    *(_QWORD *)(v22 + 352) = v44;
    *(_WORD *)(v22 + 360) = *(_WORD *)(v23 + 360);
    v45 = *(_QWORD *)(v23 + 376);
    *(_QWORD *)(v22 + 368) = *(_QWORD *)(v23 + 368);
    *(_QWORD *)(v22 + 376) = v45;
    v46 = *(_QWORD *)(v23 + 392);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v46)
    {
      *(_QWORD *)(v22 + 384) = *(_QWORD *)(v23 + 384);
      *(_QWORD *)(v22 + 392) = v46;
      *(_WORD *)(v22 + 400) = *(_WORD *)(v23 + 400);
      v47 = *(_QWORD *)(v23 + 416);
      *(_QWORD *)(v22 + 408) = *(_QWORD *)(v23 + 408);
      *(_QWORD *)(v22 + 416) = v47;
      v48 = *(_QWORD *)(v23 + 432);
      *(_QWORD *)(v22 + 424) = *(_QWORD *)(v23 + 424);
      *(_QWORD *)(v22 + 432) = v48;
      v49 = *(_QWORD *)(v23 + 448);
      *(_QWORD *)(v22 + 440) = *(_QWORD *)(v23 + 440);
      *(_QWORD *)(v22 + 448) = v49;
      *(_QWORD *)(v22 + 456) = *(_QWORD *)(v23 + 456);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v50 = *(_QWORD *)(v23 + 472);
      if (v50)
      {
LABEL_17:
        *(_QWORD *)(v22 + 464) = *(_QWORD *)(v23 + 464);
        *(_QWORD *)(v22 + 472) = v50;
        *(_BYTE *)(v22 + 480) = *(_BYTE *)(v23 + 480);
        v51 = *(_QWORD *)(v23 + 496);
        *(_QWORD *)(v22 + 488) = *(_QWORD *)(v23 + 488);
        *(_QWORD *)(v22 + 496) = v51;
        v52 = *(_QWORD *)(v23 + 512);
        *(_QWORD *)(v22 + 504) = *(_QWORD *)(v23 + 504);
        *(_QWORD *)(v22 + 512) = v52;
        *(_QWORD *)(v22 + 520) = *(_QWORD *)(v23 + 520);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_20:
        *(_BYTE *)(v22 + 528) = *(_BYTE *)(v23 + 528);
        *(_QWORD *)(v22 + 536) = *(_QWORD *)(v23 + 536);
        sub_1BA234D60(0, (unint64_t *)&qword_1ED5B2B20, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for AdRequest);
        v83 = v57;
        v58 = *(int *)(v57 + 56);
        v59 = (_QWORD *)(v22 + v58);
        v60 = v23 + v58;
        v61 = *(_QWORD *)(v23 + v58 + 8);
        *v59 = *(_QWORD *)(v23 + v58);
        v59[1] = v61;
        v62 = type metadata accessor for NativeAdPlacement();
        v63 = *(int *)(v62 + 20);
        v81 = v60 + v63;
        v82 = (char *)v59 + v63;
        v64 = sub_1BA2C1AC0();
        v65 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v65(v82, v81, v64);
        *((_BYTE *)v59 + *(int *)(v62 + 24)) = *(_BYTE *)(v60 + *(int *)(v62 + 24));
        v66 = *(int *)(v83 + 60);
        v67 = (_QWORD *)(v22 + v66);
        v68 = (_QWORD *)(v23 + v66);
        v69 = v68[1];
        *v67 = *v68;
        v67[1] = v69;
        v70 = v84[12];
        v71 = a1 + v70;
        v72 = (uint64_t)a2 + v70;
        v73 = *(_OWORD *)((char *)a2 + v70 + 24);
        *(_OWORD *)(a1 + v70 + 24) = v73;
        v74 = v73;
        v75 = **(void (***)(uint64_t, uint64_t, uint64_t))(v73 - 8);
        swift_bridgeObjectRetain();
        v75(v71, v72, v74);
        v76 = v84[13];
        v77 = *(void **)((char *)a2 + v76);
        *(_QWORD *)(a1 + v76) = v77;
        v78 = v77;
        goto LABEL_21;
      }
    }
    else
    {
      v53 = *(_OWORD *)(v23 + 432);
      *(_OWORD *)(v22 + 416) = *(_OWORD *)(v23 + 416);
      *(_OWORD *)(v22 + 432) = v53;
      *(_OWORD *)(v22 + 448) = *(_OWORD *)(v23 + 448);
      v54 = *(_OWORD *)(v23 + 400);
      *(_OWORD *)(v22 + 384) = *(_OWORD *)(v23 + 384);
      *(_OWORD *)(v22 + 400) = v54;
      v50 = *(_QWORD *)(v23 + 472);
      if (v50)
        goto LABEL_17;
    }
    v55 = *(_OWORD *)(v23 + 480);
    *(_OWORD *)(v22 + 464) = *(_OWORD *)(v23 + 464);
    *(_OWORD *)(v22 + 480) = v55;
    v56 = *(_OWORD *)(v23 + 512);
    *(_OWORD *)(v22 + 496) = *(_OWORD *)(v23 + 496);
    *(_OWORD *)(v22 + 512) = v56;
    goto LABEL_20;
  }
  v14 = *a2;
  *(_QWORD *)a1 = *a2;
  a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

void destroy for NativeAdInfo(uint64_t a1)
{
  int EnumCaseMultiPayload;
  int *v3;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  id *v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
    v9 = (id *)(a1 + 80);
  }
  else
  {
    if (EnumCaseMultiPayload)
      return;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v3 = (int *)type metadata accessor for NativeAdInfo.Fulfilled(0);
    v4 = (_QWORD *)(a1 + v3[11]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v4[6])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v4[26])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v4[35])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v4[49])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v4[59])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_1BA234D60(0, (unint64_t *)&qword_1ED5B2B20, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for AdRequest);
    v6 = (char *)v4 + *(int *)(v5 + 56);
    swift_bridgeObjectRelease();
    v7 = &v6[*(int *)(type metadata accessor for NativeAdPlacement() + 20)];
    v8 = sub_1BA2C1AC0();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(a1 + v3[12]);
    v9 = (id *)(a1 + v3[13]);
  }

}

_QWORD *initializeWithCopy for NativeAdInfo(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(_QWORD *, _QWORD *, uint64_t);
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  id v75;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2 && EnumCaseMultiPayload != 1)
  {
    v11 = a2[1];
    *a1 = *a2;
    a1[1] = v11;
    v12 = a2[3];
    a1[2] = a2[2];
    a1[3] = v12;
    v13 = a2[5];
    a1[4] = a2[4];
    a1[5] = v13;
    v14 = a2[7];
    a1[6] = a2[6];
    a1[7] = v14;
    v15 = a2[9];
    a1[8] = a2[8];
    a1[9] = v15;
    v16 = a2[11];
    a1[10] = a2[10];
    a1[11] = v16;
    a1[12] = a2[12];
    v17 = type metadata accessor for NativeAdInfo.Fulfilled(0);
    v18 = *(int *)(v17 + 44);
    v19 = a2;
    v20 = (char *)a1 + v18;
    v81 = v17;
    v82 = v19;
    v21 = (char *)v19 + v18;
    v22 = *(_QWORD *)((char *)v19 + v18 + 8);
    *(_QWORD *)v20 = *(_QWORD *)((char *)v19 + v18);
    *((_QWORD *)v20 + 1) = v22;
    v20[16] = *((_BYTE *)v19 + v18 + 16);
    *((_QWORD *)v20 + 3) = *(_QWORD *)((char *)v19 + v18 + 24);
    v20[32] = *((_BYTE *)v19 + v18 + 32);
    v77 = *(_QWORD *)((char *)v19 + v18 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v77)
    {
      *((_QWORD *)v20 + 5) = *((_QWORD *)v21 + 5);
      *((_QWORD *)v20 + 6) = v77;
      *((_QWORD *)v20 + 7) = *((_QWORD *)v21 + 7);
      v20[64] = v21[64];
      v23 = *((_QWORD *)v21 + 10);
      *((_QWORD *)v20 + 9) = *((_QWORD *)v21 + 9);
      *((_QWORD *)v20 + 10) = v23;
      v24 = *((_QWORD *)v21 + 12);
      *((_QWORD *)v20 + 11) = *((_QWORD *)v21 + 11);
      *((_QWORD *)v20 + 12) = v24;
      v25 = *((_QWORD *)v21 + 14);
      *((_QWORD *)v20 + 13) = *((_QWORD *)v21 + 13);
      *((_QWORD *)v20 + 14) = v25;
      *((_QWORD *)v20 + 15) = *((_QWORD *)v21 + 15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v26 = *(_OWORD *)(v21 + 88);
      *(_OWORD *)(v20 + 72) = *(_OWORD *)(v21 + 72);
      *(_OWORD *)(v20 + 88) = v26;
      *(_OWORD *)(v20 + 104) = *(_OWORD *)(v21 + 104);
      *((_QWORD *)v20 + 15) = *((_QWORD *)v21 + 15);
      v27 = *(_OWORD *)(v21 + 56);
      *(_OWORD *)(v20 + 40) = *(_OWORD *)(v21 + 40);
      *(_OWORD *)(v20 + 56) = v27;
    }
    v28 = *((_QWORD *)v21 + 17);
    *((_QWORD *)v20 + 16) = *((_QWORD *)v21 + 16);
    *((_QWORD *)v20 + 17) = v28;
    v29 = *((_QWORD *)v21 + 19);
    *((_QWORD *)v20 + 18) = *((_QWORD *)v21 + 18);
    *((_QWORD *)v20 + 19) = v29;
    *((_QWORD *)v20 + 20) = *((_QWORD *)v21 + 20);
    *(_OWORD *)(v20 + 168) = *(_OWORD *)(v21 + 168);
    v30 = *((_QWORD *)v21 + 24);
    *((_QWORD *)v20 + 23) = *((_QWORD *)v21 + 23);
    *((_QWORD *)v20 + 24) = v30;
    v31 = *((_QWORD *)v21 + 26);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v31)
    {
      *((_QWORD *)v20 + 25) = *((_QWORD *)v21 + 25);
      *((_QWORD *)v20 + 26) = v31;
      v32 = *((_QWORD *)v21 + 28);
      *((_QWORD *)v20 + 27) = *((_QWORD *)v21 + 27);
      *((_QWORD *)v20 + 28) = v32;
      *((_QWORD *)v20 + 29) = *((_QWORD *)v21 + 29);
      *((_OWORD *)v20 + 15) = *((_OWORD *)v21 + 15);
      v33 = *((_QWORD *)v21 + 33);
      *((_QWORD *)v20 + 32) = *((_QWORD *)v21 + 32);
      *((_QWORD *)v20 + 33) = v33;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v34 = *((_QWORD *)v21 + 35);
      if (v34)
      {
LABEL_9:
        *((_QWORD *)v20 + 34) = *((_QWORD *)v21 + 34);
        *((_QWORD *)v20 + 35) = v34;
        v35 = *((_QWORD *)v21 + 37);
        *((_QWORD *)v20 + 36) = *((_QWORD *)v21 + 36);
        *((_QWORD *)v20 + 37) = v35;
        v36 = *((_QWORD *)v21 + 39);
        *((_QWORD *)v20 + 38) = *((_QWORD *)v21 + 38);
        *((_QWORD *)v20 + 39) = v36;
        v37 = *((_QWORD *)v21 + 41);
        *((_QWORD *)v20 + 40) = *((_QWORD *)v21 + 40);
        *((_QWORD *)v20 + 41) = v37;
        *((_QWORD *)v20 + 42) = *((_QWORD *)v21 + 42);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_12;
      }
    }
    else
    {
      v38 = *(_OWORD *)(v21 + 248);
      *(_OWORD *)(v20 + 232) = *(_OWORD *)(v21 + 232);
      *(_OWORD *)(v20 + 248) = v38;
      *((_QWORD *)v20 + 33) = *((_QWORD *)v21 + 33);
      v39 = *(_OWORD *)(v21 + 216);
      *(_OWORD *)(v20 + 200) = *(_OWORD *)(v21 + 200);
      *(_OWORD *)(v20 + 216) = v39;
      v34 = *((_QWORD *)v21 + 35);
      if (v34)
        goto LABEL_9;
    }
    v40 = *((_OWORD *)v21 + 20);
    *((_OWORD *)v20 + 19) = *((_OWORD *)v21 + 19);
    *((_OWORD *)v20 + 20) = v40;
    *((_QWORD *)v20 + 42) = *((_QWORD *)v21 + 42);
    v41 = *((_OWORD *)v21 + 18);
    *((_OWORD *)v20 + 17) = *((_OWORD *)v21 + 17);
    *((_OWORD *)v20 + 18) = v41;
LABEL_12:
    v42 = *((_QWORD *)v21 + 44);
    *((_QWORD *)v20 + 43) = *((_QWORD *)v21 + 43);
    *((_QWORD *)v20 + 44) = v42;
    *((_WORD *)v20 + 180) = *((_WORD *)v21 + 180);
    v43 = *((_QWORD *)v21 + 47);
    *((_QWORD *)v20 + 46) = *((_QWORD *)v21 + 46);
    *((_QWORD *)v20 + 47) = v43;
    v44 = *((_QWORD *)v21 + 49);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v44)
    {
      *((_QWORD *)v20 + 48) = *((_QWORD *)v21 + 48);
      *((_QWORD *)v20 + 49) = v44;
      *((_WORD *)v20 + 200) = *((_WORD *)v21 + 200);
      v45 = *((_QWORD *)v21 + 52);
      *((_QWORD *)v20 + 51) = *((_QWORD *)v21 + 51);
      *((_QWORD *)v20 + 52) = v45;
      v46 = *((_QWORD *)v21 + 54);
      *((_QWORD *)v20 + 53) = *((_QWORD *)v21 + 53);
      *((_QWORD *)v20 + 54) = v46;
      v47 = *((_QWORD *)v21 + 56);
      *((_QWORD *)v20 + 55) = *((_QWORD *)v21 + 55);
      *((_QWORD *)v20 + 56) = v47;
      *((_QWORD *)v20 + 57) = *((_QWORD *)v21 + 57);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v48 = *((_QWORD *)v21 + 59);
      if (v48)
      {
LABEL_14:
        *((_QWORD *)v20 + 58) = *((_QWORD *)v21 + 58);
        *((_QWORD *)v20 + 59) = v48;
        v20[480] = v21[480];
        v49 = *((_QWORD *)v21 + 62);
        *((_QWORD *)v20 + 61) = *((_QWORD *)v21 + 61);
        *((_QWORD *)v20 + 62) = v49;
        v50 = *((_QWORD *)v21 + 64);
        *((_QWORD *)v20 + 63) = *((_QWORD *)v21 + 63);
        *((_QWORD *)v20 + 64) = v50;
        *((_QWORD *)v20 + 65) = *((_QWORD *)v21 + 65);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_17:
        v20[528] = v21[528];
        *((_QWORD *)v20 + 67) = *((_QWORD *)v21 + 67);
        sub_1BA234D60(0, (unint64_t *)&qword_1ED5B2B20, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for AdRequest);
        v80 = v55;
        v56 = *(int *)(v55 + 56);
        v57 = &v20[v56];
        v58 = &v21[v56];
        v59 = *(_QWORD *)&v21[v56 + 8];
        *(_QWORD *)v57 = *(_QWORD *)&v21[v56];
        *((_QWORD *)v57 + 1) = v59;
        v60 = type metadata accessor for NativeAdPlacement();
        v61 = *(int *)(v60 + 20);
        v78 = &v58[v61];
        v79 = &v57[v61];
        v62 = sub_1BA2C1AC0();
        v63 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v63(v79, v78, v62);
        v57[*(int *)(v60 + 24)] = v58[*(int *)(v60 + 24)];
        v64 = *(int *)(v80 + 60);
        v65 = &v20[v64];
        v66 = &v21[v64];
        v67 = *((_QWORD *)v66 + 1);
        *(_QWORD *)v65 = *(_QWORD *)v66;
        *((_QWORD *)v65 + 1) = v67;
        v68 = *(int *)(v81 + 48);
        v69 = (char *)a1 + v68;
        v70 = (uint64_t)v82 + v68;
        v71 = *(_OWORD *)((char *)v82 + v68 + 24);
        *(_OWORD *)((char *)a1 + v68 + 24) = v71;
        v72 = v71;
        v73 = **(void (***)(char *, uint64_t, uint64_t))(v71 - 8);
        swift_bridgeObjectRetain();
        v73(v69, v70, v72);
        v74 = *(int *)(v81 + 52);
        v10 = *(void **)((char *)v82 + v74);
        *(_QWORD *)((char *)a1 + v74) = v10;
        goto LABEL_18;
      }
    }
    else
    {
      v51 = *((_OWORD *)v21 + 27);
      *((_OWORD *)v20 + 26) = *((_OWORD *)v21 + 26);
      *((_OWORD *)v20 + 27) = v51;
      *((_OWORD *)v20 + 28) = *((_OWORD *)v21 + 28);
      v52 = *((_OWORD *)v21 + 25);
      *((_OWORD *)v20 + 24) = *((_OWORD *)v21 + 24);
      *((_OWORD *)v20 + 25) = v52;
      v48 = *((_QWORD *)v21 + 59);
      if (v48)
        goto LABEL_14;
    }
    v53 = *((_OWORD *)v21 + 30);
    *((_OWORD *)v20 + 29) = *((_OWORD *)v21 + 29);
    *((_OWORD *)v20 + 30) = v53;
    v54 = *((_OWORD *)v21 + 32);
    *((_OWORD *)v20 + 31) = *((_OWORD *)v21 + 31);
    *((_OWORD *)v20 + 32) = v54;
    goto LABEL_17;
  }
  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  a1[4] = a2[4];
  v7 = *((_OWORD *)a2 + 4);
  *((_OWORD *)a1 + 4) = v7;
  v8 = v7;
  v9 = **(void (***)(_QWORD *, _QWORD *, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v9(a1 + 5, a2 + 5, v8);
  v10 = (void *)a2[10];
  a1[10] = v10;
LABEL_18:
  v75 = v10;
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for NativeAdInfo(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  void (*v6)(_QWORD *, _QWORD *, uint64_t);
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  id v46;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  int *v52;

  if (a1 != a2)
  {
    sub_1BA258A50((uint64_t)a1, type metadata accessor for NativeAdInfo);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      v5 = a2[8];
      a1[8] = v5;
      a1[9] = a2[9];
      v6 = **(void (***)(_QWORD *, _QWORD *, uint64_t))(v5 - 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      v6(a1 + 5, a2 + 5, v5);
      v7 = (void *)a2[10];
      a1[10] = v7;
LABEL_19:
      v46 = v7;
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    a1[6] = a2[6];
    a1[7] = a2[7];
    a1[8] = a2[8];
    a1[9] = a2[9];
    a1[10] = a2[10];
    a1[11] = a2[11];
    a1[12] = a2[12];
    v52 = (int *)type metadata accessor for NativeAdInfo.Fulfilled(0);
    v8 = v52[11];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_QWORD *)v9 = *(_QWORD *)((char *)a2 + v8);
    *((_QWORD *)v9 + 1) = *(_QWORD *)((char *)a2 + v8 + 8);
    v9[16] = *((_BYTE *)a2 + v8 + 16);
    *((_QWORD *)v9 + 3) = *(_QWORD *)((char *)a2 + v8 + 24);
    v9[32] = *((_BYTE *)a2 + v8 + 32);
    v48 = *(_QWORD *)((char *)a2 + v8 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v48)
    {
      *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
      *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
      *((_QWORD *)v9 + 7) = *((_QWORD *)v10 + 7);
      v9[64] = v10[64];
      *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
      *((_QWORD *)v9 + 10) = *((_QWORD *)v10 + 10);
      *((_QWORD *)v9 + 11) = *((_QWORD *)v10 + 11);
      *((_QWORD *)v9 + 12) = *((_QWORD *)v10 + 12);
      *((_QWORD *)v9 + 13) = *((_QWORD *)v10 + 13);
      *((_QWORD *)v9 + 14) = *((_QWORD *)v10 + 14);
      *((_QWORD *)v9 + 15) = *((_QWORD *)v10 + 15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v11 = *(_OWORD *)(v10 + 56);
      *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
      *(_OWORD *)(v9 + 56) = v11;
      v12 = *(_OWORD *)(v10 + 72);
      v13 = *(_OWORD *)(v10 + 88);
      v14 = *(_OWORD *)(v10 + 104);
      *((_QWORD *)v9 + 15) = *((_QWORD *)v10 + 15);
      *(_OWORD *)(v9 + 88) = v13;
      *(_OWORD *)(v9 + 104) = v14;
      *(_OWORD *)(v9 + 72) = v12;
    }
    *((_QWORD *)v9 + 16) = *((_QWORD *)v10 + 16);
    *((_QWORD *)v9 + 17) = *((_QWORD *)v10 + 17);
    *((_QWORD *)v9 + 18) = *((_QWORD *)v10 + 18);
    *((_QWORD *)v9 + 19) = *((_QWORD *)v10 + 19);
    *((_QWORD *)v9 + 20) = *((_QWORD *)v10 + 20);
    *((_QWORD *)v9 + 21) = *((_QWORD *)v10 + 21);
    *((_QWORD *)v9 + 22) = *((_QWORD *)v10 + 22);
    *((_QWORD *)v9 + 23) = *((_QWORD *)v10 + 23);
    *((_QWORD *)v9 + 24) = *((_QWORD *)v10 + 24);
    v15 = *((_QWORD *)v10 + 26);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15)
    {
      *((_QWORD *)v9 + 25) = *((_QWORD *)v10 + 25);
      *((_QWORD *)v9 + 26) = *((_QWORD *)v10 + 26);
      *((_QWORD *)v9 + 27) = *((_QWORD *)v10 + 27);
      *((_QWORD *)v9 + 28) = *((_QWORD *)v10 + 28);
      *((_QWORD *)v9 + 29) = *((_QWORD *)v10 + 29);
      *((_QWORD *)v9 + 30) = *((_QWORD *)v10 + 30);
      *((_QWORD *)v9 + 31) = *((_QWORD *)v10 + 31);
      *((_QWORD *)v9 + 32) = *((_QWORD *)v10 + 32);
      *((_QWORD *)v9 + 33) = *((_QWORD *)v10 + 33);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (*((_QWORD *)v10 + 35))
      {
LABEL_10:
        *((_QWORD *)v9 + 34) = *((_QWORD *)v10 + 34);
        *((_QWORD *)v9 + 35) = *((_QWORD *)v10 + 35);
        *((_QWORD *)v9 + 36) = *((_QWORD *)v10 + 36);
        *((_QWORD *)v9 + 37) = *((_QWORD *)v10 + 37);
        *((_QWORD *)v9 + 38) = *((_QWORD *)v10 + 38);
        *((_QWORD *)v9 + 39) = *((_QWORD *)v10 + 39);
        *((_QWORD *)v9 + 40) = *((_QWORD *)v10 + 40);
        *((_QWORD *)v9 + 41) = *((_QWORD *)v10 + 41);
        *((_QWORD *)v9 + 42) = *((_QWORD *)v10 + 42);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_13;
      }
    }
    else
    {
      *(_OWORD *)(v9 + 200) = *(_OWORD *)(v10 + 200);
      v16 = *(_OWORD *)(v10 + 216);
      v17 = *(_OWORD *)(v10 + 232);
      v18 = *(_OWORD *)(v10 + 248);
      *((_QWORD *)v9 + 33) = *((_QWORD *)v10 + 33);
      *(_OWORD *)(v9 + 232) = v17;
      *(_OWORD *)(v9 + 248) = v18;
      *(_OWORD *)(v9 + 216) = v16;
      if (*((_QWORD *)v10 + 35))
        goto LABEL_10;
    }
    *((_OWORD *)v9 + 17) = *((_OWORD *)v10 + 17);
    v19 = *((_OWORD *)v10 + 18);
    v20 = *((_OWORD *)v10 + 19);
    v21 = *((_OWORD *)v10 + 20);
    *((_QWORD *)v9 + 42) = *((_QWORD *)v10 + 42);
    *((_OWORD *)v9 + 19) = v20;
    *((_OWORD *)v9 + 20) = v21;
    *((_OWORD *)v9 + 18) = v19;
LABEL_13:
    *((_QWORD *)v9 + 43) = *((_QWORD *)v10 + 43);
    *((_QWORD *)v9 + 44) = *((_QWORD *)v10 + 44);
    v9[360] = v10[360];
    v9[361] = v10[361];
    *((_QWORD *)v9 + 46) = *((_QWORD *)v10 + 46);
    *((_QWORD *)v9 + 47) = *((_QWORD *)v10 + 47);
    v22 = *((_QWORD *)v10 + 49);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22)
    {
      *((_QWORD *)v9 + 48) = *((_QWORD *)v10 + 48);
      *((_QWORD *)v9 + 49) = *((_QWORD *)v10 + 49);
      v9[400] = v10[400];
      v9[401] = v10[401];
      *((_QWORD *)v9 + 51) = *((_QWORD *)v10 + 51);
      *((_QWORD *)v9 + 52) = *((_QWORD *)v10 + 52);
      *((_QWORD *)v9 + 53) = *((_QWORD *)v10 + 53);
      *((_QWORD *)v9 + 54) = *((_QWORD *)v10 + 54);
      *((_QWORD *)v9 + 55) = *((_QWORD *)v10 + 55);
      *((_QWORD *)v9 + 56) = *((_QWORD *)v10 + 56);
      *((_QWORD *)v9 + 57) = *((_QWORD *)v10 + 57);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (*((_QWORD *)v10 + 59))
      {
LABEL_15:
        *((_QWORD *)v9 + 58) = *((_QWORD *)v10 + 58);
        *((_QWORD *)v9 + 59) = *((_QWORD *)v10 + 59);
        v9[480] = v10[480];
        *((_QWORD *)v9 + 61) = *((_QWORD *)v10 + 61);
        *((_QWORD *)v9 + 62) = *((_QWORD *)v10 + 62);
        *((_QWORD *)v9 + 63) = *((_QWORD *)v10 + 63);
        *((_QWORD *)v9 + 64) = *((_QWORD *)v10 + 64);
        *((_QWORD *)v9 + 65) = *((_QWORD *)v10 + 65);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_18:
        v9[528] = v10[528];
        *((_QWORD *)v9 + 67) = *((_QWORD *)v10 + 67);
        sub_1BA234D60(0, (unint64_t *)&qword_1ED5B2B20, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for AdRequest);
        v51 = v29;
        v30 = *(int *)(v29 + 56);
        v31 = &v9[v30];
        v32 = &v10[v30];
        *(_QWORD *)v31 = *(_QWORD *)&v10[v30];
        *((_QWORD *)v31 + 1) = *(_QWORD *)&v10[v30 + 8];
        v33 = type metadata accessor for NativeAdPlacement();
        v34 = *(int *)(v33 + 20);
        v49 = &v32[v34];
        v50 = &v31[v34];
        v35 = sub_1BA2C1AC0();
        v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v36(v50, v49, v35);
        v31[*(int *)(v33 + 24)] = v32[*(int *)(v33 + 24)];
        v37 = *(int *)(v51 + 60);
        v38 = &v9[v37];
        v39 = &v10[v37];
        *(_QWORD *)v38 = *(_QWORD *)v39;
        *((_QWORD *)v38 + 1) = *((_QWORD *)v39 + 1);
        v40 = v52[12];
        v41 = (char *)a1 + v40;
        v42 = (char *)a2 + v40;
        v43 = *(_QWORD *)((char *)a2 + v40 + 24);
        *((_QWORD *)v41 + 3) = v43;
        *((_QWORD *)v41 + 4) = *(_QWORD *)((char *)a2 + v40 + 32);
        v44 = **(void (***)(char *, char *, uint64_t))(v43 - 8);
        swift_bridgeObjectRetain();
        v44(v41, v42, v43);
        v45 = v52[13];
        v7 = *(void **)((char *)a2 + v45);
        *(_QWORD *)((char *)a1 + v45) = v7;
        goto LABEL_19;
      }
    }
    else
    {
      *((_OWORD *)v9 + 24) = *((_OWORD *)v10 + 24);
      v23 = *((_OWORD *)v10 + 25);
      v24 = *((_OWORD *)v10 + 26);
      v25 = *((_OWORD *)v10 + 28);
      *((_OWORD *)v9 + 27) = *((_OWORD *)v10 + 27);
      *((_OWORD *)v9 + 28) = v25;
      *((_OWORD *)v9 + 25) = v23;
      *((_OWORD *)v9 + 26) = v24;
      if (*((_QWORD *)v10 + 59))
        goto LABEL_15;
    }
    v26 = *((_OWORD *)v10 + 29);
    v27 = *((_OWORD *)v10 + 30);
    v28 = *((_OWORD *)v10 + 32);
    *((_OWORD *)v9 + 31) = *((_OWORD *)v10 + 31);
    *((_OWORD *)v9 + 32) = v28;
    *((_OWORD *)v9 + 29) = v26;
    *((_OWORD *)v9 + 30) = v27;
    goto LABEL_18;
  }
  return a1;
}

_OWORD *initializeWithTake for NativeAdInfo(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  uint64_t v26;
  int *v27;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
    v27 = (int *)type metadata accessor for NativeAdInfo.Fulfilled(0);
    v9 = v27[11];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    *(_OWORD *)((char *)a1 + v9) = *(_OWORD *)((char *)a2 + v9);
    memcpy((char *)a1 + v9 + 16, (char *)a2 + v9 + 16, 0x210uLL);
    sub_1BA234D60(0, (unint64_t *)&qword_1ED5B2B20, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for AdRequest);
    v26 = v12;
    v13 = *(int *)(v12 + 56);
    v14 = &v10[v13];
    v15 = &v11[v13];
    *(_OWORD *)&v10[v13] = *(_OWORD *)&v11[v13];
    v16 = type metadata accessor for NativeAdPlacement();
    v17 = *(int *)(v16 + 20);
    v18 = &v14[v17];
    v19 = &v15[v17];
    v20 = sub_1BA2C1AC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
    v14[*(int *)(v16 + 24)] = v15[*(int *)(v16 + 24)];
    *(_OWORD *)&v10[*(int *)(v26 + 60)] = *(_OWORD *)&v11[*(int *)(v26 + 60)];
    v21 = v27[12];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
    v24 = *((_OWORD *)v23 + 1);
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *((_OWORD *)v22 + 1) = v24;
    *(_QWORD *)((char *)a1 + v27[13]) = *(_QWORD *)((char *)a2 + v27[13]);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *assignWithTake for NativeAdInfo(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  uint64_t v26;
  int *v27;

  if (a1 != a2)
  {
    sub_1BA258A50((uint64_t)a1, type metadata accessor for NativeAdInfo);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      v8 = a2[5];
      a1[4] = a2[4];
      a1[5] = v8;
      *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
      v27 = (int *)type metadata accessor for NativeAdInfo.Fulfilled(0);
      v9 = v27[11];
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      *(_OWORD *)((char *)a1 + v9) = *(_OWORD *)((char *)a2 + v9);
      memcpy((char *)a1 + v9 + 16, (char *)a2 + v9 + 16, 0x210uLL);
      sub_1BA234D60(0, (unint64_t *)&qword_1ED5B2B20, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for AdRequest);
      v26 = v12;
      v13 = *(int *)(v12 + 56);
      v14 = &v10[v13];
      v15 = &v11[v13];
      *(_OWORD *)&v10[v13] = *(_OWORD *)&v11[v13];
      v16 = type metadata accessor for NativeAdPlacement();
      v17 = *(int *)(v16 + 20);
      v18 = &v14[v17];
      v19 = &v15[v17];
      v20 = sub_1BA2C1AC0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      v14[*(int *)(v16 + 24)] = v15[*(int *)(v16 + 24)];
      *(_OWORD *)&v10[*(int *)(v26 + 60)] = *(_OWORD *)&v11[*(int *)(v26 + 60)];
      v21 = v27[12];
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
      v24 = *((_OWORD *)v23 + 1);
      *(_OWORD *)v22 = *(_OWORD *)v23;
      *((_OWORD *)v22 + 1) = v24;
      *(_QWORD *)((char *)a1 + v27[13]) = *(_QWORD *)((char *)a2 + v27[13]);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for NativeAdInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for NativeAdInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1BA2565F0()
{
  return swift_storeEnumTagMultiPayload();
}

_QWORD *initializeBufferWithCopyOfBuffer for NativeAdInfo.Fulfilled(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  __int128 v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  void *v70;
  id v71;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v78;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    v9 = a2[9];
    a1[8] = a2[8];
    a1[9] = v9;
    v10 = a2[11];
    a1[10] = a2[10];
    a1[11] = v10;
    a1[12] = a2[12];
    v11 = a3[11];
    v78 = a1;
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = *(_QWORD *)((char *)a2 + v11 + 8);
    *(_QWORD *)v12 = *(_QWORD *)((char *)a2 + v11);
    *((_QWORD *)v12 + 1) = v14;
    v12[16] = *((_BYTE *)a2 + v11 + 16);
    *((_QWORD *)v12 + 3) = *(_QWORD *)((char *)a2 + v11 + 24);
    v12[32] = *((_BYTE *)a2 + v11 + 32);
    v74 = *(_QWORD *)((char *)a2 + v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v74)
    {
      *((_QWORD *)v12 + 5) = *((_QWORD *)v13 + 5);
      *((_QWORD *)v12 + 6) = v74;
      *((_QWORD *)v12 + 7) = *((_QWORD *)v13 + 7);
      v12[64] = v13[64];
      v15 = *((_QWORD *)v13 + 10);
      *((_QWORD *)v12 + 9) = *((_QWORD *)v13 + 9);
      *((_QWORD *)v12 + 10) = v15;
      v16 = *((_QWORD *)v13 + 12);
      *((_QWORD *)v12 + 11) = *((_QWORD *)v13 + 11);
      *((_QWORD *)v12 + 12) = v16;
      v17 = *((_QWORD *)v13 + 14);
      *((_QWORD *)v12 + 13) = *((_QWORD *)v13 + 13);
      *((_QWORD *)v12 + 14) = v17;
      *((_QWORD *)v12 + 15) = *((_QWORD *)v13 + 15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v20 = *(_OWORD *)(v13 + 88);
      *(_OWORD *)(v12 + 72) = *(_OWORD *)(v13 + 72);
      *(_OWORD *)(v12 + 88) = v20;
      *(_OWORD *)(v12 + 104) = *(_OWORD *)(v13 + 104);
      *((_QWORD *)v12 + 15) = *((_QWORD *)v13 + 15);
      v21 = *(_OWORD *)(v13 + 56);
      *(_OWORD *)(v12 + 40) = *(_OWORD *)(v13 + 40);
      *(_OWORD *)(v12 + 56) = v21;
    }
    v22 = *((_QWORD *)v13 + 17);
    *((_QWORD *)v12 + 16) = *((_QWORD *)v13 + 16);
    *((_QWORD *)v12 + 17) = v22;
    v23 = *((_QWORD *)v13 + 19);
    *((_QWORD *)v12 + 18) = *((_QWORD *)v13 + 18);
    *((_QWORD *)v12 + 19) = v23;
    *((_QWORD *)v12 + 20) = *((_QWORD *)v13 + 20);
    *(_OWORD *)(v12 + 168) = *(_OWORD *)(v13 + 168);
    v24 = *((_QWORD *)v13 + 24);
    *((_QWORD *)v12 + 23) = *((_QWORD *)v13 + 23);
    *((_QWORD *)v12 + 24) = v24;
    v25 = *((_QWORD *)v13 + 26);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v25)
    {
      *((_QWORD *)v12 + 25) = *((_QWORD *)v13 + 25);
      *((_QWORD *)v12 + 26) = v25;
      v26 = *((_QWORD *)v13 + 28);
      *((_QWORD *)v12 + 27) = *((_QWORD *)v13 + 27);
      *((_QWORD *)v12 + 28) = v26;
      *((_QWORD *)v12 + 29) = *((_QWORD *)v13 + 29);
      *((_OWORD *)v12 + 15) = *((_OWORD *)v13 + 15);
      v27 = *((_QWORD *)v13 + 33);
      *((_QWORD *)v12 + 32) = *((_QWORD *)v13 + 32);
      *((_QWORD *)v12 + 33) = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v28 = *((_QWORD *)v13 + 35);
      if (v28)
      {
LABEL_8:
        *((_QWORD *)v12 + 34) = *((_QWORD *)v13 + 34);
        *((_QWORD *)v12 + 35) = v28;
        v29 = *((_QWORD *)v13 + 37);
        *((_QWORD *)v12 + 36) = *((_QWORD *)v13 + 36);
        *((_QWORD *)v12 + 37) = v29;
        v30 = *((_QWORD *)v13 + 39);
        *((_QWORD *)v12 + 38) = *((_QWORD *)v13 + 38);
        *((_QWORD *)v12 + 39) = v30;
        v31 = *((_QWORD *)v13 + 41);
        *((_QWORD *)v12 + 40) = *((_QWORD *)v13 + 40);
        *((_QWORD *)v12 + 41) = v31;
        *((_QWORD *)v12 + 42) = *((_QWORD *)v13 + 42);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_11;
      }
    }
    else
    {
      v32 = *(_OWORD *)(v13 + 248);
      *(_OWORD *)(v12 + 232) = *(_OWORD *)(v13 + 232);
      *(_OWORD *)(v12 + 248) = v32;
      *((_QWORD *)v12 + 33) = *((_QWORD *)v13 + 33);
      v33 = *(_OWORD *)(v13 + 216);
      *(_OWORD *)(v12 + 200) = *(_OWORD *)(v13 + 200);
      *(_OWORD *)(v12 + 216) = v33;
      v28 = *((_QWORD *)v13 + 35);
      if (v28)
        goto LABEL_8;
    }
    v34 = *((_OWORD *)v13 + 20);
    *((_OWORD *)v12 + 19) = *((_OWORD *)v13 + 19);
    *((_OWORD *)v12 + 20) = v34;
    *((_QWORD *)v12 + 42) = *((_QWORD *)v13 + 42);
    v35 = *((_OWORD *)v13 + 18);
    *((_OWORD *)v12 + 17) = *((_OWORD *)v13 + 17);
    *((_OWORD *)v12 + 18) = v35;
LABEL_11:
    v36 = *((_QWORD *)v13 + 44);
    *((_QWORD *)v12 + 43) = *((_QWORD *)v13 + 43);
    *((_QWORD *)v12 + 44) = v36;
    *((_WORD *)v12 + 180) = *((_WORD *)v13 + 180);
    v37 = *((_QWORD *)v13 + 47);
    *((_QWORD *)v12 + 46) = *((_QWORD *)v13 + 46);
    *((_QWORD *)v12 + 47) = v37;
    v38 = *((_QWORD *)v13 + 49);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v38)
    {
      *((_QWORD *)v12 + 48) = *((_QWORD *)v13 + 48);
      *((_QWORD *)v12 + 49) = v38;
      *((_WORD *)v12 + 200) = *((_WORD *)v13 + 200);
      v39 = *((_QWORD *)v13 + 52);
      *((_QWORD *)v12 + 51) = *((_QWORD *)v13 + 51);
      *((_QWORD *)v12 + 52) = v39;
      v40 = *((_QWORD *)v13 + 54);
      *((_QWORD *)v12 + 53) = *((_QWORD *)v13 + 53);
      *((_QWORD *)v12 + 54) = v40;
      v41 = *((_QWORD *)v13 + 56);
      *((_QWORD *)v12 + 55) = *((_QWORD *)v13 + 55);
      *((_QWORD *)v12 + 56) = v41;
      *((_QWORD *)v12 + 57) = *((_QWORD *)v13 + 57);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v42 = *((_QWORD *)v13 + 59);
      if (v42)
      {
LABEL_13:
        *((_QWORD *)v12 + 58) = *((_QWORD *)v13 + 58);
        *((_QWORD *)v12 + 59) = v42;
        v12[480] = v13[480];
        v43 = *((_QWORD *)v13 + 62);
        *((_QWORD *)v12 + 61) = *((_QWORD *)v13 + 61);
        *((_QWORD *)v12 + 62) = v43;
        v44 = *((_QWORD *)v13 + 64);
        *((_QWORD *)v12 + 63) = *((_QWORD *)v13 + 63);
        *((_QWORD *)v12 + 64) = v44;
        *((_QWORD *)v12 + 65) = *((_QWORD *)v13 + 65);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_16:
        v12[528] = v13[528];
        *((_QWORD *)v12 + 67) = *((_QWORD *)v13 + 67);
        sub_1BA234D60(0, (unint64_t *)&qword_1ED5B2B20, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for AdRequest);
        v75 = v49;
        v50 = *(int *)(v49 + 56);
        v51 = &v12[v50];
        v52 = &v13[v50];
        v53 = *(_QWORD *)&v13[v50 + 8];
        *(_QWORD *)v51 = *(_QWORD *)&v13[v50];
        *((_QWORD *)v51 + 1) = v53;
        v54 = type metadata accessor for NativeAdPlacement();
        v55 = *(int *)(v54 + 20);
        v73 = &v51[v55];
        v56 = &v52[v55];
        v57 = sub_1BA2C1AC0();
        v58 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v58(v73, v56, v57);
        v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
        v59 = *(int *)(v75 + 60);
        v60 = &v12[v59];
        v61 = &v13[v59];
        v62 = *((_QWORD *)v61 + 1);
        *(_QWORD *)v60 = *(_QWORD *)v61;
        *((_QWORD *)v60 + 1) = v62;
        v63 = a3[12];
        v19 = v78;
        v64 = (char *)v78 + v63;
        v65 = (char *)a2 + v63;
        v66 = *(_OWORD *)((char *)a2 + v63 + 24);
        *(_OWORD *)((char *)v78 + v63 + 24) = v66;
        v67 = v66;
        v68 = **(void (***)(char *, char *, uint64_t))(v66 - 8);
        swift_bridgeObjectRetain();
        v68(v64, v65, v67);
        v69 = a3[13];
        v70 = *(void **)((char *)a2 + v69);
        *(_QWORD *)((char *)v78 + v69) = v70;
        v71 = v70;
        return v19;
      }
    }
    else
    {
      v45 = *((_OWORD *)v13 + 27);
      *((_OWORD *)v12 + 26) = *((_OWORD *)v13 + 26);
      *((_OWORD *)v12 + 27) = v45;
      *((_OWORD *)v12 + 28) = *((_OWORD *)v13 + 28);
      v46 = *((_OWORD *)v13 + 25);
      *((_OWORD *)v12 + 24) = *((_OWORD *)v13 + 24);
      *((_OWORD *)v12 + 25) = v46;
      v42 = *((_QWORD *)v13 + 59);
      if (v42)
        goto LABEL_13;
    }
    v47 = *((_OWORD *)v13 + 30);
    *((_OWORD *)v12 + 29) = *((_OWORD *)v13 + 29);
    *((_OWORD *)v12 + 30) = v47;
    v48 = *((_OWORD *)v13 + 32);
    *((_OWORD *)v12 + 31) = *((_OWORD *)v13 + 31);
    *((_OWORD *)v12 + 32) = v48;
    goto LABEL_16;
  }
  v18 = *a2;
  *a1 = *a2;
  v19 = (_QWORD *)(v18 + ((v4 + 16) & ~(unint64_t)v4));
  swift_retain();
  return v19;
}

void destroy for NativeAdInfo.Fulfilled(uint64_t a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v4 = (_QWORD *)(a1 + a2[11]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v4[6])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v4[26])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v4[35])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v4[49])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v4[59])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1BA234D60(0, (unint64_t *)&qword_1ED5B2B20, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for AdRequest);
  v6 = (char *)v4 + *(int *)(v5 + 56);
  swift_bridgeObjectRelease();
  v7 = &v6[*(int *)(type metadata accessor for NativeAdPlacement() + 20)];
  v8 = sub_1BA2C1AC0();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[12]);

}

_QWORD *initializeWithCopy for NativeAdInfo.Fulfilled(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  __int128 v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  void *v67;
  id v68;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v75;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  a1[12] = a2[12];
  v10 = a3[11];
  v75 = a1;
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = *(_QWORD *)((char *)a2 + v10 + 8);
  *(_QWORD *)v11 = *(_QWORD *)((char *)a2 + v10);
  *((_QWORD *)v11 + 1) = v13;
  v11[16] = *((_BYTE *)a2 + v10 + 16);
  *((_QWORD *)v11 + 3) = *(_QWORD *)((char *)a2 + v10 + 24);
  v11[32] = *((_BYTE *)a2 + v10 + 32);
  v71 = *(_QWORD *)((char *)a2 + v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v71)
  {
    *((_QWORD *)v11 + 5) = *((_QWORD *)v12 + 5);
    *((_QWORD *)v11 + 6) = v71;
    *((_QWORD *)v11 + 7) = *((_QWORD *)v12 + 7);
    v11[64] = v12[64];
    v14 = *((_QWORD *)v12 + 10);
    *((_QWORD *)v11 + 9) = *((_QWORD *)v12 + 9);
    *((_QWORD *)v11 + 10) = v14;
    v15 = *((_QWORD *)v12 + 12);
    *((_QWORD *)v11 + 11) = *((_QWORD *)v12 + 11);
    *((_QWORD *)v11 + 12) = v15;
    v16 = *((_QWORD *)v12 + 14);
    *((_QWORD *)v11 + 13) = *((_QWORD *)v12 + 13);
    *((_QWORD *)v11 + 14) = v16;
    *((_QWORD *)v11 + 15) = *((_QWORD *)v12 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v17 = *(_OWORD *)(v12 + 88);
    *(_OWORD *)(v11 + 72) = *(_OWORD *)(v12 + 72);
    *(_OWORD *)(v11 + 88) = v17;
    *(_OWORD *)(v11 + 104) = *(_OWORD *)(v12 + 104);
    *((_QWORD *)v11 + 15) = *((_QWORD *)v12 + 15);
    v18 = *(_OWORD *)(v12 + 56);
    *(_OWORD *)(v11 + 40) = *(_OWORD *)(v12 + 40);
    *(_OWORD *)(v11 + 56) = v18;
  }
  v19 = *((_QWORD *)v12 + 17);
  *((_QWORD *)v11 + 16) = *((_QWORD *)v12 + 16);
  *((_QWORD *)v11 + 17) = v19;
  v20 = *((_QWORD *)v12 + 19);
  *((_QWORD *)v11 + 18) = *((_QWORD *)v12 + 18);
  *((_QWORD *)v11 + 19) = v20;
  *((_QWORD *)v11 + 20) = *((_QWORD *)v12 + 20);
  *(_OWORD *)(v11 + 168) = *(_OWORD *)(v12 + 168);
  v21 = *((_QWORD *)v12 + 24);
  *((_QWORD *)v11 + 23) = *((_QWORD *)v12 + 23);
  *((_QWORD *)v11 + 24) = v21;
  v22 = *((_QWORD *)v12 + 26);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v22)
  {
    *((_QWORD *)v11 + 25) = *((_QWORD *)v12 + 25);
    *((_QWORD *)v11 + 26) = v22;
    v23 = *((_QWORD *)v12 + 28);
    *((_QWORD *)v11 + 27) = *((_QWORD *)v12 + 27);
    *((_QWORD *)v11 + 28) = v23;
    *((_QWORD *)v11 + 29) = *((_QWORD *)v12 + 29);
    *((_OWORD *)v11 + 15) = *((_OWORD *)v12 + 15);
    v24 = *((_QWORD *)v12 + 33);
    *((_QWORD *)v11 + 32) = *((_QWORD *)v12 + 32);
    *((_QWORD *)v11 + 33) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = *((_QWORD *)v12 + 35);
    if (v25)
    {
LABEL_6:
      *((_QWORD *)v11 + 34) = *((_QWORD *)v12 + 34);
      *((_QWORD *)v11 + 35) = v25;
      v26 = *((_QWORD *)v12 + 37);
      *((_QWORD *)v11 + 36) = *((_QWORD *)v12 + 36);
      *((_QWORD *)v11 + 37) = v26;
      v27 = *((_QWORD *)v12 + 39);
      *((_QWORD *)v11 + 38) = *((_QWORD *)v12 + 38);
      *((_QWORD *)v11 + 39) = v27;
      v28 = *((_QWORD *)v12 + 41);
      *((_QWORD *)v11 + 40) = *((_QWORD *)v12 + 40);
      *((_QWORD *)v11 + 41) = v28;
      *((_QWORD *)v11 + 42) = *((_QWORD *)v12 + 42);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_9;
    }
  }
  else
  {
    v29 = *(_OWORD *)(v12 + 248);
    *(_OWORD *)(v11 + 232) = *(_OWORD *)(v12 + 232);
    *(_OWORD *)(v11 + 248) = v29;
    *((_QWORD *)v11 + 33) = *((_QWORD *)v12 + 33);
    v30 = *(_OWORD *)(v12 + 216);
    *(_OWORD *)(v11 + 200) = *(_OWORD *)(v12 + 200);
    *(_OWORD *)(v11 + 216) = v30;
    v25 = *((_QWORD *)v12 + 35);
    if (v25)
      goto LABEL_6;
  }
  v31 = *((_OWORD *)v12 + 20);
  *((_OWORD *)v11 + 19) = *((_OWORD *)v12 + 19);
  *((_OWORD *)v11 + 20) = v31;
  *((_QWORD *)v11 + 42) = *((_QWORD *)v12 + 42);
  v32 = *((_OWORD *)v12 + 18);
  *((_OWORD *)v11 + 17) = *((_OWORD *)v12 + 17);
  *((_OWORD *)v11 + 18) = v32;
LABEL_9:
  v33 = *((_QWORD *)v12 + 44);
  *((_QWORD *)v11 + 43) = *((_QWORD *)v12 + 43);
  *((_QWORD *)v11 + 44) = v33;
  *((_WORD *)v11 + 180) = *((_WORD *)v12 + 180);
  v34 = *((_QWORD *)v12 + 47);
  *((_QWORD *)v11 + 46) = *((_QWORD *)v12 + 46);
  *((_QWORD *)v11 + 47) = v34;
  v35 = *((_QWORD *)v12 + 49);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v35)
  {
    v42 = *((_OWORD *)v12 + 27);
    *((_OWORD *)v11 + 26) = *((_OWORD *)v12 + 26);
    *((_OWORD *)v11 + 27) = v42;
    *((_OWORD *)v11 + 28) = *((_OWORD *)v12 + 28);
    v43 = *((_OWORD *)v12 + 25);
    *((_OWORD *)v11 + 24) = *((_OWORD *)v12 + 24);
    *((_OWORD *)v11 + 25) = v43;
    v39 = *((_QWORD *)v12 + 59);
    if (v39)
      goto LABEL_11;
LABEL_13:
    v44 = *((_OWORD *)v12 + 30);
    *((_OWORD *)v11 + 29) = *((_OWORD *)v12 + 29);
    *((_OWORD *)v11 + 30) = v44;
    v45 = *((_OWORD *)v12 + 32);
    *((_OWORD *)v11 + 31) = *((_OWORD *)v12 + 31);
    *((_OWORD *)v11 + 32) = v45;
    goto LABEL_14;
  }
  *((_QWORD *)v11 + 48) = *((_QWORD *)v12 + 48);
  *((_QWORD *)v11 + 49) = v35;
  *((_WORD *)v11 + 200) = *((_WORD *)v12 + 200);
  v36 = *((_QWORD *)v12 + 52);
  *((_QWORD *)v11 + 51) = *((_QWORD *)v12 + 51);
  *((_QWORD *)v11 + 52) = v36;
  v37 = *((_QWORD *)v12 + 54);
  *((_QWORD *)v11 + 53) = *((_QWORD *)v12 + 53);
  *((_QWORD *)v11 + 54) = v37;
  v38 = *((_QWORD *)v12 + 56);
  *((_QWORD *)v11 + 55) = *((_QWORD *)v12 + 55);
  *((_QWORD *)v11 + 56) = v38;
  *((_QWORD *)v11 + 57) = *((_QWORD *)v12 + 57);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v39 = *((_QWORD *)v12 + 59);
  if (!v39)
    goto LABEL_13;
LABEL_11:
  *((_QWORD *)v11 + 58) = *((_QWORD *)v12 + 58);
  *((_QWORD *)v11 + 59) = v39;
  v11[480] = v12[480];
  v40 = *((_QWORD *)v12 + 62);
  *((_QWORD *)v11 + 61) = *((_QWORD *)v12 + 61);
  *((_QWORD *)v11 + 62) = v40;
  v41 = *((_QWORD *)v12 + 64);
  *((_QWORD *)v11 + 63) = *((_QWORD *)v12 + 63);
  *((_QWORD *)v11 + 64) = v41;
  *((_QWORD *)v11 + 65) = *((_QWORD *)v12 + 65);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_14:
  v11[528] = v12[528];
  *((_QWORD *)v11 + 67) = *((_QWORD *)v12 + 67);
  sub_1BA234D60(0, (unint64_t *)&qword_1ED5B2B20, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for AdRequest);
  v72 = v46;
  v47 = *(int *)(v46 + 56);
  v48 = &v11[v47];
  v49 = &v12[v47];
  v50 = *(_QWORD *)&v12[v47 + 8];
  *(_QWORD *)v48 = *(_QWORD *)&v12[v47];
  *((_QWORD *)v48 + 1) = v50;
  v51 = type metadata accessor for NativeAdPlacement();
  v52 = *(int *)(v51 + 20);
  v70 = &v48[v52];
  v53 = &v49[v52];
  v54 = sub_1BA2C1AC0();
  v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v55(v70, v53, v54);
  v48[*(int *)(v51 + 24)] = v49[*(int *)(v51 + 24)];
  v56 = *(int *)(v72 + 60);
  v57 = &v11[v56];
  v58 = &v12[v56];
  v59 = *((_QWORD *)v58 + 1);
  *(_QWORD *)v57 = *(_QWORD *)v58;
  *((_QWORD *)v57 + 1) = v59;
  v60 = a3[12];
  v61 = (char *)v75 + v60;
  v62 = (char *)a2 + v60;
  v63 = *(_OWORD *)((char *)a2 + v60 + 24);
  *(_OWORD *)((char *)v75 + v60 + 24) = v63;
  v64 = v63;
  v65 = **(void (***)(char *, char *, uint64_t))(v63 - 8);
  swift_bridgeObjectRetain();
  v65(v61, v62, v64);
  v66 = a3[13];
  v67 = *(void **)((char *)a2 + v66);
  *(_QWORD *)((char *)v75 + v66) = v67;
  v68 = v67;
  return v75;
}

_QWORD *assignWithCopy for NativeAdInfo.Fulfilled(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _OWORD *v29;
  _OWORD *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _OWORD *v38;
  _OWORD *v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _OWORD *v47;
  __int128 *v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  void *v70;
  void *v71;
  id v72;
  uint64_t v74;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  swift_retain();
  swift_release();
  v74 = a3;
  v6 = *(int *)(a3 + 44);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)v7 = *(_QWORD *)((char *)a2 + v6);
  *((_QWORD *)v7 + 1) = *(_QWORD *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[16] = v8[16];
  *((_QWORD *)v7 + 3) = *((_QWORD *)v8 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[32] = v8[32];
  v9 = v7 + 40;
  v10 = v8 + 40;
  v11 = *((_QWORD *)v8 + 6);
  if (*((_QWORD *)v7 + 6))
  {
    if (v11)
    {
      *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
      *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v7 + 7) = *((_QWORD *)v8 + 7);
      v7[64] = v8[64];
      *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
      *((_QWORD *)v7 + 10) = *((_QWORD *)v8 + 10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v7 + 11) = *((_QWORD *)v8 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v7 + 12) = *((_QWORD *)v8 + 12);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v7 + 13) = *((_QWORD *)v8 + 13);
      *((_QWORD *)v7 + 14) = *((_QWORD *)v8 + 14);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v7 + 15) = *((_QWORD *)v8 + 15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA257D78((uint64_t)(v7 + 40));
      v12 = *(_OWORD *)(v8 + 56);
      *v9 = *v10;
      *(_OWORD *)(v7 + 56) = v12;
      v14 = *(_OWORD *)(v8 + 88);
      v13 = *(_OWORD *)(v8 + 104);
      v15 = *(_OWORD *)(v8 + 72);
      *((_QWORD *)v7 + 15) = *((_QWORD *)v8 + 15);
      *(_OWORD *)(v7 + 88) = v14;
      *(_OWORD *)(v7 + 104) = v13;
      *(_OWORD *)(v7 + 72) = v15;
    }
  }
  else if (v11)
  {
    *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
    *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
    *((_QWORD *)v7 + 7) = *((_QWORD *)v8 + 7);
    v7[64] = v8[64];
    *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
    *((_QWORD *)v7 + 10) = *((_QWORD *)v8 + 10);
    *((_QWORD *)v7 + 11) = *((_QWORD *)v8 + 11);
    *((_QWORD *)v7 + 12) = *((_QWORD *)v8 + 12);
    *((_QWORD *)v7 + 13) = *((_QWORD *)v8 + 13);
    *((_QWORD *)v7 + 14) = *((_QWORD *)v8 + 14);
    *((_QWORD *)v7 + 15) = *((_QWORD *)v8 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v16 = *(_OWORD *)(v8 + 56);
    *v9 = *v10;
    *(_OWORD *)(v7 + 56) = v16;
    v17 = *(_OWORD *)(v8 + 72);
    v18 = *(_OWORD *)(v8 + 88);
    v19 = *(_OWORD *)(v8 + 104);
    *((_QWORD *)v7 + 15) = *((_QWORD *)v8 + 15);
    *(_OWORD *)(v7 + 88) = v18;
    *(_OWORD *)(v7 + 104) = v19;
    *(_OWORD *)(v7 + 72) = v17;
  }
  *((_QWORD *)v7 + 16) = *((_QWORD *)v8 + 16);
  *((_QWORD *)v7 + 17) = *((_QWORD *)v8 + 17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v7 + 18) = *((_QWORD *)v8 + 18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v7 + 19) = *((_QWORD *)v8 + 19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v7 + 20) = *((_QWORD *)v8 + 20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v7 + 21) = *((_QWORD *)v8 + 21);
  *((_QWORD *)v7 + 22) = *((_QWORD *)v8 + 22);
  *((_QWORD *)v7 + 23) = *((_QWORD *)v8 + 23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v7 + 24) = *((_QWORD *)v8 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = v7 + 200;
  v21 = v8 + 200;
  v22 = *((_QWORD *)v8 + 26);
  if (*((_QWORD *)v7 + 26))
  {
    if (v22)
    {
      *((_QWORD *)v7 + 25) = *((_QWORD *)v8 + 25);
      *((_QWORD *)v7 + 26) = *((_QWORD *)v8 + 26);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v7 + 27) = *((_QWORD *)v8 + 27);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v7 + 28) = *((_QWORD *)v8 + 28);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v7 + 29) = *((_QWORD *)v8 + 29);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v7 + 30) = *((_QWORD *)v8 + 30);
      *((_QWORD *)v7 + 31) = *((_QWORD *)v8 + 31);
      *((_QWORD *)v7 + 32) = *((_QWORD *)v8 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v7 + 33) = *((_QWORD *)v8 + 33);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA257DAC((uint64_t)(v7 + 200));
      *v20 = *v21;
      v24 = *(_OWORD *)(v8 + 232);
      v23 = *(_OWORD *)(v8 + 248);
      v25 = *(_OWORD *)(v8 + 216);
      *((_QWORD *)v7 + 33) = *((_QWORD *)v8 + 33);
      *(_OWORD *)(v7 + 232) = v24;
      *(_OWORD *)(v7 + 248) = v23;
      *(_OWORD *)(v7 + 216) = v25;
    }
  }
  else if (v22)
  {
    *((_QWORD *)v7 + 25) = *((_QWORD *)v8 + 25);
    *((_QWORD *)v7 + 26) = *((_QWORD *)v8 + 26);
    *((_QWORD *)v7 + 27) = *((_QWORD *)v8 + 27);
    *((_QWORD *)v7 + 28) = *((_QWORD *)v8 + 28);
    *((_QWORD *)v7 + 29) = *((_QWORD *)v8 + 29);
    *((_QWORD *)v7 + 30) = *((_QWORD *)v8 + 30);
    *((_QWORD *)v7 + 31) = *((_QWORD *)v8 + 31);
    *((_QWORD *)v7 + 32) = *((_QWORD *)v8 + 32);
    *((_QWORD *)v7 + 33) = *((_QWORD *)v8 + 33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *v20 = *v21;
    v26 = *(_OWORD *)(v8 + 216);
    v27 = *(_OWORD *)(v8 + 232);
    v28 = *(_OWORD *)(v8 + 248);
    *((_QWORD *)v7 + 33) = *((_QWORD *)v8 + 33);
    *(_OWORD *)(v7 + 232) = v27;
    *(_OWORD *)(v7 + 248) = v28;
    *(_OWORD *)(v7 + 216) = v26;
  }
  v29 = v7 + 272;
  v30 = v8 + 272;
  v31 = *((_QWORD *)v8 + 35);
  if (*((_QWORD *)v7 + 35))
  {
    if (v31)
    {
      *((_QWORD *)v7 + 34) = *((_QWORD *)v8 + 34);
      *((_QWORD *)v7 + 35) = *((_QWORD *)v8 + 35);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v7 + 36) = *((_QWORD *)v8 + 36);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v7 + 37) = *((_QWORD *)v8 + 37);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v7 + 38) = *((_QWORD *)v8 + 38);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v7 + 39) = *((_QWORD *)v8 + 39);
      *((_QWORD *)v7 + 40) = *((_QWORD *)v8 + 40);
      *((_QWORD *)v7 + 41) = *((_QWORD *)v8 + 41);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v7 + 42) = *((_QWORD *)v8 + 42);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA257DAC((uint64_t)(v7 + 272));
      *v29 = *v30;
      v33 = *((_OWORD *)v8 + 19);
      v32 = *((_OWORD *)v8 + 20);
      v34 = *((_OWORD *)v8 + 18);
      *((_QWORD *)v7 + 42) = *((_QWORD *)v8 + 42);
      *((_OWORD *)v7 + 19) = v33;
      *((_OWORD *)v7 + 20) = v32;
      *((_OWORD *)v7 + 18) = v34;
    }
  }
  else if (v31)
  {
    *((_QWORD *)v7 + 34) = *((_QWORD *)v8 + 34);
    *((_QWORD *)v7 + 35) = *((_QWORD *)v8 + 35);
    *((_QWORD *)v7 + 36) = *((_QWORD *)v8 + 36);
    *((_QWORD *)v7 + 37) = *((_QWORD *)v8 + 37);
    *((_QWORD *)v7 + 38) = *((_QWORD *)v8 + 38);
    *((_QWORD *)v7 + 39) = *((_QWORD *)v8 + 39);
    *((_QWORD *)v7 + 40) = *((_QWORD *)v8 + 40);
    *((_QWORD *)v7 + 41) = *((_QWORD *)v8 + 41);
    *((_QWORD *)v7 + 42) = *((_QWORD *)v8 + 42);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *v29 = *v30;
    v35 = *((_OWORD *)v8 + 18);
    v36 = *((_OWORD *)v8 + 19);
    v37 = *((_OWORD *)v8 + 20);
    *((_QWORD *)v7 + 42) = *((_QWORD *)v8 + 42);
    *((_OWORD *)v7 + 19) = v36;
    *((_OWORD *)v7 + 20) = v37;
    *((_OWORD *)v7 + 18) = v35;
  }
  *((_QWORD *)v7 + 43) = *((_QWORD *)v8 + 43);
  *((_QWORD *)v7 + 44) = *((_QWORD *)v8 + 44);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[360] = v8[360];
  v7[361] = v8[361];
  *((_QWORD *)v7 + 46) = *((_QWORD *)v8 + 46);
  *((_QWORD *)v7 + 47) = *((_QWORD *)v8 + 47);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = v7 + 384;
  v39 = v8 + 384;
  v40 = *((_QWORD *)v8 + 49);
  if (*((_QWORD *)v7 + 49))
  {
    if (v40)
    {
      *((_QWORD *)v7 + 48) = *((_QWORD *)v8 + 48);
      *((_QWORD *)v7 + 49) = *((_QWORD *)v8 + 49);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v7[400] = v8[400];
      v7[401] = v8[401];
      *((_QWORD *)v7 + 51) = *((_QWORD *)v8 + 51);
      *((_QWORD *)v7 + 52) = *((_QWORD *)v8 + 52);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v7 + 53) = *((_QWORD *)v8 + 53);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v7 + 54) = *((_QWORD *)v8 + 54);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v7 + 55) = *((_QWORD *)v8 + 55);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v7 + 56) = *((_QWORD *)v8 + 56);
      *((_QWORD *)v7 + 57) = *((_QWORD *)v8 + 57);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA257DE0((uint64_t)(v7 + 384));
      *v38 = *v39;
      v41 = *((_OWORD *)v8 + 28);
      v43 = *((_OWORD *)v8 + 25);
      v42 = *((_OWORD *)v8 + 26);
      *((_OWORD *)v7 + 27) = *((_OWORD *)v8 + 27);
      *((_OWORD *)v7 + 28) = v41;
      *((_OWORD *)v7 + 25) = v43;
      *((_OWORD *)v7 + 26) = v42;
    }
  }
  else if (v40)
  {
    *((_QWORD *)v7 + 48) = *((_QWORD *)v8 + 48);
    *((_QWORD *)v7 + 49) = *((_QWORD *)v8 + 49);
    v7[400] = v8[400];
    v7[401] = v8[401];
    *((_QWORD *)v7 + 51) = *((_QWORD *)v8 + 51);
    *((_QWORD *)v7 + 52) = *((_QWORD *)v8 + 52);
    *((_QWORD *)v7 + 53) = *((_QWORD *)v8 + 53);
    *((_QWORD *)v7 + 54) = *((_QWORD *)v8 + 54);
    *((_QWORD *)v7 + 55) = *((_QWORD *)v8 + 55);
    *((_QWORD *)v7 + 56) = *((_QWORD *)v8 + 56);
    *((_QWORD *)v7 + 57) = *((_QWORD *)v8 + 57);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *v38 = *v39;
    v44 = *((_OWORD *)v8 + 25);
    v45 = *((_OWORD *)v8 + 26);
    v46 = *((_OWORD *)v8 + 28);
    *((_OWORD *)v7 + 27) = *((_OWORD *)v8 + 27);
    *((_OWORD *)v7 + 28) = v46;
    *((_OWORD *)v7 + 25) = v44;
    *((_OWORD *)v7 + 26) = v45;
  }
  v47 = v7 + 464;
  v48 = (__int128 *)(v8 + 464);
  v49 = *((_QWORD *)v8 + 59);
  if (*((_QWORD *)v7 + 59))
  {
    if (v49)
    {
      *((_QWORD *)v7 + 58) = *((_QWORD *)v8 + 58);
      *((_QWORD *)v7 + 59) = *((_QWORD *)v8 + 59);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v7[480] = v8[480];
      *((_QWORD *)v7 + 61) = *((_QWORD *)v8 + 61);
      *((_QWORD *)v7 + 62) = *((_QWORD *)v8 + 62);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v7 + 63) = *((_QWORD *)v8 + 63);
      *((_QWORD *)v7 + 64) = *((_QWORD *)v8 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v7 + 65) = *((_QWORD *)v8 + 65);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA257E14((uint64_t)(v7 + 464));
      v50 = *((_OWORD *)v8 + 32);
      v52 = *v48;
      v51 = *((_OWORD *)v8 + 30);
      *((_OWORD *)v7 + 31) = *((_OWORD *)v8 + 31);
      *((_OWORD *)v7 + 32) = v50;
      *v47 = v52;
      *((_OWORD *)v7 + 30) = v51;
    }
  }
  else if (v49)
  {
    *((_QWORD *)v7 + 58) = *((_QWORD *)v8 + 58);
    *((_QWORD *)v7 + 59) = *((_QWORD *)v8 + 59);
    v7[480] = v8[480];
    *((_QWORD *)v7 + 61) = *((_QWORD *)v8 + 61);
    *((_QWORD *)v7 + 62) = *((_QWORD *)v8 + 62);
    *((_QWORD *)v7 + 63) = *((_QWORD *)v8 + 63);
    *((_QWORD *)v7 + 64) = *((_QWORD *)v8 + 64);
    *((_QWORD *)v7 + 65) = *((_QWORD *)v8 + 65);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v53 = *v48;
    v54 = *((_OWORD *)v8 + 30);
    v55 = *((_OWORD *)v8 + 32);
    *((_OWORD *)v7 + 31) = *((_OWORD *)v8 + 31);
    *((_OWORD *)v7 + 32) = v55;
    *v47 = v53;
    *((_OWORD *)v7 + 30) = v54;
  }
  v7[528] = v8[528];
  *((_QWORD *)v7 + 67) = *((_QWORD *)v8 + 67);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BA234D60(0, (unint64_t *)&qword_1ED5B2B20, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for AdRequest);
  v57 = v56;
  v58 = *(int *)(v56 + 56);
  v59 = &v7[v58];
  v60 = &v8[v58];
  *(_QWORD *)v59 = *(_QWORD *)&v8[v58];
  *((_QWORD *)v59 + 1) = *(_QWORD *)&v8[v58 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v61 = type metadata accessor for NativeAdPlacement();
  v62 = *(int *)(v61 + 20);
  v63 = &v59[v62];
  v64 = &v60[v62];
  v65 = sub_1BA2C1AC0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 24))(v63, v64, v65);
  v59[*(int *)(v61 + 24)] = v60[*(int *)(v61 + 24)];
  v66 = *(int *)(v57 + 60);
  v67 = &v7[v66];
  v68 = &v8[v66];
  *(_QWORD *)v67 = *(_QWORD *)v68;
  *((_QWORD *)v67 + 1) = *((_QWORD *)v68 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + *(int *)(v74 + 48)), (_QWORD *)((char *)a2 + *(int *)(v74 + 48)));
  v69 = *(int *)(v74 + 52);
  v70 = *(void **)((char *)a2 + v69);
  v71 = *(void **)((char *)a1 + v69);
  *(_QWORD *)((char *)a1 + v69) = v70;
  v72 = v70;

  return a1;
}

uint64_t sub_1BA257D78(uint64_t a1)
{
  destroy for FeedAdData();
  return a1;
}

uint64_t sub_1BA257DAC(uint64_t a1)
{
  destroy for FeedGroupAdData();
  return a1;
}

uint64_t sub_1BA257DE0(uint64_t a1)
{
  destroy for ArticleAdData();
  return a1;
}

uint64_t sub_1BA257E14(uint64_t a1)
{
  destroy for ChannelAdData();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t initializeWithTake for NativeAdInfo.Fulfilled(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;

  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v8 = a3[11];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  memcpy((void *)(a1 + v8 + 16), (const void *)(a2 + v8 + 16), 0x210uLL);
  sub_1BA234D60(0, (unint64_t *)&qword_1ED5B2B20, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for AdRequest);
  v12 = v11;
  v13 = *(int *)(v11 + 56);
  v14 = v9 + v13;
  v15 = v10 + v13;
  *(_OWORD *)(v9 + v13) = *(_OWORD *)(v10 + v13);
  v16 = type metadata accessor for NativeAdPlacement();
  v17 = *(int *)(v16 + 20);
  v18 = v14 + v17;
  v19 = v15 + v17;
  v20 = sub_1BA2C1AC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  *(_BYTE *)(v14 + *(int *)(v16 + 24)) = *(_BYTE *)(v15 + *(int *)(v16 + 24));
  *(_OWORD *)(v9 + *(int *)(v12 + 60)) = *(_OWORD *)(v10 + *(int *)(v12 + 60));
  v21 = a3[12];
  v22 = a3[13];
  v23 = a1 + v21;
  v24 = a2 + v21;
  v25 = *(_OWORD *)(v24 + 16);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *(_OWORD *)(v23 + 16) = v25;
  *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);
  return a1;
}

_QWORD *assignWithTake for NativeAdInfo.Fulfilled(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  __int128 v59;
  uint64_t v60;
  void *v61;
  uint64_t v63;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_bridgeObjectRelease();
  v11 = a2[11];
  a1[10] = a2[10];
  a1[11] = v11;
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  swift_release();
  v12 = *(int *)(a3 + 44);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(_QWORD *)((char *)a2 + v12 + 8);
  *(_QWORD *)v13 = *(_QWORD *)((char *)a2 + v12);
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v13[16] = v14[16];
  *((_QWORD *)v13 + 3) = *((_QWORD *)v14 + 3);
  swift_bridgeObjectRelease();
  v13[32] = v14[32];
  if (*((_QWORD *)v13 + 6))
  {
    v16 = *((_QWORD *)v14 + 6);
    if (v16)
    {
      *((_QWORD *)v13 + 5) = *((_QWORD *)v14 + 5);
      *((_QWORD *)v13 + 6) = v16;
      swift_bridgeObjectRelease();
      *((_QWORD *)v13 + 7) = *((_QWORD *)v14 + 7);
      v13[64] = v14[64];
      v17 = *((_QWORD *)v14 + 10);
      *((_QWORD *)v13 + 9) = *((_QWORD *)v14 + 9);
      *((_QWORD *)v13 + 10) = v17;
      swift_bridgeObjectRelease();
      *((_QWORD *)v13 + 11) = *((_QWORD *)v14 + 11);
      swift_bridgeObjectRelease();
      *((_QWORD *)v13 + 12) = *((_QWORD *)v14 + 12);
      swift_bridgeObjectRelease();
      v18 = *((_QWORD *)v14 + 14);
      *((_QWORD *)v13 + 13) = *((_QWORD *)v14 + 13);
      *((_QWORD *)v13 + 14) = v18;
      swift_bridgeObjectRelease();
      *((_QWORD *)v13 + 15) = *((_QWORD *)v14 + 15);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1BA257D78((uint64_t)(v13 + 40));
  }
  v19 = *(_OWORD *)(v14 + 88);
  *(_OWORD *)(v13 + 72) = *(_OWORD *)(v14 + 72);
  *(_OWORD *)(v13 + 88) = v19;
  *(_OWORD *)(v13 + 104) = *(_OWORD *)(v14 + 104);
  *((_QWORD *)v13 + 15) = *((_QWORD *)v14 + 15);
  v20 = *(_OWORD *)(v14 + 56);
  *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
  *(_OWORD *)(v13 + 56) = v20;
LABEL_6:
  v21 = *((_QWORD *)v14 + 17);
  *((_QWORD *)v13 + 16) = *((_QWORD *)v14 + 16);
  *((_QWORD *)v13 + 17) = v21;
  swift_bridgeObjectRelease();
  *((_QWORD *)v13 + 18) = *((_QWORD *)v14 + 18);
  swift_bridgeObjectRelease();
  *((_QWORD *)v13 + 19) = *((_QWORD *)v14 + 19);
  swift_bridgeObjectRelease();
  *((_QWORD *)v13 + 20) = *((_QWORD *)v14 + 20);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v13 + 168) = *(_OWORD *)(v14 + 168);
  *((_QWORD *)v13 + 23) = *((_QWORD *)v14 + 23);
  swift_bridgeObjectRelease();
  *((_QWORD *)v13 + 24) = *((_QWORD *)v14 + 24);
  swift_bridgeObjectRelease();
  if (*((_QWORD *)v13 + 26))
  {
    v22 = *((_QWORD *)v14 + 26);
    if (v22)
    {
      *((_QWORD *)v13 + 25) = *((_QWORD *)v14 + 25);
      *((_QWORD *)v13 + 26) = v22;
      swift_bridgeObjectRelease();
      *((_QWORD *)v13 + 27) = *((_QWORD *)v14 + 27);
      swift_bridgeObjectRelease();
      *((_QWORD *)v13 + 28) = *((_QWORD *)v14 + 28);
      swift_bridgeObjectRelease();
      *((_QWORD *)v13 + 29) = *((_QWORD *)v14 + 29);
      swift_bridgeObjectRelease();
      *((_OWORD *)v13 + 15) = *((_OWORD *)v14 + 15);
      *((_QWORD *)v13 + 32) = *((_QWORD *)v14 + 32);
      swift_bridgeObjectRelease();
      *((_QWORD *)v13 + 33) = *((_QWORD *)v14 + 33);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1BA257DAC((uint64_t)(v13 + 200));
  }
  v23 = *(_OWORD *)(v14 + 248);
  *(_OWORD *)(v13 + 232) = *(_OWORD *)(v14 + 232);
  *(_OWORD *)(v13 + 248) = v23;
  *((_QWORD *)v13 + 33) = *((_QWORD *)v14 + 33);
  v24 = *(_OWORD *)(v14 + 216);
  *(_OWORD *)(v13 + 200) = *(_OWORD *)(v14 + 200);
  *(_OWORD *)(v13 + 216) = v24;
LABEL_11:
  if (*((_QWORD *)v13 + 35))
  {
    v25 = *((_QWORD *)v14 + 35);
    if (v25)
    {
      *((_QWORD *)v13 + 34) = *((_QWORD *)v14 + 34);
      *((_QWORD *)v13 + 35) = v25;
      swift_bridgeObjectRelease();
      *((_QWORD *)v13 + 36) = *((_QWORD *)v14 + 36);
      swift_bridgeObjectRelease();
      *((_QWORD *)v13 + 37) = *((_QWORD *)v14 + 37);
      swift_bridgeObjectRelease();
      *((_QWORD *)v13 + 38) = *((_QWORD *)v14 + 38);
      swift_bridgeObjectRelease();
      *(_OWORD *)(v13 + 312) = *(_OWORD *)(v14 + 312);
      *((_QWORD *)v13 + 41) = *((_QWORD *)v14 + 41);
      swift_bridgeObjectRelease();
      *((_QWORD *)v13 + 42) = *((_QWORD *)v14 + 42);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1BA257DAC((uint64_t)(v13 + 272));
  }
  v26 = *((_OWORD *)v14 + 20);
  *((_OWORD *)v13 + 19) = *((_OWORD *)v14 + 19);
  *((_OWORD *)v13 + 20) = v26;
  *((_QWORD *)v13 + 42) = *((_QWORD *)v14 + 42);
  v27 = *((_OWORD *)v14 + 18);
  *((_OWORD *)v13 + 17) = *((_OWORD *)v14 + 17);
  *((_OWORD *)v13 + 18) = v27;
LABEL_16:
  v28 = *((_QWORD *)v14 + 44);
  *((_QWORD *)v13 + 43) = *((_QWORD *)v14 + 43);
  *((_QWORD *)v13 + 44) = v28;
  swift_bridgeObjectRelease();
  v13[360] = v14[360];
  v13[361] = v14[361];
  v29 = *((_QWORD *)v14 + 47);
  *((_QWORD *)v13 + 46) = *((_QWORD *)v14 + 46);
  *((_QWORD *)v13 + 47) = v29;
  swift_bridgeObjectRelease();
  if (*((_QWORD *)v13 + 49))
  {
    v30 = *((_QWORD *)v14 + 49);
    if (v30)
    {
      *((_QWORD *)v13 + 48) = *((_QWORD *)v14 + 48);
      *((_QWORD *)v13 + 49) = v30;
      swift_bridgeObjectRelease();
      v13[400] = v14[400];
      v13[401] = v14[401];
      v31 = *((_QWORD *)v14 + 52);
      *((_QWORD *)v13 + 51) = *((_QWORD *)v14 + 51);
      *((_QWORD *)v13 + 52) = v31;
      swift_bridgeObjectRelease();
      *((_QWORD *)v13 + 53) = *((_QWORD *)v14 + 53);
      swift_bridgeObjectRelease();
      *((_QWORD *)v13 + 54) = *((_QWORD *)v14 + 54);
      swift_bridgeObjectRelease();
      *((_QWORD *)v13 + 55) = *((_QWORD *)v14 + 55);
      swift_bridgeObjectRelease();
      v32 = *((_QWORD *)v14 + 57);
      *((_QWORD *)v13 + 56) = *((_QWORD *)v14 + 56);
      *((_QWORD *)v13 + 57) = v32;
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1BA257DE0((uint64_t)(v13 + 384));
  }
  v33 = *((_OWORD *)v14 + 27);
  *((_OWORD *)v13 + 26) = *((_OWORD *)v14 + 26);
  *((_OWORD *)v13 + 27) = v33;
  *((_OWORD *)v13 + 28) = *((_OWORD *)v14 + 28);
  v34 = *((_OWORD *)v14 + 25);
  *((_OWORD *)v13 + 24) = *((_OWORD *)v14 + 24);
  *((_OWORD *)v13 + 25) = v34;
LABEL_21:
  v63 = a3;
  if (!*((_QWORD *)v13 + 59))
  {
LABEL_25:
    v38 = *((_OWORD *)v14 + 30);
    *((_OWORD *)v13 + 29) = *((_OWORD *)v14 + 29);
    *((_OWORD *)v13 + 30) = v38;
    v39 = *((_OWORD *)v14 + 32);
    *((_OWORD *)v13 + 31) = *((_OWORD *)v14 + 31);
    *((_OWORD *)v13 + 32) = v39;
    goto LABEL_26;
  }
  v35 = *((_QWORD *)v14 + 59);
  if (!v35)
  {
    sub_1BA257E14((uint64_t)(v13 + 464));
    goto LABEL_25;
  }
  *((_QWORD *)v13 + 58) = *((_QWORD *)v14 + 58);
  *((_QWORD *)v13 + 59) = v35;
  swift_bridgeObjectRelease();
  v13[480] = v14[480];
  v36 = *((_QWORD *)v14 + 62);
  *((_QWORD *)v13 + 61) = *((_QWORD *)v14 + 61);
  *((_QWORD *)v13 + 62) = v36;
  swift_bridgeObjectRelease();
  v37 = *((_QWORD *)v14 + 64);
  *((_QWORD *)v13 + 63) = *((_QWORD *)v14 + 63);
  *((_QWORD *)v13 + 64) = v37;
  swift_bridgeObjectRelease();
  *((_QWORD *)v13 + 65) = *((_QWORD *)v14 + 65);
  swift_bridgeObjectRelease();
LABEL_26:
  v13[528] = v14[528];
  *((_QWORD *)v13 + 67) = *((_QWORD *)v14 + 67);
  swift_bridgeObjectRelease();
  sub_1BA234D60(0, (unint64_t *)&qword_1ED5B2B20, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for AdRequest);
  v41 = v40;
  v42 = *(int *)(v40 + 56);
  v43 = &v13[v42];
  v44 = &v14[v42];
  v45 = *(_QWORD *)&v14[v42 + 8];
  *(_QWORD *)v43 = *(_QWORD *)&v14[v42];
  *((_QWORD *)v43 + 1) = v45;
  swift_bridgeObjectRelease();
  v46 = type metadata accessor for NativeAdPlacement();
  v47 = *(int *)(v46 + 20);
  v48 = &v43[v47];
  v49 = &v44[v47];
  v50 = sub_1BA2C1AC0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  v43[*(int *)(v46 + 24)] = v44[*(int *)(v46 + 24)];
  v51 = *(int *)(v41 + 60);
  v52 = &v13[v51];
  v53 = &v14[v51];
  v55 = *(_QWORD *)v53;
  v54 = *((_QWORD *)v53 + 1);
  *(_QWORD *)v52 = v55;
  *((_QWORD *)v52 + 1) = v54;
  swift_bridgeObjectRelease();
  v56 = *(int *)(v63 + 48);
  v57 = (char *)a1 + v56;
  v58 = (char *)a2 + v56;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v56);
  v59 = *((_OWORD *)v58 + 1);
  *(_OWORD *)v57 = *(_OWORD *)v58;
  *((_OWORD *)v57 + 1) = v59;
  *((_QWORD *)v57 + 4) = *((_QWORD *)v58 + 4);
  v60 = *(int *)(v63 + 52);
  v61 = *(void **)((char *)a1 + v60);
  *(_QWORD *)((char *)a1 + v60) = *(_QWORD *)((char *)a2 + v60);

  return a1;
}

uint64_t getEnumTagSinglePayload for NativeAdInfo.Fulfilled()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA25869C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BA234D60(0, (unint64_t *)&qword_1ED5B2B20, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for AdRequest);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 44), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for NativeAdInfo.Fulfilled()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA258734(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BA234D60(0, (unint64_t *)&qword_1ED5B2B20, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for AdRequest);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 44), a2, a2, v7);
  }
  return result;
}

ValueMetadata *type metadata accessor for NativeAdInfo.Unfilled()
{
  return &type metadata for NativeAdInfo.Unfilled;
}

void _s7NewsAds12NativeAdInfoO8UnfilledVwxx_0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);

}

uint64_t _s7NewsAds12NativeAdInfoO8UnfilledVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  void *v10;
  id v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = a2 + 40;
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v9(a1 + 40, v6, v8);
  v10 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v10;
  v11 = v10;
  return a1;
}

_QWORD *_s7NewsAds12NativeAdInfoO8UnfilledVwca_0(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 5, a2 + 5);
  v4 = (void *)a2[10];
  v5 = (void *)a1[10];
  a1[10] = v4;
  v6 = v4;

  return a1;
}

uint64_t _s7NewsAds12NativeAdInfoO8UnfilledVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 80);
  v7 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;

  return a1;
}

ValueMetadata *type metadata accessor for NativeAdInfo.Discarded()
{
  return &type metadata for NativeAdInfo.Discarded;
}

void sub_1BA2589F0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED5B1298)
  {
    type metadata accessor for NativeAdInfo(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED5B1298);
  }
}

uint64_t sub_1BA258A50(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1BA258A8C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B2B28)
  {
    sub_1BA234D60(255, (unint64_t *)&qword_1ED5B2B20, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for AdRequest);
    v0 = sub_1BA2C245C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B2B28);
  }
}

uint64_t sub_1BA258AF0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t, _QWORD *))
{
  uint64_t v6;

  sub_1BA234D60(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BA258B3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1BA258B80()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B1080)
  {
    v0 = sub_1BA2C245C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B1080);
  }
}

uint64_t sub_1BA258BD4(uint64_t a1)
{
  uint64_t v2;

  sub_1BA234D60(0, (unint64_t *)&qword_1ED5B17F8, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for JournalEntry);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA258C20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA234D60(0, (unint64_t *)&qword_1ED5B17F8, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for JournalEntry);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA258C74(uint64_t a1)
{
  uint64_t v2;

  sub_1BA22053C(0, (unint64_t *)&qword_1ED5B1290, (uint64_t (*)(uint64_t))MEMORY[0x1E0D81F30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

Swift::String __swiftcall String.formatted()()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  Swift::String result;

  v2 = v1;
  v3 = v0;
  swift_bridgeObjectRetain();
  v4 = v3;
  v5 = v2;
  result._object = v5;
  result._countAndFlagsBits = v4;
  return result;
}

uint64_t dispatch thunk of AdSegmentValueType.formatted()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void sub_1BA258D0C(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t a5)
{
  sub_1BA258D40(a1, a2, a4, a5);
}

id sub_1BA258D18()
{
  return objc_msgSend((id)objc_opt_self(), sel_isInternalBuild);
}

void sub_1BA258D40(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4)
{
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  objc_class *v11;
  char *v12;
  uint64_t v13;
  id v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  objc_super v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;

  v7 = a3[7];
  v39 = a3[6];
  v40 = v7;
  v41 = a3[8];
  v8 = a3[3];
  v35 = a3[2];
  v36 = v8;
  v9 = a3[5];
  v37 = a3[4];
  v38 = v9;
  v10 = a3[1];
  v33 = *a3;
  v34 = v10;
  v11 = (objc_class *)type metadata accessor for DebugJournalViewController();
  v12 = (char *)objc_allocWithZone(v11);
  v13 = OBJC_IVAR____TtC7NewsAds26DebugJournalViewController_tableView;
  v14 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  swift_unknownObjectRetain();
  v15 = v12;
  sub_1BA243268((uint64_t)&v33);
  *(_QWORD *)&v12[v13] = objc_msgSend(v14, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  v16 = *((_QWORD *)&v33 + 1);
  v17 = &v15[OBJC_IVAR____TtC7NewsAds26DebugJournalViewController_identifier];
  *(_QWORD *)v17 = v33;
  *((_QWORD *)v17 + 1) = v16;
  v18 = &v15[OBJC_IVAR____TtC7NewsAds26DebugJournalViewController_commandCenter];
  *(_QWORD *)v18 = a1;
  *((_QWORD *)v18 + 1) = a2;
  v19 = &v15[OBJC_IVAR____TtC7NewsAds26DebugJournalViewController_journal];
  *(_OWORD *)v19 = v33;
  v20 = v34;
  v21 = v35;
  v22 = v37;
  *((_OWORD *)v19 + 3) = v36;
  *((_OWORD *)v19 + 4) = v22;
  *((_OWORD *)v19 + 1) = v20;
  *((_OWORD *)v19 + 2) = v21;
  v23 = v38;
  v24 = v39;
  v25 = v41;
  *((_OWORD *)v19 + 7) = v40;
  *((_OWORD *)v19 + 8) = v25;
  *((_OWORD *)v19 + 5) = v23;
  *((_OWORD *)v19 + 6) = v24;
  *(_QWORD *)&v15[OBJC_IVAR____TtC7NewsAds26DebugJournalViewController_presentationOptions] = &unk_1E71F4A30;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();

  v32.receiver = v15;
  v32.super_class = v11;
  v26 = objc_msgSendSuper2(&v32, sel_initWithNibName_bundle_, 0, 0);
  swift_unknownObjectRelease();
  v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3A40]), sel_initWithRootViewController_, v26);

  if (a4)
  {
    v28 = (void *)sub_1BA2C1F1C();
    if (v28)
    {
      v29 = v28;
      v30 = objc_msgSend(v28, sel_window);

      if (v30)
      {
        v31 = objc_msgSend(v30, sel_rootViewController);

        if (v31)
        {
          objc_msgSend(v31, sel_presentViewController_animated_completion_, v27, 1, 0);

        }
      }
    }
  }

}

uint64_t ANFDocumentAdData.campaignData.getter()
{
  return swift_bridgeObjectRetain();
}

NewsAds::ANFDocumentAdData __swiftcall ANFDocumentAdData.init(campaignData:)(NewsAds::ANFDocumentAdData campaignData)
{
  NewsAds::ANFDocumentAdData *v1;

  v1->campaignData._rawValue = campaignData.campaignData._rawValue;
  return campaignData;
}

uint64_t sub_1BA258F70()
{
  return 0x6E676961706D6163;
}

uint64_t sub_1BA258F90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6E676961706D6163 && a2 == 0xEC00000061746144)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BA2C26A8();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BA25903C()
{
  sub_1BA259198();
  return sub_1BA2C275C();
}

uint64_t sub_1BA259064()
{
  sub_1BA259198();
  return sub_1BA2C2768();
}

uint64_t ANFDocumentAdData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1BA2593FC(0, &qword_1EF27EE28, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA259198();
  sub_1BA2C2750();
  v10[1] = v8;
  sub_1BA2591DC();
  sub_1BA259240();
  sub_1BA2C2684();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BA259198()
{
  unint64_t result;

  result = qword_1EF27EE30;
  if (!qword_1EF27EE30)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C5A88, &type metadata for ANFDocumentAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27EE30);
  }
  return result;
}

void sub_1BA2591DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF27EE38)
  {
    sub_1BA234914();
    v0 = sub_1BA2C20E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF27EE38);
  }
}

unint64_t sub_1BA259240()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EF27EE40;
  if (!qword_1EF27EE40)
  {
    sub_1BA2591DC();
    v2 = v1;
    v3[0] = MEMORY[0x1E0DEA970];
    v3[1] = sub_1BA2407DC(&qword_1EF27E9C0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    result = MEMORY[0x1BCCD93D0](MEMORY[0x1E0DEA0B8], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1EF27EE40);
  }
  return result;
}

uint64_t ANFDocumentAdData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1BA2593FC(0, &qword_1EF27EE48, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA259198();
  sub_1BA2C2744();
  if (!v2)
  {
    sub_1BA2591DC();
    sub_1BA259458();
    sub_1BA2C2630();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA2593FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA259198();
    v7 = a3(a1, &type metadata for ANFDocumentAdData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BA259458()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EF27EE50;
  if (!qword_1EF27EE50)
  {
    sub_1BA2591DC();
    v2 = v1;
    v3[0] = MEMORY[0x1E0DEA9A0];
    v3[1] = sub_1BA2407DC(&qword_1EF27E9D0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    result = MEMORY[0x1BCCD93D0](MEMORY[0x1E0DEA0D8], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1EF27EE50);
  }
  return result;
}

unint64_t sub_1BA2594D4(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BA259500();
  result = sub_1BA259544();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BA259500()
{
  unint64_t result;

  result = qword_1ED5B2E68;
  if (!qword_1ED5B2E68)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for ANFDocumentAdData, &type metadata for ANFDocumentAdData);
    atomic_store(result, (unint64_t *)&qword_1ED5B2E68);
  }
  return result;
}

unint64_t sub_1BA259544()
{
  unint64_t result;

  result = qword_1ED5B2DE8;
  if (!qword_1ED5B2DE8)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for ANFDocumentAdData, &type metadata for ANFDocumentAdData);
    atomic_store(result, (unint64_t *)&qword_1ED5B2DE8);
  }
  return result;
}

uint64_t sub_1BA259588@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return ANFDocumentAdData.init(from:)(a1, a2);
}

uint64_t sub_1BA25959C(_QWORD *a1)
{
  return ANFDocumentAdData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for ANFDocumentAdData()
{
  return &type metadata for ANFDocumentAdData;
}

uint64_t storeEnumTagSinglePayload for ANFDocumentAdData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BA259600 + 4 * byte_1BA2C5930[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BA259620 + 4 * byte_1BA2C5935[v4]))();
}

_BYTE *sub_1BA259600(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BA259620(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA259628(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA259630(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA259638(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA259640(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ANFDocumentAdData.CodingKeys()
{
  return &type metadata for ANFDocumentAdData.CodingKeys;
}

unint64_t sub_1BA259660()
{
  unint64_t result;

  result = qword_1EF27EE58;
  if (!qword_1EF27EE58)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C5A60, &type metadata for ANFDocumentAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27EE58);
  }
  return result;
}

unint64_t sub_1BA2596A8()
{
  unint64_t result;

  result = qword_1EF27EE60;
  if (!qword_1EF27EE60)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C59D0, &type metadata for ANFDocumentAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27EE60);
  }
  return result;
}

unint64_t sub_1BA2596F0()
{
  unint64_t result;

  result = qword_1EF27EE68;
  if (!qword_1EF27EE68)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C59F8, &type metadata for ANFDocumentAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27EE68);
  }
  return result;
}

uint64_t sub_1BA259734@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = type metadata accessor for BannerAdLayoutStore();
  v3 = swift_allocObject();
  sub_1BA259B28(0, (unint64_t *)&qword_1ED5B1478);
  swift_allocObject();
  result = sub_1BA2C18B0();
  *(_QWORD *)(v3 + 16) = result;
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for BannerAdLayoutStore;
  *a1 = v3;
  return result;
}

uint64_t sub_1BA2597B4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[5];
  _BYTE v18[24];
  uint64_t v19;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA224288(0, &qword_1ED5B4178);
  result = sub_1BA2C176C();
  if (v19)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v19);
    MEMORY[0x1E0C80A78](v4);
    v6 = (_QWORD *)((char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v7 + 16))(v6);
    v8 = *v6;
    v9 = type metadata accessor for InterstitialAdViewStyler();
    v17[3] = v9;
    v17[4] = &off_1E71F8050;
    v17[0] = v8;
    v10 = type metadata accessor for InterstitialAdViewRenderer();
    v11 = (_QWORD *)swift_allocObject();
    v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v9);
    MEMORY[0x1E0C80A78](v12);
    v14 = (_QWORD *)((char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v15 + 16))(v14);
    v16 = *v14;
    v11[5] = v9;
    v11[6] = &off_1E71F8050;
    v11[2] = v16;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    a2[3] = v10;
    a2[4] = &off_1E71F7730;
    *a2 = v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA25994C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BA23616C((uint64_t (*)(_QWORD))type metadata accessor for InterstitialAdViewStyler, (uint64_t)&off_1E71F8050, a1);
}

uint64_t sub_1BA259960@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[5];
  _BYTE v18[24];
  uint64_t v19;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA224288(0, &qword_1ED5B4178);
  result = sub_1BA2C176C();
  if (v19)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v19);
    MEMORY[0x1E0C80A78](v4);
    v6 = (_QWORD *)((char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v7 + 16))(v6);
    v8 = *v6;
    v9 = type metadata accessor for InterstitialAdViewStyler();
    v17[3] = v9;
    v17[4] = &off_1E71F8050;
    v17[0] = v8;
    v10 = type metadata accessor for InterstitialAdViewLayoutAttributesFactory();
    v11 = (_QWORD *)swift_allocObject();
    v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v9);
    MEMORY[0x1E0C80A78](v12);
    v14 = (_QWORD *)((char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v15 + 16))(v14);
    v16 = *v14;
    v11[5] = v9;
    v11[6] = &off_1E71F8050;
    v11[2] = v16;
    sub_1BA259B28(0, &qword_1EF27EE70);
    swift_allocObject();
    v11[7] = sub_1BA2C18B0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    a2[3] = v10;
    a2[4] = &off_1E71FDFA8;
    *a2 = v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BA259B28(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BA2C18BC();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t AdContentInfo.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AdContentInfo.metricsHelper.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t AdContentInfo.isInteractive.getter()
{
  return sub_1BA2C1A18() & 1;
}

uint64_t AdContentInfo.isDownloadable.getter()
{
  return sub_1BA2C1A30() & 1;
}

uint64_t AdContentInfo.isVideo.getter()
{
  return sub_1BA2C1A48() & 1;
}

id AdContentInfo.unfilledReason.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 24), sel_unfilledReason);
}

uint64_t sub_1BA259C28()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1BA259C30()
{
  return sub_1BA2C1A18() & 1;
}

uint64_t sub_1BA259C54()
{
  return sub_1BA2C1A30() & 1;
}

uint64_t sub_1BA259C78()
{
  return sub_1BA2C1A48() & 1;
}

id sub_1BA259C9C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 24), sel_unfilledReason);
}

uint64_t dispatch thunk of AdContentInfoType.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AdContentInfoType.metricsHelper.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AdContentInfoType.isInteractive.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AdContentInfoType.isDownloadable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of AdContentInfoType.isVideo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of AdContentInfoType.unfilledReason.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

void destroy for AdContentInfo(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

}

_QWORD *initializeWithCopy for AdContentInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for AdContentInfo(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v4 = (void *)a2[3];
  v5 = (void *)a1[3];
  a1[3] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for AdContentInfo(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  v4 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  return a1;
}

ValueMetadata *type metadata accessor for AdContentInfo()
{
  return &type metadata for AdContentInfo;
}

unint64_t AdPolicyErrors.description.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  int64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v12;
  unint64_t v13;

  v1 = *(uint64_t **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  if (*(_BYTE *)(v0 + 16))
  {
    if (*(_BYTE *)(v0 + 16) == 1)
    {
      sub_1BA2C24C8();
      swift_bridgeObjectRelease();
      v13 = 0xD000000000000012;
      v3 = v1[2];
      if (v3)
      {
        v12 = MEMORY[0x1E0DEE9D8];
        sub_1BA24B61C(0, v3, 0);
        v4 = v1 + 10;
        do
        {
          v6 = *(v4 - 1);
          v5 = *v4;
          v8 = *(_QWORD *)(v12 + 16);
          v7 = *(_QWORD *)(v12 + 24);
          swift_bridgeObjectRetain();
          if (v8 >= v7 >> 1)
            sub_1BA24B61C((char *)(v7 > 1), v8 + 1, 1);
          *(_QWORD *)(v12 + 16) = v8 + 1;
          v9 = v12 + 16 * v8;
          *(_QWORD *)(v9 + 32) = v6;
          *(_QWORD *)(v9 + 40) = v5;
          v4 += 8;
          --v3;
        }
        while (v3);
      }
      sub_1BA234914();
      sub_1BA229294();
      sub_1BA2C2120();
      swift_bridgeObjectRelease();
      sub_1BA2C21C8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v13 = 0;
      sub_1BA2C24C8();
      sub_1BA2C21C8();
      sub_1BA2C21C8();
    }
    sub_1BA2C21C8();
  }
  else
  {
    v13 = 0;
    v10 = v1;
    sub_1BA2C24C8();
    sub_1BA2C21C8();
    sub_1BA2251B8();
    sub_1BA2C2570();
    sub_1BA25A0A0(v1, v2, 0);
  }
  return v13;
}

void sub_1BA25A0A0(void *a1, uint64_t a2, char a3)
{
  if (a3 == 2 || a3 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!a3)
  {

  }
}

id sub_1BA25A0CC(id result, uint64_t a2, char a3)
{
  if (a3 == 2 || a3 == 1)
    return (id)swift_bridgeObjectRetain();
  if (!a3)
    return result;
  return result;
}

void destroy for AdPolicyErrors(uint64_t a1)
{
  sub_1BA25A0A0(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s7NewsAds14AdPolicyErrorsOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA25A0CC(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for AdPolicyErrors(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA25A0CC(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BA25A0A0(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for AdPolicyErrors(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BA25A0A0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for AdPolicyErrors(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AdPolicyErrors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BA25A270(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AdPolicyErrors()
{
  return &type metadata for AdPolicyErrors;
}

double BannerAdViewLayoutOptions.boundingSize.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double BannerAdViewLayoutOptions.screenScale.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double BannerAdViewLayoutOptions.layoutMargins.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

double BannerAdViewLayoutOptions.padding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 56);
}

void BannerAdViewLayoutOptions.init(boundingSize:screenScale:layoutMargins:padding:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>, double a7@<D5>, double a8@<D6>, double a9@<D7>)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  a1[3] = a5;
  a1[4] = a6;
  a1[5] = a7;
  a1[6] = a8;
  a1[7] = a9;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for BannerAdViewLayoutOptions(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for BannerAdViewLayoutOptions(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 64) = v3;
  return result;
}

ValueMetadata *type metadata accessor for BannerAdViewLayoutOptions()
{
  return &type metadata for BannerAdViewLayoutOptions;
}

uint64_t sub_1BA25A340(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t result;
  int64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t i;
  int v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  void (*v24)(char *, char *, uint64_t);
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  unint64_t v29;
  size_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, char *, uint64_t);
  _QWORD *v33;
  char *v34;
  char *v35;

  sub_1BA25CD94();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BA2C1B20();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v35 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v34 = (char *)&v31 - v9;
  v10 = a1 + 56;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(a1 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v16 = 0;
  v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v13)
    goto LABEL_7;
LABEL_4:
  v18 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v18 | (v16 << 6); ; i = __clz(__rbit64(v22)) + (v16 << 6))
  {
    v20 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + i);
    if ((v20 - 2) >= 3)
    {
      v33 = v17;
      if (v20)
        sub_1BA2C1B08();
      else
        sub_1BA2C1AFC();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
      v24 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v24(v34, v4, v5);
      v32 = (uint64_t (*)(char *, char *, uint64_t))v24;
      v24(v35, v34, v5);
      v17 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v17 = (_QWORD *)sub_1BA23F3C8(0, v17[2] + 1, 1, v17);
      v26 = v17[2];
      v25 = v17[3];
      v27 = (_QWORD *)(v26 + 1);
      if (v26 >= v25 >> 1)
      {
        v33 = (_QWORD *)(v26 + 1);
        v28 = v17;
        v29 = v26;
        v30 = sub_1BA23F3C8(v25 > 1, v26 + 1, 1, v28);
        v27 = v33;
        v26 = v29;
        v17 = (_QWORD *)v30;
      }
      v17[2] = v27;
      result = v32((char *)v17+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v26, v35, v5);
      if (v13)
        goto LABEL_4;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
      result = sub_1BA258A50((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA25CD94);
      if (v13)
        goto LABEL_4;
    }
LABEL_7:
    v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v21 >= v14)
      goto LABEL_32;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v16;
    if (!v22)
    {
      v16 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_32;
      v22 = *(_QWORD *)(v10 + 8 * v16);
      if (!v22)
      {
        v16 = v21 + 2;
        if (v21 + 2 >= v14)
          goto LABEL_32;
        v22 = *(_QWORD *)(v10 + 8 * v16);
        if (!v22)
        {
          v16 = v21 + 3;
          if (v21 + 3 >= v14)
            goto LABEL_32;
          v22 = *(_QWORD *)(v10 + 8 * v16);
          if (!v22)
            break;
        }
      }
    }
LABEL_22:
    v13 = (v22 - 1) & v22;
  }
  v23 = v21 + 4;
  if (v23 >= v14)
  {
LABEL_32:
    swift_release();
    return (uint64_t)v17;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v16 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v16 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v16 >= v14)
      goto LABEL_32;
    v22 = *(_QWORD *)(v10 + 8 * v16);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t BannerAdUpdate.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void BannerAdUpdate.discard(with:)()
{
  type metadata accessor for AdRequest();
}

void sub_1BA25A6FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  int v26;
  void (*v27)(char *, uint64_t);
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v13 = sub_1BA2C245C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&a9 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  *(_QWORD *)(v9 + 56) = (char *)&a9 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&a9 - v21;
  v23 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](v20);
  v25 = (char *)&a9 - v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v22, v10 + *(int *)(v11 + 72), v13);
  v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v22, 1, a1);
  *(_QWORD *)(v9 + 120) = v10;
  *(_QWORD *)(v9 + 72) = v13;
  if (v26 == 1)
  {
    v27 = *(void (**)(char *, uint64_t))(v14 + 8);
    *(_QWORD *)(v9 + 48) = v27;
    v27(v22, v13);
    *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + *(int *)(v11 + 76));
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
    *(_QWORD *)(v9 + 56) = v17;
    v28(v17, 1, 1, a1);
    v29 = *(_QWORD *)(v11 + 40);
    v30 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    v31 = *(_QWORD *)(v11 + 16);
    v30(v31, v29);
    *(_QWORD *)(v9 + 32) = *(_QWORD *)(v9 + 704);
    swift_bridgeObjectRetain();
    sub_1BA228114(v9 + 704);
    *(_QWORD *)(v9 + 64) = v30;
    v30(v31, v29);
    sub_1BA2283EC(v9 + 472, v9 + 312);
    if (*(_BYTE *)(v9 + 392))
    {
      if (*(_BYTE *)(v9 + 392) == 1)
        sub_1BA2285BC(v9 + 312);
    }
    else
    {
      sub_1BA21D3D4((__int128 *)(v9 + 312), v9 + 224);
      v37 = *(_QWORD *)(v9 + 248);
      v38 = *(_QWORD *)(v9 + 256);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v9 + 224), v37);
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v38);
      __swift_destroy_boxed_opaque_existential_1(v9 + 224);
    }
    sub_1BA228114(v9 + 456);
    Journal.addFailedEntry(error:request:placementIdentifier:contentIdentifier:)();
  }
  *(_QWORD *)(v9 + 48) = v14;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v25, v22, a1);
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + *(int *)(v11 + 76));
  *(_QWORD *)(v9 + 40) = v25;
  v32 = *(_QWORD *)(v9 + 56);
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 16))(v32, v25, a1);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 56))(v32, 0, 1, a1);
  v33 = *(_QWORD *)(v11 + 40);
  v34 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
  *(_QWORD *)(v9 + 24) = v11;
  v35 = *(_QWORD *)(v11 + 16);
  v34(v35, v33);
  v36 = *(_QWORD *)(v9 + 712);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v9 + 704);
  *(_QWORD *)(v9 + 16) = v36;
  swift_bridgeObjectRetain();
  sub_1BA228114(v9 + 704);
  *(_QWORD *)(v9 + 64) = v34;
  v34(v35, v33);
  sub_1BA2283EC(v9 + 472, v9 + 312);
  if (*(_BYTE *)(v9 + 392))
  {
    if (*(_BYTE *)(v9 + 392) == 1)
      sub_1BA2285BC(v9 + 312);
  }
  else
  {
    sub_1BA21D3D4((__int128 *)(v9 + 312), v9 + 224);
    v39 = *(_QWORD *)(v9 + 248);
    v40 = *(_QWORD *)(v9 + 256);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v9 + 224), v39);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v40);
    __swift_destroy_boxed_opaque_existential_1(v9 + 224);
  }
  sub_1BA228114(v9 + 456);
  Journal.addDiscardedEntry(error:request:placementIdentifier:contentIdentifier:)();
}

void sub_1BA25AA88()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, _QWORD))(v0[6] + 8))(v3, v0[9]);
  (*(void (**)(_QWORD, uint64_t))(v1 + 8))(v0[5], v2);
  JUMPOUT(0x1BA25AAC8);
}

void sub_1BA25AB04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v3 = v1;
  v4 = v1;
  v5 = *(void (**)(uint64_t, uint64_t))(v0 + 64);
  v5(v3, v2);
  swift_bridgeObjectRetain();
  sub_1BA228114(v0 + 456);
  sub_1BA2283EC(v0 + 224, v0 + 136);
  v5(v4, v2);
  swift_bridgeObjectRetain();
  sub_1BA228114(v0 + 704);
  Journal.createDebugJournal(for:)();
}

uint64_t sub_1BA25AB90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 704) = v2;
  *(_QWORD *)(v0 + 712) = v1;
  sub_1BA2205FC(v0 + 136, v0 + 720);
  v5 = *(_OWORD *)(v0 + 376);
  *(_OWORD *)(v0 + 888) = *(_OWORD *)(v0 + 392);
  v6 = *(_OWORD *)(v0 + 424);
  *(_OWORD *)(v0 + 904) = *(_OWORD *)(v0 + 408);
  *(_OWORD *)(v0 + 920) = v6;
  *(_OWORD *)(v0 + 936) = *(_OWORD *)(v0 + 440);
  v7 = *(_OWORD *)(v0 + 312);
  *(_OWORD *)(v0 + 824) = *(_OWORD *)(v0 + 328);
  v8 = *(_OWORD *)(v0 + 360);
  *(_OWORD *)(v0 + 840) = *(_OWORD *)(v0 + 344);
  *(_OWORD *)(v0 + 856) = v8;
  *(_OWORD *)(v0 + 872) = v5;
  *(_OWORD *)(v0 + 808) = v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v0 + 704, v3, v4);
  sub_1BA228114(v0 + 704);
  return sub_1BA228524(v0 + 224);
}

uint64_t sub_1BA25AC6C(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  _QWORD *v21;
  uint64_t v22;
  char v23;

  v1 = a1;
  sub_1BA222948(0, (unint64_t *)&qword_1ED5B2CD0);
  if (!swift_dynamicCast())
    goto LABEL_13;
  v2 = v22;
  if (v23 != 1)
  {
    sub_1BA25A0A0(v21, v22, v23);
LABEL_13:
    v13 = 0;
    goto LABEL_22;
  }
  v3 = v21[2];
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = v21 + 10;
    v5 = MEMORY[0x1E0DEE9D8];
    v18 = v3;
    do
    {
      if (*((_BYTE *)v4 - 15) == 1)
      {
        v10 = *((_QWORD *)v4 - 6);
        v9 = *((_QWORD *)v4 - 5);
        v11 = *((_BYTE *)v4 - 16);
        v12 = *((_QWORD *)v4 - 1);
        v19 = *(v4 - 2);
        v20 = *v4;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1BA24B638(0, *(_QWORD *)(v5 + 16) + 1, 1);
        v7 = *(_QWORD *)(v5 + 16);
        v6 = *(_QWORD *)(v5 + 24);
        if (v7 >= v6 >> 1)
          sub_1BA24B638((char *)(v6 > 1), v7 + 1, 1);
        *(_QWORD *)(v5 + 16) = v7 + 1;
        v8 = v5 + (v7 << 6);
        *(_QWORD *)(v8 + 32) = v10;
        *(_QWORD *)(v8 + 40) = v9;
        *(_OWORD *)(v8 + 48) = v19;
        *(_BYTE *)(v8 + 64) = v11;
        *(_BYTE *)(v8 + 65) = 1;
        *(_QWORD *)(v8 + 72) = v12;
        *(_OWORD *)(v8 + 80) = v20;
      }
      v4 += 4;
      --v3;
    }
    while (v3);
    v2 = v22;
    sub_1BA25A0A0(v21, v22, 1);
    v3 = v18;
  }
  else
  {
    v5 = MEMORY[0x1E0DEE9D8];
  }
  v14 = *(_QWORD *)(v5 + 16);
  swift_release();
  v15 = v21[2];
  sub_1BA25A0A0(v21, v2, 1);
  if (v3)
    v16 = v14 == v15;
  else
    v16 = 0;
  v13 = v16;
LABEL_22:

  return v13;
}

void sub_1BA25AE70()
{
  type metadata accessor for AdRequest();
}

void sub_1BA25AEC8(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[96];

  v7 = sub_1BA2C245C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = &v23[-v10];
  v12 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](v9);
  v14 = &v23[-v13];
  *(_QWORD *)(v5 - 96) = v2;
  v15 = v2;
  sub_1BA222948(0, (unint64_t *)&qword_1ED5B2CD0);
  if (swift_dynamicCast())
  {
    v1[9] = v3;
    v1[10] = v4;
    v1[6] = v11;
    v1[7] = v8;
    v16 = v1[16];
    v1[8] = v12;
    v1[5] = v14;
    v17 = *(void **)(v5 - 120);
    v18 = *(_QWORD *)(v5 - 112);
    v19 = *(unsigned __int8 *)(v5 - 104);
    if (v19 == 1)
    {
      v1[3] = v17;
      v1[4] = v18;
      v20 = v1[10];
      v1[40] = v1[14];
      v1[41] = v20;
      v1[42] = v1[12];
      v1[43] = v16;
      v21 = v1[9];
      v1[44] = v1[13];
      v1[45] = v21;
      type metadata accessor for BannerAdUpdate();
    }
    sub_1BA25A0A0(v17, v18, v19);
  }
  v22 = v1[17];

  *(_OWORD *)(v22 + 48) = 0u;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 16) = 0u;
  *(_OWORD *)(v22 + 32) = 0u;
  *(_OWORD *)v22 = 0u;
  *(_BYTE *)(v22 + 80) = 1;
}

void BannerAdUpdate.present(with:)()
{
  type metadata accessor for AdRequest();
}

void sub_1BA25B2C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v13 = sub_1BA2C245C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&a9 - v16;
  v18 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&a9 - v19;
  v21 = *v11;
  v22 = v11[2];
  *(_QWORD *)(v9 + 56) = v11[1];
  *(_QWORD *)(v9 + 64) = v21;
  v23 = v11[3];
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 16))(v17, *(_QWORD *)(v9 + 80) + *(int *)(v10 + 72), v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, a1) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    v24 = *(_QWORD *)(v10 + 40);
    v25 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    v26 = *(_QWORD *)(v10 + 16);
  }
  else
  {
    *(_QWORD *)(v9 + 40) = v23;
    *(_QWORD *)(v9 + 48) = v22;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v17, a1);
    v24 = *(_QWORD *)(v10 + 40);
    v25 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    v26 = *(_QWORD *)(v10 + 16);
    v25(v26, v24);
    sub_1BA2283EC(v9 + 688, v9 + 424);
    if (!*(_BYTE *)(v9 + 504))
    {
      sub_1BA21D3D4((__int128 *)(v9 + 424), v9 + 176);
      v27 = *(_QWORD *)(v9 + 200);
      v28 = *(_QWORD *)(v9 + 208);
      *(_QWORD *)v9 = v20;
      v29 = v27;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v9 + 176), v27);
      v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v29, v28);
      *(_QWORD *)(v9 + 24) = v31;
      *(_QWORD *)(v9 + 32) = v30;
      __swift_destroy_boxed_opaque_existential_1(v9 + 176);
      sub_1BA228114(v9 + 672);
      *(_QWORD *)(v9 + 16) = *(_QWORD *)(*(_QWORD *)(v9 + 80) + *(int *)(v10 + 76));
      v25(v26, v24);
      *(_QWORD *)(v9 + 8) = a1;
      swift_bridgeObjectRetain();
      sub_1BA228114(v9 + 672);
      v32 = *(_QWORD *)(v9 + 56);
      *(_QWORD *)(v9 + 424) = *(_QWORD *)(v9 + 64);
      *(_QWORD *)(v9 + 432) = v32;
      v33 = *(_QWORD *)(v9 + 40);
      *(_QWORD *)(v9 + 440) = *(_QWORD *)(v9 + 48);
      *(_QWORD *)(v9 + 448) = v33;
      *(_BYTE *)(v9 + 456) = 0;
      Journal.addPresentedEntry(request:placementIdentifier:contentIdentifier:layout:)();
    }
    if (*(_BYTE *)(v9 + 504) == 1)
      sub_1BA2285BC(v9 + 424);
    sub_1BA228114(v9 + 672);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, a1);
  }
  v25(v26, v24);
  *(_QWORD *)(v9 + 64) = *(_QWORD *)(v9 + 424);
  swift_bridgeObjectRetain();
  sub_1BA228114(v9 + 424);
  v25(v26, v24);
  sub_1BA2283EC(v9 + 192, v9 + 88);
  sub_1BA228114(v9 + 176);
  v25(v26, v24);
  swift_bridgeObjectRetain();
  sub_1BA228114(v9 + 672);
  Journal.createDebugJournal(for:)();
}

uint64_t sub_1BA25B5A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 672) = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 680) = v2;
  sub_1BA2205FC(v0 + 88, v3 + 16);
  v5 = *(_OWORD *)(v0 + 992);
  *(_OWORD *)(v0 + 856) = *(_OWORD *)(v0 + 1008);
  v6 = *(_OWORD *)(v0 + 1040);
  *(_OWORD *)(v0 + 872) = *(_OWORD *)(v0 + 1024);
  *(_OWORD *)(v0 + 888) = v6;
  *(_OWORD *)(v0 + 904) = *(_OWORD *)(v0 + 1056);
  v7 = *(_OWORD *)(v0 + 928);
  *(_OWORD *)(v0 + 792) = *(_OWORD *)(v0 + 944);
  v8 = *(_OWORD *)(v0 + 976);
  *(_OWORD *)(v0 + 808) = *(_OWORD *)(v0 + 960);
  *(_OWORD *)(v0 + 824) = v8;
  *(_OWORD *)(v0 + 840) = v5;
  *(_OWORD *)(v0 + 776) = v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v0 + 672, v4, v1);
  return sub_1BA228114(v0 + 672);
}

_QWORD *sub_1BA25B644(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  _QWORD *v34;
  _QWORD *v35;
  unint64_t v36;
  uint64_t v37;
  size_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unint64_t v42;
  unint64_t v43;
  void (*v44)(unint64_t, unint64_t, uint64_t);
  unint64_t v45;
  unint64_t v46;
  void (*v47)(unint64_t, unint64_t, uint64_t);
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  _QWORD *v63;

  v5 = a3[2];
  v4 = a3[3];
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(v4 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = *(unsigned int *)(v9 + 84);
  v12 = v10 & 0xF8;
  v13 = v12 | 7;
  v14 = a3[4];
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_DWORD *)(v15 + 80);
  v17 = v16 | v12 | 7;
  if (v11 <= 0x7FFFFFFF)
    v18 = 0x7FFFFFFF;
  else
    v18 = *(_DWORD *)(v9 + 84);
  v19 = *(_QWORD *)(v9 + 64) + 7;
  v20 = (v19 & 0xFFFFFFFFFFFFFFF8) + v16 + 8;
  v21 = *(_QWORD *)(v15 + 64) + 7;
  if ((v17 | v7) == 7
    && ((v10 | *(_DWORD *)(v6 + 80) | *(_DWORD *)(v15 + 80)) & 0x100000) == 0
    && ((v21 + ((v20 + ((v12 + 23) & ~v13)) & ~v16)) & 0xFFFFFFFFFFFFFFF8)
     + 16
     + ((v17 + v8 + ((v7 + 16) & ~v7)) & ~v17)
     + 8 <= 0x18)
  {
    v61 = v12 + 23;
    v62 = ((v21 + ((v20 + ((v12 + 23) & ~v13)) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 16;
    v51 = *(_QWORD *)(v9 + 64) + 7;
    v52 = *(_QWORD *)(v15 + 64) + 7;
    v55 = (v19 & 0xFFFFFFFFFFFFFFF8) + v16 + 8;
    v56 = *(_QWORD *)(v14 - 8);
    v57 = v4;
    v58 = v14;
    v26 = ~v7;
    v27 = ~v17;
    v28 = *(unsigned int *)(v15 + 84);
    v60 = ~v13;
    v54 = ~v16;
    v53 = v18;
    if (v28 <= v18)
      v29 = v18;
    else
      v29 = *(_DWORD *)(v15 + 84);
    v59 = v29;
    v30 = a2[1];
    *a1 = *a2;
    a1[1] = v30;
    v63 = a1;
    v31 = ((unint64_t)a1 + v7 + 16) & v26;
    v32 = ((unint64_t)a2 + v7 + 16) & v26;
    v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    swift_bridgeObjectRetain();
    v33(v31, v32, v5);
    v34 = (_QWORD *)((v31 + v8 + v17) & v27);
    v35 = (_QWORD *)((v32 + v8 + v17) & v27);
    if (v59 == 0x7FFFFFFF)
    {
      v36 = *(_QWORD *)(((v32 + v8 + v17) & v27) + 8);
      if (v36 >= 0xFFFFFFFF)
        LODWORD(v36) = -1;
      v37 = v61;
      v38 = v62;
      v39 = v60;
      if ((_DWORD)v36 != -1)
        goto LABEL_20;
    }
    else
    {
      v39 = v60;
      v37 = v61;
      v40 = ((unint64_t)v35 + v61) & v60;
      if (v53 >= v28)
        v41 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v40, v11, v57);
      else
        v41 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v56 + 48))((v55 + v40) & v54, v28, v58);
      v38 = v62;
      if (v41)
      {
LABEL_20:
        memcpy(v34, v35, v38);
LABEL_26:
        *(_QWORD *)(((unint64_t)v34 + v38) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v35 + v38) & 0xFFFFFFFFFFFFF8);
        v25 = v63;
        goto LABEL_27;
      }
    }
    *v34 = *v35;
    v34[1] = v35[1];
    v42 = ((unint64_t)v34 + v37) & v39;
    v43 = ((unint64_t)v35 + v37) & v39;
    v44 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
    swift_bridgeObjectRetain();
    v44(v42, v43, v57);
    *(_QWORD *)((v51 + v42) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v51 + v43) & 0xFFFFFFFFFFFFF8);
    v45 = (v55 + v42) & v54;
    v46 = (v55 + v43) & v54;
    v47 = *(void (**)(unint64_t, unint64_t, uint64_t))(v56 + 16);
    swift_bridgeObjectRetain();
    v47(v45, v46, v58);
    v48 = (_QWORD *)((v52 + v45) & 0xFFFFFFFFFFFFFFF8);
    v49 = (_QWORD *)((v52 + v46) & 0xFFFFFFFFFFFFFFF8);
    *v48 = *v49;
    v48[1] = v49[1];
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
  v24 = *a2;
  *a1 = *a2;
  v25 = (_QWORD *)(v24 + (((v17 | v7) + 16) & ~(v17 | v7)));
LABEL_27:
  swift_retain();
  return v25;
}

_QWORD *sub_1BA25B948(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unsigned int v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  _QWORD *v29;
  unint64_t v30;
  _QWORD *v31;
  void *v32;
  const void *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t (*v36)(unint64_t, uint64_t, uint64_t);
  uint64_t (*v37)(unint64_t, uint64_t, uint64_t);
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  void (*v41)(unint64_t, unint64_t, uint64_t);
  unint64_t v42;
  unint64_t v43;
  void (*v44)(unint64_t, unint64_t, uint64_t);
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  int v54;
  int v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t __n;

  v5 = a1;
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a3[2] - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)v5 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v8, v9);
  v10 = a3[3];
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int *)(v11 + 84);
  v13 = *(_DWORD *)(v11 + 80) & 0xF8;
  v14 = v13 | 7;
  v61 = a3[4];
  v15 = *(_QWORD *)(v61 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = v16 | v13 | 7;
  v18 = v17 + *(_QWORD *)(v6 + 64);
  v19 = (_QWORD *)((v18 + v8) & ~v17);
  v20 = (_QWORD *)((v18 + v9) & ~v17);
  if (v12 <= 0x7FFFFFFF)
    v21 = 0x7FFFFFFF;
  else
    v21 = *(_DWORD *)(v11 + 84);
  v22 = *(unsigned int *)(v15 + 84);
  if (v22 <= v21)
    v23 = v21;
  else
    v23 = *(_DWORD *)(v15 + 84);
  v24 = ~v14;
  v25 = v13 + 23;
  v58 = *(_QWORD *)(v11 + 64) + 7;
  v59 = (v58 & 0xFFFFFFFFFFFFFFF8) + v16 + 8;
  v60 = ~v16;
  v26 = *(_QWORD *)(v15 + 64) + 7;
  __n = ((v26 + ((v59 + ((v13 + 23) & ~v14)) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v23 != 0x7FFFFFFF)
  {
    v56 = v20;
    v57 = v5;
    v34 = ((unint64_t)v19 + v25) & v24;
    v35 = ((unint64_t)v20 + v25) & v24;
    if (v21 >= v22)
    {
      v37 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v11 + 48);
      v55 = v37(v34, v12, v10);
      v28 = v37(v35, v12, v10);
      v20 = v56;
      v5 = v57;
      if (!v55)
        goto LABEL_11;
    }
    else
    {
      v36 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v15 + 48);
      v54 = v36((v59 + v34) & v60, v22, v61);
      v28 = v36((v59 + v35) & v60, v22, v61);
      v20 = v56;
      v5 = v57;
      if (!v54)
        goto LABEL_11;
    }
LABEL_17:
    if (v28)
    {
      v32 = v19;
      v31 = v20;
      v33 = v20;
      goto LABEL_19;
    }
    *v19 = *v20;
    v19[1] = v20[1];
    v39 = ((unint64_t)v19 + v25) & v24;
    v40 = ((unint64_t)v20 + v25) & v24;
    v41 = *(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16);
    v31 = v20;
    swift_bridgeObjectRetain();
    v41(v39, v40, v10);
    *(_QWORD *)((v58 + v39) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v58 + v40) & 0xFFFFFFFFFFFFF8);
    v42 = (v59 + v39) & v60;
    v43 = (v59 + v40) & v60;
    v44 = *(void (**)(unint64_t, unint64_t, uint64_t))(v15 + 16);
    swift_bridgeObjectRetain();
    v44(v42, v43, v61);
    v45 = (_QWORD *)((v26 + v42) & 0xFFFFFFFFFFFFFFF8);
    v46 = (_QWORD *)((v26 + v43) & 0xFFFFFFFFFFFFFFF8);
    *v45 = *v46;
    v45[1] = v46[1];
    swift_bridgeObjectRetain();
LABEL_22:
    v38 = __n;
    goto LABEL_23;
  }
  v27 = v20[1];
  if (v27 >= 0xFFFFFFFF)
    LODWORD(v27) = -1;
  v28 = v27 + 1;
  if (v19[1] < 0xFFFFFFFFuLL)
    goto LABEL_17;
LABEL_11:
  if (!v28)
  {
    *v19 = *v20;
    v19[1] = v20[1];
    v47 = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v48 = ((unint64_t)v19 + v25) & v24;
    v49 = ((unint64_t)v47 + v25) & v24;
    v31 = v47;
    v50 = v48;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 24))(v48, v49, v10);
    *(_QWORD *)((v58 + v50) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((v58 + v49) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v15 + 24))((v59 + v50) & v60, (v59 + v49) & v60, v61);
    v51 = (_QWORD *)((v26 + ((v59 + v50) & v60)) & 0xFFFFFFFFFFFFFFF8);
    v52 = (_QWORD *)((v26 + ((v59 + v49) & v60)) & 0xFFFFFFFFFFFFFFF8);
    *v51 = *v52;
    v51[1] = v52[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  v29 = v20;
  swift_bridgeObjectRelease();
  v30 = ((unint64_t)v19 + v25) & v24;
  v31 = v29;
  (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v30, v10);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v15 + 8))((v59 + v30) & v60, v61);
  swift_bridgeObjectRelease();
  v32 = v19;
  v33 = v29;
LABEL_19:
  v38 = __n;
  memcpy(v32, v33, __n);
LABEL_23:
  *(_QWORD *)(((unint64_t)v19 + v38) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v31 + v38) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return v5;
}

_OWORD *sub_1BA25BD98(_OWORD *a1, _OWORD *a2, _QWORD *a3)
{
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _QWORD *v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  size_t v30;
  unint64_t v31;
  int v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v37;
  _OWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v4 = a1;
  *a1 = *a2;
  v5 = *(_QWORD *)(a3[2] - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 16) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 16) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v7, v8);
  v9 = a3[3];
  v10 = a3[4];
  v11 = *(_QWORD *)(v9 - 8);
  v12 = *(_DWORD *)(v11 + 80) & 0xF8;
  v13 = v12 | 7;
  v14 = *(_QWORD *)(v10 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = v15 | v12 | 7;
  v17 = v16 + *(_QWORD *)(v5 + 64);
  v18 = (_OWORD *)((v17 + v7) & ~v16);
  v19 = (_QWORD *)((v17 + v8) & ~v16);
  if (*(_DWORD *)(v11 + 84) <= 0x7FFFFFFFu)
    v20 = 0x7FFFFFFF;
  else
    v20 = *(_DWORD *)(v11 + 84);
  v21 = *(unsigned int *)(v14 + 84);
  if (v21 <= v20)
    v22 = v20;
  else
    v22 = *(_DWORD *)(v14 + 84);
  v23 = ~v13;
  v24 = v12 + 23;
  v25 = *(_QWORD *)(v11 + 64) + 7;
  v26 = (v25 & 0xFFFFFFFFFFFFFFF8) + v15 + 8;
  v27 = *(_QWORD *)(v14 + 64) + 7;
  v28 = (v27 + ((v26 + ((v12 + 23) & ~v13)) & ~v15)) & 0xFFFFFFFFFFFFFFF8;
  v40 = v9;
  v41 = v10;
  v39 = ~v15;
  if (v22 == 0x7FFFFFFF)
  {
    v29 = v19[1];
    if (v29 >= 0xFFFFFFFF)
      LODWORD(v29) = -1;
    v30 = v28 + 16;
    if ((_DWORD)v29 != -1)
      goto LABEL_11;
LABEL_16:
    *v18 = *(_OWORD *)v19;
    v38 = v4;
    v33 = ((unint64_t)v18 + v24) & v23;
    v34 = ((unint64_t)v19 + v24) & v23;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 32))(v33, v34, v40);
    *(_QWORD *)((v25 + v33) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v25 + v34) & 0xFFFFFFFFFFFFF8);
    v35 = (v26 + v33) & v39;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 32))(v35, (v26 + v34) & v39, v41);
    v4 = v38;
    *(_OWORD *)((v27 + v35) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v27 + ((v26 + v34) & v39)) & 0xFFFFFFFFFFFFF8);
    goto LABEL_17;
  }
  v37 = ~v13;
  v31 = ((unint64_t)v19 + v24) & v23;
  if (v20 >= v21)
    v32 = (*(uint64_t (**)(unint64_t))(v11 + 48))(v31);
  else
    v32 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v14 + 48))((v26 + v31) & ~v15, v21, v10);
  v23 = v37;
  v30 = v28 + 16;
  if (!v32)
    goto LABEL_16;
LABEL_11:
  memcpy(v18, v19, v30);
LABEL_17:
  *(_QWORD *)(((unint64_t)v18 + v30) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v19 + v30) & 0xFFFFFFFFFFFFF8);
  return v4;
}

_QWORD *sub_1BA25BFD0(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  unsigned int v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t (*v32)(unint64_t, uint64_t, uint64_t);
  uint64_t (*v33)(unint64_t, uint64_t, uint64_t);
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  int v44;
  int v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t __n;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a3[2] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v9, v10);
  v11 = *(_QWORD *)(v7 + 64);
  v12 = a3[3];
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int *)(v13 + 84);
  v15 = *(_DWORD *)(v13 + 80) & 0xF8;
  v16 = v15 | 7;
  v51 = a3[4];
  v17 = *(_QWORD *)(v51 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = v18 | v15 | 7;
  v20 = v19 + v11;
  v21 = (_QWORD *)((v20 + v9) & ~v19);
  v22 = (_QWORD *)((v20 + v10) & ~v19);
  if (v14 <= 0x7FFFFFFF)
    v23 = 0x7FFFFFFF;
  else
    v23 = *(_DWORD *)(v13 + 84);
  v24 = *(unsigned int *)(v17 + 84);
  if (v24 <= v23)
    v25 = v23;
  else
    v25 = *(_DWORD *)(v17 + 84);
  v26 = ~v16;
  v27 = v15 + 23;
  v47 = *(_QWORD *)(v13 + 64) + 7;
  v49 = (v47 & 0xFFFFFFFFFFFFFFF8) + v18 + 8;
  v50 = ~v18;
  v48 = *(_QWORD *)(v17 + 64) + 7;
  __n = ((v48 + ((v49 + ((v15 + 23) & ~v16)) & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v25 != 0x7FFFFFFF)
  {
    v30 = ((unint64_t)v21 + v27) & v26;
    v46 = v22;
    v31 = ((unint64_t)v22 + v27) & v26;
    if (v23 >= v24)
    {
      v33 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v13 + 48);
      v45 = v33(v30, v14, v12);
      v29 = v33(v31, v14, v12);
      v22 = v46;
      if (!v45)
        goto LABEL_11;
    }
    else
    {
      v32 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v17 + 48);
      v44 = v32((v49 + v30) & v50, v24, v51);
      v29 = v32((v49 + v31) & v50, v24, v51);
      v22 = v46;
      if (!v44)
        goto LABEL_11;
    }
LABEL_17:
    if (v29)
      goto LABEL_18;
    *(_OWORD *)v21 = *(_OWORD *)v22;
    v35 = ((unint64_t)v21 + v27) & v26;
    v36 = ((unint64_t)v22 + v27) & v26;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 32))(v35, v36, v12);
    *(_QWORD *)((v47 + v35) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v47 + v36) & 0xFFFFFFFFFFFFF8);
    v37 = (v49 + v35) & v50;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v17 + 32))(v37, (v49 + v36) & v50, v51);
    *(_OWORD *)((v48 + v37) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v48 + ((v49 + v36) & v50)) & 0xFFFFFFFFFFFFF8);
LABEL_21:
    v34 = __n;
    goto LABEL_22;
  }
  v28 = v22[1];
  if (v28 >= 0xFFFFFFFF)
    LODWORD(v28) = -1;
  v29 = v28 + 1;
  if (v21[1] < 0xFFFFFFFFuLL)
    goto LABEL_17;
LABEL_11:
  if (!v29)
  {
    *v21 = *v22;
    v21[1] = v22[1];
    swift_bridgeObjectRelease();
    v38 = ((unint64_t)v21 + v27) & v26;
    v39 = ((unint64_t)v22 + v27) & v26;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 40))(v38, v39, v12);
    *(_QWORD *)((v47 + v38) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((v47 + v39) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRelease();
    v40 = (v49 + v38) & v50;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v17 + 40))(v40, (v49 + v39) & v50, v51);
    v41 = (_QWORD *)((v48 + v40) & 0xFFFFFFFFFFFFFFF8);
    v42 = (_QWORD *)((v48 + ((v49 + v39) & v50)) & 0xFFFFFFFFFFFFFFF8);
    *v41 = *v42;
    v41[1] = v42[1];
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v13 + 8))(((unint64_t)v21 + v27) & v26, v12);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v17 + 8))((v49 + (((unint64_t)v21 + v27) & v26)) & v50, v51);
  swift_bridgeObjectRelease();
LABEL_18:
  v34 = __n;
  memcpy(v21, v22, __n);
LABEL_22:
  *(_QWORD *)(((unint64_t)v21 + v34) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v22 + v34) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1BA25C3C0(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unsigned int v29;
  uint64_t v30;

  v3 = a3[2];
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(a3[3] - 8);
  if (*(_DWORD *)(v6 + 84) <= 0x7FFFFFFFu)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = a3[4];
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v7)
    v11 = v7;
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (v5 <= v11 - 1)
    v12 = v11 - 1;
  else
    v12 = *(_DWORD *)(v4 + 84);
  if (v12 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v12;
  if (!a2)
    return 0;
  v14 = *(unsigned __int8 *)(v4 + 80);
  v15 = *(_QWORD *)(v4 + 64);
  v16 = *(_DWORD *)(v6 + 80) & 0xF8;
  v17 = v16 | 7;
  v18 = *(unsigned __int8 *)(v9 + 80);
  v19 = v18 | v16 | 7;
  v20 = v16 + 23;
  v21 = ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + v18 + 8;
  if (v13 < a2)
  {
    if (((((v19 + v15 + ((v14 + 16) & ~v14)) & ~v19)
         + ((*(_QWORD *)(v9 + 64) + ((v21 + (v20 & ~v17)) & ~v18) + 7) & 0xFFFFFFFFFFFFFFF8)
         + 24) & 0xFFFFFFF8) != 0)
      v22 = 2;
    else
      v22 = a2 - v13 + 1;
    if (v22 >= 0x10000)
      v23 = 4;
    else
      v23 = 2;
    if (v22 < 0x100)
      v23 = 1;
    if (v22 >= 2)
      v24 = v23;
    else
      v24 = 0;
    __asm { BR              X26 }
  }
  if ((v12 & 0x80000000) != 0)
  {
    v27 = (a1 + v14 + 16) & ~v14;
    if (v5 == v13)
    {
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v4 + 48))(v27, *(unsigned int *)(v4 + 84), v3);
    }
    else
    {
      if (v11 == 0x7FFFFFFF)
      {
        v28 = *(_QWORD *)(((v27 + v15 + v19) & ~v19) + 8);
        if (v28 >= 0xFFFFFFFF)
          LODWORD(v28) = -1;
        v29 = v28 + 1;
      }
      else
      {
        v30 = (v20 + ((v27 + v15 + v19) & ~v19)) & ~v17;
        if (v7 >= v10)
          v29 = (*(uint64_t (**)(uint64_t))(v6 + 48))(v30);
        else
          v29 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v9 + 48))((v21 + v30) & ~v18, *(unsigned int *)(v9 + 84), v8);
      }
      if (v29 >= 2)
        return v29 - 1;
      else
        return 0;
    }
  }
  else
  {
    v26 = *(_QWORD *)(a1 + 8);
    if (v26 >= 0xFFFFFFFF)
      LODWORD(v26) = -1;
    return (v26 + 1);
  }
}

void sub_1BA25C630(unsigned int *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v5;
  _DWORD *v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  int v16;
  unsigned int v17;

  v5 = *(_QWORD *)(a4[2] - 8);
  v6 = *(_DWORD **)(a4[3] - 8);
  v7 = v6[20];
  if (v6[21] <= 0x7FFFFFFFu)
    v8 = 0x7FFFFFFF;
  else
    v8 = v6[21];
  v9 = *(_QWORD *)(a4[4] - 8);
  if (*(_DWORD *)(v9 + 84) <= v8)
    v10 = v8;
  else
    v10 = *(_DWORD *)(v9 + 84);
  if (*(_DWORD *)(v5 + 84) <= v10 - 1)
    v11 = v10 - 1;
  else
    v11 = *(_DWORD *)(v5 + 84);
  if (v11 <= 0x7FFFFFFF)
    v12 = 0x7FFFFFFF;
  else
    v12 = v11;
  v13 = v7 & 0xF8 | 7;
  v14 = *(unsigned __int8 *)(v9 + 80);
  if (v12 >= a3)
  {
    v16 = 0u;
    if (a2 <= v12)
      goto LABEL_25;
  }
  else
  {
    if (((*(_DWORD *)(v9 + 64)
         + ((((v6[16] + 7) & 0xFFFFFFF8) + 8 + (_DWORD)v14 + (((v6[20] & 0xF8) + 23) & ~(_DWORD)v13)) & ~(_DWORD)v14)
         + 7) & 0xFFFFFFF8)
       + 16
       + (((v14 | v13)
         + *(_DWORD *)(v5 + 64)
         + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~*(unsigned __int8 *)(v5 + 80))) & ~(v14 | v13)) == -8)
      v15 = a3 - v12 + 1;
    else
      v15 = 2;
    if (v15 >= 0x10000)
      v16 = 4;
    else
      v16 = 2;
    if (v15 < 0x100)
      v16 = 1;
    if (v15 < 2)
      v16 = 0;
    if (a2 <= v12)
LABEL_25:
      __asm { BR              X14 }
  }
  if (((*(_DWORD *)(v9 + 64)
       + ((((v6[16] + 7) & 0xFFFFFFF8) + 8 + (_DWORD)v14 + (((v6[20] & 0xF8) + 23) & ~(_DWORD)v13)) & ~(_DWORD)v14)
       + 7) & 0xFFFFFFF8)
     + 16
     + (((v14 | v13)
       + *(_DWORD *)(v5 + 64)
       + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~*(unsigned __int8 *)(v5 + 80))) & ~(v14 | v13)) != -8)
  {
    v17 = ~v12 + a2;
    bzero(a1, ((*(_QWORD *)(v9 + 64)+ ((((*((_QWORD *)v6 + 8) + 7) & 0xFFFFFFFFFFFFFFF8) + 8 + v14 + (((v7 & 0xF8) + 23) & ~v13)) & ~v14)+ 7) & 0xFFFFFFFFFFFFFFF8)+ 16+ (((v14 | v13)+ *(_QWORD *)(v5 + 64)+ ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))) & ~(v14 | v13))+ 8);
    *a1 = v17;
  }
  __asm { BR              X10 }
}

void sub_1BA25C7D8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1BA25C904);
}

void sub_1BA25C7E0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1BA25C7E8);
  JUMPOUT(0x1BA25C904);
}

void sub_1BA25C7FC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BA25C904);
}

void sub_1BA25C804()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BA25C904);
}

void sub_1BA25C80C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;

  *(_WORD *)(v2 + v3) = 0;
  if (a2)
  {
    if (v4 < 0)
      JUMPOUT(0x1BA25C818);
    if (a2 < 0)
      JUMPOUT(0x1BA25C858);
    *(_QWORD *)(v2 + 8) = (a2 - 1);
  }
  JUMPOUT(0x1BA25C904);
}

void sub_1BA25C944()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B12C8)
  {
    sub_1BA222948(255, (unint64_t *)&qword_1ED5B12C0);
    v0 = sub_1BA2C245C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B12C8);
  }
}

uint64_t sub_1BA25C9A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned __int8 *v4;
  unsigned int v5;
  char v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1BA25CDE8();
  result = sub_1BA2C230C();
  v7 = result;
  if (v2)
  {
    v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_1BA2889F0(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1BA25CA18(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  void (*v32)(char *, uint64_t);
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v38[2];
  char *v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;

  v40 = a1;
  v3 = sub_1BA2C1B20();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)v38 - v9;
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)v38 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)v38 - v15;
  MEMORY[0x1E0C80A78](v14);
  v39 = (char *)v38 - v17;
  v18 = *(_QWORD *)(a2 + 16);
  v19 = MEMORY[0x1E0DEE9D8];
  if (v18)
  {
    v41 = v16;
    v42 = v4;
    v43 = MEMORY[0x1E0DEE9D8];
    sub_1BA24B654(0, v18, 0);
    v19 = v43;
    v20 = *(_QWORD *)(v43 + 16);
    v21 = (char *)(a2 + 64);
    do
    {
      v23 = *v21;
      v21 += 64;
      v22 = v23;
      v43 = v19;
      v24 = *(_QWORD *)(v19 + 24);
      if (v20 >= v24 >> 1)
      {
        sub_1BA24B654((char *)(v24 > 1), v20 + 1, 1);
        v19 = v43;
      }
      *(_QWORD *)(v19 + 16) = v20 + 1;
      *(_BYTE *)(v19 + v20++ + 32) = v22;
      --v18;
    }
    while (v18);
    v16 = v41;
    v4 = v42;
  }
  v25 = sub_1BA25C9A8(v19);
  swift_bridgeObjectRelease();
  v26 = sub_1BA25A340(v25);
  swift_bridgeObjectRelease();
  v27 = *(_QWORD *)(v26 + 16);
  if (!v27)
    return swift_bridgeObjectRelease();
  sub_1BA2C1B14();
  v28 = v26 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v29 = *(_QWORD *)(v4 + 72);
  v30 = v4;
  v41 = *(char **)(v4 + 16);
  v42 = v29;
  v38[1] = v26;
  swift_bridgeObjectRetain();
  do
  {
    v31 = (void (*)(char *, char *, uint64_t))v41;
    ((void (*)(char *, unint64_t, uint64_t))v41)(v13, v28, v3);
    sub_1BA254134(&qword_1ED5B1278, MEMORY[0x1E0D81F38]);
    sub_1BA2C221C();
    sub_1BA254134(&qword_1ED5B1288, MEMORY[0x1E0D81F48]);
    sub_1BA2C2774();
    v31(v7, v13, v3);
    sub_1BA254134(&qword_1ED5B1280, MEMORY[0x1E0D81F40]);
    sub_1BA2C2474();
    v32 = *(void (**)(char *, uint64_t))(v30 + 8);
    v32(v16, v3);
    v33 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    v33(v16, v10, v3);
    v32(v13, v3);
    v28 += v42;
    --v27;
  }
  while (v27);
  swift_bridgeObjectRelease();
  v34 = v39;
  v33(v39, v16, v3);
  swift_bridgeObjectRelease();
  v35 = v40[3];
  v36 = v40[4];
  __swift_project_boxed_opaque_existential_1(v40, v35);
  (*(void (**)(uint64_t, uint64_t))(v36 + 16))(v35, v36);
  sub_1BA2C1B38();
  if (swift_dynamicCastClass())
    sub_1BA2C1B2C();
  swift_unknownObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v32)(v34, v3);
}

void sub_1BA25CD94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B1290)
  {
    sub_1BA2C1B20();
    v0 = sub_1BA2C245C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B1290);
  }
}

unint64_t sub_1BA25CDE8()
{
  unint64_t result;

  result = qword_1ED5B12F0;
  if (!qword_1ED5B12F0)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for AdPolicyFailureType, &type metadata for AdPolicyFailureType);
    atomic_store(result, (unint64_t *)&qword_1ED5B12F0);
  }
  return result;
}

unint64_t AdManagerError.description.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000019;
  if (*v0 != 1)
    v1 = 0x6173696420736441;
  if (*v0)
    return v1;
  else
    return 0xD00000000000001FLL;
}

BOOL static AdManagerError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AdManagerError.hash(into:)()
{
  return sub_1BA2C272C();
}

uint64_t AdManagerError.hashValue.getter()
{
  sub_1BA2C2720();
  sub_1BA2C272C();
  return sub_1BA2C2738();
}

unint64_t sub_1BA25CF18()
{
  unint64_t result;

  result = qword_1EF27EE78;
  if (!qword_1EF27EE78)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for AdManagerError, &type metadata for AdManagerError);
    atomic_store(result, (unint64_t *)&qword_1EF27EE78);
  }
  return result;
}

unint64_t sub_1BA25CF5C()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000019;
  if (*v0 != 1)
    v1 = 0x6173696420736441;
  if (*v0)
    return v1;
  else
    return 0xD00000000000001FLL;
}

uint64_t storeEnumTagSinglePayload for AdManagerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BA25D010 + 4 * byte_1BA2C5CB5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BA25D044 + 4 * byte_1BA2C5CB0[v4]))();
}

uint64_t sub_1BA25D044(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA25D04C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA25D054);
  return result;
}

uint64_t sub_1BA25D060(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA25D068);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BA25D06C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA25D074(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA25D080()
{
  uint64_t v0;

  v0 = sub_1BA2C1EC8();
  __swift_allocate_value_buffer(v0, qword_1EF27EE80);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF27EE80);
  return sub_1BA2C1EBC();
}

uint64_t static RadarComponent.newsAds.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EF27E388 != -1)
    swift_once();
  v2 = sub_1BA2C1EC8();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EF27EE80);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t type metadata accessor for InterstitialAdViewStyler()
{
  return objc_opt_self();
}

uint64_t dispatch thunk of BannerAdProviderType.adView(for:placementIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t PromotableContentDepictionProviding.previousPromotableContentDepiction.getter()
{
  return 0;
}

uint64_t PromotableContentDepictionProviding.nextPromotableContentDepiction.getter()
{
  return 0;
}

uint64_t sub_1BA25D1FC()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t PromotableContentDepictionProviding.additionalPromotableContentDepictions.getter()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t PromotableContentDepictionProviding.currentPromotableContentDepiction.getter()
{
  return 0;
}

uint64_t dispatch thunk of PromotableContentDepictionProviding.previousPromotableContentDepiction.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PromotableContentDepictionProviding.currentPromotableContentDepiction.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PromotableContentDepictionProviding.nextPromotableContentDepiction.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PromotableContentDepictionProviding.additionalPromotableContentDepictions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

NewsAds::AdSegmentScope_optional __swiftcall AdSegmentScope.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsAds::AdSegmentScope_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BA2C25DC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

void *static AdSegmentScope.allCases.getter()
{
  return &unk_1E71F4AA8;
}

uint64_t AdSegmentScope.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x63696C627570;
  else
    return 0x65746176697270;
}

uint64_t sub_1BA25D2E0(char *a1, char *a2)
{
  return sub_1BA26E238(*a1, *a2);
}

uint64_t sub_1BA25D2EC()
{
  sub_1BA2C2720();
  sub_1BA2C21A4();
  swift_bridgeObjectRelease();
  return sub_1BA2C2738();
}

uint64_t sub_1BA25D368()
{
  sub_1BA2C21A4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA25D3C0()
{
  sub_1BA2C2720();
  sub_1BA2C21A4();
  swift_bridgeObjectRelease();
  return sub_1BA2C2738();
}

NewsAds::AdSegmentScope_optional sub_1BA25D438(Swift::String *a1)
{
  return AdSegmentScope.init(rawValue:)(*a1);
}

void sub_1BA25D444(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x65746176697270;
  if (*v1)
    v2 = 0x63696C627570;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_1BA25D484()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF27EF30;
  if (!qword_1EF27EF30)
  {
    sub_1BA25D4CC();
    result = MEMORY[0x1BCCD93D0](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF27EF30);
  }
  return result;
}

void sub_1BA25D4CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B0EE0)
  {
    v0 = sub_1BA2C22F4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B0EE0);
  }
}

void sub_1BA25D520(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E71F4AD0;
}

uint64_t storeEnumTagSinglePayload for AdSegmentScope(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA25D57C + 4 * byte_1BA2C5E99[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA25D5B0 + 4 * byte_1BA2C5E94[v4]))();
}

uint64_t sub_1BA25D5B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA25D5B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA25D5C0);
  return result;
}

uint64_t sub_1BA25D5CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA25D5D4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA25D5D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA25D5E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdSegmentScope()
{
  return &type metadata for AdSegmentScope;
}

uint64_t SectionAdData.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

NewsAds::SectionAdData __swiftcall SectionAdData.init(identifier:)(NewsAds::SectionAdData identifier)
{
  NewsAds::SectionAdData *v1;

  *v1 = identifier;
  return identifier;
}

uint64_t sub_1BA25D630()
{
  return 0x696669746E656469;
}

uint64_t sub_1BA25D64C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BA2C26A8();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BA25D6EC()
{
  sub_1BA25D830();
  return sub_1BA2C275C();
}

uint64_t sub_1BA25D714()
{
  sub_1BA25D830();
  return sub_1BA2C2768();
}

uint64_t SectionAdData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BA25D998(0, &qword_1EF27EF38, MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA25D830();
  sub_1BA2C2750();
  sub_1BA2C2654();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1BA25D830()
{
  unint64_t result;

  result = qword_1EF27EF40;
  if (!qword_1EF27EF40)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C60E4, &type metadata for SectionAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27EF40);
  }
  return result;
}

uint64_t SectionAdData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1BA25D998(0, &qword_1EF27EF48, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA25D830();
  sub_1BA2C2744();
  if (!v2)
  {
    v10 = sub_1BA2C2600();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA25D998(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA25D830();
    v7 = a3(a1, &type metadata for SectionAdData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BA25D9F4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SectionAdData.init(from:)(a1, a2);
}

uint64_t sub_1BA25DA08(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BA25D998(0, &qword_1EF27EF38, MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA25D830();
  sub_1BA2C2750();
  sub_1BA2C2654();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t SectionAdData.init(tag:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = objc_msgSend(a1, sel_identifier);
  v4 = sub_1BA2C2150();
  v6 = v5;

  result = swift_unknownObjectRelease();
  *a2 = v4;
  a2[1] = v6;
  return result;
}

unint64_t sub_1BA25DB60(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BA247424();
  result = sub_1BA246280();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

ValueMetadata *type metadata accessor for SectionAdData()
{
  return &type metadata for SectionAdData;
}

uint64_t storeEnumTagSinglePayload for SectionAdData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BA25DBDC + 4 * byte_1BA2C5F94[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BA25DBFC + 4 * byte_1BA2C5F99[v4]))();
}

_BYTE *sub_1BA25DBDC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BA25DBFC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA25DC04(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA25DC0C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA25DC14(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA25DC1C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SectionAdData.CodingKeys()
{
  return &type metadata for SectionAdData.CodingKeys;
}

unint64_t sub_1BA25DC3C()
{
  unint64_t result;

  result = qword_1EF27EF50;
  if (!qword_1EF27EF50)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C60BC, &type metadata for SectionAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27EF50);
  }
  return result;
}

unint64_t sub_1BA25DC84()
{
  unint64_t result;

  result = qword_1EF27EF58;
  if (!qword_1EF27EF58)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C602C, &type metadata for SectionAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27EF58);
  }
  return result;
}

unint64_t sub_1BA25DCCC()
{
  unint64_t result;

  result = qword_1EF27EF60;
  if (!qword_1EF27EF60)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C6054, &type metadata for SectionAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27EF60);
  }
  return result;
}

uint64_t SponsorshipAdProviderFactory.createAdProvider<A, B>(for:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BA25DDA8(a2);
}

uint64_t SponsorshipAdProviderFactory.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t SponsorshipAdProviderFactory.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1BA25DD6C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1BA25DDA8(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1BA25DDA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  __int128 v6[2];

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  type metadata accessor for SponsorshipAdProvider();
  sub_1BA22068C(a1, (uint64_t)v6);
  v3 = swift_allocObject();
  sub_1BA21D3D4(v6, v3 + 16);
  v4 = sub_1BA2C1754();
  result = swift_release();
  if (v4)
    return v4;
  __break(1u);
  return result;
}

_UNKNOWN **sub_1BA25DE64()
{
  return &protocol witness table for SponsorshipAdProvider;
}

uint64_t method lookup function for SponsorshipAdProviderFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BA25DE7C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t NativeAdContentInfo.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NativeAdContentInfo.metricsHelper.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t NativeAdContentInfo.isInteractive.getter()
{
  return sub_1BA2C1A18() & 1;
}

uint64_t NativeAdContentInfo.isDownloadable.getter()
{
  return sub_1BA2C1A30() & 1;
}

uint64_t NativeAdContentInfo.isVideo.getter()
{
  return sub_1BA2C1A48() & 1;
}

id NativeAdContentInfo.unfilledReason.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 24), sel_unfilledReason);
}

uint64_t NativeAdContentInfo.desiredPosition.getter()
{
  return sub_1BA2C1A3C();
}

id NativeAdContentInfo.metricsView(for:contentView:)(void *a1, uint64_t a2)
{
  uint64_t v2;

  return objc_msgSend(a1, sel_nativePromotedContentViewWithInfo_contentView_, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1BA25DFA4()
{
  return sub_1BA2C1A3C();
}

id sub_1BA25DFC4(void *a1, uint64_t a2)
{
  uint64_t v2;

  return objc_msgSend(a1, sel_nativePromotedContentViewWithInfo_contentView_, *(_QWORD *)(v2 + 24), a2);
}

uint64_t dispatch thunk of NativeAdContentInfoType.desiredPosition.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of NativeAdContentInfoType.metricsView(for:contentView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

ValueMetadata *type metadata accessor for NativeAdContentInfo()
{
  return &type metadata for NativeAdContentInfo;
}

uint64_t PPTTodayConfigOverrides.configData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_1BA25E04C(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t sub_1BA25E04C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1BA25E060(a1, a2);
  return a1;
}

uint64_t sub_1BA25E060(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t PPTTodayConfigOverrides.configID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

double static PPTTodayConfigOverrides.none.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = xmmword_1BA2C6200;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  return result;
}

uint64_t NoopPPTType.disablePersonalization.getter()
{
  return 0;
}

uint64_t NoopPPTType.mockImages.getter()
{
  return 0;
}

uint64_t NoopPPTType.mockTagFeed.getter()
{
  return 0;
}

uint64_t NoopPPTType.enableCarouselAds.getter()
{
  return 0;
}

uint64_t NoopPPTType.disableCarouselAdOptimizations.getter()
{
  return 0;
}

double NoopPPTType.todayConfigOverrides.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = xmmword_1BA2C6200;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  return result;
}

uint64_t NoopPPTType.adServer.getter()
{
  return 0;
}

double sub_1BA25E128@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = xmmword_1BA2C6200;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  return result;
}

uint64_t destroy for PPTTodayConfigOverrides(uint64_t *a1)
{
  unint64_t v1;

  v1 = a1[1];
  if (v1 >> 60 != 15)
    sub_1BA24E030(*a1, v1);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PPTTodayConfigOverrides(uint64_t a1, uint64_t *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v5 = *a2;
    sub_1BA25E060(*a2, a2[1]);
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v4;
  }
  v6 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for PPTTodayConfigOverrides(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v4 = a2[1];
  if ((unint64_t)a1[1] >> 60 != 15)
  {
    if (v4 >> 60 != 15)
    {
      v6 = *a2;
      sub_1BA25E060(*a2, a2[1]);
      v7 = *a1;
      v8 = a1[1];
      *a1 = v6;
      a1[1] = v4;
      sub_1BA24E030(v7, v8);
      goto LABEL_8;
    }
    sub_1BA25E29C((uint64_t)a1);
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  v5 = *a2;
  sub_1BA25E060(*a2, a2[1]);
  *a1 = v5;
  a1[1] = v4;
LABEL_8:
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BA25E29C(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0CB0338] - 8) + 8))();
  return a1;
}

uint64_t *assignWithTake for PPTTodayConfigOverrides(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1[1];
  if (v4 >> 60 != 15)
  {
    v5 = a2[1];
    if (v5 >> 60 != 15)
    {
      v6 = *a1;
      *a1 = *a2;
      a1[1] = v5;
      sub_1BA24E030(v6, v4);
      goto LABEL_6;
    }
    sub_1BA25E29C((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_6:
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PPTTodayConfigOverrides(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PPTTodayConfigOverrides(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

uint64_t dispatch thunk of PPTType.enableCarouselAds.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PPTType.disableCarouselAdOptimizations.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of PPTType.adServer.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

ValueMetadata *type metadata accessor for NoopPPTType()
{
  return &type metadata for NoopPPTType;
}

uint64_t InterstitialViewInsertion.placementIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void *InterstitialViewInsertion.interstitialView.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

double InterstitialViewInsertion.size.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void sub_1BA25E47C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  *(double *)(a5 + 32) = a6;
  *(double *)(a5 + 40) = a7;
  type metadata accessor for InterstitialViewInsertion();
}

void sub_1BA25E4D4()
{
  type metadata accessor for AdRequest();
}

uint64_t sub_1BA25E4F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v5, v2, a1);
  *(_QWORD *)(v3 + *(int *)(v4 + 64)) = v1;
  return result;
}

Swift::Void __swiftcall InterstitialViewInsertion.markPresented()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(ObjectType, v1);
  Journal.addPresentedEntry(request:placementIdentifier:contentIdentifier:layout:)();
}

uint64_t sub_1BA25E5B4()
{
  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall InterstitialViewInsertion.missedOpportunity()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v1 + 32))(ObjectType, v1);
}

uint64_t *sub_1BA25E620(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  uint64_t v24;
  __int128 v25;
  _OWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  void (*v34)(unint64_t, unint64_t, uint64_t);
  _QWORD *v35;
  _QWORD *v36;
  unint64_t v37;
  uint64_t *v38;
  void (*v40)(unint64_t, unint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t *v44;

  v5 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = v7 & 0xF8 | 7;
  v9 = *(_QWORD *)(v4 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = ~(v10 | v8);
  v12 = (v7 & 0xF8) + 23;
  v13 = *(_QWORD *)(v6 + 64) + 7;
  v14 = (v13 & 0xFFFFFFFFFFFFFFF8) + v10 + 8;
  v15 = *(_QWORD *)(v9 + 64) + 7;
  v16 = ((v15 + ((v14 + (v12 & ~v8)) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 16;
  v17 = (*(_DWORD *)(v9 + 80) | v7) & 0x100000;
  if ((v10 | v8) != 7 || v17 != 0 || v16 + (((v10 | v8) + 48) & ~(v10 | v8)) + 8 > 0x18)
  {
    v20 = *a2;
    *a1 = *a2;
    v38 = (uint64_t *)(v20 + (((v10 | v8) + 16) & v11));
  }
  else
  {
    v21 = ~v8;
    v22 = a2[1];
    *a1 = *a2;
    a1[1] = v22;
    v23 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFF8);
    v24 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFF8;
    v25 = *(_OWORD *)v24;
    v24 += 23;
    *v23 = v25;
    v41 = v4;
    v42 = ~v10;
    v26 = (_OWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v26 = *(_OWORD *)(v24 & 0xFFFFFFFFFFFFFFF8);
    v27 = (_QWORD *)(((unint64_t)v26 + 23) & v11);
    v43 = v16;
    v44 = a1;
    v28 = (_QWORD *)(((v24 & 0xFFFFFFFFFFFFFFF8) + 23) & v11);
    *v27 = *v28;
    v27[1] = v28[1];
    v29 = ((unint64_t)v27 + v12) & v21;
    v30 = ((unint64_t)v28 + v12) & v21;
    v40 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
    swift_bridgeObjectRetain();
    v31 = (id)v25;
    swift_bridgeObjectRetain();
    v40(v29, v30, v5);
    *(_QWORD *)((v13 + v29) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v13 + v30) & 0xFFFFFFFFFFFFF8);
    v32 = (v14 + v29) & v42;
    v33 = (v14 + v30) & v42;
    v34 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
    swift_bridgeObjectRetain();
    v34(v32, v33, v41);
    v35 = (_QWORD *)((v15 + v32) & 0xFFFFFFFFFFFFFFF8);
    v36 = (_QWORD *)((v15 + v33) & 0xFFFFFFFFFFFFFFF8);
    *v35 = *v36;
    v35[1] = v36[1];
    v37 = (unint64_t)v28 + v43;
    v38 = v44;
    *(_QWORD *)(((unint64_t)v27 + v43) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(v37 & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v38;
}

uint64_t sub_1BA25E83C(uint64_t a1, uint64_t a2)
{
  id *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_bridgeObjectRelease();
  v4 = (id *)((a1 + 23) & 0xFFFFFFFFFFFFF8);

  v5 = ((unint64_t)v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80) & 0xF8;
  v10 = *(_QWORD *)(v6 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v5 + (v11 | v9 | 7) + 16) & ~(v11 | v9 | 7);
  swift_bridgeObjectRelease();
  v13 = (v9 + 23 + v12) & ~(v9 | 7);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v13, v7);
  v14 = *(_QWORD *)(v8 + 64) + 7;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v10 + 8))(((v14 & 0xFFFFFFFFFFFFFFF8) + v11 + 8 + v13) & ~v11, v6);
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *sub_1BA25E958(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _OWORD *v5;
  __int128 *v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  void (*v25)(unint64_t, unint64_t, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  unint64_t v29;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFF8);
  v6 = (__int128 *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFF8);
  v32 = *v6;
  *v5 = *v6;
  v7 = (_OWORD *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v31 = *(_QWORD *)(a3 + 16);
  v34 = *(_QWORD *)(a3 + 24);
  v9 = *(_QWORD *)(v31 - 8);
  v10 = *(_DWORD *)(v9 + 80) & 0xF8;
  v11 = v10 | 7;
  v33 = *(_QWORD *)(v34 - 8);
  v12 = *(unsigned __int8 *)(v33 + 80);
  v13 = v12 | v10 | 7;
  v14 = (_QWORD *)(((unint64_t)v7 + v13 + 16) & ~v13);
  v15 = (_QWORD *)(((unint64_t)v8 + v13 + 16) & ~v13);
  *v14 = *v15;
  v14[1] = v15[1];
  v16 = v10 + 23;
  v17 = ((unint64_t)v14 + v10 + 23) & ~(v10 | 7);
  v18 = ((unint64_t)v15 + v10 + 23) & ~(v10 | 7);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  swift_bridgeObjectRetain();
  v20 = (id)v32;
  swift_bridgeObjectRetain();
  v19(v17, v18, v31);
  v21 = *(_QWORD *)(v9 + 64) + 7;
  *(_QWORD *)((v21 + v17) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v21 + v18) & 0xFFFFFFFFFFFFF8);
  v22 = (v21 & 0xFFFFFFFFFFFFFFF8) + v12 + 8;
  v23 = (v22 + v17) & ~v12;
  v24 = (v22 + v18) & ~v12;
  v25 = *(void (**)(unint64_t, unint64_t, uint64_t))(v33 + 16);
  swift_bridgeObjectRetain();
  v25(v23, v24, v34);
  v26 = *(_QWORD *)(v33 + 64) + 7;
  v27 = (_QWORD *)((v26 + v23) & 0xFFFFFFFFFFFFFFF8);
  v28 = (_QWORD *)((v26 + v24) & 0xFFFFFFFFFFFFFFF8);
  *v27 = *v28;
  v27[1] = v28[1];
  v29 = ((v26 + ((v22 + (v16 & ~v11)) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 16;
  *(_QWORD *)((char *)v14 + v29) = *(_QWORD *)((char *)v15 + v29);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *sub_1BA25EB14(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t v35;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  v7 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(void **)v7;
  v9 = *(_QWORD *)(v7 + 8);
  v10 = *(void **)v6;
  *(_QWORD *)v6 = *(_QWORD *)v7;
  v11 = v8;

  *(_QWORD *)(v6 + 8) = v9;
  v12 = (_QWORD *)((v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)((v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  v12[1] = v13[1];
  v15 = *(_QWORD *)(a3 + 16);
  v14 = *(_QWORD *)(a3 + 24);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_DWORD *)(v16 + 80) & 0xF8;
  v18 = v17 | 7;
  v34 = *(_QWORD *)(v14 - 8);
  v35 = v14;
  v19 = *(unsigned __int8 *)(v34 + 80);
  v20 = v19 | v17 | 7;
  v21 = (_QWORD *)(((unint64_t)v12 + v20 + 16) & ~v20);
  v22 = (_QWORD *)(((unint64_t)v13 + v20 + 16) & ~v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 += 23;
  v23 = ((unint64_t)v21 + v17) & ~v18;
  v24 = ((unint64_t)v22 + v17) & ~v18;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v16 + 24))(v23, v24, v15);
  v25 = *(_QWORD *)(v16 + 64) + 7;
  *(_QWORD *)((v25 + v23) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((v25 + v24) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = (v25 & 0xFFFFFFFFFFFFFFF8) + v19 + 8;
  v27 = (v26 + v23) & ~v19;
  v28 = (v26 + v24) & ~v19;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v34 + 24))(v27, v28, v35);
  v29 = *(_QWORD *)(v34 + 64) + 7;
  v30 = (_QWORD *)((v29 + v27) & 0xFFFFFFFFFFFFFFF8);
  v31 = (_QWORD *)((v29 + v28) & 0xFFFFFFFFFFFFFFF8);
  *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = ((v29 + ((v26 + (v17 & ~v18)) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 16;
  *(_QWORD *)((char *)v21 + v32) = *(_QWORD *)((char *)v22 + v32);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1BA25ED1C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _OWORD *v3;
  _OWORD *v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;

  *a1 = *a2;
  v3 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFF8);
  v4 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFF8);
  *v3 = *v4;
  v5 = (_OWORD *)(((unint64_t)v3 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_OWORD *)(((unint64_t)v4 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(a3 + 24);
  v9 = *(_QWORD *)(v7 - 8);
  v10 = *(_DWORD *)(v9 + 80) & 0xF8;
  v11 = v10 | 7;
  v12 = *(_QWORD *)(v8 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v13 | v10 | 7;
  v15 = (_OWORD *)(((unint64_t)v5 + v14 + 16) & ~v14);
  v16 = (_OWORD *)(((unint64_t)v6 + v14 + 16) & ~v14);
  *v15 = *v16;
  v17 = v10 + 23;
  v18 = ((unint64_t)v15 + v10 + 23) & ~(v10 | 7);
  v19 = ((unint64_t)v16 + v10 + 23) & ~(v10 | 7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v18, v19, v7);
  v20 = *(_QWORD *)(v9 + 64) + 7;
  *(_QWORD *)((v20 + v18) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v20 + v19) & 0xFFFFFFFFFFFFF8);
  v21 = (v20 & 0xFFFFFFFFFFFFFFF8) + v13 + 8;
  v22 = (v21 + v18) & ~v13;
  v23 = (v21 + v19) & ~v13;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 32))(v22, v23, v8);
  v24 = *(_QWORD *)(v12 + 64) + 7;
  *(_OWORD *)((v24 + v22) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v24 + v23) & 0xFFFFFFFFFFFFF8);
  v25 = ((v24 + ((v21 + (v17 & ~v11)) & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 16;
  *(_QWORD *)((char *)v15 + v25) = *(_QWORD *)((char *)v16 + v25);
  return a1;
}

_QWORD *sub_1BA25EE88(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v32;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  v10 = *(void **)v7;
  *(_QWORD *)v7 = *v8;

  *(_QWORD *)(v7 + 8) = v9;
  v11 = (_QWORD *)((v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v11[1] = v12[1];
  v13 = *(_QWORD *)(a3 + 16);
  v32 = *(_QWORD *)(a3 + 24);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_DWORD *)(v14 + 80) & 0xF8;
  v16 = v15 | 7;
  v17 = *(_QWORD *)(v32 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = v18 | v15 | 7;
  v20 = (_QWORD *)(((unint64_t)v11 + v19 + 16) & ~v19);
  v21 = (_QWORD *)(((unint64_t)v12 + v19 + 16) & ~v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRelease();
  v22 = v15 + 23;
  v23 = ((unint64_t)v20 + v15 + 23) & ~(v15 | 7);
  v24 = ((unint64_t)v21 + v22) & ~v16;
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 40))(v23, v24, v13);
  v25 = *(_QWORD *)(v14 + 64) + 7;
  *(_QWORD *)((v25 + v23) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((v25 + v24) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  v26 = (v25 & 0xFFFFFFFFFFFFFFF8) + v18 + 8;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v17 + 40))((v26 + v23) & ~v18, (v26 + v24) & ~v18, v32);
  v27 = *(_QWORD *)(v17 + 64) + 7;
  v28 = (_QWORD *)((v27 + ((v26 + v23) & ~v18)) & 0xFFFFFFFFFFFFFFF8);
  v29 = (_QWORD *)((v27 + ((v26 + v24) & ~v18)) & 0xFFFFFFFFFFFFFFF8);
  *v28 = *v29;
  v28[1] = v29[1];
  swift_bridgeObjectRelease();
  v30 = ((v27 + ((v26 + (v22 & ~v16)) & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 16;
  *(_QWORD *)((char *)v20 + v30) = *(_QWORD *)((char *)v21 + v30);
  swift_release();
  return a1;
}

uint64_t sub_1BA25F058(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v14;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_DWORD *)(v3 + 84) <= 0x7FFFFFFFu)
    v4 = 0x7FFFFFFF;
  else
    v4 = *(_DWORD *)(v3 + 84);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= v4)
    v7 = v4;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  if (v7 < a2)
  {
    v9 = *(unsigned __int8 *)(v5 + 80);
    v8 = *(_DWORD *)(v3 + 80) & 0xF8;
    if ((((((v9 | v8 | 7) + 48) & ~(v9 | v8 | 7))
         + ((*(_QWORD *)(v5 + 64)
           + ((((*(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + v9 + 8 + ((v8 + 23) & ~(v8 | 7))) & ~v9)
           + 7) & 0xFFFFFFFFFFFFFFF8)
         + 24) & 0xFFFFFFF8) != 0)
      v10 = 2;
    else
      v10 = a2 - v7 + 1;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    __asm { BR              X19 }
  }
  if ((v7 & 0x80000000) != 0)
  {
    if (v4 < v6)
      __asm { BR              X3 }
    __asm { BR              X3 }
  }
  v14 = *(_QWORD *)(a1 + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

void sub_1BA25F214(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  _DWORD *v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  int v12;
  int v13;
  unsigned int v14;

  v5 = *(_DWORD **)(*(_QWORD *)(a4 + 16) - 8);
  if (v5[21] <= 0x7FFFFFFFu)
    v7 = 0x7FFFFFFF;
  else
    v7 = v5[21];
  v8 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v8 + 84) <= v7)
    v9 = v7;
  else
    v9 = *(_DWORD *)(v8 + 84);
  v10 = *(unsigned __int8 *)(v8 + 80);
  v6 = v5[20];
  if (v9 >= a3)
  {
    v13 = 0u;
    if (a2 <= v9)
      goto LABEL_20;
  }
  else
  {
    if ((((v10 | v6 & 0xF8 | 7) + 48) & ~(v10 | v6 & 0xF8 | 7))
       + ((*(_DWORD *)(v8 + 64)
         + ((((v5[16] + 7) & 0xFFFFFFF8) + 8 + (_DWORD)v10 + (((v6 & 0xF8) + 23) & ~(v6 & 0xF8 | 7))) & ~(_DWORD)v10)
         + 7) & 0xFFFFFFF8) == -24)
      v11 = a3 - v9 + 1;
    else
      v11 = 2;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    if (a2 <= v9)
LABEL_20:
      __asm { BR              X21 }
  }
  if ((((v10 | v6 & 0xF8 | 7) + 48) & ~(v10 | v6 & 0xF8 | 7))
     + ((*(_DWORD *)(v8 + 64)
       + ((((v5[16] + 7) & 0xFFFFFFF8) + 8 + (_DWORD)v10 + (((v6 & 0xF8) + 23) & ~(v6 & 0xF8 | 7))) & ~(_DWORD)v10)
       + 7) & 0xFFFFFFF8) != -24)
  {
    v14 = ~v9 + a2;
    bzero(a1, (((v10 | v6 & 0xF8 | 7) + 48) & ~(v10 | v6 & 0xF8 | 7))+ ((*(_QWORD *)(v8 + 64)+ ((((*((_QWORD *)v5 + 8) + 7) & 0xFFFFFFFFFFFFFFF8)+ 8+ v10+ (((v6 & 0xF8) + 23) & ~(v6 & 0xF8 | 7))) & ~v10)+ 7) & 0xFFFFFFFFFFFFFFF8)+ 24);
    *a1 = v14;
  }
  __asm { BR              X10 }
}

void sub_1BA25F370()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1BA25F3FCLL);
}

void sub_1BA25F378(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1BA25F380);
  JUMPOUT(0x1BA25F3FCLL);
}

void sub_1BA25F394()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BA25F3FCLL);
}

void sub_1BA25F39C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BA25F3FCLL);
}

void sub_1BA25F3A4(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_WORD *)(v3 + v4) = 0;
  if (a2)
  {
    if (v2 < 0)
      JUMPOUT(0x1BA25F3B0);
    if (a2 < 0)
      JUMPOUT(0x1BA25F3F4);
    *(_QWORD *)(v3 + 8) = (a2 - 1);
  }
  JUMPOUT(0x1BA25F3FCLL);
}

uint64_t BannerAdViewLayoutAttributesFactory.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  return v0;
}

uint64_t BannerAdViewLayoutAttributesFactory.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  return swift_deallocClassInstance();
}

uint64_t sub_1BA25F4B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA227C40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t method lookup function for BannerAdViewLayoutAttributesFactory()
{
  return swift_lookUpClassMethod();
}

double sub_1BA25F508(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 416) = -1;
  return result;
}

ValueMetadata *type metadata accessor for AdContextBuilderSnapshot()
{
  return &type metadata for AdContextBuilderSnapshot;
}

ValueMetadata *type metadata accessor for AdContextBuilderSnapshot.Entry()
{
  return &type metadata for AdContextBuilderSnapshot.Entry;
}

uint64_t destroy for AdContextBuilderSnapshot.SerializedSnapshotEntry()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s7NewsAds24AdContextBuilderSnapshotV5EntryVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s7NewsAds24AdContextBuilderSnapshotV5EntryVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *_s7NewsAds24AdContextBuilderSnapshotV5EntryVwta_0(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s7NewsAds24AdContextBuilderSnapshotV5EntryVwet_0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1BA25F6BC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AdContextBuilderSnapshot.SerializedSnapshotEntry()
{
  return &type metadata for AdContextBuilderSnapshot.SerializedSnapshotEntry;
}

uint64_t sub_1BA25F708(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  char v14;
  uint64_t v15;

  sub_1BA260220(0, &qword_1EF27EF88, MEMORY[0x1E0DED170]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v13 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA26017C();
  sub_1BA2C2750();
  v15 = a2;
  v14 = 0;
  sub_1BA234914();
  sub_1BA2407DC(&qword_1EF27E9C0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1BA2C2684();
  if (!v3)
  {
    v15 = a3;
    v14 = 1;
    sub_1BA2601C0();
    sub_1BA26027C(&qword_1EF27EF90, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
    sub_1BA2C2684();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1BA25F898()
{
  _BYTE *v0;

  if (*v0)
    return 0x6361745361746164;
  else
    return 1752457584;
}

uint64_t sub_1BA25F8D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA25FE7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BA25F8F4()
{
  sub_1BA26017C();
  return sub_1BA2C275C();
}

uint64_t sub_1BA25F91C()
{
  sub_1BA26017C();
  return sub_1BA2C2768();
}

uint64_t sub_1BA25F944@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_1BA25FF68(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1BA25F96C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1BA25F708(a1, *v1, v1[1]);
}

uint64_t sub_1BA25F984()
{
  uint64_t *v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  uint64_t *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t result;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;
  uint64_t v55;
  _QWORD *v56;
  __int128 v57[2];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  _OWORD v62[2];
  uint64_t v63;
  __int128 v64;
  _OWORD v65[2];
  uint64_t v66;
  uint64_t v67;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v67 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v46 = v2;
  sub_1BA24B680(0, v2, 0);
  v4 = 0;
  v47 = v1 + 32;
  v5 = &v60;
LABEL_3:
  v6 = v4;
  v7 = (uint64_t *)(v47 + 16 * v4);
  v48 = v6 + 1;
  v9 = *v7;
  v8 = v7[1];
  v50 = v8 + 64;
  v10 = 1 << *(_BYTE *)(v8 + 32);
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(v8 + 64);
  v51 = (unint64_t)(v10 + 63) >> 6;
  v52 = v8;
  swift_bridgeObjectRetain_n();
  v49 = v9;
  swift_bridgeObjectRetain_n();
  v13 = 0;
  v14 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    if (v12)
    {
      v53 = (v12 - 1) & v12;
      v54 = v13;
      v16 = __clz(__rbit64(v12)) | (v13 << 6);
      goto LABEL_29;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
      goto LABEL_49;
    if (v17 >= v51)
    {
LABEL_40:
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v3 = v67;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA24B680(0, *(_QWORD *)(v3 + 16) + 1, 1);
        v3 = v67;
      }
      v4 = v48;
      v43 = *(_QWORD *)(v3 + 16);
      v42 = *(_QWORD *)(v3 + 24);
      if (v43 >= v42 >> 1)
      {
        sub_1BA24B680((char *)(v42 > 1), v43 + 1, 1);
        v4 = v48;
        v3 = v67;
      }
      *(_QWORD *)(v3 + 16) = v43 + 1;
      v44 = v3 + 16 * v43;
      *(_QWORD *)(v44 + 32) = v49;
      *(_QWORD *)(v44 + 40) = v14;
      if (v4 == v46)
      {
        swift_bridgeObjectRelease();
        return v3;
      }
      goto LABEL_3;
    }
    v18 = *(_QWORD *)(v50 + 8 * v17);
    v19 = v13 + 1;
    if (!v18)
    {
      v19 = v13 + 2;
      if (v13 + 2 >= v51)
        goto LABEL_40;
      v18 = *(_QWORD *)(v50 + 8 * v19);
      if (!v18)
      {
        v19 = v13 + 3;
        if (v13 + 3 >= v51)
          goto LABEL_40;
        v18 = *(_QWORD *)(v50 + 8 * v19);
        if (!v18)
        {
          v19 = v13 + 4;
          if (v13 + 4 >= v51)
            goto LABEL_40;
          v18 = *(_QWORD *)(v50 + 8 * v19);
          if (!v18)
          {
            v19 = v13 + 5;
            if (v13 + 5 >= v51)
              goto LABEL_40;
            v18 = *(_QWORD *)(v50 + 8 * v19);
            if (!v18)
              break;
          }
        }
      }
    }
LABEL_28:
    v53 = (v18 - 1) & v18;
    v54 = v19;
    v16 = __clz(__rbit64(v18)) + (v19 << 6);
LABEL_29:
    v21 = (uint64_t *)(*(_QWORD *)(v52 + 48) + 16 * v16);
    v23 = *v21;
    v22 = v21[1];
    sub_1BA22068C(*(_QWORD *)(v52 + 56) + 40 * v16, (uint64_t)v65);
    *(_QWORD *)&v64 = v23;
    *((_QWORD *)&v64 + 1) = v22;
    v61 = v64;
    v62[0] = v65[0];
    v62[1] = v65[1];
    v63 = v66;
    v24 = v64;
    v58 = v23;
    v59 = v22;
    v25 = (uint64_t)v5;
    sub_1BA22068C((uint64_t)v62, (uint64_t)v5);
    sub_1BA22068C((uint64_t)v62, (uint64_t)v57);
    sub_1BA21D3D4(v57, (uint64_t)&v55);
    sub_1BA2602D8();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v26 = sub_1BA2C2198();
    v28 = v27;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v56 = v14;
    v31 = sub_1BA229E28(v24, *((uint64_t *)&v24 + 1));
    v32 = v14[2];
    v33 = (v30 & 1) == 0;
    v34 = v32 + v33;
    if (__OFADD__(v32, v33))
    {
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    v35 = v30;
    if (v14[3] >= v34)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v14 = v56;
        if ((v30 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_1BA2A2110();
        v14 = v56;
        if ((v35 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_1BA2A1294(v34, isUniquelyReferenced_nonNull_native);
      v36 = sub_1BA229E28(v24, *((uint64_t *)&v24 + 1));
      if ((v35 & 1) != (v37 & 1))
        goto LABEL_51;
      v31 = v36;
      v14 = v56;
      if ((v35 & 1) != 0)
      {
LABEL_7:
        v15 = (uint64_t *)(v14[7] + 16 * v31);
        swift_bridgeObjectRelease();
        *v15 = v26;
        v15[1] = v28;
        goto LABEL_8;
      }
    }
    v14[(v31 >> 6) + 8] |= 1 << v31;
    *(_OWORD *)(v14[6] + 16 * v31) = v24;
    v38 = (uint64_t *)(v14[7] + 16 * v31);
    *v38 = v26;
    v38[1] = v28;
    v39 = v14[2];
    v40 = __OFADD__(v39, 1);
    v41 = v39 + 1;
    if (v40)
      goto LABEL_48;
    v14[2] = v41;
    swift_bridgeObjectRetain();
LABEL_8:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = (uint64_t *)v25;
    __swift_destroy_boxed_opaque_existential_1(v25);
    sub_1BA260394((uint64_t)&v61);
    v12 = v53;
    v13 = v54;
  }
  v20 = v13 + 6;
  if (v13 + 6 >= v51)
    goto LABEL_40;
  v18 = *(_QWORD *)(v50 + 8 * v20);
  if (v18)
  {
    v19 = v13 + 6;
    goto LABEL_28;
  }
  while (1)
  {
    v19 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v19 >= v51)
      goto LABEL_40;
    v18 = *(_QWORD *)(v50 + 8 * v19);
    ++v20;
    if (v18)
      goto LABEL_28;
  }
LABEL_50:
  __break(1u);
LABEL_51:
  result = sub_1BA2C26D8();
  __break(1u);
  return result;
}

uint64_t sub_1BA25FE7C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1752457584 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6361745361746164 && a2 == 0xE90000000000006BLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BA2C26A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BA25FF68(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  sub_1BA260220(0, &qword_1EF27EF68, MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1BA26017C();
  sub_1BA2C2744();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    sub_1BA234914();
    HIBYTE(v10) = 0;
    sub_1BA2407DC(&qword_1EF27E9D0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1BA2C2630();
    v8 = v11;
    sub_1BA2601C0();
    HIBYTE(v10) = 1;
    sub_1BA26027C(&qword_1EF27EF80, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
    swift_bridgeObjectRetain();
    sub_1BA2C2630();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_1BA26017C()
{
  unint64_t result;

  result = qword_1EF27EF70;
  if (!qword_1EF27EF70)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C651C, &type metadata for AdContextBuilderSnapshot.SerializedSnapshotEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27EF70);
  }
  return result;
}

void sub_1BA2601C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF27EF78)
  {
    v0 = sub_1BA2C20E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF27EF78);
  }
}

void sub_1BA260220(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA26017C();
    v7 = a3(a1, &type metadata for AdContextBuilderSnapshot.SerializedSnapshotEntry.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BA26027C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    sub_1BA2601C0();
    v8[0] = a2;
    v8[1] = a2;
    result = MEMORY[0x1BCCD93D0](a3, v7, v8);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BA2602D8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF27EF98)
  {
    sub_1BA260340();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF27EF98);
  }
}

unint64_t sub_1BA260340()
{
  unint64_t result;

  result = qword_1ED5B1EB8;
  if (!qword_1ED5B1EB8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5B1EB8);
  }
  return result;
}

uint64_t sub_1BA260394(uint64_t a1)
{
  uint64_t v2;

  sub_1BA2602D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for AdContextBuilderSnapshot.SerializedSnapshotEntry.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA26041C + 4 * byte_1BA2C63C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA260450 + 4 * byte_1BA2C63C0[v4]))();
}

uint64_t sub_1BA260450(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA260458(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA260460);
  return result;
}

uint64_t sub_1BA26046C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA260474);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA260478(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA260480(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdContextBuilderSnapshot.SerializedSnapshotEntry.CodingKeys()
{
  return &type metadata for AdContextBuilderSnapshot.SerializedSnapshotEntry.CodingKeys;
}

unint64_t sub_1BA2604A0()
{
  unint64_t result;

  result = qword_1EF27EFA0;
  if (!qword_1EF27EFA0)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C64F4, &type metadata for AdContextBuilderSnapshot.SerializedSnapshotEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27EFA0);
  }
  return result;
}

unint64_t sub_1BA2604E8()
{
  unint64_t result;

  result = qword_1EF27EFA8;
  if (!qword_1EF27EFA8)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C6464, &type metadata for AdContextBuilderSnapshot.SerializedSnapshotEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27EFA8);
  }
  return result;
}

unint64_t sub_1BA260530()
{
  unint64_t result;

  result = qword_1EF27EFB0;
  if (!qword_1EF27EFB0)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C648C, &type metadata for AdContextBuilderSnapshot.SerializedSnapshotEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27EFB0);
  }
  return result;
}

ValueMetadata *type metadata accessor for InterstitialAd()
{
  return &type metadata for InterstitialAd;
}

uint64_t JournalEntryStatus.Info.key.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JournalEntryStatus.Info.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA2605C4(v1 + 16, a1);
}

uint64_t sub_1BA2605C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t JournalEntryStatus.Discard.shortDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JournalEntryStatus.Discard.additionalInfo.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t *assignWithCopy for JournalEntryStatus(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_1BA22C6F4(*a2);
  v7 = *a1;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  sub_1BA22C4F0(v7);
  return a1;
}

uint64_t assignWithTake for JournalEntryStatus(uint64_t a1, _OWORD *a2)
{
  unint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)a1;
  v4 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v4;
  sub_1BA22C4F0(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for JournalEntryStatus(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 126);
  v3 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for JournalEntryStatus(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7D)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 126;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)(result + 24) = 0;
    }
  }
  return result;
}

_QWORD *sub_1BA260784(_QWORD *result, uint64_t a2)
{
  if (a2 < 2)
  {
    *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  }
  else
  {
    result[1] = 0;
    result[2] = 0;
    result[3] = 0;
    *result = (8 * (a2 - 2)) | 0x8000000000000000;
  }
  return result;
}

uint64_t destroy for JournalEntryStatus.Info(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 16);
}

_QWORD *initializeWithCopy for JournalEntryStatus.Info(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void (*v6)(_QWORD *, _QWORD *, uint64_t);

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2 + 2;
  v5 = a2[5];
  a1[5] = v5;
  v6 = **(void (***)(_QWORD *, _QWORD *, uint64_t))(v5 - 8);
  swift_bridgeObjectRetain();
  v6(a1 + 2, v4, v5);
  return a1;
}

_QWORD *assignWithCopy for JournalEntryStatus.Info(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_0(a1 + 2, a2 + 2);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for JournalEntryStatus.Info(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for JournalEntryStatus.Info(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JournalEntryStatus.Info(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for JournalEntryStatus.Info()
{
  return &type metadata for JournalEntryStatus.Info;
}

_QWORD *_s7NewsAds18JournalEntryStatusO7FailureVwcp_0(_QWORD *a1, uint64_t a2)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(id *)a2;
  v5 = *(id *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  *a1 = v4;
  a1[1] = v7;
  v8 = *(_QWORD *)(a2 + 24);
  a1[2] = v6;
  a1[3] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s7NewsAds18JournalEntryStatusO7FailureVwca_0(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  void *v6;

  v4 = *(id *)a2;
  v5 = *(id *)a2;
  v6 = *(void **)a1;
  *(_QWORD *)a1 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s7NewsAds18JournalEntryStatusO7FailureVwta_0(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s7NewsAds18JournalEntryStatusO7FailureVwet_0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1BA260C78(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void sub_1BA260CB8(char *a1@<X0>, _QWORD *a2@<X8>)
{
  char *v2;
  char *v4;
  char *v5;
  unint64_t v6;
  unint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  int64_t *v18;
  uint64_t v19;
  int64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  __int128 v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  int64_t *v46;
  uint64_t v47;
  int64_t v48;
  id v50[2];
  _OWORD v51[2];
  uint64_t v52;
  int64_t *v53;
  uint64_t v54;
  char v55;
  id v56;

  v2 = a1;
  v4 = a1;
  v5 = v2;
  sub_1BA2251B8();
  if (swift_dynamicCast() && v53 == 2)
  {

    v6 = 0xEC00000064656C62;
    v7 = 0x6173696420736441;
LABEL_14:
    v17 = (char *)MEMORY[0x1E0DEE9D8];
    goto LABEL_15;
  }

  v56 = v2;
  v8 = v2;
  if (!swift_dynamicCast())
  {
LABEL_13:

    v53 = (int64_t *)v2;
    sub_1BA2C2570();
    v7 = 0;
    v6 = 0xE000000000000000;

    goto LABEL_14;
  }
  if (v55 != 1)
  {
    sub_1BA25A0A0(v53, v54, v55);
    goto LABEL_13;
  }
  v47 = v54;
  v44 = v2;
  v45 = a2;
  sub_1BA2C24C8();
  swift_bridgeObjectRelease();
  v9 = v53[2];
  v10 = MEMORY[0x1E0DEE9D8];
  v46 = v53;
  if (v9)
  {
    v52 = MEMORY[0x1E0DEE9D8];
    sub_1BA24B61C(0, v9, 0);
    v10 = v52;
    v11 = v53 + 10;
    do
    {
      v12 = *(v11 - 1);
      v13 = *v11;
      v52 = v10;
      v15 = *(_QWORD *)(v10 + 16);
      v14 = *(_QWORD *)(v10 + 24);
      swift_bridgeObjectRetain();
      if (v15 >= v14 >> 1)
      {
        sub_1BA24B61C((char *)(v14 > 1), v15 + 1, 1);
        v10 = v52;
      }
      *(_QWORD *)(v10 + 16) = v15 + 1;
      v16 = v10 + 16 * v15;
      *(_QWORD *)(v16 + 32) = v12;
      *(_QWORD *)(v16 + 40) = v13;
      v11 += 8;
      --v9;
    }
    while (v9);
  }
  v52 = v10;
  sub_1BA22920C(0, (unint64_t *)&qword_1ED5B2B70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA229294();
  sub_1BA2C2120();
  swift_bridgeObjectRelease();
  sub_1BA2C21C8();
  swift_bridgeObjectRelease();
  sub_1BA2C21C8();
  v7 = 0xD000000000000011;
  v6 = 0x80000001BA2CEDE0;
  v18 = v46;
  v48 = v46[2];
  if (v48)
  {
    sub_1BA25A0CC(v46, v47, 1);
    v19 = 0;
    v17 = (char *)MEMORY[0x1E0DEE9D8];
    do
    {
      v20 = &v46[8 * v19 + 4];
      v21 = v20[2];
      v22 = v20[3];
      v23 = v20[5];
      v24 = v20[6];
      v25 = v20[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v17 = sub_1BA23F3F0(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
      v27 = *((_QWORD *)v17 + 2);
      v26 = *((_QWORD *)v17 + 3);
      v28 = v27 + 1;
      if (v27 >= v26 >> 1)
        v17 = sub_1BA23F3F0((char *)(v26 > 1), v27 + 1, 1, v17);
      *((_QWORD *)v17 + 2) = v28;
      v29 = &v17[48 * v27];
      *((_QWORD *)v29 + 4) = 0x7963696C6F50;
      *((_QWORD *)v29 + 5) = 0xE600000000000000;
      *((_QWORD *)v29 + 6) = v23;
      *((_QWORD *)v29 + 7) = v24;
      *((_QWORD *)v29 + 9) = MEMORY[0x1E0DEA968];
      type metadata accessor for CGPoint(0);
      v31 = v30;
      v32 = *((_QWORD *)v17 + 3);
      v33 = v27 + 2;
      if (v28 >= v32 >> 1)
        v17 = sub_1BA23F3F0((char *)(v32 > 1), v33, 1, v17);
      *((_QWORD *)v17 + 2) = v33;
      v34 = &v17[48 * v28];
      *((_QWORD *)v34 + 4) = 0xD000000000000012;
      *((_QWORD *)v34 + 5) = 0x80000001BA2CEE00;
      *((_QWORD *)v34 + 6) = v21;
      *((_QWORD *)v34 + 7) = v22;
      *((_QWORD *)v34 + 9) = v31;
      v35 = *(_QWORD *)(v25 + 16);
      if (v35)
      {
        swift_bridgeObjectRetain();
        v36 = v25 + 48;
        do
        {
          v37 = *(void **)(v36 - 16);
          v38 = *(void **)(v36 - 8);
          sub_1BA2605C4(v36, (uint64_t)v51);
          v50[0] = v37;
          v50[1] = v38;
          v40 = *((_QWORD *)v17 + 2);
          v39 = *((_QWORD *)v17 + 3);
          swift_bridgeObjectRetain();
          if (v40 >= v39 >> 1)
            v17 = sub_1BA23F3F0((char *)(v39 > 1), v40 + 1, 1, v17);
          *((_QWORD *)v17 + 2) = v40 + 1;
          v41 = &v17[48 * v40];
          v42 = v51[1];
          *((_OWORD *)v41 + 3) = v51[0];
          *((_OWORD *)v41 + 4) = v42;
          *((_OWORD *)v41 + 2) = *(_OWORD *)v50;
          v36 += 48;
          --v35;
        }
        while (v35);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      ++v19;
    }
    while (v19 != v48);
    v18 = v46;
    v43 = v47;
    sub_1BA25A0A0(v46, v47, 1);
    v6 = 0x80000001BA2CEDE0;
    v7 = 0xD000000000000011;
  }
  else
  {
    v17 = (char *)MEMORY[0x1E0DEE9D8];
    v43 = v47;
  }
  v2 = v44;

  sub_1BA25A0A0(v18, v43, 1);
  a2 = v45;
LABEL_15:
  *a2 = v2;
  a2[1] = v7;
  a2[2] = v6;
  a2[3] = v17;
}

uint64_t storeEnumTagSinglePayload for InterstitialAdError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA261268 + 4 * byte_1BA2C6605[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA26129C + 4 * byte_1BA2C6600[v4]))();
}

uint64_t sub_1BA26129C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA2612A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA2612ACLL);
  return result;
}

uint64_t sub_1BA2612B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA2612C0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA2612C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA2612CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InterstitialAdError()
{
  return &type metadata for InterstitialAdError;
}

unint64_t sub_1BA2612E8()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000019;
  else
    return 0xD000000000000025;
}

unint64_t sub_1BA26132C()
{
  unint64_t result;

  result = qword_1EF27EFB8;
  if (!qword_1EF27EFB8)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C668C, &type metadata for InterstitialAdError);
    atomic_store(result, (unint64_t *)&qword_1EF27EFB8);
  }
  return result;
}

uint64_t dispatch thunk of AdPreviewQueueType.queuePreview<A, B, C>(_:for:count:filter:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(void))(a13 + 8))();
}

uint64_t dispatch thunk of AdPreviewQueueType.dequeuePreview<A, B, C>(for:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(void))(a10 + 16))();
}

char *sub_1BA2613A0(char *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;

  v19 = result;
  v5 = a4 - a3;
  if (__OFSUB__(a4, a3))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v6 = v4;
  v7 = MEMORY[0x1E0DEE9D8];
  if (!v5)
    return (char *)v7;
  v25 = MEMORY[0x1E0DEE9D8];
  result = sub_1BA24B6AC(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    v7 = v25;
    v9 = a3;
    if (a4 <= a3)
      v10 = a3;
    else
      v10 = a4;
    v18 = v10;
    while (a4 != v9)
    {
      v21 = v9;
      result = (char *)((char *(*)(uint64_t *__return_ptr, uint64_t *))v19)(&v22, &v21);
      if (v6)
      {
        swift_release();
        return (char *)v7;
      }
      v6 = 0;
      v11 = v22;
      v12 = v23;
      v13 = v24;
      v25 = v7;
      v15 = *(_QWORD *)(v7 + 16);
      v14 = *(_QWORD *)(v7 + 24);
      if (v15 >= v14 >> 1)
      {
        v17 = v23;
        result = sub_1BA24B6AC((char *)(v14 > 1), v15 + 1, 1);
        v12 = v17;
        v7 = v25;
      }
      *(_QWORD *)(v7 + 16) = v15 + 1;
      v16 = v7 + 32 * v15;
      *(_QWORD *)(v16 + 32) = v11;
      *(_OWORD *)(v16 + 40) = v12;
      *(_QWORD *)(v16 + 56) = v13;
      if (a4 < a3)
        goto LABEL_19;
      if (v18 == v9)
        goto LABEL_20;
      if (a4 == ++v9)
        return (char *)v7;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_1BA261508(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t result;
  __int128 v22;
  char *v23;
  char isUniquelyReferenced_nonNull_native;
  _OWORD v25[4];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = v5;
  v30 = a4;
  v31 = a5;
  v9 = *a2;
  v11 = *a1;
  v10 = a1[1];
  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v12 = (void *)qword_1ED5B2888;
  sub_1BA22D5D8();
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BA2C3840;
  v15 = a2[2];
  v14 = a2[3];
  v16 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
  v17 = sub_1BA2291C8();
  *(_QWORD *)(v13 + 32) = v15;
  *(_QWORD *)(v13 + 40) = v14;
  *(_QWORD *)(v13 + 96) = v16;
  *(_QWORD *)(v13 + 104) = v17;
  *(_QWORD *)(v13 + 64) = v17;
  *(_QWORD *)(v13 + 72) = v11;
  v18 = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v13 + 80) = v10;
  v19 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v13 + 136) = v18;
  *(_QWORD *)(v13 + 144) = v19;
  *(_QWORD *)(v13 + 112) = a3;
  v20 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  result = swift_bridgeObjectRelease();
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x1E0C80A78](result);
    v22 = *(_OWORD *)(v9 + 104);
    v25[1] = *(_OWORD *)(v9 + 88);
    v25[2] = v22;
    v25[3] = *(_OWORD *)(v9 + 120);
    v26 = v11;
    v27 = v10;
    v28 = v30;
    v29 = v31;
    swift_bridgeObjectRetain();
    v23 = sub_1BA2613A0((char *)sub_1BA261BF4, (uint64_t)v25, 0, a3);
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v32 = *(_QWORD *)(v6 + 16);
    *(_QWORD *)(v6 + 16) = 0x8000000000000000;
    sub_1BA2882D8((uint64_t)v23, v15, v14, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v6 + 16) = v32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1BA261724(uint64_t a1, uint64_t (*a2)(_BYTE *), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  char v15;
  void (*v16)(_BYTE *, uint64_t, uint64_t, uint64_t);
  char v17;
  _BYTE v19[32];

  v7 = sub_1BA2C245C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = &v19[-v10];
  v12 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](v9);
  v14 = &v19[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA2605C4(a1, (uint64_t)v19);
  v15 = swift_dynamicCast();
  v16 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  if ((v15 & 1) != 0)
  {
    v16(v11, 0, 1, a4);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(v14, v11, a4);
    v17 = a2(v14);
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, a4);
  }
  else
  {
    v16(v11, 1, 1, a4);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
    v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_1BA261880(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  char v8;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    v6 = (uint64_t *)(a3 + 32 * v4);
    do
    {
      v7 = v6[3];
      v10 = *v6;
      v11 = *(_OWORD *)(v6 + 1);
      v12 = v7;
      swift_bridgeObjectRetain();
      swift_retain();
      v8 = a1(&v10);
      swift_release();
      swift_bridgeObjectRelease();
      if (v3)
        break;
      --v4;
      v6 -= 4;
    }
    while (!(v8 & 1 | (v4 == 0)));
  }
  return v4;
}

uint64_t sub_1BA261958@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1BA261BE0(v5);
    v5 = result;
  }
  v7 = *(_QWORD *)(v5 + 16);
  if (v7 <= a1)
  {
    __break(1u);
  }
  else
  {
    v8 = v7 - 1;
    v9 = v5 + 32 * a1;
    v10 = *(_QWORD *)(v9 + 32);
    v9 += 32;
    v11 = *(_QWORD *)(v9 + 24);
    *(_QWORD *)a2 = v10;
    *(_OWORD *)(a2 + 8) = *(_OWORD *)(v9 + 8);
    *(_QWORD *)(a2 + 24) = v11;
    result = (uint64_t)memmove((void *)v9, (const void *)(v9 + 32), 32 * (v7 - 1 - a1));
    *(_QWORD *)(v5 + 16) = v8;
    *v2 = v5;
  }
  return result;
}

uint64_t sub_1BA2619F0()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t destroy for AdPreviewQueue.AdPreviewWrapper()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for AdPreviewQueue.AdPreviewWrapper(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for AdPreviewQueue.AdPreviewWrapper(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for AdPreviewQueue.AdPreviewWrapper(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for AdPreviewQueue.AdPreviewWrapper()
{
  return &type metadata for AdPreviewQueue.AdPreviewWrapper;
}

uint64_t sub_1BA261B44(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1BA261508(a1, a2, a3, a4, a5);
}

uint64_t sub_1BA261B64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t *);
  uint64_t *boxed_opaque_existential_2;
  char v6;
  uint64_t v8[3];
  uint64_t v9;

  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(uint64_t (**)(uint64_t *))(a1 + 16);
  v9 = *(_QWORD *)(v1 + 16);
  v2 = v9;
  boxed_opaque_existential_2 = __swift_allocate_boxed_opaque_existential_2(v8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(boxed_opaque_existential_2, v3, v2);
  v6 = v4(v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v6 & 1;
}

char *sub_1BA261BE0(uint64_t a1)
{
  return sub_1BA23F1A0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BA261BF4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v4 = *(_QWORD *)(v1 + 64);
  v3 = *(_QWORD *)(v1 + 72);
  v6 = *(_QWORD *)(v1 + 80);
  v5 = *(_QWORD *)(v1 + 88);
  v7 = swift_allocObject();
  v8 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v7 + 32) = v8;
  *(_OWORD *)(v7 + 48) = *(_OWORD *)(v1 + 48);
  *(_QWORD *)(v7 + 64) = v6;
  *(_QWORD *)(v7 + 72) = v5;
  *a1 = v4;
  a1[1] = v3;
  a1[2] = sub_1BA261C9C;
  a1[3] = v7;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1BA261C78()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA261C9C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA261724(a1, *(uint64_t (**)(_BYTE *))(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t Ads.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t Ads.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t Ad.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t Ad.init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t sub_1BA261D30()
{
  return swift_bridgeObjectRelease();
}

uint64_t Ad.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Ad.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for Ads()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for Ad()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Ad.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t ChannelAdData.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ChannelAdData.isWhitelisted.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t ChannelAdData.primaryAudience.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ChannelAdData.contentProviderID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t ChannelAdData.adKeywords.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ChannelAdData.adCategories.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA261E10()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA261E44 + 4 * byte_1BA2C67A8[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA261E44()
{
  return 0x6C65746968577369;
}

uint64_t sub_1BA261E68()
{
  return 0x417972616D697270;
}

unint64_t sub_1BA261E8C()
{
  return 0xD000000000000011;
}

uint64_t sub_1BA261EA8()
{
  return 0x726F7779654B6461;
}

uint64_t sub_1BA261EC0()
{
  return 0x6F67657461436461;
}

uint64_t sub_1BA261EE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA262B9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BA261F04()
{
  sub_1BA26219C();
  return sub_1BA2C275C();
}

uint64_t sub_1BA261F2C()
{
  sub_1BA26219C();
  return sub_1BA2C2768();
}

uint64_t ChannelAdData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  char v20;
  uint64_t v21;

  sub_1BA26255C(0, &qword_1EF27EFC0, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v13 - v6;
  v18 = *(unsigned __int8 *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v16 = *(_QWORD *)(v1 + 32);
  v17 = v8;
  v9 = *(_QWORD *)(v1 + 40);
  v14 = *(_QWORD *)(v1 + 48);
  v15 = v9;
  v13 = *(_QWORD *)(v1 + 56);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA26219C();
  sub_1BA2C2750();
  LOBYTE(v21) = 0;
  v10 = v19;
  sub_1BA2C2654();
  if (!v10)
  {
    v11 = v14;
    LOBYTE(v21) = 1;
    sub_1BA2C2660();
    LOBYTE(v21) = 2;
    sub_1BA2C2654();
    LOBYTE(v21) = 3;
    sub_1BA2C2678();
    v21 = v11;
    v20 = 4;
    sub_1BA234914();
    sub_1BA2407DC(&qword_1EF27E9C0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1BA2C2684();
    v21 = v13;
    v20 = 5;
    sub_1BA2C2684();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BA26219C()
{
  unint64_t result;

  result = qword_1EF27EFC8;
  if (!qword_1EF27EFC8)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C6910, &type metadata for ChannelAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27EFC8);
  }
  return result;
}

uint64_t ChannelAdData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  char v28;
  uint64_t v29;

  sub_1BA26255C(0, &qword_1EF27EFD0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA26219C();
  sub_1BA2C2744();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v29) = 0;
  v10 = sub_1BA2C2600();
  v12 = v11;
  LOBYTE(v29) = 1;
  swift_bridgeObjectRetain();
  v27 = sub_1BA2C260C();
  LOBYTE(v29) = 2;
  v25 = sub_1BA2C2600();
  v26 = v14;
  LOBYTE(v29) = 3;
  swift_bridgeObjectRetain();
  v22 = sub_1BA2C2624();
  sub_1BA234914();
  v16 = v15;
  v28 = 4;
  v23 = sub_1BA2407DC(&qword_1EF27E9D0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  v24 = v16;
  sub_1BA2C2630();
  v28 = 5;
  v21 = v29;
  swift_bridgeObjectRetain();
  sub_1BA2C2630();
  v27 &= 1u;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v17 = v29;
  swift_bridgeObjectRetain();
  v18 = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = v27;
  *(_QWORD *)(a2 + 24) = v25;
  *(_QWORD *)(a2 + 32) = v18;
  v19 = v21;
  *(_QWORD *)(a2 + 40) = v22;
  *(_QWORD *)(a2 + 48) = v19;
  *(_QWORD *)(a2 + 56) = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BA26255C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA26219C();
    v7 = a3(a1, &type metadata for ChannelAdData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BA2625B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ChannelAdData.init(from:)(a1, a2);
}

uint64_t sub_1BA2625CC(_QWORD *a1)
{
  return ChannelAdData.encode(to:)(a1);
}

void ChannelAdData.init(channel:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;

  v4 = objc_msgSend(a1, sel_identifier);
  v20 = sub_1BA2C2150();
  v6 = v5;

  v7 = objc_msgSend(a1, sel_isWhitelisted);
  v8 = objc_msgSend(a1, sel_primaryAudience);
  if (v8)
  {
    v9 = v8;
    v10 = sub_1BA2C2150();
    v12 = v11;

  }
  else
  {
    v12 = 0xE700000000000000;
    v10 = 0x4C4152454E4547;
  }
  v13 = objc_msgSend(a1, sel_contentProvider);
  v14 = objc_msgSend(a1, sel_iAdKeywords);
  if (v14)
  {
    v15 = v14;
    v16 = sub_1BA2C227C();

  }
  else
  {
    v16 = MEMORY[0x1E0DEE9D8];
  }
  v17 = objc_msgSend(a1, sel_iAdCategories);
  if (v17)
  {
    v18 = v17;
    v19 = sub_1BA2C227C();
    swift_unknownObjectRelease();

  }
  else
  {
    swift_unknownObjectRelease();
    v19 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)a2 = v20;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v7;
  *(_QWORD *)(a2 + 24) = v10;
  *(_QWORD *)(a2 + 32) = v12;
  *(_QWORD *)(a2 + 40) = v13;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v19;
}

unint64_t sub_1BA262768(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BA24739C();
  result = sub_1BA2461F8();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t destroy for ChannelAdData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ChannelAdData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ChannelAdData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ChannelAdData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ChannelAdData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ChannelAdData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ChannelAdData()
{
  return &type metadata for ChannelAdData;
}

uint64_t storeEnumTagSinglePayload for ChannelAdData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BA262A44 + 4 * byte_1BA2C67B3[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BA262A78 + 4 * byte_1BA2C67AE[v4]))();
}

uint64_t sub_1BA262A78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA262A80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA262A88);
  return result;
}

uint64_t sub_1BA262A94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA262A9CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BA262AA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA262AA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ChannelAdData.CodingKeys()
{
  return &type metadata for ChannelAdData.CodingKeys;
}

unint64_t sub_1BA262AC8()
{
  unint64_t result;

  result = qword_1EF27EFD8;
  if (!qword_1EF27EFD8)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C68E8, &type metadata for ChannelAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27EFD8);
  }
  return result;
}

unint64_t sub_1BA262B10()
{
  unint64_t result;

  result = qword_1EF27EFE0;
  if (!qword_1EF27EFE0)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C6858, &type metadata for ChannelAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27EFE0);
  }
  return result;
}

unint64_t sub_1BA262B58()
{
  unint64_t result;

  result = qword_1EF27EFE8;
  if (!qword_1EF27EFE8)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C6880, &type metadata for ChannelAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27EFE8);
  }
  return result;
}

uint64_t sub_1BA262B9C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C65746968577369 && a2 == 0xED00006465747369 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x417972616D697270 && a2 == 0xEF65636E65696475 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BA2CE080 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726F7779654B6461 && a2 == 0xEA00000000007364 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F67657461436461 && a2 == 0xEC00000073656972)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1BA2C26A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

void FeedBannerAdContext.appData.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t FeedBannerAdContext.userData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_bridgeObjectRetain();
}

void FeedBannerAdContext.creativeData.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t FeedBannerAdContext.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  v4 = *(_BYTE *)(v1 + 48);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = *(_QWORD *)(v1 + 64);
  v7 = *(_QWORD *)(v1 + 72);
  v8 = *(_QWORD *)(v1 + 80);
  v9 = *(_QWORD *)(v1 + 88);
  v10 = *(_QWORD *)(v1 + 96);
  v11 = *(_QWORD *)(v1 + 104);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  *(_QWORD *)(a1 + 80) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FeedBannerAdContext.sectionData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 120);
  *a1 = *(_QWORD *)(v1 + 112);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FeedBannerAdContext.leadingGroupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v1 + 136);
  v3 = *(_QWORD *)(v1 + 144);
  v4 = *(_QWORD *)(v1 + 152);
  v5 = *(_QWORD *)(v1 + 160);
  v6 = *(_QWORD *)(v1 + 184);
  v7 = *(_QWORD *)(v1 + 192);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 128);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 168);
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FeedBannerAdContext.trailingGroupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v1 + 208);
  v3 = *(_QWORD *)(v1 + 216);
  v4 = *(_QWORD *)(v1 + 224);
  v5 = *(_QWORD *)(v1 + 232);
  v6 = *(_QWORD *)(v1 + 256);
  v7 = *(_QWORD *)(v1 + 264);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 200);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 240);
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void FeedBannerAdContext.referralData.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 272);
}

uint64_t sub_1BA263038(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA263178(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BA2632AC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA2632E0 + 4 * byte_1BA2C6970[a1]))(0x61746144707061, 0xE700000000000000);
}

uint64_t sub_1BA2632E0()
{
  return 0x6174614472657375;
}

uint64_t sub_1BA26331C()
{
  return 0x446E6F6974636573;
}

unint64_t sub_1BA26333C()
{
  return 0xD000000000000010;
}

unint64_t sub_1BA263358()
{
  return 0xD000000000000011;
}

uint64_t sub_1BA263398()
{
  unsigned __int8 *v0;

  return sub_1BA2632AC(*v0);
}

uint64_t sub_1BA2633A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA265258(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BA2633C4()
{
  sub_1BA2638E4();
  return sub_1BA2C275C();
}

uint64_t sub_1BA2633EC()
{
  sub_1BA2638E4();
  return sub_1BA2C2768();
}

uint64_t FeedBannerAdContext.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  char v53;

  sub_1BA264410(0, &qword_1EF27EFF0, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v17 - v6;
  v8 = *v1;
  v9 = *((_QWORD *)v1 + 1);
  v52 = v1[16];
  v41 = *((_QWORD *)v1 + 3);
  v42 = v9;
  v40 = *((_QWORD *)v1 + 4);
  v32 = *((_QWORD *)v1 + 5);
  v38 = v1[48];
  v10 = *((_QWORD *)v1 + 7);
  v39 = *((_OWORD *)v1 + 4);
  v36 = *((_QWORD *)v1 + 10);
  v37 = v10;
  v35 = *((_QWORD *)v1 + 11);
  v34 = *((_QWORD *)v1 + 12);
  v33 = *((_QWORD *)v1 + 13);
  v30 = *((_QWORD *)v1 + 14);
  v31 = *((_QWORD *)v1 + 15);
  v24 = *((_QWORD *)v1 + 16);
  v29 = *(_OWORD *)(v1 + 136);
  v28 = *(_OWORD *)(v1 + 152);
  v25 = *(_OWORD *)(v1 + 168);
  v27 = *((_QWORD *)v1 + 23);
  v26 = *((_QWORD *)v1 + 24);
  v18 = *((_QWORD *)v1 + 25);
  v23 = *((_OWORD *)v1 + 13);
  v22 = *((_OWORD *)v1 + 14);
  v19 = *((_OWORD *)v1 + 15);
  v21 = *((_QWORD *)v1 + 32);
  v20 = *((_QWORD *)v1 + 33);
  v11 = v1[272];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA2638E4();
  sub_1BA2C2750();
  LOBYTE(v44) = v8;
  v53 = 0;
  sub_1BA234CD4();
  v12 = v43;
  sub_1BA2C2684();
  if (!v12)
  {
    v13 = v52;
    v14 = v40;
    v15 = v41;
    v44 = v42;
    v53 = 1;
    sub_1BA236AC4();
    sub_1BA2C2684();
    LOBYTE(v44) = v13;
    v53 = 2;
    sub_1BA23679C();
    sub_1BA2C2684();
    v44 = v15;
    *(_QWORD *)&v45 = v14;
    *((_QWORD *)&v45 + 1) = v32;
    LOBYTE(v46) = v38;
    *((_QWORD *)&v46 + 1) = v37;
    v47 = v39;
    v48 = v36;
    v49 = v35;
    v50 = v34;
    v51 = v33;
    v53 = 3;
    sub_1BA236B90();
    sub_1BA2C2684();
    v44 = v30;
    *(_QWORD *)&v45 = v31;
    v53 = 4;
    sub_1BA246280();
    sub_1BA2C2648();
    v44 = v24;
    v45 = v29;
    v46 = v28;
    v47 = v25;
    v48 = v27;
    v49 = v26;
    v53 = 5;
    sub_1BA23667C();
    sub_1BA2C2684();
    v44 = v18;
    v45 = v23;
    v46 = v22;
    v47 = v19;
    v48 = v21;
    v49 = v20;
    v53 = 6;
    sub_1BA2C2684();
    LOBYTE(v44) = v11;
    v53 = 7;
    sub_1BA23D154();
    sub_1BA2C2648();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BA2638E4()
{
  unint64_t result;

  result = qword_1EF27EFF8;
  if (!qword_1EF27EFF8)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C6B18, &type metadata for FeedBannerAdContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27EFF8);
  }
  return result;
}

uint64_t FeedBannerAdContext.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  unint64_t v42;
  uint64_t v43;
  int v44;
  unint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[35];
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  char v105;
  unsigned __int8 v106;
  _BYTE v107[7];
  _BYTE v108[7];
  _DWORD v109[3];
  _QWORD *v110;

  sub_1BA264410(0, &qword_1EF27F000, MEMORY[0x1E0DED048]);
  v68 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v32 - v7;
  v9 = a1[3];
  v110 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1BA2638E4();
  sub_1BA2C2744();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v110);
    return v63;
  }
  else
  {
    v10 = v6;
    v49 = a2;
    LOBYTE(v69[0]) = 0;
    sub_1BA234C90();
    v11 = v68;
    v12 = v8;
    sub_1BA2C2630();
    v13 = v70;
    LOBYTE(v69[0]) = 1;
    sub_1BA236A80();
    sub_1BA2C2630();
    v14 = (uint64_t)v110;
    v15 = v70;
    LOBYTE(v69[0]) = 2;
    sub_1BA236758();
    swift_bridgeObjectRetain();
    sub_1BA2C2630();
    v58 = v15;
    v47 = v70;
    LOBYTE(v69[0]) = 3;
    sub_1BA236B4C();
    sub_1BA2C2630();
    v41 = v13;
    v16 = v71;
    v42 = v72;
    v43 = v70;
    v44 = v73;
    v56 = v76;
    v57 = v77;
    v45 = v78;
    v46 = v74;
    v48 = v79;
    v54 = v75;
    v55 = v80;
    LOBYTE(v69[0]) = 4;
    sub_1BA247424();
    v53 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA2C25F4();
    v17 = v48;
    v40 = v70;
    v18 = v71;
    LOBYTE(v69[0]) = 5;
    v19 = sub_1BA236638();
    v52 = v18;
    swift_bridgeObjectRetain();
    sub_1BA2C2630();
    v20 = v71;
    v21 = v72;
    v66 = v73;
    v67 = v74;
    v38 = v75;
    v39 = v70;
    v37 = v76;
    v63 = v19;
    v22 = v78;
    LOBYTE(v69[0]) = 6;
    v51 = v77;
    swift_bridgeObjectRetain();
    v64 = v22;
    swift_bridgeObjectRetain();
    v50 = v20;
    swift_bridgeObjectRetain();
    v65 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA2C2630();
    v23 = v71;
    v24 = v72;
    v60 = v74;
    v61 = v73;
    v34 = v75;
    v35 = v70;
    v33 = v76;
    v62 = v77;
    v63 = v78;
    v105 = 7;
    sub_1BA23D654();
    v36 = v23;
    swift_bridgeObjectRetain();
    v59 = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA2C25F4();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v11);
    LODWORD(v68) = v106;
    LOBYTE(v69[0]) = v41;
    v69[1] = v58;
    LOBYTE(v69[2]) = v47;
    v69[3] = v43;
    v69[4] = v53;
    v69[5] = v42;
    LOBYTE(v69[6]) = v44;
    v69[7] = v46;
    v69[8] = v54;
    v69[9] = v56;
    v69[10] = v57;
    v69[11] = v45;
    v69[12] = v17;
    v69[13] = v55;
    v69[14] = v40;
    v69[15] = v52;
    v69[16] = v39;
    v69[17] = v50;
    v69[18] = v65;
    v69[19] = v66;
    v69[20] = v67;
    v69[21] = v38;
    v69[22] = v37;
    v69[23] = v51;
    v69[24] = v64;
    v69[25] = v35;
    v69[26] = v36;
    v69[27] = v59;
    v69[28] = v61;
    v69[29] = v60;
    v69[30] = v34;
    v69[31] = v33;
    v69[32] = v62;
    v69[33] = v63;
    LOBYTE(v69[34]) = v106;
    sub_1BA263038((uint64_t)v69);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = v53;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v26 = v50;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v27 = v60;
    swift_bridgeObjectRelease();
    v28 = v61;
    swift_bridgeObjectRelease();
    v29 = v59;
    swift_bridgeObjectRelease();
    v30 = v36;
    swift_bridgeObjectRelease();
    memcpy(v49, v69, 0x111uLL);
    __swift_destroy_boxed_opaque_existential_1(v14);
    LOBYTE(v70) = v41;
    v71 = v58;
    LOBYTE(v72) = v47;
    v73 = v43;
    v74 = v25;
    v75 = v42;
    *(_DWORD *)((char *)&v70 + 1) = v109[0];
    HIDWORD(v70) = *(_DWORD *)((char *)v109 + 3);
    *(_DWORD *)((char *)&v72 + 1) = *(_DWORD *)v108;
    HIDWORD(v72) = *(_DWORD *)&v108[3];
    LOBYTE(v76) = v44;
    HIDWORD(v76) = *(_DWORD *)&v107[3];
    *(_DWORD *)((char *)&v76 + 1) = *(_DWORD *)v107;
    v77 = v46;
    v78 = v54;
    v79 = v56;
    v80 = v57;
    v81 = v45;
    v82 = v48;
    v83 = v55;
    v84 = v40;
    v85 = v52;
    v86 = v39;
    v87 = v26;
    v88 = v65;
    v89 = v66;
    v90 = v67;
    v91 = v38;
    v92 = v37;
    v93 = v51;
    v94 = v64;
    v95 = v35;
    v96 = v30;
    v97 = v29;
    v98 = v28;
    v99 = v27;
    v100 = v34;
    v101 = v33;
    v102 = v62;
    v103 = v63;
    v104 = v68;
    return sub_1BA263178((uint64_t)&v70);
  }
}

void sub_1BA264410(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA2638E4();
    v7 = a3(a1, &type metadata for FeedBannerAdContext.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BA26446C@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return FeedBannerAdContext.init(from:)(a1, a2);
}

uint64_t sub_1BA264480(_QWORD *a1)
{
  return FeedBannerAdContext.encode(to:)(a1);
}

uint64_t FeedBannerAdContext.previousPromotableContentDepiction.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  _QWORD v13[9];

  v1 = v0[1];
  v3 = v0[16];
  v2 = v0[17];
  v4 = v0[18];
  v5 = v0[19];
  v6 = v0[20];
  v7 = v0[21];
  v9 = v0[22];
  v8 = v0[23];
  v10 = v0[24];
  sub_1BA2C19E8();
  v12 = v1;
  v13[0] = v3;
  v13[1] = v2;
  v13[2] = v4;
  v13[3] = v5;
  v13[4] = v6;
  v13[5] = v7;
  v13[6] = v9;
  v13[7] = v8;
  v13[8] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BA233A54(150, v13, &v12, 101);
}

uint64_t FeedBannerAdContext.currentPromotableContentDepiction.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15[3];
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v13 = *(_BYTE *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 64);
  v12 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 88);
  v9 = *(_QWORD *)(v0 + 96);
  v10 = *(_QWORD *)(v0 + 104);
  sub_1BA2C19E8();
  v14 = v1;
  v15[0] = v3;
  v15[1] = v2;
  v15[2] = v4;
  v16 = v13;
  v17 = v12;
  v18 = v5;
  v19 = v7;
  v20 = v6;
  v21 = v8;
  v22 = v9;
  v23 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BA233C54(0, v15, (uint64_t)&v14, 101);
}

uint64_t FeedBannerAdContext.nextPromotableContentDepiction.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  _QWORD v13[9];

  v1 = v0[1];
  v3 = v0[25];
  v2 = v0[26];
  v4 = v0[27];
  v5 = v0[28];
  v6 = v0[29];
  v7 = v0[30];
  v9 = v0[31];
  v8 = v0[32];
  v10 = v0[33];
  sub_1BA2C19E8();
  v12 = v1;
  v13[0] = v3;
  v13[1] = v2;
  v13[2] = v4;
  v13[3] = v5;
  v13[4] = v6;
  v13[5] = v7;
  v13[6] = v9;
  v13[7] = v8;
  v13[8] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BA233A54(151, v13, &v12, 101);
}

unint64_t FeedBannerAdContext.additionalPromotableContentDepictions.getter()
{
  const void *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD __dst[35];

  memcpy(__dst, v0, 0x111uLL);
  sub_1BA263038((uint64_t)__dst);
  v1 = swift_bridgeObjectRetain();
  v2 = sub_1BA2648FC(v1, (uint64_t)__dst);
  sub_1BA263178((uint64_t)__dst);
  swift_bridgeObjectRelease();
  sub_1BA263038((uint64_t)__dst);
  v3 = swift_bridgeObjectRetain();
  v4 = sub_1BA2648FC(v3, (uint64_t)__dst);
  sub_1BA263178((uint64_t)__dst);
  swift_bridgeObjectRelease();
  sub_1BA2423FC(v4);
  if (v2 >> 62)
  {
    sub_1BA264B90();
    swift_bridgeObjectRetain();
    v2 = sub_1BA2C2588();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BA2C26B4();
    sub_1BA264B90();
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1BA264830()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  _QWORD v13[9];

  v1 = v0[1];
  v3 = v0[16];
  v2 = v0[17];
  v4 = v0[18];
  v5 = v0[19];
  v6 = v0[20];
  v7 = v0[21];
  v9 = v0[22];
  v8 = v0[23];
  v10 = v0[24];
  sub_1BA2C19E8();
  v12 = v1;
  v13[0] = v3;
  v13[1] = v2;
  v13[2] = v4;
  v13[3] = v5;
  v13[4] = v6;
  v13[5] = v7;
  v13[6] = v9;
  v13[7] = v8;
  v13[8] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BA233A54(150, v13, &v12, 101);
}

uint64_t sub_1BA2648FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v5 = sub_1BA2C1484();
  v26 = *(_QWORD *)(v5 - 8);
  v27 = v5;
  MEMORY[0x1E0C80A78](v5);
  v25 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BA2C1460();
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  MEMORY[0x1E0C80A78](v7);
  v22 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v21[0] = v2;
    v33 = MEMORY[0x1E0DEE9D8];
    sub_1BA2C2528();
    v34 = *(_QWORD *)(a2 + 8);
    v21[1] = sub_1BA2C19E8();
    v11 = (char *)(a1 + 88);
    do
    {
      v13 = *((_QWORD *)v11 - 6);
      v14 = *((_QWORD *)v11 - 4);
      v15 = *((_QWORD *)v11 - 2);
      v16 = *v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA24910C((uint64_t)&v34);
      v17 = v22;
      sub_1BA2C1454();
      v18 = sub_1BA2C143C();
      v29 = v19;
      v30 = v18;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v24);
      v20 = qword_1BA2C6C40[v16];
      v31 = v14;
      v32 = v13;
      v28 = v20;
      if (v15 || *(_QWORD *)(v34 + 16))
        swift_bridgeObjectRetain();
      v11 += 64;
      sub_1BA249134((uint64_t)&v34);
      v12 = v25;
      sub_1BA2C1478();
      sub_1BA2C146C();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v27);
      swift_bridgeObjectRetain();
      sub_1BA2C19DC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA2C2504();
      sub_1BA2C2534();
      sub_1BA2C2540();
      sub_1BA2C2510();
      --v9;
    }
    while (v9);
    return v33;
  }
  return result;
}

unint64_t sub_1BA264B90()
{
  unint64_t result;

  result = qword_1EF27F008;
  if (!qword_1EF27F008)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF27F008);
  }
  return result;
}

uint64_t assignWithCopy for FeedBannerAdContext(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  return a1;
}

uint64_t assignWithTake for FeedBannerAdContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedBannerAdContext(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 273))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedBannerAdContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 264) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 272) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 273) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 273) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedBannerAdContext.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1BA265100 + 4 * byte_1BA2C6982[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1BA265134 + 4 * byte_1BA2C697D[v4]))();
}

uint64_t sub_1BA265134(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA26513C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA265144);
  return result;
}

uint64_t sub_1BA265150(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA265158);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1BA26515C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA265164(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedBannerAdContext.CodingKeys()
{
  return &type metadata for FeedBannerAdContext.CodingKeys;
}

unint64_t sub_1BA265184()
{
  unint64_t result;

  result = qword_1EF27F010;
  if (!qword_1EF27F010)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C6AF0, &type metadata for FeedBannerAdContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F010);
  }
  return result;
}

unint64_t sub_1BA2651CC()
{
  unint64_t result;

  result = qword_1EF27F018;
  if (!qword_1EF27F018)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C6A60, &type metadata for FeedBannerAdContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F018);
  }
  return result;
}

unint64_t sub_1BA265214()
{
  unint64_t result;

  result = qword_1EF27F020;
  if (!qword_1EF27F020)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C6A88, &type metadata for FeedBannerAdContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F020);
  }
  return result;
}

uint64_t sub_1BA265258(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x61746144707061 && a2 == 0xE700000000000000;
  if (v2 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614472657375 && a2 == 0xE800000000000000 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6576697461657263 && a2 == 0xEC00000061746144 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x446E6F6974636573 && a2 == 0xEB00000000617461 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BA2CEFA0 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BA2CEFC0 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6C61727265666572 && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1BA2C26A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

NewsAds::DebugAdCollapseBehavior_optional __swiftcall DebugAdCollapseBehavior.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAds::DebugAdCollapseBehavior_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BA2C25DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t DebugAdCollapseBehavior.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x74736E497261656ELL;
  if (*v0 != 1)
    v1 = 0x646579616C6564;
  if (*v0)
    return v1;
  else
    return 0x726576656ELL;
}

uint64_t sub_1BA265688(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BA26DB00(*a1, *a2);
}

unint64_t sub_1BA265698()
{
  unint64_t result;

  result = qword_1ED5B35F0;
  if (!qword_1ED5B35F0)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for DebugAdCollapseBehavior, &type metadata for DebugAdCollapseBehavior);
    atomic_store(result, (unint64_t *)&qword_1ED5B35F0);
  }
  return result;
}

uint64_t sub_1BA2656DC()
{
  sub_1BA2C2720();
  sub_1BA2C21A4();
  swift_bridgeObjectRelease();
  return sub_1BA2C2738();
}

uint64_t sub_1BA265780()
{
  sub_1BA2C21A4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA265800()
{
  sub_1BA2C2720();
  sub_1BA2C21A4();
  swift_bridgeObjectRelease();
  return sub_1BA2C2738();
}

NewsAds::DebugAdCollapseBehavior_optional sub_1BA2658A0(Swift::String *a1)
{
  return DebugAdCollapseBehavior.init(rawValue:)(*a1);
}

void sub_1BA2658AC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0xEB00000000746E61;
  v5 = 0x74736E497261656ELL;
  if (v2 != 1)
  {
    v5 = 0x646579616C6564;
    v4 = 0xE700000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x726576656ELL;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BA265910()
{
  sub_1BA265AA4();
  return sub_1BA2C2210();
}

uint64_t sub_1BA265950()
{
  sub_1BA265AA4();
  return sub_1BA2C2204();
}

uint64_t sub_1BA265998()
{
  sub_1BA265AA4();
  return sub_1BA2C21F8();
}

uint64_t storeEnumTagSinglePayload for DebugAdCollapseBehavior(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BA265A24 + 4 * byte_1BA2C6C65[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BA265A58 + 4 * byte_1BA2C6C60[v4]))();
}

uint64_t sub_1BA265A58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA265A60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA265A68);
  return result;
}

uint64_t sub_1BA265A74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA265A7CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BA265A80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA265A88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugAdCollapseBehavior()
{
  return &type metadata for DebugAdCollapseBehavior;
}

unint64_t sub_1BA265AA4()
{
  unint64_t result;

  result = qword_1ED5B35F8;
  if (!qword_1ED5B35F8)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for DebugAdCollapseBehavior, &type metadata for DebugAdCollapseBehavior);
    atomic_store(result, (unint64_t *)&qword_1ED5B35F8);
  }
  return result;
}

uint64_t dispatch thunk of JournalEntryProcessorType.process(entry:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t AdHostDescription.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0;
  if (v0[3])
  {
    v3 = *v0;
    swift_bridgeObjectRetain();
    sub_1BA2C21C8();
    sub_1BA2C21C8();
    sub_1BA2C21C8();
    return v3;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v1;
}

uint64_t sub_1BA265B84()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0;
  if (v0[3])
  {
    v3 = *v0;
    swift_bridgeObjectRetain();
    sub_1BA2C21C8();
    sub_1BA2C21C8();
    sub_1BA2C21C8();
    return v3;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v1;
}

_QWORD *initializeWithCopy for AdHostDescription(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AdHostDescription(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for AdHostDescription(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1BA265D04(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA2660C4();
  v2 = sub_1BA2C25B8();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BA24AA98(v6, (uint64_t)&v13, (uint64_t (*)(_QWORD))sub_1BA24D260);
    v7 = v13;
    result = sub_1BA26ED30(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_1BA22E0C4(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t AdContextBuilderType.build<A, B, C>(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(a3 + 40))(a1, 0, 0);
}

char *sub_1BA265E6C()
{
  return AdContextBuilder.path.getter();
}

uint64_t (*sub_1BA265E8C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1BA265F64(v6, a2, a3);
  return sub_1BA265EE0;
}

uint64_t (*sub_1BA265EE4(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1BA265FD8(v6, a2, a3);
  return sub_1BA265EE0;
}

void sub_1BA265F38(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_1BA265F64(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x1BCCD8C98](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return sub_1BA265FD0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA265FD0()
{
  return swift_release();
}

void (*sub_1BA265FD8(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1BCCD8C98](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for AdPendingLoadToken.Content;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA266044(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_1BA266054(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

unint64_t sub_1BA266064()
{
  unint64_t result;

  result = qword_1EF27F028;
  if (!qword_1EF27F028)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for AdContextError, &type metadata for AdContextError);
    atomic_store(result, (unint64_t *)&qword_1EF27F028);
  }
  return result;
}

uint64_t dispatch thunk of AdContextBuilderType.path.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AdContextBuilderType.chain(_:identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t method lookup function for AdContextBuilder()
{
  return swift_lookUpClassMethod();
}

void sub_1BA2660C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF27F048)
  {
    type metadata accessor for Key(255);
    sub_1BA24E14C();
    v0 = sub_1BA2C25C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF27F048);
  }
}

void sub_1BA266130()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B2C38)
  {
    sub_1BA266194();
    v0 = sub_1BA2C25C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B2C38);
  }
}

unint64_t sub_1BA266194()
{
  unint64_t result;

  result = qword_1ED5B1E10;
  if (!qword_1ED5B1E10)
  {
    sub_1BA2661F0();
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5B1E10);
  }
  return result;
}

unint64_t sub_1BA2661F0()
{
  unint64_t result;

  result = qword_1ED5B2C08;
  if (!qword_1ED5B2C08)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5B2C08);
  }
  return result;
}

uint64_t sub_1BA26622C(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v5;

  sub_1BA266278(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1BA266278(uint64_t a1, unint64_t *a2)
{
  unint64_t TupleTypeMetadata2;
  uint64_t v4;

  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

unint64_t sub_1BA2662C8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned __int8 v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  sub_1BA2663C4();
  v3 = (_QWORD *)sub_1BA2C25B8();
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  result = sub_1BA26EDB0(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v8 = (_QWORD *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    *(_QWORD *)(v3[7] + 8 * result) = v5;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = v8 + 2;
    v4 = *((_BYTE *)v8 - 8);
    v13 = *v8;
    swift_bridgeObjectRetain();
    result = sub_1BA26EDB0(v4);
    v8 = v12;
    v5 = v13;
    if ((v14 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

void sub_1BA2663C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B2C30)
  {
    sub_1BA26642C();
    sub_1BA266480();
    v0 = sub_1BA2C25C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B2C30);
  }
}

void sub_1BA26642C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B2BA0)
  {
    type metadata accessor for CGRect(255);
    v0 = sub_1BA2C22F4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B2BA0);
  }
}

unint64_t sub_1BA266480()
{
  unint64_t result;

  result = qword_1ED5B1FE8;
  if (!qword_1ED5B1FE8)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for AdPolicyContentType, &type metadata for AdPolicyContentType);
    atomic_store(result, (unint64_t *)&qword_1ED5B1FE8);
  }
  return result;
}

void sub_1BA2664C4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF27F058)
  {
    sub_1BA222948(255, (unint64_t *)&qword_1ED5B1EB8);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF27F058);
  }
}

uint64_t dispatch thunk of AdPlacementReusable.reuseIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for AdErrors(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AdErrors(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_1BA2665A4(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1BA2665C0(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

NewsAds::AdInsertionType_optional __swiftcall AdInsertionType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsAds::AdInsertionType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BA2C25DC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t AdInsertionType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C61756E616DLL;
  else
    return 0x6974616D6F747561;
}

uint64_t sub_1BA26667C(char *a1, char *a2)
{
  return sub_1BA26E038(*a1, *a2);
}

unint64_t sub_1BA26668C()
{
  unint64_t result;

  result = qword_1EF27F060;
  if (!qword_1EF27F060)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for AdInsertionType, &type metadata for AdInsertionType);
    atomic_store(result, (unint64_t *)&qword_1EF27F060);
  }
  return result;
}

uint64_t sub_1BA2666D0()
{
  sub_1BA2C2720();
  sub_1BA2C21A4();
  swift_bridgeObjectRelease();
  return sub_1BA2C2738();
}

uint64_t sub_1BA266750()
{
  sub_1BA2C21A4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA2667AC()
{
  sub_1BA2C2720();
  sub_1BA2C21A4();
  swift_bridgeObjectRelease();
  return sub_1BA2C2738();
}

NewsAds::AdInsertionType_optional sub_1BA266828(Swift::String *a1)
{
  return AdInsertionType.init(rawValue:)(*a1);
}

void sub_1BA266834(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6974616D6F747561;
  if (*v1)
    v2 = 0x6C61756E616DLL;
  v3 = 0xE900000000000063;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t storeEnumTagSinglePayload for AdInsertionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA2668C0 + 4 * byte_1BA2C6F91[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA2668F4 + 4 * byte_1BA2C6F8C[v4]))();
}

uint64_t sub_1BA2668F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA2668FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA266904);
  return result;
}

uint64_t sub_1BA266910(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA266918);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA26691C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA266924(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdInsertionType()
{
  return &type metadata for AdInsertionType;
}

uint64_t IssueAdData.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IssueAdData.isDraft.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t IssueAdData.isCurrent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_1BA26697C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x74666172447369;
  if (*v0 != 1)
    v1 = 0x6E65727275437369;
  if (*v0)
    return v1;
  else
    return 0x696669746E656469;
}

uint64_t sub_1BA2669E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA267240(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BA266A04(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1BA266A10()
{
  sub_1BA266BC8();
  return sub_1BA2C275C();
}

uint64_t sub_1BA266A38()
{
  sub_1BA266BC8();
  return sub_1BA2C2768();
}

uint64_t IssueAdData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _DWORD v10[2];
  uint64_t v11;
  int v12;
  char v13;
  char v14;
  char v15;

  sub_1BA266DD8(0, &qword_1EF27F068, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v12 = *(unsigned __int8 *)(v1 + 16);
  v10[1] = *(unsigned __int8 *)(v1 + 17);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA266BC8();
  sub_1BA2C2750();
  v15 = 0;
  v8 = v11;
  sub_1BA2C2654();
  if (!v8)
  {
    v14 = 1;
    sub_1BA2C2660();
    v13 = 2;
    sub_1BA2C2660();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BA266BC8()
{
  unint64_t result;

  result = qword_1EF27F070;
  if (!qword_1EF27F070)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C71A8, &type metadata for IssueAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F070);
  }
  return result;
}

uint64_t IssueAdData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  int v16;
  char v17;
  char v18;
  char v19;

  sub_1BA266DD8(0, &qword_1EF27F078, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA266BC8();
  sub_1BA2C2744();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v19 = 0;
  v10 = sub_1BA2C2600();
  v12 = v11;
  v18 = 1;
  swift_bridgeObjectRetain();
  v16 = sub_1BA2C260C();
  v17 = 2;
  v14 = sub_1BA2C260C();
  v16 &= 1u;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = v16;
  *(_BYTE *)(a2 + 17) = v14 & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1BA266DD8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA266BC8();
    v7 = a3(a1, &type metadata for IssueAdData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BA266E34@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IssueAdData.init(from:)(a1, a2);
}

uint64_t sub_1BA266E48(_QWORD *a1)
{
  return IssueAdData.encode(to:)(a1);
}

void IssueAdData.init(issue:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v4 = objc_msgSend(a1, sel_identifier);
  v5 = sub_1BA2C2150();
  v7 = v6;

  LOBYTE(v4) = objc_msgSend(a1, sel_isDraft);
  v8 = objc_msgSend(a1, sel_isCurrent);

  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v7;
  *(_BYTE *)(a2 + 16) = (_BYTE)v4;
  *(_BYTE *)(a2 + 17) = v8;
}

unint64_t sub_1BA266EEC(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BA2473E0();
  result = sub_1BA24623C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1BA266F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for IssueAdData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for IssueAdData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for IssueAdData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 18))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IssueAdData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 18) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IssueAdData()
{
  return &type metadata for IssueAdData;
}

uint64_t storeEnumTagSinglePayload for IssueAdData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BA2670E8 + 4 * byte_1BA2C7059[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BA26711C + 4 * byte_1BA2C7054[v4]))();
}

uint64_t sub_1BA26711C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA267124(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA26712CLL);
  return result;
}

uint64_t sub_1BA267138(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA267140);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BA267144(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA26714C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IssueAdData.CodingKeys()
{
  return &type metadata for IssueAdData.CodingKeys;
}

unint64_t sub_1BA26716C()
{
  unint64_t result;

  result = qword_1EF27F080;
  if (!qword_1EF27F080)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C7180, &type metadata for IssueAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F080);
  }
  return result;
}

unint64_t sub_1BA2671B4()
{
  unint64_t result;

  result = qword_1EF27F088;
  if (!qword_1EF27F088)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C70F0, &type metadata for IssueAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F088);
  }
  return result;
}

unint64_t sub_1BA2671FC()
{
  unint64_t result;

  result = qword_1EF27F090;
  if (!qword_1EF27F090)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C7118, &type metadata for IssueAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F090);
  }
  return result;
}

uint64_t sub_1BA267240(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74666172447369 && a2 == 0xE700000000000000 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65727275437369 && a2 == 0xE900000000000074)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BA2C26A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

NewsAds::PlacementAdData __swiftcall PlacementAdData.init(placementType:)(NewsAds::PlacementAdData placementType)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)placementType.placementType;
  return placementType;
}

NewsAds::PlacementAdData::PlacementType_optional __swiftcall PlacementAdData.PlacementType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAds::PlacementAdData::PlacementType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BA2C25DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t PlacementAdData.PlacementType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA26744C + 4 * byte_1BA2C71F8[*v0]))(0x416E656577746562, 0xEE00656C63697472);
}

uint64_t sub_1BA26744C()
{
  return 0x6C63697472416E69;
}

uint64_t sub_1BA267468()
{
  return 0x646565466E69;
}

uint64_t sub_1BA26747C()
{
  return 0x6E4965766974616ELL;
}

uint64_t sub_1BA2674B0()
{
  return 0x416E496F65646976;
}

uint64_t sub_1BA2674C4()
{
  return 0x466E496F65646976;
}

void sub_1BA2674E4(char *a1)
{
  sub_1BA26DCC4(*a1);
}

void sub_1BA2674F0()
{
  char *v0;

  sub_1BA2B8E94(0, *v0);
}

void sub_1BA2674FC()
{
  __asm { BR              X10 }
}

uint64_t sub_1BA267544()
{
  sub_1BA2C21A4();
  return swift_bridgeObjectRelease();
}

void sub_1BA2675F0(uint64_t a1)
{
  char *v1;

  sub_1BA2B8E94(a1, *v1);
}

NewsAds::PlacementAdData::PlacementType_optional sub_1BA2675F8(Swift::String *a1)
{
  return PlacementAdData.PlacementType.init(rawValue:)(*a1);
}

uint64_t sub_1BA267604()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BA267640 + 4 * byte_1BA2C7206[*v0]))();
}

void sub_1BA267640(_QWORD *a1@<X8>)
{
  *a1 = 0x6C63697472416E69;
  a1[1] = 0xE900000000000065;
}

void sub_1BA267660(_QWORD *a1@<X8>)
{
  *a1 = 0x646565466E69;
  a1[1] = 0xE600000000000000;
}

void sub_1BA267678(_QWORD *a1@<X8>)
{
  *a1 = 0x6E4965766974616ELL;
  a1[1] = 0xEF656C6369747241;
}

void sub_1BA2676B0(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x416E496F65646976;
  a1[1] = v1;
}

void sub_1BA2676C8(_QWORD *a1@<X8>)
{
  *a1 = 0x466E496F65646976;
  a1[1] = 0xEB00000000646565;
}

uint64_t sub_1BA2676EC()
{
  sub_1BA267FB4();
  return sub_1BA2C2258();
}

uint64_t sub_1BA267748()
{
  sub_1BA267FB4();
  return sub_1BA2C2228();
}

void PlacementAdData.placementType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t sub_1BA2677A0()
{
  return 0x6E656D6563616C70;
}

uint64_t sub_1BA2677C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6E656D6563616C70 && a2 == 0xED00006570795474)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BA2C26A8();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BA26787C()
{
  sub_1BA2679D0();
  return sub_1BA2C275C();
}

uint64_t sub_1BA2678A4()
{
  sub_1BA2679D0();
  return sub_1BA2C2768();
}

uint64_t PlacementAdData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1BA267B90(0, &qword_1EF27F098, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA2679D0();
  sub_1BA2C2750();
  v11 = v8;
  sub_1BA267A14();
  sub_1BA2C2684();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BA2679D0()
{
  unint64_t result;

  result = qword_1EF27F0A0;
  if (!qword_1EF27F0A0)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C7488, &type metadata for PlacementAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F0A0);
  }
  return result;
}

unint64_t sub_1BA267A14()
{
  unint64_t result;

  result = qword_1EF27F0A8;
  if (!qword_1EF27F0A8)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for PlacementAdData.PlacementType, &type metadata for PlacementAdData.PlacementType);
    atomic_store(result, (unint64_t *)&qword_1EF27F0A8);
  }
  return result;
}

uint64_t PlacementAdData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1BA267B90(0, &qword_1EF27F0B0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA2679D0();
  sub_1BA2C2744();
  if (!v2)
  {
    sub_1BA267BEC();
    sub_1BA2C2630();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA267B90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA2679D0();
    v7 = a3(a1, &type metadata for PlacementAdData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BA267BEC()
{
  unint64_t result;

  result = qword_1EF27F0B8;
  if (!qword_1EF27F0B8)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for PlacementAdData.PlacementType, &type metadata for PlacementAdData.PlacementType);
    atomic_store(result, (unint64_t *)&qword_1EF27F0B8);
  }
  return result;
}

unint64_t sub_1BA267C34()
{
  unint64_t result;

  result = qword_1EF27F0C0;
  if (!qword_1EF27F0C0)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for PlacementAdData.PlacementType, &type metadata for PlacementAdData.PlacementType);
    atomic_store(result, (unint64_t *)&qword_1EF27F0C0);
  }
  return result;
}

unint64_t sub_1BA267C78(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BA23D610();
  result = sub_1BA23D110();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1BA267CA4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return PlacementAdData.init(from:)(a1, a2);
}

uint64_t sub_1BA267CB8(_QWORD *a1)
{
  return PlacementAdData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for PlacementAdData()
{
  return &type metadata for PlacementAdData;
}

uint64_t getEnumTagSinglePayload for FeedGroupAdData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s7NewsAds15PlacementAdDataV13PlacementTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BA267DC0 + 4 * byte_1BA2C7212[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BA267DF4 + 4 * byte_1BA2C720D[v4]))();
}

uint64_t sub_1BA267DF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA267DFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA267E04);
  return result;
}

uint64_t sub_1BA267E10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA267E18);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BA267E1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA267E24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlacementAdData.PlacementType()
{
  return &type metadata for PlacementAdData.PlacementType;
}

uint64_t storeEnumTagSinglePayload for PlacementAdData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BA267E80 + 4 * byte_1BA2C7217[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BA267EA0 + 4 * byte_1BA2C721C[v4]))();
}

_BYTE *sub_1BA267E80(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BA267EA0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA267EA8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA267EB0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA267EB8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA267EC0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PlacementAdData.CodingKeys()
{
  return &type metadata for PlacementAdData.CodingKeys;
}

unint64_t sub_1BA267EE0()
{
  unint64_t result;

  result = qword_1EF27F0C8;
  if (!qword_1EF27F0C8)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C7460, &type metadata for PlacementAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F0C8);
  }
  return result;
}

unint64_t sub_1BA267F28()
{
  unint64_t result;

  result = qword_1EF27F0D0;
  if (!qword_1EF27F0D0)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C73D0, &type metadata for PlacementAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F0D0);
  }
  return result;
}

unint64_t sub_1BA267F70()
{
  unint64_t result;

  result = qword_1EF27F0D8;
  if (!qword_1EF27F0D8)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C73F8, &type metadata for PlacementAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F0D8);
  }
  return result;
}

unint64_t sub_1BA267FB4()
{
  unint64_t result;

  result = qword_1EF27F0E0;
  if (!qword_1EF27F0E0)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for PlacementAdData.PlacementType, &type metadata for PlacementAdData.PlacementType);
    atomic_store(result, (unint64_t *)&qword_1EF27F0E0);
  }
  return result;
}

void sub_1BA267FF8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x98);
  v3 = *(void **)((char *)v1 + v2);
  *(_QWORD *)((char *)v1 + v2) = a1;

}

uint64_t sub_1BA26801C(uint64_t a1)
{
  _QWORD *v1;

  *(_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0xA0)) = a1;
  return swift_unknownObjectRelease();
}

uint64_t sub_1BA268044(uint64_t a1)
{
  _QWORD *v1;

  *(_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0xA8)) = a1;
  return swift_unknownObjectRelease();
}

uint64_t sub_1BA26806C()
{
  _QWORD *v0;

  return *(_QWORD *)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0));
}

uint64_t sub_1BA268094(uint64_t result, char a2)
{
  _QWORD *v2;
  char *v3;

  v3 = (char *)v2 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0xB0);
  *(_QWORD *)v3 = result;
  v3[8] = a2 & 1;
  return result;
}

void VideoAdProvider.__allocating_init(preroll:placement:journal:request:appConfiguration:presentationHandler:tracker:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1BA26C29C(a1, a2, a3, a4);
}

void sub_1BA2680DC()
{
  type metadata accessor for PrerollAdPlacement();
  type metadata accessor for AdRequest();
}

uint64_t sub_1BA26810C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
  return v2;
}

void VideoAdProvider.init(preroll:placement:journal:request:appConfiguration:presentationHandler:tracker:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BA26C090(a1, a2, a3);
}

void sub_1BA268168()
{
  type metadata accessor for PrerollAdPlacement();
  type metadata accessor for AdRequest();
}

uint64_t sub_1BA268198(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
  return v2;
}

uint64_t sub_1BA2681C4(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  v2 = sub_1BA2681F4();

  return v2;
}

uint64_t sub_1BA2681F4()
{
  _QWORD *v0;
  void *v1;
  double v2;
  double v3;
  uint64_t result;

  v1 = *(void **)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0));
  if (!v1)
    return -1;
  if (!objc_msgSend((id)swift_unknownObjectRetain(), sel_skipEnabled))
  {
    swift_unknownObjectRelease();
    return -1;
  }
  objc_msgSend(v1, sel_skipThreshold);
  v3 = v2;
  result = swift_unknownObjectRelease();
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) != 0)
  {
    if (v3 > -1.0)
    {
      if (v3 < 1.84467441e19)
        return (unint64_t)v3;
      goto LABEL_11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1BA2682B4(void *a1)
{
  id v1;
  char v2;

  v1 = a1;
  v2 = sub_1BA2682E4();

  return v2 & 1;
}

uint64_t sub_1BA2682E4()
{
  _QWORD *v0;
  uint64_t result;

  result = *(_QWORD *)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0));
  if (result)
  {
    result = (uint64_t)objc_msgSend((id)result, sel_tapAction);
    if (result)
    {

      return 1;
    }
  }
  return result;
}

id sub_1BA268334()
{
  return (id)sub_1BA26C31C();
}

void *sub_1BA268354()
{
  void *v0;
  id v1;

  v0 = (void *)sub_1BA26C31C();
  v1 = v0;
  return v0;
}

id sub_1BA26837C(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  v2 = (void *)sub_1BA2683AC();

  return v2;
}

uint64_t sub_1BA2683AC()
{
  return sub_1BA2C1E98();
}

double sub_1BA2683E4(void *a1)
{
  id v1;
  double v2;
  double v3;

  v1 = a1;
  sub_1BA26841C();
  v3 = v2;

  return v3;
}

id sub_1BA26841C()
{
  _QWORD *v0;

  return objc_msgSend(*(id *)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80)), sel_prerollReadyToPlayTimeout);
}

uint64_t sub_1BA268444()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v26[15];
  char v27;

  v1 = v0;
  v2 = type metadata accessor for PrerollAd();
  MEMORY[0x1E0C80A78](v2);
  v4 = &v26[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for VideoAdPlaybackState();
  MEMORY[0x1E0C80A78](v5);
  v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v8 = (void *)qword_1ED5B2888;
  sub_1BA22D5D8();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BA2C37C0;
  v10 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v11 = *MEMORY[0x1E0DEEDD8] & *v1;
  v12 = (_QWORD *)((char *)v1 + *(_QWORD *)(v11 + 0x68));
  v14 = *v12;
  v13 = v12[1];
  v15 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  v16 = sub_1BA2291C8();
  *(_QWORD *)(v9 + 64) = v16;
  *(_QWORD *)(v9 + 32) = v14;
  *(_QWORD *)(v9 + 40) = v13;
  v17 = (uint64_t)v1 + *(_QWORD *)(v11 + 96);
  v18 = *(_QWORD *)(v17 + 8);
  v19 = *(_QWORD *)(v17 + 16);
  *(_QWORD *)(v9 + 96) = v15;
  *(_QWORD *)(v9 + 104) = v16;
  *(_QWORD *)(v9 + 72) = v18;
  *(_QWORD *)(v9 + 80) = v19;
  v20 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  sub_1BA2C1E8C();
  sub_1BA24AA98(v17, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for PrerollAd);
  v21 = *(void **)((char *)v1 + *(_QWORD *)((*v10 & *v1) + 0xA8));
  v27 = 2;
  swift_unknownObjectRetain();
  sub_1BA2AE7EC((uint64_t)v4, v21, &v27, 0, 1, (uint64_t)v7);
  v22 = (_QWORD *)((char *)v1 + *(_QWORD *)((*v10 & *v1) + 0x90));
  v23 = v22[3];
  v24 = v22[4];
  __swift_project_boxed_opaque_existential_1(v22, v23);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v24 + 56))(v7, v23, v24);
  return sub_1BA258A50((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for VideoAdPlaybackState);
}

void sub_1BA268684(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BA268444();

}

double sub_1BA2686B8()
{
  return 2.0;
}

double sub_1BA2686C0()
{
  return 2.0;
}

void sub_1BA2686C8()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  CFTimeInterval v14;
  CFTimeInterval *v15;

  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v1 = (void *)qword_1ED5B2888;
  sub_1BA22D5D8();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BA2C37C0;
  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v4 = *MEMORY[0x1E0DEEDD8] & *v0;
  v5 = (_QWORD *)((char *)v0 + *(_QWORD *)(v4 + 0x68));
  v7 = *v5;
  v6 = v5[1];
  v8 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  v9 = sub_1BA2291C8();
  *(_QWORD *)(v2 + 64) = v9;
  *(_QWORD *)(v2 + 32) = v7;
  *(_QWORD *)(v2 + 40) = v6;
  v10 = (char *)v0 + *(_QWORD *)(v4 + 96);
  v11 = *((_QWORD *)v10 + 1);
  v12 = *((_QWORD *)v10 + 2);
  *(_QWORD *)(v2 + 96) = v8;
  *(_QWORD *)(v2 + 104) = v9;
  *(_QWORD *)(v2 + 72) = v11;
  *(_QWORD *)(v2 + 80) = v12;
  v13 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  v14 = CACurrentMediaTime();
  v15 = (CFTimeInterval *)((char *)v0 + *(_QWORD *)((*v3 & *v0) + 0xB0));
  *v15 = v14;
  *((_BYTE *)v15 + 8) = 0;
}

void sub_1BA268808(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BA2686C8();

}

uint64_t sub_1BA26883C()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v1 = v0;
  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v2 = (void *)qword_1ED5B2888;
  sub_1BA22D5D8();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BA2C3840;
  v4 = v2;
  v5 = sub_1BA2C1394();
  v7 = v6;
  v8 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEA968];
  v9 = sub_1BA2291C8();
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 32) = v5;
  *(_QWORD *)(v3 + 40) = v7;
  v10 = *MEMORY[0x1E0DEEDD8] & *v1;
  v11 = (_QWORD *)((char *)v1 + *(_QWORD *)(v10 + 0x68));
  v13 = *v11;
  v12 = v11[1];
  *(_QWORD *)(v3 + 96) = v8;
  *(_QWORD *)(v3 + 104) = v9;
  *(_QWORD *)(v3 + 72) = v13;
  *(_QWORD *)(v3 + 80) = v12;
  v14 = (char *)v1 + *(_QWORD *)(v10 + 96);
  v15 = *((_QWORD *)v14 + 1);
  v16 = *((_QWORD *)v14 + 2);
  *(_QWORD *)(v3 + 136) = v8;
  *(_QWORD *)(v3 + 144) = v9;
  *(_QWORD *)(v3 + 112) = v15;
  *(_QWORD *)(v3 + 120) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA26896C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v8;

  v2 = sub_1BA2C13D0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA2C13C4();
  v6 = a1;
  sub_1BA26883C();

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1BA268A08()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  char *v21;
  void *v22;
  char *v23;
  void *v24;
  double v25;
  float v26;
  double v27;
  double v28;
  double *v29;
  double v30;
  void *v31;
  CFTimeInterval v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[15];
  char v37;

  v1 = type metadata accessor for PrerollAd();
  MEMORY[0x1E0C80A78](v1);
  v3 = &v36[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for VideoAdPlaybackState();
  MEMORY[0x1E0C80A78](v4);
  v6 = &v36[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v7 = (void *)qword_1ED5B2888;
  sub_1BA22D5D8();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BA2C37C0;
  v9 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v10 = *MEMORY[0x1E0DEEDD8] & *v0;
  v11 = (_QWORD *)((char *)v0 + *(_QWORD *)(v10 + 0x68));
  v13 = *v11;
  v12 = v11[1];
  v14 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  v15 = sub_1BA2291C8();
  *(_QWORD *)(v8 + 64) = v15;
  *(_QWORD *)(v8 + 32) = v13;
  *(_QWORD *)(v8 + 40) = v12;
  v16 = (uint64_t)v0 + *(_QWORD *)(v10 + 96);
  v17 = *(_QWORD *)(v16 + 8);
  v18 = *(_QWORD *)(v16 + 16);
  *(_QWORD *)(v8 + 96) = v14;
  *(_QWORD *)(v8 + 104) = v15;
  *(_QWORD *)(v8 + 72) = v17;
  *(_QWORD *)(v8 + 80) = v18;
  v19 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  v20 = *v9 & *v0;
  v21 = *(char **)((char *)v0 + *(_QWORD *)(v20 + 0x98));
  if (v21)
  {
    v22 = *(void **)&v21[OBJC_IVAR____TtC7NewsAds28VideoAdProviderMetricsHelper_mediaMetricsHelper];
    if (v22)
    {
      v23 = v21;
      objc_msgSend(v22, sel_mediaLoaded);
      v24 = *(void **)&v23[OBJC_IVAR____TtC7NewsAds28VideoAdProviderMetricsHelper_metadata];
      objc_msgSend(v24, sel_naturalSize);
      v26 = v25;
      objc_msgSend(v24, sel_naturalSize);
      *(float *)&v27 = v27;
      *(float *)&v28 = v26;
      objc_msgSend(v22, sel_videoChosenWithVideoWidth_videoHeight_, v28, v27);

      v20 = *v9 & *v0;
    }
  }
  v29 = (double *)((char *)v0 + *(_QWORD *)(v20 + 176));
  if (((_BYTE)v29[1] & 1) == 0)
  {
    v30 = *v29;
    sub_1BA24AA98(v16, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for PrerollAd);
    v31 = *(void **)((char *)v0 + *(_QWORD *)((*v9 & *v0) + 0xA8));
    v37 = 2;
    swift_unknownObjectRetain();
    v32 = CACurrentMediaTime();
    sub_1BA2AE7EC((uint64_t)v3, v31, &v37, COERCE__INT64(v32 - v30), 0, (uint64_t)v6);
    v33 = (_QWORD *)((char *)v0 + *(_QWORD *)((*v9 & *v0) + 0x90));
    v34 = v33[3];
    v35 = v33[4];
    __swift_project_boxed_opaque_existential_1(v33, v34);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v35 + 64))(v6, v34, v35);
    sub_1BA258A50((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for VideoAdPlaybackState);
  }
}

void sub_1BA268CF4(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BA268A08();

}

void sub_1BA268D28()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  _OWORD v28[2];
  char v29;

  v1 = v0;
  v2 = type metadata accessor for PrerollAd();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for VideoAdPlaybackState();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v8 = (void *)qword_1ED5B2888;
  sub_1BA22D5D8();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BA2C37C0;
  v10 = *MEMORY[0x1E0DEEDD8] & *v1;
  v11 = (_QWORD *)((char *)v1 + *(_QWORD *)(v10 + 0x68));
  v13 = *v11;
  v12 = v11[1];
  v14 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  v15 = sub_1BA2291C8();
  *(_QWORD *)(v9 + 64) = v15;
  v27[1] = v13;
  *(_QWORD *)(v9 + 32) = v13;
  *(_QWORD *)(v9 + 40) = v12;
  v16 = (uint64_t)v1 + *(_QWORD *)(v10 + 96);
  v17 = *(_QWORD *)(v16 + 8);
  v18 = *(_QWORD *)(v16 + 16);
  *(_QWORD *)(v9 + 96) = v14;
  *(_QWORD *)(v9 + 104) = v15;
  *(_QWORD *)(v9 + 72) = v17;
  *(_QWORD *)(v9 + 80) = v18;
  v19 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  v20 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)((char *)v1 + *(_QWORD *)((*v20 & *v1) + 0x98));
  if (v21)
  {
    v22 = *(void **)(v21 + OBJC_IVAR____TtC7NewsAds28VideoAdProviderMetricsHelper_mediaMetricsHelper);
    if (v22)
      objc_msgSend(v22, sel_mediaStarted);
  }
  sub_1BA24AA98(v16, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for PrerollAd);
  v23 = *(void **)((char *)v1 + *(_QWORD *)((*v20 & *v1) + 0xA8));
  LOBYTE(v28[0]) = 2;
  swift_unknownObjectRetain();
  sub_1BA2AE7EC((uint64_t)v4, v23, (char *)v28, 0, 1, (uint64_t)v7);
  v24 = (_QWORD *)((char *)v1 + *(_QWORD *)((*v20 & *v1) + 0x90));
  v25 = v24[3];
  v26 = v24[4];
  __swift_project_boxed_opaque_existential_1(v24, v25);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 8))(v7, v25, v26);
  memset(v28, 0, sizeof(v28));
  v29 = 1;
  Journal.addPresentedEntry(request:placementIdentifier:contentIdentifier:layout:)();
}

void sub_1BA268FE0(void *a1)
{
  a1;
  sub_1BA268D28();
}

void sub_1BA269000()
{
  void *v0;

}

uint64_t sub_1BA269014()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char *v20;
  void *v21;
  void *v22;
  char *v23;
  void *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v29[15];
  char v30;

  v1 = type metadata accessor for PrerollAd();
  MEMORY[0x1E0C80A78](v1);
  v3 = &v29[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for VideoAdPlaybackState();
  MEMORY[0x1E0C80A78](v4);
  v6 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v7 = (void *)qword_1ED5B2888;
  sub_1BA22D5D8();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BA2C37C0;
  v9 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v10 = *MEMORY[0x1E0DEEDD8] & *v0;
  v11 = (_QWORD *)((char *)v0 + *(_QWORD *)(v10 + 0x68));
  v13 = *v11;
  v12 = v11[1];
  v14 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  v15 = sub_1BA2291C8();
  *(_QWORD *)(v8 + 64) = v15;
  *(_QWORD *)(v8 + 32) = v13;
  *(_QWORD *)(v8 + 40) = v12;
  v16 = (uint64_t)v0 + *(_QWORD *)(v10 + 96);
  v17 = *(_QWORD *)(v16 + 8);
  v18 = *(_QWORD *)(v16 + 16);
  *(_QWORD *)(v8 + 96) = v14;
  *(_QWORD *)(v8 + 104) = v15;
  *(_QWORD *)(v8 + 72) = v17;
  *(_QWORD *)(v8 + 80) = v18;
  v19 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  v20 = *(char **)((char *)v0 + *(_QWORD *)((*v9 & *v0) + 0x98));
  if (v20)
  {
    v21 = *(void **)&v20[OBJC_IVAR____TtC7NewsAds28VideoAdProviderMetricsHelper_mediaMetricsHelper];
    if (v21)
    {
      v22 = *(void **)&v20[OBJC_IVAR____TtC7NewsAds28VideoAdProviderMetricsHelper_metadata];
      v23 = v20;
      objc_msgSend(v22, sel_time);
      objc_msgSend(v21, sel_mediaPausedAtPosition_);

    }
  }
  sub_1BA24AA98(v16, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for PrerollAd);
  v24 = *(void **)((char *)v0 + *(_QWORD *)((*v9 & *v0) + 0xA8));
  v30 = 2;
  swift_unknownObjectRetain();
  sub_1BA2AE7EC((uint64_t)v3, v24, &v30, 0, 1, (uint64_t)v6);
  v25 = (_QWORD *)((char *)v0 + *(_QWORD *)((*v9 & *v0) + 0x90));
  v26 = v25[3];
  v27 = v25[4];
  __swift_project_boxed_opaque_existential_1(v25, v26);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v27 + 16))(v6, v26, v27);
  return sub_1BA258A50((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for VideoAdPlaybackState);
}

void sub_1BA2692A8(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BA269014();

}

uint64_t sub_1BA2692DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char *v20;
  void *v21;
  void *v22;
  char *v23;
  void *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v29[15];
  char v30;

  v1 = type metadata accessor for PrerollAd();
  MEMORY[0x1E0C80A78](v1);
  v3 = &v29[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for VideoAdPlaybackState();
  MEMORY[0x1E0C80A78](v4);
  v6 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v7 = (void *)qword_1ED5B2888;
  sub_1BA22D5D8();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BA2C37C0;
  v9 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v10 = *MEMORY[0x1E0DEEDD8] & *v0;
  v11 = (_QWORD *)((char *)v0 + *(_QWORD *)(v10 + 0x68));
  v13 = *v11;
  v12 = v11[1];
  v14 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  v15 = sub_1BA2291C8();
  *(_QWORD *)(v8 + 64) = v15;
  *(_QWORD *)(v8 + 32) = v13;
  *(_QWORD *)(v8 + 40) = v12;
  v16 = (uint64_t)v0 + *(_QWORD *)(v10 + 96);
  v17 = *(_QWORD *)(v16 + 8);
  v18 = *(_QWORD *)(v16 + 16);
  *(_QWORD *)(v8 + 96) = v14;
  *(_QWORD *)(v8 + 104) = v15;
  *(_QWORD *)(v8 + 72) = v17;
  *(_QWORD *)(v8 + 80) = v18;
  v19 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  v20 = *(char **)((char *)v0 + *(_QWORD *)((*v9 & *v0) + 0x98));
  if (v20)
  {
    v21 = *(void **)&v20[OBJC_IVAR____TtC7NewsAds28VideoAdProviderMetricsHelper_mediaMetricsHelper];
    if (v21)
    {
      v22 = *(void **)&v20[OBJC_IVAR____TtC7NewsAds28VideoAdProviderMetricsHelper_metadata];
      v23 = v20;
      objc_msgSend(v22, sel_time);
      objc_msgSend(v21, sel_mediaPlayedAtPosition_);

    }
  }
  sub_1BA24AA98(v16, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for PrerollAd);
  v24 = *(void **)((char *)v0 + *(_QWORD *)((*v9 & *v0) + 0xA8));
  v30 = 2;
  swift_unknownObjectRetain();
  sub_1BA2AE7EC((uint64_t)v3, v24, &v30, 0, 1, (uint64_t)v6);
  v25 = (_QWORD *)((char *)v0 + *(_QWORD *)((*v9 & *v0) + 0x90));
  v26 = v25[3];
  v27 = v25[4];
  __swift_project_boxed_opaque_existential_1(v25, v26);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v27 + 24))(v6, v26, v27);
  return sub_1BA258A50((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for VideoAdPlaybackState);
}

void sub_1BA269570(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BA2692DC();

}

uint64_t sub_1BA2695A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v27[15];
  char v28;

  v1 = type metadata accessor for PrerollAd();
  MEMORY[0x1E0C80A78](v1);
  v3 = &v27[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for VideoAdPlaybackState();
  MEMORY[0x1E0C80A78](v4);
  v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v7 = (void *)qword_1ED5B2888;
  sub_1BA22D5D8();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BA2C37C0;
  v9 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v10 = *MEMORY[0x1E0DEEDD8] & *v0;
  v11 = (_QWORD *)((char *)v0 + *(_QWORD *)(v10 + 0x68));
  v13 = *v11;
  v12 = v11[1];
  v14 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  v15 = sub_1BA2291C8();
  *(_QWORD *)(v8 + 64) = v15;
  *(_QWORD *)(v8 + 32) = v13;
  *(_QWORD *)(v8 + 40) = v12;
  v16 = (uint64_t)v0 + *(_QWORD *)(v10 + 96);
  v17 = *(_QWORD *)(v16 + 8);
  v18 = *(_QWORD *)(v16 + 16);
  *(_QWORD *)(v8 + 96) = v14;
  *(_QWORD *)(v8 + 104) = v15;
  *(_QWORD *)(v8 + 72) = v17;
  *(_QWORD *)(v8 + 80) = v18;
  v19 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)((char *)v0 + *(_QWORD *)((*v9 & *v0) + 0x98));
  if (v20)
  {
    v21 = *(void **)(v20 + OBJC_IVAR____TtC7NewsAds28VideoAdProviderMetricsHelper_mediaMetricsHelper);
    if (v21)
      objc_msgSend(v21, sel_mediaFinished);
  }
  sub_1BA24AA98(v16, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for PrerollAd);
  v22 = *(void **)((char *)v0 + *(_QWORD *)((*v9 & *v0) + 0xA8));
  v28 = 2;
  swift_unknownObjectRetain();
  sub_1BA2AE7EC((uint64_t)v3, v22, &v28, 0, 1, (uint64_t)v6);
  v23 = (_QWORD *)((char *)v0 + *(_QWORD *)((*v9 & *v0) + 0x90));
  v24 = v23[3];
  v25 = v23[4];
  __swift_project_boxed_opaque_existential_1(v23, v24);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v25 + 32))(v6, v24, v25);
  return sub_1BA258A50((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for VideoAdPlaybackState);
}

void sub_1BA26980C(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BA2695A4();

}

uint64_t sub_1BA269840(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char *v25;
  void *v26;
  char *v27;
  char *v28;
  void *v29;
  double *v30;
  uint64_t result;
  double v32;
  id v33;
  id v34;
  id v35;
  char v36;
  char v37;
  uint64_t v38;
  void *v39;
  CFTimeInterval v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  id v50;
  id v51;
  id v52;

  v2 = v1;
  v4 = type metadata accessor for PrerollAd();
  MEMORY[0x1E0C80A78](v4);
  v47 = (uint64_t)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for VideoAdPlaybackState();
  MEMORY[0x1E0C80A78](v6);
  v48 = (uint64_t)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v8 = (id)qword_1ED5B2888;
  v49 = sub_1BA2C2390();
  sub_1BA22D5D8();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BA2C3840;
  v10 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v11 = *MEMORY[0x1E0DEEDD8] & *v1;
  v12 = (_QWORD *)((char *)v1 + *(_QWORD *)(v11 + 0x68));
  v14 = *v12;
  v13 = v12[1];
  v15 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  v16 = sub_1BA2291C8();
  v17 = v16;
  *(_QWORD *)(v9 + 64) = v16;
  *(_QWORD *)(v9 + 32) = v14;
  *(_QWORD *)(v9 + 40) = v13;
  v18 = (uint64_t)v2 + *(_QWORD *)(v11 + 96);
  v19 = *(_QWORD *)(v18 + 8);
  v20 = *(_QWORD *)(v18 + 16);
  v46 = v18;
  *(_QWORD *)(v9 + 96) = v15;
  *(_QWORD *)(v9 + 104) = v16;
  *(_QWORD *)(v9 + 72) = v19;
  *(_QWORD *)(v9 + 80) = v20;
  v50 = a1;
  if (a1)
  {
    swift_getErrorValue();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = sub_1BA2C26E4();
    v23 = (uint64_t *)(v9 + 112);
    *(_QWORD *)(v9 + 136) = v15;
    *(_QWORD *)(v9 + 144) = v17;
    if (v22)
    {
      *v23 = v21;
      v10 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      goto LABEL_9;
    }
    v10 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  }
  else
  {
    v23 = (uint64_t *)(v9 + 112);
    *(_QWORD *)(v9 + 136) = v15;
    *(_QWORD *)(v9 + 144) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *v23 = 0;
  v22 = 0xE000000000000000;
LABEL_9:
  *(_QWORD *)(v9 + 120) = v22;
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  v24 = *v10 & *v2;
  v25 = *(char **)((char *)v2 + *(_QWORD *)(v24 + 0x98));
  if (v25)
  {
    v26 = *(void **)&v25[OBJC_IVAR____TtC7NewsAds28VideoAdProviderMetricsHelper_diagnosticMetricsHelper];
    if (v50)
    {
      swift_getErrorValue();
      v27 = v25;
      sub_1BA2C26E4();
    }
    else
    {
      v28 = v25;
    }
    v29 = (void *)sub_1BA2C212C();
    swift_bridgeObjectRelease();
    objc_msgSend(v26, sel_mediaPlaybackFailedWithReason_, v29);

    v24 = *v10 & *v2;
  }
  v30 = (double *)((char *)v2 + *(_QWORD *)(v24 + 176));
  result = (uint64_t)v50;
  if (((_BYTE)v30[1] & 1) == 0)
  {
    if (v50)
    {
      v32 = *v30;
      v52 = v50;
      v33 = v50;
      sub_1BA222948(0, (unint64_t *)&qword_1ED5B2CD0);
      sub_1BA26C33C();
      result = swift_dynamicCast();
      if ((result & 1) != 0)
      {
        v34 = v51;
        v35 = objc_msgSend(v51, sel_code);

        if (v35 == (id)5)
          v36 = 3;
        else
          v36 = 5;
        if (v35 == (id)2)
          v37 = 4;
        else
          v37 = v36;
        v38 = v47;
        sub_1BA24AA98(v46, v47, (uint64_t (*)(_QWORD))type metadata accessor for PrerollAd);
        v39 = *(void **)((char *)v2 + *(_QWORD *)((*v10 & *v2) + 0xA8));
        LOBYTE(v52) = v37;
        swift_unknownObjectRetain();
        v40 = CACurrentMediaTime();
        v41 = v48;
        sub_1BA2AE7EC(v38, v39, (char *)&v52, COERCE__INT64(v40 - v32), 0, v48);
        v42 = (_QWORD *)((char *)v2 + *(_QWORD *)((*v10 & *v2) + 0x90));
        v43 = v42[3];
        v44 = v42[4];
        __swift_project_boxed_opaque_existential_1(v42, v43);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 64))(v41, v43, v44);
        return sub_1BA258A50(v41, (uint64_t (*)(_QWORD))type metadata accessor for VideoAdPlaybackState);
      }
    }
  }
  return result;
}

void sub_1BA269C6C(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a1;
  v5 = a3;
  sub_1BA269840(a3);

}

void sub_1BA269CB0()
{
  sub_1BA269D1C((uint64_t)"Preroll ad playback entered fullscreen. placement=%{public}@, contentIdentifier=%{public}@", 90, (SEL *)&selRef_mediaExpandedAtPosition_fullScreen_, 1);
}

void sub_1BA269CCC(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BA269CB0();

}

void sub_1BA269D00()
{
  sub_1BA269D1C((uint64_t)"Preroll ad playback exited fullscreen. placement=%{public}@, contentIdentifier=%{public}@", 89, (SEL *)&selRef_mediaContractedAtPosition_fullScreen_, 0);
}

void sub_1BA269D1C(uint64_t a1, uint64_t a2, SEL *a3, char a4)
{
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char *v18;
  void *v19;
  void *v20;
  char *v21;

  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v5 = (void *)qword_1ED5B2888;
  sub_1BA22D5D8();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BA2C37C0;
  v7 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v8 = *MEMORY[0x1E0DEEDD8] & *v4;
  v9 = (_QWORD *)((char *)v4 + *(_QWORD *)(v8 + 0x68));
  v10 = *v9;
  v11 = v9[1];
  v12 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  v13 = sub_1BA2291C8();
  *(_QWORD *)(v6 + 64) = v13;
  *(_QWORD *)(v6 + 32) = v10;
  *(_QWORD *)(v6 + 40) = v11;
  v14 = (char *)v4 + *(_QWORD *)(v8 + 96);
  v15 = *((_QWORD *)v14 + 1);
  v16 = *((_QWORD *)v14 + 2);
  *(_QWORD *)(v6 + 96) = v12;
  *(_QWORD *)(v6 + 104) = v13;
  *(_QWORD *)(v6 + 72) = v15;
  *(_QWORD *)(v6 + 80) = v16;
  v17 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  v18 = *(char **)((char *)v4 + *(_QWORD *)((*v7 & *v4) + 0x98));
  if (v18)
  {
    v19 = *(void **)&v18[OBJC_IVAR____TtC7NewsAds28VideoAdProviderMetricsHelper_mediaMetricsHelper];
    if (v19)
    {
      v20 = *(void **)&v18[OBJC_IVAR____TtC7NewsAds28VideoAdProviderMetricsHelper_metadata];
      v21 = v18;
      objc_msgSend(v20, sel_time);
      objc_msgSend(v19, *a3, a4 & 1);

    }
  }
}

void sub_1BA269EE0(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BA269D00();

}

void sub_1BA269F14(char a1)
{
  _QWORD *v1;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;

  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v3 = (void *)qword_1ED5B2888;
  sub_1BA22D5D8();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BA2C37C0;
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v6 = *MEMORY[0x1E0DEEDD8] & *v1;
  v7 = (_QWORD *)((char *)v1 + *(_QWORD *)(v6 + 0x68));
  v9 = *v7;
  v8 = v7[1];
  v10 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  v11 = sub_1BA2291C8();
  *(_QWORD *)(v4 + 64) = v11;
  *(_QWORD *)(v4 + 32) = v9;
  *(_QWORD *)(v4 + 40) = v8;
  v12 = (char *)v1 + *(_QWORD *)(v6 + 96);
  v13 = *((_QWORD *)v12 + 1);
  v14 = *((_QWORD *)v12 + 2);
  *(_QWORD *)(v4 + 96) = v10;
  *(_QWORD *)(v4 + 104) = v11;
  *(_QWORD *)(v4 + 72) = v13;
  *(_QWORD *)(v4 + 80) = v14;
  v15 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  v16 = *(void **)((char *)v1 + *(_QWORD *)((*v5 & *v1) + 0x98));
  if (v16)
  {
    v17 = v16;
    VideoAdProviderMetricsHelper.muteStateChanged(_:)(a1 & 1);

  }
}

void sub_1BA26A09C(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_1BA269F14(a3);

}

uint64_t sub_1BA26A0DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[15];
  char v26;

  v1 = type metadata accessor for PrerollAd();
  MEMORY[0x1E0C80A78](v1);
  v3 = &v25[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for VideoAdPlaybackState();
  MEMORY[0x1E0C80A78](v4);
  v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v7 = (void *)qword_1ED5B2888;
  sub_1BA22D5D8();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BA2C37C0;
  v9 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v10 = *MEMORY[0x1E0DEEDD8] & *v0;
  v11 = (_QWORD *)((char *)v0 + *(_QWORD *)(v10 + 0x68));
  v13 = *v11;
  v12 = v11[1];
  v14 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  v15 = sub_1BA2291C8();
  *(_QWORD *)(v8 + 64) = v15;
  *(_QWORD *)(v8 + 32) = v13;
  *(_QWORD *)(v8 + 40) = v12;
  v16 = (uint64_t)v0 + *(_QWORD *)(v10 + 96);
  v17 = *(_QWORD *)(v16 + 8);
  v18 = *(_QWORD *)(v16 + 16);
  *(_QWORD *)(v8 + 96) = v14;
  *(_QWORD *)(v8 + 104) = v15;
  *(_QWORD *)(v8 + 72) = v17;
  *(_QWORD *)(v8 + 80) = v18;
  v19 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  sub_1BA24AA98(v16, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for PrerollAd);
  v20 = *(void **)((char *)v0 + *(_QWORD *)((*v9 & *v0) + 0xA8));
  v26 = 2;
  swift_unknownObjectRetain();
  sub_1BA2AE7EC((uint64_t)v3, v20, &v26, 0, 1, (uint64_t)v6);
  v21 = (_QWORD *)((char *)v0 + *(_QWORD *)((*v9 & *v0) + 0x90));
  v22 = v21[3];
  v23 = v21[4];
  __swift_project_boxed_opaque_existential_1(v21, v22);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v23 + 48))(v6, v22, v23);
  return sub_1BA258A50((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for VideoAdPlaybackState);
}

void sub_1BA26A310(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BA26A0DC();

}

void sub_1BA26A344(void *a1)
{
  _QWORD *v1;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;

  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v3 = (void *)qword_1ED5B2888;
  sub_1BA22D5D8();
  v4 = swift_allocObject();
  v5 = (_QWORD *)v4;
  *(_OWORD *)(v4 + 16) = xmmword_1BA2C3840;
  v6 = 0xE500000000000000;
  v7 = 0x7473726966;
  switch((unint64_t)a1)
  {
    case 0uLL:
      v6 = 0xE400000000000000;
      v7 = 1701736302;
      break;
    case 1uLL:
      break;
    case 2uLL:
      v6 = 0xE600000000000000;
      v7 = 0x646E6F636573;
      break;
    case 3uLL:
      v7 = 0x6472696874;
      break;
    default:
      v6 = 0xE700000000000000;
      v7 = 0x6E776F6E6B6E75;
      break;
  }
  v8 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  v9 = sub_1BA2291C8();
  v5[8] = v9;
  v5[4] = v7;
  v5[5] = v6;
  v10 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v11 = *MEMORY[0x1E0DEEDD8] & *v1;
  v12 = (_QWORD *)((char *)v1 + *(_QWORD *)(v11 + 0x68));
  v13 = *v12;
  v14 = v12[1];
  v5[12] = v8;
  v5[13] = v9;
  v5[9] = v13;
  v5[10] = v14;
  v15 = (char *)v1 + *(_QWORD *)(v11 + 96);
  v16 = *((_QWORD *)v15 + 1);
  v17 = *((_QWORD *)v15 + 2);
  v5[17] = v8;
  v5[18] = v9;
  v5[14] = v16;
  v5[15] = v17;
  v18 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  v19 = *(void **)((char *)v1 + *(_QWORD *)((*v10 & *v1) + 0x98));
  if (v19)
  {
    v20 = v19;
    VideoAdProviderMetricsHelper.playbackPassed(quartile:)(a1);

  }
}

uint64_t SVVideoQuartile.description.getter(uint64_t a1)
{
  uint64_t result;

  result = 0x7473726966;
  switch(a1)
  {
    case 0:
      result = 1701736302;
      break;
    case 1:
      return result;
    case 2:
      result = 0x646E6F636573;
      break;
    case 3:
      result = 0x6472696874;
      break;
    default:
      result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

void sub_1BA26A5C0(void *a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = a1;
  sub_1BA26A344(a3);

}

void sub_1BA26A600(char a1)
{
  _QWORD *v1;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char *v16;
  void *v17;
  void *v18;
  char *v19;

  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v3 = (void *)qword_1ED5B2888;
  sub_1BA22D5D8();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BA2C37C0;
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v6 = *MEMORY[0x1E0DEEDD8] & *v1;
  v7 = (_QWORD *)((char *)v1 + *(_QWORD *)(v6 + 0x68));
  v9 = *v7;
  v8 = v7[1];
  v10 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  v11 = sub_1BA2291C8();
  *(_QWORD *)(v4 + 64) = v11;
  *(_QWORD *)(v4 + 32) = v9;
  *(_QWORD *)(v4 + 40) = v8;
  v12 = (char *)v1 + *(_QWORD *)(v6 + 96);
  v13 = *((_QWORD *)v12 + 1);
  v14 = *((_QWORD *)v12 + 2);
  *(_QWORD *)(v4 + 96) = v10;
  *(_QWORD *)(v4 + 104) = v11;
  *(_QWORD *)(v4 + 72) = v13;
  *(_QWORD *)(v4 + 80) = v14;
  v15 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  v16 = *(char **)((char *)v1 + *(_QWORD *)((*v5 & *v1) + 0x98));
  if (v16 && (a1 & 1) == 0)
  {
    v17 = *(void **)&v16[OBJC_IVAR____TtC7NewsAds28VideoAdProviderMetricsHelper_mediaMetricsHelper];
    if (v17)
    {
      v18 = *(void **)&v16[OBJC_IVAR____TtC7NewsAds28VideoAdProviderMetricsHelper_metadata];
      v19 = v16;
      objc_msgSend(v18, sel_time);
      objc_msgSend(v17, sel_mediaShowControlsAtPosition_);

    }
  }
}

void sub_1BA26A7B8(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_1BA26A600(a3);

}

uint64_t sub_1BA26A7F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char *v20;
  void *v21;
  void *v22;
  char *v23;
  void *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v29[15];
  char v30;

  v1 = type metadata accessor for PrerollAd();
  MEMORY[0x1E0C80A78](v1);
  v3 = &v29[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for VideoAdPlaybackState();
  MEMORY[0x1E0C80A78](v4);
  v6 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v7 = (void *)qword_1ED5B2888;
  sub_1BA22D5D8();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BA2C37C0;
  v9 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v10 = *MEMORY[0x1E0DEEDD8] & *v0;
  v11 = (_QWORD *)((char *)v0 + *(_QWORD *)(v10 + 0x68));
  v13 = *v11;
  v12 = v11[1];
  v14 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  v15 = sub_1BA2291C8();
  *(_QWORD *)(v8 + 64) = v15;
  *(_QWORD *)(v8 + 32) = v13;
  *(_QWORD *)(v8 + 40) = v12;
  v16 = (uint64_t)v0 + *(_QWORD *)(v10 + 96);
  v17 = *(_QWORD *)(v16 + 8);
  v18 = *(_QWORD *)(v16 + 16);
  *(_QWORD *)(v8 + 96) = v14;
  *(_QWORD *)(v8 + 104) = v15;
  *(_QWORD *)(v8 + 72) = v17;
  *(_QWORD *)(v8 + 80) = v18;
  v19 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  v20 = *(char **)((char *)v0 + *(_QWORD *)((*v9 & *v0) + 0x98));
  if (v20)
  {
    v21 = *(void **)&v20[OBJC_IVAR____TtC7NewsAds28VideoAdProviderMetricsHelper_mediaMetricsHelper];
    if (v21)
    {
      v22 = *(void **)&v20[OBJC_IVAR____TtC7NewsAds28VideoAdProviderMetricsHelper_metadata];
      v23 = v20;
      objc_msgSend(v22, sel_time);
      objc_msgSend(v21, sel_mediaSkippedAtPosition_);

    }
  }
  sub_1BA24AA98(v16, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for PrerollAd);
  v24 = *(void **)((char *)v0 + *(_QWORD *)((*v9 & *v0) + 0xA8));
  v30 = 2;
  swift_unknownObjectRetain();
  sub_1BA2AE7EC((uint64_t)v3, v24, &v30, 0, 1, (uint64_t)v6);
  v25 = (_QWORD *)((char *)v0 + *(_QWORD *)((*v9 & *v0) + 0x90));
  v26 = v25[3];
  v27 = v25[4];
  __swift_project_boxed_opaque_existential_1(v25, v26);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v27 + 40))(v6, v26, v27);
  return sub_1BA258A50((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for VideoAdPlaybackState);
}

void sub_1BA26AA8C(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BA26A7F8();

}

uint64_t sub_1BA26AAC0()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v1 = (void *)qword_1ED5B2888;
  sub_1BA22D5D8();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BA2C37C0;
  v3 = *MEMORY[0x1E0DEEDD8] & *v0;
  v4 = (_QWORD *)((char *)v0 + *(_QWORD *)(v3 + 0x68));
  v6 = *v4;
  v5 = v4[1];
  v7 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  v8 = sub_1BA2291C8();
  *(_QWORD *)(v2 + 64) = v8;
  *(_QWORD *)(v2 + 32) = v6;
  *(_QWORD *)(v2 + 40) = v5;
  v9 = (char *)v0 + *(_QWORD *)(v3 + 96);
  v10 = *((_QWORD *)v9 + 1);
  v11 = *((_QWORD *)v9 + 2);
  *(_QWORD *)(v2 + 96) = v7;
  *(_QWORD *)(v2 + 104) = v8;
  *(_QWORD *)(v2 + 72) = v10;
  *(_QWORD *)(v2 + 80) = v11;
  v12 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  return swift_bridgeObjectRelease();
}

void sub_1BA26ABDC(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BA26AAC0();

}

void sub_1BA26AC10()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98));
  if (v1)
  {
    v2 = *(void **)(v1 + OBJC_IVAR____TtC7NewsAds28VideoAdProviderMetricsHelper_mediaMetricsHelper);
    if (v2)
      objc_msgSend(v2, sel_mediaUserExitedArticle);
  }
}

void sub_1BA26AC50(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BA26AC10();

}

uint64_t (*sub_1BA26AC84(uint64_t a1, uint64_t a2))(_QWORD)
{
  uint64_t *v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  double v11;
  double v12;
  uint64_t v13;
  void *v14;
  uint64_t *v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  _QWORD v28[6];

  v5 = *v2;
  v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v7 = *MEMORY[0x1E0DEEDD8];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = (void *)objc_opt_self();
  v10 = *(void **)((char *)v2 + *(_QWORD *)((*v6 & *v2) + 0x80));
  swift_retain();
  objc_msgSend(v10, sel_prerollLoadingTimeout);
  v12 = v11;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v2;
  *(_QWORD *)(v13 + 24) = v8;
  v28[4] = sub_1BA26C3D0;
  v28[5] = v13;
  v28[0] = MEMORY[0x1E0C809B0];
  v28[1] = 1107296256;
  v28[2] = sub_1BA25237C;
  v28[3] = &block_descriptor_5;
  v14 = _Block_copy(v28);
  v15 = v2;
  swift_retain();
  swift_release();
  v16 = objc_msgSend(v9, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v14, v12);
  _Block_release(v14);
  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v17 = v7 & v5;
  v18 = (void *)qword_1ED5B2888;
  sub_1BA22D5D8();
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BA2C37D0;
  v20 = (uint64_t *)((char *)v15 + *(_QWORD *)((*v6 & *v15) + 0x68));
  v22 = *v20;
  v21 = v20[1];
  *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v19 + 64) = sub_1BA2291C8();
  *(_QWORD *)(v19 + 32) = v22;
  *(_QWORD *)(v19 + 40) = v21;
  v23 = v18;
  swift_bridgeObjectRetain();
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = *(_QWORD *)(v17 + 80);
  v25[3] = *(_QWORD *)(v17 + 88);
  v25[4] = v24;
  v25[5] = v8;
  v25[6] = v16;
  swift_retain();
  swift_retain();
  v26 = v16;
  sub_1BA2C1EA4();
  swift_release();
  swift_release();
  swift_release();

  return nullsub_1;
}

void sub_1BA26AF6C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[12];

  v2 = *MEMORY[0x1E0DEEDD8] & *a2;
  sub_1BA26C864();
  MEMORY[0x1E0C80A78](v3);
  v8[4] = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v2 + 80);
  v6 = type metadata accessor for PrerollAdPlacement();
  v7 = *(_QWORD *)(v2 + 88);
  v8[8] = v5;
  v8[9] = v6;
  v8[10] = v7;
  v8[11] = &protocol witness table for PrerollAdPlacement;
  type metadata accessor for AdRequest();
}

uint64_t sub_1BA26B00C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_1BA2C245C();
  *(_QWORD *)(v4 - 160) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 - 152) = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - v7;
  v9 = v2;
  v10 = (_QWORD *)(v2 + 16);
  if (qword_1ED5B2DB0 != -1)
    swift_once();
  v11 = (id)qword_1ED5B2888;
  sub_1BA2C2390();
  sub_1BA22D5D8();
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BA2C37D0;
  v13 = (_QWORD *)((char *)v1 + *(_QWORD *)((*v3 & *v1) + 0x68));
  v14 = *v13;
  v15 = v13[1];
  *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 64) = sub_1BA2291C8();
  *(_QWORD *)(v12 + 32) = v14;
  *(_QWORD *)(v12 + 40) = v15;
  swift_bridgeObjectRetain();
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  result = swift_beginAccess();
  if (*v10)
  {
    *(_QWORD *)(v4 - 168) = v9;
    v17 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    *(_QWORD *)(v4 - 176) = *(_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x70));
    sub_1BA252488();
    swift_allocError();
    *(_QWORD *)v18 = 1;
    *(_BYTE *)(v18 + 8) = 1;
    v19 = (char *)v1 + *(_QWORD *)((*v17 & *v1) + 0x78);
    v20 = *(_QWORD *)(a1 - 8);
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v8, v19, a1);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v8, 0, 1, a1);
    swift_retain();
    Journal.addFailedEntry(error:request:placementIdentifier:contentIdentifier:)();
  }
  return result;
}

void sub_1BA26B2D4()
{
  type metadata accessor for PrerollAdPlacement();
  type metadata accessor for AdRequest();
}

void sub_1BA26B330(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  id *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[96];

  v7 = sub_1BA2C245C();
  *(_QWORD *)(v5 - 208) = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = &v33[-v8];
  sub_1BA26C864();
  MEMORY[0x1E0C80A78](v10);
  v12 = &v33[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_1BA2C13D0();
  *(_QWORD *)(v5 - 200) = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  swift_beginAccess();
  v14 = MEMORY[0x1BCCD9544](v1 + 16);
  if (v14)
  {
    v15 = (_QWORD *)v14;
    *(_QWORD *)(v5 - 216) = v13;
    swift_beginAccess();
    v16 = *(_QWORD *)(v3 + 16);
    if (v16)
    {
      v17 = *(_QWORD *)(v3 + 24);
      swift_retain();
      if ((objc_msgSend(v2, sel_isValid) & 1) != 0)
        objc_msgSend(v2, sel_invalidate);
      v18 = (id *)((char *)v15 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v15) + 0x60));
      v19 = objc_msgSend(*v18, sel_promotedContentInfo);
      *(_QWORD *)(v5 - 240) = v17;
      *(_QWORD *)(v5 - 232) = v16;
      *(_QWORD *)(v5 - 248) = v12;
      *(_QWORD *)(v5 - 224) = v18;
      if (v19)
      {
        *(_QWORD *)(v5 - 256) = v19;
        if (v4)
        {
          *(_QWORD *)(v5 - 208) = (char *)v15 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v15) + 0x68);
          *(_OWORD *)(v5 - 176) = 0u;
          *(_OWORD *)(v5 - 160) = 0u;
          *(_BYTE *)(v5 - 144) = 1;
          swift_unknownObjectRetain();
          Journal.addFulfilledEntry(request:placementIdentifier:contentIdentifier:layout:)();
        }
        if (qword_1ED5B2DB0 != -1)
          swift_once();
        v26 = (id)qword_1ED5B2888;
        *(_DWORD *)(v5 - 264) = sub_1BA2C2390();
        sub_1BA22D5D8();
        v27 = swift_allocObject();
        *(_OWORD *)(v27 + 16) = xmmword_1BA2C37D0;
        v28 = (_QWORD *)((char *)v15 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v15) + 0x68));
        v29 = *v28;
        v30 = v28[1];
        *(_QWORD *)(v27 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v27 + 64) = sub_1BA2291C8();
        *(_QWORD *)(v27 + 32) = v29;
        *(_QWORD *)(v27 + 40) = v30;
        swift_bridgeObjectRetain();
        sub_1BA2C1EB0();

        swift_bridgeObjectRelease();
        sub_1BA2C1A0C();
        v31 = sub_1BA2C1AA8();
        sub_1BA252488();
        swift_allocError();
        *(_QWORD *)v32 = v31;
        *(_BYTE *)(v32 + 8) = 0;
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(v9, 1, 1, a1);
        Journal.addFailedEntry(error:request:placementIdentifier:contentIdentifier:)();
      }
      if (qword_1ED5B2DB0 != -1)
        swift_once();
      v20 = (id)qword_1ED5B2888;
      sub_1BA2C2390();
      sub_1BA22D5D8();
      v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_1BA2C37D0;
      v22 = (_QWORD *)((char *)v15 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v15) + 0x68));
      v23 = *v22;
      v24 = v22[1];
      *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v21 + 64) = sub_1BA2291C8();
      *(_QWORD *)(v21 + 32) = v23;
      *(_QWORD *)(v21 + 40) = v24;
      swift_bridgeObjectRetain();
      sub_1BA2C1EB0();

      swift_bridgeObjectRelease();
      sub_1BA252488();
      swift_allocError();
      *(_QWORD *)v25 = 0;
      *(_BYTE *)(v25 + 8) = 1;
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(v9, 1, 1, a1);
      Journal.addFailedEntry(error:request:placementIdentifier:contentIdentifier:)();
    }

  }
}

id sub_1BA26BC44(void *a1, int a2, void *aBlock)
{
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  _QWORD v9[6];

  v4 = _Block_copy(aBlock);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  v6 = a1;
  sub_1BA26AC84((uint64_t)sub_1BA26C85C, v5);

  swift_release();
  v9[4] = nullsub_1;
  v9[5] = 0;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1BA223CC0;
  v9[3] = &block_descriptor_16_0;
  v7 = _Block_copy(v9);
  swift_release();
  return v7;
}

id sub_1BA26BD0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v13;

  sub_1BA26C864();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA24AA98(a1, (uint64_t)v6, v7);
  v8 = sub_1BA2C13D0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    v10 = (void *)sub_1BA2C13AC();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  v11 = (id)(*(uint64_t (**)(uint64_t, void *))(a2 + 16))(a2, v10);

  return v11;
}

id VideoAdProvider.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void VideoAdProvider.init()()
{
  sub_1BA26C440();
}

void sub_1BA26BE30()
{
  sub_1BA26C440();
}

id VideoAdProvider.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for VideoAdProvider(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

void sub_1BA26BE98(_QWORD *a1)
{
  _QWORD *v2;

  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  sub_1BA258A50((uint64_t)a1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a1) + 0x60), (uint64_t (*)(_QWORD))type metadata accessor for PrerollAd);
  sub_1BA258A50((uint64_t)a1 + *(_QWORD *)((*v2 & *a1) + 0x68), (uint64_t (*)(_QWORD))type metadata accessor for PrerollAdPlacement);
  swift_release();
  type metadata accessor for PrerollAdPlacement();
  type metadata accessor for AdRequest();
}

uint64_t sub_1BA26BF54(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v2, a1);
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v1 + *(_QWORD *)((*v3 & *v1) + 0x90));

  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_1BA26C010()
{
  _QWORD *v0;
  uint64_t result;

  result = 0x7473726966;
  switch(*v0)
  {
    case 0:
      result = 1701736302;
      break;
    case 1:
      return result;
    case 2:
      result = 0x646E6F636573;
      break;
    case 3:
      result = 0x6472696874;
      break;
    default:
      result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

void sub_1BA26C090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v6;
  char *v7;

  v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  *(_QWORD *)((char *)v3 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v3) + 0x98)) = 0;
  *(_QWORD *)((char *)v3 + *(_QWORD *)((*v6 & *v3) + 0xA0)) = 0;
  *(_QWORD *)((char *)v3 + *(_QWORD *)((*v6 & *v3) + 0xA8)) = 0;
  v7 = (char *)v3 + *(_QWORD *)((*v6 & *v3) + 0xB0);
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  sub_1BA24AA98(a1, (uint64_t)v3 + *(_QWORD *)((*v6 & *v3) + 0x60), (uint64_t (*)(_QWORD))type metadata accessor for PrerollAd);
  sub_1BA24AA98(a2, (uint64_t)v3 + *(_QWORD *)((*v6 & *v3) + 0x68), (uint64_t (*)(_QWORD))type metadata accessor for PrerollAdPlacement);
  *(_QWORD *)((char *)v3 + *(_QWORD *)((*v6 & *v3) + 0x70)) = a3;
  type metadata accessor for PrerollAdPlacement();
  type metadata accessor for AdRequest();
}

id sub_1BA26C1C8(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, objc_super a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v40;
  objc_super v41;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v36, v35, a1);
  *(_QWORD *)((char *)v28 + *(_QWORD *)((*v32 & *v28) + 0x80)) = v33;
  *(_QWORD *)((char *)v28 + *(_QWORD *)((*v32 & *v28) + 0x88)) = v40;
  sub_1BA22068C(v30, (uint64_t)v28 + *(_QWORD *)((*v32 & *v28) + 0x90));
  v41.receiver = v28;
  v41.super_class = (Class)type metadata accessor for VideoAdProvider(0, v31, v34, v37);
  v38 = objc_msgSendSuper2(&v41, sel_init);
  __swift_destroy_boxed_opaque_existential_1(v30);
  sub_1BA258A50(v29, (uint64_t (*)(_QWORD))type metadata accessor for PrerollAdPlacement);
  sub_1BA258A50(v27, (uint64_t (*)(_QWORD))type metadata accessor for PrerollAd);
  return v38;
}

void sub_1BA26C29C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v8;

  v8 = objc_allocWithZone((Class)type metadata accessor for VideoAdProvider(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4));
  sub_1BA26C090(a1, a2, a3);
}

uint64_t sub_1BA26C31C()
{
  _QWORD *v0;

  return *(_QWORD *)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60));
}

unint64_t sub_1BA26C33C()
{
  unint64_t result;

  result = qword_1EF27F0F0;
  if (!qword_1EF27F0F0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF27F0F0);
  }
  return result;
}

uint64_t sub_1BA26C378()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA26C3A4()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1BA26C3D0(uint64_t a1)
{
  uint64_t v1;

  sub_1BA26AF6C(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_1BA26C3D8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BA26C3FC()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1BA26C430()
{
  sub_1BA26B2D4();
}

void sub_1BA26C440()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for VideoAdProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for VideoAdProvider);
}

uint64_t sub_1BA26C478()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for PrerollAd();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for PrerollAdPlacement();
    if (v2 <= 0x3F)
      type metadata accessor for AdRequest();
  }
  return result;
}

uint64_t method lookup function for VideoAdProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VideoAdProvider.__allocating_init(preroll:placement:journal:request:appConfiguration:presentationHandler:tracker:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 280))();
}

uint64_t dispatch thunk of VideoAdProvider.skipThreshold.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of VideoAdProvider.hasAction.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of VideoAdProvider.metricsView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of VideoAdProvider.privacyMarker.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of VideoAdProvider.prerollReadyToPlayTimeout.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of VideoAdProvider.presentAction()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of VideoAdProvider.impressionThreshold.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of VideoAdProvider.startedLoadingVideo()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of VideoAdProvider.finishedLoadingVideo(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of VideoAdProvider.playbackReadyToStart()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of VideoAdProvider.playbackStarted()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of VideoAdProvider.playbackPaused()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of VideoAdProvider.playbackResumed()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of VideoAdProvider.playbackFinished()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of VideoAdProvider.playbackFailedWithError(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of VideoAdProvider.enteredFullscreen()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of VideoAdProvider.exitedFullscreen()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of VideoAdProvider.muteStateChanged(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of VideoAdProvider.playbackPassedImpressionThreshold()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of VideoAdProvider.playbackPassed(quartile:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of VideoAdProvider.tapped(toToggleControlVisibility:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of VideoAdProvider.skipped()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of VideoAdProvider.nextVideoStartedPlaying()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D0))();
}

uint64_t dispatch thunk of VideoAdProvider.willUnload()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D8))();
}

uint64_t dispatch thunk of VideoAdProvider.load(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1E0))();
}

uint64_t sub_1BA26C838()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

id sub_1BA26C85C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA26BD0C(a1, *(_QWORD *)(v1 + 16));
}

void sub_1BA26C864()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF280590)
  {
    sub_1BA2C13D0();
    v0 = sub_1BA2C245C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF280590);
  }
}

unint64_t sub_1BA26C8B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF27F1D8;
  if (!qword_1EF27F1D8)
  {
    v1 = sub_1BA2C13D0();
    result = MEMORY[0x1BCCD93D0](MEMORY[0x1E0CB0048], v1);
    atomic_store(result, (unint64_t *)&qword_1EF27F1D8);
  }
  return result;
}

uint64_t static FirstViewportAdPolicyTraits.== infix(_:_:)()
{
  return 1;
}

uint64_t FirstViewportAdPolicyTraits.hash(into:)()
{
  return sub_1BA2C272C();
}

uint64_t FirstViewportAdPolicyTraits.hashValue.getter()
{
  sub_1BA2C2720();
  sub_1BA2C272C();
  return sub_1BA2C2738();
}

unint64_t FirstViewportAdPolicy.name.getter()
{
  return 0xD000000000000024;
}

uint64_t FirstViewportAdPolicy.validatePlacement(_:in:)@<X0>(double *a1@<X0>, double *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  double v6;
  CGFloat v7;
  double v8;
  double v9;
  double v10;
  CGFloat v11;
  double v12;
  double v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t result;
  BOOL v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  int v41;
  int v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  CGPoint v71;
  CGRect v72;

  v6 = *a1;
  v5 = *((_QWORD *)a1 + 1);
  v7 = a1[2];
  v8 = a1[3];
  v9 = *a2;
  v11 = a2[1];
  v10 = a2[2];
  v12 = a2[11];
  v66 = a2[10];
  v13 = a2[12];
  v14 = *(_QWORD *)(v3 + 16);
  v15 = (*(double (**)(void))v3)();
  v16 = -v13;
  v17 = -v12;
  v18 = v10 * v15;
  v72.origin.x = v16;
  v72.origin.y = v17;
  v72.size.width = v11;
  v72.size.height = v10 * v15;
  v71.x = v7;
  v71.y = v8;
  result = CGRectContainsPoint(v72, v71);
  if (!(_DWORD)result)
    goto LABEL_22;
  if (*(_QWORD *)(v14 + 16))
    v20 = v66 < v10;
  else
    v20 = 0;
  if (!v20)
  {
    swift_bridgeObjectRetain();
    v21 = sub_1BA26CFAC(v15);
    v23 = v22;
    sub_1BA22920C(0, (unint64_t *)&qword_1ED5B2C88, (uint64_t)&type metadata for AdPolicyFailure.Info, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1BA2C37C0;
    type metadata accessor for CGRect(0);
    *(_QWORD *)(v24 + 72) = v25;
    v26 = swift_allocObject();
    *(double *)(v26 + 16) = v16;
    *(double *)(v26 + 24) = v17;
    *(CGFloat *)(v26 + 32) = v11;
    *(double *)(v26 + 40) = v18;
    strcpy((char *)(v24 + 32), "Viewport Size");
    *(_WORD *)(v24 + 46) = -4864;
    *(_QWORD *)(v24 + 48) = v26;
    if (fmod(v15, 1.0) == 0.0)
    {
      sub_1BA22D5D8();
      v27 = swift_allocObject();
      v28 = MEMORY[0x1E0DEB070];
      *(_OWORD *)(v27 + 16) = xmmword_1BA2C37D0;
      v29 = MEMORY[0x1E0DEB100];
      *(_QWORD *)(v27 + 56) = v28;
      *(_QWORD *)(v27 + 64) = v29;
      *(double *)(v27 + 32) = v15;
      v30 = sub_1BA2C2168();
    }
    else
    {
      v30 = sub_1BA2C2300();
    }
    v70 = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v69 = v30;
    *((_QWORD *)&v69 + 1) = v31;
    *(_QWORD *)(v24 + 80) = 0xD000000000000013;
    *(_QWORD *)(v24 + 88) = 0x80000001BA2CFC30;
    result = (uint64_t)sub_1BA22E0C4(&v69, (_OWORD *)(v24 + 96));
    *(double *)a3 = v6;
    *(_QWORD *)(a3 + 8) = v5;
    *(CGFloat *)(a3 + 16) = v7;
    *(double *)(a3 + 24) = v8;
    *(_QWORD *)(a3 + 32) = 0;
    *(_QWORD *)(a3 + 40) = v21;
    *(_QWORD *)(a3 + 48) = v23;
    *(_QWORD *)(a3 + 56) = v24;
    return result;
  }
  *(double *)&v69 = v9;
  v32 = AdPolicyLayoutEnvironment.content(in:)(0.0, v8 + 1.0, v11, v10);
  v33 = *(_QWORD *)(v32 + 16);
  if (!v33)
  {
    result = swift_bridgeObjectRelease();
LABEL_22:
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return result;
  }
  v62 = v6;
  v64 = a3;
  sub_1BA22920C(0, (unint64_t *)&qword_1ED5B2C88, (uint64_t)&type metadata for AdPolicyFailure.Info, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1BA2C4620;
  type metadata accessor for CGRect(0);
  v36 = v35;
  *(_QWORD *)(v34 + 72) = v35;
  v67 = v32;
  v37 = swift_allocObject();
  *(double *)(v37 + 16) = v16;
  *(double *)(v37 + 24) = v17;
  *(CGFloat *)(v37 + 32) = v11;
  *(double *)(v37 + 40) = v18;
  strcpy((char *)(v34 + 32), "Viewport Size");
  *(_WORD *)(v34 + 46) = -4864;
  *(_QWORD *)(v34 + 48) = v37;
  *(_QWORD *)(v34 + 120) = v36;
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = 0;
  *(double *)(v38 + 24) = v8 + 1.0;
  *(CGFloat *)(v38 + 32) = v11;
  *(double *)(v38 + 40) = v10;
  strcpy((char *)(v34 + 80), "Trailing Rect");
  v65 = v34;
  *(_WORD *)(v34 + 94) = -4864;
  *(_QWORD *)(v34 + 96) = v38;
  *(_QWORD *)&v69 = MEMORY[0x1E0DEE9D8];
  v63 = v5;
  swift_bridgeObjectRetain();
  sub_1BA24B61C(0, v33, 0);
  v39 = v69;
  result = sub_1BA26D0EC(v32);
  v40 = result;
  v42 = v41;
  v44 = v43 & 1;
  v68 = v32 + 56;
  do
  {
    if (v40 < 0 || v40 >= 1 << *(_BYTE *)(v32 + 32))
    {
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (((*(_QWORD *)(v68 + (((unint64_t)v40 >> 3) & 0xFFFFFFFFFFFFF8)) >> v40) & 1) == 0)
      goto LABEL_26;
    if (*(_DWORD *)(v32 + 36) != v42)
      goto LABEL_27;
    v45 = sub_1BA2C218C();
    v47 = v46;
    *(_QWORD *)&v69 = v39;
    v49 = *(_QWORD *)(v39 + 16);
    v48 = *(_QWORD *)(v39 + 24);
    if (v49 >= v48 >> 1)
    {
      sub_1BA24B61C((char *)(v48 > 1), v49 + 1, 1);
      v32 = v67;
      v39 = v69;
    }
    *(_QWORD *)(v39 + 16) = v49 + 1;
    v50 = v39 + 16 * v49;
    *(_QWORD *)(v50 + 32) = v45;
    *(_QWORD *)(v50 + 40) = v47;
    result = sub_1BA26D18C(v40, v42, v44 & 1, v32);
    v40 = result;
    v42 = v51;
    v44 = v52 & 1;
    --v33;
  }
  while (v33);
  sub_1BA26D270(result, v51, v52 & 1);
  swift_bridgeObjectRelease();
  v53 = MEMORY[0x1E0DEA968];
  sub_1BA22920C(0, (unint64_t *)&qword_1ED5B2B70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA229294();
  v54 = sub_1BA2C2120();
  v56 = v55;
  swift_bridgeObjectRelease();
  v70 = v53;
  *(_QWORD *)&v69 = v54;
  *((_QWORD *)&v69 + 1) = v56;
  *(_QWORD *)(v65 + 128) = 0x676E696C69617254;
  *(_QWORD *)(v65 + 136) = 0xEF746E65746E6F43;
  sub_1BA22E0C4(&v69, (_OWORD *)(v65 + 144));
  if (fmod(v15, 1.0) == 0.0)
  {
    sub_1BA22D5D8();
    v57 = swift_allocObject();
    v58 = MEMORY[0x1E0DEB070];
    *(_OWORD *)(v57 + 16) = xmmword_1BA2C37D0;
    v59 = MEMORY[0x1E0DEB100];
    *(_QWORD *)(v57 + 56) = v58;
    *(_QWORD *)(v57 + 64) = v59;
    *(double *)(v57 + 32) = v15;
    v60 = sub_1BA2C2168();
  }
  else
  {
    v60 = sub_1BA2C2300();
  }
  v70 = v53;
  *(_QWORD *)&v69 = v60;
  *((_QWORD *)&v69 + 1) = v61;
  *(_QWORD *)(v65 + 176) = 0xD000000000000013;
  *(_QWORD *)(v65 + 184) = 0x80000001BA2CFC30;
  result = (uint64_t)sub_1BA22E0C4(&v69, (_OWORD *)(v65 + 192));
  *(double *)v64 = v62;
  *(_QWORD *)(v64 + 8) = v63;
  *(CGFloat *)(v64 + 16) = v7;
  *(double *)(v64 + 24) = v8;
  *(_OWORD *)(v64 + 32) = xmmword_1BA2C75B0;
  *(_QWORD *)(v64 + 48) = 0x80000001BA2CFC50;
  *(_QWORD *)(v64 + 56) = v65;
  return result;
}

unint64_t sub_1BA26CFAC(long double a1)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (a1 == 1.0)
    return 0xD000000000000024;
  sub_1BA2C24C8();
  swift_bridgeObjectRelease();
  if (fmod(a1, 1.0) == 0.0)
  {
    sub_1BA22D5D8();
    v3 = swift_allocObject();
    v4 = MEMORY[0x1E0DEB070];
    *(_OWORD *)(v3 + 16) = xmmword_1BA2C37D0;
    v5 = MEMORY[0x1E0DEB100];
    *(_QWORD *)(v3 + 56) = v4;
    *(_QWORD *)(v3 + 64) = v5;
    *(long double *)(v3 + 32) = a1;
    sub_1BA2C2168();
  }
  else
  {
    sub_1BA2C2300();
  }
  sub_1BA2C21C8();
  swift_bridgeObjectRelease();
  sub_1BA2C21C8();
  return 0xD00000000000001CLL;
}

uint64_t sub_1BA26D0D8()
{
  return swift_deallocObject();
}

uint64_t sub_1BA26D0EC(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_1BA26D18C(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1BA26D270(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_1BA26D280()
{
  unint64_t result;

  result = qword_1EF27F360;
  if (!qword_1EF27F360)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for FirstViewportAdPolicyTraits, &type metadata for FirstViewportAdPolicyTraits);
    atomic_store(result, (unint64_t *)&qword_1EF27F360);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FirstViewportAdPolicyTraits(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BA26D304 + 4 * byte_1BA2C75C0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BA26D324 + 4 * byte_1BA2C75C5[v4]))();
}

_BYTE *sub_1BA26D304(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BA26D324(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA26D32C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA26D334(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA26D33C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA26D344(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FirstViewportAdPolicyTraits()
{
  return &type metadata for FirstViewportAdPolicyTraits;
}

_QWORD *assignWithCopy for FirstViewportAdPolicy(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for FirstViewportAdPolicy(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FirstViewportAdPolicy(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FirstViewportAdPolicy(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1BA26D49C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v21 = a4;
  v19 = a1;
  v6 = sub_1BA2C1484();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a2;
  v20 = a2[4];
  v11 = a2[5];
  v17 = v10;
  v18 = v11;
  v12 = *a3;
  if (a2[9])
  {
    v16 = a2[8];
  }
  else if (*(_QWORD *)(v12 + 16))
  {
    v16 = *(_QWORD *)(v12 + 32);
    swift_bridgeObjectRetain();
  }
  else
  {
    v16 = 28261;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BA2C1478();
  sub_1BA2C146C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = sub_1BA2C19DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1BA26D650(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v14 = a3;
  v4 = sub_1BA2C1484();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BA2C1460();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a2;
  sub_1BA2C1454();
  sub_1BA2C143C();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (*(_QWORD *)(v12 + 16))
    swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BA2C1478();
  sub_1BA2C146C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_1BA2C19DC();
}

void sub_1BA26D7C8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA26D818(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BA26D8D0 + 4 * byte_1BA2C7699[a2]))(0x69746375646F7270);
}

uint64_t sub_1BA26D8D0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x69746375646F7270 && v1 == 0xEA00000000006E6FLL)
    v2 = 1;
  else
    v2 = sub_1BA2C26A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1BA26D9F0(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x746361706D6F63;
    else
      v3 = 0x6E6564646968;
    if (v2 == 1)
      v4 = 0xE700000000000000;
    else
      v4 = 0xE600000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x746361706D6F63;
      else
        v6 = 0x6E6564646968;
      if (v5 == 1)
        v7 = 0xE700000000000000;
      else
        v7 = 0xE600000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x72616C75676572;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x72616C75676572)
  {
LABEL_21:
    v8 = sub_1BA2C26A8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BA26DB00(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x74736E497261656ELL;
    else
      v3 = 0x646579616C6564;
    if (v2 == 1)
      v4 = 0xEB00000000746E61;
    else
      v4 = 0xE700000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x74736E497261656ELL;
      else
        v6 = 0x646579616C6564;
      if (v5 == 1)
        v7 = 0xEB00000000746E61;
      else
        v7 = 0xE700000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE500000000000000;
    v3 = 0x726576656ELL;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE500000000000000;
  if (v3 != 0x726576656ELL)
  {
LABEL_21:
    v8 = sub_1BA2C26A8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BA26DC20(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x676E696C69617274;
  else
    v3 = 0x676E696461656CLL;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x676E696C69617274;
  else
    v5 = 0x676E696461656CLL;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1BA2C26A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1BA26DCC4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA26DD30(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BA26DDF0 + 4 * byte_1BA2C76A9[a2]))(0x6C63697472416E69);
}

uint64_t sub_1BA26DDF0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C63697472416E69 && v1 == 0xE900000000000065)
    v2 = 1;
  else
    v2 = sub_1BA2C26A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1BA26DF0C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA26DF4C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BA26DFA0 + 4 * byte_1BA2C76B4[a2]))(0x6D6F74746F62);
}

uint64_t sub_1BA26DFA0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6D6F74746F62 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_1BA2C26A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1BA26E038(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6C61756E616DLL;
  else
    v3 = 0x6974616D6F747561;
  if (v2)
    v4 = 0xE900000000000063;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6C61756E616DLL;
  else
    v5 = 0x6974616D6F747561;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE900000000000063;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1BA2C26A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1BA26E0DC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA26E11C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BA26E188 + 4 * byte_1BA2C76BC[a2]))(0x7474656C7377656ELL);
}

uint64_t sub_1BA26E188(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7474656C7377656ELL && v1 == 0xEA00000000007265)
    v2 = 1;
  else
    v2 = sub_1BA2C26A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1BA26E238(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x63696C627570;
  else
    v3 = 0x65746176697270;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x63696C627570;
  else
    v5 = 0x65746176697270;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1BA2C26A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1BA26E2D8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA26E318(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BA26E3E8 + 4 * byte_1BA2C76C8[a2]))(0x656E6E6142796E61);
}

uint64_t sub_1BA26E3E8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x656E6E6142796E61 && v1 == 0xE900000000000072)
    v2 = 1;
  else
    v2 = sub_1BA2C26A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1BA26E518(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x676E696461656CLL;
    else
      v3 = 0x676E696C69617274;
    if (v2 == 1)
      v4 = 0xE700000000000000;
    else
      v4 = 0xE800000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x676E696461656CLL;
      else
        v6 = 0x676E696C69617274;
      if (v5 == 1)
        v7 = 0xE700000000000000;
      else
        v7 = 0xE800000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 1701736302;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v3 != 1701736302)
  {
LABEL_21:
    v8 = sub_1BA2C26A8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BA26E620(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x656873696C627570;
    else
      v3 = 0x646574616C6572;
    if (v2 == 1)
      v4 = 0xE900000000000072;
    else
      v4 = 0xE700000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x656873696C627570;
      else
        v6 = 0x646574616C6572;
      if (v5 == 1)
        v7 = 0xE900000000000072;
      else
        v7 = 0xE700000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 1701736302;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v3 != 1701736302)
  {
LABEL_21:
    v8 = sub_1BA2C26A8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1BA26E730(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA26E770(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BA26E7DC + 4 * byte_1BA2C76D4[a2]))(0x647261646E617473);
}

uint64_t sub_1BA26E7DC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x647261646E617473 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_1BA2C26A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1BA26E88C(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x746361706D6F63;
  else
    v2 = 0x72616C75676572;
  if ((a2 & 1) != 0)
    v3 = 0x746361706D6F63;
  else
    v3 = 0x72616C75676572;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_1BA2C26A8();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

void EngagementBannerAdPolicy.validatePlacement(_:in:)(double *a1@<X0>, double *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  double v5;
  double v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  double v11;
  CGFloat Width;
  CGFloat Height;
  double v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  double *v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  unsigned __int8 v29;
  double *v30;
  char v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;

  v4 = *((_QWORD *)a1 + 1);
  v43 = *a1;
  v5 = a1[3];
  v42 = *((_QWORD *)a1 + 2);
  v6 = *a2;
  v7 = a2[5];
  v8 = a2[6];
  v9 = a2[7];
  v10 = a2[8];
  v44.origin.x = v7;
  v44.origin.y = v8;
  v44.size.width = v9;
  v44.size.height = v10;
  v11 = v5 - CGRectGetHeight(v44);
  v45.origin.x = v7;
  v45.origin.y = v8;
  v45.size.width = v9;
  v45.size.height = v10;
  Width = CGRectGetWidth(v45);
  v46.origin.x = v7;
  v46.origin.y = v8;
  v46.size.width = v9;
  v46.size.height = v10;
  Height = CGRectGetHeight(v46);
  v14 = Height + Height;
  v15 = AdPolicyLayoutEnvironment.content(in:)(0.0, v11, Width, Height + Height);
  v16 = v15;
  v17 = 0;
  v18 = 1 << *(_BYTE *)(v15 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v15 + 56;
  v21 = v19 & *(_QWORD *)(v15 + 56);
  v22 = (unint64_t)(v18 + 63) >> 6;
  v23 = (double *)MEMORY[0x1E0DEE9D8];
  while (v21)
  {
    v24 = __clz(__rbit64(v21));
    v21 &= v21 - 1;
    v25 = v24 | (v17 << 6);
LABEL_21:
    v29 = *(_BYTE *)(*(_QWORD *)(v16 + 48) + v25);
    if ((v29 & 0xC0) == 0x40)
    {
      if ((unint64_t)(v29 & 0x3F) - 2 < 3)
      {
        sub_1BA26EE3C();
        v36 = swift_allocObject();
        *(_OWORD *)(v36 + 16) = xmmword_1BA2C37D0;
        type metadata accessor for CGRect(0);
        *(_QWORD *)(v36 + 72) = v40;
        v41 = swift_allocObject();
        *(_QWORD *)(v41 + 16) = 0;
        *(double *)(v41 + 24) = v11;
        *(CGFloat *)(v41 + 32) = Width;
        *(double *)(v41 + 40) = v14;
        *(_QWORD *)(v36 + 32) = 0x5220686372616553;
        *(_QWORD *)(v36 + 40) = 0xEB00000000746365;
        *(_QWORD *)(v36 + 48) = v41;
        swift_bridgeObjectRetain();
        swift_release();
        *(double *)a3 = v43;
        *(_QWORD *)(a3 + 8) = v4;
        *(_QWORD *)(a3 + 16) = v42;
        *(double *)(a3 + 24) = v5;
        *(_OWORD *)(a3 + 32) = xmmword_1BA2C7720;
        v39 = "Ads and Engagement Banner cannot appear within the same viewport";
        goto LABEL_34;
      }
      if (*(_QWORD *)(*(_QWORD *)&v6 + 16))
      {
        sub_1BA26EDB0(v29);
        v30 = v23;
        if ((v31 & 1) != 0)
          v30 = (double *)swift_bridgeObjectRetain();
        if (*((_QWORD *)v30 + 2))
          goto LABEL_29;
LABEL_4:
        swift_bridgeObjectRelease();
      }
      else
      {
        v30 = v23;
        if (!*((_QWORD *)v23 + 2))
          goto LABEL_4;
LABEL_29:
        v32 = v30[4];
        v33 = v30[5];
        v34 = v30[6];
        v35 = v30[7];
        swift_bridgeObjectRelease();
        v47.origin.x = v32;
        v47.origin.y = v33;
        v47.size.width = v34;
        v47.size.height = v35;
        if (CGRectGetMaxY(v47) <= v5)
        {
          v48.origin.x = v32;
          v48.origin.y = v33;
          v48.size.width = v34;
          v48.size.height = v35;
          if (v5 < CGRectGetMaxY(v48) + 5.0)
          {
            sub_1BA26EE3C();
            v36 = swift_allocObject();
            *(_OWORD *)(v36 + 16) = xmmword_1BA2C37D0;
            type metadata accessor for CGRect(0);
            *(_QWORD *)(v36 + 72) = v37;
            v38 = swift_allocObject();
            *(_QWORD *)(v38 + 16) = 0;
            *(double *)(v38 + 24) = v11;
            *(CGFloat *)(v38 + 32) = Width;
            *(double *)(v38 + 40) = v14;
            *(_QWORD *)(v36 + 32) = 0x5220686372616553;
            *(_QWORD *)(v36 + 40) = 0xEB00000000746365;
            *(_QWORD *)(v36 + 48) = v38;
            swift_bridgeObjectRetain();
            swift_release();
            *(double *)a3 = v43;
            *(_QWORD *)(a3 + 8) = v4;
            *(_QWORD *)(a3 + 16) = v42;
            *(double *)(a3 + 24) = v5;
            *(_OWORD *)(a3 + 32) = xmmword_1BA2C7710;
            v39 = "Ads positioned below Engagement Banner is not allowed for placement";
LABEL_34:
            *(_QWORD *)(a3 + 48) = (unint64_t)(v39 - 32) | 0x8000000000000000;
            *(_QWORD *)(a3 + 56) = v36;
            return;
          }
        }
      }
    }
  }
  v26 = v17 + 1;
  if (!__OFADD__(v17, 1))
  {
    if (v26 >= v22)
      goto LABEL_32;
    v27 = *(_QWORD *)(v20 + 8 * v26);
    ++v17;
    if (!v27)
    {
      v17 = v26 + 1;
      if (v26 + 1 >= v22)
        goto LABEL_32;
      v27 = *(_QWORD *)(v20 + 8 * v17);
      if (!v27)
      {
        v17 = v26 + 2;
        if (v26 + 2 >= v22)
          goto LABEL_32;
        v27 = *(_QWORD *)(v20 + 8 * v17);
        if (!v27)
        {
          v28 = v26 + 3;
          if (v28 >= v22)
          {
LABEL_32:
            swift_release();
            *(_OWORD *)(a3 + 32) = 0u;
            *(_OWORD *)(a3 + 48) = 0u;
            *(_OWORD *)a3 = 0u;
            *(_OWORD *)(a3 + 16) = 0u;
            return;
          }
          v27 = *(_QWORD *)(v20 + 8 * v28);
          if (!v27)
          {
            while (1)
            {
              v17 = v28 + 1;
              if (__OFADD__(v28, 1))
                goto LABEL_36;
              if (v17 >= v22)
                goto LABEL_32;
              v27 = *(_QWORD *)(v20 + 8 * v17);
              ++v28;
              if (v27)
                goto LABEL_20;
            }
          }
          v17 = v28;
        }
      }
    }
LABEL_20:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v17 << 6);
    goto LABEL_21;
  }
  __break(1u);
LABEL_36:
  __break(1u);
}

void sub_1BA26ED1C(double *a1@<X0>, double *a2@<X1>, uint64_t a3@<X8>)
{
  EngagementBannerAdPolicy.validatePlacement(_:in:)(a1, a2, a3);
}

unint64_t sub_1BA26ED30(uint64_t a1)
{
  uint64_t v2;

  sub_1BA2C2150();
  sub_1BA2C2720();
  sub_1BA2C21A4();
  v2 = sub_1BA2C2738();
  swift_bridgeObjectRelease();
  return sub_1BA26EEA0(a1, v2);
}

unint64_t sub_1BA26EDB0(unsigned __int8 a1)
{
  uint64_t v2;

  sub_1BA2C2720();
  if (!(a1 >> 6) || a1 >> 6 == 1)
    sub_1BA2C272C();
  sub_1BA2C272C();
  v2 = sub_1BA2C2738();
  return sub_1BA26F014(a1, v2);
}

void sub_1BA26EE3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B2C88)
  {
    v0 = sub_1BA2C269C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B2C88);
  }
}

uint64_t sub_1BA26EE90()
{
  return swift_deallocObject();
}

unint64_t sub_1BA26EEA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_1BA2C2150();
    v8 = v7;
    if (v6 == sub_1BA2C2150() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1BA2C26A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_1BA2C2150();
          v15 = v14;
          if (v13 == sub_1BA2C2150() && v15 == v16)
            break;
          v18 = sub_1BA2C26A8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1BA26F014(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  unsigned int v7;

  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = ~v4;
    do
    {
      v7 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + result);
      if (v7 >> 6)
      {
        if (v7 >> 6 == 1)
        {
          if ((a1 & 0xC0) == 0x40 && ((v7 ^ a1) & 0x3F) == 0)
            return result;
        }
        else if (a1 == 128)
        {
          return result;
        }
      }
      else if (a1 <= 0x3Fu && v7 == a1)
      {
        return result;
      }
      result = (result + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

uint64_t SponsorshipAdContentInfo.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SponsorshipAdContentInfo.metricsHelper.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SponsorshipAdContentInfo.isInteractive.getter()
{
  return sub_1BA2C1A18() & 1;
}

uint64_t SponsorshipAdContentInfo.isDownloadable.getter()
{
  return sub_1BA2C1A30() & 1;
}

uint64_t SponsorshipAdContentInfo.isVideo.getter()
{
  return sub_1BA2C1A48() & 1;
}

id SponsorshipAdContentInfo.unfilledReason.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 24), sel_unfilledReason);
}

uint64_t SponsorshipAdContentInfo.desiredPosition.getter()
{
  return sub_1BA2C1A3C();
}

uint64_t SponsorshipAdContentInfo.metricsView(for:)()
{
  return sub_1BA2C1DE4();
}

uint64_t sub_1BA26F1CC()
{
  return sub_1BA2C1DE4();
}

uint64_t dispatch thunk of SponsorshipAdContentInfoType.metricsView(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

ValueMetadata *type metadata accessor for SponsorshipAdContentInfo()
{
  return &type metadata for SponsorshipAdContentInfo;
}

uint64_t ArticleBannerAdPlacement.placementIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArticleBannerAdPlacement.desiredPlacement.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleBannerAdPlacement() + 20);
  v4 = sub_1BA2C1AC0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

double ArticleBannerAdPlacement.boundingSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for ArticleBannerAdPlacement() + 24));
}

uint64_t ArticleBannerAdPlacement.insertionType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ArticleBannerAdPlacement();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t ArticleBannerAdPlacement.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ArticleBannerAdPlacement() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArticleBannerAdPlacement.init(placementIdentifier:boundingSize:insertionType:reuseIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>, double a7@<D0>, double a8@<D1>)
{
  char v15;
  int *v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  double *v25;
  _QWORD *v26;

  v15 = *a3;
  v16 = (int *)type metadata accessor for ArticleBannerAdPlacement();
  v17 = (_QWORD *)((char *)a6 + v16[5]);
  sub_1BA220BB8();
  v19 = (char *)v17 + *(int *)(v18 + 48);
  *v17 = 1;
  v20 = *MEMORY[0x1E0D81B90];
  v21 = sub_1BA2C1A54();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v19, v20, v21);
  v22 = *MEMORY[0x1E0D81E88];
  v23 = sub_1BA2C1AC0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v17, v22, v23);
  *a6 = a1;
  a6[1] = a2;
  v25 = (double *)((char *)a6 + v16[6]);
  *v25 = a7;
  v25[1] = a8;
  *((_BYTE *)a6 + v16[7]) = v15;
  v26 = (_QWORD *)((char *)a6 + v16[8]);
  *v26 = a4;
  v26[1] = a5;
  return result;
}

uint64_t sub_1BA26F428(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 32));
  swift_bridgeObjectRetain();
  return v2;
}

_QWORD *initializeBufferWithCopyOfBuffer for ArticleBannerAdPlacement(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BA2C1AC0();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[7];
    *(_OWORD *)((char *)v4 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
    *((_BYTE *)v4 + v13) = *((_BYTE *)a2 + v13);
    v14 = a3[8];
    v15 = (_QWORD *)((char *)v4 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ArticleBannerAdPlacement(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BA2C1AC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ArticleBannerAdPlacement(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BA2C1AC0();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  v13 = a3[8];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ArticleBannerAdPlacement(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BA2C1AC0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v13 = a3[8];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for ArticleBannerAdPlacement(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BA2C1AC0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

_QWORD *assignWithTake for ArticleBannerAdPlacement(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BA2C1AC0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  v12 = a3[8];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleBannerAdPlacement()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA26F854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BA2C1AC0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ArticleBannerAdPlacement()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA26F8DC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BA2C1AC0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t dispatch thunk of NewsSupplementalContextProviding.newsSupplementalContext.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1BA26F958(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  unint64_t v3;

  if (*(_QWORD *)(result + 8) && a2[1])
  {
    v2 = a2[5];
    v3 = *(_QWORD *)(result + 16);
    if ((a2[2] & 1) != 0 || v2 >= 1)
    {
      swift_bridgeObjectRetain();
      sub_1BA2C1B5C();
      swift_bridgeObjectRetain();
      sub_1BA2C1D6C();
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_1BA2C1B5C();
      swift_bridgeObjectRetain();
      sub_1BA2C1D6C();
    }
    sub_1BA2C1D60();
    swift_bridgeObjectRetain();
    sub_1BA2C1D90();
    objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v2);
    sub_1BA2C1B74();
    objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, (v3 >> 8) & 1);
    sub_1BA2C1D3C();
    swift_bridgeObjectRetain();
    sub_1BA2C1CD0();
    objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, v3 & 1);
    return sub_1BA2C1DA8();
  }
  return result;
}

uint64_t sub_1BA26FACC(uint64_t result)
{
  uint64_t v1;

  if (*(_QWORD *)(result + 8))
  {
    v1 = *(_QWORD *)(result + 40);
    swift_bridgeObjectRetain();
    sub_1BA2C1BF8();
    swift_bridgeObjectRetain();
    sub_1BA2C1BA4();
    swift_bridgeObjectRetain();
    sub_1BA2C1B8C();
    swift_bridgeObjectRetain();
    sub_1BA2C1BB0();
    swift_bridgeObjectRetain();
    sub_1BA2C1BD4();
    objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v1);
    return sub_1BA2C1C28();
  }
  return result;
}

uint64_t sub_1BA26FBA0(uint64_t result)
{
  uint64_t v1;

  if (*(_QWORD *)(result + 8))
  {
    v1 = *(_QWORD *)(result + 40);
    swift_bridgeObjectRetain();
    sub_1BA2C1C04();
    swift_bridgeObjectRetain();
    sub_1BA2C1BBC();
    swift_bridgeObjectRetain();
    sub_1BA2C1B98();
    swift_bridgeObjectRetain();
    sub_1BA2C1BC8();
    swift_bridgeObjectRetain();
    sub_1BA2C1BE0();
    objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v1);
    return sub_1BA2C1C34();
  }
  return result;
}

uint64_t sub_1BA26FC74(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  unint64_t v3;

  if (*(_QWORD *)(result + 8) && a2[1])
  {
    v2 = a2[5];
    v3 = *(_QWORD *)(result + 16);
    if ((a2[2] & 1) != 0 || v2 >= 1)
    {
      swift_bridgeObjectRetain();
      sub_1BA2C1B44();
      swift_bridgeObjectRetain();
      sub_1BA2C1D48();
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_1BA2C1B44();
      swift_bridgeObjectRetain();
      sub_1BA2C1D48();
    }
    sub_1BA2C1D30();
    swift_bridgeObjectRetain();
    sub_1BA2C1D78();
    objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v2);
    sub_1BA2C1B68();
    objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, (v3 >> 8) & 1);
    sub_1BA2C1D24();
    swift_bridgeObjectRetain();
    return sub_1BA2C1C70();
  }
  return result;
}

void sub_1BA26FDCC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B2CA8)
  {
    v0 = sub_1BA2C269C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B2CA8);
  }
}

uint64_t destroy for DebugNativeAdContentInfo()
{
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for DebugNativeAdContentInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugNativeAdContentInfo(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for DebugNativeAdContentInfo(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for DebugNativeAdContentInfo()
{
  return &type metadata for DebugNativeAdContentInfo;
}

uint64_t sub_1BA26FF9C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

id sub_1BA26FFA4()
{
  type metadata accessor for DebugAdsMetricsView();
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

uint64_t sub_1BA26FFD8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t sub_1BA26FFE0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_1BA26FFE8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 26);
}

uint64_t sub_1BA26FFF0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t dispatch thunk of AdPolicyType.validatePlacement(_:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t NativeAd.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  int EnumCaseMultiPayload;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _OWORD v20[5];
  uint64_t v21;

  v1 = v0;
  v2 = type metadata accessor for NativeAdHeadline(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t *)((char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for NativeAd.Headline(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v20 - v9;
  v11 = type metadata accessor for NativeAd(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA24AA98(v1, (uint64_t)v13, v14);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    v16 = *((_OWORD *)v13 + 3);
    v20[2] = *((_OWORD *)v13 + 2);
    v20[3] = v16;
    v20[4] = *((_OWORD *)v13 + 4);
    v21 = *((_QWORD *)v13 + 10);
    v17 = *((_OWORD *)v13 + 1);
    v20[0] = *(_OWORD *)v13;
    v20[1] = v17;
    v18 = v17;
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRetain();
      sub_1BA2530B4((uint64_t)v20);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1BA253088((uint64_t)v20);
    }
  }
  else
  {
    sub_1BA258B3C((uint64_t)v13, (uint64_t)v10, type metadata accessor for NativeAd.Headline);
    sub_1BA24AA98((uint64_t)v10, (uint64_t)v8, type metadata accessor for NativeAd.Headline);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = *v8;
      swift_unknownObjectRelease();
    }
    else
    {
      sub_1BA258B3C((uint64_t)v8, (uint64_t)v4, type metadata accessor for NativeAdHeadline);
      v18 = *v4;
      swift_bridgeObjectRetain();
      sub_1BA258A50((uint64_t)v4, type metadata accessor for NativeAdHeadline);
    }
    sub_1BA258A50((uint64_t)v10, type metadata accessor for NativeAd.Headline);
  }
  return v18;
}

uint64_t NativeAd.placementIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  int EnumCaseMultiPayload;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _OWORD v20[5];
  uint64_t v21;

  v1 = v0;
  v2 = type metadata accessor for NativeAdHeadline(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t *)((char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for NativeAd.Headline(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v20 - v9;
  v11 = type metadata accessor for NativeAd(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA24AA98(v1, (uint64_t)v13, v14);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    v16 = *((_OWORD *)v13 + 3);
    v20[2] = *((_OWORD *)v13 + 2);
    v20[3] = v16;
    v20[4] = *((_OWORD *)v13 + 4);
    v21 = *((_QWORD *)v13 + 10);
    v17 = *((_OWORD *)v13 + 1);
    v20[0] = *(_OWORD *)v13;
    v20[1] = v17;
    v18 = *(_QWORD *)&v20[0];
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRetain();
      sub_1BA2530B4((uint64_t)v20);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1BA253088((uint64_t)v20);
    }
  }
  else
  {
    sub_1BA258B3C((uint64_t)v13, (uint64_t)v10, type metadata accessor for NativeAd.Headline);
    sub_1BA24AA98((uint64_t)v10, (uint64_t)v8, type metadata accessor for NativeAd.Headline);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = *v8;
      swift_unknownObjectRelease();
    }
    else
    {
      sub_1BA258B3C((uint64_t)v8, (uint64_t)v4, type metadata accessor for NativeAdHeadline);
      v18 = *v4;
      swift_bridgeObjectRetain();
      sub_1BA258A50((uint64_t)v4, type metadata accessor for NativeAdHeadline);
    }
    sub_1BA258A50((uint64_t)v10, type metadata accessor for NativeAd.Headline);
  }
  return v18;
}

uint64_t _s7NewsAds8NativeAdO8HeadlineO10identifierSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v10;

  v1 = type metadata accessor for NativeAdHeadline(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (uint64_t *)((char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for NativeAd.Headline(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA24AA98(v0, (uint64_t)v6, v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = *v6;
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1BA258B3C((uint64_t)v6, (uint64_t)v3, type metadata accessor for NativeAdHeadline);
    v8 = *v3;
    swift_bridgeObjectRetain();
    sub_1BA258A50((uint64_t)v3, type metadata accessor for NativeAdHeadline);
  }
  return v8;
}

uint64_t NativeAd.desiredPosition.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  int EnumCaseMultiPayload;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD v25[2];
  _OWORD v26[2];
  __int128 v27;
  uint64_t v28;

  v1 = v0;
  v2 = type metadata accessor for NativeAdHeadline(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for NativeAd.Headline(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v25 - v9;
  v11 = type metadata accessor for NativeAd(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA24AA98(v1, (uint64_t)v13, v14);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    v16 = *((_OWORD *)v13 + 4);
    v26[1] = *((_OWORD *)v13 + 3);
    v27 = v16;
    v17 = *((_OWORD *)v13 + 2);
    v25[1] = *((_OWORD *)v13 + 1);
    v26[0] = v17;
    v28 = *((_QWORD *)v13 + 10);
    v25[0] = *(_OWORD *)v13;
    v18 = v27;
    if (EnumCaseMultiPayload == 1)
    {
      __swift_project_boxed_opaque_existential_1((_QWORD *)v26 + 1, v27);
      v19 = (*(uint64_t (**)(_QWORD, _QWORD))(*((_QWORD *)&v18 + 1) + 16))(v18, *((_QWORD *)&v18 + 1));
      sub_1BA2530B4((uint64_t)v25);
    }
    else
    {
      __swift_project_boxed_opaque_existential_1((_QWORD *)v26 + 1, v27);
      v19 = (*(uint64_t (**)(_QWORD, _QWORD))(*((_QWORD *)&v18 + 1) + 16))(v18, *((_QWORD *)&v18 + 1));
      sub_1BA253088((uint64_t)v25);
    }
  }
  else
  {
    sub_1BA258B3C((uint64_t)v13, (uint64_t)v10, type metadata accessor for NativeAd.Headline);
    sub_1BA24AA98((uint64_t)v10, (uint64_t)v8, type metadata accessor for NativeAd.Headline);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = *((_QWORD *)v8 + 3);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA258B3C((uint64_t)v8, (uint64_t)v4, type metadata accessor for NativeAdHeadline);
      v20 = *(int *)(v2 + 24);
      v21 = &v4[v20 + *(int *)(type metadata accessor for NativeAdInfo.Fulfilled(0) + 48)];
      v22 = *((_QWORD *)v21 + 3);
      v23 = *((_QWORD *)v21 + 4);
      __swift_project_boxed_opaque_existential_1(v21, v22);
      v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
      sub_1BA258A50((uint64_t)v4, type metadata accessor for NativeAdHeadline);
    }
    sub_1BA258A50((uint64_t)v10, type metadata accessor for NativeAd.Headline);
  }
  return v19;
}

uint64_t NativeAd.Headline.desiredPosition.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for NativeAdHeadline(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for NativeAd.Headline(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA24AA98(v1, (uint64_t)v7, v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = *((_QWORD *)v7 + 3);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA258B3C((uint64_t)v7, (uint64_t)v4, type metadata accessor for NativeAdHeadline);
    v10 = *(int *)(v2 + 24);
    v11 = &v4[v10 + *(int *)(type metadata accessor for NativeAdInfo.Fulfilled(0) + 48)];
    v12 = *((_QWORD *)v11 + 3);
    v13 = *((_QWORD *)v11 + 4);
    __swift_project_boxed_opaque_existential_1(v11, v12);
    v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
    sub_1BA258A50((uint64_t)v4, type metadata accessor for NativeAdHeadline);
  }
  return v9;
}

uint64_t NativeAd.discard(policyFailures:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD);
  int EnumCaseMultiPayload;
  __int128 v29;
  __int128 v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v38;
  uint64_t v39;
  _QWORD v40[2];
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD v47[5];
  uint64_t v48;

  v3 = v2;
  v44 = a1;
  v46 = a2;
  v4 = type metadata accessor for NativeAdHeadline(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA270EA4();
  MEMORY[0x1E0C80A78](v7);
  v42 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for NativeAdInfo(0);
  v9 = *(_QWORD *)(v45 - 8);
  v10 = MEMORY[0x1E0C80A78](v45);
  v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v40 - v13;
  v15 = type metadata accessor for NativeAd.Headline(0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v40 - v19;
  v21 = type metadata accessor for NativeAd(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = v3;
  v24 = v3;
  v26 = v25;
  sub_1BA24AA98(v24, (uint64_t)v23, v27);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      sub_1BA24AA98(v43, v46, type metadata accessor for NativeAd);
      return sub_1BA258A50((uint64_t)v23, type metadata accessor for NativeAd);
    }
    v29 = *((_OWORD *)v23 + 3);
    v47[2] = *((_OWORD *)v23 + 2);
    v47[3] = v29;
    v47[4] = *((_OWORD *)v23 + 4);
    v48 = *((_QWORD *)v23 + 10);
    v30 = *((_OWORD *)v23 + 1);
    v47[0] = *(_OWORD *)v23;
    v47[1] = v30;
    sub_1BA2547E8((uint64_t)v47, (uint64_t)v12);
    swift_storeEnumTagMultiPayload();
    NativeAdInfo.discard(policyFailures:)(v44, v46);
    sub_1BA258A50((uint64_t)v12, type metadata accessor for NativeAdInfo);
    sub_1BA2530B4((uint64_t)v47);
  }
  else
  {
    v40[1] = v26;
    sub_1BA258B3C((uint64_t)v23, (uint64_t)v20, type metadata accessor for NativeAd.Headline);
    v41 = v20;
    sub_1BA24AA98((uint64_t)v20, (uint64_t)v18, type metadata accessor for NativeAd.Headline);
    v31 = swift_getEnumCaseMultiPayload();
    v32 = (uint64_t)v14;
    v34 = v45;
    v33 = v46;
    v35 = (uint64_t)v42;
    if (v31 == 1)
    {
      sub_1BA258A50((uint64_t)v18, type metadata accessor for NativeAd.Headline);
      v36 = 1;
    }
    else
    {
      sub_1BA258B3C((uint64_t)v18, (uint64_t)v6, type metadata accessor for NativeAdHeadline);
      sub_1BA24AA98((uint64_t)&v6[*(int *)(v4 + 24)], v35, type metadata accessor for NativeAdInfo.Fulfilled);
      sub_1BA258A50((uint64_t)v6, type metadata accessor for NativeAdHeadline);
      swift_storeEnumTagMultiPayload();
      v36 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v35, v36, 1, v34);
    v38 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v35, 1, v34);
    v39 = (uint64_t)v41;
    if (v38 == 1)
    {
      sub_1BA258A50((uint64_t)v41, type metadata accessor for NativeAd.Headline);
      sub_1BA258A50(v35, (uint64_t (*)(_QWORD))sub_1BA270EA4);
      return sub_1BA24AA98(v43, v33, type metadata accessor for NativeAd);
    }
    sub_1BA258B3C(v35, v32, type metadata accessor for NativeAdInfo);
    NativeAdInfo.discard(policyFailures:)(v44, v33);
    sub_1BA258A50(v32, type metadata accessor for NativeAdInfo);
    sub_1BA258A50(v39, type metadata accessor for NativeAd.Headline);
  }
  return swift_storeEnumTagMultiPayload();
}

uint64_t NativeAd.Headline.nativeInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  v4 = type metadata accessor for NativeAdHeadline(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for NativeAd.Headline(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA24AA98(v2, (uint64_t)v9, v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA258A50((uint64_t)v9, type metadata accessor for NativeAd.Headline);
    v11 = type metadata accessor for NativeAdInfo(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
  else
  {
    sub_1BA258B3C((uint64_t)v9, (uint64_t)v6, type metadata accessor for NativeAdHeadline);
    sub_1BA24AA98((uint64_t)&v6[*(int *)(v4 + 24)], a1, type metadata accessor for NativeAdInfo.Fulfilled);
    sub_1BA258A50((uint64_t)v6, type metadata accessor for NativeAdHeadline);
    v13 = type metadata accessor for NativeAdInfo(0);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a1, 0, 1, v13);
  }
}

void sub_1BA270EA4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B0F60)
  {
    type metadata accessor for NativeAdInfo(255);
    v0 = sub_1BA2C245C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B0F60);
  }
}

Swift::Void __swiftcall NativeAd.markPresented()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD v23[2];
  char v24;

  v1 = v0;
  v2 = type metadata accessor for NativeAdHeadline(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for NativeAd.Headline(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v23 - v9;
  v11 = type metadata accessor for NativeAd(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA24AA98(v1, (uint64_t)v13, v14);
  if (swift_getEnumCaseMultiPayload())
  {
    v15 = type metadata accessor for NativeAd;
    v16 = (uint64_t)v13;
  }
  else
  {
    sub_1BA258B3C((uint64_t)v13, (uint64_t)v10, type metadata accessor for NativeAd.Headline);
    sub_1BA24AA98((uint64_t)v10, (uint64_t)v8, type metadata accessor for NativeAd.Headline);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1BA258A50((uint64_t)v10, type metadata accessor for NativeAd.Headline);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    sub_1BA258B3C((uint64_t)v8, (uint64_t)v4, type metadata accessor for NativeAdHeadline);
    v17 = (uint64_t *)&v4[*(int *)(v2 + 24)];
    v18 = (uint64_t)v17 + *(int *)(type metadata accessor for NativeAdInfo.Fulfilled(0) + 44);
    v19 = *v17;
    v20 = v17[1];
    v21 = v17[10];
    v22 = v17[11];
    memset(v23, 0, sizeof(v23));
    v24 = 1;
    sub_1BA2529B4(v18, v19, v20, v21, v22, (uint64_t)v23);
    sub_1BA258A50((uint64_t)v4, type metadata accessor for NativeAdHeadline);
    v15 = type metadata accessor for NativeAd.Headline;
    v16 = (uint64_t)v10;
  }
  sub_1BA258A50(v16, v15);
}

uint64_t NativeAd.Headline.headline.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = type metadata accessor for NativeAdHeadline(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for NativeAd.Headline(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA24AA98(v1, (uint64_t)v7, v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = *((_QWORD *)v7 + 2);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA258B3C((uint64_t)v7, (uint64_t)v4, type metadata accessor for NativeAdHeadline);
    v9 = *((_QWORD *)v4 + 2);
    swift_unknownObjectRetain();
    sub_1BA258A50((uint64_t)v4, type metadata accessor for NativeAdHeadline);
  }
  return v9;
}

uint64_t NativeAd.Headline.hashValue.getter()
{
  return sub_1BA271490(type metadata accessor for NativeAd.Headline, &qword_1EF27F368, (uint64_t)&protocol conformance descriptor for NativeAd.Headline);
}

uint64_t sub_1BA271224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v9;

  v1 = type metadata accessor for NativeAdHeadline(0);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (uint64_t *)((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v2);
  v6 = (uint64_t *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA24AA98(v0, (uint64_t)v6, type metadata accessor for NativeAd.Headline);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = *v6;
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1BA258B3C((uint64_t)v6, (uint64_t)v4, type metadata accessor for NativeAdHeadline);
    v7 = *v4;
    swift_bridgeObjectRetain();
    sub_1BA258A50((uint64_t)v4, type metadata accessor for NativeAdHeadline);
  }
  return v7;
}

uint64_t sub_1BA271328()
{
  sub_1BA221230(&qword_1EF27F3C8, type metadata accessor for NativeAd.Headline, (uint64_t)&protocol conformance descriptor for NativeAd.Headline);
  return sub_1BA2C19AC();
}

uint64_t NativeAdHeadline.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NativeAdHeadline.headline.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t NativeAdHeadline.info.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for NativeAdHeadline(0);
  return sub_1BA24AA98(v1 + *(int *)(v3 + 24), a1, type metadata accessor for NativeAdInfo.Fulfilled);
}

uint64_t NativeAdHeadline.journal.getter()
{
  type metadata accessor for NativeAdHeadline(0);
  return swift_retain();
}

uint64_t NativeAdHeadline.init(identifier:headline:info:journal:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v9;
  uint64_t result;

  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  v9 = type metadata accessor for NativeAdHeadline(0);
  result = sub_1BA258B3C(a4, (uint64_t)a6 + *(int *)(v9 + 24), type metadata accessor for NativeAdInfo.Fulfilled);
  *(_QWORD *)((char *)a6 + *(int *)(v9 + 28)) = a5;
  return result;
}

uint64_t NativeAdHeadline.hashValue.getter()
{
  return sub_1BA271490(type metadata accessor for NativeAdHeadline, &qword_1EF27F370, (uint64_t)&protocol conformance descriptor for NativeAdHeadline);
}

uint64_t sub_1BA271490(uint64_t (*a1)(uint64_t), unint64_t *a2, uint64_t a3)
{
  sub_1BA2C2720();
  a1(0);
  sub_1BA221230(a2, a1, a3);
  sub_1BA2C2108();
  return sub_1BA2C2738();
}

uint64_t sub_1BA27150C()
{
  sub_1BA2C2720();
  sub_1BA2C2108();
  return sub_1BA2C2738();
}

uint64_t sub_1BA271560()
{
  sub_1BA221230(&qword_1EF27F3C0, type metadata accessor for NativeAdHeadline, (uint64_t)&protocol conformance descriptor for NativeAdHeadline);
  return sub_1BA2C19AC();
}

uint64_t sub_1BA2715B0()
{
  sub_1BA2C2720();
  sub_1BA2C2108();
  return sub_1BA2C2738();
}

uint64_t DebugNativeAdHeadline.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DebugNativeAdHeadline.headline.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t DebugNativeAdHeadline.desiredPosition.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t DebugNativeAdHeadline.init(identifier:headline:desiredPosition:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  BOOL v10;
  uint64_t result;
  uint64_t v14;
  char v15;

  v10 = a4 == 1701736302 && a5 == 0xE400000000000000;
  if (v10 || (sub_1BA2C26A8() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v14 = 0;
  }
  else if (a4 == 0x656873696C627570 && a5 == 0xE900000000000072 || (sub_1BA2C26A8() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v14 = 1102;
  }
  else if (a4 == 0x646574616C6572 && a5 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v14 = 1101;
  }
  else
  {
    v15 = sub_1BA2C26A8();
    result = swift_bridgeObjectRelease();
    v14 = 1101;
    if ((v15 & 1) == 0)
      v14 = 0;
  }
  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = v14;
  return result;
}

uint64_t DebugNativeAdHeadline.hashValue.getter()
{
  sub_1BA2C2720();
  sub_1BA2720C4();
  sub_1BA2C2108();
  return sub_1BA2C2738();
}

uint64_t sub_1BA271820()
{
  sub_1BA2C2720();
  sub_1BA2C2108();
  return sub_1BA2C2738();
}

uint64_t sub_1BA271890()
{
  sub_1BA2779DC();
  return sub_1BA2C19AC();
}

uint64_t sub_1BA2718C8()
{
  sub_1BA2C2720();
  sub_1BA2C2108();
  return sub_1BA2C2738();
}

uint64_t _s7NewsAds16NativeAdHeadlineV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  uint64_t v16;
  uint64_t v17;
  id *v18;
  uint64_t v19;
  id *v20;
  char v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v31;
  uint64_t v32;
  unsigned int v33;
  unsigned int v34;
  char v35;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;

  v4 = type metadata accessor for NativeAdHeadline(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v37 - v9;
  v11 = MEMORY[0x1E0C80A78](v8);
  v40 = (uint64_t)&v37 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (id *)((char *)&v37 - v14);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (id *)((char *)&v37 - v17);
  MEMORY[0x1E0C80A78](v16);
  v20 = (id *)((char *)&v37 - v19);
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_1BA24AA98((uint64_t)a1, (uint64_t)&v37 - v19, type metadata accessor for NativeAdHeadline);
    sub_1BA24AA98((uint64_t)a2, (uint64_t)v18, type metadata accessor for NativeAdHeadline);
  }
  else
  {
    v21 = sub_1BA2C26A8();
    sub_1BA24AA98((uint64_t)a1, (uint64_t)v20, type metadata accessor for NativeAdHeadline);
    sub_1BA24AA98((uint64_t)a2, (uint64_t)v18, type metadata accessor for NativeAdHeadline);
    if ((v21 & 1) == 0)
    {
      sub_1BA258A50((uint64_t)v20, type metadata accessor for NativeAdHeadline);
      sub_1BA258A50((uint64_t)v18, type metadata accessor for NativeAdHeadline);
      sub_1BA24AA98((uint64_t)a1, (uint64_t)v15, type metadata accessor for NativeAdHeadline);
      v32 = v40;
      sub_1BA24AA98((uint64_t)a2, v40, type metadata accessor for NativeAdHeadline);
LABEL_15:
      sub_1BA258A50((uint64_t)v15, type metadata accessor for NativeAdHeadline);
      sub_1BA258A50(v32, type metadata accessor for NativeAdHeadline);
      sub_1BA24AA98((uint64_t)a1, (uint64_t)v10, type metadata accessor for NativeAdHeadline);
      sub_1BA24AA98((uint64_t)a2, (uint64_t)v7, type metadata accessor for NativeAdHeadline);
      goto LABEL_16;
    }
  }
  v37 = v4;
  v38 = v10;
  v39 = v7;
  v22 = objc_msgSend(v20[2], sel_identifier, v4);
  v23 = sub_1BA2C2150();
  v25 = v24;

  v26 = objc_msgSend(v18[2], sel_identifier);
  v27 = sub_1BA2C2150();
  v29 = v28;

  if (v23 == v27 && v25 == v29)
  {
    swift_bridgeObjectRelease_n();
    sub_1BA258A50((uint64_t)v20, type metadata accessor for NativeAdHeadline);
    sub_1BA258A50((uint64_t)v18, type metadata accessor for NativeAdHeadline);
    sub_1BA24AA98((uint64_t)a1, (uint64_t)v15, type metadata accessor for NativeAdHeadline);
    v32 = v40;
    sub_1BA24AA98((uint64_t)a2, v40, type metadata accessor for NativeAdHeadline);
    v10 = v38;
    v7 = v39;
  }
  else
  {
    v31 = sub_1BA2C26A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA258A50((uint64_t)v20, type metadata accessor for NativeAdHeadline);
    sub_1BA258A50((uint64_t)v18, type metadata accessor for NativeAdHeadline);
    sub_1BA24AA98((uint64_t)a1, (uint64_t)v15, type metadata accessor for NativeAdHeadline);
    v32 = v40;
    sub_1BA24AA98((uint64_t)a2, v40, type metadata accessor for NativeAdHeadline);
    v10 = v38;
    v7 = v39;
    if ((v31 & 1) == 0)
      goto LABEL_15;
  }
  v33 = objc_msgSend(v15[2], sel_isDisplayingAsNativeAd);
  v34 = objc_msgSend(*(id *)(v32 + 16), sel_isDisplayingAsNativeAd);
  sub_1BA258A50((uint64_t)v15, type metadata accessor for NativeAdHeadline);
  sub_1BA258A50(v32, type metadata accessor for NativeAdHeadline);
  sub_1BA24AA98((uint64_t)a1, (uint64_t)v10, type metadata accessor for NativeAdHeadline);
  sub_1BA24AA98((uint64_t)a2, (uint64_t)v7, type metadata accessor for NativeAdHeadline);
  if (v33 != v34)
  {
LABEL_16:
    v35 = 0;
    goto LABEL_17;
  }
  v35 = _s7NewsAds12NativeAdInfoO9FulfilledV2eeoiySbAE_AEtFZ_0(&v10[*(int *)(v37 + 24)], &v7[*(int *)(v37 + 24)]);
LABEL_17:
  sub_1BA258A50((uint64_t)v7, type metadata accessor for NativeAdHeadline);
  sub_1BA258A50((uint64_t)v10, type metadata accessor for NativeAdHeadline);
  return v35 & 1;
}

BOOL _s7NewsAds21DebugNativeAdHeadlineV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  void *v2;
  void *v3;
  BOOL v4;
  char v5;
  _BOOL8 result;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;

  v2 = (void *)a1[2];
  v3 = (void *)a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_1BA2C26A8(), result = 0, (v5 & 1) != 0))
  {
    v7 = objc_msgSend(v2, sel_identifier);
    v8 = sub_1BA2C2150();
    v10 = v9;

    v11 = objc_msgSend(v3, sel_identifier);
    v12 = sub_1BA2C2150();
    v14 = v13;

    if (v8 == v12 && v10 == v14)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v16 = sub_1BA2C26A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = 0;
      if ((v16 & 1) == 0)
        return result;
    }
    v17 = sub_1BA2C1AB4();
    return v17 == sub_1BA2C1AB4();
  }
  return result;
}

uint64_t _s7NewsAds8NativeAdO8HeadlineO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t (*v27)(_QWORD);
  _QWORD v29[4];
  _QWORD v30[4];

  v4 = type metadata accessor for NativeAdHeadline(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (_QWORD *)((char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for NativeAd.Headline(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (_QWORD *)((char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v8);
  v12 = (_QWORD *)((char *)v29 - v11);
  sub_1BA277A20();
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = &v16[*(int *)(v14 + 48)];
  sub_1BA24AA98(a1, (uint64_t)v16, type metadata accessor for NativeAd.Headline);
  sub_1BA24AA98(a2, (uint64_t)v17, type metadata accessor for NativeAd.Headline);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA24AA98((uint64_t)v16, (uint64_t)v10, type metadata accessor for NativeAd.Headline);
    v18 = v10[1];
    v19 = v10[2];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v20 = v10[3];
      v21 = *v10;
      v22 = *(_QWORD *)v17;
      v23 = *((_QWORD *)v17 + 1);
      v25 = *((_QWORD *)v17 + 2);
      v24 = *((_QWORD *)v17 + 3);
      v30[0] = v21;
      v30[1] = v18;
      v30[2] = v19;
      v30[3] = v20;
      v29[0] = v22;
      v29[1] = v23;
      v29[2] = v25;
      v29[3] = v24;
      v26 = _s7NewsAds21DebugNativeAdHeadlineV2eeoiySbAC_ACtFZ_0(v30, v29);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
LABEL_9:
      v27 = type metadata accessor for NativeAd.Headline;
      goto LABEL_10;
    }
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA24AA98((uint64_t)v16, (uint64_t)v12, type metadata accessor for NativeAd.Headline);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1BA258B3C((uint64_t)v17, (uint64_t)v6, type metadata accessor for NativeAdHeadline);
      v26 = _s7NewsAds16NativeAdHeadlineV2eeoiySbAC_ACtFZ_0(v12, v6);
      sub_1BA258A50((uint64_t)v6, type metadata accessor for NativeAdHeadline);
      sub_1BA258A50((uint64_t)v12, type metadata accessor for NativeAdHeadline);
      goto LABEL_9;
    }
    sub_1BA258A50((uint64_t)v12, type metadata accessor for NativeAdHeadline);
  }
  v26 = 0;
  v27 = (uint64_t (*)(_QWORD))sub_1BA277A20;
LABEL_10:
  sub_1BA258A50((uint64_t)v16, v27);
  return v26 & 1;
}

unint64_t sub_1BA2720C4()
{
  unint64_t result;

  result = qword_1EF27F378;
  if (!qword_1EF27F378)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for DebugNativeAdHeadline, &type metadata for DebugNativeAdHeadline);
    atomic_store(result, (unint64_t *)&qword_1EF27F378);
  }
  return result;
}

uint64_t sub_1BA272108()
{
  return sub_1BA221230(&qword_1EF27F368, type metadata accessor for NativeAd.Headline, (uint64_t)&protocol conformance descriptor for NativeAd.Headline);
}

uint64_t sub_1BA272134()
{
  return sub_1BA221230(&qword_1EF27F380, type metadata accessor for NativeAd.Headline, (uint64_t)&protocol conformance descriptor for NativeAd.Headline);
}

uint64_t sub_1BA272160()
{
  return sub_1BA221230(&qword_1EF27F388, type metadata accessor for NativeAd.Headline, (uint64_t)&protocol conformance descriptor for NativeAd.Headline);
}

uint64_t sub_1BA27218C()
{
  return sub_1BA221230(&qword_1EF27F370, type metadata accessor for NativeAdHeadline, (uint64_t)&protocol conformance descriptor for NativeAdHeadline);
}

uint64_t sub_1BA2721B8()
{
  return sub_1BA221230(&qword_1EF27F390, type metadata accessor for NativeAdHeadline, (uint64_t)&protocol conformance descriptor for NativeAdHeadline);
}

uint64_t sub_1BA2721E4()
{
  return sub_1BA221230(&qword_1EF27F398, type metadata accessor for NativeAdHeadline, (uint64_t)&protocol conformance descriptor for NativeAdHeadline);
}

unint64_t sub_1BA272218()
{
  unint64_t result;

  result = qword_1EF27F3A0;
  if (!qword_1EF27F3A0)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for DebugNativeAdHeadline, &type metadata for DebugNativeAdHeadline);
    atomic_store(result, (unint64_t *)&qword_1EF27F3A0);
  }
  return result;
}

unint64_t sub_1BA272260()
{
  unint64_t result;

  result = qword_1EF27F3A8;
  if (!qword_1EF27F3A8)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for DebugNativeAdHeadline, &type metadata for DebugNativeAdHeadline);
    atomic_store(result, (unint64_t *)&qword_1EF27F3A8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for NativeAd(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t *, uint64_t);
  void *v12;
  id v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;
  void *v82;
  id v83;
  uint64_t v85;
  void (*v86)(char *, uint64_t, uint64_t);
  uint64_t v87;
  char *v88;
  uint64_t v89;
  int *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      v7 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v7;
      v8 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v8;
      *(_QWORD *)(a1 + 32) = a2[4];
      v9 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 64) = v9;
      v10 = v9;
      v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      v11(a1 + 40, a2 + 5, v10);
      v12 = (void *)a2[10];
      *(_QWORD *)(a1 + 80) = v12;
      v13 = v12;
LABEL_24:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    type metadata accessor for NativeAd.Headline(0);
    v15 = swift_getEnumCaseMultiPayload();
    v16 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v16;
    if (v15 == 1)
    {
      v17 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v17;
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
LABEL_23:
      swift_storeEnumTagMultiPayload();
      goto LABEL_24;
    }
    *(_QWORD *)(a1 + 16) = a2[2];
    v93 = type metadata accessor for NativeAdHeadline(0);
    v18 = *(int *)(v93 + 24);
    v19 = (_QWORD *)(a1 + v18);
    v20 = (uint64_t)a2 + v18;
    v21 = *(uint64_t *)((char *)a2 + v18 + 8);
    *v19 = *(uint64_t *)((char *)a2 + v18);
    v19[1] = v21;
    v22 = *(uint64_t *)((char *)a2 + v18 + 24);
    v19[2] = *(uint64_t *)((char *)a2 + v18 + 16);
    v19[3] = v22;
    v23 = *(uint64_t *)((char *)a2 + v18 + 40);
    v19[4] = *(uint64_t *)((char *)a2 + v18 + 32);
    v19[5] = v23;
    v24 = *(uint64_t *)((char *)a2 + v18 + 56);
    v19[6] = *(uint64_t *)((char *)a2 + v18 + 48);
    v19[7] = v24;
    v25 = *(uint64_t *)((char *)a2 + v18 + 72);
    v19[8] = *(uint64_t *)((char *)a2 + v18 + 64);
    v19[9] = v25;
    v26 = *(uint64_t *)((char *)a2 + v18 + 88);
    v19[10] = *(uint64_t *)((char *)a2 + v18 + 80);
    v19[11] = v26;
    v19[12] = *(uint64_t *)((char *)a2 + v18 + 96);
    v90 = (int *)type metadata accessor for NativeAdInfo.Fulfilled(0);
    v91 = v20;
    v27 = v90[11];
    v92 = v19;
    v28 = (char *)v19 + v27;
    v29 = v20 + v27;
    v30 = *(_QWORD *)(v20 + v27);
    v31 = *(_QWORD *)(v29 + 8);
    *(_QWORD *)v28 = v30;
    *((_QWORD *)v28 + 1) = v31;
    v28[16] = *(_BYTE *)(v29 + 16);
    *((_QWORD *)v28 + 3) = *(_QWORD *)(v29 + 24);
    v28[32] = *(_BYTE *)(v29 + 32);
    v85 = *(_QWORD *)(v29 + 48);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v85)
    {
      *((_QWORD *)v28 + 5) = *(_QWORD *)(v29 + 40);
      *((_QWORD *)v28 + 6) = v85;
      *((_QWORD *)v28 + 7) = *(_QWORD *)(v29 + 56);
      v28[64] = *(_BYTE *)(v29 + 64);
      v32 = *(_QWORD *)(v29 + 80);
      *((_QWORD *)v28 + 9) = *(_QWORD *)(v29 + 72);
      *((_QWORD *)v28 + 10) = v32;
      v33 = *(_QWORD *)(v29 + 96);
      *((_QWORD *)v28 + 11) = *(_QWORD *)(v29 + 88);
      *((_QWORD *)v28 + 12) = v33;
      v34 = *(_QWORD *)(v29 + 112);
      *((_QWORD *)v28 + 13) = *(_QWORD *)(v29 + 104);
      *((_QWORD *)v28 + 14) = v34;
      *((_QWORD *)v28 + 15) = *(_QWORD *)(v29 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v35 = *(_OWORD *)(v29 + 88);
      *(_OWORD *)(v28 + 72) = *(_OWORD *)(v29 + 72);
      *(_OWORD *)(v28 + 88) = v35;
      *(_OWORD *)(v28 + 104) = *(_OWORD *)(v29 + 104);
      *((_QWORD *)v28 + 15) = *(_QWORD *)(v29 + 120);
      v36 = *(_OWORD *)(v29 + 56);
      *(_OWORD *)(v28 + 40) = *(_OWORD *)(v29 + 40);
      *(_OWORD *)(v28 + 56) = v36;
    }
    v37 = *(_QWORD *)(v29 + 136);
    *((_QWORD *)v28 + 16) = *(_QWORD *)(v29 + 128);
    *((_QWORD *)v28 + 17) = v37;
    v38 = *(_QWORD *)(v29 + 152);
    *((_QWORD *)v28 + 18) = *(_QWORD *)(v29 + 144);
    *((_QWORD *)v28 + 19) = v38;
    *((_QWORD *)v28 + 20) = *(_QWORD *)(v29 + 160);
    *(_OWORD *)(v28 + 168) = *(_OWORD *)(v29 + 168);
    v39 = *(_QWORD *)(v29 + 192);
    *((_QWORD *)v28 + 23) = *(_QWORD *)(v29 + 184);
    *((_QWORD *)v28 + 24) = v39;
    v40 = *(_QWORD *)(v29 + 208);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v40)
    {
      *((_QWORD *)v28 + 25) = *(_QWORD *)(v29 + 200);
      *((_QWORD *)v28 + 26) = v40;
      v41 = *(_QWORD *)(v29 + 224);
      *((_QWORD *)v28 + 27) = *(_QWORD *)(v29 + 216);
      *((_QWORD *)v28 + 28) = v41;
      *((_QWORD *)v28 + 29) = *(_QWORD *)(v29 + 232);
      *((_OWORD *)v28 + 15) = *(_OWORD *)(v29 + 240);
      v42 = *(_QWORD *)(v29 + 264);
      *((_QWORD *)v28 + 32) = *(_QWORD *)(v29 + 256);
      *((_QWORD *)v28 + 33) = v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v43 = *(_QWORD *)(v29 + 280);
      if (v43)
      {
LABEL_14:
        *((_QWORD *)v28 + 34) = *(_QWORD *)(v29 + 272);
        *((_QWORD *)v28 + 35) = v43;
        v44 = *(_QWORD *)(v29 + 296);
        *((_QWORD *)v28 + 36) = *(_QWORD *)(v29 + 288);
        *((_QWORD *)v28 + 37) = v44;
        v45 = *(_QWORD *)(v29 + 312);
        *((_QWORD *)v28 + 38) = *(_QWORD *)(v29 + 304);
        *((_QWORD *)v28 + 39) = v45;
        v46 = *(_QWORD *)(v29 + 328);
        *((_QWORD *)v28 + 40) = *(_QWORD *)(v29 + 320);
        *((_QWORD *)v28 + 41) = v46;
        *((_QWORD *)v28 + 42) = *(_QWORD *)(v29 + 336);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_17;
      }
    }
    else
    {
      v47 = *(_OWORD *)(v29 + 248);
      *(_OWORD *)(v28 + 232) = *(_OWORD *)(v29 + 232);
      *(_OWORD *)(v28 + 248) = v47;
      *((_QWORD *)v28 + 33) = *(_QWORD *)(v29 + 264);
      v48 = *(_OWORD *)(v29 + 216);
      *(_OWORD *)(v28 + 200) = *(_OWORD *)(v29 + 200);
      *(_OWORD *)(v28 + 216) = v48;
      v43 = *(_QWORD *)(v29 + 280);
      if (v43)
        goto LABEL_14;
    }
    v49 = *(_OWORD *)(v29 + 320);
    *((_OWORD *)v28 + 19) = *(_OWORD *)(v29 + 304);
    *((_OWORD *)v28 + 20) = v49;
    *((_QWORD *)v28 + 42) = *(_QWORD *)(v29 + 336);
    v50 = *(_OWORD *)(v29 + 288);
    *((_OWORD *)v28 + 17) = *(_OWORD *)(v29 + 272);
    *((_OWORD *)v28 + 18) = v50;
LABEL_17:
    v51 = *(_QWORD *)(v29 + 352);
    *((_QWORD *)v28 + 43) = *(_QWORD *)(v29 + 344);
    *((_QWORD *)v28 + 44) = v51;
    *((_WORD *)v28 + 180) = *(_WORD *)(v29 + 360);
    v52 = *(_QWORD *)(v29 + 376);
    *((_QWORD *)v28 + 46) = *(_QWORD *)(v29 + 368);
    *((_QWORD *)v28 + 47) = v52;
    v53 = *(_QWORD *)(v29 + 392);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v53)
    {
      *((_QWORD *)v28 + 48) = *(_QWORD *)(v29 + 384);
      *((_QWORD *)v28 + 49) = v53;
      *((_WORD *)v28 + 200) = *(_WORD *)(v29 + 400);
      v54 = *(_QWORD *)(v29 + 416);
      *((_QWORD *)v28 + 51) = *(_QWORD *)(v29 + 408);
      *((_QWORD *)v28 + 52) = v54;
      v55 = *(_QWORD *)(v29 + 432);
      *((_QWORD *)v28 + 53) = *(_QWORD *)(v29 + 424);
      *((_QWORD *)v28 + 54) = v55;
      v56 = *(_QWORD *)(v29 + 448);
      *((_QWORD *)v28 + 55) = *(_QWORD *)(v29 + 440);
      *((_QWORD *)v28 + 56) = v56;
      *((_QWORD *)v28 + 57) = *(_QWORD *)(v29 + 456);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v57 = *(_QWORD *)(v29 + 472);
      if (v57)
      {
LABEL_19:
        *((_QWORD *)v28 + 58) = *(_QWORD *)(v29 + 464);
        *((_QWORD *)v28 + 59) = v57;
        v28[480] = *(_BYTE *)(v29 + 480);
        v58 = *(_QWORD *)(v29 + 496);
        *((_QWORD *)v28 + 61) = *(_QWORD *)(v29 + 488);
        *((_QWORD *)v28 + 62) = v58;
        v59 = *(_QWORD *)(v29 + 512);
        *((_QWORD *)v28 + 63) = *(_QWORD *)(v29 + 504);
        *((_QWORD *)v28 + 64) = v59;
        *((_QWORD *)v28 + 65) = *(_QWORD *)(v29 + 520);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_22:
        v28[528] = *(_BYTE *)(v29 + 528);
        *((_QWORD *)v28 + 67) = *(_QWORD *)(v29 + 536);
        v89 = sub_1BA24A9F0();
        v64 = *(int *)(v89 + 56);
        v65 = &v28[v64];
        v66 = v29 + v64;
        v67 = *(_QWORD *)(v29 + v64 + 8);
        *(_QWORD *)v65 = *(_QWORD *)(v29 + v64);
        *((_QWORD *)v65 + 1) = v67;
        v68 = type metadata accessor for NativeAdPlacement();
        v69 = *(int *)(v68 + 20);
        v87 = v66 + v69;
        v88 = &v65[v69];
        v70 = sub_1BA2C1AC0();
        v86 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v86(v88, v87, v70);
        v65[*(int *)(v68 + 24)] = *(_BYTE *)(v66 + *(int *)(v68 + 24));
        v71 = *(int *)(v89 + 60);
        v72 = &v28[v71];
        v73 = (_QWORD *)(v29 + v71);
        v74 = v73[1];
        *(_QWORD *)v72 = *v73;
        *((_QWORD *)v72 + 1) = v74;
        v75 = v90[12];
        v76 = (char *)v92 + v75;
        v77 = v91 + v75;
        v78 = *(_OWORD *)(v91 + v75 + 24);
        *(_OWORD *)((char *)v92 + v75 + 24) = v78;
        v79 = v78;
        v80 = **(void (***)(char *, uint64_t, uint64_t))(v78 - 8);
        swift_bridgeObjectRetain();
        v80(v76, v77, v79);
        v81 = v90[13];
        v82 = *(void **)(v91 + v81);
        *(_QWORD *)((char *)v92 + v81) = v82;
        *(_QWORD *)(a1 + *(int *)(v93 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v93 + 28));
        v83 = v82;
        swift_retain();
        goto LABEL_23;
      }
    }
    else
    {
      v60 = *(_OWORD *)(v29 + 432);
      *((_OWORD *)v28 + 26) = *(_OWORD *)(v29 + 416);
      *((_OWORD *)v28 + 27) = v60;
      *((_OWORD *)v28 + 28) = *(_OWORD *)(v29 + 448);
      v61 = *(_OWORD *)(v29 + 400);
      *((_OWORD *)v28 + 24) = *(_OWORD *)(v29 + 384);
      *((_OWORD *)v28 + 25) = v61;
      v57 = *(_QWORD *)(v29 + 472);
      if (v57)
        goto LABEL_19;
    }
    v62 = *(_OWORD *)(v29 + 480);
    *((_OWORD *)v28 + 29) = *(_OWORD *)(v29 + 464);
    *((_OWORD *)v28 + 30) = v62;
    v63 = *(_OWORD *)(v29 + 512);
    *((_OWORD *)v28 + 31) = *(_OWORD *)(v29 + 496);
    *((_OWORD *)v28 + 32) = v63;
    goto LABEL_22;
  }
  v14 = *a2;
  *(_QWORD *)a1 = *a2;
  a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

void destroy for NativeAd(uint64_t a1)
{
  int EnumCaseMultiPayload;
  int v3;
  uint64_t v4;
  int *v5;
  _QWORD *v6;
  char *v7;
  char *v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);

  }
  else if (!EnumCaseMultiPayload)
  {
    type metadata accessor for NativeAd.Headline(0);
    v3 = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (v3 == 1)
    {
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
      v4 = a1 + *(int *)(type metadata accessor for NativeAdHeadline(0) + 24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v5 = (int *)type metadata accessor for NativeAdInfo.Fulfilled(0);
      v6 = (_QWORD *)(v4 + v5[11]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v6[6])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v6[26])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (v6[35])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v6[49])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (v6[59])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v7 = (char *)v6 + *(int *)(sub_1BA24A9F0() + 56);
      swift_bridgeObjectRelease();
      v8 = &v7[*(int *)(type metadata accessor for NativeAdPlacement() + 20)];
      v9 = sub_1BA2C1AC0();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v4 + v5[12]);

      swift_release();
    }
  }
}

uint64_t initializeWithCopy for NativeAd(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  void *v10;
  id v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t, uint64_t);
  uint64_t v78;
  void *v79;
  id v80;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  char *v85;
  uint64_t v86;
  int *v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2 && EnumCaseMultiPayload != 1)
  {
    type metadata accessor for NativeAd.Headline(0);
    v12 = swift_getEnumCaseMultiPayload();
    v13 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v13;
    if (v12 == 1)
    {
      v14 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v14;
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
LABEL_20:
      swift_storeEnumTagMultiPayload();
      goto LABEL_21;
    }
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    v90 = type metadata accessor for NativeAdHeadline(0);
    v15 = *(int *)(v90 + 24);
    v16 = (_QWORD *)(a1 + v15);
    v17 = a2 + v15;
    v18 = *(_QWORD *)(a2 + v15 + 8);
    *v16 = *(_QWORD *)(a2 + v15);
    v16[1] = v18;
    v19 = *(_QWORD *)(a2 + v15 + 24);
    v16[2] = *(_QWORD *)(a2 + v15 + 16);
    v16[3] = v19;
    v20 = *(_QWORD *)(a2 + v15 + 40);
    v16[4] = *(_QWORD *)(a2 + v15 + 32);
    v16[5] = v20;
    v21 = *(_QWORD *)(a2 + v15 + 56);
    v16[6] = *(_QWORD *)(a2 + v15 + 48);
    v16[7] = v21;
    v22 = *(_QWORD *)(a2 + v15 + 72);
    v16[8] = *(_QWORD *)(a2 + v15 + 64);
    v16[9] = v22;
    v23 = *(_QWORD *)(a2 + v15 + 88);
    v16[10] = *(_QWORD *)(a2 + v15 + 80);
    v16[11] = v23;
    v16[12] = *(_QWORD *)(a2 + v15 + 96);
    v87 = (int *)type metadata accessor for NativeAdInfo.Fulfilled(0);
    v88 = v17;
    v24 = v87[11];
    v89 = v16;
    v25 = (char *)v16 + v24;
    v26 = v17 + v24;
    v27 = *(_QWORD *)(v17 + v24);
    v28 = *(_QWORD *)(v26 + 8);
    *(_QWORD *)v25 = v27;
    *((_QWORD *)v25 + 1) = v28;
    v25[16] = *(_BYTE *)(v26 + 16);
    *((_QWORD *)v25 + 3) = *(_QWORD *)(v26 + 24);
    v25[32] = *(_BYTE *)(v26 + 32);
    v82 = *(_QWORD *)(v26 + 48);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v82)
    {
      *((_QWORD *)v25 + 5) = *(_QWORD *)(v26 + 40);
      *((_QWORD *)v25 + 6) = v82;
      *((_QWORD *)v25 + 7) = *(_QWORD *)(v26 + 56);
      v25[64] = *(_BYTE *)(v26 + 64);
      v29 = *(_QWORD *)(v26 + 80);
      *((_QWORD *)v25 + 9) = *(_QWORD *)(v26 + 72);
      *((_QWORD *)v25 + 10) = v29;
      v30 = *(_QWORD *)(v26 + 96);
      *((_QWORD *)v25 + 11) = *(_QWORD *)(v26 + 88);
      *((_QWORD *)v25 + 12) = v30;
      v31 = *(_QWORD *)(v26 + 112);
      *((_QWORD *)v25 + 13) = *(_QWORD *)(v26 + 104);
      *((_QWORD *)v25 + 14) = v31;
      *((_QWORD *)v25 + 15) = *(_QWORD *)(v26 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v32 = *(_OWORD *)(v26 + 88);
      *(_OWORD *)(v25 + 72) = *(_OWORD *)(v26 + 72);
      *(_OWORD *)(v25 + 88) = v32;
      *(_OWORD *)(v25 + 104) = *(_OWORD *)(v26 + 104);
      *((_QWORD *)v25 + 15) = *(_QWORD *)(v26 + 120);
      v33 = *(_OWORD *)(v26 + 56);
      *(_OWORD *)(v25 + 40) = *(_OWORD *)(v26 + 40);
      *(_OWORD *)(v25 + 56) = v33;
    }
    v34 = *(_QWORD *)(v26 + 136);
    *((_QWORD *)v25 + 16) = *(_QWORD *)(v26 + 128);
    *((_QWORD *)v25 + 17) = v34;
    v35 = *(_QWORD *)(v26 + 152);
    *((_QWORD *)v25 + 18) = *(_QWORD *)(v26 + 144);
    *((_QWORD *)v25 + 19) = v35;
    *((_QWORD *)v25 + 20) = *(_QWORD *)(v26 + 160);
    *(_OWORD *)(v25 + 168) = *(_OWORD *)(v26 + 168);
    v36 = *(_QWORD *)(v26 + 192);
    *((_QWORD *)v25 + 23) = *(_QWORD *)(v26 + 184);
    *((_QWORD *)v25 + 24) = v36;
    v37 = *(_QWORD *)(v26 + 208);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v37)
    {
      *((_QWORD *)v25 + 25) = *(_QWORD *)(v26 + 200);
      *((_QWORD *)v25 + 26) = v37;
      v38 = *(_QWORD *)(v26 + 224);
      *((_QWORD *)v25 + 27) = *(_QWORD *)(v26 + 216);
      *((_QWORD *)v25 + 28) = v38;
      *((_QWORD *)v25 + 29) = *(_QWORD *)(v26 + 232);
      *((_OWORD *)v25 + 15) = *(_OWORD *)(v26 + 240);
      v39 = *(_QWORD *)(v26 + 264);
      *((_QWORD *)v25 + 32) = *(_QWORD *)(v26 + 256);
      *((_QWORD *)v25 + 33) = v39;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v40 = *(_QWORD *)(v26 + 280);
      if (v40)
      {
LABEL_11:
        *((_QWORD *)v25 + 34) = *(_QWORD *)(v26 + 272);
        *((_QWORD *)v25 + 35) = v40;
        v41 = *(_QWORD *)(v26 + 296);
        *((_QWORD *)v25 + 36) = *(_QWORD *)(v26 + 288);
        *((_QWORD *)v25 + 37) = v41;
        v42 = *(_QWORD *)(v26 + 312);
        *((_QWORD *)v25 + 38) = *(_QWORD *)(v26 + 304);
        *((_QWORD *)v25 + 39) = v42;
        v43 = *(_QWORD *)(v26 + 328);
        *((_QWORD *)v25 + 40) = *(_QWORD *)(v26 + 320);
        *((_QWORD *)v25 + 41) = v43;
        *((_QWORD *)v25 + 42) = *(_QWORD *)(v26 + 336);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_14;
      }
    }
    else
    {
      v44 = *(_OWORD *)(v26 + 248);
      *(_OWORD *)(v25 + 232) = *(_OWORD *)(v26 + 232);
      *(_OWORD *)(v25 + 248) = v44;
      *((_QWORD *)v25 + 33) = *(_QWORD *)(v26 + 264);
      v45 = *(_OWORD *)(v26 + 216);
      *(_OWORD *)(v25 + 200) = *(_OWORD *)(v26 + 200);
      *(_OWORD *)(v25 + 216) = v45;
      v40 = *(_QWORD *)(v26 + 280);
      if (v40)
        goto LABEL_11;
    }
    v46 = *(_OWORD *)(v26 + 320);
    *((_OWORD *)v25 + 19) = *(_OWORD *)(v26 + 304);
    *((_OWORD *)v25 + 20) = v46;
    *((_QWORD *)v25 + 42) = *(_QWORD *)(v26 + 336);
    v47 = *(_OWORD *)(v26 + 288);
    *((_OWORD *)v25 + 17) = *(_OWORD *)(v26 + 272);
    *((_OWORD *)v25 + 18) = v47;
LABEL_14:
    v48 = *(_QWORD *)(v26 + 352);
    *((_QWORD *)v25 + 43) = *(_QWORD *)(v26 + 344);
    *((_QWORD *)v25 + 44) = v48;
    *((_WORD *)v25 + 180) = *(_WORD *)(v26 + 360);
    v49 = *(_QWORD *)(v26 + 376);
    *((_QWORD *)v25 + 46) = *(_QWORD *)(v26 + 368);
    *((_QWORD *)v25 + 47) = v49;
    v50 = *(_QWORD *)(v26 + 392);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v50)
    {
      *((_QWORD *)v25 + 48) = *(_QWORD *)(v26 + 384);
      *((_QWORD *)v25 + 49) = v50;
      *((_WORD *)v25 + 200) = *(_WORD *)(v26 + 400);
      v51 = *(_QWORD *)(v26 + 416);
      *((_QWORD *)v25 + 51) = *(_QWORD *)(v26 + 408);
      *((_QWORD *)v25 + 52) = v51;
      v52 = *(_QWORD *)(v26 + 432);
      *((_QWORD *)v25 + 53) = *(_QWORD *)(v26 + 424);
      *((_QWORD *)v25 + 54) = v52;
      v53 = *(_QWORD *)(v26 + 448);
      *((_QWORD *)v25 + 55) = *(_QWORD *)(v26 + 440);
      *((_QWORD *)v25 + 56) = v53;
      *((_QWORD *)v25 + 57) = *(_QWORD *)(v26 + 456);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v54 = *(_QWORD *)(v26 + 472);
      if (v54)
      {
LABEL_16:
        *((_QWORD *)v25 + 58) = *(_QWORD *)(v26 + 464);
        *((_QWORD *)v25 + 59) = v54;
        v25[480] = *(_BYTE *)(v26 + 480);
        v55 = *(_QWORD *)(v26 + 496);
        *((_QWORD *)v25 + 61) = *(_QWORD *)(v26 + 488);
        *((_QWORD *)v25 + 62) = v55;
        v56 = *(_QWORD *)(v26 + 512);
        *((_QWORD *)v25 + 63) = *(_QWORD *)(v26 + 504);
        *((_QWORD *)v25 + 64) = v56;
        *((_QWORD *)v25 + 65) = *(_QWORD *)(v26 + 520);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_19:
        v25[528] = *(_BYTE *)(v26 + 528);
        *((_QWORD *)v25 + 67) = *(_QWORD *)(v26 + 536);
        v86 = sub_1BA24A9F0();
        v61 = *(int *)(v86 + 56);
        v62 = &v25[v61];
        v63 = v26 + v61;
        v64 = *(_QWORD *)(v26 + v61 + 8);
        *(_QWORD *)v62 = *(_QWORD *)(v26 + v61);
        *((_QWORD *)v62 + 1) = v64;
        v65 = type metadata accessor for NativeAdPlacement();
        v66 = *(int *)(v65 + 20);
        v84 = v63 + v66;
        v85 = &v62[v66];
        v67 = sub_1BA2C1AC0();
        v83 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v83(v85, v84, v67);
        v62[*(int *)(v65 + 24)] = *(_BYTE *)(v63 + *(int *)(v65 + 24));
        v68 = *(int *)(v86 + 60);
        v69 = &v25[v68];
        v70 = (_QWORD *)(v26 + v68);
        v71 = v70[1];
        *(_QWORD *)v69 = *v70;
        *((_QWORD *)v69 + 1) = v71;
        v72 = v87[12];
        v73 = (char *)v89 + v72;
        v74 = v88 + v72;
        v75 = *(_OWORD *)(v88 + v72 + 24);
        *(_OWORD *)((char *)v89 + v72 + 24) = v75;
        v76 = v75;
        v77 = **(void (***)(char *, uint64_t, uint64_t))(v75 - 8);
        swift_bridgeObjectRetain();
        v77(v73, v74, v76);
        v78 = v87[13];
        v79 = *(void **)(v88 + v78);
        *(_QWORD *)((char *)v89 + v78) = v79;
        *(_QWORD *)(a1 + *(int *)(v90 + 28)) = *(_QWORD *)(a2 + *(int *)(v90 + 28));
        v80 = v79;
        swift_retain();
        goto LABEL_20;
      }
    }
    else
    {
      v57 = *(_OWORD *)(v26 + 432);
      *((_OWORD *)v25 + 26) = *(_OWORD *)(v26 + 416);
      *((_OWORD *)v25 + 27) = v57;
      *((_OWORD *)v25 + 28) = *(_OWORD *)(v26 + 448);
      v58 = *(_OWORD *)(v26 + 400);
      *((_OWORD *)v25 + 24) = *(_OWORD *)(v26 + 384);
      *((_OWORD *)v25 + 25) = v58;
      v54 = *(_QWORD *)(v26 + 472);
      if (v54)
        goto LABEL_16;
    }
    v59 = *(_OWORD *)(v26 + 480);
    *((_OWORD *)v25 + 29) = *(_OWORD *)(v26 + 464);
    *((_OWORD *)v25 + 30) = v59;
    v60 = *(_OWORD *)(v26 + 512);
    *((_OWORD *)v25 + 31) = *(_OWORD *)(v26 + 496);
    *((_OWORD *)v25 + 32) = v60;
    goto LABEL_19;
  }
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v9(a1 + 40, a2 + 40, v8);
  v10 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v10;
  v11 = v10;
LABEL_21:
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for NativeAd(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  void (*v6)(_QWORD *, _QWORD *, uint64_t);
  void *v7;
  id v8;
  int v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  void *v49;
  id v50;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  char *v55;
  uint64_t v56;
  int *v57;
  char *v58;
  _QWORD *v59;
  uint64_t v60;

  if (a1 != a2)
  {
    sub_1BA258A50((uint64_t)a1, type metadata accessor for NativeAd);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      v5 = a2[8];
      a1[8] = v5;
      a1[9] = a2[9];
      v6 = **(void (***)(_QWORD *, _QWORD *, uint64_t))(v5 - 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      v6(a1 + 5, a2 + 5, v5);
      v7 = (void *)a2[10];
      a1[10] = v7;
      v8 = v7;
LABEL_22:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    type metadata accessor for NativeAd.Headline(0);
    v9 = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    a1[1] = a2[1];
    if (v9 == 1)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
LABEL_21:
      swift_storeEnumTagMultiPayload();
      goto LABEL_22;
    }
    a1[2] = a2[2];
    v60 = type metadata accessor for NativeAdHeadline(0);
    v10 = *(int *)(v60 + 24);
    v11 = (_QWORD *)((char *)a1 + v10);
    v12 = (char *)a2 + v10;
    *v11 = *(_QWORD *)((char *)a2 + v10);
    v11[1] = *(_QWORD *)((char *)a2 + v10 + 8);
    v11[2] = *(_QWORD *)((char *)a2 + v10 + 16);
    v11[3] = *(_QWORD *)((char *)a2 + v10 + 24);
    v11[4] = *(_QWORD *)((char *)a2 + v10 + 32);
    v11[5] = *(_QWORD *)((char *)a2 + v10 + 40);
    v11[6] = *(_QWORD *)((char *)a2 + v10 + 48);
    v11[7] = *(_QWORD *)((char *)a2 + v10 + 56);
    v11[8] = *(_QWORD *)((char *)a2 + v10 + 64);
    v11[9] = *(_QWORD *)((char *)a2 + v10 + 72);
    v11[10] = *(_QWORD *)((char *)a2 + v10 + 80);
    v11[11] = *(_QWORD *)((char *)a2 + v10 + 88);
    v11[12] = *(_QWORD *)((char *)a2 + v10 + 96);
    v57 = (int *)type metadata accessor for NativeAdInfo.Fulfilled(0);
    v58 = v12;
    v13 = v57[11];
    v59 = v11;
    v14 = (char *)v11 + v13;
    v15 = &v12[v13];
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
    v14[16] = v15[16];
    *((_QWORD *)v14 + 3) = *((_QWORD *)v15 + 3);
    v14[32] = v15[32];
    v52 = *((_QWORD *)v15 + 6);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v52)
    {
      *((_QWORD *)v14 + 5) = *((_QWORD *)v15 + 5);
      *((_QWORD *)v14 + 6) = *((_QWORD *)v15 + 6);
      *((_QWORD *)v14 + 7) = *((_QWORD *)v15 + 7);
      v14[64] = v15[64];
      *((_QWORD *)v14 + 9) = *((_QWORD *)v15 + 9);
      *((_QWORD *)v14 + 10) = *((_QWORD *)v15 + 10);
      *((_QWORD *)v14 + 11) = *((_QWORD *)v15 + 11);
      *((_QWORD *)v14 + 12) = *((_QWORD *)v15 + 12);
      *((_QWORD *)v14 + 13) = *((_QWORD *)v15 + 13);
      *((_QWORD *)v14 + 14) = *((_QWORD *)v15 + 14);
      *((_QWORD *)v14 + 15) = *((_QWORD *)v15 + 15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v16 = *(_OWORD *)(v15 + 56);
      *(_OWORD *)(v14 + 40) = *(_OWORD *)(v15 + 40);
      *(_OWORD *)(v14 + 56) = v16;
      v17 = *(_OWORD *)(v15 + 72);
      v18 = *(_OWORD *)(v15 + 88);
      v19 = *(_OWORD *)(v15 + 104);
      *((_QWORD *)v14 + 15) = *((_QWORD *)v15 + 15);
      *(_OWORD *)(v14 + 88) = v18;
      *(_OWORD *)(v14 + 104) = v19;
      *(_OWORD *)(v14 + 72) = v17;
    }
    *((_QWORD *)v14 + 16) = *((_QWORD *)v15 + 16);
    *((_QWORD *)v14 + 17) = *((_QWORD *)v15 + 17);
    *((_QWORD *)v14 + 18) = *((_QWORD *)v15 + 18);
    *((_QWORD *)v14 + 19) = *((_QWORD *)v15 + 19);
    *((_QWORD *)v14 + 20) = *((_QWORD *)v15 + 20);
    *((_QWORD *)v14 + 21) = *((_QWORD *)v15 + 21);
    *((_QWORD *)v14 + 22) = *((_QWORD *)v15 + 22);
    *((_QWORD *)v14 + 23) = *((_QWORD *)v15 + 23);
    *((_QWORD *)v14 + 24) = *((_QWORD *)v15 + 24);
    v20 = *((_QWORD *)v15 + 26);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20)
    {
      *((_QWORD *)v14 + 25) = *((_QWORD *)v15 + 25);
      *((_QWORD *)v14 + 26) = *((_QWORD *)v15 + 26);
      *((_QWORD *)v14 + 27) = *((_QWORD *)v15 + 27);
      *((_QWORD *)v14 + 28) = *((_QWORD *)v15 + 28);
      *((_QWORD *)v14 + 29) = *((_QWORD *)v15 + 29);
      *((_QWORD *)v14 + 30) = *((_QWORD *)v15 + 30);
      *((_QWORD *)v14 + 31) = *((_QWORD *)v15 + 31);
      *((_QWORD *)v14 + 32) = *((_QWORD *)v15 + 32);
      *((_QWORD *)v14 + 33) = *((_QWORD *)v15 + 33);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (*((_QWORD *)v15 + 35))
      {
LABEL_12:
        *((_QWORD *)v14 + 34) = *((_QWORD *)v15 + 34);
        *((_QWORD *)v14 + 35) = *((_QWORD *)v15 + 35);
        *((_QWORD *)v14 + 36) = *((_QWORD *)v15 + 36);
        *((_QWORD *)v14 + 37) = *((_QWORD *)v15 + 37);
        *((_QWORD *)v14 + 38) = *((_QWORD *)v15 + 38);
        *((_QWORD *)v14 + 39) = *((_QWORD *)v15 + 39);
        *((_QWORD *)v14 + 40) = *((_QWORD *)v15 + 40);
        *((_QWORD *)v14 + 41) = *((_QWORD *)v15 + 41);
        *((_QWORD *)v14 + 42) = *((_QWORD *)v15 + 42);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_15;
      }
    }
    else
    {
      *(_OWORD *)(v14 + 200) = *(_OWORD *)(v15 + 200);
      v21 = *(_OWORD *)(v15 + 216);
      v22 = *(_OWORD *)(v15 + 232);
      v23 = *(_OWORD *)(v15 + 248);
      *((_QWORD *)v14 + 33) = *((_QWORD *)v15 + 33);
      *(_OWORD *)(v14 + 232) = v22;
      *(_OWORD *)(v14 + 248) = v23;
      *(_OWORD *)(v14 + 216) = v21;
      if (*((_QWORD *)v15 + 35))
        goto LABEL_12;
    }
    *((_OWORD *)v14 + 17) = *((_OWORD *)v15 + 17);
    v24 = *((_OWORD *)v15 + 18);
    v25 = *((_OWORD *)v15 + 19);
    v26 = *((_OWORD *)v15 + 20);
    *((_QWORD *)v14 + 42) = *((_QWORD *)v15 + 42);
    *((_OWORD *)v14 + 19) = v25;
    *((_OWORD *)v14 + 20) = v26;
    *((_OWORD *)v14 + 18) = v24;
LABEL_15:
    *((_QWORD *)v14 + 43) = *((_QWORD *)v15 + 43);
    *((_QWORD *)v14 + 44) = *((_QWORD *)v15 + 44);
    v14[360] = v15[360];
    v14[361] = v15[361];
    *((_QWORD *)v14 + 46) = *((_QWORD *)v15 + 46);
    *((_QWORD *)v14 + 47) = *((_QWORD *)v15 + 47);
    v27 = *((_QWORD *)v15 + 49);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v27)
    {
      *((_QWORD *)v14 + 48) = *((_QWORD *)v15 + 48);
      *((_QWORD *)v14 + 49) = *((_QWORD *)v15 + 49);
      v14[400] = v15[400];
      v14[401] = v15[401];
      *((_QWORD *)v14 + 51) = *((_QWORD *)v15 + 51);
      *((_QWORD *)v14 + 52) = *((_QWORD *)v15 + 52);
      *((_QWORD *)v14 + 53) = *((_QWORD *)v15 + 53);
      *((_QWORD *)v14 + 54) = *((_QWORD *)v15 + 54);
      *((_QWORD *)v14 + 55) = *((_QWORD *)v15 + 55);
      *((_QWORD *)v14 + 56) = *((_QWORD *)v15 + 56);
      *((_QWORD *)v14 + 57) = *((_QWORD *)v15 + 57);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (*((_QWORD *)v15 + 59))
      {
LABEL_17:
        *((_QWORD *)v14 + 58) = *((_QWORD *)v15 + 58);
        *((_QWORD *)v14 + 59) = *((_QWORD *)v15 + 59);
        v14[480] = v15[480];
        *((_QWORD *)v14 + 61) = *((_QWORD *)v15 + 61);
        *((_QWORD *)v14 + 62) = *((_QWORD *)v15 + 62);
        *((_QWORD *)v14 + 63) = *((_QWORD *)v15 + 63);
        *((_QWORD *)v14 + 64) = *((_QWORD *)v15 + 64);
        *((_QWORD *)v14 + 65) = *((_QWORD *)v15 + 65);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_20:
        v14[528] = v15[528];
        *((_QWORD *)v14 + 67) = *((_QWORD *)v15 + 67);
        v56 = sub_1BA24A9F0();
        v34 = *(int *)(v56 + 56);
        v35 = &v14[v34];
        v36 = &v15[v34];
        *(_QWORD *)v35 = *(_QWORD *)&v15[v34];
        *((_QWORD *)v35 + 1) = *(_QWORD *)&v15[v34 + 8];
        v37 = type metadata accessor for NativeAdPlacement();
        v38 = *(int *)(v37 + 20);
        v54 = &v36[v38];
        v55 = &v35[v38];
        v39 = sub_1BA2C1AC0();
        v53 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v53(v55, v54, v39);
        v35[*(int *)(v37 + 24)] = v36[*(int *)(v37 + 24)];
        v40 = *(int *)(v56 + 60);
        v41 = &v14[v40];
        v42 = &v15[v40];
        *(_QWORD *)v41 = *(_QWORD *)v42;
        *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
        v43 = v57[12];
        v44 = (char *)v11 + v43;
        v45 = &v58[v43];
        v46 = *(_QWORD *)&v58[v43 + 24];
        *((_QWORD *)v44 + 3) = v46;
        *((_QWORD *)v44 + 4) = *(_QWORD *)&v58[v43 + 32];
        v47 = **(void (***)(char *, char *, uint64_t))(v46 - 8);
        swift_bridgeObjectRetain();
        v47(v44, v45, v46);
        v48 = v57[13];
        v49 = *(void **)&v58[v48];
        *(_QWORD *)((char *)v59 + v48) = v49;
        *(_QWORD *)((char *)a1 + *(int *)(v60 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v60 + 28));
        v50 = v49;
        swift_retain();
        goto LABEL_21;
      }
    }
    else
    {
      *((_OWORD *)v14 + 24) = *((_OWORD *)v15 + 24);
      v28 = *((_OWORD *)v15 + 25);
      v29 = *((_OWORD *)v15 + 26);
      v30 = *((_OWORD *)v15 + 28);
      *((_OWORD *)v14 + 27) = *((_OWORD *)v15 + 27);
      *((_OWORD *)v14 + 28) = v30;
      *((_OWORD *)v14 + 25) = v28;
      *((_OWORD *)v14 + 26) = v29;
      if (*((_QWORD *)v15 + 59))
        goto LABEL_17;
    }
    v31 = *((_OWORD *)v15 + 29);
    v32 = *((_OWORD *)v15 + 30);
    v33 = *((_OWORD *)v15 + 32);
    *((_OWORD *)v14 + 31) = *((_OWORD *)v15 + 31);
    *((_OWORD *)v14 + 32) = v33;
    *((_OWORD *)v14 + 29) = v31;
    *((_OWORD *)v14 + 30) = v32;
    goto LABEL_20;
  }
  return a1;
}

_QWORD *initializeWithTake for NativeAd(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  char *v27;
  char *v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for NativeAd.Headline(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      v31 = type metadata accessor for NativeAdHeadline(0);
      v7 = *(int *)(v31 + 24);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = *(_OWORD *)((char *)a2 + v7 + 16);
      *(_OWORD *)v8 = *(_OWORD *)((char *)a2 + v7);
      *((_OWORD *)v8 + 1) = v10;
      v11 = *(_OWORD *)((char *)a2 + v7 + 48);
      *((_OWORD *)v8 + 2) = *(_OWORD *)((char *)a2 + v7 + 32);
      *((_OWORD *)v8 + 3) = v11;
      v12 = *(_OWORD *)((char *)a2 + v7 + 80);
      *((_OWORD *)v8 + 4) = *(_OWORD *)((char *)a2 + v7 + 64);
      *((_OWORD *)v8 + 5) = v12;
      *((_QWORD *)v8 + 12) = *(_QWORD *)((char *)a2 + v7 + 96);
      v30 = (int *)type metadata accessor for NativeAdInfo.Fulfilled(0);
      v13 = v30[11];
      v14 = &v8[v13];
      v15 = &v9[v13];
      *(_OWORD *)&v8[v13] = *(_OWORD *)&v9[v13];
      memcpy(&v8[v13 + 16], &v9[v13 + 16], 0x210uLL);
      v29 = sub_1BA24A9F0();
      v16 = *(int *)(v29 + 56);
      v17 = &v14[v16];
      v18 = &v15[v16];
      *(_OWORD *)&v14[v16] = *(_OWORD *)&v15[v16];
      v19 = type metadata accessor for NativeAdPlacement();
      v20 = *(int *)(v19 + 20);
      v27 = &v18[v20];
      v28 = &v17[v20];
      v21 = sub_1BA2C1AC0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v28, v27, v21);
      v17[*(int *)(v19 + 24)] = v18[*(int *)(v19 + 24)];
      *(_OWORD *)&v14[*(int *)(v29 + 60)] = *(_OWORD *)&v15[*(int *)(v29 + 60)];
      v22 = v30[12];
      v23 = &v8[v22];
      v24 = &v9[v22];
      *((_QWORD *)v23 + 4) = *((_QWORD *)v24 + 4);
      v25 = *((_OWORD *)v24 + 1);
      *(_OWORD *)v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v25;
      *(_QWORD *)&v8[v30[13]] = *(_QWORD *)&v9[v30[13]];
      *(_QWORD *)((char *)a1 + *(int *)(v31 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v31 + 28));
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithTake for NativeAd(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  char *v27;
  char *v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;

  if (a1 != a2)
  {
    sub_1BA258A50((uint64_t)a1, type metadata accessor for NativeAd);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for NativeAd.Headline(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      else
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        v31 = type metadata accessor for NativeAdHeadline(0);
        v7 = *(int *)(v31 + 24);
        v8 = (char *)a1 + v7;
        v9 = (char *)a2 + v7;
        v10 = *(_OWORD *)((char *)a2 + v7 + 16);
        *(_OWORD *)v8 = *(_OWORD *)((char *)a2 + v7);
        *((_OWORD *)v8 + 1) = v10;
        v11 = *(_OWORD *)((char *)a2 + v7 + 48);
        *((_OWORD *)v8 + 2) = *(_OWORD *)((char *)a2 + v7 + 32);
        *((_OWORD *)v8 + 3) = v11;
        v12 = *(_OWORD *)((char *)a2 + v7 + 80);
        *((_OWORD *)v8 + 4) = *(_OWORD *)((char *)a2 + v7 + 64);
        *((_OWORD *)v8 + 5) = v12;
        *((_QWORD *)v8 + 12) = *(_QWORD *)((char *)a2 + v7 + 96);
        v30 = (int *)type metadata accessor for NativeAdInfo.Fulfilled(0);
        v13 = v30[11];
        v14 = &v8[v13];
        v15 = &v9[v13];
        *(_OWORD *)&v8[v13] = *(_OWORD *)&v9[v13];
        memcpy(&v8[v13 + 16], &v9[v13 + 16], 0x210uLL);
        v29 = sub_1BA24A9F0();
        v16 = *(int *)(v29 + 56);
        v17 = &v14[v16];
        v18 = &v15[v16];
        *(_OWORD *)&v14[v16] = *(_OWORD *)&v15[v16];
        v19 = type metadata accessor for NativeAdPlacement();
        v20 = *(int *)(v19 + 20);
        v27 = &v18[v20];
        v28 = &v17[v20];
        v21 = sub_1BA2C1AC0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v28, v27, v21);
        v17[*(int *)(v19 + 24)] = v18[*(int *)(v19 + 24)];
        *(_OWORD *)&v14[*(int *)(v29 + 60)] = *(_OWORD *)&v15[*(int *)(v29 + 60)];
        v22 = v30[12];
        v23 = &v8[v22];
        v24 = &v9[v22];
        *((_QWORD *)v23 + 4) = *((_QWORD *)v24 + 4);
        v25 = *((_OWORD *)v24 + 1);
        *(_OWORD *)v23 = *(_OWORD *)v24;
        *((_OWORD *)v23 + 1) = v25;
        *(_QWORD *)&v8[v30[13]] = *(_QWORD *)&v9[v30[13]];
        *(_QWORD *)((char *)a1 + *(int *)(v31 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v31 + 28));
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

_QWORD *initializeBufferWithCopyOfBuffer for NativeAd.Headline(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  __int128 v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  void *v77;
  id v78;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  int *v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    if (EnumCaseMultiPayload == 1)
    {
      v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
LABEL_19:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    a1[2] = a2[2];
    v86 = type metadata accessor for NativeAdHeadline(0);
    v87 = a2;
    v10 = *(int *)(v86 + 24);
    v88 = a1;
    v11 = (_QWORD *)((char *)a1 + v10);
    v12 = (_QWORD *)((char *)a2 + v10);
    v13 = *(_QWORD *)((char *)a2 + v10 + 8);
    *v11 = *(_QWORD *)((char *)a2 + v10);
    v11[1] = v13;
    v14 = *(_QWORD *)((char *)a2 + v10 + 24);
    v11[2] = *(_QWORD *)((char *)a2 + v10 + 16);
    v11[3] = v14;
    v15 = *(_QWORD *)((char *)a2 + v10 + 32);
    v16 = v12[5];
    v11[4] = v15;
    v11[5] = v16;
    v17 = v12[7];
    v11[6] = v12[6];
    v11[7] = v17;
    v18 = v12[9];
    v11[8] = v12[8];
    v11[9] = v18;
    v19 = v12[11];
    v11[10] = v12[10];
    v11[11] = v19;
    v11[12] = v12[12];
    v83 = (int *)type metadata accessor for NativeAdInfo.Fulfilled(0);
    v84 = v12;
    v20 = v83[11];
    v85 = v11;
    v21 = (char *)v11 + v20;
    v22 = (char *)v12 + v20;
    v23 = *(_QWORD *)((char *)v12 + v20);
    v24 = *((_QWORD *)v22 + 1);
    *(_QWORD *)v21 = v23;
    *((_QWORD *)v21 + 1) = v24;
    v21[16] = v22[16];
    *((_QWORD *)v21 + 3) = *((_QWORD *)v22 + 3);
    v21[32] = v22[32];
    v80 = *((_QWORD *)v22 + 6);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v80)
    {
      *((_QWORD *)v21 + 5) = *((_QWORD *)v22 + 5);
      *((_QWORD *)v21 + 6) = v80;
      *((_QWORD *)v21 + 7) = *((_QWORD *)v22 + 7);
      v21[64] = v22[64];
      v25 = *((_QWORD *)v22 + 10);
      *((_QWORD *)v21 + 9) = *((_QWORD *)v22 + 9);
      *((_QWORD *)v21 + 10) = v25;
      v26 = *((_QWORD *)v22 + 12);
      *((_QWORD *)v21 + 11) = *((_QWORD *)v22 + 11);
      *((_QWORD *)v21 + 12) = v26;
      v27 = *((_QWORD *)v22 + 14);
      *((_QWORD *)v21 + 13) = *((_QWORD *)v22 + 13);
      *((_QWORD *)v21 + 14) = v27;
      *((_QWORD *)v21 + 15) = *((_QWORD *)v22 + 15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v28 = *(_OWORD *)(v22 + 88);
      *(_OWORD *)(v21 + 72) = *(_OWORD *)(v22 + 72);
      *(_OWORD *)(v21 + 88) = v28;
      *(_OWORD *)(v21 + 104) = *(_OWORD *)(v22 + 104);
      *((_QWORD *)v21 + 15) = *((_QWORD *)v22 + 15);
      v29 = *(_OWORD *)(v22 + 56);
      *(_OWORD *)(v21 + 40) = *(_OWORD *)(v22 + 40);
      *(_OWORD *)(v21 + 56) = v29;
    }
    v30 = *((_QWORD *)v22 + 17);
    *((_QWORD *)v21 + 16) = *((_QWORD *)v22 + 16);
    *((_QWORD *)v21 + 17) = v30;
    v31 = *((_QWORD *)v22 + 19);
    *((_QWORD *)v21 + 18) = *((_QWORD *)v22 + 18);
    *((_QWORD *)v21 + 19) = v31;
    *((_QWORD *)v21 + 20) = *((_QWORD *)v22 + 20);
    *(_OWORD *)(v21 + 168) = *(_OWORD *)(v22 + 168);
    v32 = *((_QWORD *)v22 + 24);
    *((_QWORD *)v21 + 23) = *((_QWORD *)v22 + 23);
    *((_QWORD *)v21 + 24) = v32;
    v33 = *((_QWORD *)v22 + 26);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v33)
    {
      *((_QWORD *)v21 + 25) = *((_QWORD *)v22 + 25);
      *((_QWORD *)v21 + 26) = v33;
      v34 = *((_QWORD *)v22 + 28);
      *((_QWORD *)v21 + 27) = *((_QWORD *)v22 + 27);
      *((_QWORD *)v21 + 28) = v34;
      *((_QWORD *)v21 + 29) = *((_QWORD *)v22 + 29);
      *((_OWORD *)v21 + 15) = *((_OWORD *)v22 + 15);
      v35 = *((_QWORD *)v22 + 33);
      *((_QWORD *)v21 + 32) = *((_QWORD *)v22 + 32);
      *((_QWORD *)v21 + 33) = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v36 = *((_QWORD *)v22 + 35);
      if (v36)
      {
LABEL_10:
        *((_QWORD *)v21 + 34) = *((_QWORD *)v22 + 34);
        *((_QWORD *)v21 + 35) = v36;
        v37 = *((_QWORD *)v22 + 37);
        *((_QWORD *)v21 + 36) = *((_QWORD *)v22 + 36);
        *((_QWORD *)v21 + 37) = v37;
        v38 = *((_QWORD *)v22 + 39);
        *((_QWORD *)v21 + 38) = *((_QWORD *)v22 + 38);
        *((_QWORD *)v21 + 39) = v38;
        v39 = *((_QWORD *)v22 + 41);
        *((_QWORD *)v21 + 40) = *((_QWORD *)v22 + 40);
        *((_QWORD *)v21 + 41) = v39;
        *((_QWORD *)v21 + 42) = *((_QWORD *)v22 + 42);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_13;
      }
    }
    else
    {
      v40 = *(_OWORD *)(v22 + 248);
      *(_OWORD *)(v21 + 232) = *(_OWORD *)(v22 + 232);
      *(_OWORD *)(v21 + 248) = v40;
      *((_QWORD *)v21 + 33) = *((_QWORD *)v22 + 33);
      v41 = *(_OWORD *)(v22 + 216);
      *(_OWORD *)(v21 + 200) = *(_OWORD *)(v22 + 200);
      *(_OWORD *)(v21 + 216) = v41;
      v36 = *((_QWORD *)v22 + 35);
      if (v36)
        goto LABEL_10;
    }
    v42 = *((_OWORD *)v22 + 20);
    *((_OWORD *)v21 + 19) = *((_OWORD *)v22 + 19);
    *((_OWORD *)v21 + 20) = v42;
    *((_QWORD *)v21 + 42) = *((_QWORD *)v22 + 42);
    v43 = *((_OWORD *)v22 + 18);
    *((_OWORD *)v21 + 17) = *((_OWORD *)v22 + 17);
    *((_OWORD *)v21 + 18) = v43;
LABEL_13:
    v44 = *((_QWORD *)v22 + 44);
    *((_QWORD *)v21 + 43) = *((_QWORD *)v22 + 43);
    *((_QWORD *)v21 + 44) = v44;
    *((_WORD *)v21 + 180) = *((_WORD *)v22 + 180);
    v45 = *((_QWORD *)v22 + 47);
    *((_QWORD *)v21 + 46) = *((_QWORD *)v22 + 46);
    *((_QWORD *)v21 + 47) = v45;
    v46 = *((_QWORD *)v22 + 49);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v46)
    {
      *((_QWORD *)v21 + 48) = *((_QWORD *)v22 + 48);
      *((_QWORD *)v21 + 49) = v46;
      *((_WORD *)v21 + 200) = *((_WORD *)v22 + 200);
      v47 = *((_QWORD *)v22 + 52);
      *((_QWORD *)v21 + 51) = *((_QWORD *)v22 + 51);
      *((_QWORD *)v21 + 52) = v47;
      v48 = *((_QWORD *)v22 + 54);
      *((_QWORD *)v21 + 53) = *((_QWORD *)v22 + 53);
      *((_QWORD *)v21 + 54) = v48;
      v49 = *((_QWORD *)v22 + 56);
      *((_QWORD *)v21 + 55) = *((_QWORD *)v22 + 55);
      *((_QWORD *)v21 + 56) = v49;
      *((_QWORD *)v21 + 57) = *((_QWORD *)v22 + 57);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v50 = *((_QWORD *)v22 + 59);
      if (v50)
      {
LABEL_15:
        *((_QWORD *)v21 + 58) = *((_QWORD *)v22 + 58);
        *((_QWORD *)v21 + 59) = v50;
        v21[480] = v22[480];
        v51 = *((_QWORD *)v22 + 62);
        *((_QWORD *)v21 + 61) = *((_QWORD *)v22 + 61);
        *((_QWORD *)v21 + 62) = v51;
        v52 = *((_QWORD *)v22 + 64);
        *((_QWORD *)v21 + 63) = *((_QWORD *)v22 + 63);
        *((_QWORD *)v21 + 64) = v52;
        *((_QWORD *)v21 + 65) = *((_QWORD *)v22 + 65);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_18:
        v21[528] = v22[528];
        *((_QWORD *)v21 + 67) = *((_QWORD *)v22 + 67);
        v82 = sub_1BA24A9F0();
        v57 = *(int *)(v82 + 56);
        v58 = &v21[v57];
        v59 = &v22[v57];
        v60 = *(_QWORD *)&v22[v57 + 8];
        *(_QWORD *)v58 = *(_QWORD *)&v22[v57];
        *((_QWORD *)v58 + 1) = v60;
        v61 = type metadata accessor for NativeAdPlacement();
        v62 = *(int *)(v61 + 20);
        v81 = &v58[v62];
        v63 = &v59[v62];
        v64 = sub_1BA2C1AC0();
        v65 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v65(v81, v63, v64);
        v58[*(int *)(v61 + 24)] = v59[*(int *)(v61 + 24)];
        v66 = *(int *)(v82 + 60);
        v67 = &v21[v66];
        v68 = &v22[v66];
        v69 = *((_QWORD *)v68 + 1);
        *(_QWORD *)v67 = *(_QWORD *)v68;
        *((_QWORD *)v67 + 1) = v69;
        v70 = v83[12];
        v71 = (char *)v85 + v70;
        v72 = (char *)v84 + v70;
        v73 = *(_OWORD *)((char *)v84 + v70 + 24);
        *(_OWORD *)((char *)v85 + v70 + 24) = v73;
        v74 = v73;
        v75 = **(void (***)(char *, char *, uint64_t))(v73 - 8);
        swift_bridgeObjectRetain();
        v75(v71, v72, v74);
        v76 = v83[13];
        v77 = *(void **)((char *)v84 + v76);
        *(_QWORD *)((char *)v85 + v76) = v77;
        a1 = v88;
        *(_QWORD *)((char *)v88 + *(int *)(v86 + 28)) = *(_QWORD *)((char *)v87 + *(int *)(v86 + 28));
        v78 = v77;
        swift_retain();
        goto LABEL_19;
      }
    }
    else
    {
      v53 = *((_OWORD *)v22 + 27);
      *((_OWORD *)v21 + 26) = *((_OWORD *)v22 + 26);
      *((_OWORD *)v21 + 27) = v53;
      *((_OWORD *)v21 + 28) = *((_OWORD *)v22 + 28);
      v54 = *((_OWORD *)v22 + 25);
      *((_OWORD *)v21 + 24) = *((_OWORD *)v22 + 24);
      *((_OWORD *)v21 + 25) = v54;
      v50 = *((_QWORD *)v22 + 59);
      if (v50)
        goto LABEL_15;
    }
    v55 = *((_OWORD *)v22 + 30);
    *((_OWORD *)v21 + 29) = *((_OWORD *)v22 + 29);
    *((_OWORD *)v21 + 30) = v55;
    v56 = *((_OWORD *)v22 + 32);
    *((_OWORD *)v21 + 31) = *((_OWORD *)v22 + 31);
    *((_OWORD *)v21 + 32) = v56;
    goto LABEL_18;
  }
  v9 = *a2;
  *a1 = *a2;
  a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for NativeAd.Headline(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v4;
  int *v5;
  _QWORD *v6;
  char *v7;
  char *v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
    return swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v4 = a1 + *(int *)(type metadata accessor for NativeAdHeadline(0) + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v5 = (int *)type metadata accessor for NativeAdInfo.Fulfilled(0);
  v6 = (_QWORD *)(v4 + v5[11]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6[6])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6[26])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v6[35])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6[49])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v6[59])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v7 = (char *)v6 + *(int *)(sub_1BA24A9F0() + 56);
  swift_bridgeObjectRelease();
  v8 = &v7[*(int *)(type metadata accessor for NativeAdPlacement() + 20)];
  v9 = sub_1BA2C1AC0();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v4 + v5[12]);

  return swift_release();
}

_QWORD *initializeWithCopy for NativeAd.Headline(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  __int128 v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  void *v73;
  id v74;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  int *v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  if (EnumCaseMultiPayload != 1)
  {
    a1[2] = a2[2];
    v82 = type metadata accessor for NativeAdHeadline(0);
    v83 = a2;
    v7 = *(int *)(v82 + 24);
    v84 = a1;
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    v10 = *(_QWORD *)((char *)a2 + v7 + 8);
    *v8 = *(_QWORD *)((char *)a2 + v7);
    v8[1] = v10;
    v11 = *(_QWORD *)((char *)a2 + v7 + 24);
    v8[2] = *(_QWORD *)((char *)a2 + v7 + 16);
    v8[3] = v11;
    v12 = *(_QWORD *)((char *)a2 + v7 + 32);
    v13 = v9[5];
    v8[4] = v12;
    v8[5] = v13;
    v14 = v9[7];
    v8[6] = v9[6];
    v8[7] = v14;
    v15 = v9[9];
    v8[8] = v9[8];
    v8[9] = v15;
    v16 = v9[11];
    v8[10] = v9[10];
    v8[11] = v16;
    v8[12] = v9[12];
    v79 = (int *)type metadata accessor for NativeAdInfo.Fulfilled(0);
    v80 = v9;
    v17 = v79[11];
    v81 = v8;
    v18 = (char *)v8 + v17;
    v19 = (char *)v9 + v17;
    v20 = *(_QWORD *)((char *)v9 + v17 + 8);
    *(_QWORD *)v18 = *(_QWORD *)((char *)v9 + v17);
    *((_QWORD *)v18 + 1) = v20;
    v18[16] = *((_BYTE *)v9 + v17 + 16);
    *((_QWORD *)v18 + 3) = *(_QWORD *)((char *)v9 + v17 + 24);
    v18[32] = *((_BYTE *)v9 + v17 + 32);
    v76 = *(_QWORD *)((char *)v9 + v17 + 48);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v76)
    {
      *((_QWORD *)v18 + 5) = *((_QWORD *)v19 + 5);
      *((_QWORD *)v18 + 6) = v76;
      *((_QWORD *)v18 + 7) = *((_QWORD *)v19 + 7);
      v18[64] = v19[64];
      v21 = *((_QWORD *)v19 + 10);
      *((_QWORD *)v18 + 9) = *((_QWORD *)v19 + 9);
      *((_QWORD *)v18 + 10) = v21;
      v22 = *((_QWORD *)v19 + 12);
      *((_QWORD *)v18 + 11) = *((_QWORD *)v19 + 11);
      *((_QWORD *)v18 + 12) = v22;
      v23 = *((_QWORD *)v19 + 14);
      *((_QWORD *)v18 + 13) = *((_QWORD *)v19 + 13);
      *((_QWORD *)v18 + 14) = v23;
      *((_QWORD *)v18 + 15) = *((_QWORD *)v19 + 15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v24 = *(_OWORD *)(v19 + 88);
      *(_OWORD *)(v18 + 72) = *(_OWORD *)(v19 + 72);
      *(_OWORD *)(v18 + 88) = v24;
      *(_OWORD *)(v18 + 104) = *(_OWORD *)(v19 + 104);
      *((_QWORD *)v18 + 15) = *((_QWORD *)v19 + 15);
      v25 = *(_OWORD *)(v19 + 56);
      *(_OWORD *)(v18 + 40) = *(_OWORD *)(v19 + 40);
      *(_OWORD *)(v18 + 56) = v25;
    }
    v26 = *((_QWORD *)v19 + 17);
    *((_QWORD *)v18 + 16) = *((_QWORD *)v19 + 16);
    *((_QWORD *)v18 + 17) = v26;
    v27 = *((_QWORD *)v19 + 19);
    *((_QWORD *)v18 + 18) = *((_QWORD *)v19 + 18);
    *((_QWORD *)v18 + 19) = v27;
    *((_QWORD *)v18 + 20) = *((_QWORD *)v19 + 20);
    *(_OWORD *)(v18 + 168) = *(_OWORD *)(v19 + 168);
    v28 = *((_QWORD *)v19 + 24);
    *((_QWORD *)v18 + 23) = *((_QWORD *)v19 + 23);
    *((_QWORD *)v18 + 24) = v28;
    v29 = *((_QWORD *)v19 + 26);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v29)
    {
      *((_QWORD *)v18 + 25) = *((_QWORD *)v19 + 25);
      *((_QWORD *)v18 + 26) = v29;
      v30 = *((_QWORD *)v19 + 28);
      *((_QWORD *)v18 + 27) = *((_QWORD *)v19 + 27);
      *((_QWORD *)v18 + 28) = v30;
      *((_QWORD *)v18 + 29) = *((_QWORD *)v19 + 29);
      *((_OWORD *)v18 + 15) = *((_OWORD *)v19 + 15);
      v31 = *((_QWORD *)v19 + 33);
      *((_QWORD *)v18 + 32) = *((_QWORD *)v19 + 32);
      *((_QWORD *)v18 + 33) = v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v32 = *((_QWORD *)v19 + 35);
      if (v32)
      {
LABEL_8:
        *((_QWORD *)v18 + 34) = *((_QWORD *)v19 + 34);
        *((_QWORD *)v18 + 35) = v32;
        v33 = *((_QWORD *)v19 + 37);
        *((_QWORD *)v18 + 36) = *((_QWORD *)v19 + 36);
        *((_QWORD *)v18 + 37) = v33;
        v34 = *((_QWORD *)v19 + 39);
        *((_QWORD *)v18 + 38) = *((_QWORD *)v19 + 38);
        *((_QWORD *)v18 + 39) = v34;
        v35 = *((_QWORD *)v19 + 41);
        *((_QWORD *)v18 + 40) = *((_QWORD *)v19 + 40);
        *((_QWORD *)v18 + 41) = v35;
        *((_QWORD *)v18 + 42) = *((_QWORD *)v19 + 42);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_11;
      }
    }
    else
    {
      v36 = *(_OWORD *)(v19 + 248);
      *(_OWORD *)(v18 + 232) = *(_OWORD *)(v19 + 232);
      *(_OWORD *)(v18 + 248) = v36;
      *((_QWORD *)v18 + 33) = *((_QWORD *)v19 + 33);
      v37 = *(_OWORD *)(v19 + 216);
      *(_OWORD *)(v18 + 200) = *(_OWORD *)(v19 + 200);
      *(_OWORD *)(v18 + 216) = v37;
      v32 = *((_QWORD *)v19 + 35);
      if (v32)
        goto LABEL_8;
    }
    v38 = *((_OWORD *)v19 + 20);
    *((_OWORD *)v18 + 19) = *((_OWORD *)v19 + 19);
    *((_OWORD *)v18 + 20) = v38;
    *((_QWORD *)v18 + 42) = *((_QWORD *)v19 + 42);
    v39 = *((_OWORD *)v19 + 18);
    *((_OWORD *)v18 + 17) = *((_OWORD *)v19 + 17);
    *((_OWORD *)v18 + 18) = v39;
LABEL_11:
    v40 = *((_QWORD *)v19 + 44);
    *((_QWORD *)v18 + 43) = *((_QWORD *)v19 + 43);
    *((_QWORD *)v18 + 44) = v40;
    *((_WORD *)v18 + 180) = *((_WORD *)v19 + 180);
    v41 = *((_QWORD *)v19 + 47);
    *((_QWORD *)v18 + 46) = *((_QWORD *)v19 + 46);
    *((_QWORD *)v18 + 47) = v41;
    v42 = *((_QWORD *)v19 + 49);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v42)
    {
      *((_QWORD *)v18 + 48) = *((_QWORD *)v19 + 48);
      *((_QWORD *)v18 + 49) = v42;
      *((_WORD *)v18 + 200) = *((_WORD *)v19 + 200);
      v43 = *((_QWORD *)v19 + 52);
      *((_QWORD *)v18 + 51) = *((_QWORD *)v19 + 51);
      *((_QWORD *)v18 + 52) = v43;
      v44 = *((_QWORD *)v19 + 54);
      *((_QWORD *)v18 + 53) = *((_QWORD *)v19 + 53);
      *((_QWORD *)v18 + 54) = v44;
      v45 = *((_QWORD *)v19 + 56);
      *((_QWORD *)v18 + 55) = *((_QWORD *)v19 + 55);
      *((_QWORD *)v18 + 56) = v45;
      *((_QWORD *)v18 + 57) = *((_QWORD *)v19 + 57);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v46 = *((_QWORD *)v19 + 59);
      if (v46)
      {
LABEL_13:
        *((_QWORD *)v18 + 58) = *((_QWORD *)v19 + 58);
        *((_QWORD *)v18 + 59) = v46;
        v18[480] = v19[480];
        v47 = *((_QWORD *)v19 + 62);
        *((_QWORD *)v18 + 61) = *((_QWORD *)v19 + 61);
        *((_QWORD *)v18 + 62) = v47;
        v48 = *((_QWORD *)v19 + 64);
        *((_QWORD *)v18 + 63) = *((_QWORD *)v19 + 63);
        *((_QWORD *)v18 + 64) = v48;
        *((_QWORD *)v18 + 65) = *((_QWORD *)v19 + 65);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_16:
        v18[528] = v19[528];
        *((_QWORD *)v18 + 67) = *((_QWORD *)v19 + 67);
        v78 = sub_1BA24A9F0();
        v53 = *(int *)(v78 + 56);
        v54 = &v18[v53];
        v55 = &v19[v53];
        v56 = *(_QWORD *)&v19[v53 + 8];
        *(_QWORD *)v54 = *(_QWORD *)&v19[v53];
        *((_QWORD *)v54 + 1) = v56;
        v57 = type metadata accessor for NativeAdPlacement();
        v58 = *(int *)(v57 + 20);
        v77 = &v54[v58];
        v59 = &v55[v58];
        v60 = sub_1BA2C1AC0();
        v61 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v61(v77, v59, v60);
        v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
        v62 = *(int *)(v78 + 60);
        v63 = &v18[v62];
        v64 = &v19[v62];
        v65 = *((_QWORD *)v64 + 1);
        *(_QWORD *)v63 = *(_QWORD *)v64;
        *((_QWORD *)v63 + 1) = v65;
        v66 = v79[12];
        v67 = (char *)v81 + v66;
        v68 = (char *)v80 + v66;
        v69 = *(_OWORD *)((char *)v80 + v66 + 24);
        *(_OWORD *)((char *)v81 + v66 + 24) = v69;
        v70 = v69;
        v71 = **(void (***)(char *, char *, uint64_t))(v69 - 8);
        swift_bridgeObjectRetain();
        v71(v67, v68, v70);
        v72 = v79[13];
        v73 = *(void **)((char *)v80 + v72);
        *(_QWORD *)((char *)v81 + v72) = v73;
        a1 = v84;
        *(_QWORD *)((char *)v84 + *(int *)(v82 + 28)) = *(_QWORD *)((char *)v83 + *(int *)(v82 + 28));
        v74 = v73;
        swift_retain();
        goto LABEL_17;
      }
    }
    else
    {
      v49 = *((_OWORD *)v19 + 27);
      *((_OWORD *)v18 + 26) = *((_OWORD *)v19 + 26);
      *((_OWORD *)v18 + 27) = v49;
      *((_OWORD *)v18 + 28) = *((_OWORD *)v19 + 28);
      v50 = *((_OWORD *)v19 + 25);
      *((_OWORD *)v18 + 24) = *((_OWORD *)v19 + 24);
      *((_OWORD *)v18 + 25) = v50;
      v46 = *((_QWORD *)v19 + 59);
      if (v46)
        goto LABEL_13;
    }
    v51 = *((_OWORD *)v19 + 30);
    *((_OWORD *)v18 + 29) = *((_OWORD *)v19 + 29);
    *((_OWORD *)v18 + 30) = v51;
    v52 = *((_OWORD *)v19 + 32);
    *((_OWORD *)v18 + 31) = *((_OWORD *)v19 + 31);
    *((_OWORD *)v18 + 32) = v52;
    goto LABEL_16;
  }
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
LABEL_17:
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for NativeAd.Headline(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  int EnumCaseMultiPayload;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  void *v46;
  id v47;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  int *v52;
  char *v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;

  v2 = (_QWORD *)a1;
  if ((_QWORD *)a1 != a2)
  {
    sub_1BA258A50(a1, type metadata accessor for NativeAd.Headline);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v2 = *a2;
    v2[1] = a2[1];
    if (EnumCaseMultiPayload == 1)
    {
      v2[2] = a2[2];
      v2[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
LABEL_18:
      swift_storeEnumTagMultiPayload();
      return v2;
    }
    v2[2] = a2[2];
    v55 = type metadata accessor for NativeAdHeadline(0);
    v56 = a2;
    v5 = *(int *)(v55 + 24);
    v57 = v2;
    v6 = (_QWORD *)((char *)v2 + v5);
    v7 = (char *)a2 + v5;
    *v6 = *(_QWORD *)((char *)a2 + v5);
    v6[1] = *(_QWORD *)((char *)a2 + v5 + 8);
    v6[2] = *(_QWORD *)((char *)a2 + v5 + 16);
    v6[3] = *(_QWORD *)((char *)a2 + v5 + 24);
    v6[4] = *(_QWORD *)((char *)a2 + v5 + 32);
    v6[5] = *(_QWORD *)((char *)a2 + v5 + 40);
    v6[6] = *(_QWORD *)((char *)a2 + v5 + 48);
    v6[7] = *(_QWORD *)((char *)a2 + v5 + 56);
    v6[8] = *(_QWORD *)((char *)a2 + v5 + 64);
    v6[9] = *(_QWORD *)((char *)a2 + v5 + 72);
    v6[10] = *(_QWORD *)((char *)a2 + v5 + 80);
    v6[11] = *(_QWORD *)((char *)a2 + v5 + 88);
    v6[12] = *(_QWORD *)((char *)a2 + v5 + 96);
    v52 = (int *)type metadata accessor for NativeAdInfo.Fulfilled(0);
    v53 = v7;
    v8 = v52[11];
    v54 = v6;
    v9 = (char *)v6 + v8;
    v10 = &v7[v8];
    *(_QWORD *)v9 = *(_QWORD *)&v7[v8];
    *((_QWORD *)v9 + 1) = *(_QWORD *)&v7[v8 + 8];
    v9[16] = v7[v8 + 16];
    *((_QWORD *)v9 + 3) = *(_QWORD *)&v7[v8 + 24];
    v9[32] = v7[v8 + 32];
    v49 = *(_QWORD *)&v7[v8 + 48];
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v49)
    {
      *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
      *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
      *((_QWORD *)v9 + 7) = *((_QWORD *)v10 + 7);
      v9[64] = v10[64];
      *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
      *((_QWORD *)v9 + 10) = *((_QWORD *)v10 + 10);
      *((_QWORD *)v9 + 11) = *((_QWORD *)v10 + 11);
      *((_QWORD *)v9 + 12) = *((_QWORD *)v10 + 12);
      *((_QWORD *)v9 + 13) = *((_QWORD *)v10 + 13);
      *((_QWORD *)v9 + 14) = *((_QWORD *)v10 + 14);
      *((_QWORD *)v9 + 15) = *((_QWORD *)v10 + 15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v11 = *(_OWORD *)(v10 + 56);
      *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
      *(_OWORD *)(v9 + 56) = v11;
      v12 = *(_OWORD *)(v10 + 72);
      v13 = *(_OWORD *)(v10 + 88);
      v14 = *(_OWORD *)(v10 + 104);
      *((_QWORD *)v9 + 15) = *((_QWORD *)v10 + 15);
      *(_OWORD *)(v9 + 88) = v13;
      *(_OWORD *)(v9 + 104) = v14;
      *(_OWORD *)(v9 + 72) = v12;
    }
    *((_QWORD *)v9 + 16) = *((_QWORD *)v10 + 16);
    *((_QWORD *)v9 + 17) = *((_QWORD *)v10 + 17);
    *((_QWORD *)v9 + 18) = *((_QWORD *)v10 + 18);
    *((_QWORD *)v9 + 19) = *((_QWORD *)v10 + 19);
    *((_QWORD *)v9 + 20) = *((_QWORD *)v10 + 20);
    *((_QWORD *)v9 + 21) = *((_QWORD *)v10 + 21);
    *((_QWORD *)v9 + 22) = *((_QWORD *)v10 + 22);
    *((_QWORD *)v9 + 23) = *((_QWORD *)v10 + 23);
    *((_QWORD *)v9 + 24) = *((_QWORD *)v10 + 24);
    v15 = *((_QWORD *)v10 + 26);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15)
    {
      *((_QWORD *)v9 + 25) = *((_QWORD *)v10 + 25);
      *((_QWORD *)v9 + 26) = *((_QWORD *)v10 + 26);
      *((_QWORD *)v9 + 27) = *((_QWORD *)v10 + 27);
      *((_QWORD *)v9 + 28) = *((_QWORD *)v10 + 28);
      *((_QWORD *)v9 + 29) = *((_QWORD *)v10 + 29);
      *((_QWORD *)v9 + 30) = *((_QWORD *)v10 + 30);
      *((_QWORD *)v9 + 31) = *((_QWORD *)v10 + 31);
      *((_QWORD *)v9 + 32) = *((_QWORD *)v10 + 32);
      *((_QWORD *)v9 + 33) = *((_QWORD *)v10 + 33);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (*((_QWORD *)v10 + 35))
      {
LABEL_9:
        *((_QWORD *)v9 + 34) = *((_QWORD *)v10 + 34);
        *((_QWORD *)v9 + 35) = *((_QWORD *)v10 + 35);
        *((_QWORD *)v9 + 36) = *((_QWORD *)v10 + 36);
        *((_QWORD *)v9 + 37) = *((_QWORD *)v10 + 37);
        *((_QWORD *)v9 + 38) = *((_QWORD *)v10 + 38);
        *((_QWORD *)v9 + 39) = *((_QWORD *)v10 + 39);
        *((_QWORD *)v9 + 40) = *((_QWORD *)v10 + 40);
        *((_QWORD *)v9 + 41) = *((_QWORD *)v10 + 41);
        *((_QWORD *)v9 + 42) = *((_QWORD *)v10 + 42);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_12;
      }
    }
    else
    {
      *(_OWORD *)(v9 + 200) = *(_OWORD *)(v10 + 200);
      v16 = *(_OWORD *)(v10 + 216);
      v17 = *(_OWORD *)(v10 + 232);
      v18 = *(_OWORD *)(v10 + 248);
      *((_QWORD *)v9 + 33) = *((_QWORD *)v10 + 33);
      *(_OWORD *)(v9 + 232) = v17;
      *(_OWORD *)(v9 + 248) = v18;
      *(_OWORD *)(v9 + 216) = v16;
      if (*((_QWORD *)v10 + 35))
        goto LABEL_9;
    }
    *((_OWORD *)v9 + 17) = *((_OWORD *)v10 + 17);
    v19 = *((_OWORD *)v10 + 18);
    v20 = *((_OWORD *)v10 + 19);
    v21 = *((_OWORD *)v10 + 20);
    *((_QWORD *)v9 + 42) = *((_QWORD *)v10 + 42);
    *((_OWORD *)v9 + 19) = v20;
    *((_OWORD *)v9 + 20) = v21;
    *((_OWORD *)v9 + 18) = v19;
LABEL_12:
    *((_QWORD *)v9 + 43) = *((_QWORD *)v10 + 43);
    *((_QWORD *)v9 + 44) = *((_QWORD *)v10 + 44);
    v9[360] = v10[360];
    v9[361] = v10[361];
    *((_QWORD *)v9 + 46) = *((_QWORD *)v10 + 46);
    *((_QWORD *)v9 + 47) = *((_QWORD *)v10 + 47);
    v22 = *((_QWORD *)v10 + 49);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22)
    {
      *((_QWORD *)v9 + 48) = *((_QWORD *)v10 + 48);
      *((_QWORD *)v9 + 49) = *((_QWORD *)v10 + 49);
      v9[400] = v10[400];
      v9[401] = v10[401];
      *((_QWORD *)v9 + 51) = *((_QWORD *)v10 + 51);
      *((_QWORD *)v9 + 52) = *((_QWORD *)v10 + 52);
      *((_QWORD *)v9 + 53) = *((_QWORD *)v10 + 53);
      *((_QWORD *)v9 + 54) = *((_QWORD *)v10 + 54);
      *((_QWORD *)v9 + 55) = *((_QWORD *)v10 + 55);
      *((_QWORD *)v9 + 56) = *((_QWORD *)v10 + 56);
      *((_QWORD *)v9 + 57) = *((_QWORD *)v10 + 57);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (*((_QWORD *)v10 + 59))
      {
LABEL_14:
        *((_QWORD *)v9 + 58) = *((_QWORD *)v10 + 58);
        *((_QWORD *)v9 + 59) = *((_QWORD *)v10 + 59);
        v9[480] = v10[480];
        *((_QWORD *)v9 + 61) = *((_QWORD *)v10 + 61);
        *((_QWORD *)v9 + 62) = *((_QWORD *)v10 + 62);
        *((_QWORD *)v9 + 63) = *((_QWORD *)v10 + 63);
        *((_QWORD *)v9 + 64) = *((_QWORD *)v10 + 64);
        *((_QWORD *)v9 + 65) = *((_QWORD *)v10 + 65);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_17:
        v9[528] = v10[528];
        *((_QWORD *)v9 + 67) = *((_QWORD *)v10 + 67);
        v51 = sub_1BA24A9F0();
        v29 = *(int *)(v51 + 56);
        v30 = &v9[v29];
        v31 = &v10[v29];
        *(_QWORD *)v30 = *(_QWORD *)&v10[v29];
        *((_QWORD *)v30 + 1) = *(_QWORD *)&v10[v29 + 8];
        v32 = type metadata accessor for NativeAdPlacement();
        v33 = *(int *)(v32 + 20);
        v50 = &v30[v33];
        v34 = &v31[v33];
        v35 = sub_1BA2C1AC0();
        v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v36(v50, v34, v35);
        v30[*(int *)(v32 + 24)] = v31[*(int *)(v32 + 24)];
        v37 = *(int *)(v51 + 60);
        v38 = &v9[v37];
        v39 = &v10[v37];
        *(_QWORD *)v38 = *(_QWORD *)v39;
        *((_QWORD *)v38 + 1) = *((_QWORD *)v39 + 1);
        v40 = v52[12];
        v41 = (char *)v6 + v40;
        v42 = &v53[v40];
        v43 = *(_QWORD *)&v53[v40 + 24];
        *((_QWORD *)v41 + 3) = v43;
        *((_QWORD *)v41 + 4) = *(_QWORD *)&v53[v40 + 32];
        v44 = **(void (***)(char *, char *, uint64_t))(v43 - 8);
        swift_bridgeObjectRetain();
        v44(v41, v42, v43);
        v45 = v52[13];
        v46 = *(void **)&v53[v45];
        *(_QWORD *)((char *)v54 + v45) = v46;
        v2 = v57;
        *(_QWORD *)((char *)v57 + *(int *)(v55 + 28)) = *(_QWORD *)((char *)v56 + *(int *)(v55 + 28));
        v47 = v46;
        swift_retain();
        goto LABEL_18;
      }
    }
    else
    {
      *((_OWORD *)v9 + 24) = *((_OWORD *)v10 + 24);
      v23 = *((_OWORD *)v10 + 25);
      v24 = *((_OWORD *)v10 + 26);
      v25 = *((_OWORD *)v10 + 28);
      *((_OWORD *)v9 + 27) = *((_OWORD *)v10 + 27);
      *((_OWORD *)v9 + 28) = v25;
      *((_OWORD *)v9 + 25) = v23;
      *((_OWORD *)v9 + 26) = v24;
      if (*((_QWORD *)v10 + 59))
        goto LABEL_14;
    }
    v26 = *((_OWORD *)v10 + 29);
    v27 = *((_OWORD *)v10 + 30);
    v28 = *((_OWORD *)v10 + 32);
    *((_OWORD *)v9 + 31) = *((_OWORD *)v10 + 31);
    *((_OWORD *)v9 + 32) = v28;
    *((_OWORD *)v9 + 29) = v26;
    *((_OWORD *)v9 + 30) = v27;
    goto LABEL_17;
  }
  return v2;
}

_QWORD *initializeWithTake for NativeAd.Headline(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  char *v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    v30 = type metadata accessor for NativeAdHeadline(0);
    v6 = *(int *)(v30 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = *(_OWORD *)((char *)a2 + v6 + 16);
    *(_OWORD *)v7 = *(_OWORD *)((char *)a2 + v6);
    *((_OWORD *)v7 + 1) = v9;
    v10 = *(_OWORD *)((char *)a2 + v6 + 48);
    *((_OWORD *)v7 + 2) = *(_OWORD *)((char *)a2 + v6 + 32);
    *((_OWORD *)v7 + 3) = v10;
    v11 = *(_OWORD *)((char *)a2 + v6 + 80);
    *((_OWORD *)v7 + 4) = *(_OWORD *)((char *)a2 + v6 + 64);
    *((_OWORD *)v7 + 5) = v11;
    *((_QWORD *)v7 + 12) = *(_QWORD *)((char *)a2 + v6 + 96);
    v29 = (int *)type metadata accessor for NativeAdInfo.Fulfilled(0);
    v12 = v29[11];
    v13 = &v7[v12];
    v14 = &v8[v12];
    *(_OWORD *)&v7[v12] = *(_OWORD *)&v8[v12];
    memcpy(&v7[v12 + 16], &v8[v12 + 16], 0x210uLL);
    v28 = sub_1BA24A9F0();
    v15 = *(int *)(v28 + 56);
    v16 = &v13[v15];
    v17 = &v14[v15];
    *(_OWORD *)&v13[v15] = *(_OWORD *)&v14[v15];
    v18 = type metadata accessor for NativeAdPlacement();
    v19 = *(int *)(v18 + 20);
    v27 = &v16[v19];
    v20 = &v17[v19];
    v21 = sub_1BA2C1AC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v27, v20, v21);
    v16[*(int *)(v18 + 24)] = v17[*(int *)(v18 + 24)];
    *(_OWORD *)&v13[*(int *)(v28 + 60)] = *(_OWORD *)&v14[*(int *)(v28 + 60)];
    v22 = v29[12];
    v23 = &v7[v22];
    v24 = &v8[v22];
    *((_QWORD *)v23 + 4) = *((_QWORD *)v24 + 4);
    v25 = *((_OWORD *)v24 + 1);
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *((_OWORD *)v23 + 1) = v25;
    *(_QWORD *)&v7[v29[13]] = *(_QWORD *)&v8[v29[13]];
    *(_QWORD *)((char *)a1 + *(int *)(v30 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v30 + 28));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithTake for NativeAd.Headline(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  char *v26;
  char *v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;

  if (a1 != a2)
  {
    sub_1BA258A50((uint64_t)a1, type metadata accessor for NativeAd.Headline);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      v30 = type metadata accessor for NativeAdHeadline(0);
      v6 = *(int *)(v30 + 24);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = *(_OWORD *)((char *)a2 + v6 + 16);
      *(_OWORD *)v7 = *(_OWORD *)((char *)a2 + v6);
      *((_OWORD *)v7 + 1) = v9;
      v10 = *(_OWORD *)((char *)a2 + v6 + 48);
      *((_OWORD *)v7 + 2) = *(_OWORD *)((char *)a2 + v6 + 32);
      *((_OWORD *)v7 + 3) = v10;
      v11 = *(_OWORD *)((char *)a2 + v6 + 80);
      *((_OWORD *)v7 + 4) = *(_OWORD *)((char *)a2 + v6 + 64);
      *((_OWORD *)v7 + 5) = v11;
      *((_QWORD *)v7 + 12) = *(_QWORD *)((char *)a2 + v6 + 96);
      v29 = (int *)type metadata accessor for NativeAdInfo.Fulfilled(0);
      v12 = v29[11];
      v13 = &v7[v12];
      v14 = &v8[v12];
      *(_OWORD *)&v7[v12] = *(_OWORD *)&v8[v12];
      memcpy(&v7[v12 + 16], &v8[v12 + 16], 0x210uLL);
      v28 = sub_1BA24A9F0();
      v15 = *(int *)(v28 + 56);
      v16 = &v13[v15];
      v17 = &v14[v15];
      *(_OWORD *)&v13[v15] = *(_OWORD *)&v14[v15];
      v18 = type metadata accessor for NativeAdPlacement();
      v19 = *(int *)(v18 + 20);
      v26 = &v17[v19];
      v27 = &v16[v19];
      v20 = sub_1BA2C1AC0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v27, v26, v20);
      v16[*(int *)(v18 + 24)] = v17[*(int *)(v18 + 24)];
      *(_OWORD *)&v13[*(int *)(v28 + 60)] = *(_OWORD *)&v14[*(int *)(v28 + 60)];
      v21 = v29[12];
      v22 = &v7[v21];
      v23 = &v8[v21];
      *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
      v24 = *((_OWORD *)v23 + 1);
      *(_OWORD *)v22 = *(_OWORD *)v23;
      *((_OWORD *)v22 + 1) = v24;
      *(_QWORD *)&v7[v29[13]] = *(_QWORD *)&v8[v29[13]];
      *(_QWORD *)((char *)a1 + *(int *)(v30 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v30 + 28));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

_QWORD *initializeBufferWithCopyOfBuffer for NativeAdHeadline(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  __int128 v68;
  uint64_t v69;
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;
  void *v72;
  id v73;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  int *v78;
  char *v79;
  _QWORD *v80;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v3 & 0x20000) == 0)
  {
    v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    a1[2] = a2[2];
    v5 = *(int *)(a3 + 24);
    v6 = (_QWORD *)((char *)a1 + v5);
    v7 = (char *)a2 + v5;
    v8 = *(_QWORD *)((char *)a2 + v5 + 8);
    *v6 = *(_QWORD *)((char *)a2 + v5);
    v6[1] = v8;
    v9 = *(_QWORD *)((char *)a2 + v5 + 24);
    v6[2] = *(_QWORD *)((char *)a2 + v5 + 16);
    v6[3] = v9;
    v10 = *(_QWORD *)((char *)a2 + v5 + 40);
    v6[4] = *(_QWORD *)((char *)a2 + v5 + 32);
    v6[5] = v10;
    v11 = *(_QWORD *)((char *)a2 + v5 + 56);
    v6[6] = *(_QWORD *)((char *)a2 + v5 + 48);
    v6[7] = v11;
    v12 = *(_QWORD *)((char *)a2 + v5 + 72);
    v6[8] = *(_QWORD *)((char *)a2 + v5 + 64);
    v6[9] = v12;
    v13 = *(_QWORD *)((char *)a2 + v5 + 88);
    v6[10] = *(_QWORD *)((char *)a2 + v5 + 80);
    v6[11] = v13;
    v6[12] = *(_QWORD *)((char *)a2 + v5 + 96);
    v78 = (int *)type metadata accessor for NativeAdInfo.Fulfilled(0);
    v79 = v7;
    v14 = v78[11];
    v80 = v6;
    v15 = (char *)v6 + v14;
    v16 = &v7[v14];
    v17 = *(_QWORD *)&v7[v14 + 8];
    *(_QWORD *)v15 = *(_QWORD *)&v7[v14];
    *((_QWORD *)v15 + 1) = v17;
    v15[16] = v7[v14 + 16];
    *((_QWORD *)v15 + 3) = *(_QWORD *)&v7[v14 + 24];
    v15[32] = v7[v14 + 32];
    v75 = *(_QWORD *)&v7[v14 + 48];
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v75)
    {
      *((_QWORD *)v15 + 5) = *((_QWORD *)v16 + 5);
      *((_QWORD *)v15 + 6) = v75;
      *((_QWORD *)v15 + 7) = *((_QWORD *)v16 + 7);
      v15[64] = v16[64];
      v18 = *((_QWORD *)v16 + 10);
      *((_QWORD *)v15 + 9) = *((_QWORD *)v16 + 9);
      *((_QWORD *)v15 + 10) = v18;
      v19 = *((_QWORD *)v16 + 12);
      *((_QWORD *)v15 + 11) = *((_QWORD *)v16 + 11);
      *((_QWORD *)v15 + 12) = v19;
      v20 = *((_QWORD *)v16 + 14);
      *((_QWORD *)v15 + 13) = *((_QWORD *)v16 + 13);
      *((_QWORD *)v15 + 14) = v20;
      *((_QWORD *)v15 + 15) = *((_QWORD *)v16 + 15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v23 = *(_OWORD *)(v16 + 88);
      *(_OWORD *)(v15 + 72) = *(_OWORD *)(v16 + 72);
      *(_OWORD *)(v15 + 88) = v23;
      *(_OWORD *)(v15 + 104) = *(_OWORD *)(v16 + 104);
      *((_QWORD *)v15 + 15) = *((_QWORD *)v16 + 15);
      v24 = *(_OWORD *)(v16 + 56);
      *(_OWORD *)(v15 + 40) = *(_OWORD *)(v16 + 40);
      *(_OWORD *)(v15 + 56) = v24;
    }
    v25 = *((_QWORD *)v16 + 17);
    *((_QWORD *)v15 + 16) = *((_QWORD *)v16 + 16);
    *((_QWORD *)v15 + 17) = v25;
    v26 = *((_QWORD *)v16 + 19);
    *((_QWORD *)v15 + 18) = *((_QWORD *)v16 + 18);
    *((_QWORD *)v15 + 19) = v26;
    *((_QWORD *)v15 + 20) = *((_QWORD *)v16 + 20);
    *(_OWORD *)(v15 + 168) = *(_OWORD *)(v16 + 168);
    v27 = *((_QWORD *)v16 + 24);
    *((_QWORD *)v15 + 23) = *((_QWORD *)v16 + 23);
    *((_QWORD *)v15 + 24) = v27;
    v28 = *((_QWORD *)v16 + 26);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v28)
    {
      *((_QWORD *)v15 + 25) = *((_QWORD *)v16 + 25);
      *((_QWORD *)v15 + 26) = v28;
      v29 = *((_QWORD *)v16 + 28);
      *((_QWORD *)v15 + 27) = *((_QWORD *)v16 + 27);
      *((_QWORD *)v15 + 28) = v29;
      *((_QWORD *)v15 + 29) = *((_QWORD *)v16 + 29);
      *((_OWORD *)v15 + 15) = *((_OWORD *)v16 + 15);
      v30 = *((_QWORD *)v16 + 33);
      *((_QWORD *)v15 + 32) = *((_QWORD *)v16 + 32);
      *((_QWORD *)v15 + 33) = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v31 = *((_QWORD *)v16 + 35);
      if (v31)
      {
LABEL_8:
        *((_QWORD *)v15 + 34) = *((_QWORD *)v16 + 34);
        *((_QWORD *)v15 + 35) = v31;
        v32 = *((_QWORD *)v16 + 37);
        *((_QWORD *)v15 + 36) = *((_QWORD *)v16 + 36);
        *((_QWORD *)v15 + 37) = v32;
        v33 = *((_QWORD *)v16 + 39);
        *((_QWORD *)v15 + 38) = *((_QWORD *)v16 + 38);
        *((_QWORD *)v15 + 39) = v33;
        v34 = *((_QWORD *)v16 + 41);
        *((_QWORD *)v15 + 40) = *((_QWORD *)v16 + 40);
        *((_QWORD *)v15 + 41) = v34;
        *((_QWORD *)v15 + 42) = *((_QWORD *)v16 + 42);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_11;
      }
    }
    else
    {
      v35 = *(_OWORD *)(v16 + 248);
      *(_OWORD *)(v15 + 232) = *(_OWORD *)(v16 + 232);
      *(_OWORD *)(v15 + 248) = v35;
      *((_QWORD *)v15 + 33) = *((_QWORD *)v16 + 33);
      v36 = *(_OWORD *)(v16 + 216);
      *(_OWORD *)(v15 + 200) = *(_OWORD *)(v16 + 200);
      *(_OWORD *)(v15 + 216) = v36;
      v31 = *((_QWORD *)v16 + 35);
      if (v31)
        goto LABEL_8;
    }
    v37 = *((_OWORD *)v16 + 20);
    *((_OWORD *)v15 + 19) = *((_OWORD *)v16 + 19);
    *((_OWORD *)v15 + 20) = v37;
    *((_QWORD *)v15 + 42) = *((_QWORD *)v16 + 42);
    v38 = *((_OWORD *)v16 + 18);
    *((_OWORD *)v15 + 17) = *((_OWORD *)v16 + 17);
    *((_OWORD *)v15 + 18) = v38;
LABEL_11:
    v39 = *((_QWORD *)v16 + 44);
    *((_QWORD *)v15 + 43) = *((_QWORD *)v16 + 43);
    *((_QWORD *)v15 + 44) = v39;
    *((_WORD *)v15 + 180) = *((_WORD *)v16 + 180);
    v40 = *((_QWORD *)v16 + 47);
    *((_QWORD *)v15 + 46) = *((_QWORD *)v16 + 46);
    *((_QWORD *)v15 + 47) = v40;
    v41 = *((_QWORD *)v16 + 49);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v41)
    {
      *((_QWORD *)v15 + 48) = *((_QWORD *)v16 + 48);
      *((_QWORD *)v15 + 49) = v41;
      *((_WORD *)v15 + 200) = *((_WORD *)v16 + 200);
      v42 = *((_QWORD *)v16 + 52);
      *((_QWORD *)v15 + 51) = *((_QWORD *)v16 + 51);
      *((_QWORD *)v15 + 52) = v42;
      v43 = *((_QWORD *)v16 + 54);
      *((_QWORD *)v15 + 53) = *((_QWORD *)v16 + 53);
      *((_QWORD *)v15 + 54) = v43;
      v44 = *((_QWORD *)v16 + 56);
      *((_QWORD *)v15 + 55) = *((_QWORD *)v16 + 55);
      *((_QWORD *)v15 + 56) = v44;
      *((_QWORD *)v15 + 57) = *((_QWORD *)v16 + 57);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45 = *((_QWORD *)v16 + 59);
      if (v45)
      {
LABEL_13:
        *((_QWORD *)v15 + 58) = *((_QWORD *)v16 + 58);
        *((_QWORD *)v15 + 59) = v45;
        v15[480] = v16[480];
        v46 = *((_QWORD *)v16 + 62);
        *((_QWORD *)v15 + 61) = *((_QWORD *)v16 + 61);
        *((_QWORD *)v15 + 62) = v46;
        v47 = *((_QWORD *)v16 + 64);
        *((_QWORD *)v15 + 63) = *((_QWORD *)v16 + 63);
        *((_QWORD *)v15 + 64) = v47;
        *((_QWORD *)v15 + 65) = *((_QWORD *)v16 + 65);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_16:
        v15[528] = v16[528];
        *((_QWORD *)v15 + 67) = *((_QWORD *)v16 + 67);
        v77 = sub_1BA24A9F0();
        v52 = *(int *)(v77 + 56);
        v53 = &v15[v52];
        v54 = &v16[v52];
        v55 = *(_QWORD *)&v16[v52 + 8];
        *(_QWORD *)v53 = *(_QWORD *)&v16[v52];
        *((_QWORD *)v53 + 1) = v55;
        v56 = type metadata accessor for NativeAdPlacement();
        v57 = *(int *)(v56 + 20);
        v76 = &v53[v57];
        v58 = &v54[v57];
        v59 = sub_1BA2C1AC0();
        v60 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v60(v76, v58, v59);
        v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
        v61 = *(int *)(v77 + 60);
        v62 = &v15[v61];
        v63 = &v16[v61];
        v64 = *((_QWORD *)v63 + 1);
        *(_QWORD *)v62 = *(_QWORD *)v63;
        *((_QWORD *)v62 + 1) = v64;
        v65 = v78[12];
        v66 = (char *)v80 + v65;
        v67 = &v79[v65];
        v68 = *(_OWORD *)&v79[v65 + 24];
        *(_OWORD *)((char *)v80 + v65 + 24) = v68;
        v69 = v68;
        v70 = **(void (***)(char *, char *, uint64_t))(v68 - 8);
        swift_bridgeObjectRetain();
        v70(v66, v67, v69);
        v71 = v78[13];
        v72 = *(void **)&v79[v71];
        *(_QWORD *)((char *)v80 + v71) = v72;
        v22 = a1;
        *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
        v73 = v72;
        goto LABEL_17;
      }
    }
    else
    {
      v48 = *((_OWORD *)v16 + 27);
      *((_OWORD *)v15 + 26) = *((_OWORD *)v16 + 26);
      *((_OWORD *)v15 + 27) = v48;
      *((_OWORD *)v15 + 28) = *((_OWORD *)v16 + 28);
      v49 = *((_OWORD *)v16 + 25);
      *((_OWORD *)v15 + 24) = *((_OWORD *)v16 + 24);
      *((_OWORD *)v15 + 25) = v49;
      v45 = *((_QWORD *)v16 + 59);
      if (v45)
        goto LABEL_13;
    }
    v50 = *((_OWORD *)v16 + 30);
    *((_OWORD *)v15 + 29) = *((_OWORD *)v16 + 29);
    *((_OWORD *)v15 + 30) = v50;
    v51 = *((_OWORD *)v16 + 32);
    *((_OWORD *)v15 + 31) = *((_OWORD *)v16 + 31);
    *((_OWORD *)v15 + 32) = v51;
    goto LABEL_16;
  }
  v21 = *a2;
  *a1 = *a2;
  v22 = (_QWORD *)(v21 + ((v3 + 16) & ~(unint64_t)v3));
LABEL_17:
  swift_retain();
  return v22;
}

uint64_t destroy for NativeAdHeadline(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  _QWORD *v6;
  char *v7;
  char *v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v5 = (int *)type metadata accessor for NativeAdInfo.Fulfilled(0);
  v6 = (_QWORD *)(v4 + v5[11]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6[6])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6[26])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v6[35])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6[49])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v6[59])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v7 = (char *)v6 + *(int *)(sub_1BA24A9F0() + 56);
  swift_bridgeObjectRelease();
  v8 = &v7[*(int *)(type metadata accessor for NativeAdPlacement() + 20)];
  v9 = sub_1BA2C1AC0();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v4 + v5[12]);

  return swift_release();
}

_QWORD *initializeWithCopy for NativeAdHeadline(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  __int128 v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  void *v69;
  id v70;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  int *v75;
  char *v76;
  _QWORD *v77;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  v4 = *(int *)(a3 + 24);
  v5 = (_QWORD *)((char *)a1 + v4);
  v6 = (char *)a2 + v4;
  v7 = *(_QWORD *)((char *)a2 + v4 + 8);
  *v5 = *(_QWORD *)((char *)a2 + v4);
  v5[1] = v7;
  v8 = *(_QWORD *)((char *)a2 + v4 + 24);
  v5[2] = *(_QWORD *)((char *)a2 + v4 + 16);
  v5[3] = v8;
  v9 = *(_QWORD *)((char *)a2 + v4 + 40);
  v5[4] = *(_QWORD *)((char *)a2 + v4 + 32);
  v5[5] = v9;
  v10 = *(_QWORD *)((char *)a2 + v4 + 56);
  v5[6] = *(_QWORD *)((char *)a2 + v4 + 48);
  v5[7] = v10;
  v11 = *(_QWORD *)((char *)a2 + v4 + 72);
  v5[8] = *(_QWORD *)((char *)a2 + v4 + 64);
  v5[9] = v11;
  v12 = *(_QWORD *)((char *)a2 + v4 + 88);
  v5[10] = *(_QWORD *)((char *)a2 + v4 + 80);
  v5[11] = v12;
  v5[12] = *(_QWORD *)((char *)a2 + v4 + 96);
  v75 = (int *)type metadata accessor for NativeAdInfo.Fulfilled(0);
  v76 = v6;
  v13 = v75[11];
  v77 = v5;
  v14 = (char *)v5 + v13;
  v15 = &v6[v13];
  v16 = *(_QWORD *)&v6[v13 + 8];
  *(_QWORD *)v14 = *(_QWORD *)&v6[v13];
  *((_QWORD *)v14 + 1) = v16;
  v14[16] = v6[v13 + 16];
  *((_QWORD *)v14 + 3) = *(_QWORD *)&v6[v13 + 24];
  v14[32] = v6[v13 + 32];
  v72 = *(_QWORD *)&v6[v13 + 48];
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v72)
  {
    *((_QWORD *)v14 + 5) = *((_QWORD *)v15 + 5);
    *((_QWORD *)v14 + 6) = v72;
    *((_QWORD *)v14 + 7) = *((_QWORD *)v15 + 7);
    v14[64] = v15[64];
    v17 = *((_QWORD *)v15 + 10);
    *((_QWORD *)v14 + 9) = *((_QWORD *)v15 + 9);
    *((_QWORD *)v14 + 10) = v17;
    v18 = *((_QWORD *)v15 + 12);
    *((_QWORD *)v14 + 11) = *((_QWORD *)v15 + 11);
    *((_QWORD *)v14 + 12) = v18;
    v19 = *((_QWORD *)v15 + 14);
    *((_QWORD *)v14 + 13) = *((_QWORD *)v15 + 13);
    *((_QWORD *)v14 + 14) = v19;
    *((_QWORD *)v14 + 15) = *((_QWORD *)v15 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = *(_OWORD *)(v15 + 88);
    *(_OWORD *)(v14 + 72) = *(_OWORD *)(v15 + 72);
    *(_OWORD *)(v14 + 88) = v20;
    *(_OWORD *)(v14 + 104) = *(_OWORD *)(v15 + 104);
    *((_QWORD *)v14 + 15) = *((_QWORD *)v15 + 15);
    v21 = *(_OWORD *)(v15 + 56);
    *(_OWORD *)(v14 + 40) = *(_OWORD *)(v15 + 40);
    *(_OWORD *)(v14 + 56) = v21;
  }
  v22 = *((_QWORD *)v15 + 17);
  *((_QWORD *)v14 + 16) = *((_QWORD *)v15 + 16);
  *((_QWORD *)v14 + 17) = v22;
  v23 = *((_QWORD *)v15 + 19);
  *((_QWORD *)v14 + 18) = *((_QWORD *)v15 + 18);
  *((_QWORD *)v14 + 19) = v23;
  *((_QWORD *)v14 + 20) = *((_QWORD *)v15 + 20);
  *(_OWORD *)(v14 + 168) = *(_OWORD *)(v15 + 168);
  v24 = *((_QWORD *)v15 + 24);
  *((_QWORD *)v14 + 23) = *((_QWORD *)v15 + 23);
  *((_QWORD *)v14 + 24) = v24;
  v25 = *((_QWORD *)v15 + 26);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v25)
  {
    *((_QWORD *)v14 + 25) = *((_QWORD *)v15 + 25);
    *((_QWORD *)v14 + 26) = v25;
    v26 = *((_QWORD *)v15 + 28);
    *((_QWORD *)v14 + 27) = *((_QWORD *)v15 + 27);
    *((_QWORD *)v14 + 28) = v26;
    *((_QWORD *)v14 + 29) = *((_QWORD *)v15 + 29);
    *((_OWORD *)v14 + 15) = *((_OWORD *)v15 + 15);
    v27 = *((_QWORD *)v15 + 33);
    *((_QWORD *)v14 + 32) = *((_QWORD *)v15 + 32);
    *((_QWORD *)v14 + 33) = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = *((_QWORD *)v15 + 35);
    if (v28)
    {
LABEL_6:
      *((_QWORD *)v14 + 34) = *((_QWORD *)v15 + 34);
      *((_QWORD *)v14 + 35) = v28;
      v29 = *((_QWORD *)v15 + 37);
      *((_QWORD *)v14 + 36) = *((_QWORD *)v15 + 36);
      *((_QWORD *)v14 + 37) = v29;
      v30 = *((_QWORD *)v15 + 39);
      *((_QWORD *)v14 + 38) = *((_QWORD *)v15 + 38);
      *((_QWORD *)v14 + 39) = v30;
      v31 = *((_QWORD *)v15 + 41);
      *((_QWORD *)v14 + 40) = *((_QWORD *)v15 + 40);
      *((_QWORD *)v14 + 41) = v31;
      *((_QWORD *)v14 + 42) = *((_QWORD *)v15 + 42);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_9;
    }
  }
  else
  {
    v32 = *(_OWORD *)(v15 + 248);
    *(_OWORD *)(v14 + 232) = *(_OWORD *)(v15 + 232);
    *(_OWORD *)(v14 + 248) = v32;
    *((_QWORD *)v14 + 33) = *((_QWORD *)v15 + 33);
    v33 = *(_OWORD *)(v15 + 216);
    *(_OWORD *)(v14 + 200) = *(_OWORD *)(v15 + 200);
    *(_OWORD *)(v14 + 216) = v33;
    v28 = *((_QWORD *)v15 + 35);
    if (v28)
      goto LABEL_6;
  }
  v34 = *((_OWORD *)v15 + 20);
  *((_OWORD *)v14 + 19) = *((_OWORD *)v15 + 19);
  *((_OWORD *)v14 + 20) = v34;
  *((_QWORD *)v14 + 42) = *((_QWORD *)v15 + 42);
  v35 = *((_OWORD *)v15 + 18);
  *((_OWORD *)v14 + 17) = *((_OWORD *)v15 + 17);
  *((_OWORD *)v14 + 18) = v35;
LABEL_9:
  v36 = *((_QWORD *)v15 + 44);
  *((_QWORD *)v14 + 43) = *((_QWORD *)v15 + 43);
  *((_QWORD *)v14 + 44) = v36;
  *((_WORD *)v14 + 180) = *((_WORD *)v15 + 180);
  v37 = *((_QWORD *)v15 + 47);
  *((_QWORD *)v14 + 46) = *((_QWORD *)v15 + 46);
  *((_QWORD *)v14 + 47) = v37;
  v38 = *((_QWORD *)v15 + 49);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v38)
  {
    v45 = *((_OWORD *)v15 + 27);
    *((_OWORD *)v14 + 26) = *((_OWORD *)v15 + 26);
    *((_OWORD *)v14 + 27) = v45;
    *((_OWORD *)v14 + 28) = *((_OWORD *)v15 + 28);
    v46 = *((_OWORD *)v15 + 25);
    *((_OWORD *)v14 + 24) = *((_OWORD *)v15 + 24);
    *((_OWORD *)v14 + 25) = v46;
    v42 = *((_QWORD *)v15 + 59);
    if (v42)
      goto LABEL_11;
LABEL_13:
    v47 = *((_OWORD *)v15 + 30);
    *((_OWORD *)v14 + 29) = *((_OWORD *)v15 + 29);
    *((_OWORD *)v14 + 30) = v47;
    v48 = *((_OWORD *)v15 + 32);
    *((_OWORD *)v14 + 31) = *((_OWORD *)v15 + 31);
    *((_OWORD *)v14 + 32) = v48;
    goto LABEL_14;
  }
  *((_QWORD *)v14 + 48) = *((_QWORD *)v15 + 48);
  *((_QWORD *)v14 + 49) = v38;
  *((_WORD *)v14 + 200) = *((_WORD *)v15 + 200);
  v39 = *((_QWORD *)v15 + 52);
  *((_QWORD *)v14 + 51) = *((_QWORD *)v15 + 51);
  *((_QWORD *)v14 + 52) = v39;
  v40 = *((_QWORD *)v15 + 54);
  *((_QWORD *)v14 + 53) = *((_QWORD *)v15 + 53);
  *((_QWORD *)v14 + 54) = v40;
  v41 = *((_QWORD *)v15 + 56);
  *((_QWORD *)v14 + 55) = *((_QWORD *)v15 + 55);
  *((_QWORD *)v14 + 56) = v41;
  *((_QWORD *)v14 + 57) = *((_QWORD *)v15 + 57);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v42 = *((_QWORD *)v15 + 59);
  if (!v42)
    goto LABEL_13;
LABEL_11:
  *((_QWORD *)v14 + 58) = *((_QWORD *)v15 + 58);
  *((_QWORD *)v14 + 59) = v42;
  v14[480] = v15[480];
  v43 = *((_QWORD *)v15 + 62);
  *((_QWORD *)v14 + 61) = *((_QWORD *)v15 + 61);
  *((_QWORD *)v14 + 62) = v43;
  v44 = *((_QWORD *)v15 + 64);
  *((_QWORD *)v14 + 63) = *((_QWORD *)v15 + 63);
  *((_QWORD *)v14 + 64) = v44;
  *((_QWORD *)v14 + 65) = *((_QWORD *)v15 + 65);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_14:
  v14[528] = v15[528];
  *((_QWORD *)v14 + 67) = *((_QWORD *)v15 + 67);
  v74 = sub_1BA24A9F0();
  v49 = *(int *)(v74 + 56);
  v50 = &v14[v49];
  v51 = &v15[v49];
  v52 = *(_QWORD *)&v15[v49 + 8];
  *(_QWORD *)v50 = *(_QWORD *)&v15[v49];
  *((_QWORD *)v50 + 1) = v52;
  v53 = type metadata accessor for NativeAdPlacement();
  v54 = *(int *)(v53 + 20);
  v73 = &v50[v54];
  v55 = &v51[v54];
  v56 = sub_1BA2C1AC0();
  v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v57(v73, v55, v56);
  v50[*(int *)(v53 + 24)] = v51[*(int *)(v53 + 24)];
  v58 = *(int *)(v74 + 60);
  v59 = &v14[v58];
  v60 = &v15[v58];
  v61 = *((_QWORD *)v60 + 1);
  *(_QWORD *)v59 = *(_QWORD *)v60;
  *((_QWORD *)v59 + 1) = v61;
  v62 = v75[12];
  v63 = (char *)v77 + v62;
  v64 = &v76[v62];
  v65 = *(_OWORD *)&v76[v62 + 24];
  *(_OWORD *)((char *)v77 + v62 + 24) = v65;
  v66 = v65;
  v67 = **(void (***)(char *, char *, uint64_t))(v65 - 8);
  swift_bridgeObjectRetain();
  v67(v63, v64, v66);
  v68 = v75[13];
  v69 = *(void **)&v76[v68];
  *(_QWORD *)((char *)v77 + v68) = v69;
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  v70 = v69;
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for NativeAdHeadline(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _OWORD *v32;
  _OWORD *v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _OWORD *v41;
  _OWORD *v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  _OWORD *v50;
  __int128 *v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  void *v72;
  void *v73;
  id v74;
  int *v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v77 = a3;
  v78 = a2;
  v6 = *(int *)(a3 + 24);
  v79 = a1;
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = *(_QWORD *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[2] = v8[2];
  v7[3] = v8[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[4] = v8[4];
  v7[5] = v8[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[6] = v8[6];
  v7[7] = v8[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[8] = v8[8];
  v7[9] = v8[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[10] = v8[10];
  v7[11] = v8[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[12] = v8[12];
  swift_retain();
  swift_release();
  v76 = (int *)type metadata accessor for NativeAdInfo.Fulfilled(0);
  v9 = v76[11];
  v10 = (char *)v7 + v9;
  v11 = (char *)v8 + v9;
  *(_QWORD *)v10 = *(_QWORD *)((char *)v8 + v9);
  *((_QWORD *)v10 + 1) = *(_QWORD *)((char *)v8 + v9 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[16] = v11[16];
  *((_QWORD *)v10 + 3) = *((_QWORD *)v11 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[32] = v11[32];
  v12 = v10 + 40;
  v13 = v11 + 40;
  v14 = *((_QWORD *)v11 + 6);
  if (*((_QWORD *)v10 + 6))
  {
    if (v14)
    {
      *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
      *((_QWORD *)v10 + 6) = *((_QWORD *)v11 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v10 + 7) = *((_QWORD *)v11 + 7);
      v10[64] = v11[64];
      *((_QWORD *)v10 + 9) = *((_QWORD *)v11 + 9);
      *((_QWORD *)v10 + 10) = *((_QWORD *)v11 + 10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v10 + 11) = *((_QWORD *)v11 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v10 + 12) = *((_QWORD *)v11 + 12);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v10 + 13) = *((_QWORD *)v11 + 13);
      *((_QWORD *)v10 + 14) = *((_QWORD *)v11 + 14);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v10 + 15) = *((_QWORD *)v11 + 15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA257D78((uint64_t)(v10 + 40));
      v15 = *(_OWORD *)(v11 + 56);
      *v12 = *v13;
      *(_OWORD *)(v10 + 56) = v15;
      v17 = *(_OWORD *)(v11 + 88);
      v16 = *(_OWORD *)(v11 + 104);
      v18 = *(_OWORD *)(v11 + 72);
      *((_QWORD *)v10 + 15) = *((_QWORD *)v11 + 15);
      *(_OWORD *)(v10 + 88) = v17;
      *(_OWORD *)(v10 + 104) = v16;
      *(_OWORD *)(v10 + 72) = v18;
    }
  }
  else if (v14)
  {
    *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
    *((_QWORD *)v10 + 6) = *((_QWORD *)v11 + 6);
    *((_QWORD *)v10 + 7) = *((_QWORD *)v11 + 7);
    v10[64] = v11[64];
    *((_QWORD *)v10 + 9) = *((_QWORD *)v11 + 9);
    *((_QWORD *)v10 + 10) = *((_QWORD *)v11 + 10);
    *((_QWORD *)v10 + 11) = *((_QWORD *)v11 + 11);
    *((_QWORD *)v10 + 12) = *((_QWORD *)v11 + 12);
    *((_QWORD *)v10 + 13) = *((_QWORD *)v11 + 13);
    *((_QWORD *)v10 + 14) = *((_QWORD *)v11 + 14);
    *((_QWORD *)v10 + 15) = *((_QWORD *)v11 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v19 = *(_OWORD *)(v11 + 56);
    *v12 = *v13;
    *(_OWORD *)(v10 + 56) = v19;
    v20 = *(_OWORD *)(v11 + 72);
    v21 = *(_OWORD *)(v11 + 88);
    v22 = *(_OWORD *)(v11 + 104);
    *((_QWORD *)v10 + 15) = *((_QWORD *)v11 + 15);
    *(_OWORD *)(v10 + 88) = v21;
    *(_OWORD *)(v10 + 104) = v22;
    *(_OWORD *)(v10 + 72) = v20;
  }
  *((_QWORD *)v10 + 16) = *((_QWORD *)v11 + 16);
  *((_QWORD *)v10 + 17) = *((_QWORD *)v11 + 17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v10 + 18) = *((_QWORD *)v11 + 18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v10 + 19) = *((_QWORD *)v11 + 19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v10 + 20) = *((_QWORD *)v11 + 20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v10 + 21) = *((_QWORD *)v11 + 21);
  *((_QWORD *)v10 + 22) = *((_QWORD *)v11 + 22);
  *((_QWORD *)v10 + 23) = *((_QWORD *)v11 + 23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v10 + 24) = *((_QWORD *)v11 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = v10 + 200;
  v24 = v11 + 200;
  v25 = *((_QWORD *)v11 + 26);
  if (*((_QWORD *)v10 + 26))
  {
    if (v25)
    {
      *((_QWORD *)v10 + 25) = *((_QWORD *)v11 + 25);
      *((_QWORD *)v10 + 26) = *((_QWORD *)v11 + 26);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v10 + 27) = *((_QWORD *)v11 + 27);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v10 + 28) = *((_QWORD *)v11 + 28);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v10 + 29) = *((_QWORD *)v11 + 29);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v10 + 30) = *((_QWORD *)v11 + 30);
      *((_QWORD *)v10 + 31) = *((_QWORD *)v11 + 31);
      *((_QWORD *)v10 + 32) = *((_QWORD *)v11 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v10 + 33) = *((_QWORD *)v11 + 33);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA257DAC((uint64_t)(v10 + 200));
      *v23 = *v24;
      v27 = *(_OWORD *)(v11 + 232);
      v26 = *(_OWORD *)(v11 + 248);
      v28 = *(_OWORD *)(v11 + 216);
      *((_QWORD *)v10 + 33) = *((_QWORD *)v11 + 33);
      *(_OWORD *)(v10 + 232) = v27;
      *(_OWORD *)(v10 + 248) = v26;
      *(_OWORD *)(v10 + 216) = v28;
    }
  }
  else if (v25)
  {
    *((_QWORD *)v10 + 25) = *((_QWORD *)v11 + 25);
    *((_QWORD *)v10 + 26) = *((_QWORD *)v11 + 26);
    *((_QWORD *)v10 + 27) = *((_QWORD *)v11 + 27);
    *((_QWORD *)v10 + 28) = *((_QWORD *)v11 + 28);
    *((_QWORD *)v10 + 29) = *((_QWORD *)v11 + 29);
    *((_QWORD *)v10 + 30) = *((_QWORD *)v11 + 30);
    *((_QWORD *)v10 + 31) = *((_QWORD *)v11 + 31);
    *((_QWORD *)v10 + 32) = *((_QWORD *)v11 + 32);
    *((_QWORD *)v10 + 33) = *((_QWORD *)v11 + 33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *v23 = *v24;
    v29 = *(_OWORD *)(v11 + 216);
    v30 = *(_OWORD *)(v11 + 232);
    v31 = *(_OWORD *)(v11 + 248);
    *((_QWORD *)v10 + 33) = *((_QWORD *)v11 + 33);
    *(_OWORD *)(v10 + 232) = v30;
    *(_OWORD *)(v10 + 248) = v31;
    *(_OWORD *)(v10 + 216) = v29;
  }
  v32 = v10 + 272;
  v33 = v11 + 272;
  v34 = *((_QWORD *)v11 + 35);
  if (*((_QWORD *)v10 + 35))
  {
    if (v34)
    {
      *((_QWORD *)v10 + 34) = *((_QWORD *)v11 + 34);
      *((_QWORD *)v10 + 35) = *((_QWORD *)v11 + 35);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v10 + 36) = *((_QWORD *)v11 + 36);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v10 + 37) = *((_QWORD *)v11 + 37);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v10 + 38) = *((_QWORD *)v11 + 38);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v10 + 39) = *((_QWORD *)v11 + 39);
      *((_QWORD *)v10 + 40) = *((_QWORD *)v11 + 40);
      *((_QWORD *)v10 + 41) = *((_QWORD *)v11 + 41);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v10 + 42) = *((_QWORD *)v11 + 42);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA257DAC((uint64_t)(v10 + 272));
      *v32 = *v33;
      v36 = *((_OWORD *)v11 + 19);
      v35 = *((_OWORD *)v11 + 20);
      v37 = *((_OWORD *)v11 + 18);
      *((_QWORD *)v10 + 42) = *((_QWORD *)v11 + 42);
      *((_OWORD *)v10 + 19) = v36;
      *((_OWORD *)v10 + 20) = v35;
      *((_OWORD *)v10 + 18) = v37;
    }
  }
  else if (v34)
  {
    *((_QWORD *)v10 + 34) = *((_QWORD *)v11 + 34);
    *((_QWORD *)v10 + 35) = *((_QWORD *)v11 + 35);
    *((_QWORD *)v10 + 36) = *((_QWORD *)v11 + 36);
    *((_QWORD *)v10 + 37) = *((_QWORD *)v11 + 37);
    *((_QWORD *)v10 + 38) = *((_QWORD *)v11 + 38);
    *((_QWORD *)v10 + 39) = *((_QWORD *)v11 + 39);
    *((_QWORD *)v10 + 40) = *((_QWORD *)v11 + 40);
    *((_QWORD *)v10 + 41) = *((_QWORD *)v11 + 41);
    *((_QWORD *)v10 + 42) = *((_QWORD *)v11 + 42);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *v32 = *v33;
    v38 = *((_OWORD *)v11 + 18);
    v39 = *((_OWORD *)v11 + 19);
    v40 = *((_OWORD *)v11 + 20);
    *((_QWORD *)v10 + 42) = *((_QWORD *)v11 + 42);
    *((_OWORD *)v10 + 19) = v39;
    *((_OWORD *)v10 + 20) = v40;
    *((_OWORD *)v10 + 18) = v38;
  }
  *((_QWORD *)v10 + 43) = *((_QWORD *)v11 + 43);
  *((_QWORD *)v10 + 44) = *((_QWORD *)v11 + 44);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[360] = v11[360];
  v10[361] = v11[361];
  *((_QWORD *)v10 + 46) = *((_QWORD *)v11 + 46);
  *((_QWORD *)v10 + 47) = *((_QWORD *)v11 + 47);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v41 = v10 + 384;
  v42 = v11 + 384;
  v43 = *((_QWORD *)v11 + 49);
  if (*((_QWORD *)v10 + 49))
  {
    if (v43)
    {
      *((_QWORD *)v10 + 48) = *((_QWORD *)v11 + 48);
      *((_QWORD *)v10 + 49) = *((_QWORD *)v11 + 49);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v10[400] = v11[400];
      v10[401] = v11[401];
      *((_QWORD *)v10 + 51) = *((_QWORD *)v11 + 51);
      *((_QWORD *)v10 + 52) = *((_QWORD *)v11 + 52);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v10 + 53) = *((_QWORD *)v11 + 53);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v10 + 54) = *((_QWORD *)v11 + 54);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v10 + 55) = *((_QWORD *)v11 + 55);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v10 + 56) = *((_QWORD *)v11 + 56);
      *((_QWORD *)v10 + 57) = *((_QWORD *)v11 + 57);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA257DE0((uint64_t)(v10 + 384));
      *v41 = *v42;
      v44 = *((_OWORD *)v11 + 28);
      v46 = *((_OWORD *)v11 + 25);
      v45 = *((_OWORD *)v11 + 26);
      *((_OWORD *)v10 + 27) = *((_OWORD *)v11 + 27);
      *((_OWORD *)v10 + 28) = v44;
      *((_OWORD *)v10 + 25) = v46;
      *((_OWORD *)v10 + 26) = v45;
    }
  }
  else if (v43)
  {
    *((_QWORD *)v10 + 48) = *((_QWORD *)v11 + 48);
    *((_QWORD *)v10 + 49) = *((_QWORD *)v11 + 49);
    v10[400] = v11[400];
    v10[401] = v11[401];
    *((_QWORD *)v10 + 51) = *((_QWORD *)v11 + 51);
    *((_QWORD *)v10 + 52) = *((_QWORD *)v11 + 52);
    *((_QWORD *)v10 + 53) = *((_QWORD *)v11 + 53);
    *((_QWORD *)v10 + 54) = *((_QWORD *)v11 + 54);
    *((_QWORD *)v10 + 55) = *((_QWORD *)v11 + 55);
    *((_QWORD *)v10 + 56) = *((_QWORD *)v11 + 56);
    *((_QWORD *)v10 + 57) = *((_QWORD *)v11 + 57);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *v41 = *v42;
    v47 = *((_OWORD *)v11 + 25);
    v48 = *((_OWORD *)v11 + 26);
    v49 = *((_OWORD *)v11 + 28);
    *((_OWORD *)v10 + 27) = *((_OWORD *)v11 + 27);
    *((_OWORD *)v10 + 28) = v49;
    *((_OWORD *)v10 + 25) = v47;
    *((_OWORD *)v10 + 26) = v48;
  }
  v50 = v10 + 464;
  v51 = (__int128 *)(v11 + 464);
  v52 = *((_QWORD *)v11 + 59);
  if (*((_QWORD *)v10 + 59))
  {
    if (v52)
    {
      *((_QWORD *)v10 + 58) = *((_QWORD *)v11 + 58);
      *((_QWORD *)v10 + 59) = *((_QWORD *)v11 + 59);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v10[480] = v11[480];
      *((_QWORD *)v10 + 61) = *((_QWORD *)v11 + 61);
      *((_QWORD *)v10 + 62) = *((_QWORD *)v11 + 62);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v10 + 63) = *((_QWORD *)v11 + 63);
      *((_QWORD *)v10 + 64) = *((_QWORD *)v11 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v10 + 65) = *((_QWORD *)v11 + 65);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA257E14((uint64_t)(v10 + 464));
      v53 = *((_OWORD *)v11 + 32);
      v55 = *v51;
      v54 = *((_OWORD *)v11 + 30);
      *((_OWORD *)v10 + 31) = *((_OWORD *)v11 + 31);
      *((_OWORD *)v10 + 32) = v53;
      *v50 = v55;
      *((_OWORD *)v10 + 30) = v54;
    }
  }
  else if (v52)
  {
    *((_QWORD *)v10 + 58) = *((_QWORD *)v11 + 58);
    *((_QWORD *)v10 + 59) = *((_QWORD *)v11 + 59);
    v10[480] = v11[480];
    *((_QWORD *)v10 + 61) = *((_QWORD *)v11 + 61);
    *((_QWORD *)v10 + 62) = *((_QWORD *)v11 + 62);
    *((_QWORD *)v10 + 63) = *((_QWORD *)v11 + 63);
    *((_QWORD *)v10 + 64) = *((_QWORD *)v11 + 64);
    *((_QWORD *)v10 + 65) = *((_QWORD *)v11 + 65);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v56 = *v51;
    v57 = *((_OWORD *)v11 + 30);
    v58 = *((_OWORD *)v11 + 32);
    *((_OWORD *)v10 + 31) = *((_OWORD *)v11 + 31);
    *((_OWORD *)v10 + 32) = v58;
    *v50 = v56;
    *((_OWORD *)v10 + 30) = v57;
  }
  v10[528] = v11[528];
  *((_QWORD *)v10 + 67) = *((_QWORD *)v11 + 67);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v59 = sub_1BA24A9F0();
  v60 = *(int *)(v59 + 56);
  v61 = &v10[v60];
  v62 = &v11[v60];
  *(_QWORD *)v61 = *(_QWORD *)&v11[v60];
  *((_QWORD *)v61 + 1) = *(_QWORD *)&v11[v60 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v63 = type metadata accessor for NativeAdPlacement();
  v64 = *(int *)(v63 + 20);
  v65 = &v61[v64];
  v66 = &v62[v64];
  v67 = sub_1BA2C1AC0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 24))(v65, v66, v67);
  v61[*(int *)(v63 + 24)] = v62[*(int *)(v63 + 24)];
  v68 = *(int *)(v59 + 60);
  v69 = &v10[v68];
  v70 = &v11[v68];
  *(_QWORD *)v69 = *(_QWORD *)v70;
  *((_QWORD *)v69 + 1) = *((_QWORD *)v70 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)v7 + v76[12]), (_QWORD *)((char *)v8 + v76[12]));
  v71 = v76[13];
  v72 = *(void **)((char *)v8 + v71);
  v73 = *(void **)((char *)v7 + v71);
  *(_QWORD *)((char *)v7 + v71) = v72;
  v74 = v72;

  *(_QWORD *)((char *)v79 + *(int *)(v77 + 28)) = *(_QWORD *)((char *)v78 + *(int *)(v77 + 28));
  swift_retain();
  swift_release();
  return v79;
}

uint64_t initializeWithTake for NativeAdHeadline(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t result;
  int *v26;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v3 = *(int *)(a3 + 24);
  v4 = a1 + v3;
  v5 = a2 + v3;
  v6 = *(_OWORD *)(a2 + v3 + 16);
  *(_OWORD *)v4 = *(_OWORD *)(a2 + v3);
  *(_OWORD *)(v4 + 16) = v6;
  v7 = *(_OWORD *)(a2 + v3 + 48);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(a2 + v3 + 32);
  *(_OWORD *)(v4 + 48) = v7;
  v8 = *(_OWORD *)(a2 + v3 + 80);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(a2 + v3 + 64);
  *(_OWORD *)(v4 + 80) = v8;
  *(_QWORD *)(v4 + 96) = *(_QWORD *)(a2 + v3 + 96);
  v26 = (int *)type metadata accessor for NativeAdInfo.Fulfilled(0);
  v9 = v26[11];
  v10 = v4 + v9;
  v11 = v5 + v9;
  *(_OWORD *)(v4 + v9) = *(_OWORD *)(v5 + v9);
  memcpy((void *)(v4 + v9 + 16), (const void *)(v5 + v9 + 16), 0x210uLL);
  v12 = sub_1BA24A9F0();
  v13 = *(int *)(v12 + 56);
  v14 = v10 + v13;
  v15 = v11 + v13;
  *(_OWORD *)(v10 + v13) = *(_OWORD *)(v11 + v13);
  v16 = type metadata accessor for NativeAdPlacement();
  v17 = *(int *)(v16 + 20);
  v18 = v14 + v17;
  v19 = v15 + v17;
  v20 = sub_1BA2C1AC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  *(_BYTE *)(v14 + *(int *)(v16 + 24)) = *(_BYTE *)(v15 + *(int *)(v16 + 24));
  *(_OWORD *)(v10 + *(int *)(v12 + 60)) = *(_OWORD *)(v11 + *(int *)(v12 + 60));
  v21 = v26[12];
  v22 = v4 + v21;
  v23 = v5 + v21;
  *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
  v24 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v24;
  *(_QWORD *)(v4 + v26[13]) = *(_QWORD *)(v5 + v26[13]);
  result = a1;
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return result;
}

_QWORD *assignWithTake for NativeAdHeadline(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  __int128 v63;
  uint64_t v64;
  void *v65;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_unknownObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = *(_QWORD *)((char *)a2 + v7 + 8);
  *v8 = *(_QWORD *)((char *)a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v11 = v9[3];
  v8[2] = v9[2];
  v8[3] = v11;
  swift_bridgeObjectRelease();
  v12 = v9[5];
  v8[4] = v9[4];
  v8[5] = v12;
  swift_bridgeObjectRelease();
  v13 = v9[7];
  v8[6] = v9[6];
  v8[7] = v13;
  swift_bridgeObjectRelease();
  v14 = v9[9];
  v8[8] = v9[8];
  v8[9] = v14;
  swift_bridgeObjectRelease();
  v15 = v9[11];
  v8[10] = v9[10];
  v8[11] = v15;
  swift_bridgeObjectRelease();
  v8[12] = v9[12];
  swift_release();
  v16 = type metadata accessor for NativeAdInfo.Fulfilled(0);
  v17 = *(int *)(v16 + 44);
  v18 = (char *)v8 + v17;
  v19 = (char *)v9 + v17;
  v20 = *(_QWORD *)((char *)v9 + v17 + 8);
  *(_QWORD *)v18 = *(_QWORD *)((char *)v9 + v17);
  *((_QWORD *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  v18[16] = v19[16];
  *((_QWORD *)v18 + 3) = *((_QWORD *)v19 + 3);
  swift_bridgeObjectRelease();
  v18[32] = v19[32];
  if (*((_QWORD *)v18 + 6))
  {
    v21 = *((_QWORD *)v19 + 6);
    if (v21)
    {
      *((_QWORD *)v18 + 5) = *((_QWORD *)v19 + 5);
      *((_QWORD *)v18 + 6) = v21;
      swift_bridgeObjectRelease();
      *((_QWORD *)v18 + 7) = *((_QWORD *)v19 + 7);
      v18[64] = v19[64];
      v22 = *((_QWORD *)v19 + 10);
      *((_QWORD *)v18 + 9) = *((_QWORD *)v19 + 9);
      *((_QWORD *)v18 + 10) = v22;
      swift_bridgeObjectRelease();
      *((_QWORD *)v18 + 11) = *((_QWORD *)v19 + 11);
      swift_bridgeObjectRelease();
      *((_QWORD *)v18 + 12) = *((_QWORD *)v19 + 12);
      swift_bridgeObjectRelease();
      v23 = *((_QWORD *)v19 + 14);
      *((_QWORD *)v18 + 13) = *((_QWORD *)v19 + 13);
      *((_QWORD *)v18 + 14) = v23;
      swift_bridgeObjectRelease();
      *((_QWORD *)v18 + 15) = *((_QWORD *)v19 + 15);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1BA257D78((uint64_t)(v18 + 40));
  }
  v24 = *(_OWORD *)(v19 + 88);
  *(_OWORD *)(v18 + 72) = *(_OWORD *)(v19 + 72);
  *(_OWORD *)(v18 + 88) = v24;
  *(_OWORD *)(v18 + 104) = *(_OWORD *)(v19 + 104);
  *((_QWORD *)v18 + 15) = *((_QWORD *)v19 + 15);
  v25 = *(_OWORD *)(v19 + 56);
  *(_OWORD *)(v18 + 40) = *(_OWORD *)(v19 + 40);
  *(_OWORD *)(v18 + 56) = v25;
LABEL_6:
  v26 = *((_QWORD *)v19 + 17);
  *((_QWORD *)v18 + 16) = *((_QWORD *)v19 + 16);
  *((_QWORD *)v18 + 17) = v26;
  swift_bridgeObjectRelease();
  *((_QWORD *)v18 + 18) = *((_QWORD *)v19 + 18);
  swift_bridgeObjectRelease();
  *((_QWORD *)v18 + 19) = *((_QWORD *)v19 + 19);
  swift_bridgeObjectRelease();
  *((_QWORD *)v18 + 20) = *((_QWORD *)v19 + 20);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v18 + 168) = *(_OWORD *)(v19 + 168);
  *((_QWORD *)v18 + 23) = *((_QWORD *)v19 + 23);
  swift_bridgeObjectRelease();
  *((_QWORD *)v18 + 24) = *((_QWORD *)v19 + 24);
  swift_bridgeObjectRelease();
  if (*((_QWORD *)v18 + 26))
  {
    v27 = *((_QWORD *)v19 + 26);
    if (v27)
    {
      *((_QWORD *)v18 + 25) = *((_QWORD *)v19 + 25);
      *((_QWORD *)v18 + 26) = v27;
      swift_bridgeObjectRelease();
      *((_QWORD *)v18 + 27) = *((_QWORD *)v19 + 27);
      swift_bridgeObjectRelease();
      *((_QWORD *)v18 + 28) = *((_QWORD *)v19 + 28);
      swift_bridgeObjectRelease();
      *((_QWORD *)v18 + 29) = *((_QWORD *)v19 + 29);
      swift_bridgeObjectRelease();
      *((_OWORD *)v18 + 15) = *((_OWORD *)v19 + 15);
      *((_QWORD *)v18 + 32) = *((_QWORD *)v19 + 32);
      swift_bridgeObjectRelease();
      *((_QWORD *)v18 + 33) = *((_QWORD *)v19 + 33);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1BA257DAC((uint64_t)(v18 + 200));
  }
  v28 = *(_OWORD *)(v19 + 248);
  *(_OWORD *)(v18 + 232) = *(_OWORD *)(v19 + 232);
  *(_OWORD *)(v18 + 248) = v28;
  *((_QWORD *)v18 + 33) = *((_QWORD *)v19 + 33);
  v29 = *(_OWORD *)(v19 + 216);
  *(_OWORD *)(v18 + 200) = *(_OWORD *)(v19 + 200);
  *(_OWORD *)(v18 + 216) = v29;
LABEL_11:
  if (*((_QWORD *)v18 + 35))
  {
    v30 = *((_QWORD *)v19 + 35);
    if (v30)
    {
      *((_QWORD *)v18 + 34) = *((_QWORD *)v19 + 34);
      *((_QWORD *)v18 + 35) = v30;
      swift_bridgeObjectRelease();
      *((_QWORD *)v18 + 36) = *((_QWORD *)v19 + 36);
      swift_bridgeObjectRelease();
      *((_QWORD *)v18 + 37) = *((_QWORD *)v19 + 37);
      swift_bridgeObjectRelease();
      *((_QWORD *)v18 + 38) = *((_QWORD *)v19 + 38);
      swift_bridgeObjectRelease();
      *(_OWORD *)(v18 + 312) = *(_OWORD *)(v19 + 312);
      *((_QWORD *)v18 + 41) = *((_QWORD *)v19 + 41);
      swift_bridgeObjectRelease();
      *((_QWORD *)v18 + 42) = *((_QWORD *)v19 + 42);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1BA257DAC((uint64_t)(v18 + 272));
  }
  v31 = *((_OWORD *)v19 + 20);
  *((_OWORD *)v18 + 19) = *((_OWORD *)v19 + 19);
  *((_OWORD *)v18 + 20) = v31;
  *((_QWORD *)v18 + 42) = *((_QWORD *)v19 + 42);
  v32 = *((_OWORD *)v19 + 18);
  *((_OWORD *)v18 + 17) = *((_OWORD *)v19 + 17);
  *((_OWORD *)v18 + 18) = v32;
LABEL_16:
  v33 = *((_QWORD *)v19 + 44);
  *((_QWORD *)v18 + 43) = *((_QWORD *)v19 + 43);
  *((_QWORD *)v18 + 44) = v33;
  swift_bridgeObjectRelease();
  v18[360] = v19[360];
  v18[361] = v19[361];
  v34 = *((_QWORD *)v19 + 47);
  *((_QWORD *)v18 + 46) = *((_QWORD *)v19 + 46);
  *((_QWORD *)v18 + 47) = v34;
  swift_bridgeObjectRelease();
  if (*((_QWORD *)v18 + 49))
  {
    v35 = *((_QWORD *)v19 + 49);
    if (v35)
    {
      *((_QWORD *)v18 + 48) = *((_QWORD *)v19 + 48);
      *((_QWORD *)v18 + 49) = v35;
      swift_bridgeObjectRelease();
      v18[400] = v19[400];
      v18[401] = v19[401];
      v36 = *((_QWORD *)v19 + 52);
      *((_QWORD *)v18 + 51) = *((_QWORD *)v19 + 51);
      *((_QWORD *)v18 + 52) = v36;
      swift_bridgeObjectRelease();
      *((_QWORD *)v18 + 53) = *((_QWORD *)v19 + 53);
      swift_bridgeObjectRelease();
      *((_QWORD *)v18 + 54) = *((_QWORD *)v19 + 54);
      swift_bridgeObjectRelease();
      *((_QWORD *)v18 + 55) = *((_QWORD *)v19 + 55);
      swift_bridgeObjectRelease();
      v37 = *((_QWORD *)v19 + 57);
      *((_QWORD *)v18 + 56) = *((_QWORD *)v19 + 56);
      *((_QWORD *)v18 + 57) = v37;
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1BA257DE0((uint64_t)(v18 + 384));
  }
  v38 = *((_OWORD *)v19 + 27);
  *((_OWORD *)v18 + 26) = *((_OWORD *)v19 + 26);
  *((_OWORD *)v18 + 27) = v38;
  *((_OWORD *)v18 + 28) = *((_OWORD *)v19 + 28);
  v39 = *((_OWORD *)v19 + 25);
  *((_OWORD *)v18 + 24) = *((_OWORD *)v19 + 24);
  *((_OWORD *)v18 + 25) = v39;
LABEL_21:
  v69 = a2;
  v70 = a1;
  v67 = v16;
  v68 = a3;
  if (!*((_QWORD *)v18 + 59))
  {
LABEL_25:
    v43 = *((_OWORD *)v19 + 30);
    *((_OWORD *)v18 + 29) = *((_OWORD *)v19 + 29);
    *((_OWORD *)v18 + 30) = v43;
    v44 = *((_OWORD *)v19 + 32);
    *((_OWORD *)v18 + 31) = *((_OWORD *)v19 + 31);
    *((_OWORD *)v18 + 32) = v44;
    goto LABEL_26;
  }
  v40 = *((_QWORD *)v19 + 59);
  if (!v40)
  {
    sub_1BA257E14((uint64_t)(v18 + 464));
    goto LABEL_25;
  }
  *((_QWORD *)v18 + 58) = *((_QWORD *)v19 + 58);
  *((_QWORD *)v18 + 59) = v40;
  swift_bridgeObjectRelease();
  v18[480] = v19[480];
  v41 = *((_QWORD *)v19 + 62);
  *((_QWORD *)v18 + 61) = *((_QWORD *)v19 + 61);
  *((_QWORD *)v18 + 62) = v41;
  swift_bridgeObjectRelease();
  v42 = *((_QWORD *)v19 + 64);
  *((_QWORD *)v18 + 63) = *((_QWORD *)v19 + 63);
  *((_QWORD *)v18 + 64) = v42;
  swift_bridgeObjectRelease();
  *((_QWORD *)v18 + 65) = *((_QWORD *)v19 + 65);
  swift_bridgeObjectRelease();
LABEL_26:
  v18[528] = v19[528];
  *((_QWORD *)v18 + 67) = *((_QWORD *)v19 + 67);
  swift_bridgeObjectRelease();
  v45 = sub_1BA24A9F0();
  v46 = *(int *)(v45 + 56);
  v47 = &v18[v46];
  v48 = &v19[v46];
  v49 = *(_QWORD *)&v19[v46 + 8];
  *(_QWORD *)v47 = *(_QWORD *)&v19[v46];
  *((_QWORD *)v47 + 1) = v49;
  swift_bridgeObjectRelease();
  v50 = type metadata accessor for NativeAdPlacement();
  v51 = *(int *)(v50 + 20);
  v52 = &v47[v51];
  v53 = &v48[v51];
  v54 = sub_1BA2C1AC0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
  v47[*(int *)(v50 + 24)] = v48[*(int *)(v50 + 24)];
  v55 = *(int *)(v45 + 60);
  v56 = &v18[v55];
  v57 = &v19[v55];
  v59 = *(_QWORD *)v57;
  v58 = *((_QWORD *)v57 + 1);
  *(_QWORD *)v56 = v59;
  *((_QWORD *)v56 + 1) = v58;
  swift_bridgeObjectRelease();
  v60 = *(int *)(v67 + 48);
  v61 = (char *)v8 + v60;
  v62 = (char *)v9 + v60;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8 + v60);
  v63 = *((_OWORD *)v62 + 1);
  *(_OWORD *)v61 = *(_OWORD *)v62;
  *((_OWORD *)v61 + 1) = v63;
  *((_QWORD *)v61 + 4) = *((_QWORD *)v62 + 4);
  v64 = *(int *)(v67 + 52);
  v65 = *(void **)((char *)v8 + v64);
  *(_QWORD *)((char *)v8 + v64) = *(_QWORD *)((char *)v9 + v64);

  *(_QWORD *)((char *)v70 + *(int *)(v68 + 28)) = *(_QWORD *)((char *)v69 + *(int *)(v68 + 28));
  swift_release();
  return v70;
}

uint64_t getEnumTagSinglePayload for NativeAdHeadline()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA2777DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for NativeAdInfo.Fulfilled(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for NativeAdHeadline()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA277864(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for NativeAdInfo.Fulfilled(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

_QWORD *initializeWithCopy for DebugNativeAdHeadline(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DebugNativeAdHeadline(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for DebugNativeAdHeadline(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for DebugNativeAdHeadline()
{
  return &type metadata for DebugNativeAdHeadline;
}

unint64_t sub_1BA2779DC()
{
  unint64_t result;

  result = qword_1EF27F3B8;
  if (!qword_1EF27F3B8)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for DebugNativeAdHeadline, &type metadata for DebugNativeAdHeadline);
    atomic_store(result, (unint64_t *)&qword_1EF27F3B8);
  }
  return result;
}

void sub_1BA277A20()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED5B0D80)
  {
    type metadata accessor for NativeAd.Headline(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED5B0D80);
  }
}

uint64_t MinimumDistanceAdPolicy.validatePlacement(_:in:)@<X0>(double *a1@<X0>, double *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  double v6;
  uint64_t v7;
  double v8;
  double v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  int v14;
  double v15;
  double v16;
  CGFloat Width;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t result;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;

  v6 = *a1;
  v5 = *((_QWORD *)a1 + 1);
  v7 = *((_QWORD *)a1 + 2);
  v8 = a1[3];
  v9 = *a2;
  v10 = a2[5];
  v11 = a2[6];
  v12 = a2[7];
  v13 = a2[8];
  v14 = *(unsigned __int8 *)(v3 + 16);
  v15 = (*(double (**)(void))v3)();
  v40.origin.x = v10;
  v40.origin.y = v11;
  v40.size.width = v12;
  v40.size.height = v13;
  v16 = v8 - v15 * CGRectGetHeight(v40);
  v41.origin.x = v10;
  v41.origin.y = v11;
  v41.size.width = v12;
  v41.size.height = v13;
  Width = CGRectGetWidth(v41);
  v42.origin.x = v10;
  v42.origin.y = v11;
  v42.size.width = v12;
  v42.size.height = v13;
  v18 = (v15 + v15) * CGRectGetHeight(v42);
  *(double *)&v38 = v9;
  v19 = AdPolicyLayoutEnvironment.content(in:)(0.0, v16, Width, v18);
  if (*(_QWORD *)(v19 + 16)
    && (sub_1BA2C2720(),
        sub_1BA2C272C(),
        sub_1BA2C272C(),
        v20 = sub_1BA2C2738(),
        v21 = -1 << *(_BYTE *)(v19 + 32),
        v22 = v20 & ~v21,
        ((*(_QWORD *)(v19 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) != 0))
  {
    v23 = ~v21;
    while (1)
    {
      v24 = *(unsigned __int8 *)(*(_QWORD *)(v19 + 48) + v22);
      if (v24 <= 0x3F && v24 == v14)
        break;
      v22 = (v22 + 1) & v23;
      if (((*(_QWORD *)(v19 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
        goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v27 = sub_1BA277D78(v15);
    v29 = v28;
    sub_1BA26EE3C();
    v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1BA2C37C0;
    type metadata accessor for CGRect(0);
    *(_QWORD *)(v30 + 72) = v31;
    v32 = swift_allocObject();
    *(_QWORD *)(v32 + 16) = 0;
    *(double *)(v32 + 24) = v16;
    *(CGFloat *)(v32 + 32) = Width;
    *(double *)(v32 + 40) = v18;
    *(_QWORD *)(v30 + 32) = 0x5220686372616553;
    *(_QWORD *)(v30 + 40) = 0xEB00000000746365;
    *(_QWORD *)(v30 + 48) = v32;
    if (fmod(v15, 1.0) == 0.0)
    {
      sub_1BA22D5D8();
      v33 = swift_allocObject();
      v34 = MEMORY[0x1E0DEB070];
      *(_OWORD *)(v33 + 16) = xmmword_1BA2C37D0;
      v35 = MEMORY[0x1E0DEB100];
      *(_QWORD *)(v33 + 56) = v34;
      *(_QWORD *)(v33 + 64) = v35;
      *(double *)(v33 + 32) = v15;
      v36 = sub_1BA2C2168();
    }
    else
    {
      v36 = sub_1BA2C2300();
    }
    v39 = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v38 = v36;
    *((_QWORD *)&v38 + 1) = v37;
    *(_QWORD *)(v30 + 80) = 0xD000000000000010;
    *(_QWORD *)(v30 + 88) = 0x80000001BA2CFD70;
    result = (uint64_t)sub_1BA22E0C4(&v38, (_OWORD *)(v30 + 96));
    *(double *)a3 = v6;
    *(_QWORD *)(a3 + 8) = v5;
    *(_QWORD *)(a3 + 16) = v7;
    *(double *)(a3 + 24) = v8;
    *(_QWORD *)(a3 + 32) = 1;
    *(_QWORD *)(a3 + 40) = v27;
    *(_QWORD *)(a3 + 48) = v29;
    *(_QWORD *)(a3 + 56) = v30;
  }
  else
  {
LABEL_9:
    result = swift_bridgeObjectRelease();
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

unint64_t sub_1BA277D78(long double a1)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (a1 == 1.0)
    return 0xD000000000000033;
  sub_1BA2C24C8();
  sub_1BA2C21C8();
  if (fmod(a1, 1.0) == 0.0)
  {
    sub_1BA22D5D8();
    v3 = swift_allocObject();
    v4 = MEMORY[0x1E0DEB070];
    *(_OWORD *)(v3 + 16) = xmmword_1BA2C37D0;
    v5 = MEMORY[0x1E0DEB100];
    *(_QWORD *)(v3 + 56) = v4;
    *(_QWORD *)(v3 + 64) = v5;
    *(long double *)(v3 + 32) = a1;
    sub_1BA2C2168();
  }
  else
  {
    sub_1BA2C2300();
  }
  sub_1BA2C21C8();
  swift_bridgeObjectRelease();
  sub_1BA2C21C8();
  return 0;
}

uint64_t sub_1BA277EB4()
{
  return swift_deallocObject();
}

uint64_t assignWithCopy for MinimumDistanceAdPolicy(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for MinimumDistanceAdPolicy(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for MinimumDistanceAdPolicy(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MinimumDistanceAdPolicy(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t UserAdData.preferredLanguages.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1BA277FDC()
{
  return 0xD000000000000012;
}

uint64_t sub_1BA277FF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA278528(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1BA278020()
{
  sub_1BA278194();
  return sub_1BA2C275C();
}

uint64_t sub_1BA278048()
{
  sub_1BA278194();
  return sub_1BA2C2768();
}

uint64_t UserAdData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1BA278330(0, &qword_1EF27F3D0, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA278194();
  sub_1BA2C2750();
  v10[1] = v8;
  sub_1BA234914();
  sub_1BA2407DC(&qword_1EF27E9C0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1BA2C2684();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BA278194()
{
  unint64_t result;

  result = qword_1EF27F3D8;
  if (!qword_1EF27F3D8)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C7E04, &type metadata for UserAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F3D8);
  }
  return result;
}

uint64_t UserAdData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1BA278330(0, &qword_1EF27F3E0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA278194();
  sub_1BA2C2744();
  if (!v2)
  {
    sub_1BA234914();
    sub_1BA2407DC(&qword_1EF27E9D0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1BA2C2630();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA278330(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA278194();
    v7 = a3(a1, &type metadata for UserAdData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BA27838C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return UserAdData.init(from:)(a1, a2);
}

uint64_t sub_1BA2783A0(_QWORD *a1)
{
  return UserAdData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for UserAdData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BA2783F4 + 4 * asc_1BA2C7CB8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BA278414 + 4 * byte_1BA2C7CBD[v4]))();
}

_BYTE *sub_1BA2783F4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BA278414(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA27841C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA278424(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA27842C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA278434(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for UserAdData.CodingKeys()
{
  return &type metadata for UserAdData.CodingKeys;
}

unint64_t sub_1BA278454()
{
  unint64_t result;

  result = qword_1EF27F3E8;
  if (!qword_1EF27F3E8)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C7DDC, &type metadata for UserAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F3E8);
  }
  return result;
}

unint64_t sub_1BA27849C()
{
  unint64_t result;

  result = qword_1EF27F3F0;
  if (!qword_1EF27F3F0)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C7D4C, &type metadata for UserAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F3F0);
  }
  return result;
}

unint64_t sub_1BA2784E4()
{
  unint64_t result;

  result = qword_1EF27F3F8;
  if (!qword_1EF27F3F8)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C7D74, &type metadata for UserAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F3F8);
  }
  return result;
}

uint64_t sub_1BA278528(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001BA2CFE00)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1BA2C26A8();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t VideoAdInteractionPresentationHandler.__allocating_init(videoPlayerViewController:)(void *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  swift_unknownObjectUnownedInit();

  return v2;
}

uint64_t VideoAdInteractionPresentationHandler.init(videoPlayerViewController:)(void *a1)
{
  uint64_t v1;

  swift_unknownObjectUnownedInit();

  return v1;
}

uint64_t VideoAdInteractionPresentationHandler.deinit()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy();
  return v0;
}

uint64_t VideoAdInteractionPresentationHandler.__deallocating_deinit()
{
  swift_unknownObjectUnownedDestroy();
  return swift_deallocClassInstance();
}

void __swiftcall VideoAdInteractionPresentationHandler.viewControllerToPresentFrom()(UIViewController *__return_ptr retstr)
{
  void *Strong;
  id v2;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  v2 = objc_msgSend(Strong, sel_viewControllerForModalPresentation);

}

uint64_t type metadata accessor for VideoAdInteractionPresentationHandler()
{
  return objc_opt_self();
}

uint64_t method lookup function for VideoAdInteractionPresentationHandler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VideoAdInteractionPresentationHandler.__allocating_init(videoPlayerViewController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of VideoAdTrackerType.trackPlaybackStart(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of VideoAdTrackerType.trackPlaybackPause(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of VideoAdTrackerType.trackPlaybackResume(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of VideoAdTrackerType.trackPlaybackComplete(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of VideoAdTrackerType.trackPlaybackSkip(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of VideoAdTrackerType.trackPassingImpressionThreshold(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of VideoAdTrackerType.trackLearnMoreInteraction(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of VideoAdTrackerType.trackPrerollLoadTime(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t type metadata accessor for VideoAdTracker()
{
  return objc_opt_self();
}

uint64_t BannerAd.contentIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5[5];
  char v6;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  sub_1BA2283EC(v0 + 16, (uint64_t)v5);
  if (v6)
  {
    if (v6 == 1)
      sub_1BA2285BC((uint64_t)v5);
    return 0;
  }
  else
  {
    sub_1BA21D3D4(v5, (uint64_t)v7);
    v2 = v8;
    v3 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    v1 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  return v1;
}

uint64_t BannerAdTraits.isInteractive.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t BannerAdTraits.isDownloadable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t BannerAdTraits.isVideo.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t BannerAd.traits.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int16 v12;
  __int128 v13[5];
  char v14;
  __int128 v15[2];
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  result = sub_1BA2283EC(v1 + 16, (uint64_t)v13);
  if (v14)
  {
    if (v14 == 1)
      result = sub_1BA2285BC((uint64_t)v13);
    *(_BYTE *)(a1 + 2) = 0;
    *(_WORD *)a1 = 2;
  }
  else
  {
    sub_1BA21D3D4(v13, (uint64_t)v15);
    sub_1BA21D3D4(v15, (uint64_t)v16);
    v4 = v17;
    v5 = v18;
    __swift_project_boxed_opaque_existential_1(v16, v17);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
    v7 = v17;
    v8 = v18;
    __swift_project_boxed_opaque_existential_1(v16, v17);
    LOBYTE(v7) = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 32))(v7, v8);
    v9 = v17;
    v10 = v18;
    __swift_project_boxed_opaque_existential_1(v16, v17);
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 40))(v9, v10);
    if ((v7 & 1) != 0)
      v12 = 256;
    else
      v12 = 0;
    *(_WORD *)a1 = v12 & 0xFFFE | v6 & 1;
    *(_BYTE *)(a1 + 2) = (v11 & 1) != 0;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  return result;
}

uint64_t BannerAd.hashValue.getter()
{
  sub_1BA2C2720();
  sub_1BA278A10();
  sub_1BA2C2108();
  return sub_1BA2C2738();
}

uint64_t sub_1BA2789D0()
{
  sub_1BA279580();
  return sub_1BA2C19AC();
}

unint64_t sub_1BA278A10()
{
  unint64_t result;

  result = qword_1EF27F538;
  if (!qword_1EF27F538)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for BannerAd, &type metadata for BannerAd);
    atomic_store(result, (unint64_t *)&qword_1EF27F538);
  }
  return result;
}

unint64_t sub_1BA278A5C()
{
  unint64_t result;

  result = qword_1EF27F540;
  if (!qword_1EF27F540)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for BannerAd, &type metadata for BannerAd);
    atomic_store(result, (unint64_t *)&qword_1EF27F540);
  }
  return result;
}

unint64_t sub_1BA278AA4()
{
  unint64_t result;

  result = qword_1EF27F548;
  if (!qword_1EF27F548)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for BannerAd, &type metadata for BannerAd);
    atomic_store(result, (unint64_t *)&qword_1EF27F548);
  }
  return result;
}

uint64_t assignWithCopy for BannerAdState(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v2 = a1;
  if (a1 == a2)
    return v2;
  v4 = *(unsigned __int8 *)(a1 + 80);
  if (v4 >= 2)
    v4 = *(_DWORD *)a1 + 2;
  if (v4)
  {
    if (v4 != 1 || *(_QWORD *)(a1 + 24) < 2uLL)
      goto LABEL_9;
    __swift_destroy_boxed_opaque_existential_1(a1);
    a1 = v2 + 40;
  }
  __swift_destroy_boxed_opaque_existential_1(a1);
LABEL_9:
  v5 = *(unsigned __int8 *)(a2 + 80);
  if (v5 >= 2)
    v5 = *(_DWORD *)a2 + 2;
  if (v5 == 1)
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (v7 >= 2)
    {
      *(_QWORD *)(v2 + 24) = v7;
      *(_QWORD *)(v2 + 32) = *(_QWORD *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(v2, a2);
      v15 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(v2 + 64) = v15;
      *(_QWORD *)(v2 + 72) = *(_QWORD *)(a2 + 72);
      (**(void (***)(uint64_t, uint64_t))(v15 - 8))(v2 + 40, a2 + 40);
    }
    else
    {
      *(_OWORD *)v2 = *(_OWORD *)a2;
      v8 = *(_OWORD *)(a2 + 16);
      v9 = *(_OWORD *)(a2 + 32);
      v10 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(v2 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(v2 + 64) = v10;
      *(_OWORD *)(v2 + 16) = v8;
      *(_OWORD *)(v2 + 32) = v9;
    }
    *(_BYTE *)(v2 + 80) = 1;
  }
  else if (v5)
  {
    v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)v2 = *(_OWORD *)a2;
    *(_OWORD *)(v2 + 16) = v11;
    v12 = *(_OWORD *)(a2 + 32);
    v13 = *(_OWORD *)(a2 + 48);
    v14 = *(_OWORD *)(a2 + 64);
    *(_BYTE *)(v2 + 80) = *(_BYTE *)(a2 + 80);
    *(_OWORD *)(v2 + 48) = v13;
    *(_OWORD *)(v2 + 64) = v14;
    *(_OWORD *)(v2 + 32) = v12;
  }
  else
  {
    v6 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(v2 + 24) = v6;
    *(_QWORD *)(v2 + 32) = *(_QWORD *)(a2 + 32);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(v2, a2);
    *(_BYTE *)(v2 + 80) = 0;
  }
  return v2;
}

uint64_t assignWithTake for BannerAdState(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v2 = a1;
  if (a1 == a2)
    return v2;
  v4 = *(unsigned __int8 *)(a1 + 80);
  if (v4 >= 2)
    v4 = *(_DWORD *)a1 + 2;
  if (v4)
  {
    if (v4 != 1 || *(_QWORD *)(a1 + 24) < 2uLL)
      goto LABEL_9;
    __swift_destroy_boxed_opaque_existential_1(a1);
    a1 = v2 + 40;
  }
  __swift_destroy_boxed_opaque_existential_1(a1);
LABEL_9:
  v5 = *(unsigned __int8 *)(a2 + 80);
  if (v5 >= 2)
    v5 = *(_DWORD *)a2 + 2;
  if (v5 == 1)
  {
    v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(v2 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(v2 + 48) = v7;
    *(_OWORD *)(v2 + 64) = *(_OWORD *)(a2 + 64);
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)v2 = *(_OWORD *)a2;
    *(_OWORD *)(v2 + 16) = v8;
    *(_BYTE *)(v2 + 80) = 1;
  }
  else if (v5)
  {
    v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(v2 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(v2 + 48) = v9;
    *(_OWORD *)(v2 + 64) = *(_OWORD *)(a2 + 64);
    *(_BYTE *)(v2 + 80) = *(_BYTE *)(a2 + 80);
    v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)v2 = *(_OWORD *)a2;
    *(_OWORD *)(v2 + 16) = v10;
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)v2 = *(_OWORD *)a2;
    *(_OWORD *)(v2 + 16) = v6;
    *(_QWORD *)(v2 + 32) = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(v2 + 80) = 0;
  }
  return v2;
}

uint64_t getEnumTagSinglePayload for BannerAdState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 81))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 80);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for BannerAdState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 80) = 0;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 81) = 0;
    if (a2)
      *(_BYTE *)(result + 80) = -(char)a2;
  }
  return result;
}

uint64_t assignWithCopy for BannerAdState.Recover(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v4 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
      v5 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 64) = v5;
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v6 = *(_OWORD *)(a2 + 16);
    v7 = *(_OWORD *)(a2 + 32);
    v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v8;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = v7;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  return a1;
}

uint64_t assignWithTake for BannerAdState.Recover(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  if (*(_QWORD *)(a1 + 24) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 24);
  __swift_destroy_boxed_opaque_existential_1(a1);
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
LABEL_5:
    v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    return a1;
  }
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for BannerAdState.Recover(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for BannerAdState.Recover(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2 + 1;
  }
  return result;
}

uint64_t sub_1BA278FF4(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for BannerAdTraits(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  unsigned int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
  }
  v4 = *(unsigned __int8 *)a1;
  v5 = v4 >= 2;
  v6 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for BannerAdTraits(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554177) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFE)
    v3 = 0;
  if (a2 > 0xFE)
  {
    *(_WORD *)result = a2 - 255;
    *(_BYTE *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)result = a2 + 1;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

ValueMetadata *type metadata accessor for BannerAdTraits()
{
  return &type metadata for BannerAdTraits;
}

uint64_t assignWithCopy for BannerAd(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v4 = (_OWORD *)(a1 + 16);
    v5 = (_OWORD *)(a2 + 16);
    sub_1BA228524(a1 + 16);
    if (*(_BYTE *)(a2 + 96) == 1)
    {
      v7 = *(_QWORD *)(a2 + 40);
      if (v7 >= 2)
      {
        *(_QWORD *)(a1 + 40) = v7;
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 16, a2 + 16);
        v15 = *(_QWORD *)(a2 + 80);
        *(_QWORD *)(a1 + 80) = v15;
        *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
        (**(void (***)(uint64_t, uint64_t))(v15 - 8))(a1 + 56, a2 + 56);
      }
      else
      {
        *v4 = *v5;
        v8 = *(_OWORD *)(a2 + 32);
        v9 = *(_OWORD *)(a2 + 48);
        v10 = *(_OWORD *)(a2 + 80);
        *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 80) = v10;
        *(_OWORD *)(a1 + 32) = v8;
        *(_OWORD *)(a1 + 48) = v9;
      }
      *(_BYTE *)(a1 + 96) = 1;
    }
    else if (*(_BYTE *)(a2 + 96))
    {
      v11 = *(_OWORD *)(a2 + 32);
      *v4 = *v5;
      *(_OWORD *)(a1 + 32) = v11;
      v12 = *(_OWORD *)(a2 + 48);
      v13 = *(_OWORD *)(a2 + 64);
      v14 = *(_OWORD *)(a2 + 80);
      *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
      *(_OWORD *)(a1 + 64) = v13;
      *(_OWORD *)(a1 + 80) = v14;
      *(_OWORD *)(a1 + 48) = v12;
    }
    else
    {
      v6 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 40) = v6;
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 16, a2 + 16);
      *(_BYTE *)(a1 + 96) = 0;
    }
  }
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 152);
  v17 = *(_QWORD *)(a2 + 160);
  v18 = *(_QWORD *)(a2 + 168);
  v19 = *(_QWORD *)(a2 + 176);
  sub_1BA22C6F4(v16);
  v20 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a1 + 152) = v16;
  *(_QWORD *)(a1 + 160) = v17;
  *(_QWORD *)(a1 + 168) = v18;
  *(_QWORD *)(a1 + 176) = v19;
  sub_1BA22C4F0(v20);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for BannerAd(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    sub_1BA228524(a1 + 16);
    v5 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v5;
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    v6 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v6;
  }
  v7 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a1 + 152);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  sub_1BA22C4F0(v10);
  v11 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v12;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BannerAd(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 248))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BannerAd(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 248) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 248) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

unint64_t sub_1BA279580()
{
  unint64_t result;

  result = qword_1EF27F550;
  if (!qword_1EF27F550)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for BannerAd, &type metadata for BannerAd);
    atomic_store(result, (unint64_t *)&qword_1EF27F550);
  }
  return result;
}

double AdPolicyViewportEnvironment.viewportSize.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double AdPolicyViewportEnvironment.contentOffset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double AdPolicyViewportEnvironment.bounds.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double AdPolicyViewportEnvironment.contentSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

double AdPolicyViewportEnvironment.adjustedContentInset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 80);
}

void __swiftcall AdPolicyViewportEnvironment.init(viewportSize:contentOffset:bounds:contentSize:adjustedContentInset:)(NewsAds::AdPolicyViewportEnvironment *__return_ptr retstr, CGSize viewportSize, CGPoint contentOffset, __C::CGRect bounds, CGSize contentSize, UIEdgeInsets adjustedContentInset)
{
  retstr->viewportSize.width = viewportSize.width;
  retstr->viewportSize.height = viewportSize.height;
  retstr->contentOffset.x = contentOffset.x;
  retstr->contentOffset.y = contentOffset.y;
  retstr->bounds = bounds;
  retstr->contentSize = contentSize;
  retstr->adjustedContentInset = adjustedContentInset;
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t getEnumTagSinglePayload for AdPolicyViewportEnvironment(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 112))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AdPolicyViewportEnvironment(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 112) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AdPolicyViewportEnvironment()
{
  return &type metadata for AdPolicyViewportEnvironment;
}

double BannerAdViewLayoutAttributes.frame.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

__n128 BannerAdViewLayoutAttributes.adViewFrame.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + 64);
  result = *(__n128 *)(v1 + 32);
  v4 = *(_OWORD *)(v1 + 48);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

uint64_t BannerAdViewLayoutAttributes.debugViewLayoutAttributes.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[432];

  sub_1BA279710(v1 + 72, (uint64_t)v4);
  return sub_1BA279710((uint64_t)v4, a1);
}

uint64_t sub_1BA279710(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA279754();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BA279754()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B3258)
  {
    v0 = sub_1BA2C245C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B3258);
  }
}

uint64_t sub_1BA2797A8()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x7246776569566461;
  if (*v0 != 1)
    v1 = 0xD000000000000019;
  if (*v0)
    return v1;
  else
    return 0x656D617266;
}

uint64_t sub_1BA27980C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA279FB0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BA279830()
{
  sub_1BA279A88();
  return sub_1BA2C275C();
}

uint64_t sub_1BA279858()
{
  sub_1BA279A88();
  return sub_1BA2C2768();
}

uint64_t BannerAdViewLayoutAttributes.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _BYTE v23[432];
  int v24;
  char v25;

  sub_1BA279D20(0, &qword_1EF27F558, MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  v18 = *v1;
  v9 = *((_QWORD *)v1 + 2);
  v10 = *((_QWORD *)v1 + 3);
  v11 = *((_QWORD *)v1 + 4);
  v16 = *((_QWORD *)v1 + 5);
  v17 = v11;
  v12 = *((_QWORD *)v1 + 6);
  v14 = *((_QWORD *)v1 + 7);
  v15 = v12;
  v24 = *((unsigned __int8 *)v1 + 64);
  sub_1BA279710((uint64_t)v1 + 72, (uint64_t)v23);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA279A88();
  sub_1BA2C2750();
  v19 = v18;
  v20 = v9;
  v21 = v10;
  v25 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA24F660(&qword_1EF27ECA0, MEMORY[0x1E0C9B9C0]);
  sub_1BA2C2684();
  if (!v2)
  {
    *(_QWORD *)&v19 = v17;
    *((_QWORD *)&v19 + 1) = v16;
    v20 = v15;
    v21 = v14;
    v22 = v24;
    v25 = 1;
    sub_1BA2C2648();
    sub_1BA279710((uint64_t)v23, (uint64_t)&v19);
    v25 = 2;
    sub_1BA2507BC();
    sub_1BA2C2648();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1BA279A88()
{
  unint64_t result;

  result = qword_1EF27F560;
  if (!qword_1EF27F560)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C82D0, &type metadata for BannerAdViewLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F560);
  }
  return result;
}

uint64_t BannerAdViewLayoutAttributes.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[424];
  _QWORD v24[62];
  _BYTE v25[480];

  sub_1BA279D20(0, &qword_1EF27F568, MEMORY[0x1E0DED048]);
  v22 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA279A88();
  sub_1BA2C2744();
  if (!v2)
  {
    v20 = a2;
    v21 = v6;
    type metadata accessor for CGRect(0);
    v25[0] = 0;
    sub_1BA24F660(&qword_1EF27ECB0, MEMORY[0x1E0C9B9E0]);
    v9 = v22;
    sub_1BA2C2630();
    v10 = v24[0];
    v11 = v24[1];
    v12 = v24[2];
    v13 = v24[3];
    v25[0] = 1;
    sub_1BA2C25F4();
    v16 = v24[0];
    v15 = v24[1];
    v18 = v24[3];
    v19 = v24[2];
    v17 = v24[4];
    v25[479] = 2;
    sub_1BA250774();
    sub_1BA2C25F4();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v9);
    sub_1BA279710((uint64_t)v25, (uint64_t)v23);
    v24[0] = v10;
    v24[1] = v11;
    v24[2] = v12;
    v24[3] = v13;
    v24[4] = v16;
    v24[5] = v15;
    v24[6] = v19;
    v24[7] = v18;
    LOBYTE(v24[8]) = v17;
    sub_1BA279710((uint64_t)v23, (uint64_t)&v24[9]);
    memcpy(v20, v24, 0x1E9uLL);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA279D20(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA279A88();
    v7 = a3(a1, &type metadata for BannerAdViewLayoutAttributes.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BA279D7C@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return BannerAdViewLayoutAttributes.init(from:)(a1, a2);
}

uint64_t sub_1BA279D90(_QWORD *a1)
{
  return BannerAdViewLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1BA279DA4()
{
  sub_1BA235648();
  return sub_1BA2C16AC();
}

uint64_t storeEnumTagSinglePayload for BannerAdViewLayoutAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BA279E58 + 4 * byte_1BA2C80F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BA279E8C + 4 * asc_1BA2C80F0[v4]))();
}

uint64_t sub_1BA279E8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA279E94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA279E9CLL);
  return result;
}

uint64_t sub_1BA279EA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA279EB0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BA279EB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA279EBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BannerAdViewLayoutAttributes.CodingKeys()
{
  return &type metadata for BannerAdViewLayoutAttributes.CodingKeys;
}

unint64_t sub_1BA279EDC()
{
  unint64_t result;

  result = qword_1EF27F570;
  if (!qword_1EF27F570)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C82A8, &type metadata for BannerAdViewLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F570);
  }
  return result;
}

unint64_t sub_1BA279F24()
{
  unint64_t result;

  result = qword_1EF27F578;
  if (!qword_1EF27F578)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C8218, &type metadata for BannerAdViewLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F578);
  }
  return result;
}

unint64_t sub_1BA279F6C()
{
  unint64_t result;

  result = qword_1EF27F580;
  if (!qword_1EF27F580)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C8240, &type metadata for BannerAdViewLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F580);
  }
  return result;
}

uint64_t sub_1BA279FB0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7246776569566461 && a2 == 0xEB00000000656D61 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001BA2CFF20)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BA2C26A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

id sub_1BA27A110()
{
  uint64_t v0;
  uint64_t inited;
  void **v2;
  void *v3;
  void *v4;
  double v5;
  double v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  id v17;

  swift_bridgeObjectRetain();
  sub_1BA2C21D4();
  sub_1BA2C21BC();
  sub_1BA24D20C();
  inited = swift_initStackObject();
  v2 = (void **)MEMORY[0x1E0DC1138];
  *(_OWORD *)(inited + 16) = xmmword_1BA2C37C0;
  v3 = *v2;
  *(_QWORD *)(inited + 32) = *v2;
  v4 = (void *)objc_opt_self();
  v5 = *(double *)(v0 + 16);
  v6 = *MEMORY[0x1E0DC1420];
  v7 = v3;
  v8 = objc_msgSend(v4, sel_systemFontOfSize_weight_, v5, v6);
  v9 = sub_1BA21DEE0(0, &qword_1EF27E880);
  *(_QWORD *)(inited + 40) = v8;
  v10 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v9;
  *(_QWORD *)(inited + 72) = v10;
  v11 = (void *)objc_opt_self();
  v12 = v10;
  v13 = objc_msgSend(v11, sel_labelColor);
  *(_QWORD *)(inited + 104) = sub_1BA21DEE0(0, &qword_1EF27EC10);
  *(_QWORD *)(inited + 80) = v13;
  sub_1BA265D04(inited);
  v14 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v15 = (void *)sub_1BA2C212C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BA24E14C();
  v16 = (void *)sub_1BA2C20C0();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v14, sel_initWithString_attributes_, v15, v16);

  return v17;
}

uint64_t sub_1BA27A338()
{
  return swift_deallocClassInstance();
}

id sub_1BA27A348(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t inited;
  void **v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void **v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;

  sub_1BA24D20C();
  inited = swift_initStackObject();
  v5 = (void **)MEMORY[0x1E0DC1138];
  *(_OWORD *)(inited + 16) = xmmword_1BA2C37C0;
  v6 = *v5;
  *(_QWORD *)(inited + 32) = *v5;
  v7 = (void *)objc_opt_self();
  v8 = v6;
  objc_msgSend(v7, sel_buttonFontSize);
  v9 = objc_msgSend(v7, sel_systemFontOfSize_);
  v10 = sub_1BA21DEE0(0, &qword_1EF27E880);
  v11 = (void **)MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 40) = v9;
  v12 = *v11;
  *(_QWORD *)(inited + 64) = v10;
  *(_QWORD *)(inited + 72) = v12;
  v13 = (void *)objc_opt_self();
  v14 = v12;
  v15 = objc_msgSend(v13, sel_systemBlueColor);
  v16 = v15;
  if ((a3 & 1) != 0)
  {
    v17 = objc_msgSend(v15, sel_colorWithAlphaComponent_, 0.5);

    v16 = v17;
  }
  *(_QWORD *)(inited + 104) = sub_1BA21DEE0(0, &qword_1EF27EC10);
  *(_QWORD *)(inited + 80) = v16;
  sub_1BA265D04(inited);
  v18 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  swift_bridgeObjectRetain();
  v19 = (void *)sub_1BA2C212C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BA24E14C();
  v20 = (void *)sub_1BA2C20C0();
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(v18, sel_initWithString_attributes_, v19, v20);

  return v21;
}

uint64_t PrerollAdProvider.prerollAd(with:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;
  uint64_t v20;

  v5 = type metadata accessor for PrerollAdPlacement();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA27A66C(a1, (uint64_t)v7);
  v8 = v2[5];
  v9 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v8);
  v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  v11 = objc_msgSend(v10, sel_promotedContentVideo);

  v12 = type metadata accessor for PrerollAd();
  sub_1BA27A66C((uint64_t)v7, (uint64_t)a2 + *(int *)(v12 + 24));
  *a2 = v11;
  v13 = v11;
  v14 = objc_msgSend(v13, sel_promotedContentInfo);
  if (v14)
  {
    v15 = v14;
    v16 = sub_1BA2C1A00();
    v18 = v17;

  }
  else
  {

    v16 = 0;
    v18 = 0xE000000000000000;
  }
  result = sub_1BA27A6B0((uint64_t)v7);
  a2[1] = v16;
  a2[2] = v18;
  return result;
}

uint64_t sub_1BA27A66C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PrerollAdPlacement();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA27A6B0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PrerollAdPlacement();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t PrerollAdProvider.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t PrerollAdProvider.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1BA27A72C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return PrerollAdProvider.prerollAd(with:)(a1, a2);
}

uint64_t dispatch thunk of PrerollAdProviderType.prerollAd(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t method lookup function for PrerollAdProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BA27A760()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t sub_1BA27A78C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1BA27A7BC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;

  v5 = a3 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1BCCD9544](v5);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = objc_msgSend(a4, sel_promotedContentInfo);
    if (v8)
    {
      v9 = v8;
      v10 = swift_allocObject();
      *(_QWORD *)(v10 + 16) = v7;
      *(_QWORD *)(v10 + 24) = v9;
      v11 = v7;
      v12 = v9;
      sub_1BA2C19C4();

      swift_release();
    }
    else
    {

    }
  }
}

void sub_1BA27A884(uint64_t a1, void *a2)
{
  _QWORD *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD v17[5];

  v17[3] = &type metadata for AdContentInfo;
  v17[4] = &protocol witness table for AdContentInfo;
  v4 = (_QWORD *)swift_allocObject();
  v17[0] = v4;
  v5 = a2;
  v6 = sub_1BA2C1A00();
  v8 = v7;
  v9 = sub_1BA2C1A24();
  v4[2] = v6;
  v4[3] = v8;
  v4[4] = v9;
  v4[5] = v5;
  v10 = a1 + OBJC_IVAR____TtC7NewsAds19BannerAdMetricsView_contentInfo;
  swift_beginAccess();
  sub_1BA27BD48((uint64_t)v17, v10);
  swift_endAccess();
  objc_msgSend(v5, sel_unfilledReason);
  v11 = sub_1BA2C1AA8();
  if (v11 != sub_1BA2C1AA8())
  {
    objc_msgSend(v5, sel_unfilledReason);
    v12 = sub_1BA2C1AA8();
    sub_1BA252488();
    v13 = (void *)swift_allocError();
    *(_QWORD *)v14 = v12;
    *(_BYTE *)(v14 + 8) = 0;
    v17[0] = v13;
    sub_1BA23C4E8();
    sub_1BA2C17D8();

  }
  v17[0] = v5;
  swift_getKeyPath();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = sub_1BA2C1388();
  swift_release();
  swift_release();
  v16 = *(void **)(a1 + OBJC_IVAR____TtC7NewsAds19BannerAdMetricsView_unfilledReasonObserver);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC7NewsAds19BannerAdMetricsView_unfilledReasonObserver) = v15;

}

uint64_t sub_1BA27AA5C(void **a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  id v6;

  v4 = *a1;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a3;
  *(_QWORD *)(v5 + 24) = v4;
  swift_retain();
  v6 = v4;
  sub_1BA2C19C4();
  return swift_release();
}

void sub_1BA27AAC0(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCD9544](v3);
  if (v4)
  {
    v5 = (void *)v4;
    swift_retain();

    objc_msgSend(a2, sel_unfilledReason);
    v6 = sub_1BA2C1AA8();
    sub_1BA252488();
    v7 = (void *)swift_allocError();
    *(_QWORD *)v8 = v6;
    *(_BYTE *)(v8 + 8) = 0;
    sub_1BA23C4E8();
    sub_1BA2C17D8();
    swift_release();

  }
}

void sub_1BA27ABBC()
{
  char *v0;
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  id v9;
  objc_super v10;

  v10.receiver = v0;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, sel_layoutSubviews);
  v1 = OBJC_IVAR____TtC7NewsAds19BannerAdMetricsView_metricsView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC7NewsAds19BannerAdMetricsView_metricsView], sel_frame);
  v3 = v2;
  v5 = v4;
  objc_msgSend(v0, sel_bounds);
  if (v3 != v7 || v5 != v6)
  {
    v9 = *(id *)&v0[v1];
    objc_msgSend(v0, sel_bounds);
    objc_msgSend(v9, sel_setFrame_);

  }
}

uint64_t sub_1BA27AD5C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC7NewsAds19BannerAdMetricsView_contentInfo);
  swift_beginAccess();
  v2 = v1[3];
  if (!v2)
    return 0x6E776F6E6B6E75;
  v3 = v1[4];
  v4 = __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v5 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v2);
  return v8;
}

uint64_t sub_1BA27AE5C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + OBJC_IVAR____TtC7NewsAds19BannerAdMetricsView_contentInfo;
  swift_beginAccess();
  return sub_1BA23B970(v3, a1);
}

uint64_t sub_1BA27AEB0()
{
  return swift_retain();
}

id sub_1BA27AEC4()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC7NewsAds19BannerAdMetricsView_onLongPress);
}

double sub_1BA27AED8()
{
  _QWORD *v0;
  id v1;
  double v2;
  double v3;

  v1 = *(id *)(*v0 + OBJC_IVAR____TtC7NewsAds19BannerAdMetricsView_metricsView);
  sub_1BA2C1E14();
  v3 = v2;

  return v3;
}

void sub_1BA27AF40(void *a1)
{
  void *v1;
  unint64_t v3;

  sub_1BA2C1E74();
  objc_msgSend(a1, sel_frame);
  objc_msgSend(v1, sel_setFrame_);
  v3 = objc_msgSend(a1, sel_ready);
  sub_1BA23C4E8();
  sub_1BA2C17D8();
  sub_1BA23C52C((id)v3);
}

uint64_t _s7NewsAds17BannerAdViewStateO2eeoiySbAC_ACtFZ_0(void **a1, id *a2)
{
  void *v2;
  id v3;
  char v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  if (!*a1)
  {
    if (v3)
      goto LABEL_11;
LABEL_9:
    sub_1BA23C53C(*a2);
    sub_1BA23C52C(v2);
    sub_1BA23C52C(v3);
    v4 = 1;
    return v4 & 1;
  }
  if (v2 == (void *)1)
  {
    if (v3 != (id)1)
      goto LABEL_11;
    goto LABEL_9;
  }
  if (v2 == (void *)2)
  {
    if (v3 != (id)2)
      goto LABEL_11;
    goto LABEL_9;
  }
  if ((unint64_t)v3 < 3)
  {
LABEL_11:
    sub_1BA23C53C(*a2);
    sub_1BA23C53C(v2);
    sub_1BA23C52C(v2);
    sub_1BA23C52C(v3);
    v4 = 0;
    return v4 & 1;
  }
  swift_getErrorValue();
  sub_1BA23C53C(v3);
  sub_1BA23C53C(v2);
  sub_1BA23C53C(v3);
  sub_1BA23C53C(v2);
  v6 = sub_1BA2C26E4();
  v8 = v7;
  swift_getErrorValue();
  if (v6 == sub_1BA2C26E4() && v8 == v9)
    v4 = 1;
  else
    v4 = sub_1BA2C26A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA23C52C(v3);
  sub_1BA23C52C(v2);
  sub_1BA23C52C(v2);
  sub_1BA23C52C(v3);
  return v4 & 1;
}

uint64_t dispatch thunk of BannerAdViewType.contentIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BannerAdViewType.contentInfo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of BannerAdViewType.state.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of BannerAdViewType.onLongPress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of BannerAdViewType.additionalEdgeInsets.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

_QWORD *initializeBufferWithCopyOfBuffer for BannerAdViewState(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void destroy for BannerAdViewState(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **assignWithCopy for BannerAdViewState(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
      v7 = v4;
    *a1 = v4;
  }
  else if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    *a1 = *a2;
  }
  else
  {
    v5 = v4;
    v6 = *a1;
    *a1 = v4;

  }
  return a1;
}

void **assignWithTake for BannerAdViewState(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
    goto LABEL_5;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_5:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for BannerAdViewState(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for BannerAdViewState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for BannerAdViewState()
{
  return &type metadata for BannerAdViewState;
}

uint64_t type metadata accessor for BannerAdMetricsView()
{
  return objc_opt_self();
}

char *sub_1BA27B468(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  objc_class *ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  Class v15;
  char *v16;
  id v17;
  char **v18;
  id v19;
  uint64_t v20;
  char *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  id v34;
  char *v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  id v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  void (*v42)(char *, uint64_t);
  id v43;
  unint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  char *v47;
  id v48;
  id v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  unint64_t v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v74;
  char *v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD v80[5];
  objc_super v81;

  ObjectType = (objc_class *)swift_getObjectType();
  v8 = MEMORY[0x1E0DEE9C0] + 8;
  sub_1BA22920C(0, &qword_1ED5B14C0, MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DBC320]);
  v78 = *(_QWORD *)(v9 - 8);
  v79 = v9;
  MEMORY[0x1E0C80A78](v9);
  v77 = (char *)&v74 - v10;
  v11 = &v3[OBJC_IVAR____TtC7NewsAds19BannerAdMetricsView_contentInfo];
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *((_QWORD *)v11 + 4) = 0;
  v12 = OBJC_IVAR____TtC7NewsAds19BannerAdMetricsView_state;
  v80[0] = 0;
  sub_1BA22920C(0, &qword_1ED5B1470, (uint64_t)&type metadata for BannerAdViewState, MEMORY[0x1E0DB3938]);
  swift_allocObject();
  v13 = v3;
  *(_QWORD *)&v3[v12] = sub_1BA2C17B4();
  v14 = OBJC_IVAR____TtC7NewsAds19BannerAdMetricsView_onLongPress;
  sub_1BA22920C(0, (unint64_t *)&qword_1ED5B14C8, v8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC348]);
  *(_QWORD *)&v13[v14] = objc_msgSend(objc_allocWithZone(v15), sel_init);
  *(_QWORD *)&v13[OBJC_IVAR____TtC7NewsAds19BannerAdMetricsView_promotedContentInfoObserver] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC7NewsAds19BannerAdMetricsView_unfilledReasonObserver] = 0;
  v16 = &v13[OBJC_IVAR____TtC7NewsAds19BannerAdMetricsView_placementIdentifier];
  *(_QWORD *)v16 = a1;
  *((_QWORD *)v16 + 1) = a2;
  *(_QWORD *)&v13[OBJC_IVAR____TtC7NewsAds19BannerAdMetricsView_metricsView] = a3;
  v17 = a3;

  v18 = &selRef_skipped;
  objc_msgSend(v17, sel_frame);
  v81.receiver = v13;
  v81.super_class = ObjectType;
  v19 = objc_msgSendSuper2(&v81, sel_initWithFrame_);
  v20 = qword_1ED5B2DB0;
  v21 = (char *)v19;
  if (v20 != -1)
    swift_once();
  v22 = (void *)qword_1ED5B2888;
  sub_1BA2228E8(0, (unint64_t *)&qword_1ED5B2CC0, (unint64_t *)&qword_1ED5B2CD8, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1BA2C3840;
  v24 = *(_QWORD *)&v21[OBJC_IVAR____TtC7NewsAds19BannerAdMetricsView_placementIdentifier];
  v25 = *(_QWORD *)&v21[OBJC_IVAR____TtC7NewsAds19BannerAdMetricsView_placementIdentifier + 8];
  v26 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v23 + 56) = MEMORY[0x1E0DEA968];
  v76 = sub_1BA2291C8();
  *(_QWORD *)(v23 + 64) = v76;
  *(_QWORD *)(v23 + 32) = v24;
  *(_QWORD *)(v23 + 40) = v25;
  v27 = &v21[OBJC_IVAR____TtC7NewsAds19BannerAdMetricsView_contentInfo];
  swift_beginAccess();
  v28 = *((_QWORD *)v27 + 3);
  v75 = v27;
  if (v28)
  {
    v29 = *((_QWORD *)v27 + 4);
    v30 = __swift_project_boxed_opaque_existential_1(v27, v28);
    v74 = (uint64_t)&v74;
    v31 = *(_QWORD *)(v28 - 8);
    MEMORY[0x1E0C80A78](v30);
    v33 = (char *)&v74 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v31 + 16))(v33);
    v34 = v17;
    v35 = v21;
    v36 = *(uint64_t (**)(uint64_t, uint64_t))(v29 + 8);
    v37 = v22;
    swift_bridgeObjectRetain();
    v38 = v36(v28, v29);
    v21 = v35;
    v17 = v34;
    v26 = MEMORY[0x1E0DEA968];
    v39 = v38;
    v41 = v40;
    v42 = *(void (**)(char *, uint64_t))(v31 + 8);
    v18 = &selRef_skipped;
    v42(v33, v28);
  }
  else
  {
    v43 = v22;
    swift_bridgeObjectRetain();
    v41 = 0xE700000000000000;
    v39 = 0x6E776F6E6B6E75;
  }
  v44 = v76;
  *(_QWORD *)(v23 + 96) = v26;
  *(_QWORD *)(v23 + 104) = v44;
  *(_QWORD *)(v23 + 72) = v39;
  *(_QWORD *)(v23 + 80) = v41;
  v45 = objc_msgSend(v17, sel_ready);
  v46 = MEMORY[0x1E0DEAFD8];
  *(_QWORD *)(v23 + 136) = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v23 + 144) = v46;
  *(_BYTE *)(v23 + 112) = v45;
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  objc_msgSend(v17, v18[32]);
  sub_1BA2C2408();
  objc_msgSend(v17, sel_setFrame_);
  objc_msgSend(v21, sel_addSubview_, v17);
  v47 = v21;
  sub_1BA2C1E38();
  v48 = objc_msgSend(v17, sel_promotedContentInfo);
  if (v48)
  {
    v49 = v48;
    v80[3] = &type metadata for AdContentInfo;
    v80[4] = &protocol witness table for AdContentInfo;
    v50 = (_QWORD *)swift_allocObject();
    v80[0] = v50;
    v51 = sub_1BA2C1A00();
    v53 = v52;
    v54 = sub_1BA2C1A24();
    v50[2] = v51;
    v50[3] = v53;
    v50[4] = v54;
    v50[5] = v49;
    v55 = (uint64_t)v75;
    swift_beginAccess();
    sub_1BA27BD48((uint64_t)v80, v55);
    swift_endAccess();
  }
  if (objc_msgSend(v17, sel_ready))
  {
    sub_1BA2C1E74();
    v56 = v47;
    objc_msgSend(v17, v18[32]);
    objc_msgSend(v56, sel_setFrame_);

    v57 = objc_msgSend(v17, sel_ready);
    v80[0] = v57;
    sub_1BA23C4E8();
    sub_1BA2C17D8();
    sub_1BA23C52C((id)v57);
  }
  else
  {
    v58 = objc_msgSend(v17, sel_promotedContentInfo);
    if (v58)
    {
      v59 = v58;
      objc_msgSend(v58, sel_unfilledReason);
      v60 = sub_1BA2C1AA8();
      if (v60 == sub_1BA2C1AA8())
      {

      }
      else
      {
        objc_msgSend(v59, sel_unfilledReason);
        v61 = sub_1BA2C1AA8();
        sub_1BA252488();
        v62 = (void *)swift_allocError();
        *(_QWORD *)v63 = v61;
        *(_BYTE *)(v63 + 8) = 0;
        v80[0] = v62;
        sub_1BA23C4E8();
        sub_1BA2C17D8();

      }
    }
  }
  v80[0] = v17;
  swift_getKeyPath();
  v64 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v65 = swift_allocObject();
  *(_QWORD *)(v65 + 16) = v64;
  *(_QWORD *)(v65 + 24) = v17;
  v66 = v17;
  v67 = sub_1BA2C1388();
  swift_release();
  swift_release();
  v68 = *(void **)&v47[OBJC_IVAR____TtC7NewsAds19BannerAdMetricsView_promotedContentInfoObserver];
  *(_QWORD *)&v47[OBJC_IVAR____TtC7NewsAds19BannerAdMetricsView_promotedContentInfoObserver] = v67;

  v70 = v77;
  v69 = v78;
  v71 = v79;
  (*(void (**)(char *, _QWORD, uint64_t))(v78 + 104))(v77, *MEMORY[0x1E0DBC318], v79);
  v72 = v47;

  (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v71);
  return v72;
}

void sub_1BA27BB64()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  Class v5;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC7NewsAds19BannerAdMetricsView_contentInfo];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_QWORD *)v2 + 4) = 0;
  v3 = OBJC_IVAR____TtC7NewsAds19BannerAdMetricsView_state;
  sub_1BA22920C(0, &qword_1ED5B1470, (uint64_t)&type metadata for BannerAdViewState, MEMORY[0x1E0DB3938]);
  swift_allocObject();
  *(_QWORD *)&v0[v3] = sub_1BA2C17B4();
  v4 = OBJC_IVAR____TtC7NewsAds19BannerAdMetricsView_onLongPress;
  sub_1BA22920C(0, (unint64_t *)&qword_1ED5B14C8, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC348]);
  *(_QWORD *)&v1[v4] = objc_msgSend(objc_allocWithZone(v5), sel_init);
  *(_QWORD *)&v1[OBJC_IVAR____TtC7NewsAds19BannerAdMetricsView_promotedContentInfoObserver] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC7NewsAds19BannerAdMetricsView_unfilledReasonObserver] = 0;

  sub_1BA2C257C();
  __break(1u);
}

char *keypath_get_selector_promotedContentInfo()
{
  return sel_promotedContentInfo;
}

id sub_1BA27BC98@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_promotedContentInfo);
  *a2 = result;
  return result;
}

id sub_1BA27BCD0(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPromotedContentInfo_, *a1);
}

uint64_t sub_1BA27BCE4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BA27BD0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BA27A7BC(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1BA27BD14()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BA27BD48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA2228E8(0, (unint64_t *)&qword_1ED5B12C8, (unint64_t *)&qword_1ED5B12C0, (uint64_t)&protocol descriptor for AdContentInfoType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA27BDAC()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BA27BDD8()
{
  uint64_t v0;

  sub_1BA27A884(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

char *keypath_get_selector_unfilledReason()
{
  return sel_unfilledReason;
}

id sub_1BA27BDEC@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_unfilledReason);
  *a2 = result;
  return result;
}

id sub_1BA27BE1C(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setUnfilledReason_, *a1);
}

uint64_t sub_1BA27BE30(void **a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BA27AA5C(a1, a2, v2);
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1BA27BE68()
{
  uint64_t v0;

  sub_1BA27AAC0(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t FeedBannerAdPlacement.desiredPlacement.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedBannerAdPlacement() + 20);
  v4 = sub_1BA2C1AC0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

double FeedBannerAdPlacement.boundingSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for FeedBannerAdPlacement() + 24));
}

uint64_t FeedBannerAdPlacement.insertionType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FeedBannerAdPlacement();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for PrerollAdPlacement(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BA2C1AC0();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[7];
    *(_OWORD *)((char *)v4 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
    *((_BYTE *)v4 + v13) = *((_BYTE *)a2 + v13);
  }
  return v4;
}

_QWORD *assignWithCopy for PrerollAdPlacement(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BA2C1AC0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

_OWORD *initializeWithTake for PrerollAdPlacement(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BA2C1AC0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  return a1;
}

_QWORD *assignWithTake for PrerollAdPlacement(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BA2C1AC0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedBannerAdPlacement()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA27C190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BA2C1AC0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for FeedBannerAdPlacement()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA27C218(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BA2C1AC0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t dispatch thunk of AdSegmentManagerType.registerProvider<A, B>(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t sub_1BA27C294(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int v5;
  int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[72];
  uint64_t v31;
  __int128 *v32;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v31 = MEMORY[0x1E0DEE9D8];
    sub_1BA2C2528();
    v4 = sub_1BA27F1DC(a1);
    v6 = v5;
    v28 = sub_1BA27F264((uint64_t)v30, v4, v5, v7 & 1, a1);
    v29 = v8;
    *(_QWORD *)&v22 = v28;
    *((_QWORD *)&v22 + 1) = v8;
    v32 = &v23;
    sub_1BA27FA20((uint64_t)v30, (uint64_t)&v23);
    v18 = v24;
    v19 = v25;
    v20 = v26;
    v21 = v27;
    v16 = v22;
    v17 = v23;
    swift_bridgeObjectRetain();
    v9 = sub_1BA27FA54((uint64_t)&v28);
    (*((void (**)(uint64_t))&v20 + 1))(v9);
    sub_1BA27FA54((uint64_t)&v16);
    sub_1BA2C2504();
    sub_1BA2C2534();
    sub_1BA2C2540();
    result = sub_1BA2C2510();
    if (v4 < 0 || v4 >= -(-1 << *(_BYTE *)(a1 + 32)))
    {
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    if (((*(_QWORD *)(a1 + 64 + (((unint64_t)v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
    {
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
    if (*(_DWORD *)(a1 + 36) != v6)
    {
LABEL_17:
      __break(1u);
      return result;
    }
    v10 = sub_1BA2C2498();
    v11 = v2 - 1;
    if (v2 != 1)
    {
      v12 = v10;
      while (1)
      {
        v13 = *(_DWORD *)(a1 + 36);
        v28 = sub_1BA27F264((uint64_t)v30, v12, v13, 0, a1);
        v29 = v14;
        *(_QWORD *)&v22 = v28;
        *((_QWORD *)&v22 + 1) = v14;
        sub_1BA27FA20((uint64_t)v30, (uint64_t)v32);
        v18 = v24;
        v19 = v25;
        v20 = v26;
        v21 = v27;
        v16 = v22;
        v17 = v23;
        swift_bridgeObjectRetain();
        v15 = sub_1BA27FA54((uint64_t)&v28);
        (*((void (**)(uint64_t))&v20 + 1))(v15);
        sub_1BA27FA54((uint64_t)&v16);
        sub_1BA2C2504();
        sub_1BA2C2534();
        sub_1BA2C2540();
        result = sub_1BA2C2510();
        if (v12 < 0 || v12 >= -(-1 << *(_BYTE *)(a1 + 32)))
          goto LABEL_15;
        if (((*(_QWORD *)(a1 + 64 + (((unint64_t)v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
          goto LABEL_16;
        if (*(_DWORD *)(a1 + 36) != v13)
          goto LABEL_17;
        v12 = sub_1BA2C2498();
        if (!--v11)
          return v31;
      }
    }
    return v31;
  }
  return result;
}

uint64_t sub_1BA27C530(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  void (*v24)(char *, _QWORD);
  void (*v25)(char *);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43[32];
  uint64_t v44;

  v30 = a5;
  v31 = a8;
  v38 = a1;
  v39 = a2;
  v29 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v40 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v14 = (char *)&v29 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(v17 - 8);
  v33 = v17;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v29 - v18;
  v20 = sub_1BA2C2324();
  if (!v20)
    return sub_1BA2C22AC();
  v36 = AssociatedTypeWitness;
  v21 = v20;
  v44 = sub_1BA2C20B4();
  v34 = sub_1BA2C2564();
  sub_1BA2C251C();
  v37 = v8;
  result = sub_1BA2C2318();
  if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21;
    v35 = v16;
    while (v23)
    {
      v41 = v23;
      v24 = (void (*)(char *, _QWORD))sub_1BA2C2348();
      v25 = *(void (**)(char *))(v11 + 16);
      v26 = v11;
      v27 = v36;
      v25(v14);
      v24(v43, 0);
      v28 = v42;
      v38(v14, v40);
      if (v28)
      {
        (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v27);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        swift_release();
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v29 + 32))(v31, v40, v30);
      }
      v42 = 0;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v27);
      sub_1BA2C254C();
      result = sub_1BA2C2330();
      v23 = v41 - 1;
      v11 = v26;
      if (v41 == 1)
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        return v44;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA27C820(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  int64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  int64_t v36;

  v23 = a1 + 64;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v36 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v6 = 0;
  v7 = MEMORY[0x1E0DEE9D8];
LABEL_4:
  if (v4)
  {
LABEL_5:
    v8 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    v9 = v8 | (v6 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v10 >= v36)
      goto LABEL_30;
    v11 = *(_QWORD *)(v23 + 8 * v10);
    ++v6;
    if (!v11)
    {
      v6 = v10 + 1;
      if (v10 + 1 >= v36)
        goto LABEL_30;
      v11 = *(_QWORD *)(v23 + 8 * v6);
      if (!v11)
      {
        v6 = v10 + 2;
        if (v10 + 2 >= v36)
          goto LABEL_30;
        v11 = *(_QWORD *)(v23 + 8 * v6);
        if (!v11)
        {
          v6 = v10 + 3;
          if (v10 + 3 >= v36)
            goto LABEL_30;
          v11 = *(_QWORD *)(v23 + 8 * v6);
          if (!v11)
            break;
        }
      }
    }
LABEL_21:
    v4 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v6 << 6);
LABEL_22:
    v13 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v9);
    v14 = *v13;
    v15 = v13[1];
    sub_1BA27FA20(*(_QWORD *)(a1 + 56) + 72 * v9, (uint64_t)v32);
    *(_QWORD *)&v31 = v14;
    *((_QWORD *)&v31 + 1) = v15;
    v28 = v33;
    v29 = v34;
    v30 = v35;
    v25 = v31;
    v26 = v32[0];
    v27 = v32[1];
    v16 = (uint64_t (*)(uint64_t))*((_QWORD *)&v33 + 1);
    v17 = swift_bridgeObjectRetain();
    if ((v16(v17) & 1) != 0)
    {
      v18 = *((_QWORD *)&v27 + 1);
      v19 = v28;
      __swift_project_boxed_opaque_existential_1(&v26, *((uint64_t *)&v27 + 1));
      (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v19 + 16))(&v24, v18, v19);
      v20 = v24;
      sub_1BA27FA54((uint64_t)&v25);
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1BA23F51C(0, *(_QWORD *)(v7 + 16) + 1, 1, (char *)v7);
        v7 = result;
      }
      v22 = *(_QWORD *)(v7 + 16);
      v21 = *(_QWORD *)(v7 + 24);
      if (v22 >= v21 >> 1)
      {
        result = (uint64_t)sub_1BA23F51C((char *)(v21 > 1), v22 + 1, 1, (char *)v7);
        v7 = result;
      }
      *(_QWORD *)(v7 + 16) = v22 + 1;
      *(_BYTE *)(v7 + v22 + 32) = v20;
      goto LABEL_4;
    }
    result = sub_1BA27FA54((uint64_t)&v25);
    if (v4)
      goto LABEL_5;
  }
  v12 = v10 + 4;
  if (v12 >= v36)
  {
LABEL_30:
    swift_release();
    return v7;
  }
  v11 = *(_QWORD *)(v23 + 8 * v12);
  if (v11)
  {
    v6 = v12;
    goto LABEL_21;
  }
  while (1)
  {
    v6 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v6 >= v36)
      goto LABEL_30;
    v11 = *(_QWORD *)(v23 + 8 * v6);
    ++v12;
    if (v11)
      goto LABEL_21;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1BA27CAD4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t destroy for AdSegmentManager.ProviderContainer(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for AdSegmentManager.ProviderContainer(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = v5;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t *assignWithCopy for AdSegmentManager.ProviderContainer(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v4 = a2[6];
  a1[5] = a2[5];
  a1[6] = v4;
  swift_retain();
  swift_release();
  v5 = a2[8];
  a1[7] = a2[7];
  a1[8] = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for AdSegmentManager.ProviderContainer(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AdSegmentManager.ProviderContainer(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AdSegmentManager.ProviderContainer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AdSegmentManager.ProviderContainer()
{
  return &type metadata for AdSegmentManager.ProviderContainer;
}

uint64_t sub_1BA27CD18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  __int128 v55;
  uint64_t v56;
  _UNKNOWN **v57;
  _BYTE v58[40];
  uint64_t (*v59)();
  char *v60;
  uint64_t (*v61)();
  char *v62;

  v48 = a4;
  v49 = a1;
  v46 = a2;
  v7 = *(_QWORD *)(a3 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x1E0C80A78](a1);
  v45 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v42 - v10;
  v13 = *(_QWORD *)(v12 + 96);
  v44 = *(_QWORD *)(v12 + 88);
  v14 = v44;
  v56 = type metadata accessor for AdSegment(0, v44, v13, v15);
  v57 = &protocol witness table for AdSegment<A>;
  *(_QWORD *)&v55 = a2;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v16(v11, a1, a3);
  v17 = *(unsigned __int8 *)(v7 + 80);
  v18 = (char *)swift_allocObject();
  *((_QWORD *)v18 + 2) = v14;
  *((_QWORD *)v18 + 3) = a3;
  *((_QWORD *)v18 + 4) = v48;
  v43 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v43(&v18[(v17 + 40) & ~v17], v11, a3);
  v19 = swift_allocObject();
  v20 = v47;
  swift_weakInit();
  v21 = v45;
  v16(v45, v49, a3);
  v22 = (v17 + 48) & ~v17;
  v23 = (char *)swift_allocObject();
  *((_QWORD *)v23 + 2) = v44;
  *((_QWORD *)v23 + 3) = a3;
  v24 = v48;
  *((_QWORD *)v23 + 4) = v48;
  *((_QWORD *)v23 + 5) = v19;
  v25 = v46;
  v43(&v23[v22], v21, a3);
  *(_QWORD *)&v23[(v8 + v22 + 7) & 0xFFFFFFFFFFFFFFF8] = v25;
  sub_1BA21D3D4(&v55, (uint64_t)v58);
  v59 = sub_1BA27D814;
  v60 = v18;
  v26 = v20;
  v61 = sub_1BA27D918;
  v62 = v23;
  v27 = *(_QWORD *)(v20 + 64);
  v54 = v58;
  *(_QWORD *)&v55 = v27;
  v50 = a3;
  v51 = v24;
  v28 = v24;
  v52 = v26;
  v53 = v25;
  sub_1BA2C1724();
  swift_retain_n();
  swift_retain();
  sub_1BA2C1880();
  swift_release();
  if (qword_1ED5B0F18 != -1)
    swift_once();
  v29 = (void *)qword_1ED5B0E38;
  sub_1BA22053C(0, (unint64_t *)&qword_1ED5B2CC0, (uint64_t (*)(uint64_t))sub_1BA2395A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1BA2C37C0;
  v31 = *(_QWORD *)(v25 + 16);
  v32 = *(_QWORD *)(v25 + 24);
  v33 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v30 + 56) = MEMORY[0x1E0DEA968];
  v34 = sub_1BA2291C8();
  *(_QWORD *)(v30 + 32) = v31;
  *(_QWORD *)(v30 + 40) = v32;
  v35 = 0x65746176697270;
  if (*(_BYTE *)(v25 + 32))
    v35 = 0x63696C627570;
  v36 = 0xE700000000000000;
  if (*(_BYTE *)(v25 + 32))
    v36 = 0xE600000000000000;
  *(_QWORD *)(v30 + 96) = v33;
  *(_QWORD *)(v30 + 104) = v34;
  *(_QWORD *)(v30 + 64) = v34;
  *(_QWORD *)(v30 + 72) = v35;
  *(_QWORD *)(v30 + 80) = v36;
  v37 = v29;
  swift_bridgeObjectRetain();
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v28 + 24))(a3, v28);
  sub_1BA21D258();
  v38 = (void *)sub_1BA2C23D8();
  v39 = swift_allocObject();
  swift_weakInit();
  v40 = (_QWORD *)swift_allocObject();
  v40[2] = a3;
  v40[3] = v28;
  v40[4] = v39;
  v40[5] = v25;
  swift_retain();
  sub_1BA2C17F0();
  swift_release();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v55);
  sub_1BA27D624();
  return sub_1BA27EDFC((uint64_t)v58);
}

uint64_t sub_1BA27D184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v9 = sub_1BA27D274(a2, a3, a4, a5);
    swift_release();
  }
  else
  {
    sub_1BA27FB54();
    swift_allocError();
    sub_1BA22920C(0, &qword_1ED5B0D98, (uint64_t)&type metadata for AdSegmentManager.SegmentUpdate, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BA2C1970();
  }
  return v9;
}

uint64_t sub_1BA27D274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  _QWORD *v18;
  void *v19;
  uint64_t v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v9 = *(_QWORD *)(a3 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = MEMORY[0x1E0C80A78](a1);
  v23 = *(_QWORD *)(v12 + 88);
  v13 = v23;
  v24 = v14;
  v25 = v15;
  v26 = v11;
  sub_1BA2C22F4();
  sub_1BA2C19A0();
  v22[1] = *(_QWORD *)(v4 + 96);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a3);
  v16 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v17 = (char *)swift_allocObject();
  *((_QWORD *)v17 + 2) = v13;
  *((_QWORD *)v17 + 3) = a3;
  *((_QWORD *)v17 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v17[v16], (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
  *(_QWORD *)&v17[(v10 + v16 + 7) & 0xFFFFFFFFFFFFFFF8] = a2;
  swift_retain();
  sub_1BA2C194C();
  swift_release();
  swift_release();
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = a2;
  swift_retain();
  v19 = (void *)sub_1BA2C18F8();
  v20 = sub_1BA2C1964();
  swift_release();
  swift_release();

  return v20;
}

uint64_t sub_1BA27D428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[72];

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  sub_1BA27FA20(a3, (uint64_t)v6);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BA2AC86C((uint64_t)v6, v3, v4);
  return swift_endAccess();
}

uint64_t sub_1BA27D4A0(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  int v4;
  uint64_t result;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;

  v4 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (v4)
    {
      if (qword_1ED5B0F18 != -1)
        swift_once();
      v6 = (void *)qword_1ED5B0E38;
      sub_1BA22053C(0, (unint64_t *)&qword_1ED5B2CC0, (uint64_t (*)(uint64_t))sub_1BA2395A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1BA2C37C0;
      v9 = *(_QWORD *)(a3 + 16);
      v8 = *(_QWORD *)(a3 + 24);
      v10 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
      v11 = sub_1BA2291C8();
      *(_QWORD *)(v7 + 32) = v9;
      *(_QWORD *)(v7 + 40) = v8;
      v12 = 0x65746176697270;
      if (*(_BYTE *)(a3 + 32))
        v12 = 0x63696C627570;
      v13 = 0xE700000000000000;
      if (*(_BYTE *)(a3 + 32))
        v13 = 0xE600000000000000;
      *(_QWORD *)(v7 + 96) = v10;
      *(_QWORD *)(v7 + 104) = v11;
      *(_QWORD *)(v7 + 64) = v11;
      *(_QWORD *)(v7 + 72) = v12;
      *(_QWORD *)(v7 + 80) = v13;
      v14 = v6;
      swift_bridgeObjectRetain();
      sub_1BA2C239C();
      sub_1BA2C1EB0();

      swift_bridgeObjectRelease();
      sub_1BA27D624();
    }
    return swift_release();
  }
  return result;
}

void sub_1BA27D624()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  double v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  _QWORD v9[6];

  if (qword_1ED5B0F18 != -1)
    swift_once();
  v1 = (id)qword_1ED5B0E38;
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  v2 = *(void **)(v0 + 80);
  if (v2)
    objc_msgSend(v2, sel_invalidate);
  v3 = (void *)objc_opt_self();
  v4 = *(double *)(v0 + 88);
  v5 = swift_allocObject();
  swift_weakInit();
  v9[4] = sub_1BA27EE28;
  v9[5] = v5;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1BA25237C;
  v9[3] = &block_descriptor_7;
  v6 = _Block_copy(v9);
  swift_release();
  v7 = objc_msgSend(v3, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v6, v4);
  _Block_release(v6);
  v8 = *(void **)(v0 + 80);
  *(_QWORD *)(v0 + 80) = v7;

}

uint64_t sub_1BA27D794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1BA27CD18(a1, a2, a4, a5);
}

uint64_t sub_1BA27D7BC()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1BA27D814()
{
  uint64_t v0;
  unsigned __int8 v2;

  (*(void (**)(void))(*(_QWORD *)(v0 + 32) + 24))();
  sub_1BA2C17E4();
  swift_release();
  return v2;
}

uint64_t sub_1BA27D86C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BA27D890()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA27D918()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = v0[3];
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return sub_1BA27D184(v0[5], (uint64_t)v0 + v3, *(_QWORD *)((char *)v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)), v1, v0[4]);
}

uint64_t sub_1BA27D94C()
{
  uint64_t *v0;

  return sub_1BA27D428(v0[4], v0[5], v0[6]);
}

uint64_t sub_1BA27D95C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  _QWORD v26[6];
  __int128 v27;
  uint64_t v28;
  _UNKNOWN **v29;
  _QWORD v30[6];

  v8 = *a3;
  v9 = *a1;
  (*(void (**)(uint64_t, uint64_t))(a5 + 24))(a4, a5);
  sub_1BA2C17FC();
  swift_release();
  v28 = v8;
  v29 = &protocol witness table for AdSegment<A>;
  *(_QWORD *)&v27 = a3;
  v30[0] = v9;
  v26[2] = a4;
  v26[3] = a5;
  v26[4] = a3;
  v10 = sub_1BA2C22F4();
  swift_retain();
  v11 = MEMORY[0x1BCCD93D0](MEMORY[0x1E0DEAF50], v10);
  v12 = MEMORY[0x1E0DEA968];
  v14 = sub_1BA27C530((void (*)(char *, char *))sub_1BA27FCA4, (uint64_t)v26, v10, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v11, MEMORY[0x1E0DEDD18], v13);
  sub_1BA21D3D4(&v27, (uint64_t)v30);
  v30[5] = v14;
  if (qword_1ED5B0F18 != -1)
    swift_once();
  v15 = (void *)qword_1ED5B0E38;
  sub_1BA22053C(0, (unint64_t *)&qword_1ED5B2CC0, (uint64_t (*)(uint64_t))sub_1BA2395A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BA2C3840;
  v18 = a3[2];
  v17 = a3[3];
  *(_QWORD *)(v16 + 56) = v12;
  v19 = sub_1BA2291C8();
  *(_QWORD *)(v16 + 32) = v18;
  *(_QWORD *)(v16 + 40) = v17;
  v20 = 0x65746176697270;
  if (*((_BYTE *)a3 + 32))
    v20 = 0x63696C627570;
  v21 = 0xE700000000000000;
  if (*((_BYTE *)a3 + 32))
    v21 = 0xE600000000000000;
  *(_QWORD *)(v16 + 96) = v12;
  *(_QWORD *)(v16 + 104) = v19;
  *(_QWORD *)(v16 + 64) = v19;
  *(_QWORD *)(v16 + 72) = v20;
  *(_QWORD *)(v16 + 80) = v21;
  sub_1BA22920C(0, (unint64_t *)&qword_1ED5B2B70, v12, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  *(_QWORD *)(v16 + 136) = v22;
  *(_QWORD *)(v16 + 144) = sub_1BA27EEA8((unint64_t *)&qword_1ED5B2B88, (unint64_t *)&qword_1ED5B2B70, v12, MEMORY[0x1E0CB1B18]);
  *(_QWORD *)(v16 + 112) = v14;
  v23 = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  sub_1BA27F9A4((uint64_t)v30, (uint64_t)&v27);
  sub_1BA22920C(0, &qword_1ED5B0D98, (uint64_t)&type metadata for AdSegmentManager.SegmentUpdate, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  v24 = sub_1BA2C197C();
  sub_1BA27F9F4((uint64_t)v30);
  return v24;
}

uint64_t sub_1BA27DC28@<X0>(uint64_t *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  v5 = a1[2];
  v6 = a1[3];
  swift_bridgeObjectRetain();
  sub_1BA2C21C8();
  (*(void (**)(_QWORD))(*(_QWORD *)(v3 + 96) + 8))(*(_QWORD *)(v3 + 88));
  sub_1BA2C21C8();
  result = swift_bridgeObjectRelease();
  *a2 = v5;
  a2[1] = v6;
  return result;
}

uint64_t sub_1BA27DCB4(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (qword_1ED5B0F18 != -1)
    swift_once();
  v3 = (id)qword_1ED5B0E38;
  sub_1BA2C2390();
  sub_1BA22053C(0, (unint64_t *)&qword_1ED5B2CC0, (uint64_t (*)(uint64_t))sub_1BA2395A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BA2C3840;
  v6 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v7 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  v8 = sub_1BA2291C8();
  v9 = v8;
  *(_QWORD *)(v4 + 32) = v6;
  *(_QWORD *)(v4 + 40) = v5;
  v10 = 0x65746176697270;
  if (*(_BYTE *)(a2 + 32))
    v10 = 0x63696C627570;
  v11 = 0xE700000000000000;
  if (*(_BYTE *)(a2 + 32))
    v11 = 0xE600000000000000;
  *(_QWORD *)(v4 + 96) = v7;
  *(_QWORD *)(v4 + 104) = v8;
  *(_QWORD *)(v4 + 64) = v8;
  *(_QWORD *)(v4 + 72) = v10;
  *(_QWORD *)(v4 + 80) = v11;
  swift_getErrorValue();
  swift_bridgeObjectRetain();
  v12 = sub_1BA2C26E4();
  *(_QWORD *)(v4 + 136) = v7;
  *(_QWORD *)(v4 + 144) = v9;
  *(_QWORD *)(v4 + 112) = v12;
  *(_QWORD *)(v4 + 120) = v13;
  sub_1BA2C1EB0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA27DE3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD aBlock[6];
  uint64_t v18;

  v0 = sub_1BA2C2030();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BA2C2060();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v9 = result;
    v16 = v1;
    if (qword_1ED5B0F18 != -1)
      swift_once();
    v10 = (id)qword_1ED5B0E38;
    sub_1BA2C239C();
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1BA2C1EB0();

    v18 = *(_QWORD *)(v9 + 64);
    sub_1BA2C1724();
    sub_1BA27FAF8(0, &qword_1ED5B0ED0, (uint64_t (*)(_QWORD, _QWORD, ValueMetadata *, _QWORD))MEMORY[0x1E0DEA048]);
    swift_retain();
    sub_1BA2C1880();
    swift_release();
    v12 = aBlock[0];
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = v12;
    *(_QWORD *)(v13 + 24) = v9;
    aBlock[4] = sub_1BA27EEA0;
    aBlock[5] = v13;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BA223CC0;
    aBlock[3] = &block_descriptor_17;
    v14 = _Block_copy(aBlock);
    swift_retain();
    sub_1BA2C2048();
    v18 = v11;
    sub_1BA23C3FC();
    sub_1BA22053C(0, (unint64_t *)&qword_1ED5B2B60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA23C444();
    sub_1BA2C2480();
    MEMORY[0x1BCCD8B9C](0, v7, v3, v14);
    _Block_release(v14);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v3, v0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BA27E110(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  char v4;
  uint64_t v6;

  v6 = sub_1BA27C820(a1);
  sub_1BA22920C(0, (unint64_t *)&qword_1ED5B0EE0, (uint64_t)&type metadata for AdSegmentScope, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA27EEA8(&qword_1ED5B0EE8, (unint64_t *)&qword_1ED5B0EE0, (uint64_t)&type metadata for AdSegmentScope, MEMORY[0x1E0DEAF38]);
  sub_1BA236854();
  v1 = sub_1BA2C21E0();
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v2; ++i)
    {
      v4 = *(_BYTE *)(v1 + i + 32);
      LOBYTE(v6) = v4;
      sub_1BA27E230((unsigned __int8 *)&v6);
    }
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

_BYTE *sub_1BA27E224@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1BA27E230(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v2 = v1;
  v3 = *a1;
  if (qword_1ED5B0F18 != -1)
    swift_once();
  v4 = (void *)qword_1ED5B0E38;
  sub_1BA22053C(0, (unint64_t *)&qword_1ED5B2CC0, (uint64_t (*)(uint64_t))sub_1BA2395A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = swift_allocObject();
  v6 = v5;
  *(_OWORD *)(v5 + 16) = xmmword_1BA2C37D0;
  if (v3)
    v7 = 0x63696C627570;
  else
    v7 = 0x65746176697270;
  if (v3)
    v8 = 0xE600000000000000;
  else
    v8 = 0xE700000000000000;
  v9 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 64) = sub_1BA2291C8();
  *(_QWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v6 + 40) = v8;
  v10 = v4;
  sub_1BA2C239C();
  sub_1BA2C1EB0();

  swift_bridgeObjectRelease();
  v11 = swift_beginAccess();
  MEMORY[0x1E0C80A78](v11);
  v27 = v2;
  v28 = v3;
  v12 = swift_bridgeObjectRetain();
  v13 = sub_1BA27F2F4(v12, (uint64_t (*)(uint64_t, uint64_t, _BYTE *))sub_1BA27EEF0);
  v14 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v14);
  LOBYTE(v27) = v3;
  v15 = swift_bridgeObjectRetain();
  v16 = sub_1BA27F740(v15, (uint64_t (*)(uint64_t, uint64_t, _BYTE *))sub_1BA27F54C, (uint64_t)&v26);
  swift_bridgeObjectRelease();
  v17 = sub_1BA27C294(v16);
  v18 = swift_release();
  MEMORY[0x1E0C80A78](v18);
  v27 = v17;
  v19 = MEMORY[0x1E0DEAEC8];
  sub_1BA22920C(0, &qword_1ED5B0EF0, (uint64_t)&type metadata for AdSegmentManager.SegmentUpdate, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA2C19A0();
  swift_bridgeObjectRelease();
  v20 = swift_allocObject();
  swift_weakInit();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v20;
  *(_BYTE *)(v21 + 24) = v3;
  *(_QWORD *)(v21 + 32) = v13;
  sub_1BA22920C(0, (unint64_t *)&qword_1ED5B2B70, v9, (uint64_t (*)(_QWORD, uint64_t))v19);
  sub_1BA2C1958();
  swift_release();
  swift_release();
  v22 = swift_allocObject();
  swift_weakInit();
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v22;
  *(_BYTE *)(v23 + 24) = v3;
  v24 = (void *)sub_1BA2C18F8();
  sub_1BA22920C(0, (unint64_t *)&unk_1ED5B0F08, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1BA2C1958();
  swift_release();
  swift_release();

  *(_BYTE *)(swift_allocObject() + 16) = v3;
  v25 = (void *)sub_1BA2C18F8();
  sub_1BA2C1964();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1BA27E630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;
  char v8;
  uint64_t v9;

  if (((*(uint64_t (**)(void))(a3 + 40))() & 1) != 0)
    return 0;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(a4 + 72) + 16) && (sub_1BA221910(a5 & 1), (v8 & 1) != 0))
  {
    swift_endAccess();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BA2C18C8();
    swift_bridgeObjectRelease();
    swift_release();
    result = v9;
    if (v9)
      return result;
  }
  else
  {
    swift_endAccess();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BA27E714(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v14;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  v6 = (*(uint64_t (**)(void))(a3 + 40))();
  sub_1BA27FA20(a3, (uint64_t)v16 + 1);
  if ((v6 & 1) != 0)
  {
    v7 = v17;
    v8 = v18;
    __swift_project_boxed_opaque_existential_1((_QWORD *)((char *)v16 + 1), v17);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v8 + 16))(v16, v7, v8);
    if (LOBYTE(v16[0]))
      v9 = 0x63696C627570;
    else
      v9 = 0x65746176697270;
    if (LOBYTE(v16[0]))
      v10 = 0xE600000000000000;
    else
      v10 = 0xE700000000000000;
    if ((a4 & 1) != 0)
      v11 = 0x63696C627570;
    else
      v11 = 0x65746176697270;
    if ((a4 & 1) != 0)
      v12 = 0xE600000000000000;
    else
      v12 = 0xE700000000000000;
    if (v9 == v11 && v10 == v12)
      v14 = 1;
    else
      v14 = sub_1BA2C26A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = 0;
  }
  sub_1BA27EDFC((uint64_t)v16 + 1);
  return v14 & 1;
}

char *sub_1BA27E818@<X0>(uint64_t *a1@<X0>, char a2@<W2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;
  uint64_t Strong;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *result;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  int64_t v23;
  int64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  int64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[11];

  v5 = *a1;
  v6 = *(_QWORD *)(*a1 + 16);
  v39 = *a1;
  if (v6)
  {
    v7 = a2 & 1;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    v8 = (_QWORD *)(v5 + 72);
    v40 = a3;
    do
    {
      Strong = swift_weakLoadStrong();
      if (Strong)
      {
        v10 = Strong;
        swift_beginAccess();
        if (*(_QWORD *)(*(_QWORD *)(v10 + 72) + 16) && (sub_1BA221910(v7), (v11 & 1) != 0))
        {
          swift_endAccess();
          swift_retain();
          swift_release();
          v13 = *(v8 - 2);
          v12 = *(v8 - 1);
          __swift_project_boxed_opaque_existential_1(v8 - 5, v13);
          v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v13, v12);
          v41[10] = *v8;
          v41[0] = v14;
          v41[1] = v15;
          swift_bridgeObjectRetain();
          sub_1BA2C18D4();
          a3 = v40;
        }
        else
        {
          swift_endAccess();
        }
        swift_release();
      }
      v8 += 6;
      --v6;
    }
    while (v6);
    v5 = v39;
    swift_bridgeObjectRelease();
  }
  v16 = *(_QWORD *)(a3 + 16);
  if (v16)
  {
    result = (char *)swift_bridgeObjectRetain();
    v18 = 0;
    v19 = (char *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v20 = *(_QWORD *)(a3 + 8 * v18 + 32);
      v21 = *(_QWORD *)(v20 + 16);
      v22 = *((_QWORD *)v19 + 2);
      v23 = v22 + v21;
      if (__OFADD__(v22, v21))
      {
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
        return result;
      }
      swift_bridgeObjectRetain();
      result = (char *)swift_isUniquelyReferenced_nonNull_native();
      if ((_DWORD)result && v23 <= *((_QWORD *)v19 + 3) >> 1)
      {
        if (*(_QWORD *)(v20 + 16))
          goto LABEL_24;
      }
      else
      {
        if (v22 <= v23)
          v24 = v22 + v21;
        else
          v24 = v22;
        result = sub_1BA22C18C(result, v24, 1, v19);
        v19 = result;
        if (*(_QWORD *)(v20 + 16))
        {
LABEL_24:
          if ((*((_QWORD *)v19 + 3) >> 1) - *((_QWORD *)v19 + 2) < v21)
            goto LABEL_53;
          result = (char *)swift_arrayInitWithCopy();
          if (v21)
          {
            v25 = *((_QWORD *)v19 + 2);
            v26 = __OFADD__(v25, v21);
            v27 = v25 + v21;
            if (v26)
              goto LABEL_55;
            *((_QWORD *)v19 + 2) = v27;
          }
          goto LABEL_14;
        }
      }
      if (v21)
        goto LABEL_50;
LABEL_14:
      result = (char *)swift_bridgeObjectRelease();
      if (v16 == ++v18)
      {
        swift_bridgeObjectRelease();
        v5 = v39;
        v28 = *(_QWORD *)(v39 + 16);
        if (v28)
          goto LABEL_29;
        goto LABEL_47;
      }
    }
  }
  v19 = (char *)MEMORY[0x1E0DEE9D8];
  v28 = *(_QWORD *)(v5 + 16);
  if (v28)
  {
LABEL_29:
    v29 = v5 + 32;
    swift_bridgeObjectRetain();
    v30 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      sub_1BA27F9A4(v29, (uint64_t)v41);
      v31 = v41[5];
      swift_bridgeObjectRetain();
      result = (char *)sub_1BA27F9F4((uint64_t)v41);
      v32 = *(_QWORD *)(v31 + 16);
      v33 = *(_QWORD *)(v30 + 16);
      v34 = v33 + v32;
      if (__OFADD__(v33, v32))
        goto LABEL_51;
      result = (char *)swift_isUniquelyReferenced_nonNull_native();
      if ((_DWORD)result && v34 <= *(_QWORD *)(v30 + 24) >> 1)
      {
        if (*(_QWORD *)(v31 + 16))
          goto LABEL_41;
      }
      else
      {
        if (v33 <= v34)
          v35 = v33 + v32;
        else
          v35 = v33;
        result = sub_1BA22C18C(result, v35, 1, (char *)v30);
        v30 = (uint64_t)result;
        if (*(_QWORD *)(v31 + 16))
        {
LABEL_41:
          if ((*(_QWORD *)(v30 + 24) >> 1) - *(_QWORD *)(v30 + 16) < v32)
            goto LABEL_54;
          result = (char *)swift_arrayInitWithCopy();
          if (v32)
          {
            v36 = *(_QWORD *)(v30 + 16);
            v26 = __OFADD__(v36, v32);
            v37 = v36 + v32;
            if (v26)
              goto LABEL_56;
            *(_QWORD *)(v30 + 16) = v37;
          }
          goto LABEL_31;
        }
      }
      if (v32)
        goto LABEL_52;
LABEL_31:
      swift_bridgeObjectRelease();
      v29 += 48;
      if (!--v28)
      {
        swift_bridgeObjectRelease();
        goto LABEL_48;
      }
    }
  }
LABEL_47:
  v30 = MEMORY[0x1E0DEE9D8];
LABEL_48:
  v41[0] = v19;
  result = (char *)sub_1BA227378(v30);
  *a4 = v41[0];
  return result;
}

uint64_t sub_1BA27EBD0@<X0>(uint64_t *a1@<X0>, char a2@<W2>, BOOL *a3@<X8>)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unsigned __int8 v8;

  v5 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  v7 = result;
  if (result)
  {
    swift_release();
    v8 = a2 & 1;
    result = sub_1BA2BCAD0(v5, &v8);
  }
  *a3 = v7 == 0;
  return result;
}

uint64_t sub_1BA27EC64(uint64_t a1, char a2)
{
  id v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (qword_1ED5B0F18 != -1)
    swift_once();
  v3 = (id)qword_1ED5B0E38;
  sub_1BA2C2390();
  sub_1BA22053C(0, (unint64_t *)&qword_1ED5B2CC0, (uint64_t (*)(uint64_t))sub_1BA2395A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  v5 = (_QWORD *)v4;
  *(_OWORD *)(v4 + 16) = xmmword_1BA2C37C0;
  if ((a2 & 1) != 0)
    v6 = 0x63696C627570;
  else
    v6 = 0x65746176697270;
  if ((a2 & 1) != 0)
    v7 = 0xE600000000000000;
  else
    v7 = 0xE700000000000000;
  v8 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  v9 = sub_1BA2291C8();
  v5[8] = v9;
  v5[4] = v6;
  v5[5] = v7;
  swift_getErrorValue();
  v10 = sub_1BA2C26E4();
  v5[12] = v8;
  v5[13] = v9;
  v5[9] = v10;
  v5[10] = v11;
  sub_1BA2C1EB0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA27EDC4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA27EDF0(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_1BA27D4A0(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1BA27EDFC(uint64_t a1)
{
  destroy for AdSegmentManager.ProviderContainer(a1);
  return a1;
}

uint64_t sub_1BA27EE28()
{
  return sub_1BA27DE3C();
}

uint64_t sub_1BA27EE30@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  swift_beginAccess();
  *a1 = *(_QWORD *)(v1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA27EE74()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA27EEA0()
{
  uint64_t v0;

  return sub_1BA27E110(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1BA27EEA8(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BA22920C(255, a2, a3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCD93D0](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA27EEF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1BA27E630(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_BYTE *)(v3 + 24));
}

uint64_t sub_1BA27EEFC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  _OWORD v38[4];
  uint64_t v39;

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_1BA27FAF8(0, &qword_1ED5B0EF8, (uint64_t (*)(_QWORD, _QWORD, ValueMetadata *, _QWORD))MEMORY[0x1E0DECD58]);
  result = sub_1BA2C25B8();
  v9 = result;
  v32 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= v32)
        return v9;
      v16 = a1[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= v32)
          return v9;
        v16 = a1[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= v32)
            return v9;
          v16 = a1[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v32)
              return v9;
            v16 = a1[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v11 >= v32)
                  return v9;
                v16 = a1[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v14);
    v20 = *v18;
    v19 = v18[1];
    sub_1BA27FA20(*(_QWORD *)(v4 + 56) + 72 * v14, (uint64_t)v38);
    v35 = v38[2];
    v36 = v38[3];
    v37 = v39;
    v33 = v38[0];
    v34 = v38[1];
    sub_1BA2C2720();
    swift_bridgeObjectRetain();
    sub_1BA2C21A4();
    result = sub_1BA2C2738();
    v21 = -1 << *(_BYTE *)(v9 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v23 == v26;
        if (v23 == v26)
          v23 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v23);
      }
      while (v28 == -1);
      v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(_QWORD *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    v29 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v24);
    *v29 = v20;
    v29[1] = v19;
    v30 = *(_QWORD *)(v9 + 56) + 72 * v24;
    *(_OWORD *)(v30 + 32) = v35;
    *(_OWORD *)(v30 + 48) = v36;
    *(_QWORD *)(v30 + 64) = v37;
    *(_OWORD *)v30 = v33;
    *(_OWORD *)(v30 + 16) = v34;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1BA27F1DC(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1BA27F264(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v5 = *(_QWORD *)(*(_QWORD *)(a5 + 48) + 16 * a2);
    sub_1BA27FA20(*(_QWORD *)(a5 + 56) + 72 * a2, result);
    swift_bridgeObjectRetain();
    return v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1BA27F2F4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, _BYTE *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  _QWORD v24[2];
  _BYTE v25[72];
  uint64_t v26;

  v4 = *(_QWORD *)(a1 + 64);
  v26 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & v4;
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  v23 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v7)
    goto LABEL_7;
LABEL_4:
  v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v18)) + (v10 << 6))
  {
    v13 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v14 = *v13;
    v15 = v13[1];
    sub_1BA27FA20(*(_QWORD *)(a1 + 56) + 72 * i, (uint64_t)v25);
    v24[0] = v14;
    v24[1] = v15;
    swift_bridgeObjectRetain();
    v16 = a2(v14, v15, v25);
    result = sub_1BA27FA54((uint64_t)v24);
    if (v16)
    {
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1BA23F618(0, v23[2] + 1, 1, v23);
        v23 = (_QWORD *)result;
      }
      v21 = v23[2];
      v20 = v23[3];
      v22 = v21 + 1;
      if (v21 >= v20 >> 1)
      {
        result = (uint64_t)sub_1BA23F618((_QWORD *)(v20 > 1), v21 + 1, 1, v23);
        v22 = v21 + 1;
        v23 = (_QWORD *)result;
      }
      v23[2] = v22;
      v23[v21 + 4] = v16;
      if (v7)
        goto LABEL_4;
    }
    else if (v7)
    {
      goto LABEL_4;
    }
LABEL_7:
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v17 >= v8)
      goto LABEL_29;
    v18 = *(_QWORD *)(v26 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v8)
        goto LABEL_29;
      v18 = *(_QWORD *)(v26 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v8)
          goto LABEL_29;
        v18 = *(_QWORD *)(v26 + 8 * v10);
        if (!v18)
        {
          v10 = v17 + 3;
          if (v17 + 3 >= v8)
            goto LABEL_29;
          v18 = *(_QWORD *)(v26 + 8 * v10);
          if (!v18)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v18 - 1) & v18;
  }
  v19 = v17 + 4;
  if (v19 >= v8)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v23;
  }
  v18 = *(_QWORD *)(v26 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v8)
      goto LABEL_29;
    v18 = *(_QWORD *)(v26 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1BA27F54C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1BA27E714(a1, a2, a3, *(_BYTE *)(v3 + 16));
}

uint64_t sub_1BA27F554(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, _BYTE *))
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t *v22;
  uint64_t v23;
  _BYTE v24[72];
  uint64_t v25;

  v22 = (unint64_t *)result;
  v23 = 0;
  v6 = 0;
  v7 = *(_QWORD *)(a3 + 64);
  v25 = a3 + 64;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    v17 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v17 >= v11)
      return sub_1BA27EEFC(v22, a2, v23, a3);
    v18 = *(_QWORD *)(v25 + 8 * v17);
    ++v6;
    if (!v18)
    {
      v6 = v17 + 1;
      if (v17 + 1 >= v11)
        return sub_1BA27EEFC(v22, a2, v23, a3);
      v18 = *(_QWORD *)(v25 + 8 * v6);
      if (!v18)
      {
        v6 = v17 + 2;
        if (v17 + 2 >= v11)
          return sub_1BA27EEFC(v22, a2, v23, a3);
        v18 = *(_QWORD *)(v25 + 8 * v6);
        if (!v18)
          break;
      }
    }
LABEL_20:
    v10 = (v18 - 1) & v18;
    v13 = __clz(__rbit64(v18)) + (v6 << 6);
LABEL_5:
    v14 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v13);
    v15 = *v14;
    v16 = v14[1];
    sub_1BA27FA20(*(_QWORD *)(a3 + 56) + 72 * v13, (uint64_t)v24);
    swift_bridgeObjectRetain();
    LOBYTE(v15) = a4(v15, v16, v24);
    sub_1BA27EDFC((uint64_t)v24);
    result = swift_bridgeObjectRelease();
    if ((v15 & 1) != 0)
    {
      *(unint64_t *)((char *)v22 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v23++, 1))
      {
        __break(1u);
        return sub_1BA27EEFC(v22, a2, v23, a3);
      }
    }
  }
  v19 = v17 + 3;
  if (v19 >= v11)
    return sub_1BA27EEFC(v22, a2, v23, a3);
  v18 = *(_QWORD *)(v25 + 8 * v19);
  if (v18)
  {
    v6 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    v6 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v6 >= v11)
      return sub_1BA27EEFC(v22, a2, v23, a3);
    v18 = *(_QWORD *)(v25 + 8 * v6);
    ++v19;
    if (v18)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1BA27F740(uint64_t isStackAllocationSafe, uint64_t (*a2)(uint64_t, uint64_t, _BYTE *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  char v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v6 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x1E0C80C00];
  v7 = *(_BYTE *)(isStackAllocationSafe + 32);
  v8 = (unint64_t)((1 << v7) + 63) >> 6;
  v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    v10 = sub_1BA27F554((uint64_t)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, v6, a2);
    if (v3)
      swift_willThrow();
    else
      return v10;
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a3 = sub_1BA27F554((uint64_t)v11, v8, v6, a2);
    MEMORY[0x1BCCD94A8](v11, -1, -1);
  }
  return a3;
}

uint64_t sub_1BA27F8B0()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)sub_1BA2C18F8();
  v1 = sub_1BA2C188C();

  return v1;
}

uint64_t sub_1BA27F900()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

char *sub_1BA27F92C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA27E818(a1, *(_BYTE *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_1BA27F94C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA27F970@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA27EBD0(a1, *(_BYTE *)(v2 + 24), a2);
}

uint64_t sub_1BA27F98C()
{
  return swift_deallocObject();
}

uint64_t sub_1BA27F99C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA27EC64(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_1BA27F9A4(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a2, a1);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(a1 + 40);
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1BA27F9F4(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BA27FA20(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AdSegmentManager.ProviderContainer(a2, a1);
  return a2;
}

uint64_t sub_1BA27FA54(uint64_t a1)
{
  uint64_t v2;

  sub_1BA27FA90();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BA27FA90()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED5B0ED8)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED5B0ED8);
  }
}

void sub_1BA27FAF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD, ValueMetadata *, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x1E0DEA968], &type metadata for AdSegmentManager.ProviderContainer, MEMORY[0x1E0DEA978]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_1BA27FB54()
{
  unint64_t result;

  result = qword_1EF27F628;
  if (!qword_1EF27F628)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C8754, &type metadata for AdSegmentManager.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF27F628);
  }
  return result;
}

uint64_t sub_1BA27FB98()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 32) + 32))(*(_QWORD *)(v0 + 24));
}

uint64_t sub_1BA27FBC8()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80)));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA27FC34(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1BA27D95C(a1, v1 + v4, *(uint64_t **)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)), v2, *(_QWORD *)(v1 + 32));
}

uint64_t sub_1BA27FC74()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA27FC98(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA27DCB4(a1, *(_QWORD *)(v1 + 32));
}

uint64_t sub_1BA27FCA4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1BA27DC28(*(uint64_t **)(v1 + 32), a1);
}

uint64_t storeEnumTagSinglePayload for AdSegmentManager.Errors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BA27FD04 + 4 * byte_1BA2C8630[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BA27FD24 + 4 * byte_1BA2C8635[v4]))();
}

_BYTE *sub_1BA27FD04(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BA27FD24(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA27FD2C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA27FD34(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA27FD3C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA27FD44(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AdSegmentManager.Errors()
{
  return &type metadata for AdSegmentManager.Errors;
}

uint64_t destroy for AdSegmentManager.SegmentUpdate(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AdSegmentManager.SegmentUpdate(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for AdSegmentManager.SegmentUpdate(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AdSegmentManager.SegmentUpdate(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AdSegmentManager.SegmentUpdate(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AdSegmentManager.SegmentUpdate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AdSegmentManager.SegmentUpdate()
{
  return &type metadata for AdSegmentManager.SegmentUpdate;
}

unint64_t sub_1BA27FEF4()
{
  unint64_t result;

  result = qword_1EF27F630;
  if (!qword_1EF27F630)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C872C, &type metadata for AdSegmentManager.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF27F630);
  }
  return result;
}

uint64_t ArticleBannerAdProviderFactory.createAdProvider<A, B>(for:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BA27FFD8(a2);
}

uint64_t ArticleBannerAdProviderFactory.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t ArticleBannerAdProviderFactory.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1BA27FF9C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1BA27FFD8(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1BA27FFD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  __int128 v6[2];

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  type metadata accessor for ArticleBannerAdProvider();
  sub_1BA22068C(a1, (uint64_t)v6);
  v3 = swift_allocObject();
  sub_1BA21D3D4(v6, v3 + 16);
  v4 = sub_1BA2C1754();
  result = swift_release();
  if (v4)
    return v4;
  __break(1u);
  return result;
}

_UNKNOWN **sub_1BA280094()
{
  return &protocol witness table for ArticleBannerAdProvider;
}

uint64_t method lookup function for ArticleBannerAdProviderFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BA2800AC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

unint64_t destroy for AdPolicyResult(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for AdPolicyResult(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
    v4 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v4;
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for AdPolicyResult(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v4 = *((_QWORD *)a2 + 1);
  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      *(_OWORD *)(a1 + 16) = a2[1];
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      *(_BYTE *)(a1 + 33) = *((_BYTE *)a2 + 33);
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
      *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    v7 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v7;
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  *(_BYTE *)(a1 + 33) = *((_BYTE *)a2 + 33);
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AdPolicyResult(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AdPolicyResult(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AdPolicyResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

double sub_1BA28044C(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 56) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for AdPolicyResult()
{
  return &type metadata for AdPolicyResult;
}

uint64_t NativeAdPlacement.placementIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NativeAdPlacement.desiredPlacement.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NativeAdPlacement() + 20);
  v4 = sub_1BA2C1AC0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NativeAdPlacement.insertionType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NativeAdPlacement();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t NativeAdPlacement.init(placementIdentifier:insertionType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, _QWORD *a4@<X8>)
{
  char v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v7 = *a3;
  v8 = type metadata accessor for NativeAdPlacement();
  v9 = (_QWORD *)((char *)a4 + *(int *)(v8 + 20));
  *v9 = 1;
  v10 = *MEMORY[0x1E0D81E90];
  v11 = sub_1BA2C1AC0();
  result = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  *a4 = a1;
  a4[1] = a2;
  *((_BYTE *)a4 + *(int *)(v8 + 24)) = v7;
  return result;
}

uint64_t getEnumTagSinglePayload for NativeAdPlacement()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA2805D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BA2C1AC0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for NativeAdPlacement()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA28065C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BA2C1AC0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BA2806D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BA28073C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1BA280798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BA2807FC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BA280878 + 4 * byte_1BA2C8888[v10]))();
  }
}

void sub_1BA2808FC(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1BA2809F0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1BA280A64);
}

void sub_1BA2809F8(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1BA280A00);
  JUMPOUT(0x1BA280A64);
}

void sub_1BA280A40()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BA280A64);
}

void sub_1BA280A48()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BA280A64);
}

uint64_t sub_1BA280A50(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x1BA280A64);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x1BA280A60);
    JUMPOUT(0x1BA280A5CLL);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t sub_1BA280A7C()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugInterstitialAdProvider()
{
  return objc_opt_self();
}

uint64_t sub_1BA280AD0()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 16) = 0;
  if (qword_1ED5B2D30 != -1)
    swift_once();
  sub_1BA23A368();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)(v0 + 24) = sub_1BA2C158C();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)(v0 + 32) = sub_1BA2C158C();
  sub_1BA281150();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)(v0 + 40) = sub_1BA2C158C();
  return v0;
}

uint64_t sub_1BA280BE8(void (*a1)(void *, _UNKNOWN **, uint64_t), uint64_t a2)
{
  return sub_1BA281028(a1, a2);
}

void sub_1BA280C08(void (*a1)(void *, _UNKNOWN **, uint64_t), float a2)
{
  float v4;
  id v5;
  char *v6;
  void *v7;
  unsigned __int8 v8[2];

  sub_1BA23BB54(0.0, 1.0);
  if (v4 >= a2)
  {
    sub_1BA28110C();
    v7 = (void *)swift_allocError();
    a1(v7, 0, 1);

  }
  else
  {
    swift_retain();
    sub_1BA2C1574();
    swift_release();
    v8[0] = v8[1];
    v5 = objc_allocWithZone((Class)type metadata accessor for DebugInterstitialAdView());
    v6 = sub_1BA237D14(v8);
    a1(v6, &off_1E71F5680, 0);

  }
}

uint64_t sub_1BA280D00(void (*a1)(void *, _UNKNOWN **, uint64_t), uint64_t a2, float a3, float a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[6];

  v5 = v4;
  v10 = sub_1BA2C2030();
  v32 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BA2C2060();
  v30 = *(_QWORD *)(v13 - 8);
  v31 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1BA2C2078();
  v16 = *(_QWORD *)(v29 - 8);
  v17 = MEMORY[0x1E0C80A78](v29);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v27 - v20;
  v22 = swift_allocObject();
  *(float *)(v22 + 16) = a4;
  *(_QWORD *)(v22 + 24) = a1;
  *(_QWORD *)(v22 + 32) = a2;
  *(_QWORD *)(v22 + 40) = v5;
  if (a3 <= 0.0)
  {
    sub_1BA21D258();
    swift_retain();
    swift_retain();
    v24 = (void *)sub_1BA2C23D8();
    sub_1BA2C206C();
    MEMORY[0x1BCCD8848](v19, a3);
    v28 = *(void (**)(char *, uint64_t))(v16 + 8);
    v25 = v29;
    v28(v19, v29);
    aBlock[4] = sub_1BA2810FC;
    aBlock[5] = v22;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BA223CC0;
    aBlock[3] = &block_descriptor_8;
    v26 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    sub_1BA2C2048();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_1BA221230((unint64_t *)&qword_1ED5B2B40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BA224004();
    sub_1BA221230((unint64_t *)&qword_1ED5B2B68, (uint64_t (*)(uint64_t))sub_1BA224004, MEMORY[0x1E0DEAF38]);
    sub_1BA2C2480();
    MEMORY[0x1BCCD8B78](v21, v15, v12, v26);
    _Block_release(v26);
    swift_release();

    (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v10);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v31);
    return ((uint64_t (*)(char *, uint64_t))v28)(v21, v25);
  }
  else
  {
    swift_retain();
    swift_retain();
    sub_1BA280C08(a1, a4);
    return swift_release();
  }
}

uint64_t sub_1BA281028(void (*a1)(void *, _UNKNOWN **, uint64_t), uint64_t a2)
{
  uint64_t result;
  float v5;
  float v6;

  swift_retain();
  sub_1BA2C1574();
  swift_release();
  swift_retain();
  sub_1BA2C1574();
  swift_release();
  sub_1BA280D00(a1, a2, v6, v5);
  type metadata accessor for AdPendingLoadToken();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1BA2810D0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BA2810FC()
{
  uint64_t v0;

  sub_1BA280C08(*(void (**)(void *, _UNKNOWN **, uint64_t))(v0 + 24), *(float *)(v0 + 16));
}

unint64_t sub_1BA28110C()
{
  unint64_t result;

  result = qword_1EF27F6F0;
  if (!qword_1EF27F6F0)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C89E4, &type metadata for DebugInterstitialAdProvider.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF27F6F0);
  }
  return result;
}

void sub_1BA281150()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED5B35B0)
  {
    sub_1BA2811A8();
    v0 = sub_1BA2C1580();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED5B35B0);
  }
}

unint64_t sub_1BA2811A8()
{
  unint64_t result;

  result = qword_1ED5B35E8;
  if (!qword_1ED5B35E8)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for DebugAdCollapseBehavior, &type metadata for DebugAdCollapseBehavior);
    atomic_store(result, (unint64_t *)&qword_1ED5B35E8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DebugInterstitialAdProvider.Errors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BA28122C + 4 * byte_1BA2C88E0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BA28124C + 4 * byte_1BA2C88E5[v4]))();
}

_BYTE *sub_1BA28122C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BA28124C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA281254(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA28125C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA281264(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA28126C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DebugInterstitialAdProvider.Errors()
{
  return &type metadata for DebugInterstitialAdProvider.Errors;
}

unint64_t sub_1BA28128C()
{
  unint64_t result;

  result = qword_1EF27F6F8;
  if (!qword_1EF27F6F8)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C89BC, &type metadata for DebugInterstitialAdProvider.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF27F6F8);
  }
  return result;
}

char *FeedBannerAdProvider.adView(for:placementIdentifier:)(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  _QWORD *v6;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  float v20;
  float v21;
  id v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void *v27;
  id v28;
  id v29;
  uint64_t v31;
  float v32;
  float v33;

  v13 = sub_1BA2C1460();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v6[7] + 16) == 1)
  {
    sub_1BA2C1454();
    v17 = sub_1BA2C143C();
    v19 = v18;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    swift_retain();
    sub_1BA2C1574();
    swift_release();
    v20 = v33;
    swift_retain();
    sub_1BA2C1574();
    swift_release();
    v21 = v32;
    swift_retain();
    sub_1BA2C1574();
    swift_release();
    BYTE6(v31) = HIBYTE(v31);
    v22 = objc_allocWithZone((Class)type metadata accessor for DebugBannerAdView());
    return sub_1BA23AC38(v17, v19, (char *)&v31 + 6, v20, v21, a5, a6);
  }
  else
  {
    v24 = v6[5];
    v25 = v6[6];
    __swift_project_boxed_opaque_existential_1(v6 + 2, v24);
    v26 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8);
    swift_bridgeObjectRetain();
    v27 = (void *)v26(v24, v25);
    v28 = objc_msgSend(v27, sel_promotedContentViewOfType_size_startsCollapsed_position_, 0, 1, a5, a6, a3, a4, a5, a6);

    v29 = objc_allocWithZone((Class)type metadata accessor for BannerAdMetricsView());
    v23 = sub_1BA27B468(a1, a2, v28);

  }
  return v23;
}

uint64_t FeedBannerAdProvider.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return v0;
}

uint64_t FeedBannerAdProvider.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

char *sub_1BA281534(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  return FeedBannerAdProvider.adView(for:placementIdentifier:)(a1, a2, a3, a4, a5, a6);
}

uint64_t method lookup function for FeedBannerAdProvider()
{
  return swift_lookUpClassMethod();
}

double AdLayout.position.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double AdLayout.size.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

NewsAds::AdLayout __swiftcall AdLayout.init(position:size:)(CGPoint position, CGSize size)
{
  CGFloat *v2;
  NewsAds::AdLayout result;

  *v2 = position.x;
  v2[1] = position.y;
  v2[2] = size.width;
  v2[3] = size.height;
  result.size.height = size.height;
  result.size.width = size.width;
  result.position.y = position.y;
  result.position.x = position.x;
  return result;
}

uint64_t sub_1BA28157C()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1BA2C2150();

  }
  sub_1BA21D550();
  result = sub_1BA2C2450();
  qword_1ED5B0E38 = result;
  return result;
}

uint64_t sub_1BA28164C()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1BA2C2150();

  }
  sub_1BA21D550();
  result = sub_1BA2C2450();
  qword_1ED5B0E40 = result;
  return result;
}

uint64_t DebugLifecycleMetricsHelper.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DebugLifecycleMetricsHelper.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugLifecycleMetricsHelper()
{
  return objc_opt_self();
}

uint64_t method lookup function for DebugLifecycleMetricsHelper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DebugLifecycleMetricsHelper.missedOpportunity()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 80))();
}

uint64_t dispatch thunk of DebugLifecycleMetricsHelper.discarded()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of DebugLifecycleMetricsHelper.contentLoadFailure()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of DebugLifecycleMetricsHelper.trackImpression(startDate:endDate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of DebugLifecycleMetricsHelper.manuallyDiscard(reason:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t AdSegments.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t AdSegments.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t AdSegment.key.getter()
{
  uint64_t v0;

  v0 = sub_1BA2819B8();
  swift_bridgeObjectRetain();
  return v0;
}

void AdSegment.scope.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

uint64_t AdSegment.__allocating_init(key:scope:)(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t result;
  char v7;

  result = swift_allocObject();
  v7 = *a3;
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_BYTE *)(result + 32) = v7;
  return result;
}

uint64_t AdSegment.init(key:scope:)(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v3;
  char v4;

  v4 = *a3;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  *(_BYTE *)(v3 + 32) = v4;
  return v3;
}

uint64_t AdSegment.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AdSegment.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA281960()
{
  uint64_t v0;

  v0 = sub_1BA2819B8();
  swift_bridgeObjectRetain();
  return v0;
}

void sub_1BA281998(_BYTE *a1@<X8>)
{
  AdSegment.scope.getter(a1);
}

uint64_t sub_1BA2819B8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t type metadata accessor for AdSegments()
{
  return objc_opt_self();
}

uint64_t method lookup function for AdSegments()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AdSegmentType.key.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AdSegmentType.scope.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1BA2819FC()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AdSegment(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AdSegment);
}

uint64_t method lookup function for AdSegment()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AdSegment.__allocating_init(key:scope:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t static Ads.native.getter()
{
  sub_1BA234FC8();
  return swift_initStaticObject();
}

uint64_t static Ads.sponsorship.getter()
{
  sub_1BA2352D4();
  return swift_initStaticObject();
}

uint64_t static Ads.Article.banner.getter()
{
  sub_1BA235238();
  return swift_initStaticObject();
}

uint64_t static Ads.Article.preroll.getter()
{
  sub_1BA23519C();
  return swift_initStaticObject();
}

uint64_t static Ads.Feed.preroll.getter()
{
  sub_1BA235370();
  return swift_initStaticObject();
}

uint64_t static Ads.Interstitial.article.getter()
{
  sub_1BA235100();
  return swift_initStaticObject();
}

uint64_t static Ads.Interstitial.preview.getter()
{
  sub_1BA235064();
  return swift_initStaticObject();
}

ValueMetadata *type metadata accessor for Ads.Article()
{
  return &type metadata for Ads.Article;
}

ValueMetadata *type metadata accessor for Ads.Feed()
{
  return &type metadata for Ads.Feed;
}

ValueMetadata *type metadata accessor for Ads.Interstitial()
{
  return &type metadata for Ads.Interstitial;
}

void VisibleAdPolicy.validatePlacement(_:in:)(double *a1@<X0>, double *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  CGPoint v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;

  v5 = *a1;
  v4 = *((_QWORD *)a1 + 1);
  v6 = a1[2];
  v7 = a1[3];
  v16.origin.x = UIEdgeInsetsInsetRect(a2[3], a2[4], a2[1], a2[2], a2[11], a2[12]);
  x = v16.origin.x;
  y = v16.origin.y;
  width = v16.size.width;
  height = v16.size.height;
  v15.x = v6;
  v15.y = v7;
  if (CGRectContainsPoint(v16, v15))
    goto LABEL_4;
  v17.origin.x = x;
  v17.origin.y = y;
  v17.size.width = width;
  v17.size.height = height;
  if (CGRectGetMinY(v17) == v7
    || (v18.origin.x = x, v18.origin.y = y, v18.size.width = width, v18.size.height = height, CGRectGetMaxY(v18) == v7))
  {
LABEL_4:
    sub_1BA26EE3C();
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1BA2C37D0;
    type metadata accessor for CGRect(0);
    swift_bridgeObjectRetain();
    v13 = sub_1BA2C218C();
    *(_QWORD *)(v12 + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v12 + 48) = v13;
    *(_QWORD *)(v12 + 56) = v14;
    *(_QWORD *)(v12 + 32) = 0x74726F7077656956;
    *(_QWORD *)(v12 + 40) = 0xE800000000000000;
    *(double *)a3 = v5;
    *(_QWORD *)(a3 + 8) = v4;
    *(CGFloat *)(a3 + 16) = v6;
    *(double *)(a3 + 24) = v7;
    *(_OWORD *)(a3 + 32) = xmmword_1BA2C8BF0;
    *(_QWORD *)(a3 + 48) = 0x80000001BA2D0600;
    *(_QWORD *)(a3 + 56) = v12;
  }
  else
  {
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
}

double UIEdgeInsetsInsetRect(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

void sub_1BA281CFC(double *a1@<X0>, double *a2@<X1>, uint64_t a3@<X8>)
{
  VisibleAdPolicy.validatePlacement(_:in:)(a1, a2, a3);
}

uint64_t dispatch thunk of BannerAdProviding.bannerAd.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BannerAdProviding.with(bannerAd:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of AdPlacementType.placementIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AdPlacementType.desiredPlacement.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AdPlacementType.insertionType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t PrerollAdProviderFactory.createAdProvider<A, B>(for:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BA281DD0(a2);
}

uint64_t PrerollAdProviderFactory.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t PrerollAdProviderFactory.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1BA281D94@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1BA281DD0(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1BA281DD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  __int128 v6[2];

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  type metadata accessor for PrerollAdProvider();
  sub_1BA22068C(a1, (uint64_t)v6);
  v3 = swift_allocObject();
  sub_1BA21D3D4(v6, v3 + 16);
  v4 = sub_1BA2C1754();
  result = swift_release();
  if (v4)
    return v4;
  __break(1u);
  return result;
}

_UNKNOWN **sub_1BA281E8C()
{
  return &protocol witness table for PrerollAdProvider;
}

uint64_t method lookup function for PrerollAdProviderFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BA281EA4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

void ArticleBannerAdContext.appData.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t ArticleBannerAdContext.userData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_bridgeObjectRetain();
}

void ArticleBannerAdContext.creativeData.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t ArticleBannerAdContext.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_BYTE *)(v1 + 40);
  v4 = *(_BYTE *)(v1 + 41);
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 56);
  v7 = *(_QWORD *)(v1 + 64);
  v8 = *(_QWORD *)(v1 + 72);
  v10 = *(_QWORD *)(v1 + 80);
  v9 = *(_QWORD *)(v1 + 88);
  v11 = *(_QWORD *)(v1 + 96);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 17) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ArticleBannerAdContext.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(v1 + 104);
  v2 = *(_QWORD *)(v1 + 112);
  v4 = *(_BYTE *)(v1 + 120);
  v5 = *(_QWORD *)(v1 + 128);
  v6 = *(_QWORD *)(v1 + 136);
  v7 = *(_QWORD *)(v1 + 144);
  v8 = *(_QWORD *)(v1 + 152);
  v9 = *(_QWORD *)(v1 + 160);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ArticleBannerAdContext.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int16 v3;

  v2 = *(_QWORD *)(v1 + 176);
  v3 = *(_WORD *)(v1 + 184);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 168);
  *(_QWORD *)(a1 + 8) = v2;
  *(_WORD *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t ArticleBannerAdContext.sectionData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 200);
  *a1 = *(_QWORD *)(v1 + 192);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t ArticleBannerAdContext.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = v1[26];
  v3 = v1[27];
  v4 = v1[28];
  v5 = v1[29];
  v6 = v1[30];
  v7 = v1[31];
  v8 = v1[32];
  v9 = v1[33];
  v10 = v1[34];
  v11 = v1[35];
  v12 = v1[36];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  return sub_1BA282048(v2, v3);
}

uint64_t sub_1BA282048(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t ArticleBannerAdContext.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v1[37];
  v3 = v1[38];
  v4 = v1[39];
  v5 = v1[40];
  v6 = v1[41];
  v7 = v1[42];
  v8 = v1[43];
  v9 = v1[44];
  v10 = v1[45];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  return sub_1BA2820FC(v2, v3);
}

uint64_t sub_1BA2820FC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void ArticleBannerAdContext.referralData.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 368);
}

uint64_t ArticleBannerAdContext.anfDocumentData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 376);
  return swift_bridgeObjectRetain();
}

uint64_t ArticleBannerAdContext.anfComponentData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 384);
  return swift_bridgeObjectRetain();
}

uint64_t ArticleBannerAdContext.campaignData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 400);
  *a1 = *(_QWORD *)(v1 + 392);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

_QWORD *ArticleBannerAdContext.init(provider:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int16 v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD __src[51];
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  _BYTE v100[7];
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __int16 v108;
  int v109;
  __int16 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  _BYTE v134[7];
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _BYTE v141[11];
  __int16 v142;
  _BYTE v143[11];
  __int16 v144;
  _BYTE v145[7];
  _DWORD v146[3];
  uint64_t v147;

  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  AdContextDataProviding.data<A>(for:)((uint64_t)&type metadata for AppAdData, v5, (uint64_t)&type metadata for AppAdData, v6);
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return (_QWORD *)v63;
  }
  else
  {
    v7 = a1[3];
    v8 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v7);
    AdContextDataProviding.data<A>(for:)((uint64_t)&type metadata for UserAdData, v7, (uint64_t)&type metadata for UserAdData, v8);
    v9 = a1[3];
    v10 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v9);
    swift_bridgeObjectRetain();
    AdContextDataProviding.data<A>(for:)((uint64_t)&type metadata for CreativeAdData, v9, (uint64_t)&type metadata for CreativeAdData, v10);
    v58 = v84;
    v11 = a1[3];
    v12 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v11);
    AdContextDataProviding.data<A>(for:)((uint64_t)&type metadata for ArticleAdData, v11, (uint64_t)&type metadata for ArticleAdData, v12);
    v44 = v84;
    v45 = v84;
    v43 = v84;
    v41 = BYTE1(v86);
    v42 = v86;
    v57 = v88;
    v39 = v92;
    v40 = v87;
    v13 = a1[3];
    v147 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v13);
    swift_bridgeObjectRetain();
    v56 = v85;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    AdContextDataProviding.data<A>(for:)((uint64_t)&type metadata for ChannelAdData, v13, (uint64_t)&type metadata for ChannelAdData, v147);
    v53 = v93;
    v54 = v90;
    v55 = v89;
    v52 = v91;
    v38 = v84;
    v37 = v86;
    v35 = v89;
    v36 = v87;
    v14 = a1[3];
    v15 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v14);
    v51 = v85;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    AdContextDataProviding.dataIfPresent<A>(for:)((uint64_t)&type metadata for IssueAdData, v14, (uint64_t)&type metadata for IssueAdData, v15);
    v49 = v88;
    v50 = v90;
    v48 = v91;
    v16 = a1[3];
    v17 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v16);
    swift_bridgeObjectRetain();
    AdContextDataProviding.dataIfPresent<A>(for:)((uint64_t)&type metadata for SectionAdData, v16, (uint64_t)&type metadata for SectionAdData, v17);
    v47 = v85;
    v33 = v84;
    v34 = v86;
    v18 = a1[3];
    v19 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v18);
    swift_bridgeObjectRetain();
    AdContextDataProviding.dataIfPresent<A>(for:)((uint64_t)&type metadata for FeedAdData, v18, (uint64_t)&type metadata for FeedAdData, v19);
    v147 = v85;
    v32 = v84;
    v81 = v84;
    v82 = v85;
    v77 = v86;
    v78 = v88;
    v79 = v89;
    v80 = v91;
    v20 = a1[3];
    v70 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v20);
    v75 = v92;
    v76 = v93;
    v73 = v87;
    v74 = v90;
    sub_1BA282048(v84, v85);
    AdContextDataProviding.dataIfPresent<A>(for:)((uint64_t)&type metadata for FeedGroupAdData, v20, (uint64_t)&type metadata for FeedGroupAdData, v70);
    v72 = v94;
    v69 = v86;
    v71 = v88;
    v67 = v90;
    v68 = v91;
    v21 = a1[3];
    v59 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v21);
    v64 = v84;
    v65 = v85;
    v66 = v87;
    v62 = v89;
    sub_1BA2820FC(v84, v85);
    AdContextDataProviding.dataIfPresent<A>(for:)((uint64_t)&type metadata for ReferralAdData, v21, (uint64_t)&type metadata for ReferralAdData, v59);
    v61 = v92;
    v22 = v84;
    v23 = a1[3];
    v24 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v23);
    AdContextDataProviding.dataIfPresent<A>(for:)((uint64_t)&type metadata for ANFDocumentAdData, v23, (uint64_t)&type metadata for ANFDocumentAdData, v24);
    v25 = a1[3];
    v26 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v25);
    v60 = v84;
    swift_bridgeObjectRetain();
    AdContextDataProviding.dataIfPresent<A>(for:)((uint64_t)&type metadata for ANFComponentAdData, v25, (uint64_t)&type metadata for ANFComponentAdData, v26);
    v27 = a1[3];
    v28 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v27);
    v46 = v84;
    swift_bridgeObjectRetain();
    AdContextDataProviding.dataIfPresent<A>(for:)((uint64_t)&type metadata for CampaignAdData, v27, (uint64_t)&type metadata for CampaignAdData, v28);
    v30 = v140;
    v31 = v139;
    LOBYTE(__src[0]) = v84;
    __src[1] = v84;
    LOBYTE(__src[2]) = v84;
    __src[3] = v84;
    __src[4] = v85;
    LOWORD(__src[5]) = v86;
    __src[6] = v87;
    __src[7] = v88;
    __src[8] = v89;
    __src[9] = v90;
    __src[10] = v91;
    __src[11] = v92;
    __src[12] = v93;
    __src[13] = v84;
    __src[14] = v85;
    LOBYTE(__src[15]) = v86;
    __src[16] = v87;
    __src[17] = v88;
    __src[18] = v89;
    __src[19] = v90;
    __src[20] = v91;
    __src[21] = v84;
    __src[22] = v85;
    LOWORD(__src[23]) = v86;
    __src[24] = v84;
    __src[25] = v85;
    __src[26] = v84;
    __src[27] = v85;
    __src[28] = v86;
    __src[29] = v87;
    __src[30] = v88;
    __src[31] = v89;
    __src[32] = v90;
    __src[33] = v91;
    __src[34] = v92;
    __src[35] = v93;
    __src[36] = v94;
    __src[37] = v84;
    __src[38] = v85;
    __src[39] = v86;
    __src[40] = v87;
    __src[41] = v88;
    __src[42] = v89;
    __src[43] = v90;
    __src[44] = v91;
    __src[45] = v92;
    LOBYTE(__src[46]) = v84;
    __src[47] = v84;
    __src[48] = v84;
    __src[49] = v139;
    __src[50] = v140;
    sub_1BA2832F4(__src);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA283218(v64, v65);
    sub_1BA283288(v81, v82);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    memcpy(a2, __src, 0x198uLL);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    LOBYTE(v84) = v45;
    v85 = v58;
    LOBYTE(v86) = v44;
    v87 = v43;
    v88 = v56;
    LOBYTE(v89) = v42;
    BYTE1(v89) = v41;
    v90 = v40;
    v91 = v57;
    v92 = v55;
    v93 = v54;
    v94 = v52;
    v95 = v39;
    v96 = v53;
    v97 = v38;
    v98 = v51;
    v99 = v37;
    v101 = v36;
    v102 = v49;
    v103 = v35;
    v104 = v50;
    v105 = v48;
    v106 = v33;
    *(_DWORD *)((char *)&v84 + 1) = v146[0];
    HIDWORD(v84) = *(_DWORD *)((char *)v146 + 3);
    *(_DWORD *)((char *)&v86 + 1) = *(_DWORD *)v145;
    HIDWORD(v86) = *(_DWORD *)&v145[3];
    HIWORD(v89) = v144;
    *(_DWORD *)((char *)&v89 + 2) = *(_DWORD *)&v143[7];
    *(_DWORD *)v100 = *(_DWORD *)v143;
    *(_DWORD *)&v100[3] = *(_DWORD *)&v143[3];
    v107 = v47;
    v108 = v34;
    v110 = v142;
    v109 = *(_DWORD *)&v141[7];
    v111 = v32;
    v112 = v147;
    v113 = v81;
    v114 = v82;
    v115 = v77;
    v116 = v73;
    v117 = v78;
    v118 = v79;
    v119 = v74;
    v120 = v80;
    v121 = v75;
    v122 = v76;
    v123 = v72;
    v124 = v64;
    v125 = v65;
    v126 = v69;
    v127 = v66;
    v128 = v71;
    v129 = v62;
    v130 = v67;
    v131 = v68;
    v132 = v61;
    v133 = v22;
    *(_DWORD *)v134 = *(_DWORD *)v141;
    *(_DWORD *)&v134[3] = *(_DWORD *)&v141[3];
    v135 = v60;
    v136 = v46;
    v137 = v31;
    v138 = v30;
    return sub_1BA2834C4(&v84);
  }
}

uint64_t sub_1BA283218(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BA283288(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_1BA2832F4(_QWORD *a1)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a1[27];
  v4 = a1[26];
  v5 = a1[38];
  v6 = a1[37];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA282048(v4, v3);
  sub_1BA2820FC(v6, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1BA2834C4(_QWORD *a1)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a1[27];
  v4 = a1[26];
  v5 = a1[38];
  v6 = a1[37];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA283288(v4, v3);
  sub_1BA283218(v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BA283678(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA2836AC + 4 * byte_1BA2C8CA0[a1]))(0x61746144707061, 0xE700000000000000);
}

uint64_t sub_1BA2836AC()
{
  return 0x6174614472657375;
}

uint64_t sub_1BA28375C()
{
  return 0x6C61727265666572;
}

uint64_t sub_1BA283770()
{
  return 0x6D75636F44666E61;
}

unint64_t sub_1BA283794()
{
  return 0xD000000000000010;
}

uint64_t sub_1BA2837D0()
{
  unsigned __int8 *v0;

  return sub_1BA283678(*v0);
}

uint64_t sub_1BA2837D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA286AB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BA2837FC()
{
  sub_1BA284018();
  return sub_1BA2C275C();
}

uint64_t sub_1BA283824()
{
  sub_1BA284018();
  return sub_1BA2C2768();
}

uint64_t ArticleBannerAdContext.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  char v75;

  sub_1BA2852C4(0, &qword_1EF27F7E0, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v18 - v6;
  v8 = *v1;
  v9 = *((_QWORD *)v1 + 1);
  v74 = v1[16];
  v62 = *((_QWORD *)v1 + 3);
  v63 = v9;
  v61 = *((_QWORD *)v1 + 4);
  v53 = v1[40];
  v57 = v1[41];
  v56 = *((_QWORD *)v1 + 6);
  v10 = *(_OWORD *)(v1 + 56);
  v58 = *(_OWORD *)(v1 + 72);
  v59 = v10;
  v55 = *((_QWORD *)v1 + 11);
  v54 = *((_QWORD *)v1 + 12);
  v46 = *((_QWORD *)v1 + 13);
  v47 = *((_QWORD *)v1 + 14);
  v48 = v1[120];
  v51 = *((_QWORD *)v1 + 16);
  v50 = *((_QWORD *)v1 + 17);
  v49 = *((_QWORD *)v1 + 18);
  v52 = *(_OWORD *)(v1 + 152);
  v43 = *((_QWORD *)v1 + 21);
  v44 = *((_QWORD *)v1 + 22);
  v45 = *((unsigned __int16 *)v1 + 92);
  v41 = *((_QWORD *)v1 + 24);
  v42 = *((_QWORD *)v1 + 25);
  v30 = *((_QWORD *)v1 + 26);
  v31 = *((_QWORD *)v1 + 27);
  v40 = *((_QWORD *)v1 + 28);
  v39 = *((_QWORD *)v1 + 29);
  v38 = *((_QWORD *)v1 + 30);
  v37 = *((_QWORD *)v1 + 31);
  v36 = *((_QWORD *)v1 + 32);
  v35 = *((_QWORD *)v1 + 33);
  v34 = *((_QWORD *)v1 + 34);
  v33 = *((_QWORD *)v1 + 35);
  v32 = *((_QWORD *)v1 + 36);
  v21 = *((_QWORD *)v1 + 37);
  v22 = *((_QWORD *)v1 + 38);
  v29 = *((_QWORD *)v1 + 39);
  v28 = *((_QWORD *)v1 + 40);
  v27 = *((_QWORD *)v1 + 41);
  v26 = *((_QWORD *)v1 + 42);
  v25 = *((_QWORD *)v1 + 43);
  v24 = *((_QWORD *)v1 + 44);
  v23 = *((_QWORD *)v1 + 45);
  v20 = v1[368];
  v19 = *((_QWORD *)v1 + 47);
  v18 = *((_QWORD *)v1 + 48);
  v11 = *((_QWORD *)v1 + 50);
  v60 = *((_QWORD *)v1 + 49);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA284018();
  sub_1BA2C2750();
  LOBYTE(v65) = v8;
  v75 = 0;
  sub_1BA234CD4();
  v12 = v64;
  sub_1BA2C2684();
  if (v12)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = v74;
  v15 = v61;
  v14 = v62;
  v64 = v11;
  v16 = v60;
  v65 = v63;
  v75 = 1;
  sub_1BA236AC4();
  sub_1BA2C2684();
  LOBYTE(v65) = v13;
  v75 = 2;
  sub_1BA23679C();
  sub_1BA2C2684();
  v63 = v5;
  v65 = v14;
  v66 = v15;
  LOBYTE(v67) = v53;
  BYTE1(v67) = v57;
  v68 = v56;
  v69 = v59;
  v70 = v58;
  v71 = v55;
  v72 = v54;
  v75 = 3;
  sub_1BA240AE4();
  sub_1BA2C2684();
  v65 = v46;
  v66 = v47;
  LOBYTE(v67) = v48;
  v68 = v51;
  *(_QWORD *)&v69 = v50;
  *((_QWORD *)&v69 + 1) = v49;
  v70 = v52;
  v75 = 4;
  sub_1BA2461F8();
  sub_1BA2C2684();
  v65 = v43;
  v66 = v44;
  LOWORD(v67) = v45;
  v75 = 5;
  sub_1BA24623C();
  sub_1BA2C2648();
  v65 = v41;
  v66 = v42;
  v75 = 6;
  sub_1BA246280();
  sub_1BA2C2648();
  v65 = v30;
  v66 = v31;
  v67 = v40;
  v68 = v39;
  *(_QWORD *)&v69 = v38;
  *((_QWORD *)&v69 + 1) = v37;
  *(_QWORD *)&v70 = v36;
  *((_QWORD *)&v70 + 1) = v35;
  v71 = v34;
  v72 = v33;
  v73 = v32;
  v75 = 7;
  sub_1BA236B90();
  sub_1BA2C2648();
  v65 = v21;
  v66 = v22;
  v67 = v29;
  v68 = v28;
  *(_QWORD *)&v69 = v27;
  *((_QWORD *)&v69 + 1) = v26;
  *(_QWORD *)&v70 = v25;
  *((_QWORD *)&v70 + 1) = v24;
  v71 = v23;
  v75 = 8;
  sub_1BA23667C();
  sub_1BA2C2648();
  LOBYTE(v65) = v20;
  v75 = 9;
  sub_1BA23D154();
  sub_1BA2C2648();
  v65 = v19;
  v75 = 10;
  sub_1BA259544();
  sub_1BA2C2648();
  v65 = v18;
  v75 = 11;
  sub_1BA28405C();
  sub_1BA2C2648();
  v65 = v16;
  v66 = v64;
  v75 = 12;
  sub_1BA2840A0();
  sub_1BA2C2648();
  return (*(uint64_t (**)(char *, _QWORD))(v5 + 8))(v7, 0);
}

unint64_t sub_1BA284018()
{
  unint64_t result;

  result = qword_1EF27F7E8;
  if (!qword_1EF27F7E8)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C8E6C, &type metadata for ArticleBannerAdContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F7E8);
  }
  return result;
}

unint64_t sub_1BA28405C()
{
  unint64_t result;

  result = qword_1EF27F7F0;
  if (!qword_1EF27F7F0)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for ANFComponentAdData, &type metadata for ANFComponentAdData);
    atomic_store(result, (unint64_t *)&qword_1EF27F7F0);
  }
  return result;
}

unint64_t sub_1BA2840A0()
{
  unint64_t result;

  result = qword_1EF27F7F8;
  if (!qword_1EF27F7F8)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for CampaignAdData, &type metadata for CampaignAdData);
    atomic_store(result, (unint64_t *)&qword_1EF27F7F8);
  }
  return result;
}

_QWORD *ArticleBannerAdContext.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  _QWORD v84[51];
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  _BYTE v101[7];
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __int16 v109;
  int v110;
  __int16 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  _BYTE v135[7];
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  uint64_t v142;
  _BYTE v143[11];
  __int16 v144;
  _BYTE v145[11];
  __int16 v146;
  _BYTE v147[7];
  _DWORD v148[3];
  _QWORD *v149;

  sub_1BA2852C4(0, &qword_1EF27F800, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v33 - v8;
  v10 = a1[3];
  v149 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1BA284018();
  sub_1BA2C2744();
  if (v2)
  {
    v83 = 0;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v149);
    v82 = v6;
    result = v65;
    if (v83)
      return (_QWORD *)swift_bridgeObjectRelease();
  }
  else
  {
    v11 = a2;
    LOBYTE(v84[0]) = 0;
    sub_1BA234C90();
    sub_1BA2C2630();
    v12 = v85;
    LOBYTE(v84[0]) = 1;
    sub_1BA236A80();
    sub_1BA2C2630();
    v13 = (uint64_t)v85;
    LOBYTE(v84[0]) = 2;
    sub_1BA236758();
    swift_bridgeObjectRetain();
    sub_1BA2C2630();
    v60 = v13;
    v83 = v12;
    v14 = v85;
    LOBYTE(v84[0]) = 3;
    sub_1BA240AA0();
    sub_1BA2C2630();
    v47 = v14;
    v46 = (uint64_t)v85;
    v15 = v86;
    v44 = BYTE1(v87);
    v45 = v87;
    v16 = v89;
    v57 = v91;
    v17 = v92;
    v42 = v93;
    v43 = v88;
    v58 = v94;
    v59 = v90;
    LOBYTE(v84[0]) = 4;
    sub_1BA24739C();
    v55 = v15;
    swift_bridgeObjectRetain();
    v56 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v54 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA2C2630();
    v41 = (uint64_t)v85;
    v18 = v86;
    v40 = v87;
    v19 = v89;
    v38 = v90;
    v39 = v88;
    v53 = v91;
    v20 = v92;
    LOBYTE(v84[0]) = 5;
    sub_1BA2473E0();
    v51 = v18;
    swift_bridgeObjectRetain();
    v52 = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA2C25F4();
    v82 = v20;
    v37 = (uint64_t)v85;
    v21 = v86;
    LODWORD(v18) = (unsigned __int16)v87;
    LOBYTE(v84[0]) = 6;
    sub_1BA247424();
    swift_bridgeObjectRetain();
    sub_1BA2C25F4();
    v50 = v21;
    v36 = v18;
    v35 = (uint64_t)v85;
    v22 = v86;
    LOBYTE(v84[0]) = 7;
    sub_1BA236B4C();
    swift_bridgeObjectRetain();
    sub_1BA2C25F4();
    v49 = v22;
    v23 = (uint64_t)v85;
    v24 = v95;
    LOBYTE(v84[0]) = 8;
    v81 = v94;
    v80 = v93;
    v73 = v86;
    v74 = v87;
    v75 = v88;
    v76 = v89;
    v77 = v90;
    v78 = v91;
    v79 = v92;
    sub_1BA282048((uint64_t)v85, v86);
    sub_1BA236638();
    sub_1BA2C25F4();
    v71 = v23;
    v72 = v24;
    LOBYTE(v84[0]) = 9;
    v64 = v93;
    v65 = v85;
    v66 = v86;
    v67 = v87;
    v68 = v88;
    v69 = v89;
    v70 = v92;
    v62 = v90;
    v63 = v91;
    sub_1BA2820FC((uint64_t)v85, v86);
    sub_1BA23D654();
    sub_1BA2C25F4();
    LOBYTE(v24) = (_BYTE)v85;
    LOBYTE(v84[0]) = 10;
    sub_1BA259500();
    sub_1BA2C25F4();
    v25 = (uint64_t)v85;
    LOBYTE(v84[0]) = 11;
    sub_1BA285320();
    v61 = v25;
    swift_bridgeObjectRetain();
    sub_1BA2C25F4();
    v26 = (uint64_t)v85;
    v140 = 12;
    sub_1BA285364();
    v48 = v26;
    swift_bridgeObjectRetain();
    sub_1BA2C25F4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v33 = v142;
    v34 = v141;
    LOBYTE(v84[0]) = v83;
    v84[1] = v60;
    LOBYTE(v84[2]) = v47;
    v84[3] = v46;
    v84[4] = v55;
    LOBYTE(v84[5]) = v45;
    BYTE1(v84[5]) = v44;
    v84[6] = v43;
    v84[7] = v56;
    v84[8] = v59;
    v84[9] = v57;
    v84[10] = v54;
    v84[11] = v42;
    v84[12] = v58;
    v84[13] = v41;
    v84[14] = v51;
    LOBYTE(v84[15]) = v40;
    v84[16] = v39;
    v84[17] = v52;
    v84[18] = v38;
    v84[19] = v53;
    v84[20] = v82;
    v84[21] = v37;
    v84[22] = v50;
    LOWORD(v84[23]) = v36;
    v84[24] = v35;
    v84[25] = v49;
    v84[26] = v71;
    v84[27] = v73;
    v84[28] = v74;
    v84[29] = v75;
    v84[30] = v76;
    v84[31] = v77;
    v84[32] = v78;
    v84[33] = v79;
    v84[34] = v80;
    v84[35] = v81;
    v84[36] = v72;
    v84[37] = v65;
    v84[38] = v66;
    v84[39] = v67;
    v84[40] = v68;
    v84[41] = v69;
    v84[42] = v62;
    v84[43] = v63;
    v84[44] = v70;
    v84[45] = v64;
    LOBYTE(v84[46]) = v24;
    v84[47] = v61;
    v84[48] = v48;
    v84[49] = v141;
    v84[50] = v142;
    sub_1BA2832F4(v84);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA283218((uint64_t)v65, v66);
    sub_1BA283288(v71, v73);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v27 = v55;
    swift_bridgeObjectRelease();
    v28 = v82;
    swift_bridgeObjectRelease();
    v29 = v53;
    swift_bridgeObjectRelease();
    v30 = v52;
    swift_bridgeObjectRelease();
    v31 = v51;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    memcpy(v11, v84, 0x198uLL);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v149);
    LOBYTE(v85) = v83;
    v86 = v60;
    LOBYTE(v87) = v47;
    v88 = v46;
    v89 = v27;
    LOBYTE(v90) = v45;
    BYTE1(v90) = v44;
    v91 = v43;
    v92 = v56;
    v93 = v59;
    v94 = v57;
    v95 = v54;
    v96 = v42;
    v97 = v58;
    v98 = v41;
    v99 = v31;
    v100 = v40;
    v102 = v39;
    v103 = v30;
    v104 = v38;
    v105 = v29;
    v106 = v28;
    v107 = v37;
    *(_DWORD *)((char *)&v85 + 1) = v148[0];
    HIDWORD(v85) = *(_DWORD *)((char *)v148 + 3);
    *(_DWORD *)((char *)&v87 + 1) = *(_DWORD *)v147;
    HIDWORD(v87) = *(_DWORD *)&v147[3];
    HIWORD(v90) = v146;
    *(_DWORD *)((char *)&v90 + 2) = *(_DWORD *)&v145[7];
    *(_DWORD *)v101 = *(_DWORD *)v145;
    *(_DWORD *)&v101[3] = *(_DWORD *)&v145[3];
    v108 = v50;
    v109 = v36;
    v111 = v144;
    v110 = *(_DWORD *)&v143[7];
    v112 = v35;
    v113 = v49;
    v114 = v71;
    v115 = v73;
    v116 = v74;
    v117 = v75;
    v118 = v76;
    v119 = v77;
    v120 = v78;
    v121 = v79;
    v122 = v80;
    v123 = v81;
    v124 = v72;
    v125 = (uint64_t)v65;
    v126 = v66;
    v127 = v67;
    v128 = v68;
    v129 = v69;
    v130 = v62;
    v131 = v63;
    v132 = v70;
    v133 = v64;
    v134 = v24;
    *(_DWORD *)v135 = *(_DWORD *)v143;
    *(_DWORD *)&v135[3] = *(_DWORD *)&v143[3];
    v136 = v61;
    v137 = v48;
    v138 = v34;
    v139 = v33;
    return sub_1BA2834C4(&v85);
  }
  return result;
}

void sub_1BA2852C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA284018();
    v7 = a3(a1, &type metadata for ArticleBannerAdContext.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BA285320()
{
  unint64_t result;

  result = qword_1EF27F808;
  if (!qword_1EF27F808)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for ANFComponentAdData, &type metadata for ANFComponentAdData);
    atomic_store(result, (unint64_t *)&qword_1EF27F808);
  }
  return result;
}

unint64_t sub_1BA285364()
{
  unint64_t result;

  result = qword_1EF27F810;
  if (!qword_1EF27F810)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for CampaignAdData, &type metadata for CampaignAdData);
    atomic_store(result, (unint64_t *)&qword_1EF27F810);
  }
  return result;
}

_QWORD *sub_1BA2853A8@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return ArticleBannerAdContext.init(provider:)(a1, a2);
}

_QWORD *sub_1BA2853BC@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return ArticleBannerAdContext.init(from:)(a1, a2);
}

uint64_t sub_1BA2853D0(_QWORD *a1)
{
  return ArticleBannerAdContext.encode(to:)(a1);
}

void ArticleBannerAdContext.newsSupplementalContext.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[9];

  v20 = *(unsigned __int8 *)(v0 + 40);
  v21 = *(_QWORD *)(v0 + 24);
  v12 = *(unsigned __int8 *)(v0 + 41);
  v1 = *(_QWORD *)(v0 + 56);
  v18 = *(_QWORD *)(v0 + 48);
  v19 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v16 = *(_QWORD *)(v0 + 104);
  v17 = *(_QWORD *)(v0 + 88);
  v34 = *(_QWORD *)(v0 + 96);
  v35 = *(_QWORD *)(v0 + 112);
  v15 = *(unsigned __int8 *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 152);
  v13 = *(_QWORD *)(v0 + 144);
  v14 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 160);
  v22 = *(_QWORD *)(v0 + 176);
  v38 = *(_QWORD *)(v0 + 200);
  v25 = *(_QWORD *)(v0 + 216);
  v26 = *(_QWORD *)(v0 + 208);
  v27 = *(_QWORD *)(v0 + 224);
  v23 = *(_QWORD *)(v0 + 240);
  v24 = *(_QWORD *)(v0 + 232);
  v37 = *(_QWORD *)(v0 + 248);
  v36 = *(_QWORD *)(v0 + 256);
  v33 = *(_QWORD *)(v0 + 272);
  v31 = *(_QWORD *)(v0 + 264);
  v32 = *(_QWORD *)(v0 + 280);
  v30 = *(_QWORD *)(v0 + 288);
  v11 = *(_QWORD *)(v0 + 296);
  v10 = *(_QWORD *)(v0 + 336);
  v9 = *(_QWORD *)(v0 + 360);
  v28 = *(_QWORD *)(v0 + 304);
  v29 = *(unsigned __int8 *)(v0 + 368);
  objc_msgSend(objc_allocWithZone((Class)sub_1BA2C1DC0()), sel_init);
  sub_1BA2C1DB4();
  sub_1BA2C1C94();
  swift_bridgeObjectRetain_n();
  sub_1BA2C1D00();
  swift_bridgeObjectRelease();
  sub_1BA2C1C58();
  v8 = 256;
  if (!v12)
    v8 = 0;
  v39 = v21;
  v40 = v19;
  v41 = v8 | v20;
  v42 = v18;
  v43 = v1;
  v44 = v3;
  v45 = v2;
  v46 = v4;
  v47 = v17;
  v48 = v34;
  v50[0] = v16;
  v50[1] = v35;
  v50[2] = v15;
  v50[3] = v14;
  v50[4] = v5;
  v50[5] = v13;
  v50[6] = v6;
  v50[7] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA26F958((uint64_t)&v39, v50);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v22)
  {
    swift_bridgeObjectRetain_n();
    sub_1BA2C1C4C();
    sub_1BA2C1CB8();
    sub_1BA2C1CE8();
    swift_bridgeObjectRelease();
  }
  if (v38 && v25)
  {
    if ((v24 & 1) != 0 || v27 >= 1)
      swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA282048(v26, v25);
    sub_1BA2C1D0C();
    sub_1BA283288(v26, v25);
    swift_bridgeObjectRelease();
  }
  v39 = v26;
  v40 = v25;
  v41 = v27;
  v42 = v24;
  v43 = v23;
  v44 = v37;
  v45 = v36;
  v46 = v31;
  v47 = v33;
  v48 = v32;
  v49 = v30;
  sub_1BA282048(v26, v25);
  sub_1BA2338F8((uint64_t)&v39);
  sub_1BA283288(v26, v25);
  if (v28)
  {
    swift_bridgeObjectRetain();
    sub_1BA2820FC(v11, v28);
    sub_1BA2C1BEC();
    swift_bridgeObjectRetain();
    sub_1BA2C1C10();
    swift_bridgeObjectRetain();
    sub_1BA2C1C1C();
    swift_bridgeObjectRetain();
    sub_1BA2C1B80();
    objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v10, v9, v32, v30);
    sub_1BA2C1C40();
    sub_1BA283218(v11, v28);
    __asm { BR              X9 }
  }
  __asm { BR              X9 }
}

uint64_t sub_1BA285974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_1BA2C1C64();
  sub_1BA23DAE0();
  sub_1BA2C2438();
  sub_1BA2C1D54();
  if (v3)
  {
    swift_bridgeObjectRetain_n();
    sub_1BA2C1D84();
    swift_bridgeObjectRelease();
  }
  if (v1)
  {
    swift_bridgeObjectRetain_n();
    sub_1BA2C1CC4();
    swift_bridgeObjectRelease();
  }
  if (v4)
  {
    swift_bridgeObjectRetain_n();
    sub_1BA2C1CAC();
    swift_bridgeObjectRelease();
  }
  return v0;
}

uint64_t ArticleBannerAdContext.currentPromotableContentDepiction.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15[2];
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v4 = *(_BYTE *)(v0 + 40);
  v13 = *(_BYTE *)(v0 + 41);
  v5 = *(_QWORD *)(v0 + 56);
  v12 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 72);
  v9 = *(_QWORD *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 88);
  v10 = *(_QWORD *)(v0 + 96);
  sub_1BA2C19E8();
  v14 = v1;
  v15[0] = v3;
  v15[1] = v2;
  v16 = v4;
  v17 = v13;
  v18 = v12;
  v19 = v5;
  v20 = v7;
  v21 = v6;
  v22 = v9;
  v23 = v8;
  v24 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BA26D49C(0, v15, &v14, 100);
}

uint64_t sub_1BA285B6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15[2];
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v4 = *(_BYTE *)(v0 + 40);
  v13 = *(_BYTE *)(v0 + 41);
  v5 = *(_QWORD *)(v0 + 56);
  v12 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 72);
  v9 = *(_QWORD *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 88);
  v10 = *(_QWORD *)(v0 + 96);
  sub_1BA2C19E8();
  v14 = v1;
  v15[0] = v3;
  v15[1] = v2;
  v16 = v4;
  v17 = v13;
  v18 = v12;
  v19 = v5;
  v20 = v7;
  v21 = v6;
  v22 = v9;
  v23 = v8;
  v24 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BA26D49C(0, v15, &v14, 100);
}

uint64_t destroy for ArticleBannerAdContext(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 216))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + 304))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArticleBannerAdContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v9 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v9;
  v10 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v10;
  v11 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v11;
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_WORD *)(a1 + 184) = *(_WORD *)(a2 + 184);
  v12 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v12;
  v27 = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v27)
  {
    v19 = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 256) = v19;
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
    v20 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v20;
    v16 = *(_QWORD *)(a2 + 304);
    if (v16)
      goto LABEL_3;
LABEL_5:
    v21 = *(_OWORD *)(a2 + 344);
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
    *(_OWORD *)(a1 + 344) = v21;
    *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
    v22 = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 312) = v22;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v27;
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  v13 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v13;
  v14 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v14;
  v15 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v15;
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = *(_QWORD *)(a2 + 304);
  if (!v16)
    goto LABEL_5;
LABEL_3:
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = v16;
  v17 = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = v17;
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  v18 = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_6:
  *(_BYTE *)(a1 + 368) = *(_BYTE *)(a2 + 368);
  v23 = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = v23;
  v24 = *(_QWORD *)(a2 + 392);
  v25 = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 392) = v24;
  *(_QWORD *)(a1 + 400) = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArticleBannerAdContext(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_BYTE *)(a1 + 185) = *(_BYTE *)(a2 + 185);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 208);
  v5 = (_OWORD *)(a2 + 208);
  v6 = *(_QWORD *)(a2 + 216);
  if (*(_QWORD *)(a1 + 216))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA257D78(a1 + 208);
      v7 = *(_OWORD *)(a2 + 224);
      *v4 = *v5;
      *(_OWORD *)(a1 + 224) = v7;
      v9 = *(_OWORD *)(a2 + 256);
      v8 = *(_OWORD *)(a2 + 272);
      v10 = *(_OWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
      *(_OWORD *)(a1 + 256) = v9;
      *(_OWORD *)(a1 + 272) = v8;
      *(_OWORD *)(a1 + 240) = v10;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
    *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
    *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
    *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
    *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 224);
    *v4 = *v5;
    *(_OWORD *)(a1 + 224) = v11;
    v12 = *(_OWORD *)(a2 + 240);
    v13 = *(_OWORD *)(a2 + 256);
    v14 = *(_OWORD *)(a2 + 272);
    *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 256) = v13;
    *(_OWORD *)(a1 + 272) = v14;
    *(_OWORD *)(a1 + 240) = v12;
  }
  v15 = (_OWORD *)(a1 + 296);
  v16 = (_OWORD *)(a2 + 296);
  v17 = *(_QWORD *)(a2 + 304);
  if (*(_QWORD *)(a1 + 304))
  {
    if (v17)
    {
      *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
      *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
      *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
      *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA257DAC(a1 + 296);
      *v15 = *v16;
      v19 = *(_OWORD *)(a2 + 328);
      v18 = *(_OWORD *)(a2 + 344);
      v20 = *(_OWORD *)(a2 + 312);
      *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
      *(_OWORD *)(a1 + 328) = v19;
      *(_OWORD *)(a1 + 344) = v18;
      *(_OWORD *)(a1 + 312) = v20;
    }
  }
  else if (v17)
  {
    *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
    *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
    *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
    *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
    *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
    *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
    *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
    *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
    *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *v15 = *v16;
    v21 = *(_OWORD *)(a2 + 312);
    v22 = *(_OWORD *)(a2 + 328);
    v23 = *(_OWORD *)(a2 + 344);
    *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 328) = v22;
    *(_OWORD *)(a1 + 344) = v23;
    *(_OWORD *)(a1 + 312) = v21;
  }
  *(_BYTE *)(a1 + 368) = *(_BYTE *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy408_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x198uLL);
}

uint64_t assignWithTake for ArticleBannerAdContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v8 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v9;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_BYTE *)(a1 + 185) = *(_BYTE *)(a2 + 185);
  v11 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v11;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 216))
  {
    v12 = *(_QWORD *)(a2 + 216);
    if (v12)
    {
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = v12;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
      v13 = *(_QWORD *)(a2 + 248);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 248) = v13;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      swift_bridgeObjectRelease();
      v14 = *(_QWORD *)(a2 + 280);
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 280) = v14;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1BA257D78(a1 + 208);
  }
  v15 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v15;
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  v16 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v16;
LABEL_6:
  if (!*(_QWORD *)(a1 + 304))
  {
LABEL_10:
    v18 = *(_OWORD *)(a2 + 344);
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
    *(_OWORD *)(a1 + 344) = v18;
    *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
    v19 = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 312) = v19;
    goto LABEL_11;
  }
  v17 = *(_QWORD *)(a2 + 304);
  if (!v17)
  {
    sub_1BA257DAC(a1 + 296);
    goto LABEL_10;
  }
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = v17;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  swift_bridgeObjectRelease();
LABEL_11:
  *(_BYTE *)(a1 + 368) = *(_BYTE *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 400) = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleBannerAdContext(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 408))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleBannerAdContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 408) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 408) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ArticleBannerAdContext.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1BA286960 + 4 * byte_1BA2C8CBC[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1BA286994 + 4 * byte_1BA2C8CB7[v4]))();
}

uint64_t sub_1BA286994(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA28699C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA2869A4);
  return result;
}

uint64_t sub_1BA2869B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA2869B8);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1BA2869BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA2869C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleBannerAdContext.CodingKeys()
{
  return &type metadata for ArticleBannerAdContext.CodingKeys;
}

unint64_t sub_1BA2869E4()
{
  unint64_t result;

  result = qword_1EF27F818;
  if (!qword_1EF27F818)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C8E44, &type metadata for ArticleBannerAdContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F818);
  }
  return result;
}

unint64_t sub_1BA286A2C()
{
  unint64_t result;

  result = qword_1EF27F820;
  if (!qword_1EF27F820)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C8DB4, &type metadata for ArticleBannerAdContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F820);
  }
  return result;
}

unint64_t sub_1BA286A74()
{
  unint64_t result;

  result = qword_1EF27F828;
  if (!qword_1EF27F828)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C8DDC, &type metadata for ArticleBannerAdContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F828);
  }
  return result;
}

uint64_t sub_1BA286AB8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x61746144707061 && a2 == 0xE700000000000000;
  if (v2 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614472657375 && a2 == 0xE800000000000000 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6576697461657263 && a2 == 0xEC00000061746144 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x446E6F6974636573 && a2 == 0xEB00000000617461 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6C61727265666572 && a2 == 0xEC00000061746144 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6D75636F44666E61 && a2 == 0xEF61746144746E65 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BA2D0660 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6E676961706D6163 && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    v6 = sub_1BA2C26A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

NewsAds::ReferralAdData::Origin_optional __swiftcall ReferralAdData.Origin.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAds::ReferralAdData::Origin_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BA2C25DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ReferralAdData.Origin.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA287110 + 4 * byte_1BA2C8F90[*v0]))(7107189, 0xE300000000000000);
}

uint64_t sub_1BA287110()
{
  return 0x7474656C7377656ELL;
}

uint64_t sub_1BA28712C()
{
  return 0x746567646977;
}

uint64_t sub_1BA287140()
{
  return 0x6163696669746F6ELL;
}

void sub_1BA287160(char *a1)
{
  sub_1BA26E0DC(*a1);
}

void sub_1BA28716C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BA2C2720();
  __asm { BR              X9 }
}

uint64_t sub_1BA2871B0()
{
  sub_1BA2C21A4();
  swift_bridgeObjectRelease();
  return sub_1BA2C2738();
}

void sub_1BA287228()
{
  __asm { BR              X10 }
}

uint64_t sub_1BA28725C()
{
  sub_1BA2C21A4();
  return swift_bridgeObjectRelease();
}

void sub_1BA2872C0()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BA2C2720();
  __asm { BR              X9 }
}

uint64_t sub_1BA287300()
{
  sub_1BA2C21A4();
  swift_bridgeObjectRelease();
  return sub_1BA2C2738();
}

NewsAds::ReferralAdData::Origin_optional sub_1BA287378(Swift::String *a1)
{
  return ReferralAdData.Origin.init(rawValue:)(*a1);
}

uint64_t sub_1BA287384()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BA2873AC + 4 * byte_1BA2C8FA0[*v0]))();
}

void sub_1BA2873AC(_QWORD *a1@<X8>)
{
  *a1 = 0x7474656C7377656ELL;
  a1[1] = 0xEA00000000007265;
}

void sub_1BA2873CC(_QWORD *a1@<X8>)
{
  *a1 = 0x746567646977;
  a1[1] = 0xE600000000000000;
}

void sub_1BA2873E4(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "notification");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_1BA287408()
{
  sub_1BA287B4C();
  return sub_1BA2C2258();
}

uint64_t sub_1BA287464()
{
  sub_1BA287B4C();
  return sub_1BA2C2228();
}

void ReferralAdData.origin.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

NewsAds::ReferralAdData __swiftcall ReferralAdData.init(origin:)(NewsAds::ReferralAdData origin)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)origin.origin;
  return origin;
}

uint64_t sub_1BA2874C8()
{
  return 0x6E696769726FLL;
}

uint64_t sub_1BA2874DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6E696769726FLL && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BA2C26A8();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BA287568()
{
  sub_1BA2876BC();
  return sub_1BA2C275C();
}

uint64_t sub_1BA287590()
{
  sub_1BA2876BC();
  return sub_1BA2C2768();
}

uint64_t ReferralAdData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1BA28787C(0, &qword_1EF27F830, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA2876BC();
  sub_1BA2C2750();
  v11 = v8;
  sub_1BA287700();
  sub_1BA2C2684();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BA2876BC()
{
  unint64_t result;

  result = qword_1EF27F838;
  if (!qword_1EF27F838)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C9208, &type metadata for ReferralAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F838);
  }
  return result;
}

unint64_t sub_1BA287700()
{
  unint64_t result;

  result = qword_1EF27F840;
  if (!qword_1EF27F840)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for ReferralAdData.Origin, &type metadata for ReferralAdData.Origin);
    atomic_store(result, (unint64_t *)&qword_1EF27F840);
  }
  return result;
}

uint64_t ReferralAdData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1BA28787C(0, &qword_1EF27F848, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA2876BC();
  sub_1BA2C2744();
  if (!v2)
  {
    sub_1BA2878D8();
    sub_1BA2C2630();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA28787C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA2876BC();
    v7 = a3(a1, &type metadata for ReferralAdData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BA2878D8()
{
  unint64_t result;

  result = qword_1EF27F850;
  if (!qword_1EF27F850)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for ReferralAdData.Origin, &type metadata for ReferralAdData.Origin);
    atomic_store(result, (unint64_t *)&qword_1EF27F850);
  }
  return result;
}

unint64_t sub_1BA287920()
{
  unint64_t result;

  result = qword_1EF27F858;
  if (!qword_1EF27F858)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for ReferralAdData.Origin, &type metadata for ReferralAdData.Origin);
    atomic_store(result, (unint64_t *)&qword_1EF27F858);
  }
  return result;
}

unint64_t sub_1BA287964(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BA23D654();
  result = sub_1BA23D154();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1BA287990@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ReferralAdData.init(from:)(a1, a2);
}

uint64_t sub_1BA2879A4(_QWORD *a1)
{
  return ReferralAdData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for ReferralAdData()
{
  return &type metadata for ReferralAdData;
}

ValueMetadata *type metadata accessor for ReferralAdData.Origin()
{
  return &type metadata for ReferralAdData.Origin;
}

uint64_t storeEnumTagSinglePayload for ReferralAdData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BA287A18 + 4 * byte_1BA2C8FAE[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BA287A38 + 4 * byte_1BA2C8FB3[v4]))();
}

_BYTE *sub_1BA287A18(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BA287A38(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA287A40(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA287A48(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA287A50(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA287A58(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ReferralAdData.CodingKeys()
{
  return &type metadata for ReferralAdData.CodingKeys;
}

unint64_t sub_1BA287A78()
{
  unint64_t result;

  result = qword_1EF27F860;
  if (!qword_1EF27F860)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C91E0, &type metadata for ReferralAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F860);
  }
  return result;
}

unint64_t sub_1BA287AC0()
{
  unint64_t result;

  result = qword_1EF27F868;
  if (!qword_1EF27F868)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C9150, &type metadata for ReferralAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F868);
  }
  return result;
}

unint64_t sub_1BA287B08()
{
  unint64_t result;

  result = qword_1EF27F870;
  if (!qword_1EF27F870)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C9178, &type metadata for ReferralAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F870);
  }
  return result;
}

unint64_t sub_1BA287B4C()
{
  unint64_t result;

  result = qword_1EF27F878;
  if (!qword_1EF27F878)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for ReferralAdData.Origin, &type metadata for ReferralAdData.Origin);
    atomic_store(result, (unint64_t *)&qword_1EF27F878);
  }
  return result;
}

uint64_t AdPolicyLayoutEnvironment.content(in:)(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  double *v22;
  uint64_t v23;
  uint64_t v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  char v33;
  uint64_t v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;

  v9 = *v4;
  v34 = MEMORY[0x1E0DEE9E8];
  v10 = v9 + 64;
  v11 = 1 << *(_BYTE *)(v9 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v9 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v16 = 0;
  while (1)
  {
    do
    {
LABEL_5:
      if (v13)
      {
        v17 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v18 = v17 | (v16 << 6);
      }
      else
      {
        v19 = v16 + 1;
        if (__OFADD__(v16, 1))
          goto LABEL_31;
        if (v19 >= v14)
        {
LABEL_29:
          swift_release();
          return v34;
        }
        v20 = *(_QWORD *)(v10 + 8 * v19);
        ++v16;
        if (!v20)
        {
          v16 = v19 + 1;
          if (v19 + 1 >= v14)
            goto LABEL_29;
          v20 = *(_QWORD *)(v10 + 8 * v16);
          if (!v20)
          {
            v16 = v19 + 2;
            if (v19 + 2 >= v14)
              goto LABEL_29;
            v20 = *(_QWORD *)(v10 + 8 * v16);
            if (!v20)
            {
              v21 = v19 + 3;
              if (v21 >= v14)
                goto LABEL_29;
              v20 = *(_QWORD *)(v10 + 8 * v21);
              if (!v20)
              {
                while (1)
                {
                  v16 = v21 + 1;
                  if (__OFADD__(v21, 1))
                    goto LABEL_32;
                  if (v16 >= v14)
                    goto LABEL_29;
                  v20 = *(_QWORD *)(v10 + 8 * v16);
                  ++v21;
                  if (v20)
                    goto LABEL_20;
                }
              }
              v16 = v21;
            }
          }
        }
LABEL_20:
        v13 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v16 << 6);
      }
      v22 = *(double **)(*(_QWORD *)(v9 + 56) + 8 * v18);
      v23 = *((_QWORD *)v22 + 2);
    }
    while (!v23);
    v24 = *(unsigned __int8 *)(*(_QWORD *)(v9 + 48) + v18);
    v25 = v22[4];
    v26 = v22[5];
    v27 = v22[6];
    v28 = v22[7];
    swift_bridgeObjectRetain();
    v35.origin.x = v25;
    v35.origin.y = v26;
    v35.size.width = v27;
    v35.size.height = v28;
    v36.origin.x = a1;
    v36.origin.y = a2;
    v36.size.width = a3;
    v36.size.height = a4;
    result = CGRectIntersectsRect(v35, v36);
    if ((result & 1) == 0)
      break;
LABEL_4:
    swift_bridgeObjectRelease();
    result = sub_1BA288858(&v33, v24);
  }
  v29 = 0;
  v30 = v22 + 11;
  v31 = v23 - 1;
  while (1)
  {
    if (v31 == v29)
    {
      result = swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    if ((unint64_t)++v29 >= *((_QWORD *)v22 + 2))
      break;
    v32 = v30 + 4;
    v37.origin.x = a1;
    v37.origin.y = a2;
    v37.size.width = a3;
    v37.size.height = a4;
    result = CGRectIntersectsRect(*(CGRect *)(v30 - 3), v37);
    v30 = v32;
    if ((result & 1) != 0)
      goto LABEL_4;
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t AdPolicyLayoutEnvironment.rects(for:)(unsigned __int8 *a1)
{
  uint64_t v1;
  char v2;

  if (*(_QWORD *)(*(_QWORD *)v1 + 16) && (sub_1BA26EDB0(*a1), (v2 & 1) != 0))
    return swift_bridgeObjectRetain();
  else
    return MEMORY[0x1E0DEE9D8];
}

BOOL static AdPolicyContentType.AdState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AdPolicyContentType.AdState.hash(into:)()
{
  return sub_1BA2C272C();
}

uint64_t static AdPolicyContentType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2;
  unsigned int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 >> 6)
  {
    if (v2 >> 6 == 1)
    {
      if ((v3 & 0xC0) == 0x40)
        return ((v3 ^ v2) & 0x3F) == 0;
    }
    else if (v3 == 128)
    {
      return 1;
    }
  }
  else if (v3 <= 0x3F)
  {
    return v2 == v3;
  }
  return 0;
}

uint64_t AdPolicyContentType.hash(into:)()
{
  unsigned __int8 *v0;

  if (*v0 >> 6 <= 1u)
    sub_1BA2C272C();
  return sub_1BA2C272C();
}

uint64_t AdPolicyContentType.hashValue.getter()
{
  unsigned __int8 *v0;
  unsigned int v1;

  v1 = *v0;
  sub_1BA2C2720();
  if (v1 >> 6 <= 1)
    sub_1BA2C272C();
  sub_1BA2C272C();
  return sub_1BA2C2738();
}

uint64_t sub_1BA287F8C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2;
  unsigned int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 >> 6)
  {
    if (v2 >> 6 == 1)
    {
      if ((v3 & 0xC0) == 0x40)
        return ((v3 ^ v2) & 0x3F) == 0;
    }
    else if (v3 == 128)
    {
      return 1;
    }
  }
  else if (v3 < 0x40)
  {
    return v2 == v3;
  }
  return 0;
}

uint64_t sub_1BA287FEC()
{
  unsigned __int8 *v0;
  unsigned int v1;

  v1 = *v0;
  sub_1BA2C2720();
  if (v1 >> 6 <= 1)
    sub_1BA2C272C();
  sub_1BA2C272C();
  return sub_1BA2C2738();
}

uint64_t sub_1BA28805C()
{
  unsigned __int8 *v0;

  if (*v0 >> 6 <= 1u)
    sub_1BA2C272C();
  return sub_1BA2C272C();
}

uint64_t sub_1BA2880B4()
{
  unsigned __int8 *v0;
  unsigned int v1;

  v1 = *v0;
  sub_1BA2C2720();
  if (v1 >> 6 <= 1)
    sub_1BA2C272C();
  sub_1BA2C272C();
  return sub_1BA2C2738();
}

uint64_t AdPolicyLayoutEnvironment.addContent(_:frame:)(unsigned __int8 *a1, double a2, double a3, double a4, double a5)
{
  uint64_t *v5;
  uint64_t *v6;
  unsigned __int8 v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  double *v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v6 = v5;
  v11 = *a1;
  v12 = *v5;
  if (*(_QWORD *)(v12 + 16) && (v13 = sub_1BA26EDB0(*a1), (v14 & 1) != 0))
  {
    v15 = *(char **)(*(_QWORD *)(v12 + 56) + 8 * v13);
    swift_bridgeObjectRetain();
  }
  else
  {
    v15 = (char *)MEMORY[0x1E0DEE9D8];
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v15 = sub_1BA23F634(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
  v17 = *((_QWORD *)v15 + 2);
  v16 = *((_QWORD *)v15 + 3);
  if (v17 >= v16 >> 1)
    v15 = sub_1BA23F634((char *)(v16 > 1), v17 + 1, 1, v15);
  *((_QWORD *)v15 + 2) = v17 + 1;
  v18 = (double *)&v15[32 * v17];
  v18[4] = a2;
  v18[5] = a3;
  v18[6] = a4;
  v18[7] = a5;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v6;
  *v6 = 0x8000000000000000;
  sub_1BA2885B0((uint64_t)v15, v11, isUniquelyReferenced_nonNull_native);
  *v6 = v21;
  return swift_bridgeObjectRelease();
}

uint64_t AdPolicyLayoutEnvironment.allContent()()
{
  return swift_bridgeObjectRetain();
}

int8x16_t *AdPolicyContentType.AdState.init(bannerState:)@<X0>(int8x16_t *result@<X0>, char *a2@<X8>)
{
  char v3;
  int8x16_t v4;

  if (result[5].i8[0])
  {
    if (result[5].i8[0] == 1)
    {
      result = (int8x16_t *)sub_1BA2285BC((uint64_t)result);
      v3 = 2;
    }
    else
    {
      v4 = vorrq_s8(vorrq_s8(result[1], result[3]), vorrq_s8(result[2], result[4]));
      v3 = (*(_QWORD *)&vorr_s8(*(int8x8_t *)v4.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL)) | result->i64[1] | result->i64[0]) != 0;
    }
  }
  else
  {
    result = (int8x16_t *)__swift_destroy_boxed_opaque_existential_1((uint64_t)result);
    v3 = 3;
  }
  *a2 = v3;
  return result;
}

uint64_t sub_1BA2882D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1BA229E28(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1BA2A1F40();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1BA2A0F64(v15, a4 & 1);
  v21 = sub_1BA229E28(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BA2C26D8();
  __break(1u);
  return result;
}

uint64_t sub_1BA288434(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1BA229E28(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1BA2A2654();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_1BA28A098(a1, v18[7] + 72 * v12);
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    v23 = v18[7] + 72 * v12;
    *(_OWORD *)v23 = *(_OWORD *)a1;
    v24 = *(_OWORD *)(a1 + 16);
    v25 = *(_OWORD *)(a1 + 32);
    v26 = *(_OWORD *)(a1 + 48);
    *(_QWORD *)(v23 + 64) = *(_QWORD *)(a1 + 64);
    *(_OWORD *)(v23 + 32) = v25;
    *(_OWORD *)(v23 + 48) = v26;
    *(_OWORD *)(v23 + 16) = v24;
    v27 = v18[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v18[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1BA2A15C4(v15, a4 & 1);
  v20 = sub_1BA229E28(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_1BA28A098(a1, v18[7] + 72 * v12);
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BA2C26D8();
  __break(1u);
  return result;
}

uint64_t sub_1BA2885B0(uint64_t a1, unsigned __int8 a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1BA26EDB0(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1BA2A2864();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = a2;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v19 = v16[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_1BA2A1924(result, a3 & 1);
  result = sub_1BA26EDB0(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BA2C26D8();
  __break(1u);
  return result;
}

void sub_1BA2886E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v6 = v5;
  v12 = *v5;
  v14 = sub_1BA229E28(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1BA2A2BF4();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7] + 16 * v14;

      *(_QWORD *)v21 = a1;
      *(_QWORD *)(v21 + 8) = a2;
      return;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v24 = (uint64_t *)(v20[6] + 16 * v14);
    *v24 = a3;
    v24[1] = a4;
    v25 = (_QWORD *)(v20[7] + 16 * v14);
    *v25 = a1;
    v25[1] = a2;
    v26 = v20[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v20[2] = v28;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_1BA2A1C2C(v17, a5 & 1);
  v22 = sub_1BA229E28(a3, a4);
  if ((v18 & 1) == (v23 & 1))
  {
    v14 = v22;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1BA2C26D8();
  __break(1u);
}

uint64_t sub_1BA288858(_BYTE *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  BOOL v12;
  unsigned int v13;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;

  v5 = *v2;
  sub_1BA2C2720();
  v6 = a2 >> 6;
  if (!(a2 >> 6) || v6 == 1)
    sub_1BA2C272C();
  sub_1BA2C272C();
  v7 = sub_1BA2C2738();
  v8 = -1 << *(_BYTE *)(v5 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_21:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *v2;
    *v2 = 0x8000000000000000;
    sub_1BA2890D4(a2, v9, isUniquelyReferenced_nonNull_native);
    *v2 = v16;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_22;
  }
  v10 = ~v8;
  v12 = a2 == 128 && v6 == 2;
  while (1)
  {
    v13 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v9);
    if (!(v13 >> 6))
      break;
    if (v13 >> 6 == 1)
    {
      if (v6 == 1 && ((v13 ^ a2) & 0x3F) == 0)
        goto LABEL_20;
    }
    else if (v12)
    {
      goto LABEL_20;
    }
LABEL_12:
    v9 = (v9 + 1) & v10;
    if (((*(_QWORD *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
      goto LABEL_21;
  }
  if (a2 > 0x3Fu || v13 != a2)
    goto LABEL_12;
LABEL_20:
  result = 0;
  LOBYTE(a2) = *(_BYTE *)(*(_QWORD *)(*v2 + 48) + v9);
LABEL_22:
  *a1 = a2;
  return result;
}

uint64_t sub_1BA2889F0(_BYTE *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v5 = *v2;
  sub_1BA2C2720();
  sub_1BA2C272C();
  v6 = sub_1BA2C2738();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_1BA28928C(a2, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v13;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  result = 0;
  LOBYTE(a2) = *(_BYTE *)(*(_QWORD *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1BA288B0C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  v1 = v0;
  v2 = *v0;
  sub_1BA28A0D4(0, &qword_1ED5B2C20, (void (*)(void))sub_1BA266480);
  result = sub_1BA2C24B0();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v26 = (_QWORD *)(v2 + 56);
    v6 = 1 << *(_BYTE *)(v2 + 32);
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v6 + 63) >> 6;
    v10 = result + 56;
    while (1)
    {
      if (v8)
      {
        v12 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v13 = v12 | (v5 << 6);
      }
      else
      {
        v14 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v14 >= v9)
          goto LABEL_35;
        v15 = v26[v14];
        ++v5;
        if (!v15)
        {
          v5 = v14 + 1;
          if (v14 + 1 >= v9)
            goto LABEL_35;
          v15 = v26[v5];
          if (!v15)
          {
            v5 = v14 + 2;
            if (v14 + 2 >= v9)
              goto LABEL_35;
            v15 = v26[v5];
            if (!v15)
            {
              v16 = v14 + 3;
              if (v16 >= v9)
              {
LABEL_35:
                v25 = 1 << *(_BYTE *)(v2 + 32);
                if (v25 > 63)
                  bzero(v26, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v26 = -1 << v25;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v15 = v26[v16];
              if (!v15)
              {
                while (1)
                {
                  v5 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_41;
                  if (v5 >= v9)
                    goto LABEL_35;
                  v15 = v26[v5];
                  ++v16;
                  if (v15)
                    goto LABEL_23;
                }
              }
              v5 = v16;
            }
          }
        }
LABEL_23:
        v8 = (v15 - 1) & v15;
        v13 = __clz(__rbit64(v15)) + (v5 << 6);
      }
      v17 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v13);
      sub_1BA2C2720();
      if (v17 >> 6 <= 1)
        sub_1BA2C272C();
      sub_1BA2C272C();
      result = sub_1BA2C2738();
      v18 = -1 << *(_BYTE *)(v4 + 32);
      v19 = result & ~v18;
      v20 = v19 >> 6;
      if (((-1 << v19) & ~*(_QWORD *)(v10 + 8 * (v19 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v10 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v21 = 0;
        v22 = (unint64_t)(63 - v18) >> 6;
        do
        {
          if (++v20 == v22 && (v21 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v23 = v20 == v22;
          if (v20 == v22)
            v20 = 0;
          v21 |= v23;
          v24 = *(_QWORD *)(v10 + 8 * v20);
        }
        while (v24 == -1);
        v11 = __clz(__rbit64(~v24)) + (v20 << 6);
      }
      *(_QWORD *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v11) = v17;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1BA288E18()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  sub_1BA28A0D4(0, &qword_1EF27F890, (void (*)(void))sub_1BA25CDE8);
  result = sub_1BA2C24B0();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
      sub_1BA2C2720();
      sub_1BA2C272C();
      result = sub_1BA2C2738();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1BA2890D4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_28;
  if ((a3 & 1) != 0)
  {
    sub_1BA288B0C();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1BA2893D8();
      goto LABEL_28;
    }
    sub_1BA289720();
  }
  v8 = *v3;
  sub_1BA2C2720();
  v9 = v5 >> 6;
  if (!(v5 >> 6) || v9 == 1)
    sub_1BA2C272C();
  sub_1BA2C272C();
  result = sub_1BA2C2738();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v11 = ~v10;
    v13 = v5 == 128 && v9 == 2;
    do
    {
      v14 = *(unsigned __int8 *)(*(_QWORD *)(v8 + 48) + a2);
      if (v14 >> 6)
      {
        if (v14 >> 6 == 1)
        {
          if (v9 == 1 && ((v14 ^ v5) & 0x3F) == 0)
            goto LABEL_27;
        }
        else if (v13)
        {
          goto LABEL_27;
        }
      }
      else if (v5 <= 0x3F && v14 == v5)
      {
LABEL_27:
        result = sub_1BA2C26CC();
        __break(1u);
        break;
      }
      a2 = (a2 + 1) & v11;
    }
    while (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_28:
  v15 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v15 + 48) + a2) = v5;
  v16 = *(_QWORD *)(v15 + 16);
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
    __break(1u);
  else
    *(_QWORD *)(v15 + 16) = v18;
  return result;
}

uint64_t sub_1BA28928C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1BA288E18();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1BA28957C();
      goto LABEL_14;
    }
    sub_1BA2899F8();
  }
  v8 = *v3;
  sub_1BA2C2720();
  sub_1BA2C272C();
  result = sub_1BA2C2738();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      result = sub_1BA2C26CC();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v10 + a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v12 + 48) + a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

void *sub_1BA2893D8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_1BA28A0D4(0, &qword_1ED5B2C20, (void (*)(void))sub_1BA266480);
  v2 = *v0;
  v3 = sub_1BA2C24A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BA28957C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_1BA28A0D4(0, &qword_1EF27F890, (void (*)(void))sub_1BA25CDE8);
  v2 = *v0;
  v3 = sub_1BA2C24A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BA289720()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  int64_t v25;

  v1 = v0;
  v2 = *v0;
  sub_1BA28A0D4(0, &qword_1ED5B2C20, (void (*)(void))sub_1BA266480);
  result = sub_1BA2C24B0();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_37:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v25 = (unint64_t)(v7 + 63) >> 6;
  v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v5 << 6);
      goto LABEL_24;
    }
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v14 >= v25)
      goto LABEL_35;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v25)
        goto LABEL_35;
      v15 = *(_QWORD *)(v6 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v25)
          goto LABEL_35;
        v15 = *(_QWORD *)(v6 + 8 * v5);
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v5 << 6);
LABEL_24:
    v17 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v13);
    sub_1BA2C2720();
    if (v17 >> 6 <= 1)
      sub_1BA2C272C();
    sub_1BA2C272C();
    result = sub_1BA2C2738();
    v18 = -1 << *(_BYTE *)(v4 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v10 + 8 * (v19 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v10 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v21 = 0;
      v22 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v22 && (v21 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v23 = v20 == v22;
        if (v20 == v22)
          v20 = 0;
        v21 |= v23;
        v24 = *(_QWORD *)(v10 + 8 * v20);
      }
      while (v24 == -1);
      v11 = __clz(__rbit64(~v24)) + (v20 << 6);
    }
    *(_QWORD *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v11) = v17;
    ++*(_QWORD *)(v4 + 16);
  }
  v16 = v14 + 3;
  if (v16 >= v25)
  {
LABEL_35:
    result = swift_release();
    v1 = v0;
    goto LABEL_37;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v25)
      goto LABEL_35;
    v15 = *(_QWORD *)(v6 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1BA2899F8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  sub_1BA28A0D4(0, &qword_1EF27F890, (void (*)(void))sub_1BA25CDE8);
  result = sub_1BA2C24B0();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
    sub_1BA2C2720();
    sub_1BA2C272C();
    result = sub_1BA2C2738();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_1BA289C88()
{
  unint64_t result;

  result = qword_1EF27F880;
  if (!qword_1EF27F880)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for AdPolicyContentType.AdState, &type metadata for AdPolicyContentType.AdState);
    atomic_store(result, (unint64_t *)&qword_1EF27F880);
  }
  return result;
}

unint64_t sub_1BA289CD0()
{
  unint64_t result;

  result = qword_1EF27F888;
  if (!qword_1EF27F888)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for AdPolicyContentType.EngagementBannerState, &type metadata for AdPolicyContentType.EngagementBannerState);
    atomic_store(result, (unint64_t *)&qword_1EF27F888);
  }
  return result;
}

unint64_t sub_1BA289D18()
{
  unint64_t result;

  result = qword_1ED5B1FF0;
  if (!qword_1ED5B1FF0)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for AdPolicyContentType, &type metadata for AdPolicyContentType);
    atomic_store(result, (unint64_t *)&qword_1ED5B1FF0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AdPolicyContentType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x1E)
    goto LABEL_17;
  if (a2 + 226 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 226) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 226;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 226;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 226;
  }
LABEL_17:
  v6 = ((*a1 >> 1) & 0x1C | (*a1 >> 6)) ^ 0x1F;
  if (v6 >= 0x1D)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for AdPolicyContentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 226 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 226) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x1E)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x1D)
    return ((uint64_t (*)(void))((char *)&loc_1BA289E48 + 4 * byte_1BA2C9265[v4]))();
  *a1 = a2 - 30;
  return ((uint64_t (*)(void))((char *)sub_1BA289E7C + 4 * byte_1BA2C9260[v4]))();
}

uint64_t sub_1BA289E7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA289E84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA289E8CLL);
  return result;
}

uint64_t sub_1BA289EA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA289EACLL);
  *(_BYTE *)result = 8 * (((-a2 >> 2) & 7) - 8 * a2);
  return result;
}

uint64_t sub_1BA289EB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA289EB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA289EC4(_BYTE *a1)
{
  int v1;

  v1 = (char)*a1;
  if (v1 >= 0)
    return *a1 >> 6;
  else
    return (v1 & 7u) + 2;
}

_BYTE *sub_1BA289EE0(_BYTE *result)
{
  *result &= 0x3Fu;
  return result;
}

_BYTE *sub_1BA289EF0(_BYTE *result, unsigned int a2)
{
  if (a2 < 2)
    *result = *result & 7 | ((_BYTE)a2 << 6);
  else
    *result = (a2 + 6) & 7 | 0x80;
  return result;
}

uint64_t storeEnumTagSinglePayload for AdPolicyContentType.AdState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BA289F6C + 4 * byte_1BA2C926F[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BA289FA0 + 4 * byte_1BA2C926A[v4]))();
}

uint64_t sub_1BA289FA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA289FA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA289FB0);
  return result;
}

uint64_t sub_1BA289FBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA289FC4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BA289FC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA289FD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for AdPolicyContentType.EngagementBannerState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BA28A028 + 4 * byte_1BA2C9279[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BA28A05C + 4 * byte_1BA2C9274[v4]))();
}

uint64_t sub_1BA28A05C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA28A064(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA28A06CLL);
  return result;
}

uint64_t sub_1BA28A078(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA28A080);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BA28A084(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA28A08C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA28A098(uint64_t a1, uint64_t a2)
{
  assignWithTake for AdSegmentManager.ProviderContainer(a2, a1);
  return a2;
}

void sub_1BA28A0D4(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3();
    v4 = sub_1BA2C24BC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t dispatch thunk of DebugJournalSummaryViewRendererType.render(for:with:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

id sub_1BA28A13C(__int128 *a1, const void *a2, char *a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  int v17;
  uint64_t v18;
  void *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double Width;
  char **v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void **v33;
  void *v34;
  void *v35;
  double v36;
  double v37;
  id v38;
  id v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  void *v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v58;
  void *v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  char **v65;
  id v66;
  void *v67;
  id v68;
  void *v69;
  void *v70;
  id v71;
  id v72;
  void *v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  void **v77;
  void *v78;
  void *v79;
  double v80;
  double v81;
  id v82;
  void *v83;
  id v84;
  id v85;
  void *v86;
  void *v87;
  id v88;
  void *v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  double v93;
  id v94;
  id v95;
  void *v96;
  void *v97;
  id v98;
  void *v99;
  id v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  double v104;
  id v105;
  id v106;
  void *v107;
  void *v108;
  id v109;
  uint64_t v110;
  id v111;
  id v112;
  id v113;
  void *v114;
  void *v115;
  id v116;
  id v117;
  uint64_t v118;
  id v119;
  id v120;
  id v121;
  id v122;
  void *v123;
  void *v124;
  id v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  uint64_t v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  unint64_t v141;
  BOOL v142;
  BOOL v143;
  id v144;
  id v145;
  id v146;
  id v147;
  id v148;
  id v149;
  id v150;
  id v151;
  id v152;
  id v153;
  id v154;
  id v155;
  uint64_t v156;
  id v157;
  id v158;
  id v159;
  id v160;
  id v161;
  id v162;
  uint64_t v163;
  id v164;
  id v165;
  uint64_t v166;
  uint64_t v167;
  __int128 v168;
  uint64_t v169;
  uint64_t v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  _OWORD v184[2];
  __int128 v185;
  uint64_t v186;
  uint64_t v187;
  _BYTE v188[424];
  _BYTE v189[440];
  CGRect v190;
  CGRect v191;

  v4 = v3;
  v6 = a1[7];
  v177 = a1[6];
  v178 = v6;
  v179 = a1[8];
  v7 = a1[3];
  v173 = a1[2];
  v174 = v7;
  v8 = a1[5];
  v175 = a1[4];
  v176 = v8;
  v9 = a1[1];
  v171 = *a1;
  v172 = v9;
  sub_1BA249C78(a2, v188);
  v10 = (void *)objc_opt_self();
  v11 = objc_msgSend(v10, sel_systemBackgroundColor);
  objc_msgSend(a3, sel_setBackgroundColor_, v11);

  v12 = *(void **)&a3[OBJC_IVAR____TtC7NewsAds23DebugJournalSummaryView_topSeparator];
  v13 = objc_msgSend(v10, sel_separatorColor);
  objc_msgSend(v12, sel_setBackgroundColor_, v13);

  v14 = *(void **)&a3[OBJC_IVAR____TtC7NewsAds23DebugJournalSummaryView_bottomSeparator];
  v15 = objc_msgSend(v10, sel_separatorColor);
  objc_msgSend(v14, sel_setBackgroundColor_, v15);

  v16 = (void *)sub_1BA2C212C();
  objc_msgSend(a3, sel_setAccessibilityIdentifier_, v16);

  sub_1BA249C78(v188, v189);
  v17 = sub_1BA24FFF4((uint64_t)v189);
  if (v17)
  {
    if (v17 == 1)
    {
      v18 = nullsub_1(v189);
      objc_msgSend(a3, sel_setHidden_, 0);
      v19 = *(void **)&a3[OBJC_IVAR____TtC7NewsAds23DebugJournalSummaryView_statusIndicator];
      v20 = *(double *)(v18 + 32);
      v21 = *(double *)(v18 + 40);
      v22 = *(double *)(v18 + 48);
      v23 = *(double *)(v18 + 56);
      v190.origin.x = v20;
      v190.origin.y = v21;
      v190.size.width = v22;
      v190.size.height = v23;
      Width = CGRectGetWidth(v190);
      v180 = v172;
      v181 = v173;
      v182 = v174;
      v183 = v175;
      sub_1BA28BC7C((uint64_t)&v182, &v185);
      sub_1BA28BC7C((uint64_t)&v185, &v168);
      if (((unint64_t)v168 >> 62) > 1)
      {
        v138 = v169 | v170 | *((_QWORD *)&v168 + 1);
        v139 = v168 & 0xFFFFFFFFFFFFFFF7;
        if ((v168 & 0xFFFFFFFFFFFFFFF7) != 0x8000000000000000 || v138)
        {
          if (v139 != 0x8000000000000010 || v138)
          {
            if (v138)
              v142 = 0;
            else
              v142 = v139 == 0x8000000000000020;
            v25 = &selRef_redColor;
            if (v142)
              v25 = &selRef_greenColor;
          }
          else
          {
            v25 = &selRef_orangeColor;
          }
        }
        else
        {
          v25 = &selRef_darkGrayColor;
        }
      }
      else
      {
        *(_QWORD *)&v168 = v168 & 0x3FFFFFFFFFFFFFFFLL;
        v25 = &selRef_redColor;
      }
      v26 = objc_msgSend(v10, *v25);
      v164 = v10;
      v27 = objc_msgSend(v19, sel_layer);
      objc_msgSend(v27, sel_setCornerRadius_, Width * 0.5);

      objc_msgSend(v19, sel_setBackgroundColor_, v26);
      v28 = *(void **)&a3[OBJC_IVAR____TtC7NewsAds23DebugJournalSummaryView_status];
      objc_msgSend(v28, sel_setNumberOfLines_, 0);
      objc_msgSend(a3, sel_setFrame_, *(double *)v18, *(double *)(v18 + 8), *(double *)(v18 + 16), *(double *)(v18 + 24));
      objc_msgSend(v28, sel_setFrame_, *(double *)(v18 + 64), *(double *)(v18 + 72), *(double *)(v18 + 80), *(double *)(v18 + 88));
      objc_msgSend(v19, sel_setFrame_, v20, v21, v22, v23);
      v29 = *(void **)&a3[OBJC_IVAR____TtC7NewsAds23DebugJournalSummaryView_moreDetailsButton];
      objc_msgSend(v29, sel_setFrame_, *(double *)(v18 + 96), *(double *)(v18 + 104), *(double *)(v18 + 112), *(double *)(v18 + 120));
      objc_msgSend(v12, sel_setFrame_, *(double *)(v18 + 128), *(double *)(v18 + 136), *(double *)(v18 + 144), *(double *)(v18 + 152));
      objc_msgSend(v14, sel_setFrame_, *(double *)(v18 + 160), *(double *)(v18 + 168), *(double *)(v18 + 176), *(double *)(v18 + 184));
      v30 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 40));
      sub_1BA28BC7C((uint64_t)&v185, v184);
      JournalEntryStatus.shortDescription.getter();
      v31 = *v30;
      sub_1BA22053C(0, (unint64_t *)&qword_1EF27EC00, (uint64_t (*)(uint64_t))sub_1BA24D260, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v32 = swift_allocObject();
      v33 = (void **)MEMORY[0x1E0DC1138];
      *(_OWORD *)(v32 + 16) = xmmword_1BA2C37C0;
      v34 = *v33;
      *(_QWORD *)(v32 + 32) = *v33;
      v166 = v4;
      v35 = (void *)objc_opt_self();
      v36 = *(double *)(v31 + 16);
      v37 = *MEMORY[0x1E0DC1430];
      swift_bridgeObjectRetain();
      v38 = v34;
      v39 = objc_msgSend(v35, sel_systemFontOfSize_weight_, v36, v37);
      v40 = sub_1BA21DEE0(0, &qword_1EF27E880);
      *(_QWORD *)(v32 + 40) = v39;
      v41 = (void *)*MEMORY[0x1E0DC1140];
      *(_QWORD *)(v32 + 64) = v40;
      *(_QWORD *)(v32 + 72) = v41;
      v42 = v41;
      v43 = objc_msgSend(v164, sel_secondaryLabelColor);
      *(_QWORD *)(v32 + 104) = sub_1BA21DEE0(0, &qword_1EF27EC10);
      *(_QWORD *)(v32 + 80) = v43;
      sub_1BA265D04(v32);
      v44 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
      v45 = (void *)sub_1BA2C212C();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_1BA24E14C();
      v46 = (void *)sub_1BA2C20C0();
      swift_bridgeObjectRelease();
      v47 = objc_msgSend(v44, sel_initWithString_attributes_, v45, v46);
      swift_bridgeObjectRelease();

      objc_msgSend(v28, sel_setAttributedText_, v47);
      v48 = (void *)sub_1BA2C212C();
      v49 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v48);

      objc_msgSend(v29, sel_setImage_forState_, v49, 0);
      v50 = (void *)sub_1BA2C212C();
      objc_msgSend(v29, sel_setTitle_, v50);

      v51 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v52 = swift_allocObject();
      v53 = v175;
      *(_OWORD *)(v52 + 104) = v176;
      v54 = v178;
      *(_OWORD *)(v52 + 120) = v177;
      *(_OWORD *)(v52 + 136) = v54;
      *(_OWORD *)(v52 + 152) = v179;
      v55 = v171;
      *(_OWORD *)(v52 + 40) = v172;
      v56 = v174;
      *(_OWORD *)(v52 + 56) = v173;
      *(_OWORD *)(v52 + 72) = v56;
      *(_OWORD *)(v52 + 88) = v53;
      *(_QWORD *)(v52 + 16) = v166;
      *(_OWORD *)(v52 + 24) = v55;
      *(_QWORD *)(v52 + 168) = v51;
      swift_retain();
      sub_1BA243268((uint64_t)&v171);

      return (id)swift_release();
    }
    else
    {
      return objc_msgSend(a3, sel_setHidden_, 1);
    }
  }
  else
  {
    v58 = nullsub_1(v189);
    objc_msgSend(a3, sel_setHidden_, 0);
    v59 = *(void **)&a3[OBJC_IVAR____TtC7NewsAds23DebugJournalSummaryView_statusIndicator];
    v60 = *(double *)(v58 + 224);
    v61 = *(double *)(v58 + 232);
    v62 = *(double *)(v58 + 240);
    v63 = *(double *)(v58 + 248);
    v191.origin.x = v60;
    v191.origin.y = v61;
    v191.size.width = v62;
    v191.size.height = v63;
    v64 = CGRectGetWidth(v191);
    v180 = v172;
    v181 = v173;
    v182 = v174;
    v183 = v175;
    sub_1BA28BC7C((uint64_t)&v182, v184);
    sub_1BA28BC7C((uint64_t)v184, &v185);
    v154 = v14;
    v155 = v12;
    if (((unint64_t)v185 >> 62) > 1)
    {
      v140 = v186 | v187 | *((_QWORD *)&v185 + 1);
      v141 = v185 & 0xFFFFFFFFFFFFFFF7;
      if ((v185 & 0xFFFFFFFFFFFFFFF7) != 0x8000000000000000 || v140)
      {
        if (v141 != 0x8000000000000010 || v140)
        {
          if (v140)
            v143 = 0;
          else
            v143 = v141 == 0x8000000000000020;
          v65 = &selRef_redColor;
          if (v143)
            v65 = &selRef_greenColor;
        }
        else
        {
          v65 = &selRef_orangeColor;
        }
      }
      else
      {
        v65 = &selRef_darkGrayColor;
      }
    }
    else
    {
      *(_QWORD *)&v185 = v185 & 0x3FFFFFFFFFFFFFFFLL;
      v65 = &selRef_redColor;
    }
    v66 = objc_msgSend(v10, *v65);
    v67 = v59;
    v153 = v59;
    v68 = objc_msgSend(v59, sel_layer);
    objc_msgSend(v68, sel_setCornerRadius_, v64 * 0.5);

    objc_msgSend(v67, sel_setBackgroundColor_, v66);
    v69 = *(void **)&a3[OBJC_IVAR____TtC7NewsAds23DebugJournalSummaryView_contentIdentifier];
    v70 = *(void **)&a3[OBJC_IVAR____TtC7NewsAds23DebugJournalSummaryView_status];
    v71 = *(id *)&a3[OBJC_IVAR____TtC7NewsAds23DebugJournalSummaryView_placementIdentifier];
    v72 = v69;
    v162 = v70;
    v160 = v71;
    objc_msgSend(v71, sel_setNumberOfLines_, 0);
    v161 = v72;
    objc_msgSend(v72, sel_setNumberOfLines_, 0);
    objc_msgSend(v162, sel_setNumberOfLines_, 0);

    v73 = *(void **)&a3[OBJC_IVAR____TtC7NewsAds23DebugJournalSummaryView_placementIdentifierLabel];
    v152 = v73;
    v165 = v10;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 40));
    v74 = sub_1BA27A110();
    objc_msgSend(v73, sel_setAttributedText_, v74);

    v75 = *__swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 40));
    sub_1BA22053C(0, (unint64_t *)&qword_1EF27EC00, (uint64_t (*)(uint64_t))sub_1BA24D260, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v76 = swift_allocObject();
    v77 = (void **)MEMORY[0x1E0DC1138];
    *(_OWORD *)(v76 + 16) = xmmword_1BA2C37C0;
    v78 = *v77;
    *(_QWORD *)(v76 + 32) = *v77;
    v167 = v4;
    v79 = (void *)objc_opt_self();
    v80 = *(double *)(v75 + 16);
    v81 = *MEMORY[0x1E0DC1430];
    swift_bridgeObjectRetain();
    v157 = v78;
    v82 = objc_msgSend(v79, sel_systemFontOfSize_weight_, v80, v81);
    v156 = sub_1BA21DEE0(0, &qword_1EF27E880);
    *(_QWORD *)(v76 + 40) = v82;
    v83 = (void *)*MEMORY[0x1E0DC1140];
    *(_QWORD *)(v76 + 64) = v156;
    *(_QWORD *)(v76 + 72) = v83;
    v149 = v83;
    v84 = objc_msgSend(v10, sel_secondaryLabelColor);
    v163 = sub_1BA21DEE0(0, &qword_1EF27EC10);
    *(_QWORD *)(v76 + 104) = v163;
    *(_QWORD *)(v76 + 80) = v84;
    sub_1BA265D04(v76);
    v85 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v86 = (void *)sub_1BA2C212C();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1BA24E14C();
    v87 = (void *)sub_1BA2C20C0();
    swift_bridgeObjectRelease();
    v88 = objc_msgSend(v85, sel_initWithString_attributes_, v86, v87);

    objc_msgSend(v160, sel_setAttributedText_, v88);
    v89 = *(void **)&a3[OBJC_IVAR____TtC7NewsAds23DebugJournalSummaryView_contentIdentifierLabel];
    v151 = v89;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 40));
    v90 = sub_1BA27A110();
    objc_msgSend(v89, sel_setAttributedText_, v90);

    sub_1BA22068C(v4 + 16, (uint64_t)&v168);
    v91 = *__swift_project_boxed_opaque_existential_1(&v168, v170);
    v92 = swift_allocObject();
    *(_OWORD *)(v92 + 16) = xmmword_1BA2C37C0;
    *(_QWORD *)(v92 + 32) = v157;
    v93 = *(double *)(v91 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v146 = v157;
    *(_QWORD *)(v92 + 40) = objc_msgSend(v79, sel_systemFontOfSize_weight_, v93, v81);
    *(_QWORD *)(v92 + 64) = v156;
    *(_QWORD *)(v92 + 72) = v149;
    v158 = v149;
    v94 = objc_msgSend(v10, sel_secondaryLabelColor);
    *(_QWORD *)(v92 + 104) = v163;
    *(_QWORD *)(v92 + 80) = v94;
    sub_1BA265D04(v92);
    v95 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v96 = (void *)sub_1BA2C212C();
    swift_bridgeObjectRelease();
    v97 = (void *)sub_1BA2C20C0();
    swift_bridgeObjectRelease();
    v98 = objc_msgSend(v95, sel_initWithString_attributes_, v96, v97);
    swift_bridgeObjectRelease();

    objc_msgSend(v161, sel_setAttributedText_, v98);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v168);
    v99 = *(void **)&a3[OBJC_IVAR____TtC7NewsAds23DebugJournalSummaryView_statusLabel];
    v150 = v99;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 40));
    v100 = sub_1BA27A110();
    objc_msgSend(v99, sel_setAttributedText_, v100);

    v101 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 40));
    sub_1BA28BC7C((uint64_t)v184, &v168);
    JournalEntryStatus.shortDescription.getter();
    v102 = *v101;
    v103 = swift_allocObject();
    *(_OWORD *)(v103 + 16) = xmmword_1BA2C37C0;
    *(_QWORD *)(v103 + 32) = v146;
    v104 = *(double *)(v102 + 16);
    swift_bridgeObjectRetain();
    v147 = v146;
    *(_QWORD *)(v103 + 40) = objc_msgSend(v79, sel_systemFontOfSize_weight_, v104, v81);
    *(_QWORD *)(v103 + 64) = v156;
    *(_QWORD *)(v103 + 72) = v158;
    v144 = v158;
    v105 = objc_msgSend(v165, sel_secondaryLabelColor);
    *(_QWORD *)(v103 + 104) = v163;
    *(_QWORD *)(v103 + 80) = v105;
    sub_1BA265D04(v103);
    v106 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v107 = (void *)sub_1BA2C212C();
    swift_bridgeObjectRelease();
    v108 = (void *)sub_1BA2C20C0();
    swift_bridgeObjectRelease();
    v109 = objc_msgSend(v106, sel_initWithString_attributes_, v107, v108);
    swift_bridgeObjectRelease();

    objc_msgSend(v162, sel_setAttributedText_, v109);
    v159 = *(id *)&a3[OBJC_IVAR____TtC7NewsAds23DebugJournalSummaryView_moreDetailsButton];
    objc_msgSend(v159, sel_setImage_forState_, 0, 0);
    v110 = swift_allocObject();
    *(_OWORD *)(v110 + 16) = xmmword_1BA2C37C0;
    *(_QWORD *)(v110 + 32) = v147;
    v148 = v147;
    objc_msgSend(v79, sel_buttonFontSize);
    *(_QWORD *)(v110 + 40) = objc_msgSend(v79, sel_systemFontOfSize_);
    *(_QWORD *)(v110 + 64) = v156;
    *(_QWORD *)(v110 + 72) = v144;
    v111 = v144;
    v112 = objc_msgSend(v165, sel_systemBlueColor);
    *(_QWORD *)(v110 + 104) = v163;
    *(_QWORD *)(v110 + 80) = v112;
    sub_1BA265D04(v110);
    v113 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v114 = (void *)sub_1BA2C212C();
    v115 = (void *)sub_1BA2C20C0();
    swift_bridgeObjectRelease();
    v116 = objc_msgSend(v113, sel_initWithString_attributes_, v114, v115);

    objc_msgSend(v159, sel_setAttributedTitle_forState_, v116, 0);
    v117 = sub_1BA27A348(0x7465642077656956, 0xEC000000736C6961, 1);
    objc_msgSend(v159, (SEL)0x1E720ECC8, v117, 1);

    v145 = *(id *)&a3[OBJC_IVAR____TtC7NewsAds23DebugJournalSummaryView_reportIssueButton];
    v118 = swift_allocObject();
    *(_OWORD *)(v118 + 16) = xmmword_1BA2C37C0;
    *(_QWORD *)(v118 + 32) = v148;
    v119 = v148;
    objc_msgSend(v79, sel_buttonFontSize);
    *(_QWORD *)(v118 + 40) = objc_msgSend(v79, sel_systemFontOfSize_);
    *(_QWORD *)(v118 + 64) = v156;
    *(_QWORD *)(v118 + 72) = v111;
    v120 = v111;
    v121 = objc_msgSend(v165, sel_systemBlueColor);
    *(_QWORD *)(v118 + 104) = v163;
    *(_QWORD *)(v118 + 80) = v121;
    sub_1BA265D04(v118);
    v122 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v123 = (void *)sub_1BA2C212C();
    v124 = (void *)sub_1BA2C20C0();
    swift_bridgeObjectRelease();
    v125 = objc_msgSend(v122, sel_initWithString_attributes_, v123, v124);

    objc_msgSend(v145, sel_setAttributedTitle_forState_, v125, 0);
    v126 = sub_1BA27A348(0x692074726F706552, 0xEC00000065757373, 1);
    objc_msgSend(v145, sel_setAttributedTitle_forState_, v126, 1);

    objc_msgSend(a3, sel_setFrame_, *(double *)v58, *(double *)(v58 + 8), *(double *)(v58 + 16), *(double *)(v58 + 24));
    objc_msgSend(v152, sel_setFrame_, *(double *)(v58 + 32), *(double *)(v58 + 40), *(double *)(v58 + 48), *(double *)(v58 + 56));
    objc_msgSend(v160, sel_setFrame_, *(double *)(v58 + 64), *(double *)(v58 + 72), *(double *)(v58 + 80), *(double *)(v58 + 88));
    objc_msgSend(v151, sel_setFrame_, *(double *)(v58 + 96), *(double *)(v58 + 104), *(double *)(v58 + 112), *(double *)(v58 + 120));
    objc_msgSend(v161, sel_setFrame_, *(double *)(v58 + 128), *(double *)(v58 + 136), *(double *)(v58 + 144), *(double *)(v58 + 152));
    objc_msgSend(v150, sel_setFrame_, *(double *)(v58 + 160), *(double *)(v58 + 168), *(double *)(v58 + 176), *(double *)(v58 + 184));
    objc_msgSend(v162, sel_setFrame_, *(double *)(v58 + 192), *(double *)(v58 + 200), *(double *)(v58 + 208), *(double *)(v58 + 216));
    objc_msgSend(v153, sel_setFrame_, v60, v61, v62, v63);
    objc_msgSend(v159, sel_setFrame_, *(double *)(v58 + 256), *(double *)(v58 + 264), *(double *)(v58 + 272), *(double *)(v58 + 280));
    objc_msgSend(*(id *)&a3[OBJC_IVAR____TtC7NewsAds23DebugJournalSummaryView_buttonSeparator], sel_setFrame_, *(double *)(v58 + 288), *(double *)(v58 + 296), *(double *)(v58 + 304), *(double *)(v58 + 312));
    objc_msgSend(v145, sel_setFrame_, *(double *)(v58 + 320), *(double *)(v58 + 328), *(double *)(v58 + 336), *(double *)(v58 + 344));
    objc_msgSend(v155, sel_setFrame_, *(double *)(v58 + 352), *(double *)(v58 + 360), *(double *)(v58 + 368), *(double *)(v58 + 376));
    objc_msgSend(v154, sel_setFrame_, *(double *)(v58 + 384), *(double *)(v58 + 392), *(double *)(v58 + 400), *(double *)(v58 + 408));

    v127 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v128 = swift_allocObject();
    v129 = v175;
    *(_OWORD *)(v128 + 104) = v176;
    v130 = v178;
    *(_OWORD *)(v128 + 120) = v177;
    *(_OWORD *)(v128 + 136) = v130;
    *(_OWORD *)(v128 + 152) = v179;
    v131 = v171;
    *(_OWORD *)(v128 + 40) = v172;
    v132 = v174;
    *(_OWORD *)(v128 + 56) = v173;
    *(_OWORD *)(v128 + 72) = v132;
    *(_OWORD *)(v128 + 88) = v129;
    *(_QWORD *)(v128 + 16) = v167;
    *(_OWORD *)(v128 + 24) = v131;
    *(_QWORD *)(v128 + 168) = v127;
    swift_retain();
    sub_1BA243268((uint64_t)&v171);

    swift_release();
    v133 = swift_allocObject();
    v134 = v175;
    *(_OWORD *)(v133 + 104) = v176;
    v135 = v178;
    *(_OWORD *)(v133 + 120) = v177;
    *(_OWORD *)(v133 + 136) = v135;
    *(_OWORD *)(v133 + 152) = v179;
    v136 = v171;
    *(_OWORD *)(v133 + 40) = v172;
    v137 = v174;
    *(_OWORD *)(v133 + 56) = v173;
    *(_OWORD *)(v133 + 72) = v137;
    *(_OWORD *)(v133 + 88) = v134;
    *(_QWORD *)(v133 + 16) = v167;
    *(_OWORD *)(v133 + 24) = v136;
    swift_retain();
    sub_1BA243268((uint64_t)&v171);

    return (id)swift_release();
  }
}

uint64_t sub_1BA28B638(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  char v42;

  v30 = sub_1BA2C1F40();
  v29 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BA2C1EEC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA22053C(0, (unint64_t *)&unk_1EF280570, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB74E0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v28 - v12;
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC2A8];
  sub_1BA22053C(0, &qword_1EF27F898, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC2A8], v10);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v28 - v16;
  v18 = *(_QWORD *)(a1 + 56);
  v28[2] = *(_QWORD *)(a1 + 64);
  v28[1] = v18;
  v28[0] = swift_getObjectType();
  sub_1BA22053C(0, &qword_1EF280580, v14, MEMORY[0x1E0DBC428]);
  sub_1BA2C1FD0();
  if (qword_1EF27E388 != -1)
    swift_once();
  v19 = sub_1BA2C1EC8();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1EF27EE80);
  v21 = *(_QWORD *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v13, v20, v19);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v13, 0, 1, v19);
  v22 = a2[7];
  v37 = a2[6];
  v38 = v22;
  v39 = a2[8];
  v23 = a2[3];
  v33 = a2[2];
  v34 = v23;
  v24 = a2[5];
  v35 = a2[4];
  v36 = v24;
  v25 = *a2;
  v32 = a2[1];
  v31 = v25;
  sub_1BA2A7070();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DB7E20], v6);
  sub_1BA2C1F64();
  v26 = sub_1BA2C1F70();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v17, 0, 1, v26);
  (*(void (**)(char *, _QWORD, uint64_t))(v29 + 104))(v5, *MEMORY[0x1E0DB9EF8], v30);
  *((_QWORD *)&v32 + 1) = &type metadata for Tracker;
  *(_QWORD *)&v33 = sub_1BA28BE08();
  v40 = 0u;
  v41 = 0u;
  v42 = 1;
  sub_1BA2C1F34();
  swift_allocObject();
  sub_1BA2C1F28();
  sub_1BA2C1EF8();
  sub_1BA28BE4C((uint64_t)v17);
  swift_release();
  return swift_release();
}

uint64_t sub_1BA28B9FC(uint64_t a1, __int128 *a2, uint64_t a3)
{
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD v14[10];
  _BYTE v15[192];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _OWORD v25[10];

  v5 = a2[7];
  v22 = a2[6];
  v23 = v5;
  v24 = a2[8];
  v6 = a2[3];
  v18 = a2[2];
  v19 = v6;
  v7 = a2[5];
  v20 = a2[4];
  v21 = v7;
  v8 = a2[1];
  v16 = *a2;
  v17 = v8;
  v9 = sub_1BA2C1F40();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED5B2E60 != -1)
    swift_once();
  v25[6] = v22;
  v25[7] = v23;
  v25[8] = v24;
  v25[2] = v18;
  v25[3] = v19;
  v25[4] = v20;
  v25[5] = v21;
  v25[0] = v16;
  v25[1] = v17;
  nullsub_1(v25);
  sub_1BA249568((uint64_t)v25, (uint64_t)v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DB9EF8], v9);
  v14[8] = &type metadata for Tracker;
  v14[9] = sub_1BA28BE08();
  swift_beginAccess();
  MEMORY[0x1BCCD9544](a3 + 16);
  swift_getObjectType();
  memset(&v15[144], 0, 32);
  v15[176] = 1;
  sub_1BA2C1F34();
  swift_allocObject();
  sub_1BA243268((uint64_t)a2);
  sub_1BA2C1F28();
  sub_1BA2C1EF8();
  sub_1BA249CB4((uint64_t)a2);
  return swift_release();
}

uint64_t sub_1BA28BC30()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

id sub_1BA28BC5C(__int128 *a1, const void *a2, char *a3)
{
  return sub_1BA28A13C(a1, a2, a3);
}

_OWORD *sub_1BA28BC7C(uint64_t a1, _OWORD *a2)
{
  __swift_memcpy32_8(a2, a1);
  return a2;
}

uint64_t sub_1BA28BCB8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_0()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA22C4F0(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA28BD64()
{
  uint64_t v0;

  return sub_1BA28B9FC(*(_QWORD *)(v0 + 16), (__int128 *)(v0 + 24), *(_QWORD *)(v0 + 168));
}

uint64_t sub_1BA28BD84()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA22C4F0(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA28BDFC()
{
  uint64_t v0;

  return sub_1BA28B638(*(_QWORD *)(v0 + 16), (__int128 *)(v0 + 24));
}

unint64_t sub_1BA28BE08()
{
  unint64_t result;

  result = qword_1EF27F8A0;
  if (!qword_1EF27F8A0)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C94C8, &type metadata for Tracker);
    atomic_store(result, (unint64_t *)&qword_1EF27F8A0);
  }
  return result;
}

uint64_t sub_1BA28BE4C(uint64_t a1)
{
  uint64_t v2;

  sub_1BA22053C(0, &qword_1EF27F898, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC2A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for Tracker()
{
  return &type metadata for Tracker;
}

void NativeAdContext.appData.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t NativeAdContext.userData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_bridgeObjectRetain();
}

void NativeAdContext.placementData.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t NativeAdContext.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = v1[3];
  v3 = v1[4];
  v4 = v1[5];
  v5 = v1[6];
  v6 = v1[7];
  v7 = v1[8];
  v8 = v1[9];
  v9 = v1[10];
  v10 = v1[11];
  v11 = v1[12];
  v12 = v1[13];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  return sub_1BA282048(v2, v3);
}

uint64_t NativeAdContext.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v1 + 120);
  v3 = *(_QWORD *)(v1 + 128);
  v4 = *(_QWORD *)(v1 + 136);
  v5 = *(_QWORD *)(v1 + 144);
  v6 = *(_QWORD *)(v1 + 168);
  v7 = *(_QWORD *)(v1 + 176);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 112);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 152);
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t NativeAdContext.leadingGroupData.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v1[23];
  v3 = v1[24];
  v4 = v1[25];
  v5 = v1[26];
  v6 = v1[27];
  v7 = v1[28];
  v8 = v1[29];
  v9 = v1[30];
  v10 = v1[31];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  return sub_1BA2820FC(v2, v3);
}

uint64_t NativeAdContext.trailingGroupData.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v1[32];
  v3 = v1[33];
  v4 = v1[34];
  v5 = v1[35];
  v6 = v1[36];
  v7 = v1[37];
  v8 = v1[38];
  v9 = v1[39];
  v10 = v1[40];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  return sub_1BA2820FC(v2, v3);
}

uint64_t NativeAdContext.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int16 v3;

  v2 = *(_QWORD *)(v1 + 336);
  v3 = *(_WORD *)(v1 + 344);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 328);
  *(_QWORD *)(a1 + 8) = v2;
  *(_WORD *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t NativeAdContext.sectionData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 360);
  *a1 = *(_QWORD *)(v1 + 352);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t NativeAdContext.articleData.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = v1[46];
  v3 = v1[47];
  v4 = v1[48];
  v5 = v1[49];
  v6 = v1[50];
  v7 = v1[51];
  v8 = v1[52];
  v9 = v1[53];
  v10 = v1[54];
  v11 = v1[55];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  return sub_1BA28C09C(v2, v3);
}

uint64_t sub_1BA28C09C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t NativeAdContext.channelData.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v1[56];
  v3 = v1[57];
  v4 = v1[58];
  v5 = v1[59];
  v6 = v1[60];
  v7 = v1[61];
  v8 = v1[62];
  v9 = v1[63];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  return sub_1BA28C130(v2, v3);
}

uint64_t sub_1BA28C130(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void NativeAdContext.referralData.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 512);
}

_QWORD *NativeAdContext.init(provider:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  __int16 v66;
  uint64_t v67;
  char v68;
  void *__dst;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void (*v120)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v128;
  _BYTE __src[513];
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  __int16 v173;
  int v174;
  __int16 v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char v196;
  char v197;
  int v198;
  __int16 v199;
  _BYTE v200[7];
  _DWORD v201[5];
  uint64_t v202;

  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  AdContextDataProviding.data<A>(for:)((uint64_t)&type metadata for AppAdData, v5, (uint64_t)&type metadata for AppAdData, v6);
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return (_QWORD *)v111;
  }
  else
  {
    v7 = a1[3];
    v8 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v7);
    AdContextDataProviding.data<A>(for:)((uint64_t)&type metadata for UserAdData, v7, (uint64_t)&type metadata for UserAdData, v8);
    v9 = a1[3];
    v10 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v9);
    swift_bridgeObjectRetain();
    AdContextDataProviding.data<A>(for:)((uint64_t)&type metadata for FeedGroupAdData, v9, (uint64_t)&type metadata for FeedGroupAdData, v10);
    v110 = v130;
    v73 = v130;
    v11 = v133;
    v12 = v134;
    v71 = v135;
    v72 = v130;
    __dst = a2;
    v70 = v136;
    v13 = v137;
    v14 = v138;
    v15 = a1[3];
    v16 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v15);
    memset(__src, 0, 17);
    v127 = *(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v16 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v109 = v131;
    swift_bridgeObjectRetain();
    v202 = v132;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v127(&v130, &type metadata for FeedGroupAdData, __src, &type metadata for FeedGroupAdData, v15, v16);
    v107 = v11;
    v108 = v13;
    v105 = v14;
    v106 = v12;
    v17 = v130;
    v18 = v131;
    v128 = v132;
    v19 = v133;
    v20 = v134;
    v21 = v135;
    v103 = v136;
    v104 = v137;
    v22 = v138;
    v23 = a1[3];
    v24 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v23);
    *(_OWORD *)__src = xmmword_1BA2C6960;
    __src[16] = 0;
    v120 = *(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v24 + 16);
    v100 = v17;
    v101 = v19;
    v102 = v20;
    v126 = v21;
    sub_1BA2820FC(v17, v18);
    v120(&v130, &type metadata for FeedGroupAdData, __src, &type metadata for FeedGroupAdData, v23, v24);
    v98 = v18;
    v99 = v22;
    v25 = v130;
    v26 = v132;
    v27 = v133;
    v95 = v131;
    v96 = v134;
    v28 = v135;
    v97 = v136;
    v29 = v137;
    v30 = v138;
    v31 = a1[3];
    v122 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v31);
    v91 = v25;
    v92 = v26;
    v93 = v27;
    v94 = v28;
    sub_1BA2820FC(v25, v95);
    AdContextDataProviding.data<A>(for:)((uint64_t)&type metadata for PlacementAdData, v31, (uint64_t)&type metadata for PlacementAdData, v122);
    v89 = v29;
    v90 = v30;
    LOBYTE(v27) = v130;
    v32 = a1[3];
    v33 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v32);
    AdContextDataProviding.dataIfPresent<A>(for:)((uint64_t)&type metadata for FeedAdData, v32, (uint64_t)&type metadata for FeedAdData, v33);
    v68 = v27;
    v87 = v131;
    v88 = v130;
    v34 = v132;
    v35 = v133;
    v84 = v135;
    v36 = v136;
    v85 = v137;
    v86 = v134;
    v37 = v138;
    v38 = v139;
    v39 = v140;
    v40 = a1[3];
    v123 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v40);
    v80 = v38;
    v81 = v39;
    v78 = v36;
    v79 = v37;
    v82 = v34;
    v83 = v35;
    sub_1BA282048(v88, v87);
    AdContextDataProviding.dataIfPresent<A>(for:)((uint64_t)&type metadata for IssueAdData, v40, (uint64_t)&type metadata for IssueAdData, v123);
    v41 = v130;
    v42 = v131;
    LOWORD(v38) = v132;
    v43 = a1[3];
    v44 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v43);
    swift_bridgeObjectRetain();
    AdContextDataProviding.dataIfPresent<A>(for:)((uint64_t)&type metadata for SectionAdData, v43, (uint64_t)&type metadata for SectionAdData, v44);
    v77 = v42;
    v45 = v130;
    v46 = v131;
    v47 = a1[3];
    v124 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v47);
    swift_bridgeObjectRetain();
    AdContextDataProviding.dataIfPresent<A>(for:)((uint64_t)&type metadata for ArticleAdData, v47, (uint64_t)&type metadata for ArticleAdData, v124);
    v76 = v46;
    v65 = v45;
    v66 = v38;
    v67 = v41;
    v48 = v130;
    v118 = v131;
    v119 = v132;
    v121 = v133;
    v125 = v134;
    v49 = v135;
    v50 = v136;
    v51 = v137;
    v52 = v138;
    v53 = v139;
    v54 = a1[3];
    v74 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v54);
    v116 = v52;
    v117 = v53;
    v112 = v48;
    v113 = v49;
    v114 = v50;
    v115 = v51;
    sub_1BA28C09C(v48, v118);
    AdContextDataProviding.dataIfPresent<A>(for:)((uint64_t)&type metadata for ChannelAdData, v54, (uint64_t)&type metadata for ChannelAdData, v74);
    v75 = v130;
    v55 = v131;
    v56 = v132;
    v57 = v133;
    v58 = v134;
    v59 = v135;
    v60 = v136;
    v61 = v137;
    v62 = a1[3];
    v64 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v62);
    sub_1BA28C130(v75, v55);
    AdContextDataProviding.dataIfPresent<A>(for:)((uint64_t)&type metadata for ReferralAdData, v62, (uint64_t)&type metadata for ReferralAdData, v64);
    LOBYTE(v64) = v197;
    __src[0] = v73;
    *(_QWORD *)&__src[8] = v110;
    __src[16] = v68;
    *(_QWORD *)&__src[24] = v88;
    *(_QWORD *)&__src[32] = v87;
    *(_QWORD *)&__src[40] = v82;
    *(_QWORD *)&__src[48] = v83;
    *(_QWORD *)&__src[56] = v86;
    *(_QWORD *)&__src[64] = v84;
    *(_QWORD *)&__src[72] = v78;
    *(_QWORD *)&__src[80] = v85;
    *(_QWORD *)&__src[88] = v79;
    *(_QWORD *)&__src[96] = v80;
    *(_QWORD *)&__src[104] = v81;
    *(_QWORD *)&__src[112] = v72;
    *(_QWORD *)&__src[120] = v109;
    *(_QWORD *)&__src[128] = v202;
    *(_QWORD *)&__src[136] = v107;
    *(_QWORD *)&__src[144] = v106;
    *(_QWORD *)&__src[152] = v71;
    *(_QWORD *)&__src[160] = v70;
    *(_QWORD *)&__src[168] = v108;
    *(_QWORD *)&__src[176] = v105;
    *(_QWORD *)&__src[184] = v100;
    *(_QWORD *)&__src[192] = v98;
    *(_QWORD *)&__src[200] = v128;
    *(_QWORD *)&__src[208] = v101;
    *(_QWORD *)&__src[216] = v102;
    *(_QWORD *)&__src[224] = v126;
    *(_QWORD *)&__src[232] = v103;
    *(_QWORD *)&__src[240] = v104;
    *(_QWORD *)&__src[248] = v99;
    *(_QWORD *)&__src[256] = v91;
    *(_QWORD *)&__src[264] = v95;
    *(_QWORD *)&__src[272] = v92;
    *(_QWORD *)&__src[280] = v93;
    *(_QWORD *)&__src[288] = v96;
    *(_QWORD *)&__src[296] = v94;
    *(_QWORD *)&__src[304] = v97;
    *(_QWORD *)&__src[312] = v89;
    *(_QWORD *)&__src[320] = v90;
    *(_QWORD *)&__src[328] = v67;
    *(_QWORD *)&__src[336] = v77;
    *(_WORD *)&__src[344] = v66;
    *(_QWORD *)&__src[352] = v65;
    *(_QWORD *)&__src[360] = v76;
    *(_QWORD *)&__src[368] = v112;
    *(_QWORD *)&__src[376] = v118;
    *(_QWORD *)&__src[384] = v119;
    *(_QWORD *)&__src[392] = v121;
    *(_QWORD *)&__src[400] = v125;
    *(_QWORD *)&__src[408] = v113;
    *(_QWORD *)&__src[416] = v114;
    *(_QWORD *)&__src[424] = v115;
    *(_QWORD *)&__src[432] = v116;
    *(_QWORD *)&__src[440] = v117;
    *(_QWORD *)&__src[448] = v75;
    *(_QWORD *)&__src[456] = v55;
    *(_QWORD *)&__src[464] = v56;
    *(_QWORD *)&__src[472] = v57;
    *(_QWORD *)&__src[480] = v58;
    *(_QWORD *)&__src[488] = v59;
    *(_QWORD *)&__src[496] = v60;
    *(_QWORD *)&__src[504] = v61;
    __src[512] = v197;
    sub_1BA28D5B8(__src);
    sub_1BA28D4F8(v75, v55);
    sub_1BA28D548(v112, v118);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA283218(v91, v95);
    sub_1BA283218(v100, v98);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA283288(v88, v87);
    swift_bridgeObjectRelease();
    memcpy(__dst, __src, 0x201uLL);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    LOBYTE(v130) = v73;
    v131 = v110;
    LOBYTE(v132) = v68;
    v133 = v88;
    v134 = v87;
    v135 = v82;
    v136 = v83;
    v137 = v86;
    v138 = v84;
    v139 = v78;
    v140 = v85;
    v141 = v79;
    v142 = v80;
    v143 = v81;
    v144 = v72;
    v145 = v109;
    v146 = v202;
    v147 = v107;
    v148 = v106;
    v149 = v71;
    v150 = v70;
    v151 = v108;
    v152 = v105;
    v153 = v100;
    v154 = v98;
    v155 = v128;
    v156 = v101;
    v157 = v102;
    v158 = v126;
    v159 = v103;
    v160 = v104;
    v161 = v99;
    v162 = v91;
    v163 = v95;
    v164 = v92;
    v165 = v93;
    v166 = v96;
    *(_DWORD *)((char *)&v130 + 1) = v201[0];
    HIDWORD(v130) = *(_DWORD *)((char *)v201 + 3);
    *(_DWORD *)((char *)&v132 + 1) = *(_DWORD *)v200;
    HIDWORD(v132) = *(_DWORD *)&v200[3];
    v167 = v94;
    v168 = v97;
    v169 = v89;
    v170 = v90;
    v171 = v67;
    v172 = v77;
    v173 = v66;
    v174 = v198;
    v175 = v199;
    v176 = v65;
    v177 = v76;
    v178 = v112;
    v179 = v118;
    v180 = v119;
    v181 = v121;
    v182 = v125;
    v183 = v113;
    v184 = v114;
    v185 = v115;
    v186 = v116;
    v187 = v117;
    v188 = v75;
    v189 = v55;
    v190 = v56;
    v191 = v57;
    v192 = v58;
    v193 = v59;
    v194 = v60;
    v195 = v61;
    v196 = v64;
    return sub_1BA28D814(&v130);
  }
}

uint64_t sub_1BA28D4F8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BA28D548(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_1BA28D5B8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = a1[3];
  v3 = a1[4];
  v5 = a1[24];
  v6 = a1[23];
  v7 = a1[33];
  v8 = a1[32];
  v9 = a1[47];
  v10 = a1[46];
  v11 = a1[57];
  v12 = a1[56];
  swift_bridgeObjectRetain();
  sub_1BA282048(v2, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA2820FC(v6, v5);
  sub_1BA2820FC(v8, v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA28C09C(v10, v9);
  sub_1BA28C130(v12, v11);
  return a1;
}

_QWORD *sub_1BA28D814(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = a1[3];
  v3 = a1[4];
  v5 = a1[24];
  v6 = a1[23];
  v7 = a1[33];
  v8 = a1[32];
  v9 = a1[47];
  v10 = a1[46];
  v11 = a1[57];
  v12 = a1[56];
  swift_bridgeObjectRelease();
  sub_1BA283288(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA283218(v6, v5);
  sub_1BA283218(v8, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA28D548(v10, v9);
  sub_1BA28D4F8(v12, v11);
  return a1;
}

uint64_t sub_1BA28DA70(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA28DAA4 + 4 * byte_1BA2C94E8[a1]))(0x61746144707061, 0xE700000000000000);
}

uint64_t sub_1BA28DAA4()
{
  return 0x6174614472657375;
}

uint64_t sub_1BA28DAF0()
{
  return 0x74614470756F7267;
}

uint64_t sub_1BA28DB58()
{
  return 0x446E6F6974636573;
}

uint64_t sub_1BA28DBA0()
{
  return 0x6C61727265666572;
}

uint64_t sub_1BA28DBC0()
{
  unsigned __int8 *v0;

  return sub_1BA28DA70(*v0);
}

uint64_t sub_1BA28DBC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA291BF4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BA28DBEC(_BYTE *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_1BA28DBF8()
{
  sub_1BA28E4BC();
  return sub_1BA2C275C();
}

uint64_t sub_1BA28DC20()
{
  sub_1BA28E4BC();
  return sub_1BA2C2768();
}

uint64_t NativeAdContext.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  char v87;

  sub_1BA28F920(0, &qword_1EF27F8A8, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v19 - v6;
  LODWORD(v75) = *v1;
  v8 = *((_QWORD *)v1 + 1);
  v86 = v1[16];
  v73 = *((_QWORD *)v1 + 3);
  v74 = v8;
  v72 = *((_QWORD *)v1 + 4);
  v62 = *((_QWORD *)v1 + 5);
  v9 = *((_QWORD *)v1 + 6);
  v69 = *((_QWORD *)v1 + 7);
  v70 = v9;
  v10 = *((_QWORD *)v1 + 8);
  v67 = *((_QWORD *)v1 + 9);
  v68 = v10;
  v66 = *((_QWORD *)v1 + 10);
  v65 = *((_QWORD *)v1 + 11);
  v64 = *((_QWORD *)v1 + 12);
  v63 = *((_QWORD *)v1 + 13);
  v55 = *((_QWORD *)v1 + 14);
  v61 = *(_OWORD *)(v1 + 120);
  v60 = *(_OWORD *)(v1 + 136);
  v56 = *((_QWORD *)v1 + 19);
  v57 = *((_QWORD *)v1 + 20);
  v59 = *((_QWORD *)v1 + 21);
  v58 = *((_QWORD *)v1 + 22);
  v47 = *((_QWORD *)v1 + 23);
  v48 = *((_OWORD *)v1 + 12);
  v54 = *((_QWORD *)v1 + 26);
  v53 = *((_QWORD *)v1 + 27);
  v52 = *((_QWORD *)v1 + 28);
  v51 = *((_QWORD *)v1 + 29);
  v50 = *((_QWORD *)v1 + 30);
  v49 = *((_QWORD *)v1 + 31);
  v39 = *((_QWORD *)v1 + 32);
  v40 = *(_OWORD *)(v1 + 264);
  v46 = *((_QWORD *)v1 + 35);
  v45 = *((_QWORD *)v1 + 36);
  v44 = *((_QWORD *)v1 + 37);
  v43 = *((_QWORD *)v1 + 38);
  v42 = *((_QWORD *)v1 + 39);
  v41 = *((_QWORD *)v1 + 40);
  v36 = *((_QWORD *)v1 + 41);
  v37 = *((_QWORD *)v1 + 42);
  v38 = *((unsigned __int16 *)v1 + 172);
  v34 = *((_QWORD *)v1 + 44);
  v35 = *((_QWORD *)v1 + 45);
  v24 = *((_QWORD *)v1 + 46);
  v25 = *((_QWORD *)v1 + 47);
  v33 = *((_QWORD *)v1 + 48);
  v32 = *((_QWORD *)v1 + 49);
  v31 = *((_QWORD *)v1 + 50);
  v30 = *((_QWORD *)v1 + 51);
  v29 = *((_QWORD *)v1 + 52);
  v28 = *((_QWORD *)v1 + 53);
  v27 = *((_QWORD *)v1 + 54);
  v26 = *((_QWORD *)v1 + 55);
  v71 = *((_QWORD *)v1 + 56);
  v19 = *(_OWORD *)(v1 + 456);
  v23 = *((_QWORD *)v1 + 59);
  v22 = *((_QWORD *)v1 + 60);
  v21 = *((_QWORD *)v1 + 61);
  v11 = *((_QWORD *)v1 + 63);
  v20 = *((_QWORD *)v1 + 62);
  v12 = v1[512];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA28E4BC();
  sub_1BA2C2750();
  LOBYTE(v77) = v75;
  v87 = 0;
  sub_1BA234CD4();
  v13 = v76;
  sub_1BA2C2684();
  if (v13)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v14 = v86;
  v16 = v72;
  v15 = v73;
  v76 = v11;
  v17 = v71;
  v77 = v74;
  v87 = 1;
  sub_1BA236AC4();
  sub_1BA2C2684();
  LOBYTE(v77) = v14;
  v87 = 2;
  sub_1BA23D110();
  sub_1BA2C2684();
  v75 = v5;
  v77 = v15;
  *(_QWORD *)&v78 = v16;
  *((_QWORD *)&v78 + 1) = v62;
  *(_QWORD *)&v79 = v70;
  *((_QWORD *)&v79 + 1) = v69;
  v80 = v68;
  v81 = v67;
  v82 = v66;
  v83 = v65;
  v84 = v64;
  v85 = v63;
  v87 = 3;
  sub_1BA236B90();
  sub_1BA2C2648();
  v77 = v55;
  v78 = v61;
  v79 = v60;
  v80 = v56;
  v81 = v57;
  v82 = v59;
  v83 = v58;
  v87 = 4;
  sub_1BA23667C();
  sub_1BA2C2684();
  v77 = v47;
  v78 = v48;
  *(_QWORD *)&v79 = v54;
  *((_QWORD *)&v79 + 1) = v53;
  v80 = v52;
  v81 = v51;
  v82 = v50;
  v83 = v49;
  v87 = 5;
  sub_1BA2C2648();
  v77 = v39;
  v78 = v40;
  *(_QWORD *)&v79 = v46;
  *((_QWORD *)&v79 + 1) = v45;
  v80 = v44;
  v81 = v43;
  v82 = v42;
  v83 = v41;
  v87 = 6;
  sub_1BA2C2648();
  v77 = v36;
  *(_QWORD *)&v78 = v37;
  WORD4(v78) = v38;
  v87 = 7;
  sub_1BA24623C();
  sub_1BA2C2648();
  v77 = v34;
  *(_QWORD *)&v78 = v35;
  v87 = 8;
  sub_1BA246280();
  sub_1BA2C2648();
  v77 = v24;
  *(_QWORD *)&v78 = v25;
  *((_QWORD *)&v78 + 1) = v33;
  *(_QWORD *)&v79 = v32;
  *((_QWORD *)&v79 + 1) = v31;
  v80 = v30;
  v81 = v29;
  v82 = v28;
  v83 = v27;
  v84 = v26;
  v87 = 9;
  sub_1BA240AE4();
  sub_1BA2C2648();
  v77 = v17;
  v78 = v19;
  *(_QWORD *)&v79 = v23;
  *((_QWORD *)&v79 + 1) = v22;
  v80 = v21;
  v81 = v20;
  v82 = v76;
  v87 = 10;
  sub_1BA2461F8();
  sub_1BA2C2648();
  LOBYTE(v77) = v12;
  v87 = 11;
  sub_1BA23D154();
  sub_1BA2C2648();
  return (*(uint64_t (**)(_QWORD, uint64_t))(v5 + 8))(0, v4);
}

unint64_t sub_1BA28E4BC()
{
  unint64_t result;

  result = qword_1EF27F8B0;
  if (!qword_1EF27F8B0)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C9698, &type metadata for NativeAdContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F8B0);
  }
  return result;
}

_QWORD *NativeAdContext.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  int v47;
  int v48;
  void *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  _QWORD v106[65];
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  __int16 v150;
  int v151;
  __int16 v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  char v173;
  char v174;
  unsigned __int8 v175;
  int v176;
  __int16 v177;
  _BYTE v178[7];
  _DWORD v179[3];
  _QWORD *v180;

  sub_1BA28F920(0, &qword_1EF27F8B8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v40 - v8;
  v10 = a1[3];
  v180 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1BA28E4BC();
  sub_1BA2C2744();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v180);
    return (_QWORD *)v94;
  }
  else
  {
    v49 = a2;
    LOBYTE(v106[0]) = 0;
    sub_1BA234C90();
    sub_1BA2C2630();
    v11 = v107;
    LOBYTE(v106[0]) = 1;
    sub_1BA236A80();
    sub_1BA2C2630();
    v12 = v107;
    LOBYTE(v106[0]) = 2;
    sub_1BA23D610();
    swift_bridgeObjectRetain();
    sub_1BA2C2630();
    v93 = v12;
    v13 = v107;
    LOBYTE(v106[0]) = 3;
    sub_1BA236B4C();
    sub_1BA2C25F4();
    v47 = v13;
    v48 = v11;
    v14 = v117;
    LOBYTE(v106[0]) = 4;
    v86 = v116;
    v85 = v115;
    v90 = v107;
    v91 = v108;
    v87 = v109;
    v88 = v110;
    v89 = v111;
    v83 = v112;
    v84 = v114;
    v92 = v113;
    sub_1BA282048(v107, v108);
    v15 = sub_1BA236638();
    sub_1BA2C2630();
    v82 = v14;
    v16 = v108;
    v17 = v109;
    v18 = v111;
    v46 = v112;
    v19 = v15;
    v44 = v107;
    v45 = v113;
    v20 = v115;
    LOBYTE(v106[0]) = 5;
    v80 = v114;
    v81 = v110;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v77 = v16;
    swift_bridgeObjectRetain();
    v78 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v79 = v18;
    swift_bridgeObjectRetain();
    v105 = v19;
    sub_1BA2C25F4();
    v76 = v20;
    v21 = v107;
    v22 = v115;
    LOBYTE(v106[0]) = 6;
    v23 = v108;
    v70 = v109;
    v71 = v110;
    v72 = v111;
    v73 = v112;
    v74 = v113;
    v75 = v114;
    sub_1BA2820FC(v107, v108);
    sub_1BA2C25F4();
    v68 = v23;
    v69 = v22;
    v67 = v21;
    v24 = v114;
    v25 = v115;
    LOBYTE(v106[0]) = 7;
    v26 = v107;
    v62 = v108;
    v63 = v109;
    v64 = v110;
    v65 = v111;
    v66 = v112;
    v105 = v113;
    sub_1BA2820FC(v107, v108);
    sub_1BA2473E0();
    sub_1BA2C25F4();
    v60 = v25;
    v61 = v24;
    v59 = v26;
    v27 = v107;
    v28 = v108;
    LODWORD(v24) = (unsigned __int16)v109;
    LOBYTE(v106[0]) = 8;
    sub_1BA247424();
    swift_bridgeObjectRetain();
    sub_1BA2C25F4();
    v104 = v28;
    v29 = v107;
    v30 = v108;
    LOBYTE(v106[0]) = 9;
    sub_1BA240AA0();
    v58 = v30;
    swift_bridgeObjectRetain();
    sub_1BA2C25F4();
    LOBYTE(v106[0]) = 10;
    v103 = v116;
    v102 = v115;
    v94 = v107;
    v95 = v108;
    v96 = v109;
    v97 = v110;
    v98 = v111;
    v99 = v112;
    v100 = v113;
    v101 = v114;
    sub_1BA28C09C(v107, v108);
    sub_1BA24739C();
    sub_1BA2C25F4();
    v174 = 11;
    v56 = v112;
    v57 = v107;
    v52 = v108;
    v53 = v109;
    v54 = v110;
    v55 = v111;
    v50 = v114;
    v51 = v113;
    sub_1BA28C130(v107, v108);
    sub_1BA23D654();
    sub_1BA2C25F4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v42 = v175;
    LOBYTE(v106[0]) = v48;
    v106[1] = v93;
    LOBYTE(v106[2]) = v47;
    v106[3] = v90;
    v106[4] = v91;
    v106[5] = v87;
    v106[6] = v88;
    v106[7] = v89;
    v106[8] = v83;
    v106[9] = v92;
    v106[10] = v84;
    v106[11] = v85;
    v106[12] = v86;
    v106[13] = v82;
    v106[14] = v44;
    v106[15] = v77;
    v106[16] = v78;
    v106[17] = v81;
    v106[18] = v79;
    v106[19] = v46;
    v106[20] = v45;
    v106[21] = v80;
    v106[22] = v76;
    v106[23] = v67;
    v106[24] = v68;
    v106[25] = v70;
    v106[26] = v71;
    v106[27] = v72;
    v106[28] = v73;
    v106[29] = v74;
    v106[30] = v75;
    v106[31] = v69;
    v106[32] = v59;
    v106[33] = v62;
    v106[34] = v63;
    v106[35] = v64;
    v106[36] = v65;
    v106[37] = v66;
    v106[38] = v105;
    v106[39] = v61;
    v106[40] = v60;
    v41 = v27;
    v106[41] = v27;
    v106[42] = v104;
    HIDWORD(v40) = v24;
    LOWORD(v106[43]) = v24;
    v43 = v29;
    v106[44] = v29;
    v106[45] = v58;
    v106[46] = v94;
    v106[47] = v95;
    v106[48] = v96;
    v106[49] = v97;
    v106[50] = v98;
    v106[51] = v99;
    v106[52] = v100;
    v106[53] = v101;
    v106[54] = v102;
    v106[55] = v103;
    v106[56] = v57;
    v31 = v52;
    v106[57] = v52;
    v106[58] = v53;
    v106[59] = v54;
    v106[60] = v55;
    v106[61] = v56;
    v106[62] = v51;
    v106[63] = v50;
    LOBYTE(v106[64]) = v175;
    sub_1BA28D5B8(v106);
    sub_1BA28D4F8(v57, v31);
    sub_1BA28D548(v94, v95);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA283218(v59, v62);
    sub_1BA283218(v67, v68);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v32 = v87;
    v33 = v88;
    v34 = v89;
    v35 = v83;
    v36 = v84;
    v37 = v92;
    sub_1BA283288(v90, v91);
    v38 = v93;
    swift_bridgeObjectRelease();
    memcpy(v49, v106, 0x201uLL);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v180);
    LOBYTE(v107) = v48;
    v108 = v38;
    LOBYTE(v109) = v47;
    v110 = v90;
    v111 = v91;
    v112 = v32;
    v113 = v33;
    v114 = v34;
    v115 = v35;
    v116 = v37;
    v117 = v36;
    v118 = v85;
    v119 = v86;
    v120 = v82;
    v121 = v44;
    v122 = v77;
    v123 = v78;
    v124 = v81;
    v125 = v79;
    v126 = v46;
    v127 = v45;
    v128 = v80;
    v129 = v76;
    v130 = v67;
    v131 = v68;
    v132 = v70;
    v133 = v71;
    v134 = v72;
    v135 = v73;
    v136 = v74;
    v137 = v75;
    v138 = v69;
    v139 = v59;
    v140 = v62;
    v141 = v63;
    v142 = v64;
    v143 = v65;
    *(_DWORD *)((char *)&v107 + 1) = v179[0];
    HIDWORD(v107) = *(_DWORD *)((char *)v179 + 3);
    *(_DWORD *)((char *)&v109 + 1) = *(_DWORD *)v178;
    HIDWORD(v109) = *(_DWORD *)&v178[3];
    v144 = v66;
    v145 = v105;
    v146 = v61;
    v147 = v60;
    v148 = v41;
    v149 = v104;
    v150 = WORD2(v40);
    v151 = v176;
    v152 = v177;
    v153 = v43;
    v154 = v58;
    v155 = v94;
    v156 = v95;
    v157 = v96;
    v158 = v97;
    v159 = v98;
    v160 = v99;
    v161 = v100;
    v162 = v101;
    v163 = v102;
    v164 = v103;
    v165 = v57;
    v166 = v52;
    v167 = v53;
    v168 = v54;
    v169 = v55;
    v170 = v56;
    v171 = v51;
    v172 = v50;
    v173 = v42;
    return sub_1BA28D814(&v107);
  }
}

void sub_1BA28F920(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA28E4BC();
    v7 = a3(a1, &type metadata for NativeAdContext.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

_QWORD *sub_1BA28F97C@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return NativeAdContext.init(provider:)(a1, a2);
}

_QWORD *sub_1BA28F990@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return NativeAdContext.init(from:)(a1, a2);
}

uint64_t sub_1BA28F9A4(_QWORD *a1)
{
  return NativeAdContext.encode(to:)(a1);
}

void NativeAdContext.newsSupplementalContext.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[8];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 40);
  v51 = *(_QWORD *)(v0 + 32);
  v52 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 96);
  v40 = *(_QWORD *)(v0 + 104);
  v41 = *(_QWORD *)(v0 + 88);
  v10 = *(_QWORD *)(v0 + 152);
  v18 = *(_QWORD *)(v0 + 192);
  v19 = *(_QWORD *)(v0 + 184);
  v16 = *(_QWORD *)(v0 + 208);
  v17 = *(_QWORD *)(v0 + 200);
  v14 = *(_QWORD *)(v0 + 224);
  v15 = *(_QWORD *)(v0 + 216);
  v12 = *(_QWORD *)(v0 + 240);
  v13 = *(_QWORD *)(v0 + 232);
  v11 = *(_QWORD *)(v0 + 248);
  v27 = *(_QWORD *)(v0 + 264);
  v28 = *(_QWORD *)(v0 + 256);
  v25 = *(_QWORD *)(v0 + 280);
  v26 = *(_QWORD *)(v0 + 272);
  v23 = *(_QWORD *)(v0 + 296);
  v24 = *(_QWORD *)(v0 + 288);
  v21 = *(_QWORD *)(v0 + 312);
  v22 = *(_QWORD *)(v0 + 304);
  v20 = *(_QWORD *)(v0 + 320);
  v9 = *(_QWORD *)(v0 + 336);
  v29 = *(_QWORD *)(v0 + 360);
  v49 = *(_QWORD *)(v0 + 376);
  v50 = *(_QWORD *)(v0 + 368);
  v47 = *(_QWORD *)(v0 + 392);
  v48 = *(_QWORD *)(v0 + 384);
  v45 = *(_QWORD *)(v0 + 408);
  v46 = *(_QWORD *)(v0 + 400);
  v43 = *(_QWORD *)(v0 + 424);
  v44 = *(_QWORD *)(v0 + 416);
  v42 = *(_QWORD *)(v0 + 432);
  v37 = *(_QWORD *)(v0 + 448);
  v38 = *(_QWORD *)(v0 + 440);
  v35 = *(_QWORD *)(v0 + 464);
  v36 = *(_QWORD *)(v0 + 456);
  v33 = *(_QWORD *)(v0 + 480);
  v34 = *(_QWORD *)(v0 + 472);
  v31 = *(_QWORD *)(v0 + 496);
  v32 = *(_QWORD *)(v0 + 488);
  v30 = *(_QWORD *)(v0 + 504);
  v39 = *(unsigned __int8 *)(v0 + 512);
  objc_msgSend(objc_allocWithZone((Class)sub_1BA2C1DC0()), sel_init);
  sub_1BA2C1DB4();
  sub_1BA2C1C58();
  sub_1BA2C1C94();
  swift_bridgeObjectRetain_n();
  sub_1BA2C1D00();
  swift_bridgeObjectRelease();
  v54 = v1;
  v55 = v51;
  v56 = v2;
  v57 = v52;
  v58 = v3;
  v59 = v4;
  v60 = v5;
  v61 = v6;
  v62 = v41;
  v63 = v7;
  v64 = v40;
  sub_1BA282048(v1, v51);
  sub_1BA2338F8((uint64_t)&v54);
  sub_1BA283288(v1, v51);
  if (v9)
  {
    swift_bridgeObjectRetain_n();
    sub_1BA2C1C4C();
    sub_1BA2C1CB8();
    sub_1BA2C1CE8();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA2C1BEC();
  swift_bridgeObjectRetain();
  sub_1BA2C1C10();
  swift_bridgeObjectRetain();
  sub_1BA2C1C1C();
  swift_bridgeObjectRetain();
  sub_1BA2C1B80();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v10, v41, v7, v40);
  sub_1BA2C1C40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v54 = v19;
  v55 = v18;
  v56 = v17;
  v57 = v16;
  v58 = v15;
  v59 = v14;
  v60 = v13;
  v61 = v12;
  v62 = v11;
  sub_1BA2820FC(v19, v18);
  sub_1BA26FACC((uint64_t)&v54);
  sub_1BA283218(v19, v18);
  v54 = v28;
  v55 = v27;
  v56 = v26;
  v57 = v25;
  v58 = v24;
  v59 = v23;
  v60 = v22;
  v61 = v21;
  v62 = v20;
  sub_1BA2820FC(v28, v27);
  sub_1BA26FBA0((uint64_t)&v54);
  sub_1BA283218(v28, v27);
  if (v29 && v51)
  {
    if ((v52 & 1) != 0 || v2 >= 1)
    {
      v8 = v1;
      swift_bridgeObjectRetain();
    }
    else
    {
      v8 = v1;
    }
    sub_1BA282048(v8, v51);
    swift_bridgeObjectRetain();
    sub_1BA2C1D0C();
    sub_1BA283288(v8, v51);
    swift_bridgeObjectRelease();
  }
  v54 = v50;
  v55 = v49;
  v56 = v48;
  v57 = v47;
  v58 = v46;
  v59 = v45;
  v60 = v44;
  v61 = v43;
  v62 = v42;
  v63 = v38;
  v53[0] = v37;
  v53[1] = v36;
  v53[2] = v35;
  v53[3] = v34;
  v53[4] = v33;
  v53[5] = v32;
  v53[6] = v31;
  v53[7] = v30;
  sub_1BA28C09C(v50, v49);
  sub_1BA28C130(v37, v36);
  sub_1BA26F958((uint64_t)&v54, v53);
  sub_1BA28D4F8(v37, v36);
  sub_1BA28D548(v50, v49);
  __asm { BR              X9 }
}

uint64_t sub_1BA29006C()
{
  uint64_t v0;

  sub_1BA2C1C64();
  sub_1BA23DAE0();
  sub_1BA2C2438();
  sub_1BA2C1D54();
  return v0;
}

uint64_t NativeAdContext.currentPromotableContentDepiction.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[2];
  __int16 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = v0[47];
  if (!v1)
    return 0;
  v2 = v0[54];
  v3 = v0[55];
  v4 = v0[52];
  v12 = v0[53];
  v6 = v0[50];
  v5 = v0[51];
  v8 = v0[48];
  v7 = v0[49];
  v9 = v0[46];
  v10 = v0[1];
  sub_1BA2C19E8();
  v13 = v10;
  v14[0] = v9;
  v14[1] = v1;
  v15 = v8 & 0x101;
  v16 = v7;
  v17 = v6;
  v18 = v5;
  v19 = v4;
  v20 = v12;
  v21 = v2;
  v22 = v3;
  sub_1BA28C09C(v9, v1);
  swift_bridgeObjectRetain();
  return sub_1BA26D49C(0, v14, &v13, 100);
}

uint64_t NativeAdContext.additionalPromotableContentDepictions.getter()
{
  const void *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD __dst[65];
  _BYTE v10[72];
  _BYTE v11[72];
  _BYTE v12[8];
  uint64_t v13;
  _BYTE v14[8];
  uint64_t v15;

  memcpy(__dst, v0, 0x201uLL);
  sub_1BA2903B8((uint64_t)&__dst[23], (uint64_t)v11);
  sub_1BA2903B8((uint64_t)v11, (uint64_t)v12);
  if (v13)
  {
    sub_1BA28D5B8(__dst);
    v1 = swift_bridgeObjectRetain();
    v2 = sub_1BA290458(v1, (uint64_t)__dst);
    sub_1BA28D814(__dst);
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BA2903B8((uint64_t)&__dst[32], (uint64_t)v10);
  sub_1BA2903B8((uint64_t)v10, (uint64_t)v14);
  if (v15)
  {
    sub_1BA28D5B8(__dst);
    v3 = swift_bridgeObjectRetain();
    v4 = sub_1BA290458(v3, (uint64_t)__dst);
    sub_1BA28D814(__dst);
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BA28D5B8(__dst);
  v5 = swift_bridgeObjectRetain();
  v6 = sub_1BA290458(v5, (uint64_t)__dst);
  sub_1BA28D814(__dst);
  swift_bridgeObjectRelease();
  sub_1BA2423FC(v4);
  sub_1BA2423FC(v6);
  if (v2 >> 62)
  {
    sub_1BA264B90();
    swift_bridgeObjectRetain();
    v7 = sub_1BA2C2588();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BA2C26B4();
    sub_1BA264B90();
    v7 = v2;
  }
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1BA2903B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA2903FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BA2903FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF27F8C0)
  {
    v0 = sub_1BA2C245C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF27F8C0);
  }
}

uint64_t sub_1BA290458(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v5 = sub_1BA2C1484();
  v26 = *(_QWORD *)(v5 - 8);
  v27 = v5;
  MEMORY[0x1E0C80A78](v5);
  v25 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BA2C1460();
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  MEMORY[0x1E0C80A78](v7);
  v22 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v21[0] = v2;
    v33 = MEMORY[0x1E0DEE9D8];
    sub_1BA2C2528();
    v34 = *(_QWORD *)(a2 + 8);
    v21[1] = sub_1BA2C19E8();
    v11 = (char *)(a1 + 88);
    do
    {
      v13 = *((_QWORD *)v11 - 6);
      v14 = *((_QWORD *)v11 - 4);
      v15 = *((_QWORD *)v11 - 2);
      v16 = *v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA24910C((uint64_t)&v34);
      v17 = v22;
      sub_1BA2C1454();
      v18 = sub_1BA2C143C();
      v29 = v19;
      v30 = v18;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v24);
      v20 = qword_1BA2C97E8[v16];
      v31 = v14;
      v32 = v13;
      v28 = v20;
      if (v15 || *(_QWORD *)(v34 + 16))
        swift_bridgeObjectRetain();
      v11 += 64;
      sub_1BA249134((uint64_t)&v34);
      v12 = v25;
      sub_1BA2C1478();
      sub_1BA2C146C();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v27);
      swift_bridgeObjectRetain();
      sub_1BA2C19DC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA2C2504();
      sub_1BA2C2534();
      sub_1BA2C2540();
      sub_1BA2C2510();
      --v9;
    }
    while (v9);
    return v33;
  }
  return result;
}

uint64_t destroy for NativeAdContext(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  if (a1[4])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[24])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[33])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[47])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  result = a1[57];
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for NativeAdContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v4)
  {
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v4;
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    v5 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v5;
    v6 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v6;
    v7 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v7;
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v8;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    v9 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v9;
  }
  v10 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v10;
  v11 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v11;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  v12 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v12;
  v13 = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13)
  {
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 192) = v13;
    v14 = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = v14;
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    v15 = *(_QWORD *)(a2 + 248);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 248) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = *(_QWORD *)(a2 + 264);
    if (v16)
    {
LABEL_6:
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      *(_QWORD *)(a1 + 264) = v16;
      v17 = *(_QWORD *)(a2 + 280);
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 280) = v17;
      v18 = *(_QWORD *)(a2 + 296);
      *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
      *(_QWORD *)(a1 + 296) = v18;
      v19 = *(_QWORD *)(a2 + 312);
      *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
      *(_QWORD *)(a1 + 312) = v19;
      *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_9;
    }
  }
  else
  {
    v20 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v20;
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    v21 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v21;
    v16 = *(_QWORD *)(a2 + 264);
    if (v16)
      goto LABEL_6;
  }
  v22 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v22;
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  v23 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v23;
LABEL_9:
  v24 = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = v24;
  *(_WORD *)(a1 + 344) = *(_WORD *)(a2 + 344);
  v25 = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = v25;
  v26 = *(_QWORD *)(a2 + 376);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v26)
  {
    v33 = *(_OWORD *)(a2 + 416);
    *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
    *(_OWORD *)(a1 + 416) = v33;
    *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
    v34 = *(_OWORD *)(a2 + 384);
    *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
    *(_OWORD *)(a1 + 384) = v34;
    v30 = *(_QWORD *)(a2 + 456);
    if (v30)
      goto LABEL_11;
LABEL_13:
    v35 = *(_OWORD *)(a2 + 464);
    *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
    *(_OWORD *)(a1 + 464) = v35;
    v36 = *(_OWORD *)(a2 + 496);
    *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
    *(_OWORD *)(a1 + 496) = v36;
    goto LABEL_14;
  }
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = v26;
  *(_WORD *)(a1 + 384) = *(_WORD *)(a2 + 384);
  v27 = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 400) = v27;
  v28 = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 416) = v28;
  v29 = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = v29;
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v30 = *(_QWORD *)(a2 + 456);
  if (!v30)
    goto LABEL_13;
LABEL_11:
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 456) = v30;
  *(_BYTE *)(a1 + 464) = *(_BYTE *)(a2 + 464);
  v31 = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(a1 + 480) = v31;
  v32 = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = v32;
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_14:
  *(_BYTE *)(a1 + 512) = *(_BYTE *)(a2 + 512);
  return a1;
}

uint64_t assignWithCopy for NativeAdContext(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _OWORD *v24;
  _OWORD *v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _OWORD *v33;
  _OWORD *v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _OWORD *v42;
  __int128 *v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = (_OWORD *)(a1 + 24);
  v5 = (_OWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA257D78(a1 + 24);
      v7 = *(_OWORD *)(a2 + 40);
      *v4 = *v5;
      *(_OWORD *)(a1 + 40) = v7;
      v9 = *(_OWORD *)(a2 + 72);
      v8 = *(_OWORD *)(a2 + 88);
      v10 = *(_OWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 72) = v9;
      *(_OWORD *)(a1 + 88) = v8;
      *(_OWORD *)(a1 + 56) = v10;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 40);
    *v4 = *v5;
    *(_OWORD *)(a1 + 40) = v11;
    v12 = *(_OWORD *)(a2 + 56);
    v13 = *(_OWORD *)(a2 + 72);
    v14 = *(_OWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 72) = v13;
    *(_OWORD *)(a1 + 88) = v14;
    *(_OWORD *)(a1 + 56) = v12;
  }
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = (_OWORD *)(a1 + 184);
  v16 = (_OWORD *)(a2 + 184);
  v17 = *(_QWORD *)(a2 + 192);
  if (*(_QWORD *)(a1 + 192))
  {
    if (v17)
    {
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA257DAC(a1 + 184);
      *v15 = *v16;
      v19 = *(_OWORD *)(a2 + 216);
      v18 = *(_OWORD *)(a2 + 232);
      v20 = *(_OWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      *(_OWORD *)(a1 + 216) = v19;
      *(_OWORD *)(a1 + 232) = v18;
      *(_OWORD *)(a1 + 200) = v20;
    }
  }
  else if (v17)
  {
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *v15 = *v16;
    v21 = *(_OWORD *)(a2 + 200);
    v22 = *(_OWORD *)(a2 + 216);
    v23 = *(_OWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 216) = v22;
    *(_OWORD *)(a1 + 232) = v23;
    *(_OWORD *)(a1 + 200) = v21;
  }
  v24 = (_OWORD *)(a1 + 256);
  v25 = (_OWORD *)(a2 + 256);
  v26 = *(_QWORD *)(a2 + 264);
  if (*(_QWORD *)(a1 + 264))
  {
    if (v26)
    {
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
      *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
      *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA257DAC(a1 + 256);
      *v24 = *v25;
      v28 = *(_OWORD *)(a2 + 288);
      v27 = *(_OWORD *)(a2 + 304);
      v29 = *(_OWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
      *(_OWORD *)(a1 + 288) = v28;
      *(_OWORD *)(a1 + 304) = v27;
      *(_OWORD *)(a1 + 272) = v29;
    }
  }
  else if (v26)
  {
    *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
    *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
    *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
    *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
    *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
    *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
    *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
    *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
    *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *v24 = *v25;
    v30 = *(_OWORD *)(a2 + 272);
    v31 = *(_OWORD *)(a2 + 288);
    v32 = *(_OWORD *)(a2 + 304);
    *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
    *(_OWORD *)(a1 + 288) = v31;
    *(_OWORD *)(a1 + 304) = v32;
    *(_OWORD *)(a1 + 272) = v30;
  }
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 344) = *(_BYTE *)(a2 + 344);
  *(_BYTE *)(a1 + 345) = *(_BYTE *)(a2 + 345);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33 = (_OWORD *)(a1 + 368);
  v34 = (_OWORD *)(a2 + 368);
  v35 = *(_QWORD *)(a2 + 376);
  if (*(_QWORD *)(a1 + 376))
  {
    if (v35)
    {
      *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
      *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 384) = *(_BYTE *)(a2 + 384);
      *(_BYTE *)(a1 + 385) = *(_BYTE *)(a2 + 385);
      *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
      *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
      *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA257DE0(a1 + 368);
      *v33 = *v34;
      v36 = *(_OWORD *)(a2 + 432);
      v38 = *(_OWORD *)(a2 + 384);
      v37 = *(_OWORD *)(a2 + 400);
      *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
      *(_OWORD *)(a1 + 432) = v36;
      *(_OWORD *)(a1 + 384) = v38;
      *(_OWORD *)(a1 + 400) = v37;
    }
  }
  else if (v35)
  {
    *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
    *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
    *(_BYTE *)(a1 + 384) = *(_BYTE *)(a2 + 384);
    *(_BYTE *)(a1 + 385) = *(_BYTE *)(a2 + 385);
    *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
    *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
    *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
    *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
    *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
    *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
    *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *v33 = *v34;
    v39 = *(_OWORD *)(a2 + 384);
    v40 = *(_OWORD *)(a2 + 400);
    v41 = *(_OWORD *)(a2 + 432);
    *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
    *(_OWORD *)(a1 + 432) = v41;
    *(_OWORD *)(a1 + 384) = v39;
    *(_OWORD *)(a1 + 400) = v40;
  }
  v42 = (_OWORD *)(a1 + 448);
  v43 = (__int128 *)(a2 + 448);
  v44 = *(_QWORD *)(a2 + 456);
  if (*(_QWORD *)(a1 + 456))
  {
    if (v44)
    {
      *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
      *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 464) = *(_BYTE *)(a2 + 464);
      *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
      *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
      *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA257E14(a1 + 448);
      v45 = *(_OWORD *)(a2 + 496);
      v47 = *v43;
      v46 = *(_OWORD *)(a2 + 464);
      *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
      *(_OWORD *)(a1 + 496) = v45;
      *v42 = v47;
      *(_OWORD *)(a1 + 464) = v46;
    }
  }
  else if (v44)
  {
    *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
    *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
    *(_BYTE *)(a1 + 464) = *(_BYTE *)(a2 + 464);
    *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
    *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
    *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
    *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
    *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v48 = *v43;
    v49 = *(_OWORD *)(a2 + 464);
    v50 = *(_OWORD *)(a2 + 496);
    *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
    *(_OWORD *)(a1 + 496) = v50;
    *v42 = v48;
    *(_OWORD *)(a1 + 464) = v49;
  }
  *(_BYTE *)(a1 + 512) = *(_BYTE *)(a2 + 512);
  return a1;
}

uint64_t assignWithTake for NativeAdContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  if (*(_QWORD *)(a1 + 32))
  {
    v4 = *(_QWORD *)(a2 + 32);
    if (v4)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = v4;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      v5 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = v5;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRelease();
      v6 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = v6;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1BA257D78(a1 + 24);
  }
  v7 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v7;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v8;
LABEL_6:
  v9 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v9;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 192))
  {
    v10 = *(_QWORD *)(a2 + 192);
    if (v10)
    {
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = v10;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1BA257DAC(a1 + 184);
  }
  v11 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = v11;
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  v12 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = v12;
LABEL_11:
  if (*(_QWORD *)(a1 + 264))
  {
    v13 = *(_QWORD *)(a2 + 264);
    if (v13)
    {
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      *(_QWORD *)(a1 + 264) = v13;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
      *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1BA257DAC(a1 + 256);
  }
  v14 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v14;
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  v15 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v15;
LABEL_16:
  v16 = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = v16;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 344) = *(_BYTE *)(a2 + 344);
  *(_BYTE *)(a1 + 345) = *(_BYTE *)(a2 + 345);
  v17 = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = v17;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 376))
  {
    v18 = *(_QWORD *)(a2 + 376);
    if (v18)
    {
      *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
      *(_QWORD *)(a1 + 376) = v18;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 384) = *(_BYTE *)(a2 + 384);
      *(_BYTE *)(a1 + 385) = *(_BYTE *)(a2 + 385);
      v19 = *(_QWORD *)(a2 + 400);
      *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
      *(_QWORD *)(a1 + 400) = v19;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
      swift_bridgeObjectRelease();
      v20 = *(_QWORD *)(a2 + 440);
      *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
      *(_QWORD *)(a1 + 440) = v20;
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1BA257DE0(a1 + 368);
  }
  v21 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v21;
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  v22 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v22;
LABEL_21:
  if (!*(_QWORD *)(a1 + 456))
  {
LABEL_25:
    v26 = *(_OWORD *)(a2 + 464);
    *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
    *(_OWORD *)(a1 + 464) = v26;
    v27 = *(_OWORD *)(a2 + 496);
    *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
    *(_OWORD *)(a1 + 496) = v27;
    goto LABEL_26;
  }
  v23 = *(_QWORD *)(a2 + 456);
  if (!v23)
  {
    sub_1BA257E14(a1 + 448);
    goto LABEL_25;
  }
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 456) = v23;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 464) = *(_BYTE *)(a2 + 464);
  v24 = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(a1 + 480) = v24;
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = v25;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  swift_bridgeObjectRelease();
LABEL_26:
  *(_BYTE *)(a1 + 512) = *(_BYTE *)(a2 + 512);
  return a1;
}

uint64_t getEnumTagSinglePayload for NativeAdContext(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 513))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NativeAdContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 504) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_BYTE *)(result + 512) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 513) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 513) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NativeAdContext.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for NativeAdContext.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1BA291A9C + 4 * byte_1BA2C94FE[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1BA291AD0 + 4 * byte_1BA2C94F9[v4]))();
}

uint64_t sub_1BA291AD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA291AD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA291AE0);
  return result;
}

uint64_t sub_1BA291AEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA291AF4);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1BA291AF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA291B00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NativeAdContext.CodingKeys()
{
  return &type metadata for NativeAdContext.CodingKeys;
}

unint64_t sub_1BA291B20()
{
  unint64_t result;

  result = qword_1EF27F8C8;
  if (!qword_1EF27F8C8)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C9670, &type metadata for NativeAdContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F8C8);
  }
  return result;
}

unint64_t sub_1BA291B68()
{
  unint64_t result;

  result = qword_1EF27F8D0;
  if (!qword_1EF27F8D0)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C95E0, &type metadata for NativeAdContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F8D0);
  }
  return result;
}

unint64_t sub_1BA291BB0()
{
  unint64_t result;

  result = qword_1EF27F8D8;
  if (!qword_1EF27F8D8)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C9608, &type metadata for NativeAdContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27F8D8);
  }
  return result;
}

uint64_t sub_1BA291BF4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x61746144707061 && a2 == 0xE700000000000000;
  if (v2 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614472657375 && a2 == 0xE800000000000000 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E656D6563616C70 && a2 == 0xED00006174614474 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BA2CEFA0 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BA2CEFC0 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x446E6F6974636573 && a2 == 0xEB00000000617461 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6C61727265666572 && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = sub_1BA2C26A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

uint64_t sub_1BA29213C()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(_QWORD);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(uint64_t, uint64_t, unint64_t);
  _QWORD *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t (*v106)(uint64_t, uint64_t, uint64_t);
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  char *v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t *v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  _QWORD v168[2];
  unint64_t v169;
  unint64_t v170;
  void (*v171)(char *, uint64_t, uint64_t *);
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  __int128 v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t *v178;
  __int128 v179;
  char *v180;
  uint64_t v181;
  unint64_t v182;
  void (*v183)(char *, uint64_t, _QWORD);
  uint64_t v184;
  uint64_t *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  uint64_t *v198;
  char *v199;
  unint64_t v200;
  uint64_t v201;
  char *v202;
  void (*v203)(char *, uint64_t, uint64_t);
  char *v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  char *v208;
  unint64_t v209;
  _QWORD *v210;
  unsigned int v211;
  void (*v212)(_QWORD);
  uint64_t v213;
  char *v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  _QWORD *v218;
  __int128 v219;
  uint64_t v220;
  __int128 v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  unsigned int v228;
  __int128 v229;
  uint64_t v230;

  v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5718];
  sub_1BA298694(0, &qword_1EF27F9E8, MEMORY[0x1E0DB5718]);
  v207 = v1;
  v194 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v208 = (char *)v168 - v2;
  sub_1BA236F78(0, &qword_1EF27F9F0, (uint64_t (*)(void))sub_1BA297B8C, (uint64_t)&type metadata for Settings.Ads.Debugging.EOANativeAdInsertionLocationOverride.EOANativeAdLocation, v0);
  v192 = v3;
  v191 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v193 = (char *)v168 - v4;
  sub_1BA236F78(0, &qword_1EF27F9F8, (uint64_t (*)(void))sub_1BA297B04, (uint64_t)&type metadata for Settings.Ads.Debugging.NativeOverride.DesiredPosition, v0);
  v189 = v5;
  v188 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v190 = (char *)v168 - v6;
  sub_1BA236F78(0, &qword_1EF27FA00, (uint64_t (*)(void))sub_1BA297A38, (uint64_t)&type metadata for Settings.Ads.Debugging.AutoPlacement.BannerType, v0);
  v185 = v7;
  v184 = *(v7 - 1);
  MEMORY[0x1E0C80A78](v7);
  v186 = (char *)v168 - v8;
  v9 = MEMORY[0x1E0DEB418];
  v10 = MEMORY[0x1E0DB59B8];
  sub_1BA21F7F0(0, &qword_1EF27FA08, MEMORY[0x1E0DEB418], MEMORY[0x1E0DB59B8], v0);
  v217 = v11;
  v181 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v206 = (char *)v168 - v12;
  v13 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB5748];
  sub_1BA21F7F0(0, &qword_1EF27FA10, v9, v10, MEMORY[0x1E0DB5748]);
  MEMORY[0x1E0C80A78](v14);
  v180 = (char *)v168 - v15;
  sub_1BA21F7F0(0, &qword_1EF27FA18, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB5958], v0);
  v201 = v16;
  v177 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v202 = (char *)v168 - v17;
  sub_1BA236F78(0, &qword_1EF27FA20, (uint64_t (*)(void))sub_1BA2811A8, (uint64_t)&type metadata for DebugAdCollapseBehavior, v0);
  v198 = v18;
  v197 = *(v18 - 1);
  MEMORY[0x1E0C80A78](v18);
  v199 = (char *)v168 - v19;
  v20 = MEMORY[0x1E0DEB188];
  v21 = MEMORY[0x1E0DB59A0];
  sub_1BA21F7F0(0, &qword_1EF27FA28, MEMORY[0x1E0DEB188], MEMORY[0x1E0DB59A0], v0);
  v200 = v22;
  v218 = *(_QWORD **)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  *(_QWORD *)&v179 = (char *)v168 - v23;
  sub_1BA21F7F0(0, &qword_1EF27FA30, v20, v21, v13);
  MEMORY[0x1E0C80A78](v24);
  v178 = (_QWORD *)((char *)v168 - v25);
  sub_1BA21F7F0(0, &qword_1EF27FA38, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DB5980], v0);
  v203 = v26;
  v226 = *((_QWORD *)v26 - 1);
  MEMORY[0x1E0C80A78](v26);
  v204 = (char *)v168 - v27;
  v215 = sub_1BA2C155C();
  v222 = *(_QWORD *)(v215 - 8);
  MEMORY[0x1E0C80A78](v215);
  v216 = (char *)v168 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA236F78(0, &qword_1EF27FA40, (uint64_t (*)(void))sub_1BA2370F0, (uint64_t)&type metadata for Settings.Ads.Debugging.VisualDebugging.Mode, v0);
  v213 = v29;
  v212 = *(void (**)(_QWORD))(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v214 = (char *)v168 - v30;
  v31 = sub_1BA2C14D8();
  __swift_allocate_value_buffer(v31, qword_1EF27F8E0);
  v196 = __swift_project_value_buffer(v31, (uint64_t)qword_1EF27F8E0);
  sub_1BA298238(0, &qword_1EF27FA48, (void (*)(uint64_t))MEMORY[0x1E0DB57C8]);
  v33 = v32;
  v34 = *(_QWORD *)(sub_1BA2C1604() - 8);
  v35 = *(_QWORD *)(v34 + 72);
  v36 = *(unsigned __int8 *)(v34 + 80);
  v37 = (v36 + 32) & ~v36;
  v38 = v36 | 7;
  v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1BA2C39C0;
  v195 = v39;
  v225 = v39 + v37;
  sub_1BA298238(0, &qword_1EF27FA50, (void (*)(uint64_t))sub_1BA298284);
  v41 = v40;
  v42 = swift_allocObject();
  v229 = xmmword_1BA2C37D0;
  *(_OWORD *)(v42 + 16) = xmmword_1BA2C37D0;
  v210 = (_QWORD *)v42;
  *(_QWORD *)&v175 = v42 + 32;
  v176 = 2 * v35;
  v224 = v33;
  v205 = v37 + 2 * v35;
  v223 = v38;
  v43 = swift_allocObject();
  v219 = xmmword_1BA2C37C0;
  *(_OWORD *)(v43 + 16) = xmmword_1BA2C37C0;
  v220 = v37;
  v209 = v43;
  v44 = v43 + v37;
  if (qword_1ED5B2D28 != -1)
    swift_once();
  v45 = swift_allocObject();
  v227 = v41;
  v46 = (_QWORD *)v45;
  *(_OWORD *)(v45 + 16) = v229;
  sub_1BA236F78(0, &qword_1EF27FA60, (uint64_t (*)(void))sub_1BA2370F0, (uint64_t)&type metadata for Settings.Ads.Debugging.VisualDebugging.Mode, MEMORY[0x1E0DB5770]);
  v48 = v47;
  sub_1BA22920C(0, &qword_1ED5B3610, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v50 = v49;
  v51 = swift_allocObject();
  v221 = xmmword_1BA2C35D0;
  *(_OWORD *)(v51 + 16) = xmmword_1BA2C35D0;
  v52 = sub_1BA2C1550();
  swift_retain();
  swift_retain();
  *(_QWORD *)(v51 + 32) = sub_1BA2C1568();
  v230 = v51;
  sub_1BA2C2288();
  v53 = (void (*)(char *))*((_QWORD *)v212 + 13);
  v228 = *MEMORY[0x1E0DB5710];
  v53(v214);
  sub_1BA237178();
  v54 = sub_1BA2C15BC();
  v46[7] = v48;
  v46[8] = sub_1BA2982D8();
  v46[4] = v54;
  sub_1BA2C15EC();
  v174 = v44 + v35;
  v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = v229;
  sub_1BA21F7F0(0, &qword_1EF27FA70, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DB5980], MEMORY[0x1E0DB5770]);
  v57 = v56;
  if (qword_1ED5B2FE0 != -1)
    swift_once();
  v214 = v50;
  v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = v221;
  swift_retain();
  v213 = v52;
  *(_QWORD *)(v58 + 32) = sub_1BA2C1568();
  v230 = v58;
  sub_1BA2C2288();
  v59 = *(void (**)(_QWORD))(v222 + 104);
  v211 = *MEMORY[0x1E0DB55F8];
  v212 = v59;
  v59(v216);
  v183 = *(void (**)(char *, uint64_t, _QWORD))(v226 + 104);
  v183(v204, v228, v203);
  v60 = sub_1BA2C15C8();
  v187 = v57;
  *(_QWORD *)(v55 + 56) = v57;
  v182 = sub_1BA298340();
  *(_QWORD *)(v55 + 64) = v182;
  *(_QWORD *)(v55 + 32) = v60;
  sub_1BA2C15F8();
  v61 = sub_1BA2C15E0();
  v62 = MEMORY[0x1E0DB5790];
  v222 = v61;
  v63 = v210;
  v210[7] = v61;
  v63[8] = v62;
  __swift_allocate_boxed_opaque_existential_2((uint64_t *)v175);
  sub_1BA2C15D4();
  v64 = v225;
  sub_1BA2C15F8();
  v226 = v35;
  v174 = v64 + v35;
  if (qword_1ED5B2D30 != -1)
    swift_once();
  v65 = qword_1ED5B1438;
  v66 = swift_allocObject();
  v175 = xmmword_1BA2C3840;
  *(_OWORD *)(v66 + 16) = xmmword_1BA2C3840;
  sub_1BA21F7F0(0, &qword_1EF27FA80, MEMORY[0x1E0DEB188], MEMORY[0x1E0DB59A0], MEMORY[0x1E0DB5770]);
  v68 = v67;
  v168[1] = v65;
  swift_retain();
  swift_retain();
  sub_1BA2C1598();
  v69 = (_QWORD *)v218[13];
  v70 = v179;
  v71 = v228;
  v72 = v200;
  ((void (*)(_QWORD, _QWORD, unint64_t))v69)(v179, v228, v200);
  v73 = sub_1BA2C15A4();
  *(_QWORD *)(v66 + 56) = v68;
  v74 = sub_1BA2983A8();
  *(_QWORD *)(v66 + 64) = v74;
  *(_QWORD *)(v66 + 32) = v73;
  swift_retain();
  sub_1BA2C1598();
  v210 = v69;
  ((void (*)(uint64_t, uint64_t, unint64_t))v69)(v70, v71, v72);
  v75 = sub_1BA2C15A4();
  v218 = v68;
  *(_QWORD *)(v66 + 96) = v68;
  *(_QWORD *)(v66 + 104) = v74;
  v209 = v74;
  *(_QWORD *)(v66 + 72) = v75;
  sub_1BA236F78(0, &qword_1EF27FA90, (uint64_t (*)(void))sub_1BA2811A8, (uint64_t)&type metadata for DebugAdCollapseBehavior, MEMORY[0x1E0DB5770]);
  v77 = v76;
  v171 = *(void (**)(char *, uint64_t, uint64_t *))(v197 + 104);
  v171(v199, v71, v198);
  v78 = sub_1BA265AA4();
  swift_retain();
  v197 = 0xD000000000000011;
  v170 = 0x80000001BA2D11E0;
  v172 = v78;
  v79 = sub_1BA2C15BC();
  v173 = v77;
  *(_QWORD *)(v66 + 136) = v77;
  v169 = sub_1BA298410();
  *(_QWORD *)(v66 + 144) = v169;
  *(_QWORD *)(v66 + 112) = v79;
  sub_1BA2C15EC();
  v176 += v225;
  if (qword_1ED5B0F80 != -1)
    swift_once();
  v80 = swift_allocObject();
  *(_OWORD *)(v80 + 16) = v175;
  swift_retain();
  swift_retain();
  sub_1BA2C1598();
  v81 = (void (*)(uint64_t, uint64_t, unint64_t))v210;
  ((void (*)(uint64_t, uint64_t, unint64_t))v210)(v70, v71, v72);
  v82 = v218;
  v83 = sub_1BA2C15A4();
  v84 = v209;
  *(_QWORD *)(v80 + 56) = v82;
  *(_QWORD *)(v80 + 64) = v84;
  *(_QWORD *)(v80 + 32) = v83;
  swift_retain();
  sub_1BA2C1598();
  v81(v70, v71, v72);
  v85 = sub_1BA2C15A4();
  *(_QWORD *)(v80 + 96) = v82;
  *(_QWORD *)(v80 + 104) = v84;
  *(_QWORD *)(v80 + 72) = v85;
  v171(v199, v71, v198);
  swift_retain();
  v86 = v173;
  v87 = sub_1BA2C15BC();
  v88 = v169;
  *(_QWORD *)(v80 + 136) = v86;
  *(_QWORD *)(v80 + 144) = v88;
  *(_QWORD *)(v80 + 112) = v87;
  sub_1BA2C15EC();
  v199 = (char *)(v225 + 3 * v226);
  if (qword_1ED5B34F8 != -1)
    swift_once();
  v89 = swift_allocObject();
  *(_OWORD *)(v89 + 16) = v219;
  swift_retain();
  swift_retain();
  sub_1BA2C1598();
  v90 = v200;
  ((void (*)(uint64_t, uint64_t, unint64_t))v210)(v70, v71, v200);
  v91 = v218;
  v92 = sub_1BA2C15A4();
  v93 = v209;
  *(_QWORD *)(v89 + 56) = v91;
  *(_QWORD *)(v89 + 64) = v93;
  *(_QWORD *)(v89 + 32) = v92;
  sub_1BA21F7F0(0, &qword_1EF27FAA0, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB5958], MEMORY[0x1E0DB5770]);
  v95 = v94;
  v198 = *(uint64_t **)(v177 + 104);
  ((void (*)(char *, uint64_t, uint64_t))v198)(v202, v71, v201);
  swift_retain();
  v96 = sub_1BA2C15B0();
  v177 = v95;
  *(_QWORD *)(v89 + 96) = v95;
  v197 = sub_1BA298478();
  *(_QWORD *)(v89 + 104) = v197;
  *(_QWORD *)(v89 + 72) = v96;
  sub_1BA2C15EC();
  if (qword_1ED5B0FF8 != -1)
    swift_once();
  v97 = swift_allocObject();
  *(_OWORD *)(v97 + 16) = v229;
  swift_retain();
  swift_retain();
  sub_1BA2C1598();
  ((void (*)(uint64_t, _QWORD, unint64_t))v210)(v70, v228, v90);
  v98 = v218;
  v99 = sub_1BA2C15A4();
  v100 = v209;
  *(_QWORD *)(v97 + 56) = v98;
  *(_QWORD *)(v97 + 64) = v100;
  *(_QWORD *)(v97 + 32) = v99;
  sub_1BA2C15EC();
  v101 = swift_allocObject();
  *(_OWORD *)(v101 + 16) = xmmword_1BA2C9810;
  v218 = (_QWORD *)v101;
  v178 = (uint64_t *)(v101 + 32);
  v102 = v220;
  v200 = v220 + v226;
  v103 = swift_allocObject();
  *(_OWORD *)(v103 + 16) = v229;
  v176 = v103;
  *(_QWORD *)&v175 = v103 + v102;
  if (qword_1ED5B2D38 != -1)
    swift_once();
  v104 = qword_1ED5B1168;
  v105 = swift_allocObject();
  v179 = xmmword_1BA2C4620;
  *(_OWORD *)(v105 + 16) = xmmword_1BA2C4620;
  v106 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5770];
  sub_1BA21F7F0(0, &qword_1EF27FAB0, MEMORY[0x1E0DEB418], MEMORY[0x1E0DB59B8], MEMORY[0x1E0DB5770]);
  v108 = v107;
  v174 = v104;
  swift_retain();
  swift_retain();
  sub_1BA2C1598();
  v109 = v228;
  v210 = *(_QWORD **)(v181 + 104);
  ((void (*)(char *, _QWORD, uint64_t))v210)(v206, v228, v217);
  v110 = sub_1BA2C15A4();
  v199 = v108;
  *(_QWORD *)(v105 + 56) = v108;
  v209 = sub_1BA2984E0();
  *(_QWORD *)(v105 + 64) = v209;
  *(_QWORD *)(v105 + 32) = v110;
  sub_1BA236F78(0, &qword_1EF27FAC0, (uint64_t (*)(void))sub_1BA297A38, (uint64_t)&type metadata for Settings.Ads.Debugging.AutoPlacement.BannerType, v106);
  v112 = v111;
  (*(void (**)(char *, uint64_t, uint64_t *))(v184 + 104))(v186, v109, v185);
  sub_1BA2981F4();
  swift_retain();
  v113 = sub_1BA2C15BC();
  *(_QWORD *)(v105 + 96) = v112;
  *(_QWORD *)(v105 + 104) = sub_1BA298548();
  *(_QWORD *)(v105 + 72) = v113;
  v114 = v202;
  v115 = v201;
  v116 = v198;
  ((void (*)(char *, uint64_t, uint64_t))v198)(v202, v109, v201);
  swift_retain();
  v117 = v177;
  v118 = sub_1BA2C15B0();
  v119 = v197;
  *(_QWORD *)(v105 + 136) = v117;
  *(_QWORD *)(v105 + 144) = v119;
  *(_QWORD *)(v105 + 112) = v118;
  ((void (*)(char *, uint64_t, uint64_t))v116)(v114, v109, v115);
  swift_retain();
  v120 = sub_1BA2C15B0();
  *(_QWORD *)(v105 + 176) = v117;
  *(_QWORD *)(v105 + 184) = v119;
  *(_QWORD *)(v105 + 152) = v120;
  sub_1BA2C15EC();
  v121 = v218;
  v218[7] = v222;
  v121[8] = MEMORY[0x1E0DB5790];
  __swift_allocate_boxed_opaque_existential_2(v178);
  sub_1BA2C15D4();
  v185 = v121 + 9;
  v122 = swift_allocObject();
  *(_OWORD *)(v122 + 16) = v219;
  v186 = (char *)v122;
  v184 = v122 + v220;
  if (qword_1ED5B2D40 != -1)
    swift_once();
  v181 = qword_1ED5B11E8;
  v123 = swift_allocObject();
  *(_OWORD *)(v123 + 16) = v179;
  v124 = v228;
  ((void (*)(char *, _QWORD, uint64_t))v116)(v114, v228, v115);
  swift_retain();
  swift_retain();
  v125 = sub_1BA2C15B0();
  *(_QWORD *)(v123 + 56) = v117;
  *(_QWORD *)(v123 + 64) = v119;
  *(_QWORD *)(v123 + 32) = v125;
  ((void (*)(char *, uint64_t, uint64_t))v116)(v114, v124, v115);
  swift_retain();
  v126 = sub_1BA2C15B0();
  *(_QWORD *)(v123 + 96) = v117;
  *(_QWORD *)(v123 + 104) = v119;
  *(_QWORD *)(v123 + 72) = v126;
  ((void (*)(char *, uint64_t, uint64_t))v116)(v114, v124, v115);
  swift_retain();
  v127 = sub_1BA2C15B0();
  *(_QWORD *)(v123 + 136) = v117;
  *(_QWORD *)(v123 + 144) = v119;
  *(_QWORD *)(v123 + 112) = v127;
  sub_1BA236F78(0, &qword_1EF27FAD0, (uint64_t (*)(void))sub_1BA297B04, (uint64_t)&type metadata for Settings.Ads.Debugging.NativeOverride.DesiredPosition, MEMORY[0x1E0DB5770]);
  v129 = v128;
  (*(void (**)(char *, uint64_t, uint64_t))(v188 + 104))(v190, v124, v189);
  sub_1BA2981B0();
  swift_retain();
  v130 = sub_1BA2C15BC();
  *(_QWORD *)(v123 + 176) = v129;
  *(_QWORD *)(v123 + 184) = sub_1BA2985B0();
  *(_QWORD *)(v123 + 152) = v130;
  v131 = v184;
  sub_1BA2C15EC();
  v202 = (char *)(v131 + v226);
  if (qword_1ED5B3268 != -1)
    swift_once();
  v132 = swift_allocObject();
  *(_OWORD *)(v132 + 16) = v229;
  sub_1BA236F78(0, &qword_1EF27FAE0, (uint64_t (*)(void))sub_1BA297B8C, (uint64_t)&type metadata for Settings.Ads.Debugging.EOANativeAdInsertionLocationOverride.EOANativeAdLocation, MEMORY[0x1E0DB5770]);
  v134 = v133;
  (*(void (**)(char *, uint64_t, uint64_t))(v191 + 104))(v193, v124, v192);
  sub_1BA29816C();
  swift_retain();
  swift_retain();
  v135 = sub_1BA2C15BC();
  *(_QWORD *)(v132 + 56) = v134;
  *(_QWORD *)(v132 + 64) = sub_1BA298618();
  *(_QWORD *)(v132 + 32) = v135;
  sub_1BA2C15EC();
  v136 = v218;
  v218[12] = v222;
  v136[13] = MEMORY[0x1E0DB5790];
  __swift_allocate_boxed_opaque_existential_2(v185);
  sub_1BA2C15D4();
  v198 = v136 + 14;
  v137 = swift_allocObject();
  *(_OWORD *)(v137 + 16) = v229;
  v197 = v137 + v220;
  v138 = swift_allocObject();
  *(_OWORD *)(v138 + 16) = v219;
  if (qword_1ED5B2D50 != -1)
    swift_once();
  v139 = v215;
  ((void (*)(char *, _QWORD, uint64_t))v212)(v216, v211, v215);
  v183(v204, v124, v203);
  swift_retain();
  v140 = v187;
  v141 = sub_1BA2C15C8();
  v142 = v182;
  *(_QWORD *)(v138 + 56) = v140;
  *(_QWORD *)(v138 + 64) = v142;
  *(_QWORD *)(v138 + 32) = v141;
  sub_1BA298680(0);
  v144 = v143;
  if (qword_1ED5B2E58 != -1)
    swift_once();
  v203 = *(void (**)(char *, uint64_t, uint64_t))(v194 + 104);
  v203(v208, v124, v207);
  v145 = sub_1BA221230(&qword_1EF27FAF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB54F8], MEMORY[0x1E0DB5508]);
  swift_retain();
  v202 = (char *)v145;
  v146 = sub_1BA2C15BC();
  v204 = v144;
  *(_QWORD *)(v138 + 96) = v144;
  v201 = sub_1BA221230(&qword_1EF27FB00, (uint64_t (*)(uint64_t))sub_1BA298680, MEMORY[0x1E0DB5780]);
  *(_QWORD *)(v138 + 104) = v201;
  *(_QWORD *)(v138 + 72) = v146;
  sub_1BA2C15F8();
  v147 = v218;
  v218[17] = v222;
  v147[18] = MEMORY[0x1E0DB5790];
  __swift_allocate_boxed_opaque_existential_2(v198);
  sub_1BA2C15D4();
  v198 = v147 + 19;
  v148 = swift_allocObject();
  *(_OWORD *)(v148 + 16) = v229;
  v200 = v148 + v220;
  if (qword_1ED5B2DE0 != -1)
    swift_once();
  v149 = swift_allocObject();
  *(_OWORD *)(v149 + 16) = v229;
  v150 = swift_allocObject();
  *(_OWORD *)(v150 + 16) = v221;
  swift_retain();
  swift_retain();
  *(_QWORD *)(v150 + 32) = sub_1BA2C1568();
  v230 = v150;
  sub_1BA2C2288();
  v151 = v216;
  ((void (*)(char *, _QWORD, uint64_t))v212)(v216, v211, v139);
  v152 = v206;
  ((void (*)(char *, _QWORD, uint64_t))v210)(v206, v228, v217);
  v153 = v199;
  v154 = sub_1BA2C15C8();
  v155 = v209;
  *(_QWORD *)(v149 + 56) = v153;
  *(_QWORD *)(v149 + 64) = v155;
  *(_QWORD *)(v149 + 32) = v154;
  v200 = 0xD000000000000016;
  sub_1BA2C15EC();
  v147[22] = v222;
  v147[23] = MEMORY[0x1E0DB5790];
  __swift_allocate_boxed_opaque_existential_2(v198);
  sub_1BA2C15D4();
  v156 = swift_allocObject();
  *(_OWORD *)(v156 + 16) = v219;
  v224 = v156;
  if (qword_1ED5B2E38 != -1)
    swift_once();
  v157 = swift_allocObject();
  *(_OWORD *)(v157 + 16) = v229;
  v158 = swift_allocObject();
  *(_OWORD *)(v158 + 16) = v221;
  swift_retain();
  swift_retain();
  *(_QWORD *)(v158 + 32) = sub_1BA2C1568();
  v230 = v158;
  sub_1BA2C2288();
  ((void (*)(char *, _QWORD, uint64_t))v212)(v151, v211, v215);
  ((void (*)(char *, _QWORD, uint64_t))v210)(v152, v228, v217);
  v159 = sub_1BA2C15C8();
  v160 = v209;
  *(_QWORD *)(v157 + 56) = v153;
  *(_QWORD *)(v157 + 64) = v160;
  *(_QWORD *)(v157 + 32) = v159;
  sub_1BA2C15EC();
  v161 = swift_allocObject();
  *(_OWORD *)(v161 + 16) = v229;
  if (qword_1ED5B2DD0 != -1)
    swift_once();
  v162 = v218;
  v163 = swift_allocObject();
  *(_OWORD *)(v163 + 16) = v221;
  swift_retain();
  *(_QWORD *)(v163 + 32) = sub_1BA2C1568();
  v230 = v163;
  sub_1BA2C2288();
  v203(v208, v228, v207);
  v164 = v204;
  v165 = sub_1BA2C15BC();
  v166 = v201;
  *(_QWORD *)(v161 + 56) = v164;
  *(_QWORD *)(v161 + 64) = v166;
  *(_QWORD *)(v161 + 32) = v165;
  sub_1BA2C15F8();
  v162[27] = v222;
  v162[28] = MEMORY[0x1E0DB5790];
  __swift_allocate_boxed_opaque_existential_2(v162 + 24);
  sub_1BA2C15D4();
  sub_1BA2C15F8();
  return sub_1BA2C14CC();
}

uint64_t static SettingsBundle.ads.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EF27E398 != -1)
    swift_once();
  v2 = sub_1BA2C14D8();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EF27F8E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static Settings.Ads.enabled.getter()
{
  return sub_1BA237268(&qword_1ED5B2D20);
}

uint64_t Settings.Ads.Debugging.VisualDebugging.__allocating_init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BA294C38(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))Settings.Ads.Debugging.VisualDebugging.init(key:defaultValue:access:));
}

uint64_t static Settings.Ads.Debugging.visualDebugging.getter()
{
  return sub_1BA237268(&qword_1ED5B2D28);
}

uint64_t sub_1BA294474(uint64_t a1)
{
  return sub_1BA21E724(a1, 0xD000000000000022, 0x80000001BA2D1150, &qword_1ED5B1440);
}

uint64_t static Settings.Ads.Debugging.policiesEnabled.getter()
{
  return sub_1BA237268(&qword_1ED5B2D50);
}

uint64_t sub_1BA2944B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;

  v0 = sub_1BA2C1610();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BA2C1514();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA298694(0, &qword_1ED5B1458, MEMORY[0x1E0DB5878]);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB54D8], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E8], v0);
  result = sub_1BA2C1640();
  qword_1ED5B2E48 = result;
  return result;
}

uint64_t static Settings.Ads.Debugging.requestPoliciesEnabled.getter()
{
  return sub_1BA237268(&qword_1ED5B2E58);
}

uint64_t sub_1BA2945F8(uint64_t a1)
{
  return sub_1BA21E724(a1, 0xD000000000000026, 0x80000001BA2D1600, &qword_1ED5B2FE8);
}

uint64_t static Settings.Ads.Debugging.longPressDebugging.getter()
{
  return sub_1BA237268(&qword_1ED5B2FE0);
}

uint64_t sub_1BA294638()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v0 = sub_1BA2C1610();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v3 + 104))(v2, *MEMORY[0x1E0DB57E8]);
  type metadata accessor for Settings.Ads.Debugging.AutoPlacement(0);
  swift_allocObject();
  result = Settings.Ads.Debugging.AutoPlacement.init(key:defaultValue:access:)(0xD00000000000002ELL, 0x80000001BA2D10F0, 0, (uint64_t)v2);
  qword_1ED5B1168 = result;
  return result;
}

uint64_t Settings.Ads.Debugging.AutoPlacement.__allocating_init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BA294C38(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))Settings.Ads.Debugging.AutoPlacement.init(key:defaultValue:access:));
}

uint64_t static Settings.Ads.Debugging.autoPlacement.getter()
{
  return sub_1BA237268(&qword_1ED5B2D38);
}

uint64_t sub_1BA294710()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v0 = sub_1BA2C1610();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v3 + 104))(v2, *MEMORY[0x1E0DB57E8]);
  type metadata accessor for Settings.Ads.Debugging.DebugBanner(0);
  swift_allocObject();
  result = Settings.Ads.Debugging.DebugBanner.init(key:defaultValue:access:)(0xD00000000000002CLL, 0x80000001BA2D10C0, 0, (uint64_t)v2);
  qword_1ED5B1438 = result;
  return result;
}

uint64_t Settings.Ads.Debugging.DebugBanner.__allocating_init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BA294C38(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))Settings.Ads.Debugging.DebugBanner.init(key:defaultValue:access:));
}

uint64_t static Settings.Ads.Debugging.debugBanner.getter()
{
  return sub_1BA237268(&qword_1ED5B2D30);
}

uint64_t sub_1BA2947E8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v0 = sub_1BA2C1610();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v3 + 104))(v2, *MEMORY[0x1E0DB57E8]);
  type metadata accessor for Settings.Ads.Debugging.DebugNativeAd(0);
  swift_allocObject();
  result = Settings.Ads.Debugging.DebugNativeAd.init(key:defaultValue:access:)(0xD00000000000002FLL, 0x80000001BA2D1090, 0, (uint64_t)v2);
  qword_1ED5B34E8 = result;
  return result;
}

uint64_t Settings.Ads.Debugging.DebugNativeAd.__allocating_init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BA294C38(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))Settings.Ads.Debugging.DebugNativeAd.init(key:defaultValue:access:));
}

uint64_t static Settings.Ads.Debugging.debugNative.getter()
{
  return sub_1BA237268(&qword_1ED5B34F8);
}

uint64_t sub_1BA2948C0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v0 = sub_1BA2C1610();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v3 + 104))(v2, *MEMORY[0x1E0DB57E8]);
  type metadata accessor for Settings.Ads.Debugging.DebugInterstitialAd(0);
  swift_allocObject();
  result = Settings.Ads.Debugging.DebugInterstitialAd.init(key:defaultValue:access:)(0xD000000000000035, 0x80000001BA2D1590, 0, (uint64_t)v2);
  qword_1ED5B0F70 = result;
  return result;
}

uint64_t Settings.Ads.Debugging.DebugInterstitialAd.__allocating_init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BA294C38(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))Settings.Ads.Debugging.DebugInterstitialAd.init(key:defaultValue:access:));
}

uint64_t static Settings.Ads.Debugging.debugInterstitial.getter()
{
  return sub_1BA237268(&qword_1ED5B0F80);
}

uint64_t sub_1BA294998()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v0 = sub_1BA2C1610();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v3 + 104))(v2, *MEMORY[0x1E0DB57E8]);
  type metadata accessor for Settings.Ads.Debugging.DebugSponsorshipAd(0);
  swift_allocObject();
  result = Settings.Ads.Debugging.DebugSponsorshipAd.init(key:defaultValue:access:)(0xD000000000000034, 0x80000001BA2D1630, 0, (uint64_t)v2);
  qword_1ED5B1038 = result;
  return result;
}

uint64_t Settings.Ads.Debugging.DebugSponsorshipAd.__allocating_init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BA294C38(a1, a2, a3, a4, Settings.Ads.Debugging.DebugSponsorshipAd.init(key:defaultValue:access:));
}

uint64_t static Settings.Ads.Debugging.debugSponsorship.getter()
{
  return sub_1BA237268(&qword_1ED5B0FF8);
}

uint64_t sub_1BA294A70()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v0 = sub_1BA2C1610();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v3 + 104))(v2, *MEMORY[0x1E0DB57E8]);
  type metadata accessor for Settings.Ads.Debugging.NativeOverride(0);
  swift_allocObject();
  result = Settings.Ads.Debugging.NativeOverride.init(key:defaultValue:access:)(0xD00000000000002FLL, 0x80000001BA2D1060, 0, (uint64_t)v2);
  qword_1ED5B11E8 = result;
  return result;
}

uint64_t Settings.Ads.Debugging.NativeOverride.__allocating_init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BA294C38(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))Settings.Ads.Debugging.NativeOverride.init(key:defaultValue:access:));
}

uint64_t static Settings.Ads.Debugging.nativeOverride.getter()
{
  return sub_1BA237268(&qword_1ED5B2D40);
}

uint64_t sub_1BA294B48()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v0 = sub_1BA2C1610();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v3 + 104))(v2, *MEMORY[0x1E0DB57E8]);
  type metadata accessor for Settings.Ads.Debugging.EOANativeAdInsertionLocationOverride(0);
  swift_allocObject();
  result = Settings.Ads.Debugging.EOANativeAdInsertionLocationOverride.init(key:defaultValue:access:)(0xD00000000000003CLL, 0x80000001BA2D1020, 0, (uint64_t)v2);
  qword_1ED5B35A8 = result;
  return result;
}

uint64_t Settings.Ads.Debugging.EOANativeAdInsertionLocationOverride.__allocating_init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BA294C38(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))Settings.Ads.Debugging.EOANativeAdInsertionLocationOverride.init(key:defaultValue:access:));
}

uint64_t static Settings.Ads.Debugging.eoaNativeAdInsertionLocationOverride.getter()
{
  return sub_1BA237268(qword_1ED5B3268);
}

uint64_t Settings.Ads.Debugging.FeedPrefetchDistance.__allocating_init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BA294C38(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))Settings.Ads.Debugging.FeedPrefetchDistance.init(key:defaultValue:access:));
}

uint64_t Settings.Ads.PromotedContentParameters.ContextPrefetchLimit.__allocating_init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BA294C38(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))Settings.Ads.PromotedContentParameters.ContextPrefetchLimit.init(key:defaultValue:access:));
}

uint64_t sub_1BA294C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  swift_allocObject();
  return a5(a1, a2, a3, a4);
}

uint64_t static Settings.Ads.PromotedContentParameters.contextPrefetchLimit.getter()
{
  return sub_1BA237268(&qword_1ED5B2E38);
}

uint64_t sub_1BA294CB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;

  v0 = sub_1BA2C1514();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BA2C1610();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA298694(0, &qword_1ED5B1458, MEMORY[0x1E0DB5878]);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57E8], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB54D8], v0);
  result = sub_1BA2C1640();
  qword_1ED5B2E40 = result;
  return result;
}

uint64_t static Settings.Ads.PromotedContentParameters.impressionTrackingEnabled.getter()
{
  return sub_1BA237268(&qword_1ED5B2DD0);
}

uint64_t Settings.Ads.Debugging.VisualDebugging.Mode.init(rawValue:)@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BA2C25DC();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t Settings.Ads.Debugging.VisualDebugging.Mode.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x746361706D6F63;
  else
    return 0x72616C75676572;
}

uint64_t sub_1BA294E90(char *a1, char *a2)
{
  return sub_1BA26E88C(*a1, *a2);
}

uint64_t sub_1BA294E9C()
{
  sub_1BA2C2720();
  sub_1BA2C21A4();
  swift_bridgeObjectRelease();
  return sub_1BA2C2738();
}

uint64_t sub_1BA294F10()
{
  sub_1BA2C21A4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA294F58()
{
  sub_1BA2C2720();
  sub_1BA2C21A4();
  swift_bridgeObjectRelease();
  return sub_1BA2C2738();
}

uint64_t sub_1BA294FC8@<X0>(char *a1@<X8>)
{
  return Settings.Ads.Debugging.VisualDebugging.Mode.init(rawValue:)(a1);
}

uint64_t sub_1BA294FD4()
{
  sub_1BA237178();
  return sub_1BA2C2210();
}

uint64_t sub_1BA295014()
{
  sub_1BA237178();
  return sub_1BA2C2204();
}

uint64_t Settings.Ads.Debugging.VisualDebugging.mode.getter()
{
  return swift_retain();
}

uint64_t sub_1BA29506C()
{
  return swift_release();
}

uint64_t Settings.Ads.Debugging.VisualDebugging.deinit()
{
  return sub_1BA297C30();
}

uint64_t Settings.Ads.Debugging.VisualDebugging.__deallocating_deinit()
{
  return sub_1BA297C70();
}

uint64_t Settings.Ads.Debugging.AutoPlacement.BannerType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BA2C25DC();
  result = swift_bridgeObjectRelease();
  v4 = 4;
  if (v2 < 4)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t Settings.Ads.Debugging.AutoPlacement.BannerType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA295114 + 4 * byte_1BA2C9820[*v0]))(7958113, 0xE300000000000000);
}

uint64_t sub_1BA295114()
{
  return 0x647261646E617473;
}

uint64_t sub_1BA29512C()
{
  return 0x685F656C62756F64;
}

uint64_t sub_1BA295150()
{
  return 0x656772616CLL;
}

void sub_1BA295164(char *a1)
{
  sub_1BA26E730(*a1);
}

void sub_1BA295170()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BA2C2720();
  __asm { BR              X9 }
}

uint64_t sub_1BA2951B4()
{
  sub_1BA2C21A4();
  swift_bridgeObjectRelease();
  return sub_1BA2C2738();
}

void sub_1BA29522C()
{
  __asm { BR              X10 }
}

uint64_t sub_1BA295260()
{
  sub_1BA2C21A4();
  return swift_bridgeObjectRelease();
}

void sub_1BA2952C4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BA2C2720();
  __asm { BR              X9 }
}

uint64_t sub_1BA295304()
{
  sub_1BA2C21A4();
  swift_bridgeObjectRelease();
  return sub_1BA2C2738();
}

uint64_t sub_1BA29537C@<X0>(char *a1@<X8>)
{
  return Settings.Ads.Debugging.AutoPlacement.BannerType.init(rawValue:)(a1);
}

uint64_t sub_1BA295388()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BA2953B0 + 4 * byte_1BA2C9830[*v0]))();
}

void sub_1BA2953B0(_QWORD *a1@<X8>)
{
  *a1 = 0x647261646E617473;
  a1[1] = 0xE800000000000000;
}

void sub_1BA2953CC(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "double_height");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_1BA2953F4(_QWORD *a1@<X8>)
{
  *a1 = 0x656772616CLL;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1BA29540C()
{
  sub_1BA2981F4();
  return sub_1BA2C2210();
}

uint64_t sub_1BA29544C()
{
  sub_1BA2981F4();
  return sub_1BA2C2204();
}

uint64_t sub_1BA295494()
{
  sub_1BA2981F4();
  return sub_1BA2C21F8();
}

uint64_t Settings.Ads.Debugging.AutoPlacement.frequency.getter()
{
  return swift_retain();
}

uint64_t Settings.Ads.Debugging.AutoPlacement.bannerType.getter()
{
  return swift_retain();
}

uint64_t Settings.Ads.Debugging.AutoPlacement.distanceFromMedia.getter()
{
  return swift_retain();
}

uint64_t Settings.Ads.Debugging.AutoPlacement.margin.getter()
{
  return swift_retain();
}

uint64_t Settings.Ads.Debugging.AutoPlacement.init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  void (*v14)(_BYTE *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_BYTE *, _QWORD, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v31[12];
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(_BYTE *, _QWORD, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v40 = a4;
  v41 = a1;
  v43 = a3;
  v42 = a2;
  v44 = sub_1BA2C161C();
  v38 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v6 = &v31[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1BA2C1610();
  v39 = *(_QWORD *)(v7 - 8);
  v8 = v39;
  MEMORY[0x1E0C80A78](v7);
  v10 = &v31[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = qword_1ED5B1128;
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5878];
  sub_1BA21F7F0(0, &qword_1ED5B1270, MEMORY[0x1E0DEB418], MEMORY[0x1E0DB59B8], MEMORY[0x1E0DB5878]);
  v45 = 10;
  v47 = 10;
  v48 = 0;
  v13 = *MEMORY[0x1E0DB57E8];
  v14 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 104);
  v34 = v7;
  v14(v10, v13, v7);
  v35 = v14;
  v37 = v4;
  swift_retain();
  *(_QWORD *)(v4 + v11) = sub_1BA2C164C();
  v36 = qword_1ED5B1110;
  sub_1BA236F78(0, &qword_1ED5B1258, (uint64_t (*)(void))sub_1BA297A38, (uint64_t)&type metadata for Settings.Ads.Debugging.AutoPlacement.BannerType, v12);
  v33 = v15;
  LOBYTE(v45) = 0;
  v16 = v13;
  v32 = v13;
  v14(v10, v13, v7);
  sub_1BA234760(0, &qword_1ED5B13C0, &qword_1ED5B1240, (uint64_t)&type metadata for Settings.Ads.Debugging.AutoPlacement.BannerType);
  sub_1BA22920C(0, &qword_1ED5B1240, (uint64_t)&type metadata for Settings.Ads.Debugging.AutoPlacement.BannerType, MEMORY[0x1E0DB5820]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BA2C4620;
  LOBYTE(v48) = 0;
  sub_1BA2C1628();
  LOBYTE(v48) = 1;
  sub_1BA2C1628();
  LOBYTE(v48) = 2;
  sub_1BA2C1628();
  LOBYTE(v48) = 3;
  sub_1BA2C1628();
  v17 = *MEMORY[0x1E0DB5800];
  v18 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v38 + 104);
  v19 = v6;
  v20 = v44;
  v18(v6, v17, v44);
  sub_1BA297A7C();
  v21 = sub_1BA2C1634();
  v22 = v37;
  *(_QWORD *)(v37 + v36) = v21;
  v38 = qword_1ED5B1118;
  v23 = v16;
  v25 = v34;
  v24 = v35;
  v35(v10, v23, v34);
  v18(v19, v17, v20);
  v45 = 0;
  v46 = 0xE000000000000000;
  sub_1BA21F7F0(0, &qword_1ED5B1268, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB5958], MEMORY[0x1E0DB5878]);
  swift_allocObject();
  *(_QWORD *)(v22 + v38) = sub_1BA2C1658();
  v26 = qword_1ED5B1120;
  v24(v10, v32, v25);
  v18(v19, v17, v44);
  v45 = 0;
  v46 = 0xE000000000000000;
  swift_allocObject();
  *(_QWORD *)(v22 + v26) = sub_1BA2C1658();
  swift_release();
  v28 = v39;
  v27 = v40;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v39 + 16))(v10, v40, v25);
  v29 = sub_1BA2C1520();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v25);
  return v29;
}

uint64_t sub_1BA295A0C()
{
  return sub_1BA2971B8();
}

uint64_t Settings.Ads.Debugging.AutoPlacement.deinit()
{
  return sub_1BA297234();
}

uint64_t Settings.Ads.Debugging.AutoPlacement.__deallocating_deinit()
{
  return sub_1BA2972CC();
}

uint64_t Settings.Ads.Debugging.DebugBanner.loadingDelay.getter()
{
  return swift_retain();
}

uint64_t Settings.Ads.Debugging.DebugBanner.successRate.getter()
{
  return swift_retain();
}

uint64_t Settings.Ads.Debugging.DebugBanner.collapseBehavior.getter()
{
  return swift_retain();
}

uint64_t Settings.Ads.Debugging.DebugBanner.init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  int v30;
  int v31;

  v25 = a4;
  v26 = a1;
  v28 = a3;
  v27 = a2;
  v5 = sub_1BA2C161C();
  v23 = *(_QWORD *)(v5 - 8);
  v24 = v5;
  MEMORY[0x1E0C80A78](v5);
  v22 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BA2C1610();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = qword_1ED5B13F8;
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5878];
  sub_1BA21F7F0(0, &qword_1ED5B1468, MEMORY[0x1E0DEB188], MEMORY[0x1E0DB59A0], MEMORY[0x1E0DB5878]);
  v30 = 0;
  v31 = 1056964608;
  v29 = 1092616192;
  v13 = *MEMORY[0x1E0DB57E8];
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v14(v10, v13, v7);
  swift_retain();
  *(_QWORD *)(v4 + v11) = sub_1BA2C164C();
  v15 = qword_1ED5B13F0;
  v30 = 0;
  v31 = 1065353216;
  v29 = 1065353216;
  v14(v10, v13, v7);
  *(_QWORD *)(v4 + v15) = sub_1BA2C164C();
  v21 = qword_1ED5B34E0;
  sub_1BA236F78(0, &qword_1ED5B35D0, (uint64_t (*)(void))sub_1BA2811A8, (uint64_t)&type metadata for DebugAdCollapseBehavior, v12);
  v20 = v16;
  LOBYTE(v31) = 0;
  v14(v10, v13, v7);
  sub_1BA234760(0, &qword_1ED5B3600, &qword_1ED5B35C0, (uint64_t)&type metadata for DebugAdCollapseBehavior);
  sub_1BA22920C(0, &qword_1ED5B35C0, (uint64_t)&type metadata for DebugAdCollapseBehavior, MEMORY[0x1E0DB5820]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BA2C3840;
  LOBYTE(v30) = 0;
  sub_1BA2C1628();
  LOBYTE(v30) = 1;
  sub_1BA2C1628();
  LOBYTE(v30) = 2;
  sub_1BA2C1628();
  (*(void (**)(char *, _QWORD, uint64_t))(v23 + 104))(v22, *MEMORY[0x1E0DB5800], v24);
  sub_1BA297AC0();
  *(_QWORD *)(v4 + v21) = sub_1BA2C1634();
  swift_release();
  v17 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v25, v7);
  v18 = sub_1BA2C1520();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v17, v7);
  return v18;
}

uint64_t sub_1BA295E88()
{
  return sub_1BA296648();
}

uint64_t Settings.Ads.Debugging.DebugBanner.deinit()
{
  return sub_1BA2966AC();
}

uint64_t Settings.Ads.Debugging.DebugBanner.__deallocating_deinit()
{
  return sub_1BA296724();
}

uint64_t Settings.Ads.Debugging.DebugNativeAd.loadingDelay.getter()
{
  return swift_retain();
}

uint64_t Settings.Ads.Debugging.DebugNativeAd.articleIdentifier.getter()
{
  return swift_retain();
}

uint64_t Settings.Ads.Debugging.DebugNativeAd.init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  int v27;

  v20 = a4;
  v21 = a1;
  v23 = a3;
  v22 = a2;
  v19 = sub_1BA2C161C();
  v5 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BA2C1610();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = qword_1ED5B3500;
  sub_1BA21F7F0(0, &qword_1ED5B1468, MEMORY[0x1E0DEB188], MEMORY[0x1E0DB59A0], MEMORY[0x1E0DB5878]);
  LODWORD(v24) = 1056964608;
  v26 = 1092616192;
  v27 = 0;
  v13 = *MEMORY[0x1E0DB57E8];
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v14(v11, v13, v8);
  swift_retain();
  *(_QWORD *)(v4 + v12) = sub_1BA2C164C();
  v15 = qword_1ED5B3508;
  v14(v11, v13, v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB5800], v19);
  v24 = 0xD000000000000017;
  v25 = 0x80000001BA2D08B0;
  sub_1BA21F7F0(0, &qword_1ED5B1268, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB5958], MEMORY[0x1E0DB5878]);
  swift_allocObject();
  *(_QWORD *)(v4 + v15) = sub_1BA2C1658();
  swift_release();
  v16 = v20;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v20, v8);
  v17 = sub_1BA2C1520();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v16, v8);
  return v17;
}

uint64_t sub_1BA296160()
{
  swift_release();
  return swift_release();
}

uint64_t Settings.Ads.Debugging.DebugNativeAd.deinit()
{
  uint64_t v0;

  v0 = sub_1BA2C1544();
  swift_release();
  swift_release();
  return v0;
}

uint64_t Settings.Ads.Debugging.DebugNativeAd.__deallocating_deinit()
{
  sub_1BA2C1544();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t Settings.Ads.Debugging.DebugInterstitialAd.loadingDelay.getter()
{
  return swift_retain();
}

uint64_t Settings.Ads.Debugging.DebugInterstitialAd.successRate.getter()
{
  return swift_retain();
}

uint64_t Settings.Ads.Debugging.DebugInterstitialAd.collapseBehavior.getter()
{
  return swift_retain();
}

uint64_t Settings.Ads.Debugging.DebugInterstitialAd.init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  int v30;
  int v31;

  v25 = a4;
  v26 = a1;
  v28 = a3;
  v27 = a2;
  v5 = sub_1BA2C161C();
  v23 = *(_QWORD *)(v5 - 8);
  v24 = v5;
  MEMORY[0x1E0C80A78](v5);
  v22 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BA2C1610();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = qword_1ED5B0F90;
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5878];
  sub_1BA21F7F0(0, &qword_1ED5B1468, MEMORY[0x1E0DEB188], MEMORY[0x1E0DB59A0], MEMORY[0x1E0DB5878]);
  v30 = 0;
  v31 = 1056964608;
  v29 = 1092616192;
  v13 = *MEMORY[0x1E0DB57E8];
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v14(v10, v13, v7);
  swift_retain();
  *(_QWORD *)(v4 + v11) = sub_1BA2C164C();
  v15 = qword_1ED5B0F88;
  v30 = 0;
  v31 = 1065353216;
  v29 = 1065353216;
  v14(v10, v13, v7);
  *(_QWORD *)(v4 + v15) = sub_1BA2C164C();
  v21 = qword_1ED5B0F98;
  sub_1BA236F78(0, &qword_1ED5B35D0, (uint64_t (*)(void))sub_1BA2811A8, (uint64_t)&type metadata for DebugAdCollapseBehavior, v12);
  v20 = v16;
  LOBYTE(v31) = 0;
  v14(v10, v13, v7);
  sub_1BA234760(0, &qword_1ED5B3600, &qword_1ED5B35C0, (uint64_t)&type metadata for DebugAdCollapseBehavior);
  sub_1BA22920C(0, &qword_1ED5B35C0, (uint64_t)&type metadata for DebugAdCollapseBehavior, MEMORY[0x1E0DB5820]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BA2C3840;
  LOBYTE(v30) = 0;
  sub_1BA2C1628();
  LOBYTE(v30) = 1;
  sub_1BA2C1628();
  LOBYTE(v30) = 2;
  sub_1BA2C1628();
  (*(void (**)(char *, _QWORD, uint64_t))(v23 + 104))(v22, *MEMORY[0x1E0DB5800], v24);
  sub_1BA297AC0();
  *(_QWORD *)(v4 + v21) = sub_1BA2C1634();
  swift_release();
  v17 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v25, v7);
  v18 = sub_1BA2C1520();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v17, v7);
  return v18;
}

uint64_t sub_1BA29662C()
{
  return sub_1BA296648();
}

uint64_t sub_1BA296648()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t Settings.Ads.Debugging.DebugInterstitialAd.deinit()
{
  return sub_1BA2966AC();
}

uint64_t sub_1BA2966AC()
{
  uint64_t v0;

  v0 = sub_1BA2C1544();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t Settings.Ads.Debugging.DebugInterstitialAd.__deallocating_deinit()
{
  return sub_1BA296724();
}

uint64_t sub_1BA296724()
{
  sub_1BA2C1544();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t Settings.Ads.Debugging.DebugSponsorshipAd.loadingDelay.getter()
{
  return swift_retain();
}

uint64_t Settings.Ads.Debugging.DebugSponsorshipAd.init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD v13[4];

  v6 = sub_1BA2C1610();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = qword_1ED5B1040;
  sub_1BA21F7F0(0, &qword_1ED5B1468, MEMORY[0x1E0DEB188], MEMORY[0x1E0DB59A0], MEMORY[0x1E0DB5878]);
  v13[2] = 0;
  v13[3] = 1056964608;
  v13[1] = 1092616192;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DB57E8], v6);
  swift_retain();
  *(_QWORD *)(v4 + v10) = sub_1BA2C164C();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a4, v6);
  v11 = sub_1BA2C1520();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a4, v6);
  return v11;
}

uint64_t sub_1BA296910()
{
  return swift_release();
}

uint64_t Settings.Ads.Debugging.DebugSponsorshipAd.deinit()
{
  return sub_1BA297C30();
}

uint64_t Settings.Ads.Debugging.DebugSponsorshipAd.__deallocating_deinit()
{
  return sub_1BA297C70();
}

uint64_t Settings.Ads.Debugging.NativeOverride.DesiredPosition.init(rawValue:)@<X0>(char *a1@<X8>)
{
  return sub_1BA297354(a1);
}

uint64_t Settings.Ads.Debugging.NativeOverride.DesiredPosition.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656873696C627570;
  if (*v0 != 1)
    v1 = 0x646574616C6572;
  if (*v0)
    return v1;
  else
    return 1701736302;
}

uint64_t sub_1BA29699C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BA26E620(*a1, *a2);
}

uint64_t sub_1BA2969A8()
{
  sub_1BA2C2720();
  sub_1BA2C21A4();
  swift_bridgeObjectRelease();
  return sub_1BA2C2738();
}

uint64_t sub_1BA296A44()
{
  sub_1BA2C21A4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA296ABC()
{
  sub_1BA2C2720();
  sub_1BA2C21A4();
  swift_bridgeObjectRelease();
  return sub_1BA2C2738();
}

uint64_t sub_1BA296B54@<X0>(char *a1@<X8>)
{
  return Settings.Ads.Debugging.NativeOverride.DesiredPosition.init(rawValue:)(a1);
}

void sub_1BA296B60(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE900000000000072;
  v5 = 0x656873696C627570;
  if (v2 != 1)
  {
    v5 = 0x646574616C6572;
    v4 = 0xE700000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1701736302;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BA296BBC()
{
  sub_1BA2981B0();
  return sub_1BA2C2210();
}

uint64_t sub_1BA296BFC()
{
  sub_1BA2981B0();
  return sub_1BA2C2204();
}

uint64_t sub_1BA296C44()
{
  sub_1BA2981B0();
  return sub_1BA2C21F8();
}

uint64_t Settings.Ads.Debugging.NativeOverride.articleID.getter()
{
  return swift_retain();
}

uint64_t Settings.Ads.Debugging.NativeOverride.title.getter()
{
  return swift_retain();
}

uint64_t Settings.Ads.Debugging.NativeOverride.advertiserName.getter()
{
  return swift_retain();
}

uint64_t Settings.Ads.Debugging.NativeOverride.desiredPosition.getter()
{
  return swift_retain();
}

uint64_t Settings.Ads.Debugging.NativeOverride.init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  char *v17;
  uint64_t v18;
  void (*v19)(void);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v30)(void);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  unint64_t v46;

  v38 = a4;
  v39 = a1;
  v41 = a3;
  v40 = a2;
  v5 = sub_1BA2C161C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BA2C1610();
  v10 = *(_QWORD *)(v9 - 8);
  v31 = v9;
  v37 = v10;
  MEMORY[0x1E0C80A78](v9);
  v33 = qword_1ED5B11A8;
  v12 = *MEMORY[0x1E0DB57E8];
  v30 = *(void (**)(void))(v13 + 104);
  v14 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = v12;
  v30();
  v15 = *MEMORY[0x1E0DB5800];
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v16(v8, v15, v5);
  v45 = 0;
  v46 = 0xE000000000000000;
  sub_1BA21F7F0(0, &qword_1ED5B1268, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB5958], MEMORY[0x1E0DB5878]);
  swift_allocObject();
  v43 = v4;
  swift_retain();
  *(_QWORD *)(v4 + v33) = sub_1BA2C1658();
  v33 = qword_1ED5B11A0;
  v17 = v14;
  v18 = v12;
  v19 = v30;
  v20 = v31;
  ((void (*)(char *, uint64_t, uint64_t))v30)(v14, v18, v31);
  v21 = v15;
  v35 = v15;
  v34 = v5;
  v36 = v16;
  v16(v8, v15, v5);
  v45 = 0;
  v46 = 0xE000000000000000;
  swift_allocObject();
  v22 = v8;
  v23 = sub_1BA2C1658();
  v24 = v43;
  *(_QWORD *)(v43 + v33) = v23;
  v33 = qword_1ED5B1170;
  ((void (*)(char *, _QWORD, uint64_t))v19)(v17, v42, v20);
  v16(v22, v21, v5);
  v45 = 0;
  v46 = 0xE000000000000000;
  swift_allocObject();
  *(_QWORD *)(v24 + v33) = sub_1BA2C1658();
  v33 = qword_1ED5B1198;
  sub_1BA236F78(0, &qword_1ED5B1260, (uint64_t (*)(void))sub_1BA297B04, (uint64_t)&type metadata for Settings.Ads.Debugging.NativeOverride.DesiredPosition, MEMORY[0x1E0DB5878]);
  v32 = v25;
  LOBYTE(v45) = 0;
  ((void (*)(char *, _QWORD, uint64_t))v19)(v17, v42, v20);
  sub_1BA234760(0, &qword_1ED5B13C8, &qword_1ED5B1248, (uint64_t)&type metadata for Settings.Ads.Debugging.NativeOverride.DesiredPosition);
  sub_1BA22920C(0, &qword_1ED5B1248, (uint64_t)&type metadata for Settings.Ads.Debugging.NativeOverride.DesiredPosition, MEMORY[0x1E0DB5820]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BA2C3840;
  v44 = 0;
  sub_1BA2C1628();
  v44 = 1;
  sub_1BA2C1628();
  v44 = 2;
  sub_1BA2C1628();
  v36(v22, v35, v34);
  sub_1BA297B48();
  *(_QWORD *)(v43 + v33) = sub_1BA2C1634();
  swift_release();
  v27 = v37;
  v26 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v17, v38, v20);
  v28 = sub_1BA2C1520();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v20);
  return v28;
}

uint64_t sub_1BA297194()
{
  return sub_1BA2971B8();
}

uint64_t sub_1BA2971B8()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t Settings.Ads.Debugging.NativeOverride.deinit()
{
  return sub_1BA297234();
}

uint64_t sub_1BA297234()
{
  uint64_t v0;

  v0 = sub_1BA2C1544();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t Settings.Ads.Debugging.NativeOverride.__deallocating_deinit()
{
  return sub_1BA2972CC();
}

uint64_t sub_1BA2972CC()
{
  sub_1BA2C1544();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t Settings.Ads.Debugging.EOANativeAdInsertionLocationOverride.EOANativeAdLocation.init(rawValue:)@<X0>(char *a1@<X8>)
{
  return sub_1BA297354(a1);
}

uint64_t sub_1BA297354@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BA2C25DC();
  result = swift_bridgeObjectRelease();
  v4 = 3;
  if (v2 < 3)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t Settings.Ads.Debugging.EOANativeAdInsertionLocationOverride.EOANativeAdLocation.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x676E696461656CLL;
  if (*v0 != 1)
    v1 = 0x676E696C69617274;
  if (*v0)
    return v1;
  else
    return 1701736302;
}

uint64_t sub_1BA2973FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BA26E518(*a1, *a2);
}

uint64_t sub_1BA297408()
{
  sub_1BA2C2720();
  sub_1BA2C21A4();
  swift_bridgeObjectRelease();
  return sub_1BA2C2738();
}

uint64_t sub_1BA2974A0()
{
  sub_1BA2C21A4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA297514()
{
  sub_1BA2C2720();
  sub_1BA2C21A4();
  swift_bridgeObjectRelease();
  return sub_1BA2C2738();
}

uint64_t sub_1BA2975A8@<X0>(char *a1@<X8>)
{
  return Settings.Ads.Debugging.EOANativeAdInsertionLocationOverride.EOANativeAdLocation.init(rawValue:)(a1);
}

void sub_1BA2975B4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x676E696461656CLL;
  if (v2 != 1)
  {
    v5 = 0x676E696C69617274;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1701736302;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BA29760C()
{
  sub_1BA29816C();
  return sub_1BA2C2210();
}

uint64_t sub_1BA29764C()
{
  sub_1BA29816C();
  return sub_1BA2C2204();
}

uint64_t sub_1BA297694()
{
  sub_1BA29816C();
  return sub_1BA2C21F8();
}

uint64_t Settings.Ads.Debugging.EOANativeAdInsertionLocationOverride.eoaNativeAdLocation.getter()
{
  return swift_retain();
}

uint64_t Settings.Ads.Debugging.EOANativeAdInsertionLocationOverride.init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  char v23;
  char v24;
  char v25;
  char v26;

  v19 = a4;
  v20 = a1;
  v22 = a3;
  v21 = a2;
  v18 = sub_1BA2C161C();
  v16 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v15 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BA2C1610();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = qword_1ED5B3548;
  sub_1BA236F78(0, &qword_1ED5B35D8, (uint64_t (*)(void))sub_1BA297B8C, (uint64_t)&type metadata for Settings.Ads.Debugging.EOANativeAdInsertionLocationOverride.EOANativeAdLocation, MEMORY[0x1E0DB5878]);
  v14[1] = v10;
  v26 = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DB57E8], v6);
  sub_1BA234760(0, &qword_1ED5B3608, &qword_1ED5B35C8, (uint64_t)&type metadata for Settings.Ads.Debugging.EOANativeAdInsertionLocationOverride.EOANativeAdLocation);
  sub_1BA22920C(0, &qword_1ED5B35C8, (uint64_t)&type metadata for Settings.Ads.Debugging.EOANativeAdInsertionLocationOverride.EOANativeAdLocation, MEMORY[0x1E0DB5820]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BA2C3840;
  v25 = 0;
  swift_retain();
  sub_1BA2C1628();
  v24 = 1;
  sub_1BA2C1628();
  v23 = 2;
  sub_1BA2C1628();
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v15, *MEMORY[0x1E0DB5800], v18);
  sub_1BA297BD0();
  *(_QWORD *)(v4 + v17) = sub_1BA2C1634();
  swift_release();
  v11 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v19, v6);
  v12 = sub_1BA2C1520();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v6);
  return v12;
}

uint64_t sub_1BA2979C8()
{
  return swift_release();
}

uint64_t Settings.Ads.Debugging.EOANativeAdInsertionLocationOverride.deinit()
{
  return sub_1BA297C30();
}

uint64_t Settings.Ads.Debugging.EOANativeAdInsertionLocationOverride.__deallocating_deinit()
{
  return sub_1BA297C70();
}

uint64_t Settings.Ads.Debugging.FeedPrefetchDistance.numberOfScreenfuls.getter()
{
  return swift_retain();
}

uint64_t sub_1BA297A00()
{
  return swift_release();
}

uint64_t Settings.Ads.Debugging.FeedPrefetchDistance.deinit()
{
  return sub_1BA297C30();
}

uint64_t Settings.Ads.Debugging.FeedPrefetchDistance.__deallocating_deinit()
{
  return sub_1BA297C70();
}

uint64_t Settings.Ads.PromotedContentParameters.ContextPrefetchLimit.limit.getter()
{
  return swift_retain();
}

unint64_t sub_1BA297A38()
{
  unint64_t result;

  result = qword_1ED5B1108;
  if (!qword_1ED5B1108)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for Settings.Ads.Debugging.AutoPlacement.BannerType, &type metadata for Settings.Ads.Debugging.AutoPlacement.BannerType);
    atomic_store(result, (unint64_t *)&qword_1ED5B1108);
  }
  return result;
}

unint64_t sub_1BA297A7C()
{
  unint64_t result;

  result = qword_1ED5B1100;
  if (!qword_1ED5B1100)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for Settings.Ads.Debugging.AutoPlacement.BannerType, &type metadata for Settings.Ads.Debugging.AutoPlacement.BannerType);
    atomic_store(result, (unint64_t *)&qword_1ED5B1100);
  }
  return result;
}

unint64_t sub_1BA297AC0()
{
  unint64_t result;

  result = qword_1ED5B35E0;
  if (!qword_1ED5B35E0)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for DebugAdCollapseBehavior, &type metadata for DebugAdCollapseBehavior);
    atomic_store(result, (unint64_t *)&qword_1ED5B35E0);
  }
  return result;
}

unint64_t sub_1BA297B04()
{
  unint64_t result;

  result = qword_1ED5B1190;
  if (!qword_1ED5B1190)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for Settings.Ads.Debugging.NativeOverride.DesiredPosition, &type metadata for Settings.Ads.Debugging.NativeOverride.DesiredPosition);
    atomic_store(result, (unint64_t *)&qword_1ED5B1190);
  }
  return result;
}

unint64_t sub_1BA297B48()
{
  unint64_t result;

  result = qword_1ED5B1188;
  if (!qword_1ED5B1188)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for Settings.Ads.Debugging.NativeOverride.DesiredPosition, &type metadata for Settings.Ads.Debugging.NativeOverride.DesiredPosition);
    atomic_store(result, (unint64_t *)&qword_1ED5B1188);
  }
  return result;
}

unint64_t sub_1BA297B8C()
{
  unint64_t result;

  result = qword_1ED5B3568;
  if (!qword_1ED5B3568)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for Settings.Ads.Debugging.EOANativeAdInsertionLocationOverride.EOANativeAdLocation, &type metadata for Settings.Ads.Debugging.EOANativeAdInsertionLocationOverride.EOANativeAdLocation);
    atomic_store(result, (unint64_t *)&qword_1ED5B3568);
  }
  return result;
}

unint64_t sub_1BA297BD0()
{
  unint64_t result;

  result = qword_1ED5B3560;
  if (!qword_1ED5B3560)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for Settings.Ads.Debugging.EOANativeAdInsertionLocationOverride.EOANativeAdLocation, &type metadata for Settings.Ads.Debugging.EOANativeAdInsertionLocationOverride.EOANativeAdLocation);
    atomic_store(result, (unint64_t *)&qword_1ED5B3560);
  }
  return result;
}

uint64_t sub_1BA297C14()
{
  return swift_release();
}

uint64_t Settings.Ads.PromotedContentParameters.ContextPrefetchLimit.deinit()
{
  return sub_1BA297C30();
}

uint64_t sub_1BA297C30()
{
  uint64_t v0;

  v0 = sub_1BA2C1544();
  swift_release();
  return v0;
}

uint64_t Settings.Ads.PromotedContentParameters.ContextPrefetchLimit.__deallocating_deinit()
{
  return sub_1BA297C70();
}

uint64_t sub_1BA297C70()
{
  sub_1BA2C1544();
  swift_release();
  return swift_deallocClassInstance();
}

unint64_t sub_1BA297CB0()
{
  unint64_t result;

  result = qword_1ED5B10F0;
  if (!qword_1ED5B10F0)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for Settings.Ads.Debugging.AutoPlacement.BannerType, &type metadata for Settings.Ads.Debugging.AutoPlacement.BannerType);
    atomic_store(result, (unint64_t *)&qword_1ED5B10F0);
  }
  return result;
}

unint64_t sub_1BA297CF8()
{
  unint64_t result;

  result = qword_1ED5B1178;
  if (!qword_1ED5B1178)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for Settings.Ads.Debugging.NativeOverride.DesiredPosition, &type metadata for Settings.Ads.Debugging.NativeOverride.DesiredPosition);
    atomic_store(result, (unint64_t *)&qword_1ED5B1178);
  }
  return result;
}

unint64_t sub_1BA297D40()
{
  unint64_t result;

  result = qword_1ED5B3550;
  if (!qword_1ED5B3550)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for Settings.Ads.Debugging.EOANativeAdInsertionLocationOverride.EOANativeAdLocation, &type metadata for Settings.Ads.Debugging.EOANativeAdInsertionLocationOverride.EOANativeAdLocation);
    atomic_store(result, (unint64_t *)&qword_1ED5B3550);
  }
  return result;
}

ValueMetadata *type metadata accessor for Settings.Ads()
{
  return &type metadata for Settings.Ads;
}

ValueMetadata *type metadata accessor for Settings.Ads.Debugging()
{
  return &type metadata for Settings.Ads.Debugging;
}

ValueMetadata *type metadata accessor for Settings.Ads.PromotedContentParameters()
{
  return &type metadata for Settings.Ads.PromotedContentParameters;
}

uint64_t sub_1BA297DB4()
{
  return type metadata accessor for Settings.Ads.Debugging.VisualDebugging(0);
}

uint64_t type metadata accessor for Settings.Ads.Debugging.AutoPlacement(uint64_t a1)
{
  return sub_1BA21CE7C(a1, (uint64_t *)&unk_1ED5B1130);
}

uint64_t sub_1BA297DD0()
{
  return sub_1BA297FFC();
}

uint64_t sub_1BA297DDC()
{
  return type metadata accessor for Settings.Ads.Debugging.AutoPlacement(0);
}

uint64_t _s3AdsV9DebuggingV13AutoPlacementC10BannerTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BA297E30 + 4 * byte_1BA2C9843[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BA297E64 + 4 * byte_1BA2C983E[v4]))();
}

uint64_t sub_1BA297E64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA297E6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA297E74);
  return result;
}

uint64_t sub_1BA297E80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA297E88);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BA297E8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA297E94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Settings.Ads.Debugging.AutoPlacement.BannerType()
{
  return &type metadata for Settings.Ads.Debugging.AutoPlacement.BannerType;
}

uint64_t type metadata accessor for Settings.Ads.Debugging.DebugBanner(uint64_t a1)
{
  return sub_1BA21CE7C(a1, (uint64_t *)&unk_1ED5B1400);
}

uint64_t sub_1BA297EC4()
{
  return sub_1BA297F60();
}

uint64_t sub_1BA297ED0()
{
  return type metadata accessor for Settings.Ads.Debugging.DebugBanner(0);
}

uint64_t type metadata accessor for Settings.Ads.Debugging.DebugNativeAd(uint64_t a1)
{
  return sub_1BA21CE7C(a1, (uint64_t *)&unk_1ED5B3510);
}

uint64_t sub_1BA297EEC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BA297F38()
{
  return type metadata accessor for Settings.Ads.Debugging.DebugNativeAd(0);
}

uint64_t type metadata accessor for Settings.Ads.Debugging.DebugInterstitialAd(uint64_t a1)
{
  return sub_1BA21CE7C(a1, (uint64_t *)&unk_1ED5B0FA0);
}

uint64_t sub_1BA297F54()
{
  return sub_1BA297F60();
}

uint64_t sub_1BA297F60()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BA297FAC()
{
  return type metadata accessor for Settings.Ads.Debugging.DebugInterstitialAd(0);
}

uint64_t type metadata accessor for Settings.Ads.Debugging.DebugSponsorshipAd(uint64_t a1)
{
  return sub_1BA21CE7C(a1, (uint64_t *)&unk_1ED5B1048);
}

uint64_t sub_1BA297FC8()
{
  return sub_1BA21D210();
}

uint64_t sub_1BA297FD4()
{
  return type metadata accessor for Settings.Ads.Debugging.DebugSponsorshipAd(0);
}

uint64_t type metadata accessor for Settings.Ads.Debugging.NativeOverride(uint64_t a1)
{
  return sub_1BA21CE7C(a1, (uint64_t *)&unk_1ED5B11B0);
}

uint64_t sub_1BA297FF0()
{
  return sub_1BA297FFC();
}

uint64_t sub_1BA297FFC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BA298048()
{
  return type metadata accessor for Settings.Ads.Debugging.NativeOverride(0);
}

ValueMetadata *type metadata accessor for Settings.Ads.Debugging.NativeOverride.DesiredPosition()
{
  return &type metadata for Settings.Ads.Debugging.NativeOverride.DesiredPosition;
}

uint64_t type metadata accessor for Settings.Ads.Debugging.EOANativeAdInsertionLocationOverride(uint64_t a1)
{
  return sub_1BA21CE7C(a1, (uint64_t *)&unk_1ED5B3570);
}

uint64_t sub_1BA29807C()
{
  return sub_1BA21D210();
}

uint64_t sub_1BA298088()
{
  return type metadata accessor for Settings.Ads.Debugging.EOANativeAdInsertionLocationOverride(0);
}

uint64_t _s3AdsV9DebuggingV14NativeOverrideC15DesiredPositionOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BA2980DC + 4 * byte_1BA2C984D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BA298110 + 4 * byte_1BA2C9848[v4]))();
}

uint64_t sub_1BA298110(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA298118(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA298120);
  return result;
}

uint64_t sub_1BA29812C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA298134);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BA298138(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA298140(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Settings.Ads.Debugging.EOANativeAdInsertionLocationOverride.EOANativeAdLocation()
{
  return &type metadata for Settings.Ads.Debugging.EOANativeAdInsertionLocationOverride.EOANativeAdLocation;
}

uint64_t sub_1BA29815C()
{
  return type metadata accessor for Settings.Ads.Debugging.FeedPrefetchDistance(0);
}

uint64_t sub_1BA298164()
{
  return type metadata accessor for Settings.Ads.PromotedContentParameters.ContextPrefetchLimit(0);
}

unint64_t sub_1BA29816C()
{
  unint64_t result;

  result = qword_1ED5B3558;
  if (!qword_1ED5B3558)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for Settings.Ads.Debugging.EOANativeAdInsertionLocationOverride.EOANativeAdLocation, &type metadata for Settings.Ads.Debugging.EOANativeAdInsertionLocationOverride.EOANativeAdLocation);
    atomic_store(result, (unint64_t *)&qword_1ED5B3558);
  }
  return result;
}

unint64_t sub_1BA2981B0()
{
  unint64_t result;

  result = qword_1ED5B1180;
  if (!qword_1ED5B1180)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for Settings.Ads.Debugging.NativeOverride.DesiredPosition, &type metadata for Settings.Ads.Debugging.NativeOverride.DesiredPosition);
    atomic_store(result, (unint64_t *)&qword_1ED5B1180);
  }
  return result;
}

unint64_t sub_1BA2981F4()
{
  unint64_t result;

  result = qword_1ED5B10F8;
  if (!qword_1ED5B10F8)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for Settings.Ads.Debugging.AutoPlacement.BannerType, &type metadata for Settings.Ads.Debugging.AutoPlacement.BannerType);
    atomic_store(result, (unint64_t *)&qword_1ED5B10F8);
  }
  return result;
}

void sub_1BA298238(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BA2C269C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_1BA298284()
{
  unint64_t result;

  result = qword_1EF27FA58;
  if (!qword_1EF27FA58)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF27FA58);
  }
  return result;
}

unint64_t sub_1BA2982D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF27FA68;
  if (!qword_1EF27FA68)
  {
    sub_1BA236F78(255, &qword_1EF27FA60, (uint64_t (*)(void))sub_1BA2370F0, (uint64_t)&type metadata for Settings.Ads.Debugging.VisualDebugging.Mode, MEMORY[0x1E0DB5770]);
    result = MEMORY[0x1BCCD93D0](MEMORY[0x1E0DB5780], v1);
    atomic_store(result, (unint64_t *)&qword_1EF27FA68);
  }
  return result;
}

unint64_t sub_1BA298340()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF27FA78;
  if (!qword_1EF27FA78)
  {
    sub_1BA21F7F0(255, &qword_1EF27FA70, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DB5980], MEMORY[0x1E0DB5770]);
    result = MEMORY[0x1BCCD93D0](MEMORY[0x1E0DB5780], v1);
    atomic_store(result, (unint64_t *)&qword_1EF27FA78);
  }
  return result;
}

unint64_t sub_1BA2983A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF27FA88;
  if (!qword_1EF27FA88)
  {
    sub_1BA21F7F0(255, &qword_1EF27FA80, MEMORY[0x1E0DEB188], MEMORY[0x1E0DB59A0], MEMORY[0x1E0DB5770]);
    result = MEMORY[0x1BCCD93D0](MEMORY[0x1E0DB5780], v1);
    atomic_store(result, (unint64_t *)&qword_1EF27FA88);
  }
  return result;
}

unint64_t sub_1BA298410()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF27FA98;
  if (!qword_1EF27FA98)
  {
    sub_1BA236F78(255, &qword_1EF27FA90, (uint64_t (*)(void))sub_1BA2811A8, (uint64_t)&type metadata for DebugAdCollapseBehavior, MEMORY[0x1E0DB5770]);
    result = MEMORY[0x1BCCD93D0](MEMORY[0x1E0DB5780], v1);
    atomic_store(result, (unint64_t *)&qword_1EF27FA98);
  }
  return result;
}

unint64_t sub_1BA298478()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF27FAA8;
  if (!qword_1EF27FAA8)
  {
    sub_1BA21F7F0(255, &qword_1EF27FAA0, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB5958], MEMORY[0x1E0DB5770]);
    result = MEMORY[0x1BCCD93D0](MEMORY[0x1E0DB5780], v1);
    atomic_store(result, (unint64_t *)&qword_1EF27FAA8);
  }
  return result;
}

unint64_t sub_1BA2984E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF27FAB8;
  if (!qword_1EF27FAB8)
  {
    sub_1BA21F7F0(255, &qword_1EF27FAB0, MEMORY[0x1E0DEB418], MEMORY[0x1E0DB59B8], MEMORY[0x1E0DB5770]);
    result = MEMORY[0x1BCCD93D0](MEMORY[0x1E0DB5780], v1);
    atomic_store(result, (unint64_t *)&qword_1EF27FAB8);
  }
  return result;
}

unint64_t sub_1BA298548()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF27FAC8;
  if (!qword_1EF27FAC8)
  {
    sub_1BA236F78(255, &qword_1EF27FAC0, (uint64_t (*)(void))sub_1BA297A38, (uint64_t)&type metadata for Settings.Ads.Debugging.AutoPlacement.BannerType, MEMORY[0x1E0DB5770]);
    result = MEMORY[0x1BCCD93D0](MEMORY[0x1E0DB5780], v1);
    atomic_store(result, (unint64_t *)&qword_1EF27FAC8);
  }
  return result;
}

unint64_t sub_1BA2985B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF27FAD8;
  if (!qword_1EF27FAD8)
  {
    sub_1BA236F78(255, &qword_1EF27FAD0, (uint64_t (*)(void))sub_1BA297B04, (uint64_t)&type metadata for Settings.Ads.Debugging.NativeOverride.DesiredPosition, MEMORY[0x1E0DB5770]);
    result = MEMORY[0x1BCCD93D0](MEMORY[0x1E0DB5780], v1);
    atomic_store(result, (unint64_t *)&qword_1EF27FAD8);
  }
  return result;
}

unint64_t sub_1BA298618()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF27FAE8;
  if (!qword_1EF27FAE8)
  {
    sub_1BA236F78(255, &qword_1EF27FAE0, (uint64_t (*)(void))sub_1BA297B8C, (uint64_t)&type metadata for Settings.Ads.Debugging.EOANativeAdInsertionLocationOverride.EOANativeAdLocation, MEMORY[0x1E0DB5770]);
    result = MEMORY[0x1BCCD93D0](MEMORY[0x1E0DB5780], v1);
    atomic_store(result, (unint64_t *)&qword_1EF27FAE8);
  }
  return result;
}

void sub_1BA298680(uint64_t a1)
{
  sub_1BA298694(a1, &qword_1EF27FAF0, MEMORY[0x1E0DB5770]);
}

void sub_1BA298694(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = sub_1BA2C1514();
    v7 = sub_1BA221230(&qword_1ED5B1448, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB54F8], MEMORY[0x1E0DB54F0]);
    v8 = a3(a1, v6, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t AdPolicyLayoutEnvironmentProvider.environment.getter()
{
  swift_retain();
  sub_1BA2C191C();
  return swift_release();
}

uint64_t sub_1BA298744@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_retain();
  sub_1BA2C191C();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BA298790()
{
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BA2C1928();
  return swift_release();
}

void (*AdPolicyLayoutEnvironmentProvider.environment.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = *(_QWORD *)(v1 + 16);
  swift_retain();
  v3[5] = sub_1BA2C1910();
  return sub_1BA298834;
}

void sub_1BA298834(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  swift_release();
  free(v1);
}

uint64_t AdPolicyLayoutEnvironmentProvider.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_1BA236CFC();
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1BA2C1904();
  return v0;
}

uint64_t AdPolicyLayoutEnvironmentProvider.layoutEnvironment()()
{
  uint64_t v1;

  swift_retain();
  sub_1BA2C191C();
  swift_release();
  if (v1)
  {
    sub_1BA23584C(0, (unint64_t *)&unk_1ED5B14A8, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BA2C197C();
  }
  else
  {
    sub_1BA298998();
    swift_allocError();
    sub_1BA23584C(0, (unint64_t *)&unk_1ED5B14A8, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BA2C1970();
  }
}

unint64_t sub_1BA298998()
{
  unint64_t result;

  result = qword_1EF27FB08;
  if (!qword_1EF27FB08)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C9EC8, &type metadata for AdPolicyLayoutEnvironmentProvider.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF27FB08);
  }
  return result;
}

uint64_t AdPolicyLayoutEnvironmentProvider.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t AdPolicyLayoutEnvironmentProvider.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA298A1C()
{
  return AdPolicyLayoutEnvironmentProvider.layoutEnvironment()();
}

uint64_t dispatch thunk of AdPolicyLayoutEnvironmentProviderType.layoutEnvironment()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t method lookup function for AdPolicyLayoutEnvironmentProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AdPolicyLayoutEnvironmentProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t storeEnumTagSinglePayload for AdPolicyLayoutEnvironmentProvider.Errors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BA298AA0 + 4 * asc_1BA2C9DD0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BA298AC0 + 4 * byte_1BA2C9DD5[v4]))();
}

_BYTE *sub_1BA298AA0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BA298AC0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA298AC8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA298AD0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA298AD8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA298AE0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AdPolicyLayoutEnvironmentProvider.Errors()
{
  return &type metadata for AdPolicyLayoutEnvironmentProvider.Errors;
}

unint64_t sub_1BA298B00()
{
  unint64_t result;

  result = qword_1EF27FB10;
  if (!qword_1EF27FB10)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C9EA0, &type metadata for AdPolicyLayoutEnvironmentProvider.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF27FB10);
  }
  return result;
}

uint64_t ArticleInterstitialAdContext.init(provider:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int16 v65;
  uint64_t v66;
  char v67;
  void *__dst;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  _OWORD __src[28];
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  _BYTE v111[7];
  uint64_t v112;
  uint64_t v113;
  __int16 v114;
  int v115;
  __int16 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  char v123;
  int v124;
  __int16 v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  _BYTE v136[7];
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  char v145;
  int v146;
  __int16 v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  _BYTE v158[7];
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD v164[2];
  char v165;
  __int128 v166;
  char v167;
  uint64_t v168;
  __int128 v169;
  __int128 v170;
  _BYTE v171[11];
  __int16 v172;
  _BYTE v173[11];
  __int16 v174;
  int v175;
  __int16 v176;
  _BYTE v177[7];
  _BYTE v178[7];
  _DWORD v179[5];
  uint64_t v180;

  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  AdContextDataProviding.data<A>(for:)((uint64_t)&type metadata for AppAdData, v5, (uint64_t)&type metadata for AppAdData, v6);
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v7 = a1[3];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  AdContextDataProviding.data<A>(for:)((uint64_t)&type metadata for UserAdData, v7, (uint64_t)&type metadata for UserAdData, v8);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  swift_bridgeObjectRetain();
  AdContextDataProviding.data<A>(for:)((uint64_t)&type metadata for FeedAdData, v9, (uint64_t)&type metadata for FeedAdData, v10);
  v91 = v97;
  v74 = v97;
  v72 = v99;
  v73 = v97;
  v71 = v100;
  v70 = v101;
  __dst = a2;
  v69 = v105;
  v11 = a1[3];
  v180 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  swift_bridgeObjectRetain();
  v75 = v98;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  AdContextDataProviding.dataIfPresent<A>(for:)((uint64_t)&type metadata for ReferralAdData, v11, (uint64_t)&type metadata for ReferralAdData, v180);
  v87 = v107;
  v88 = v104;
  v89 = v103;
  v90 = v102;
  v12 = v106;
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  AdContextDataProviding.dataIfPresent<A>(for:)((uint64_t)&type metadata for IssueAdData, v13, (uint64_t)&type metadata for IssueAdData, v14);
  v67 = v97;
  v66 = v97;
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  swift_bridgeObjectRetain();
  AdContextDataProviding.dataIfPresent<A>(for:)((uint64_t)&type metadata for SectionAdData, v15, (uint64_t)&type metadata for SectionAdData, v16);
  v86 = v98;
  v65 = v99;
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  swift_bridgeObjectRetain();
  AdContextDataProviding.data<A>(for:)((uint64_t)&type metadata for InterstitialAdData, v17, (uint64_t)&type metadata for InterstitialAdData, v18);
  v85 = v98;
  v64 = v97;
  v19 = v97;
  v20 = a1[3];
  v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  __src[0] = xmmword_1BA2C6960;
  LOBYTE(__src[1]) = 0;
  (*(void (**)(uint64_t *__return_ptr, ValueMetadata *, _OWORD *, ValueMetadata *, uint64_t, uint64_t))(v21 + 8))(&v97, &type metadata for ArticleAdData, __src, &type metadata for ArticleAdData, v20, v21);
  v22 = v12;
  v62 = v97;
  v63 = v19;
  v23 = v98;
  v60 = BYTE1(v99);
  v61 = v99;
  v24 = v101;
  v83 = v103;
  v84 = v102;
  v25 = v104;
  v58 = v105;
  v59 = v100;
  v26 = v106;
  v27 = a1[4];
  v93 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v93);
  __src[0] = xmmword_1BA2C6960;
  LOBYTE(__src[1]) = 0;
  v95 = *(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v27 + 8);
  v180 = v26;
  swift_bridgeObjectRetain();
  v80 = v23;
  swift_bridgeObjectRetain();
  v81 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v82 = v25;
  swift_bridgeObjectRetain();
  v95(&v97, &type metadata for ChannelAdData, __src, &type metadata for ChannelAdData, v93, v27);
  v28 = v98;
  v53 = v99;
  v29 = v101;
  v54 = v97;
  v55 = v102;
  v56 = v100;
  v57 = v103;
  v30 = v104;
  v31 = a1[3];
  v32 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v31);
  memset(__src, 0, 17);
  v78 = *(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v32 + 8);
  v94 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v78(&v97, &type metadata for ArticleAdData, __src, &type metadata for ArticleAdData, v31, v32);
  v92 = v30;
  v33 = v98;
  v44 = BYTE1(v99);
  v45 = v99;
  v47 = v97;
  v48 = v100;
  v34 = v101;
  v76 = v103;
  v77 = v102;
  v79 = v104;
  v46 = v105;
  v35 = v106;
  v36 = a1[4];
  v51 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v51);
  v164[0] = 0;
  v164[1] = 0;
  v165 = 0;
  v49 = *(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v36 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v49(&v166, &type metadata for ChannelAdData, v164, &type metadata for ChannelAdData, v51, v36);
  v39 = *((_QWORD *)&v166 + 1);
  v40 = v166;
  v38 = v167;
  v50 = v169;
  v52 = v168;
  v42 = v170;
  v43 = *((_QWORD *)&v169 + 1);
  v41 = *((_QWORD *)&v170 + 1);
  LOBYTE(__src[0]) = v74;
  *((_QWORD *)&__src[0] + 1) = v91;
  *(_QWORD *)&__src[1] = v73;
  *((_QWORD *)&__src[1] + 1) = v75;
  *(_QWORD *)&__src[2] = v72;
  BYTE8(__src[2]) = v71;
  *(_QWORD *)&__src[3] = v70;
  *((_QWORD *)&__src[3] + 1) = v90;
  *(_QWORD *)&__src[4] = v89;
  *((_QWORD *)&__src[4] + 1) = v88;
  *(_QWORD *)&__src[5] = v69;
  *((_QWORD *)&__src[5] + 1) = v22;
  *(_QWORD *)&__src[6] = v87;
  BYTE8(__src[6]) = v67;
  *(_QWORD *)&__src[7] = v66;
  *((_QWORD *)&__src[7] + 1) = v86;
  LOWORD(__src[8]) = v65;
  *((_QWORD *)&__src[8] + 1) = v64;
  *(_QWORD *)&__src[9] = v85;
  *((_QWORD *)&__src[9] + 1) = v63;
  *(_QWORD *)&__src[10] = v62;
  *((_QWORD *)&__src[10] + 1) = v80;
  LOBYTE(__src[11]) = v61;
  BYTE1(__src[11]) = v60;
  *((_QWORD *)&__src[11] + 1) = v59;
  *(_QWORD *)&__src[12] = v81;
  *((_QWORD *)&__src[12] + 1) = v84;
  *(_QWORD *)&__src[13] = v83;
  *((_QWORD *)&__src[13] + 1) = v82;
  *(_QWORD *)&__src[14] = v58;
  *((_QWORD *)&__src[14] + 1) = v180;
  *(_QWORD *)&__src[15] = v54;
  *((_QWORD *)&__src[15] + 1) = v94;
  LOBYTE(__src[16]) = v53;
  *((_QWORD *)&__src[16] + 1) = v56;
  *(_QWORD *)&__src[17] = v29;
  *((_QWORD *)&__src[17] + 1) = v55;
  *(_QWORD *)&__src[18] = v57;
  *((_QWORD *)&__src[18] + 1) = v92;
  *(_QWORD *)&__src[19] = v47;
  *((_QWORD *)&__src[19] + 1) = v33;
  LOBYTE(__src[20]) = v45;
  BYTE1(__src[20]) = v44;
  *((_QWORD *)&__src[20] + 1) = v48;
  *(_QWORD *)&__src[21] = v34;
  *((_QWORD *)&__src[21] + 1) = v77;
  *(_QWORD *)&__src[22] = v76;
  *((_QWORD *)&__src[22] + 1) = v79;
  *(_QWORD *)&__src[23] = v46;
  *((_QWORD *)&__src[23] + 1) = v35;
  __src[24] = v166;
  LOBYTE(__src[25]) = v167;
  *((_QWORD *)&__src[25] + 1) = v168;
  __src[26] = v169;
  __src[27] = v170;
  sub_1BA299B1C((uint64_t)__src);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  memcpy(__dst, __src, 0x1C0uLL);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v97) = v74;
  v98 = v91;
  v99 = v73;
  v100 = v75;
  v101 = v72;
  LOBYTE(v102) = v71;
  v103 = v70;
  v104 = v90;
  v105 = v89;
  v106 = v88;
  v107 = v69;
  v108 = v22;
  v109 = v87;
  v110 = v67;
  v112 = v66;
  v113 = v86;
  v114 = v65;
  v117 = v64;
  v118 = v85;
  v119 = v63;
  v120 = v62;
  v121 = v80;
  v122 = v61;
  v123 = v60;
  v126 = v59;
  v127 = v81;
  v128 = v84;
  v129 = v83;
  v130 = v82;
  v131 = v58;
  *(_DWORD *)((char *)&v97 + 1) = v179[0];
  HIDWORD(v97) = *(_DWORD *)((char *)v179 + 3);
  *(_DWORD *)((char *)&v102 + 1) = *(_DWORD *)v178;
  HIDWORD(v102) = *(_DWORD *)&v178[3];
  *(_DWORD *)v111 = *(_DWORD *)v177;
  *(_DWORD *)&v111[3] = *(_DWORD *)&v177[3];
  v115 = v175;
  v116 = v176;
  v125 = v174;
  v124 = *(_DWORD *)&v173[7];
  v132 = v180;
  v133 = v54;
  v134 = v94;
  v135 = v53;
  *(_DWORD *)v136 = *(_DWORD *)v173;
  *(_DWORD *)&v136[3] = *(_DWORD *)&v173[3];
  v137 = v56;
  v138 = v29;
  v139 = v55;
  v140 = v57;
  v141 = v92;
  v142 = v47;
  v143 = v33;
  v144 = v45;
  v145 = v44;
  v146 = *(_DWORD *)&v171[7];
  v147 = v172;
  v148 = v48;
  v149 = v34;
  v150 = v77;
  v151 = v76;
  v152 = v79;
  v153 = v46;
  v154 = v35;
  v155 = v40;
  v156 = v39;
  v157 = v38;
  *(_DWORD *)v158 = *(_DWORD *)v171;
  *(_DWORD *)&v158[3] = *(_DWORD *)&v171[3];
  v159 = v52;
  v160 = v50;
  v161 = v43;
  v162 = v42;
  v163 = v41;
  return sub_1BA299CDC((uint64_t)&v97);
}

uint64_t sub_1BA299B1C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA299CDC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BA299EA0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA299ED4 + 4 * byte_1BA2C9F10[a1]))(0x61746144707061, 0xE700000000000000);
}

uint64_t sub_1BA299ED4()
{
  return 0x6174614472657375;
}

uint64_t sub_1BA299EFC()
{
  return 0x6C61727265666572;
}

uint64_t sub_1BA299F1C()
{
  return 0x7461446575737369;
}

uint64_t sub_1BA299F38()
{
  return 0x446E6F6974636573;
}

unint64_t sub_1BA299F58()
{
  return 0xD000000000000010;
}

uint64_t sub_1BA299FD0()
{
  unsigned __int8 *v0;

  return sub_1BA299EA0(*v0);
}

uint64_t sub_1BA299FD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA29D090(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BA299FFC()
{
  sub_1BA29A7C8();
  return sub_1BA2C275C();
}

uint64_t sub_1BA29A024()
{
  sub_1BA29A7C8();
  return sub_1BA2C2768();
}

uint64_t ArticleInterstitialAdContext.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v19;
  uint64_t v20;
  __int128 v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  __int128 v29;
  __int128 v30;
  int v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  unint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  unint64_t v43;
  __int128 v44;
  __int128 v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE v70[32];
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  char v75;

  sub_1BA29B894(0, &qword_1EF27FB18, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  LODWORD(v64) = *v1;
  v6 = *((_QWORD *)v1 + 1);
  v62 = *((_QWORD *)v1 + 2);
  v63 = v6;
  v7 = *((_QWORD *)v1 + 3);
  v59 = *((_QWORD *)v1 + 4);
  v60 = v7;
  v58 = v1[40];
  v57 = *((_QWORD *)v1 + 6);
  v61 = *(_OWORD *)(v1 + 56);
  v56 = *((_QWORD *)v1 + 9);
  v55 = *((_QWORD *)v1 + 10);
  v54 = *((_QWORD *)v1 + 11);
  v53 = *((_QWORD *)v1 + 12);
  v52 = v1[104];
  v49 = *((_QWORD *)v1 + 14);
  v51 = *((_QWORD *)v1 + 15);
  v50 = *((unsigned __int16 *)v1 + 64);
  v47 = *((_QWORD *)v1 + 17);
  v48 = *((_QWORD *)v1 + 18);
  v46 = *((_QWORD *)v1 + 19);
  v43 = *((_QWORD *)v1 + 20);
  v42 = *((_QWORD *)v1 + 21);
  v41 = v1[176];
  v40 = v1[177];
  v39 = *((_QWORD *)v1 + 23);
  v45 = *((_OWORD *)v1 + 12);
  v44 = *((_OWORD *)v1 + 13);
  v38 = *((_QWORD *)v1 + 28);
  v37 = *((_QWORD *)v1 + 29);
  v35 = *((_QWORD *)v1 + 30);
  v34 = *((_QWORD *)v1 + 31);
  v36 = *((_OWORD *)v1 + 18);
  v28 = v1[320];
  v27 = v1[321];
  v30 = *((_OWORD *)v1 + 21);
  v29 = *((_OWORD *)v1 + 22);
  v74 = v1[400];
  v21 = *((_OWORD *)v1 + 27);
  v31 = v1[256];
  v32 = *((_QWORD *)v1 + 33);
  v33 = *((_OWORD *)v1 + 17);
  v22 = *((_QWORD *)v1 + 38);
  v23 = *((_QWORD *)v1 + 39);
  v24 = *((_QWORD *)v1 + 41);
  v25 = *((_QWORD *)v1 + 46);
  v26 = *((_QWORD *)v1 + 47);
  v19 = *((_QWORD *)v1 + 48);
  v20 = *((_QWORD *)v1 + 49);
  v9 = *((_QWORD *)v1 + 51);
  v8 = *((_QWORD *)v1 + 52);
  v10 = *((_QWORD *)v1 + 53);
  v11 = a1[3];
  v12 = a1;
  v14 = (char *)&v19 - v13;
  __swift_project_boxed_opaque_existential_1(v12, v11);
  sub_1BA29A7C8();
  sub_1BA2C2750();
  LOBYTE(v66) = v64;
  v75 = 0;
  sub_1BA234CD4();
  v15 = v65;
  sub_1BA2C2684();
  if (!v15)
  {
    v16 = v62;
    v64 = v9;
    v65 = v8;
    v17 = v74;
    v66 = v63;
    v75 = 1;
    sub_1BA236AC4();
    sub_1BA2C2684();
    v66 = v16;
    v67 = v60;
    v68 = v59;
    LOBYTE(v69) = v58;
    *(_QWORD *)v70 = v57;
    *(_OWORD *)&v70[8] = v61;
    *(_QWORD *)&v70[24] = v56;
    v71 = v55;
    v72 = v54;
    v73 = v53;
    v75 = 2;
    sub_1BA236B90();
    sub_1BA2C2684();
    LOBYTE(v66) = v52;
    v75 = 3;
    sub_1BA23D154();
    sub_1BA2C2648();
    v66 = v49;
    v67 = v51;
    LOWORD(v68) = v50;
    v75 = 4;
    sub_1BA24623C();
    sub_1BA2C2648();
    v66 = v47;
    v67 = v48;
    v75 = 5;
    sub_1BA246280();
    sub_1BA2C2648();
    v66 = v46;
    v75 = 6;
    sub_1BA29A80C();
    sub_1BA2C2684();
    v66 = v43;
    v67 = v42;
    LOBYTE(v68) = v41;
    BYTE1(v68) = v40;
    v69 = v39;
    *(_OWORD *)v70 = v45;
    *(_OWORD *)&v70[16] = v44;
    v71 = v38;
    v72 = v37;
    v75 = 7;
    sub_1BA240AE4();
    sub_1BA2C2684();
    v66 = v35;
    v67 = v34;
    LOBYTE(v68) = v31;
    v69 = v32;
    *(_OWORD *)v70 = v33;
    *(_OWORD *)&v70[16] = v36;
    v75 = 8;
    v63 = sub_1BA2461F8();
    sub_1BA2C2684();
    v66 = v22;
    v67 = v23;
    LOBYTE(v68) = v28;
    BYTE1(v68) = v27;
    v69 = v24;
    *(_OWORD *)v70 = v30;
    *(_OWORD *)&v70[16] = v29;
    v71 = v25;
    v72 = v26;
    v75 = 9;
    sub_1BA2C2684();
    v66 = v19;
    v67 = v20;
    LOBYTE(v68) = v17;
    v69 = v64;
    *(_QWORD *)v70 = v65;
    *(_QWORD *)&v70[8] = v10;
    *(_OWORD *)&v70[16] = v21;
    v75 = 10;
    sub_1BA2C2684();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v14, v4);
}

unint64_t sub_1BA29A7C8()
{
  unint64_t result;

  result = qword_1EF27FB20;
  if (!qword_1EF27FB20)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2CA0A0, &type metadata for ArticleInterstitialAdContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27FB20);
  }
  return result;
}

unint64_t sub_1BA29A80C()
{
  unint64_t result;

  result = qword_1ED5B2F28[0];
  if (!qword_1ED5B2F28[0])
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for InterstitialAdData, &type metadata for InterstitialAdData);
    atomic_store(result, qword_1ED5B2F28);
  }
  return result;
}

uint64_t ArticleInterstitialAdContext.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  int v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  int v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  int v63;
  int v64;
  unint64_t v65;
  unint64_t v66;
  int v67;
  int v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  int v72;
  unint64_t v73;
  int v74;
  unint64_t v75;
  void *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  _QWORD v102[56];
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  _BYTE v117[7];
  unint64_t v118;
  uint64_t v119;
  __int16 v120;
  int v121;
  __int16 v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  char v128;
  char v129;
  int v130;
  __int16 v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  char v141;
  _BYTE v142[7];
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  char v150;
  char v151;
  int v152;
  __int16 v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char v163;
  _BYTE v164[7];
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char v170;
  uint64_t v171;
  uint64_t v172;
  unsigned __int8 v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  _BYTE v179[11];
  __int16 v180;
  _BYTE v181[11];
  __int16 v182;
  int v183;
  __int16 v184;
  _BYTE v185[7];
  _BYTE v186[7];
  _DWORD v187[3];
  _QWORD *v188;

  sub_1BA29B894(0, (unint64_t *)&unk_1EF27FB28, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v42 - v8;
  v10 = a1[3];
  v188 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1BA29A7C8();
  sub_1BA2C2744();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v188);
    return v95;
  }
  else
  {
    v76 = a2;
    LOBYTE(v102[0]) = 0;
    sub_1BA234C90();
    sub_1BA2C2630();
    v11 = v103;
    LOBYTE(v102[0]) = 1;
    sub_1BA236A80();
    sub_1BA2C2630();
    v12 = v103;
    LOBYTE(v102[0]) = 2;
    sub_1BA236B4C();
    swift_bridgeObjectRetain();
    sub_1BA2C2630();
    v91 = v12;
    v74 = v11;
    v75 = v103;
    v13 = v104;
    v73 = v105;
    v72 = v106;
    v14 = v108;
    v89 = v110;
    v90 = v109;
    v70 = v111;
    v71 = v107;
    v15 = v112;
    v16 = v113;
    LOBYTE(v102[0]) = 3;
    sub_1BA23D654();
    v86 = v13;
    swift_bridgeObjectRetain();
    v88 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v87 = v16;
    swift_bridgeObjectRetain();
    sub_1BA2C25F4();
    v101 = v15;
    LODWORD(v16) = v103;
    LOBYTE(v102[0]) = 4;
    sub_1BA2473E0();
    sub_1BA2C25F4();
    v68 = v16;
    v69 = v103;
    v17 = v104;
    LODWORD(v16) = (unsigned __int16)v105;
    LOBYTE(v102[0]) = 5;
    sub_1BA247424();
    swift_bridgeObjectRetain();
    sub_1BA2C25F4();
    v85 = v17;
    v67 = v16;
    v18 = v103;
    v19 = v104;
    LOBYTE(v102[0]) = 6;
    sub_1BA29B8F0();
    swift_bridgeObjectRetain();
    sub_1BA2C2630();
    v66 = v103;
    LOBYTE(v102[0]) = 7;
    v20 = sub_1BA240AA0();
    sub_1BA2C2630();
    v82 = v20;
    v97 = v19;
    v65 = v103;
    v21 = v104;
    v63 = BYTE1(v105);
    v64 = v105;
    v61 = v18;
    v62 = v106;
    v22 = v107;
    v23 = v108;
    v99 = v110;
    v100 = v109;
    v60 = v111;
    v24 = v112;
    LOBYTE(v102[0]) = 8;
    v25 = sub_1BA24739C();
    v83 = v21;
    swift_bridgeObjectRetain();
    v84 = v22;
    swift_bridgeObjectRetain();
    v98 = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA2C2630();
    v96 = v24;
    v26 = v101;
    v55 = v105;
    v58 = v106;
    v59 = v25;
    v27 = v107;
    v56 = v103;
    v57 = v108;
    v28 = v109;
    v29 = v110;
    LOBYTE(v102[0]) = 9;
    v92 = v104;
    swift_bridgeObjectRetain();
    v93 = v27;
    swift_bridgeObjectRetain();
    v94 = v28;
    swift_bridgeObjectRetain();
    v95 = v29;
    swift_bridgeObjectRetain();
    sub_1BA2C2630();
    v30 = v104;
    v50 = BYTE1(v105);
    v51 = v105;
    v53 = v103;
    v54 = v106;
    v31 = v107;
    v32 = v108;
    v33 = v110;
    v52 = v111;
    v170 = 10;
    v81 = v112;
    v82 = v109;
    swift_bridgeObjectRetain();
    v77 = v30;
    swift_bridgeObjectRetain();
    v80 = v31;
    swift_bridgeObjectRetain();
    v78 = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v79 = v33;
    swift_bridgeObjectRetain();
    sub_1BA2C2630();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v44 = v172;
    v45 = v171;
    v43 = v173;
    v59 = v174;
    v48 = v176;
    v49 = v175;
    v46 = v178;
    v47 = v177;
    LOBYTE(v102[0]) = v74;
    v102[1] = v91;
    v102[2] = v75;
    v102[3] = v86;
    v102[4] = v73;
    LOBYTE(v102[5]) = v72;
    v102[6] = v71;
    v102[7] = v88;
    v102[8] = v90;
    v102[9] = v89;
    v102[10] = v70;
    v102[11] = v26;
    v102[12] = v87;
    LOBYTE(v102[13]) = v68;
    v102[14] = v69;
    v102[15] = v85;
    LOWORD(v102[16]) = v67;
    v102[17] = v61;
    v102[18] = v97;
    v102[19] = v66;
    v102[20] = v65;
    v102[21] = v83;
    LOBYTE(v102[22]) = v64;
    BYTE1(v102[22]) = v63;
    v102[23] = v62;
    v102[24] = v84;
    v102[25] = v98;
    v102[26] = v100;
    v102[27] = v99;
    v102[28] = v60;
    v102[29] = v96;
    v102[30] = v56;
    v102[31] = v92;
    LOBYTE(v102[32]) = v55;
    v102[33] = v58;
    v102[34] = v93;
    v102[35] = v57;
    v102[36] = v94;
    v102[37] = v95;
    v102[38] = v53;
    v102[39] = v77;
    LOBYTE(v102[40]) = v51;
    BYTE1(v102[40]) = v50;
    v102[41] = v54;
    v102[42] = v80;
    v102[43] = v78;
    v102[44] = v82;
    v102[45] = v79;
    v102[46] = v52;
    v102[47] = v81;
    v102[48] = v171;
    v102[49] = v172;
    LOBYTE(v102[50]) = v173;
    v102[51] = v174;
    v102[52] = v175;
    v102[53] = v176;
    v102[54] = v177;
    v102[55] = v178;
    sub_1BA299B1C((uint64_t)v102);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v34 = v85;
    swift_bridgeObjectRelease();
    v35 = v97;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v36 = v100;
    swift_bridgeObjectRelease();
    v37 = v98;
    swift_bridgeObjectRelease();
    v38 = v84;
    swift_bridgeObjectRelease();
    v39 = v83;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v40 = v77;
    swift_bridgeObjectRelease();
    memcpy(v76, v102, 0x1C0uLL);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v188);
    LOBYTE(v103) = v74;
    v104 = v91;
    v105 = v75;
    v106 = v86;
    v107 = v73;
    LOBYTE(v108) = v72;
    v109 = v71;
    v110 = v88;
    v111 = v90;
    v112 = v89;
    v113 = v70;
    v114 = v101;
    v115 = v87;
    v116 = v68;
    v118 = v69;
    v119 = v34;
    v120 = v67;
    v123 = v61;
    v124 = v35;
    v125 = v66;
    v126 = v65;
    v127 = v39;
    v128 = v64;
    v129 = v63;
    v132 = v62;
    v133 = v38;
    v134 = v37;
    v135 = v36;
    v136 = v99;
    v137 = v60;
    *(_DWORD *)((char *)&v103 + 1) = v187[0];
    HIDWORD(v103) = *(_DWORD *)((char *)v187 + 3);
    *(_DWORD *)((char *)&v108 + 1) = *(_DWORD *)v186;
    HIDWORD(v108) = *(_DWORD *)&v186[3];
    *(_DWORD *)v117 = *(_DWORD *)v185;
    *(_DWORD *)&v117[3] = *(_DWORD *)&v185[3];
    v121 = v183;
    v122 = v184;
    v131 = v182;
    v130 = *(_DWORD *)&v181[7];
    v138 = v96;
    v139 = v56;
    v140 = v92;
    v141 = v55;
    *(_DWORD *)v142 = *(_DWORD *)v181;
    *(_DWORD *)&v142[3] = *(_DWORD *)&v181[3];
    v143 = v58;
    v144 = v93;
    v145 = v57;
    v146 = v94;
    v147 = v95;
    v148 = v53;
    v149 = v40;
    v150 = v51;
    v151 = v50;
    v152 = *(_DWORD *)&v179[7];
    v153 = v180;
    v154 = v54;
    v155 = v80;
    v156 = v78;
    v157 = v82;
    v158 = v79;
    v159 = v52;
    v160 = v81;
    v161 = v45;
    v162 = v44;
    v163 = v43;
    *(_DWORD *)v164 = *(_DWORD *)v179;
    *(_DWORD *)&v164[3] = *(_DWORD *)&v179[3];
    v165 = v59;
    v166 = v49;
    v167 = v48;
    v168 = v47;
    v169 = v46;
    return sub_1BA299CDC((uint64_t)&v103);
  }
}

void sub_1BA29B894(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA29A7C8();
    v7 = a3(a1, &type metadata for ArticleInterstitialAdContext.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BA29B8F0()
{
  unint64_t result;

  result = qword_1ED5B2D60;
  if (!qword_1ED5B2D60)
  {
    result = MEMORY[0x1BCCD93D0](&protocol conformance descriptor for InterstitialAdData, &type metadata for InterstitialAdData);
    atomic_store(result, (unint64_t *)&qword_1ED5B2D60);
  }
  return result;
}

uint64_t sub_1BA29B934@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return ArticleInterstitialAdContext.init(provider:)(a1, a2);
}

uint64_t sub_1BA29B948@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return ArticleInterstitialAdContext.init(from:)(a1, a2);
}

uint64_t sub_1BA29B95C(_QWORD *a1)
{
  return ArticleInterstitialAdContext.encode(to:)(a1);
}

void ArticleInterstitialAdContext.newsSupplementalContext.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 104);
  objc_msgSend(objc_allocWithZone((Class)sub_1BA2C1DC0()), sel_init, *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 112), *(unsigned __int16 *)(v0 + 128));
  sub_1BA2C1DB4();
  sub_1BA2C1C94();
  swift_bridgeObjectRetain_n();
  sub_1BA2C1D00();
  swift_bridgeObjectRelease();
  __asm { BR              X9 }
}

uint64_t sub_1BA29BB90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  sub_1BA2C1C64();
  sub_1BA23DAE0();
  sub_1BA2C2438();
  sub_1BA2C1D54();
  *(_QWORD *)(v9 - 176) = v17;
  *(_QWORD *)(v9 - 168) = v4;
  *(_QWORD *)(v9 - 160) = v56;
  *(_QWORD *)(v9 - 152) = v57;
  *(_QWORD *)(v9 - 144) = v16;
  *(_QWORD *)(v9 - 136) = v6;
  *(_QWORD *)(v9 - 128) = v7;
  *(_QWORD *)(v9 - 120) = v8;
  *(_QWORD *)(v9 - 112) = v15;
  *(_QWORD *)(v9 - 104) = v0;
  *(_QWORD *)(v9 - 96) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA2338F8(v9 - 176);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRetain_n();
    sub_1BA2C1C4C();
    v2 = v5;
    sub_1BA2C1CB8();
    sub_1BA2C1CE8();
    swift_bridgeObjectRelease();
  }
  if (v23)
  {
    if ((v57 & 1) != 0 || v56 >= 1)
      swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA2C1D0C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v24);
  sub_1BA2C1D9C();
  v10 = 256;
  if (!v25)
    v10 = 0;
  *(_QWORD *)(v9 - 176) = v28;
  *(_QWORD *)(v9 - 168) = v46;
  *(_QWORD *)(v9 - 160) = v10 | v27;
  *(_QWORD *)(v9 - 152) = v26;
  *(_QWORD *)(v9 - 144) = v45;
  *(_QWORD *)(v9 - 136) = v32;
  *(_QWORD *)(v9 - 128) = v31;
  *(_QWORD *)(v9 - 120) = v30;
  *(_QWORD *)(v9 - 112) = v18;
  *(_QWORD *)(v9 - 104) = v29;
  v11 = *(_QWORD *)(v9 - 256);
  *(_QWORD *)(v9 - 240) = v19;
  *(_QWORD *)(v9 - 232) = v11;
  *(_QWORD *)(v9 - 224) = v20;
  *(_QWORD *)(v9 - 216) = v21;
  *(_QWORD *)(v9 - 208) = v35;
  *(_QWORD *)(v9 - 200) = v22;
  *(_QWORD *)(v9 - 192) = v34;
  *(_QWORD *)(v9 - 184) = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA26FC74(v9 - 176, (_QWORD *)(v9 - 240));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = 256;
  if (!v43)
    v12 = 0;
  *(_QWORD *)(v9 - 176) = v36;
  *(_QWORD *)(v9 - 168) = v54;
  *(_QWORD *)(v9 - 160) = v12 | v44;
  *(_QWORD *)(v9 - 152) = v37;
  *(_QWORD *)(v9 - 144) = v52;
  *(_QWORD *)(v9 - 136) = v50;
  *(_QWORD *)(v9 - 128) = v49;
  *(_QWORD *)(v9 - 120) = v48;
  *(_QWORD *)(v9 - 112) = v38;
  *(_QWORD *)(v9 - 104) = v47;
  v13 = *(_QWORD *)(v9 - 248);
  *(_QWORD *)(v9 - 240) = v39;
  *(_QWORD *)(v9 - 232) = v13;
  *(_QWORD *)(v9 - 224) = v42;
  *(_QWORD *)(v9 - 216) = v41;
  *(_QWORD *)(v9 - 208) = v55;
  *(_QWORD *)(v9 - 200) = v40;
  *(_QWORD *)(v9 - 192) = v53;
  *(_QWORD *)(v9 - 184) = v51;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA26F958(v9 - 176, (_QWORD *)(v9 - 240));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t ArticleInterstitialAdContext.currentPromotableContentDepiction.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15[2];
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 312);
  v4 = *(_BYTE *)(v0 + 320);
  v13 = *(_BYTE *)(v0 + 321);
  v5 = *(_QWORD *)(v0 + 336);
  v12 = *(_QWORD *)(v0 + 328);
  v7 = *(_QWORD *)(v0 + 344);
  v6 = *(_QWORD *)(v0 + 352);
  v9 = *(_QWORD *)(v0 + 360);
  v8 = *(_QWORD *)(v0 + 368);
  v10 = *(_QWORD *)(v0 + 376);
  sub_1BA2C19E8();
  v14 = v1;
  v15[0] = v3;
  v15[1] = v2;
  v16 = v4;
  v17 = v13;
  v18 = v12;
  v19 = v5;
  v20 = v7;
  v21 = v6;
  v22 = v9;
  v23 = v8;
  v24 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BA26D49C(0, v15, &v14, 103);
}

uint64_t ArticleInterstitialAdContext.nextPromotableContentDepiction.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15[2];
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v4 = *(_BYTE *)(v0 + 176);
  v13 = *(_BYTE *)(v0 + 177);
  v5 = *(_QWORD *)(v0 + 192);
  v12 = *(_QWORD *)(v0 + 184);
  v7 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 208);
  v9 = *(_QWORD *)(v0 + 216);
  v8 = *(_QWORD *)(v0 + 224);
  v10 = *(_QWORD *)(v0 + 232);
  sub_1BA2C19E8();
  v14 = v1;
  v15[0] = v3;
  v15[1] = v2;
  v16 = v4;
  v17 = v13;
  v18 = v12;
  v19 = v5;
  v20 = v7;
  v21 = v6;
  v22 = v9;
  v23 = v8;
  v24 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BA26D49C(151, v15, &v14, 103);
}

uint64_t sub_1BA29C23C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15[2];
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 312);
  v4 = *(_BYTE *)(v0 + 320);
  v13 = *(_BYTE *)(v0 + 321);
  v5 = *(_QWORD *)(v0 + 336);
  v12 = *(_QWORD *)(v0 + 328);
  v7 = *(_QWORD *)(v0 + 344);
  v6 = *(_QWORD *)(v0 + 352);
  v9 = *(_QWORD *)(v0 + 360);
  v8 = *(_QWORD *)(v0 + 368);
  v10 = *(_QWORD *)(v0 + 376);
  sub_1BA2C19E8();
  v14 = v1;
  v15[0] = v3;
  v15[1] = v2;
  v16 = v4;
  v17 = v13;
  v18 = v12;
  v19 = v5;
  v20 = v7;
  v21 = v6;
  v22 = v9;
  v23 = v8;
  v24 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BA26D49C(0, v15, &v14, 103);
}

uint64_t sub_1BA29C328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15[2];
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v4 = *(_BYTE *)(v0 + 176);
  v13 = *(_BYTE *)(v0 + 177);
  v5 = *(_QWORD *)(v0 + 192);
  v12 = *(_QWORD *)(v0 + 184);
  v7 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 208);
  v9 = *(_QWORD *)(v0 + 216);
  v8 = *(_QWORD *)(v0 + 224);
  v10 = *(_QWORD *)(v0 + 232);
  sub_1BA2C19E8();
  v14 = v1;
  v15[0] = v3;
  v15[1] = v2;
  v16 = v4;
  v17 = v13;
  v18 = v12;
  v19 = v5;
  v20 = v7;
  v21 = v6;
  v22 = v9;
  v23 = v8;
  v24 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BA26D49C(151, v15, &v14, 103);
}

uint64_t destroy for ArticleInterstitialAdContext()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArticleInterstitialAdContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v8 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v8;
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  v9 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_WORD *)(a1 + 176) = *(_WORD *)(a2 + 176);
  v10 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v10;
  v11 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v11;
  v12 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v12;
  v13 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v13;
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  v14 = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = v14;
  v15 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = v15;
  v16 = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = v16;
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_BYTE *)(a1 + 320) = *(_BYTE *)(a2 + 320);
  *(_BYTE *)(a1 + 321) = *(_BYTE *)(a2 + 321);
  v17 = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = v17;
  v18 = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = v18;
  v19 = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = v19;
  v20 = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = v20;
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_BYTE *)(a1 + 400) = *(_BYTE *)(a2 + 400);
  v21 = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 416) = v21;
  v22 = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = v22;
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArticleInterstitialAdContext(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;

  v4 = (_BYTE *)(a2 + 256);
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_BYTE *)(a1 + 177) = *(_BYTE *)(a2 + 177);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 320) = v4[64];
  *(_BYTE *)(a1 + 321) = v4[65];
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 400) = v4[144];
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy448_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1C0uLL);
}

uint64_t assignWithTake for ArticleInterstitialAdContext(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = (_BYTE *)(a2 + 256);
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v8 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  v9 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v9;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_BYTE *)(a1 + 177) = *(_BYTE *)(a2 + 177);
  v10 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v12;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  v13 = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = v14;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 320) = v4[64];
  *(_BYTE *)(a1 + 321) = v4[65];
  v16 = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = v16;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = v17;
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 392) = v18;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 400) = v4[144];
  v19 = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 416) = v19;
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = v20;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleInterstitialAdContext(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 448))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleInterstitialAdContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 440) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 448) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 448) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ArticleInterstitialAdContext.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1BA29CF38 + 4 * byte_1BA2C9F25[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1BA29CF6C + 4 * byte_1BA2C9F20[v4]))();
}

uint64_t sub_1BA29CF6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA29CF74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA29CF7CLL);
  return result;
}

uint64_t sub_1BA29CF88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA29CF90);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1BA29CF94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA29CF9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleInterstitialAdContext.CodingKeys()
{
  return &type metadata for ArticleInterstitialAdContext.CodingKeys;
}

unint64_t sub_1BA29CFBC()
{
  unint64_t result;

  result = qword_1EF27FB30;
  if (!qword_1EF27FB30)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2CA078, &type metadata for ArticleInterstitialAdContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27FB30);
  }
  return result;
}

unint64_t sub_1BA29D004()
{
  unint64_t result;

  result = qword_1EF27FB38;
  if (!qword_1EF27FB38)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2C9FE8, &type metadata for ArticleInterstitialAdContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27FB38);
  }
  return result;
}

unint64_t sub_1BA29D04C()
{
  unint64_t result;

  result = qword_1EF27FB40;
  if (!qword_1EF27FB40)
  {
    result = MEMORY[0x1BCCD93D0](&unk_1BA2CA010, &type metadata for ArticleInterstitialAdContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF27FB40);
  }
  return result;
}

uint64_t sub_1BA29D090(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x61746144707061 && a2 == 0xE700000000000000;
  if (v2 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614472657375 && a2 == 0xE800000000000000 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C61727265666572 && a2 == 0xEC00000061746144 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x446E6F6974636573 && a2 == 0xEB00000000617461 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BA2D16B0 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BA2D16D0 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BA2D16F0 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BA2D1710 || (sub_1BA2C26A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BA2D1730)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v6 = sub_1BA2C26A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

NewsAds::FeedGroupAdData::AdjacentPosition_optional __swiftcall FeedGroupAdData.AdjacentPosition.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsAds::FeedGroupAdData::AdjacentPosition_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BA2C25DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FeedGroupAdData.AdjacentPosition.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA29D5A4 + 4 * byte_1BA2CA1C0[*v0]))(7368564, 0xE300000000000000);
}

uint64_t sub_1BA29D5A4()
{
  return 0x6D6F74746F62;
}

uint64_t sub_1BA29D5B8()
{
  return 1952867692;
}

uint64_t sub_1BA29D5C8()
{
  return 0x7468676972;
}

void sub_1BA29D5DC(char *a1)
{
  sub_1BA26DF0C(*a1);
}

void sub_1BA29D5E8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BA2C2720();
  __asm { BR              X9 }
}

uint64_t sub_1BA29D62C()
{
  sub_1BA2C21A4();
  swift_bridgeObjectRelease();
  return sub_1BA2C2738();
}

void sub_1BA29D68C()
{
  __asm { BR              X10 }
}

uint64_t sub_1BA29D6C0()
{
  sub_1BA2C21A4();
  return swift_bridgeObjectRelease();
}

void sub_1BA29D70C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BA2C2720();
  __asm { BR              X9 }
}

uint64_t sub_1BA29D74C()
{
  sub_1BA2C21A4();
  swift_bridgeObjectRelease();
  return sub_1BA2C2738();
}

NewsAds::FeedGroupAdData::AdjacentPosition_optional sub_1BA29D7AC(Swift::String *a1)
{
  return FeedGroupAdData.AdjacentPosition.init(rawValue:)(*a1);
}

uint64_t sub_1BA29D7B8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BA29D7E0 + 4 * byte_1BA2CA1D0[*v0]))();
}

void sub_1BA29D7E0(_QWORD *a1@<X8>)
{
  *a1 = 0x6D6F74746F62;
  a1[1] = 0xE600000000000000;
}

void sub_1BA29D7F8(_QWORD *a1@<X8>)
{
  *a1 = 1952867692;
  a1[1] = 0xE400000000000000;
}

void sub_1BA29D80C(_QWORD *a1@<X8>)
{
  *a1 = 0x7468676972;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1BA29D824()
{
  sub_1BA29FC54();
  return sub_1BA2C2258();
}

uint64_t sub_1BA29D880()
{
  sub_1BA29FC54();
  return sub_1BA2C2228();
}

uint64_t FeedGroupAdData.Article.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedGroupAdData.Article.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedGroupAdData.Article.language.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedGroupAdData.Article.keywords.getter()
{
  return swift_bridgeObjectRetain();
}

void FeedGroupAdData.Article.adjacentPosition.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 56);
}

uint64_t sub_1BA29D964()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA29D998 + 4 * byte_1BA2CA1D4[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA29D998()
{
  return 0x656C746974;
}

uint64_t sub_1BA29D9AC()
{
  return 0x65676175676E616CLL;
}

uint64_t sub_1BA29D9C4()
{
  return 0x7364726F7779656BLL;
}

unint64_t sub_1BA29D9DC()
{
  return 0xD000000000000010;
}

uint64_t sub_1BA29D9F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA29F744(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BA29DA1C()
{
  sub_1BA29DC9C();
  return sub_1BA2C275C();
}

uint64_t sub_1BA29DA44()
{
  sub_1BA29DC9C();
  return sub_1BA2C2768();
}

uint64_t FeedGroupAdData.Article.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;

  sub_1BA236F78(0, &qword_1EF27FB48, (uint64_t (*)(void))sub_1BA29DC9C, (uint64_t)&type metadata for FeedGroupAdData.Article.CodingKeys, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v14 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v18 = *(_QWORD *)(v1 + 24);
  v19 = v8;
  v9 = *(_QWORD *)(v1 + 32);
  v16 = *(_QWORD *)(v1 + 40);
  v17 = v9;
  v15 = *(_QWORD *)(v1 + 48);
  HIDWORD(v14) = *(unsigned __int8 *)(v1 + 56);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA29DC9C();
  sub_1BA2C2750();
  v27 = 0;
  v10 = v20;
  sub_1BA2C2654();
  if (!v10)
  {
    v11 = v15;
    v12 = BYTE4(v14);
    v26 = 1;
    sub_1BA2C2654();
    v25 = 2;
    sub_1BA2C263C();
    v21 = v11;
    v24 = 3;
    sub_1BA229250(0, (unint64_t *)&qword_1ED5B2B70);
    sub_1BA29E108(&qword_1EF27E9C0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1BA2C2684();
    v23 = v12;
    v22 = 4;
    sub_1BA29DCE0();
    sub_1BA2C2684();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

