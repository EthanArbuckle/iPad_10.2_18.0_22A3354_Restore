#error "1A620E384: call analysis failed (funcsize=163)"

uint64_t sub_1A620E3E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v8 + 240) = a6;
  *(_QWORD *)(v8 + 248) = v7;
  *(_BYTE *)(v8 + 464) = a7;
  *(_QWORD *)(v8 + 224) = a4;
  *(_QWORD *)(v8 + 232) = a5;
  *(_QWORD *)(v8 + 208) = a2;
  *(_QWORD *)(v8 + 216) = a3;
  *(_QWORD *)(v8 + 200) = a1;
  sub_1A633533C();
  *(_QWORD *)(v8 + 256) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8465F0);
  *(_QWORD *)(v8 + 264) = swift_task_alloc();
  v9 = sub_1A6332C24();
  *(_QWORD *)(v8 + 272) = v9;
  *(_QWORD *)(v8 + 280) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 288) = swift_task_alloc();
  v10 = sub_1A6332A98();
  *(_QWORD *)(v8 + 296) = v10;
  *(_QWORD *)(v8 + 304) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 312) = swift_task_alloc();
  *(_QWORD *)(v8 + 320) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21DA40);
  *(_QWORD *)(v8 + 328) = swift_task_alloc();
  *(_QWORD *)(v8 + 336) = swift_task_alloc();
  *(_QWORD *)(v8 + 344) = swift_task_alloc();
  *(_QWORD *)(v8 + 352) = swift_task_alloc();
  v11 = sub_1A6334EE0();
  *(_QWORD *)(v8 + 360) = v11;
  *(_QWORD *)(v8 + 368) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 376) = swift_task_alloc();
  *(_QWORD *)(v8 + 384) = swift_task_alloc();
  return swift_task_switch();
}

#error "1A620E868: call analysis failed (funcsize=294)"

uint64_t sub_1A620EA48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_721();
  *(_QWORD *)(v0 + 432) = v2;
  *(_QWORD *)(v0 + 440) = v3;
  *(_QWORD *)(v0 + 448) = v4;
  *(_QWORD *)(v0 + 456) = v1;
  OUTLINED_FUNCTION_334();

  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_1_13();
}

#error "1A620EFE8: call analysis failed (funcsize=601)"

#error "1A620F708: call analysis failed (funcsize=153)"

uint64_t sub_1A620F774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v8 + 160) = a6;
  *(_QWORD *)(v8 + 168) = v7;
  *(_BYTE *)(v8 + 384) = a7;
  *(_QWORD *)(v8 + 144) = a4;
  *(_QWORD *)(v8 + 152) = a5;
  *(_QWORD *)(v8 + 128) = a2;
  *(_QWORD *)(v8 + 136) = a3;
  *(_QWORD *)(v8 + 120) = a1;
  sub_1A633533C();
  *(_QWORD *)(v8 + 176) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8464A0);
  *(_QWORD *)(v8 + 184) = swift_task_alloc();
  v9 = sub_1A6332C24();
  *(_QWORD *)(v8 + 192) = v9;
  *(_QWORD *)(v8 + 200) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 208) = swift_task_alloc();
  v10 = sub_1A6332A98();
  *(_QWORD *)(v8 + 216) = v10;
  *(_QWORD *)(v8 + 224) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 232) = swift_task_alloc();
  *(_QWORD *)(v8 + 240) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21DA40);
  *(_QWORD *)(v8 + 248) = swift_task_alloc();
  *(_QWORD *)(v8 + 256) = swift_task_alloc();
  *(_QWORD *)(v8 + 264) = swift_task_alloc();
  *(_QWORD *)(v8 + 272) = swift_task_alloc();
  v11 = sub_1A6334EE0();
  *(_QWORD *)(v8 + 280) = v11;
  *(_QWORD *)(v8 + 288) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 296) = swift_task_alloc();
  *(_QWORD *)(v8 + 304) = swift_task_alloc();
  return swift_task_switch();
}

#error "1A620FB80: call analysis failed (funcsize=206)"

uint64_t sub_1A620FC78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_111(a1, a2, a3);
  OUTLINED_FUNCTION_769();
  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_1_13();
}

uint64_t sub_1A620FCB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  _QWORD *v58;
  void *v59;
  void *v60;
  void *v61;
  NSObject *v62;
  uint64_t v63;
  os_log_type_t v64;
  uint64_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  uint64_t v71;
  os_log_type_t v72;
  BOOL v73;
  void *v74;
  uint64_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  const void *v81;
  void *v82;
  void *v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  const void *v91;
  void *v92;
  void *v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  NSObject *v101;
  uint64_t v102;
  id v103;
  os_log_type_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  const void *v113;
  void *v114;
  void *v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  id v121;
  uint64_t v122;
  uint64_t v124;
  uint64_t v125;

  OUTLINED_FUNCTION_659();
  a43 = v50;
  a44 = v51;
  a42 = v45;
  v52 = *(void **)(v45 + 368);
  OUTLINED_FUNCTION_233(v51, *(_QWORD *)(v45 + 360));
  v53 = v52;
  v54 = (void *)sub_1A63356FC();
  v55 = OUTLINED_FUNCTION_0_4();
  *(_OWORD *)(v55 + 16) = xmmword_1A6338E30;
  *(_QWORD *)(v55 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v55 + 64) = v48;
  *(_QWORD *)(v55 + 32) = v49;
  *(_QWORD *)(v55 + 40) = v47;
  OUTLINED_FUNCTION_93_0();
  OUTLINED_FUNCTION_486();
  v56 = OUTLINED_FUNCTION_273();
  if (v57)
  {
    OUTLINED_FUNCTION_360(v56, &qword_1ED21DA40);
    OUTLINED_FUNCTION_343();
  }
  else
  {
    OUTLINED_FUNCTION_479();
    OUTLINED_FUNCTION_115();
    OUTLINED_FUNCTION_343();
    if (v44)
    {
      *v58 = v46;
      goto LABEL_7;
    }
  }
  OUTLINED_FUNCTION_186(v58);
LABEL_7:
  v59 = *(void **)(v45 + 368);
  v60 = *(void **)(v45 + 296);
  v61 = *(void **)(v45 + 280);
  *(_QWORD *)(v55 + 80) = v44;
  OUTLINED_FUNCTION_20_10();
  OUTLINED_FUNCTION_169();
  OUTLINED_FUNCTION_13_4();
  OUTLINED_FUNCTION_230();
  objc_opt_self();
  if (OUTLINED_FUNCTION_349())
  {
    OUTLINED_FUNCTION_433();
    v125 = v44;
    if (OUTLINED_FUNCTION_207() == (id)401)
    {
      OUTLINED_FUNCTION_503();
      if (qword_1ED21D318 != -1)
        swift_once();
      v62 = *(NSObject **)(v45 + 144);
      v63 = OUTLINED_FUNCTION_30();
      __swift_project_value_buffer(v63, (uint64_t)qword_1ED22A3C0);
      OUTLINED_FUNCTION_21_7();
      OUTLINED_FUNCTION_244();
      v64 = OUTLINED_FUNCTION_61_0();
      if (OUTLINED_FUNCTION_35(v64))
      {
        v65 = *(_QWORD *)(v45 + 136);
        v66 = (uint8_t *)OUTLINED_FUNCTION_2_4();
        v67 = OUTLINED_FUNCTION_2_4();
        OUTLINED_FUNCTION_363(v67);
        OUTLINED_FUNCTION_146(4.8751e-34);
        v69 = OUTLINED_FUNCTION_23_3(v65, v68, &a31);
        OUTLINED_FUNCTION_184(v69);
        OUTLINED_FUNCTION_37();
        OUTLINED_FUNCTION_33(&dword_1A6185000, v62, (os_log_type_t)v59, "Received authentication failure for request: %{public}s", v66);
        OUTLINED_FUNCTION_33_2();
        OUTLINED_FUNCTION_0_5();
      }
      OUTLINED_FUNCTION_19_0();

      OUTLINED_FUNCTION_354();
      v90 = type metadata accessor for DailyWeatherStatistics();
      OUTLINED_FUNCTION_160(v90);
      v91 = (const void *)OUTLINED_FUNCTION_91_0();
      sub_1A6217940(v91, v92, v93, v94, v95, v96, v97);

      OUTLINED_FUNCTION_124(v98, &qword_1EE8464A0);
      OUTLINED_FUNCTION_66_0((_QWORD *)(v48 + qword_1ED22A398));
      OUTLINED_FUNCTION_81();
      OUTLINED_FUNCTION_84_0((uint64_t)&unk_1EE846428);
      OUTLINED_FUNCTION_21();
      *(_QWORD *)(v99 + 8) = 0;
      *(_QWORD *)(v99 + 16) = 0;
      *(_QWORD *)v99 = v125;
      *(_BYTE *)(v99 + 24) = 3;
      OUTLINED_FUNCTION_76();
      OUTLINED_FUNCTION_770();

    }
    else
    {
      if (OUTLINED_FUNCTION_655())
        OUTLINED_FUNCTION_157();
      if (qword_1ED21D318 != -1)
        swift_once();
      v100 = *(void **)(v45 + 368);
      v101 = *(NSObject **)(v45 + 144);
      v102 = OUTLINED_FUNCTION_30();
      OUTLINED_FUNCTION_11_9(v102, (uint64_t)qword_1ED22A3C0);
      v103 = v100;
      OUTLINED_FUNCTION_134();
      v104 = OUTLINED_FUNCTION_61_0();
      OUTLINED_FUNCTION_41(v104);
      OUTLINED_FUNCTION_824();
      if ((v105 & 1) != 0)
      {
        v124 = *(_QWORD *)(v45 + 136);
        v106 = OUTLINED_FUNCTION_2_4();
        v107 = OUTLINED_FUNCTION_2_4();
        OUTLINED_FUNCTION_363(v107);
        *(_QWORD *)(v45 + 48) = OUTLINED_FUNCTION_283(3.9123e-34);
        OUTLINED_FUNCTION_171();

        *(_WORD *)(v106 + 12) = 2082;
        OUTLINED_FUNCTION_93_0();
        v109 = OUTLINED_FUNCTION_425(v124, v108, &a31);
        OUTLINED_FUNCTION_282(v109);
        OUTLINED_FUNCTION_37();
        OUTLINED_FUNCTION_67_0(&dword_1A6185000, v101, (os_log_type_t)v100, "Received invalid http response code %{public}ld for request: %{public}s", (uint8_t *)v106);
        OUTLINED_FUNCTION_33_2();
        OUTLINED_FUNCTION_0_5();
      }

      OUTLINED_FUNCTION_19_0();
      OUTLINED_FUNCTION_297();
      v110 = type metadata accessor for DailyWeatherStatistics();
      OUTLINED_FUNCTION_125((uint64_t)v54, v111, v112, v110);
      v113 = (const void *)OUTLINED_FUNCTION_90();
      sub_1A6217940(v113, v114, v115, v116, v117, v118, v119);

      OUTLINED_FUNCTION_572(v120, &qword_1EE8464A0);
      v121 = v61;
      OUTLINED_FUNCTION_389();
      OUTLINED_FUNCTION_373();
      OUTLINED_FUNCTION_152();
      OUTLINED_FUNCTION_95();
      OUTLINED_FUNCTION_576((uint64_t)&unk_1EE846428);
      OUTLINED_FUNCTION_21();
      *(_QWORD *)v122 = v125;
      *(_QWORD *)(v122 + 8) = v101;
      *(_QWORD *)(v122 + 16) = v54;
      *(_BYTE *)(v122 + 24) = 1;
      OUTLINED_FUNCTION_76();

      OUTLINED_FUNCTION_380();
      OUTLINED_FUNCTION_776();

    }
  }
  else
  {
    OUTLINED_FUNCTION_503();
    if (qword_1ED21D318 != -1)
      swift_once();
    v70 = *(NSObject **)(v45 + 144);
    v71 = OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_11_9(v71, (uint64_t)qword_1ED22A3C0);
    OUTLINED_FUNCTION_134();
    v72 = OUTLINED_FUNCTION_61_0();
    v73 = OUTLINED_FUNCTION_41(v72);
    v74 = *(void **)(v45 + 144);
    if (v73)
    {
      v75 = *(_QWORD *)(v45 + 136);
      v76 = (uint8_t *)OUTLINED_FUNCTION_2_4();
      v77 = OUTLINED_FUNCTION_2_4();
      OUTLINED_FUNCTION_363(v77);
      OUTLINED_FUNCTION_168(4.8751e-34);
      v79 = OUTLINED_FUNCTION_285(v75, v78, &a31);
      OUTLINED_FUNCTION_281(v79);
      OUTLINED_FUNCTION_37();
      OUTLINED_FUNCTION_33(&dword_1A6185000, v70, (os_log_type_t)v55, "Received invalid response type for request: %{public}s", v76);
      OUTLINED_FUNCTION_33_2();
      OUTLINED_FUNCTION_0_5();
    }
    OUTLINED_FUNCTION_19_0();

    OUTLINED_FUNCTION_355();
    v80 = type metadata accessor for DailyWeatherStatistics();
    OUTLINED_FUNCTION_159(v80);
    v81 = (const void *)OUTLINED_FUNCTION_88_0();
    sub_1A6217940(v81, v82, v83, v84, v85, v86, v87);

    OUTLINED_FUNCTION_124(v88, &qword_1EE8464A0);
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_84_0((uint64_t)&unk_1EE846428);
    OUTLINED_FUNCTION_21();
    *(_QWORD *)(v89 + 8) = 0;
    *(_QWORD *)(v89 + 16) = 0;
    *(_QWORD *)v89 = 3;
    *(_BYTE *)(v89 + 24) = 4;
    OUTLINED_FUNCTION_76();

    OUTLINED_FUNCTION_507();
  }
  OUTLINED_FUNCTION_182(*(_QWORD *)(v45 + 200));
  OUTLINED_FUNCTION_438();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_241();
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_254();
  OUTLINED_FUNCTION_302();
  OUTLINED_FUNCTION_307();
  OUTLINED_FUNCTION_476();
  OUTLINED_FUNCTION_9_9();
  OUTLINED_FUNCTION_754();
  OUTLINED_FUNCTION_422();
  return OUTLINED_FUNCTION_211(*(uint64_t (**)(void))(v45 + 8));
}

#error "1A621077C: call analysis failed (funcsize=133)"

uint64_t sub_1A62107D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v8 + 160) = a6;
  *(_QWORD *)(v8 + 168) = v7;
  *(_BYTE *)(v8 + 384) = a7;
  *(_QWORD *)(v8 + 144) = a4;
  *(_QWORD *)(v8 + 152) = a5;
  *(_QWORD *)(v8 + 128) = a2;
  *(_QWORD *)(v8 + 136) = a3;
  *(_QWORD *)(v8 + 120) = a1;
  sub_1A633533C();
  *(_QWORD *)(v8 + 176) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846378);
  *(_QWORD *)(v8 + 184) = swift_task_alloc();
  v9 = sub_1A6332C24();
  *(_QWORD *)(v8 + 192) = v9;
  *(_QWORD *)(v8 + 200) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 208) = swift_task_alloc();
  v10 = sub_1A6332A98();
  *(_QWORD *)(v8 + 216) = v10;
  *(_QWORD *)(v8 + 224) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 232) = swift_task_alloc();
  *(_QWORD *)(v8 + 240) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21DA40);
  *(_QWORD *)(v8 + 248) = swift_task_alloc();
  *(_QWORD *)(v8 + 256) = swift_task_alloc();
  *(_QWORD *)(v8 + 264) = swift_task_alloc();
  *(_QWORD *)(v8 + 272) = swift_task_alloc();
  v11 = sub_1A6334EE0();
  *(_QWORD *)(v8 + 280) = v11;
  *(_QWORD *)(v8 + 288) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 296) = swift_task_alloc();
  *(_QWORD *)(v8 + 304) = swift_task_alloc();
  return swift_task_switch();
}

#error "1A6210BE4: call analysis failed (funcsize=206)"

uint64_t sub_1A6210CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_111(a1, a2, a3);
  OUTLINED_FUNCTION_769();
  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_1_13();
}

uint64_t sub_1A6210D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  _QWORD *v58;
  void *v59;
  void *v60;
  void *v61;
  NSObject *v62;
  uint64_t v63;
  os_log_type_t v64;
  uint64_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  uint64_t v71;
  os_log_type_t v72;
  BOOL v73;
  void *v74;
  uint64_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  const void *v81;
  void *v82;
  void *v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  const void *v91;
  void *v92;
  void *v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  NSObject *v101;
  uint64_t v102;
  id v103;
  os_log_type_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  const void *v113;
  void *v114;
  void *v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  id v121;
  uint64_t v122;
  uint64_t v124;
  uint64_t v125;

  OUTLINED_FUNCTION_659();
  a43 = v50;
  a44 = v51;
  a42 = v45;
  v52 = *(void **)(v45 + 368);
  OUTLINED_FUNCTION_233(v51, *(_QWORD *)(v45 + 360));
  v53 = v52;
  v54 = (void *)sub_1A63356FC();
  v55 = OUTLINED_FUNCTION_0_4();
  *(_OWORD *)(v55 + 16) = xmmword_1A6338E30;
  *(_QWORD *)(v55 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v55 + 64) = v48;
  *(_QWORD *)(v55 + 32) = v49;
  *(_QWORD *)(v55 + 40) = v47;
  OUTLINED_FUNCTION_93_0();
  OUTLINED_FUNCTION_486();
  v56 = OUTLINED_FUNCTION_273();
  if (v57)
  {
    OUTLINED_FUNCTION_360(v56, &qword_1ED21DA40);
    OUTLINED_FUNCTION_343();
  }
  else
  {
    OUTLINED_FUNCTION_479();
    OUTLINED_FUNCTION_115();
    OUTLINED_FUNCTION_343();
    if (v44)
    {
      *v58 = v46;
      goto LABEL_7;
    }
  }
  OUTLINED_FUNCTION_186(v58);
LABEL_7:
  v59 = *(void **)(v45 + 368);
  v60 = *(void **)(v45 + 296);
  v61 = *(void **)(v45 + 280);
  *(_QWORD *)(v55 + 80) = v44;
  OUTLINED_FUNCTION_20_10();
  OUTLINED_FUNCTION_169();
  OUTLINED_FUNCTION_13_4();
  OUTLINED_FUNCTION_230();
  objc_opt_self();
  if (OUTLINED_FUNCTION_349())
  {
    OUTLINED_FUNCTION_433();
    v125 = v44;
    if (OUTLINED_FUNCTION_207() == (id)401)
    {
      OUTLINED_FUNCTION_503();
      if (qword_1ED21D318 != -1)
        swift_once();
      v62 = *(NSObject **)(v45 + 144);
      v63 = OUTLINED_FUNCTION_30();
      __swift_project_value_buffer(v63, (uint64_t)qword_1ED22A3C0);
      OUTLINED_FUNCTION_21_7();
      OUTLINED_FUNCTION_244();
      v64 = OUTLINED_FUNCTION_61_0();
      if (OUTLINED_FUNCTION_35(v64))
      {
        v65 = *(_QWORD *)(v45 + 136);
        v66 = (uint8_t *)OUTLINED_FUNCTION_2_4();
        v67 = OUTLINED_FUNCTION_2_4();
        OUTLINED_FUNCTION_363(v67);
        OUTLINED_FUNCTION_146(4.8751e-34);
        v69 = OUTLINED_FUNCTION_23_3(v65, v68, &a31);
        OUTLINED_FUNCTION_184(v69);
        OUTLINED_FUNCTION_37();
        OUTLINED_FUNCTION_33(&dword_1A6185000, v62, (os_log_type_t)v59, "Received authentication failure for request: %{public}s", v66);
        OUTLINED_FUNCTION_33_2();
        OUTLINED_FUNCTION_0_5();
      }
      OUTLINED_FUNCTION_19_0();

      OUTLINED_FUNCTION_354();
      v90 = type metadata accessor for HourlyWeatherStatistics();
      OUTLINED_FUNCTION_160(v90);
      v91 = (const void *)OUTLINED_FUNCTION_91_0();
      sub_1A6217A8C(v91, v92, v93, v94, v95, v96, v97);

      OUTLINED_FUNCTION_124(v98, &qword_1EE846378);
      OUTLINED_FUNCTION_66_0((_QWORD *)(v48 + qword_1ED22A398));
      OUTLINED_FUNCTION_81();
      OUTLINED_FUNCTION_84_0((uint64_t)&unk_1EE8462F8);
      OUTLINED_FUNCTION_21();
      *(_QWORD *)(v99 + 8) = 0;
      *(_QWORD *)(v99 + 16) = 0;
      *(_QWORD *)v99 = v125;
      *(_BYTE *)(v99 + 24) = 3;
      OUTLINED_FUNCTION_76();
      OUTLINED_FUNCTION_770();

    }
    else
    {
      if (OUTLINED_FUNCTION_655())
        OUTLINED_FUNCTION_157();
      if (qword_1ED21D318 != -1)
        swift_once();
      v100 = *(void **)(v45 + 368);
      v101 = *(NSObject **)(v45 + 144);
      v102 = OUTLINED_FUNCTION_30();
      OUTLINED_FUNCTION_11_9(v102, (uint64_t)qword_1ED22A3C0);
      v103 = v100;
      OUTLINED_FUNCTION_134();
      v104 = OUTLINED_FUNCTION_61_0();
      OUTLINED_FUNCTION_41(v104);
      OUTLINED_FUNCTION_824();
      if ((v105 & 1) != 0)
      {
        v124 = *(_QWORD *)(v45 + 136);
        v106 = OUTLINED_FUNCTION_2_4();
        v107 = OUTLINED_FUNCTION_2_4();
        OUTLINED_FUNCTION_363(v107);
        *(_QWORD *)(v45 + 48) = OUTLINED_FUNCTION_283(3.9123e-34);
        OUTLINED_FUNCTION_171();

        *(_WORD *)(v106 + 12) = 2082;
        OUTLINED_FUNCTION_93_0();
        v109 = OUTLINED_FUNCTION_425(v124, v108, &a31);
        OUTLINED_FUNCTION_282(v109);
        OUTLINED_FUNCTION_37();
        OUTLINED_FUNCTION_67_0(&dword_1A6185000, v101, (os_log_type_t)v100, "Received invalid http response code %{public}ld for request: %{public}s", (uint8_t *)v106);
        OUTLINED_FUNCTION_33_2();
        OUTLINED_FUNCTION_0_5();
      }

      OUTLINED_FUNCTION_19_0();
      OUTLINED_FUNCTION_297();
      v110 = type metadata accessor for HourlyWeatherStatistics();
      OUTLINED_FUNCTION_125((uint64_t)v54, v111, v112, v110);
      v113 = (const void *)OUTLINED_FUNCTION_90();
      sub_1A6217A8C(v113, v114, v115, v116, v117, v118, v119);

      OUTLINED_FUNCTION_572(v120, &qword_1EE846378);
      v121 = v61;
      OUTLINED_FUNCTION_389();
      OUTLINED_FUNCTION_373();
      OUTLINED_FUNCTION_152();
      OUTLINED_FUNCTION_95();
      OUTLINED_FUNCTION_576((uint64_t)&unk_1EE8462F8);
      OUTLINED_FUNCTION_21();
      *(_QWORD *)v122 = v125;
      *(_QWORD *)(v122 + 8) = v101;
      *(_QWORD *)(v122 + 16) = v54;
      *(_BYTE *)(v122 + 24) = 1;
      OUTLINED_FUNCTION_76();

      OUTLINED_FUNCTION_380();
      OUTLINED_FUNCTION_776();

    }
  }
  else
  {
    OUTLINED_FUNCTION_503();
    if (qword_1ED21D318 != -1)
      swift_once();
    v70 = *(NSObject **)(v45 + 144);
    v71 = OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_11_9(v71, (uint64_t)qword_1ED22A3C0);
    OUTLINED_FUNCTION_134();
    v72 = OUTLINED_FUNCTION_61_0();
    v73 = OUTLINED_FUNCTION_41(v72);
    v74 = *(void **)(v45 + 144);
    if (v73)
    {
      v75 = *(_QWORD *)(v45 + 136);
      v76 = (uint8_t *)OUTLINED_FUNCTION_2_4();
      v77 = OUTLINED_FUNCTION_2_4();
      OUTLINED_FUNCTION_363(v77);
      OUTLINED_FUNCTION_168(4.8751e-34);
      v79 = OUTLINED_FUNCTION_285(v75, v78, &a31);
      OUTLINED_FUNCTION_281(v79);
      OUTLINED_FUNCTION_37();
      OUTLINED_FUNCTION_33(&dword_1A6185000, v70, (os_log_type_t)v55, "Received invalid response type for request: %{public}s", v76);
      OUTLINED_FUNCTION_33_2();
      OUTLINED_FUNCTION_0_5();
    }
    OUTLINED_FUNCTION_19_0();

    OUTLINED_FUNCTION_355();
    v80 = type metadata accessor for HourlyWeatherStatistics();
    OUTLINED_FUNCTION_159(v80);
    v81 = (const void *)OUTLINED_FUNCTION_88_0();
    sub_1A6217A8C(v81, v82, v83, v84, v85, v86, v87);

    OUTLINED_FUNCTION_124(v88, &qword_1EE846378);
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_84_0((uint64_t)&unk_1EE8462F8);
    OUTLINED_FUNCTION_21();
    *(_QWORD *)(v89 + 8) = 0;
    *(_QWORD *)(v89 + 16) = 0;
    *(_QWORD *)v89 = 3;
    *(_BYTE *)(v89 + 24) = 4;
    OUTLINED_FUNCTION_76();

    OUTLINED_FUNCTION_507();
  }
  OUTLINED_FUNCTION_182(*(_QWORD *)(v45 + 200));
  OUTLINED_FUNCTION_438();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_241();
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_254();
  OUTLINED_FUNCTION_302();
  OUTLINED_FUNCTION_307();
  OUTLINED_FUNCTION_476();
  OUTLINED_FUNCTION_9_9();
  OUTLINED_FUNCTION_754();
  OUTLINED_FUNCTION_422();
  return OUTLINED_FUNCTION_211(*(uint64_t (**)(void))(v45 + 8));
}

#error "1A62117E0: call analysis failed (funcsize=133)"

uint64_t sub_1A621183C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v8 + 160) = a6;
  *(_QWORD *)(v8 + 168) = v7;
  *(_BYTE *)(v8 + 384) = a7;
  *(_QWORD *)(v8 + 144) = a4;
  *(_QWORD *)(v8 + 152) = a5;
  *(_QWORD *)(v8 + 128) = a2;
  *(_QWORD *)(v8 + 136) = a3;
  *(_QWORD *)(v8 + 120) = a1;
  sub_1A633533C();
  *(_QWORD *)(v8 + 176) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8462D8);
  *(_QWORD *)(v8 + 184) = swift_task_alloc();
  v9 = sub_1A6332C24();
  *(_QWORD *)(v8 + 192) = v9;
  *(_QWORD *)(v8 + 200) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 208) = swift_task_alloc();
  v10 = sub_1A6332A98();
  *(_QWORD *)(v8 + 216) = v10;
  *(_QWORD *)(v8 + 224) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 232) = swift_task_alloc();
  *(_QWORD *)(v8 + 240) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21DA40);
  *(_QWORD *)(v8 + 248) = swift_task_alloc();
  *(_QWORD *)(v8 + 256) = swift_task_alloc();
  *(_QWORD *)(v8 + 264) = swift_task_alloc();
  *(_QWORD *)(v8 + 272) = swift_task_alloc();
  v11 = sub_1A6334EE0();
  *(_QWORD *)(v8 + 280) = v11;
  *(_QWORD *)(v8 + 288) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 296) = swift_task_alloc();
  *(_QWORD *)(v8 + 304) = swift_task_alloc();
  return swift_task_switch();
}

#error "1A6211C48: call analysis failed (funcsize=206)"

uint64_t sub_1A6211D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_111(a1, a2, a3);
  OUTLINED_FUNCTION_769();
  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_1_13();
}

uint64_t sub_1A6211D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  _QWORD *v58;
  void *v59;
  void *v60;
  void *v61;
  NSObject *v62;
  uint64_t v63;
  os_log_type_t v64;
  uint64_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  uint64_t v71;
  os_log_type_t v72;
  BOOL v73;
  void *v74;
  uint64_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  const void *v81;
  void *v82;
  void *v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  const void *v91;
  void *v92;
  void *v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  NSObject *v101;
  uint64_t v102;
  id v103;
  os_log_type_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  const void *v113;
  void *v114;
  void *v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  id v121;
  uint64_t v122;
  uint64_t v124;
  uint64_t v125;

  OUTLINED_FUNCTION_659();
  a43 = v50;
  a44 = v51;
  a42 = v45;
  v52 = *(void **)(v45 + 368);
  OUTLINED_FUNCTION_233(v51, *(_QWORD *)(v45 + 360));
  v53 = v52;
  v54 = (void *)sub_1A63356FC();
  v55 = OUTLINED_FUNCTION_0_4();
  *(_OWORD *)(v55 + 16) = xmmword_1A6338E30;
  *(_QWORD *)(v55 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v55 + 64) = v48;
  *(_QWORD *)(v55 + 32) = v49;
  *(_QWORD *)(v55 + 40) = v47;
  OUTLINED_FUNCTION_93_0();
  OUTLINED_FUNCTION_486();
  v56 = OUTLINED_FUNCTION_273();
  if (v57)
  {
    OUTLINED_FUNCTION_360(v56, &qword_1ED21DA40);
    OUTLINED_FUNCTION_343();
  }
  else
  {
    OUTLINED_FUNCTION_479();
    OUTLINED_FUNCTION_115();
    OUTLINED_FUNCTION_343();
    if (v44)
    {
      *v58 = v46;
      goto LABEL_7;
    }
  }
  OUTLINED_FUNCTION_186(v58);
LABEL_7:
  v59 = *(void **)(v45 + 368);
  v60 = *(void **)(v45 + 296);
  v61 = *(void **)(v45 + 280);
  *(_QWORD *)(v55 + 80) = v44;
  OUTLINED_FUNCTION_20_10();
  OUTLINED_FUNCTION_169();
  OUTLINED_FUNCTION_13_4();
  OUTLINED_FUNCTION_230();
  objc_opt_self();
  if (OUTLINED_FUNCTION_349())
  {
    OUTLINED_FUNCTION_433();
    v125 = v44;
    if (OUTLINED_FUNCTION_207() == (id)401)
    {
      OUTLINED_FUNCTION_503();
      if (qword_1ED21D318 != -1)
        swift_once();
      v62 = *(NSObject **)(v45 + 144);
      v63 = OUTLINED_FUNCTION_30();
      __swift_project_value_buffer(v63, (uint64_t)qword_1ED22A3C0);
      OUTLINED_FUNCTION_21_7();
      OUTLINED_FUNCTION_244();
      v64 = OUTLINED_FUNCTION_61_0();
      if (OUTLINED_FUNCTION_35(v64))
      {
        v65 = *(_QWORD *)(v45 + 136);
        v66 = (uint8_t *)OUTLINED_FUNCTION_2_4();
        v67 = OUTLINED_FUNCTION_2_4();
        OUTLINED_FUNCTION_363(v67);
        OUTLINED_FUNCTION_146(4.8751e-34);
        v69 = OUTLINED_FUNCTION_23_3(v65, v68, &a31);
        OUTLINED_FUNCTION_184(v69);
        OUTLINED_FUNCTION_37();
        OUTLINED_FUNCTION_33(&dword_1A6185000, v62, (os_log_type_t)v59, "Received authentication failure for request: %{public}s", v66);
        OUTLINED_FUNCTION_33_2();
        OUTLINED_FUNCTION_0_5();
      }
      OUTLINED_FUNCTION_19_0();

      OUTLINED_FUNCTION_354();
      v90 = type metadata accessor for MonthlyWeatherStatistics();
      OUTLINED_FUNCTION_160(v90);
      v91 = (const void *)OUTLINED_FUNCTION_91_0();
      sub_1A6217BD8(v91, v92, v93, v94, v95, v96, v97);

      OUTLINED_FUNCTION_124(v98, &qword_1EE8462D8);
      OUTLINED_FUNCTION_66_0((_QWORD *)(v48 + qword_1ED22A398));
      OUTLINED_FUNCTION_81();
      OUTLINED_FUNCTION_84_0((uint64_t)&unk_1EE846258);
      OUTLINED_FUNCTION_21();
      *(_QWORD *)(v99 + 8) = 0;
      *(_QWORD *)(v99 + 16) = 0;
      *(_QWORD *)v99 = v125;
      *(_BYTE *)(v99 + 24) = 3;
      OUTLINED_FUNCTION_76();
      OUTLINED_FUNCTION_770();

    }
    else
    {
      if (OUTLINED_FUNCTION_655())
        OUTLINED_FUNCTION_157();
      if (qword_1ED21D318 != -1)
        swift_once();
      v100 = *(void **)(v45 + 368);
      v101 = *(NSObject **)(v45 + 144);
      v102 = OUTLINED_FUNCTION_30();
      OUTLINED_FUNCTION_11_9(v102, (uint64_t)qword_1ED22A3C0);
      v103 = v100;
      OUTLINED_FUNCTION_134();
      v104 = OUTLINED_FUNCTION_61_0();
      OUTLINED_FUNCTION_41(v104);
      OUTLINED_FUNCTION_824();
      if ((v105 & 1) != 0)
      {
        v124 = *(_QWORD *)(v45 + 136);
        v106 = OUTLINED_FUNCTION_2_4();
        v107 = OUTLINED_FUNCTION_2_4();
        OUTLINED_FUNCTION_363(v107);
        *(_QWORD *)(v45 + 48) = OUTLINED_FUNCTION_283(3.9123e-34);
        OUTLINED_FUNCTION_171();

        *(_WORD *)(v106 + 12) = 2082;
        OUTLINED_FUNCTION_93_0();
        v109 = OUTLINED_FUNCTION_425(v124, v108, &a31);
        OUTLINED_FUNCTION_282(v109);
        OUTLINED_FUNCTION_37();
        OUTLINED_FUNCTION_67_0(&dword_1A6185000, v101, (os_log_type_t)v100, "Received invalid http response code %{public}ld for request: %{public}s", (uint8_t *)v106);
        OUTLINED_FUNCTION_33_2();
        OUTLINED_FUNCTION_0_5();
      }

      OUTLINED_FUNCTION_19_0();
      OUTLINED_FUNCTION_297();
      v110 = type metadata accessor for MonthlyWeatherStatistics();
      OUTLINED_FUNCTION_125((uint64_t)v54, v111, v112, v110);
      v113 = (const void *)OUTLINED_FUNCTION_90();
      sub_1A6217BD8(v113, v114, v115, v116, v117, v118, v119);

      OUTLINED_FUNCTION_572(v120, &qword_1EE8462D8);
      v121 = v61;
      OUTLINED_FUNCTION_389();
      OUTLINED_FUNCTION_373();
      OUTLINED_FUNCTION_152();
      OUTLINED_FUNCTION_95();
      OUTLINED_FUNCTION_576((uint64_t)&unk_1EE846258);
      OUTLINED_FUNCTION_21();
      *(_QWORD *)v122 = v125;
      *(_QWORD *)(v122 + 8) = v101;
      *(_QWORD *)(v122 + 16) = v54;
      *(_BYTE *)(v122 + 24) = 1;
      OUTLINED_FUNCTION_76();

      OUTLINED_FUNCTION_380();
      OUTLINED_FUNCTION_776();

    }
  }
  else
  {
    OUTLINED_FUNCTION_503();
    if (qword_1ED21D318 != -1)
      swift_once();
    v70 = *(NSObject **)(v45 + 144);
    v71 = OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_11_9(v71, (uint64_t)qword_1ED22A3C0);
    OUTLINED_FUNCTION_134();
    v72 = OUTLINED_FUNCTION_61_0();
    v73 = OUTLINED_FUNCTION_41(v72);
    v74 = *(void **)(v45 + 144);
    if (v73)
    {
      v75 = *(_QWORD *)(v45 + 136);
      v76 = (uint8_t *)OUTLINED_FUNCTION_2_4();
      v77 = OUTLINED_FUNCTION_2_4();
      OUTLINED_FUNCTION_363(v77);
      OUTLINED_FUNCTION_168(4.8751e-34);
      v79 = OUTLINED_FUNCTION_285(v75, v78, &a31);
      OUTLINED_FUNCTION_281(v79);
      OUTLINED_FUNCTION_37();
      OUTLINED_FUNCTION_33(&dword_1A6185000, v70, (os_log_type_t)v55, "Received invalid response type for request: %{public}s", v76);
      OUTLINED_FUNCTION_33_2();
      OUTLINED_FUNCTION_0_5();
    }
    OUTLINED_FUNCTION_19_0();

    OUTLINED_FUNCTION_355();
    v80 = type metadata accessor for MonthlyWeatherStatistics();
    OUTLINED_FUNCTION_159(v80);
    v81 = (const void *)OUTLINED_FUNCTION_88_0();
    sub_1A6217BD8(v81, v82, v83, v84, v85, v86, v87);

    OUTLINED_FUNCTION_124(v88, &qword_1EE8462D8);
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_84_0((uint64_t)&unk_1EE846258);
    OUTLINED_FUNCTION_21();
    *(_QWORD *)(v89 + 8) = 0;
    *(_QWORD *)(v89 + 16) = 0;
    *(_QWORD *)v89 = 3;
    *(_BYTE *)(v89 + 24) = 4;
    OUTLINED_FUNCTION_76();

    OUTLINED_FUNCTION_507();
  }
  OUTLINED_FUNCTION_182(*(_QWORD *)(v45 + 200));
  OUTLINED_FUNCTION_438();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_241();
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_254();
  OUTLINED_FUNCTION_302();
  OUTLINED_FUNCTION_307();
  OUTLINED_FUNCTION_476();
  OUTLINED_FUNCTION_9_9();
  OUTLINED_FUNCTION_754();
  OUTLINED_FUNCTION_422();
  return OUTLINED_FUNCTION_211(*(uint64_t (**)(void))(v45 + 8));
}

#error "1A6212844: call analysis failed (funcsize=133)"

uint64_t sub_1A62128A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v8 + 200) = a6;
  *(_QWORD *)(v8 + 208) = v7;
  *(_BYTE *)(v8 + 496) = a7;
  *(_QWORD *)(v8 + 184) = a4;
  *(_QWORD *)(v8 + 192) = a5;
  *(_QWORD *)(v8 + 168) = a2;
  *(_QWORD *)(v8 + 176) = a3;
  *(_QWORD *)(v8 + 160) = a1;
  sub_1A633533C();
  *(_QWORD *)(v8 + 216) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED21B908);
  *(_QWORD *)(v8 + 224) = swift_task_alloc();
  v9 = sub_1A6332C24();
  *(_QWORD *)(v8 + 232) = v9;
  *(_QWORD *)(v8 + 240) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 248) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C350);
  *(_QWORD *)(v8 + 256) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C748);
  *(_QWORD *)(v8 + 264) = swift_task_alloc();
  *(_QWORD *)(v8 + 272) = type metadata accessor for WDSNetworkActivity();
  *(_QWORD *)(v8 + 280) = swift_task_alloc();
  *(_QWORD *)(v8 + 288) = swift_task_alloc();
  *(_QWORD *)(v8 + 296) = swift_task_alloc();
  *(_QWORD *)(v8 + 304) = swift_task_alloc();
  v10 = sub_1A6332A98();
  *(_QWORD *)(v8 + 312) = v10;
  *(_QWORD *)(v8 + 320) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 328) = swift_task_alloc();
  *(_QWORD *)(v8 + 336) = swift_task_alloc();
  *(_QWORD *)(v8 + 344) = type metadata accessor for WeatherRequest();
  *(_QWORD *)(v8 + 352) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21DA40);
  *(_QWORD *)(v8 + 360) = swift_task_alloc();
  *(_QWORD *)(v8 + 368) = swift_task_alloc();
  *(_QWORD *)(v8 + 376) = swift_task_alloc();
  *(_QWORD *)(v8 + 384) = swift_task_alloc();
  v11 = sub_1A6334EE0();
  *(_QWORD *)(v8 + 392) = v11;
  *(_QWORD *)(v8 + 400) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 408) = swift_task_alloc();
  *(_QWORD *)(v8 + 416) = swift_task_alloc();
  return swift_task_switch();
}

#error "1A6212FAC: call analysis failed (funcsize=406)"

uint64_t sub_1A62131D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  v5 = *v4;
  *(_QWORD *)(v5 + 464) = a1;
  *(_QWORD *)(v5 + 472) = a2;
  *(_QWORD *)(v5 + 480) = a3;
  *(_QWORD *)(v5 + 488) = v3;
  OUTLINED_FUNCTION_334();

  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_1_13();
}

uint64_t sub_1A6213240()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  NSObject *v15;
  uint64_t v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  os_log_type_t v25;
  BOOL v26;
  void *v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  NSObject *v59;
  uint64_t v60;
  id v61;
  os_log_type_t v62;
  BOOL v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  void *v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88[3];

  OUTLINED_FUNCTION_497();
  v7 = v0;
  v8 = (void *)sub_1A63356FC();
  v9 = OUTLINED_FUNCTION_0_4();
  *(_OWORD *)(v9 + 16) = xmmword_1A6338E30;
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 64) = v5;
  *(_QWORD *)(v9 + 32) = v6;
  *(_QWORD *)(v9 + 40) = v4;
  OUTLINED_FUNCTION_93_0();
  OUTLINED_FUNCTION_486();
  v10 = OUTLINED_FUNCTION_883();
  if (v11)
  {
    OUTLINED_FUNCTION_360(v10, &qword_1ED21DA40);
    OUTLINED_FUNCTION_343();
  }
  else
  {
    OUTLINED_FUNCTION_479();
    OUTLINED_FUNCTION_115();
    OUTLINED_FUNCTION_343();
    if (v1)
    {
      *v12 = v3;
      goto LABEL_7;
    }
  }
  OUTLINED_FUNCTION_186(v12);
LABEL_7:
  v13 = *(_QWORD *)(v2 + 480);
  v14 = *(void **)(v2 + 408);
  *(_QWORD *)(v9 + 80) = v1;
  OUTLINED_FUNCTION_20_10();
  OUTLINED_FUNCTION_169();
  OUTLINED_FUNCTION_13_4();
  OUTLINED_FUNCTION_230();
  objc_opt_self();
  if (OUTLINED_FUNCTION_349())
  {
    OUTLINED_FUNCTION_910();
    v87 = v1;
    if (OUTLINED_FUNCTION_207() == (id)401)
    {
      OUTLINED_FUNCTION_825();
      if (qword_1ED21D318 != -1)
        swift_once();
      v15 = *(NSObject **)(v2 + 184);
      v16 = OUTLINED_FUNCTION_30();
      __swift_project_value_buffer(v16, (uint64_t)qword_1ED22A3C0);
      OUTLINED_FUNCTION_21_7();
      OUTLINED_FUNCTION_244();
      v17 = OUTLINED_FUNCTION_61_0();
      if (OUTLINED_FUNCTION_35(v17))
      {
        v18 = *(_QWORD *)(v2 + 176);
        v19 = (uint8_t *)OUTLINED_FUNCTION_2_4();
        v20 = OUTLINED_FUNCTION_2_4();
        OUTLINED_FUNCTION_363(v20);
        OUTLINED_FUNCTION_146(4.8751e-34);
        v22 = OUTLINED_FUNCTION_23_3(v18, v21, v88);
        OUTLINED_FUNCTION_184(v22);
        OUTLINED_FUNCTION_37();
        OUTLINED_FUNCTION_33(&dword_1A6185000, v15, (os_log_type_t)v13, "Received authentication failure for request: %{public}s", v19);
        OUTLINED_FUNCTION_33_2();
        OUTLINED_FUNCTION_0_5();
      }
      OUTLINED_FUNCTION_19_0();

      v45 = *(void **)(v2 + 480);
      v46 = *(void **)(v2 + 448);
      v47 = *(_QWORD *)(v2 + 208);
      v48 = OUTLINED_FUNCTION_2_8();
      OUTLINED_FUNCTION_160(v48);
      v49 = OUTLINED_FUNCTION_91_0();
      sub_1A6217D24(v49, v50, v51, v52, v53, v54, v55);

      OUTLINED_FUNCTION_124(v56, (uint64_t *)&unk_1ED21B908);
      OUTLINED_FUNCTION_66_0((_QWORD *)(v47 + qword_1ED22A398));
      OUTLINED_FUNCTION_81();
      OUTLINED_FUNCTION_84_0((uint64_t)&unk_1ED21B778);
      OUTLINED_FUNCTION_21();
      *(_QWORD *)(v57 + 8) = 0;
      *(_QWORD *)(v57 + 16) = 0;
      *(_QWORD *)v57 = v87;
      *(_BYTE *)(v57 + 24) = 3;
      OUTLINED_FUNCTION_76();
      OUTLINED_FUNCTION_770();

    }
    else
    {
      if (OUTLINED_FUNCTION_655())
        OUTLINED_FUNCTION_298();
      if (qword_1ED21D318 != -1)
        swift_once();
      v58 = *(void **)(v2 + 480);
      v59 = *(NSObject **)(v2 + 184);
      v60 = OUTLINED_FUNCTION_30();
      OUTLINED_FUNCTION_11_9(v60, (uint64_t)qword_1ED22A3C0);
      v61 = v58;
      OUTLINED_FUNCTION_134();
      v62 = OUTLINED_FUNCTION_61_0();
      v63 = OUTLINED_FUNCTION_41(v62);
      v64 = *(void **)(v2 + 480);
      if (v63)
      {
        v86 = *(_QWORD *)(v2 + 176);
        v65 = OUTLINED_FUNCTION_2_4();
        v66 = OUTLINED_FUNCTION_2_4();
        OUTLINED_FUNCTION_363(v66);
        *(_QWORD *)(v2 + 48) = OUTLINED_FUNCTION_283(3.9123e-34);
        OUTLINED_FUNCTION_171();

        *(_WORD *)(v65 + 12) = 2082;
        OUTLINED_FUNCTION_93_0();
        v68 = OUTLINED_FUNCTION_425(v86, v67, v88);
        OUTLINED_FUNCTION_282(v68);
        OUTLINED_FUNCTION_37();
        OUTLINED_FUNCTION_67_0(&dword_1A6185000, v59, (os_log_type_t)v58, "Received invalid http response code %{public}ld for request: %{public}s", (uint8_t *)v65);
        OUTLINED_FUNCTION_33_2();
        OUTLINED_FUNCTION_0_5();
      }

      OUTLINED_FUNCTION_19_0();
      v69 = *(void **)(v2 + 480);
      v70 = *(_QWORD *)(v2 + 448);
      v71 = *(_QWORD *)(v2 + 224);
      v72 = OUTLINED_FUNCTION_2_8();
      OUTLINED_FUNCTION_125(v71, v73, v74, v72);
      v75 = OUTLINED_FUNCTION_90();
      sub_1A6217D24(v75, v76, v77, v78, v79, v80, v81);

      OUTLINED_FUNCTION_572(v82, (uint64_t *)&unk_1ED21B908);
      v83 = v69;
      OUTLINED_FUNCTION_389();
      OUTLINED_FUNCTION_373();
      OUTLINED_FUNCTION_152();
      OUTLINED_FUNCTION_95();
      OUTLINED_FUNCTION_576((uint64_t)&unk_1ED21B778);
      OUTLINED_FUNCTION_21();
      *(_QWORD *)v84 = v87;
      *(_QWORD *)(v84 + 8) = v70;
      *(_QWORD *)(v84 + 16) = v71;
      *(_BYTE *)(v84 + 24) = 1;
      OUTLINED_FUNCTION_76();

      OUTLINED_FUNCTION_380();
      OUTLINED_FUNCTION_776();

    }
  }
  else
  {
    OUTLINED_FUNCTION_825();
    if (qword_1ED21D318 != -1)
      swift_once();
    v23 = *(NSObject **)(v2 + 184);
    v24 = OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_11_9(v24, (uint64_t)qword_1ED22A3C0);
    OUTLINED_FUNCTION_134();
    v25 = OUTLINED_FUNCTION_61_0();
    v26 = OUTLINED_FUNCTION_41(v25);
    v27 = *(void **)(v2 + 184);
    if (v26)
    {
      v28 = *(_QWORD *)(v2 + 176);
      v29 = (uint8_t *)OUTLINED_FUNCTION_2_4();
      v30 = OUTLINED_FUNCTION_2_4();
      OUTLINED_FUNCTION_363(v30);
      OUTLINED_FUNCTION_168(4.8751e-34);
      v32 = OUTLINED_FUNCTION_285(v28, v31, v88);
      OUTLINED_FUNCTION_281(v32);
      OUTLINED_FUNCTION_37();
      OUTLINED_FUNCTION_33(&dword_1A6185000, v23, (os_log_type_t)v9, "Received invalid response type for request: %{public}s", v29);
      OUTLINED_FUNCTION_33_2();
      OUTLINED_FUNCTION_0_5();
    }
    OUTLINED_FUNCTION_19_0();

    v33 = *(void **)(v2 + 480);
    v34 = *(void **)(v2 + 448);
    v35 = OUTLINED_FUNCTION_2_8();
    OUTLINED_FUNCTION_159(v35);
    v36 = OUTLINED_FUNCTION_88_0();
    sub_1A6217D24(v36, v37, v38, v39, v40, v41, v42);

    OUTLINED_FUNCTION_124(v43, (uint64_t *)&unk_1ED21B908);
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_84_0((uint64_t)&unk_1ED21B778);
    OUTLINED_FUNCTION_21();
    *(_QWORD *)(v44 + 8) = 0;
    *(_QWORD *)(v44 + 16) = 0;
    *(_QWORD *)v44 = 3;
    *(_BYTE *)(v44 + 24) = 4;
    OUTLINED_FUNCTION_76();

    OUTLINED_FUNCTION_507();
  }
  OUTLINED_FUNCTION_108_0(*(_QWORD *)(v2 + 240));
  OUTLINED_FUNCTION_438();
  OUTLINED_FUNCTION_9_9();
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_254();
  OUTLINED_FUNCTION_302();
  OUTLINED_FUNCTION_307();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_592();
  OUTLINED_FUNCTION_642();
  OUTLINED_FUNCTION_596();
  OUTLINED_FUNCTION_821();
  OUTLINED_FUNCTION_820();
  OUTLINED_FUNCTION_854();
  OUTLINED_FUNCTION_822();
  OUTLINED_FUNCTION_476();
  OUTLINED_FUNCTION_163();
  OUTLINED_FUNCTION_754();
  OUTLINED_FUNCTION_422();
  return OUTLINED_FUNCTION_492(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1A6213BFC()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t);
  uint64_t v46;

  OUTLINED_FUNCTION_712();
  v43 = (void *)OUTLINED_FUNCTION_543();
  if (objc_msgSend(v43, sel_code) != (id)-999)
  {
    if (qword_1ED21D318 != -1)
      swift_once();
    v1 = *(NSObject **)(v0 + 488);
    v2 = *(_QWORD *)(v0 + 184);
    v3 = OUTLINED_FUNCTION_30();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ED22A3C0);
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_199();
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_199();
    OUTLINED_FUNCTION_314();
    v4 = OUTLINED_FUNCTION_61_0();
    if (OUTLINED_FUNCTION_27_2(v4))
    {
      v41 = *(_QWORD *)(v0 + 176);
      v5 = OUTLINED_FUNCTION_2_4();
      v46 = OUTLINED_FUNCTION_2_4();
      OUTLINED_FUNCTION_277(4.8452e-34);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD0);
      v6 = OUTLINED_FUNCTION_381();
      *(_QWORD *)(v0 + 24) = OUTLINED_FUNCTION_1025(v6, v7);
      OUTLINED_FUNCTION_183();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_121();
      OUTLINED_FUNCTION_121();
      *(_WORD *)(v5 + 12) = 2082;
      OUTLINED_FUNCTION_172();
      v9 = OUTLINED_FUNCTION_285(v41, v8, &v46);
      OUTLINED_FUNCTION_223(v9);
      OUTLINED_FUNCTION_37();
      OUTLINED_FUNCTION_67_0(&dword_1A6185000, v1, (os_log_type_t)v2, "A network error occurred while communicating with WDS: %{private}s for request: %{public}s", (uint8_t *)v5);
      OUTLINED_FUNCTION_122();
      OUTLINED_FUNCTION_0_5();
    }
    OUTLINED_FUNCTION_121();
    OUTLINED_FUNCTION_121();
    OUTLINED_FUNCTION_19_0();

  }
  v10 = *(void **)(v0 + 448);
  v11 = (void *)OUTLINED_FUNCTION_317();
  v12 = OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_158(v12);
  v13 = OUTLINED_FUNCTION_110_0();
  sub_1A6217D24(v13, v14, v15, v16, v17, v18, v19);
  OUTLINED_FUNCTION_72();

  OUTLINED_FUNCTION_124(v20, (uint64_t *)&unk_1ED21B908);
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_84_0((uint64_t)&unk_1ED21B778);
  v42 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_141(v42, v21);
  swift_willThrow();

  OUTLINED_FUNCTION_72();
  v32 = *(_QWORD *)(v0 + 336);
  v33 = *(_QWORD *)(v0 + 328);
  v34 = *(_QWORD *)(v0 + 304);
  v35 = *(_QWORD *)(v0 + 296);
  v36 = *(_QWORD *)(v0 + 288);
  v37 = *(_QWORD *)(v0 + 280);
  v38 = *(_QWORD *)(v0 + 264);
  v39 = *(_QWORD *)(v0 + 256);
  v40 = *(_QWORD *)(v0 + 224);
  v44 = *(_QWORD *)(v0 + 216);
  v22 = OUTLINED_FUNCTION_108_0(*(_QWORD *)(v0 + 240));
  OUTLINED_FUNCTION_857(v22, v23, v24, v25, v26, v27, v28, v29, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v42,
    v44,
    v45);
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_254();
  OUTLINED_FUNCTION_302();
  OUTLINED_FUNCTION_307();
  OUTLINED_FUNCTION_9_9();
  OUTLINED_FUNCTION_554();
  OUTLINED_FUNCTION_982();
  OUTLINED_FUNCTION_641();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_760();
  OUTLINED_FUNCTION_749();
  OUTLINED_FUNCTION_654();
  OUTLINED_FUNCTION_163();
  OUTLINED_FUNCTION_602();
  OUTLINED_FUNCTION_463();
  return OUTLINED_FUNCTION_524(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1A6213EF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v8 + 200) = a6;
  *(_QWORD *)(v8 + 208) = v7;
  *(_BYTE *)(v8 + 496) = a7;
  *(_QWORD *)(v8 + 184) = a4;
  *(_QWORD *)(v8 + 192) = a5;
  *(_QWORD *)(v8 + 168) = a2;
  *(_QWORD *)(v8 + 176) = a3;
  *(_QWORD *)(v8 + 160) = a1;
  sub_1A633533C();
  *(_QWORD *)(v8 + 216) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED21B908);
  *(_QWORD *)(v8 + 224) = swift_task_alloc();
  v9 = sub_1A6332C24();
  *(_QWORD *)(v8 + 232) = v9;
  *(_QWORD *)(v8 + 240) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 248) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C350);
  *(_QWORD *)(v8 + 256) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C748);
  *(_QWORD *)(v8 + 264) = swift_task_alloc();
  *(_QWORD *)(v8 + 272) = type metadata accessor for WDSNetworkActivity();
  *(_QWORD *)(v8 + 280) = swift_task_alloc();
  *(_QWORD *)(v8 + 288) = swift_task_alloc();
  *(_QWORD *)(v8 + 296) = swift_task_alloc();
  *(_QWORD *)(v8 + 304) = swift_task_alloc();
  v10 = sub_1A6332A98();
  *(_QWORD *)(v8 + 312) = v10;
  *(_QWORD *)(v8 + 320) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 328) = swift_task_alloc();
  *(_QWORD *)(v8 + 336) = swift_task_alloc();
  *(_QWORD *)(v8 + 344) = type metadata accessor for WeatherRequest();
  *(_QWORD *)(v8 + 352) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21DA40);
  *(_QWORD *)(v8 + 360) = swift_task_alloc();
  *(_QWORD *)(v8 + 368) = swift_task_alloc();
  *(_QWORD *)(v8 + 376) = swift_task_alloc();
  *(_QWORD *)(v8 + 384) = swift_task_alloc();
  v11 = sub_1A6334EE0();
  *(_QWORD *)(v8 + 392) = v11;
  *(_QWORD *)(v8 + 400) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 408) = swift_task_alloc();
  *(_QWORD *)(v8 + 416) = swift_task_alloc();
  return swift_task_switch();
}

#error "1A62145FC: call analysis failed (funcsize=406)"

uint64_t sub_1A6214828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  v5 = *v4;
  *(_QWORD *)(v5 + 464) = a1;
  *(_QWORD *)(v5 + 472) = a2;
  *(_QWORD *)(v5 + 480) = a3;
  *(_QWORD *)(v5 + 488) = v3;
  OUTLINED_FUNCTION_334();

  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_1_13();
}

uint64_t sub_1A6214890()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  NSObject *v15;
  uint64_t v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  os_log_type_t v25;
  BOOL v26;
  void *v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  NSObject *v59;
  uint64_t v60;
  id v61;
  os_log_type_t v62;
  BOOL v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  void *v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88[3];

  OUTLINED_FUNCTION_497();
  v7 = v0;
  v8 = (void *)sub_1A63356FC();
  v9 = OUTLINED_FUNCTION_0_4();
  *(_OWORD *)(v9 + 16) = xmmword_1A6338E30;
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 64) = v5;
  *(_QWORD *)(v9 + 32) = v6;
  *(_QWORD *)(v9 + 40) = v4;
  OUTLINED_FUNCTION_93_0();
  OUTLINED_FUNCTION_486();
  v10 = OUTLINED_FUNCTION_883();
  if (v11)
  {
    OUTLINED_FUNCTION_360(v10, &qword_1ED21DA40);
    OUTLINED_FUNCTION_343();
  }
  else
  {
    OUTLINED_FUNCTION_479();
    OUTLINED_FUNCTION_115();
    OUTLINED_FUNCTION_343();
    if (v1)
    {
      *v12 = v3;
      goto LABEL_7;
    }
  }
  OUTLINED_FUNCTION_186(v12);
LABEL_7:
  v13 = *(_QWORD *)(v2 + 480);
  v14 = *(void **)(v2 + 408);
  *(_QWORD *)(v9 + 80) = v1;
  OUTLINED_FUNCTION_20_10();
  OUTLINED_FUNCTION_169();
  OUTLINED_FUNCTION_13_4();
  OUTLINED_FUNCTION_230();
  objc_opt_self();
  if (OUTLINED_FUNCTION_349())
  {
    OUTLINED_FUNCTION_910();
    v87 = v1;
    if (OUTLINED_FUNCTION_207() == (id)401)
    {
      OUTLINED_FUNCTION_825();
      if (qword_1ED21D318 != -1)
        swift_once();
      v15 = *(NSObject **)(v2 + 184);
      v16 = OUTLINED_FUNCTION_30();
      __swift_project_value_buffer(v16, (uint64_t)qword_1ED22A3C0);
      OUTLINED_FUNCTION_21_7();
      OUTLINED_FUNCTION_244();
      v17 = OUTLINED_FUNCTION_61_0();
      if (OUTLINED_FUNCTION_35(v17))
      {
        v18 = *(_QWORD *)(v2 + 176);
        v19 = (uint8_t *)OUTLINED_FUNCTION_2_4();
        v20 = OUTLINED_FUNCTION_2_4();
        OUTLINED_FUNCTION_363(v20);
        OUTLINED_FUNCTION_146(4.8751e-34);
        v22 = OUTLINED_FUNCTION_23_3(v18, v21, v88);
        OUTLINED_FUNCTION_184(v22);
        OUTLINED_FUNCTION_37();
        OUTLINED_FUNCTION_33(&dword_1A6185000, v15, (os_log_type_t)v13, "Received authentication failure for request: %{public}s", v19);
        OUTLINED_FUNCTION_33_2();
        OUTLINED_FUNCTION_0_5();
      }
      OUTLINED_FUNCTION_19_0();

      v45 = *(void **)(v2 + 480);
      v46 = *(void **)(v2 + 448);
      v47 = *(_QWORD *)(v2 + 208);
      v48 = OUTLINED_FUNCTION_2_8();
      OUTLINED_FUNCTION_160(v48);
      v49 = OUTLINED_FUNCTION_91_0();
      sub_1A6217EC0(v49, v50, v51, v52, v53, v54, v55);

      OUTLINED_FUNCTION_124(v56, (uint64_t *)&unk_1ED21B908);
      OUTLINED_FUNCTION_66_0((_QWORD *)(v47 + qword_1ED22A398));
      OUTLINED_FUNCTION_81();
      OUTLINED_FUNCTION_84_0((uint64_t)&unk_1EE845EF8);
      OUTLINED_FUNCTION_21();
      *(_QWORD *)(v57 + 8) = 0;
      *(_QWORD *)(v57 + 16) = 0;
      *(_QWORD *)v57 = v87;
      *(_BYTE *)(v57 + 24) = 3;
      OUTLINED_FUNCTION_76();
      OUTLINED_FUNCTION_770();

    }
    else
    {
      if (OUTLINED_FUNCTION_655())
        OUTLINED_FUNCTION_298();
      if (qword_1ED21D318 != -1)
        swift_once();
      v58 = *(void **)(v2 + 480);
      v59 = *(NSObject **)(v2 + 184);
      v60 = OUTLINED_FUNCTION_30();
      OUTLINED_FUNCTION_11_9(v60, (uint64_t)qword_1ED22A3C0);
      v61 = v58;
      OUTLINED_FUNCTION_134();
      v62 = OUTLINED_FUNCTION_61_0();
      v63 = OUTLINED_FUNCTION_41(v62);
      v64 = *(void **)(v2 + 480);
      if (v63)
      {
        v86 = *(_QWORD *)(v2 + 176);
        v65 = OUTLINED_FUNCTION_2_4();
        v66 = OUTLINED_FUNCTION_2_4();
        OUTLINED_FUNCTION_363(v66);
        *(_QWORD *)(v2 + 48) = OUTLINED_FUNCTION_283(3.9123e-34);
        OUTLINED_FUNCTION_171();

        *(_WORD *)(v65 + 12) = 2082;
        OUTLINED_FUNCTION_93_0();
        v68 = OUTLINED_FUNCTION_425(v86, v67, v88);
        OUTLINED_FUNCTION_282(v68);
        OUTLINED_FUNCTION_37();
        OUTLINED_FUNCTION_67_0(&dword_1A6185000, v59, (os_log_type_t)v58, "Received invalid http response code %{public}ld for request: %{public}s", (uint8_t *)v65);
        OUTLINED_FUNCTION_33_2();
        OUTLINED_FUNCTION_0_5();
      }

      OUTLINED_FUNCTION_19_0();
      v69 = *(void **)(v2 + 480);
      v70 = *(_QWORD *)(v2 + 448);
      v71 = *(_QWORD *)(v2 + 224);
      v72 = OUTLINED_FUNCTION_2_8();
      OUTLINED_FUNCTION_125(v71, v73, v74, v72);
      v75 = OUTLINED_FUNCTION_90();
      sub_1A6217EC0(v75, v76, v77, v78, v79, v80, v81);

      OUTLINED_FUNCTION_572(v82, (uint64_t *)&unk_1ED21B908);
      v83 = v69;
      OUTLINED_FUNCTION_389();
      OUTLINED_FUNCTION_373();
      OUTLINED_FUNCTION_152();
      OUTLINED_FUNCTION_95();
      OUTLINED_FUNCTION_576((uint64_t)&unk_1EE845EF8);
      OUTLINED_FUNCTION_21();
      *(_QWORD *)v84 = v87;
      *(_QWORD *)(v84 + 8) = v70;
      *(_QWORD *)(v84 + 16) = v71;
      *(_BYTE *)(v84 + 24) = 1;
      OUTLINED_FUNCTION_76();

      OUTLINED_FUNCTION_380();
      OUTLINED_FUNCTION_776();

    }
  }
  else
  {
    OUTLINED_FUNCTION_825();
    if (qword_1ED21D318 != -1)
      swift_once();
    v23 = *(NSObject **)(v2 + 184);
    v24 = OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_11_9(v24, (uint64_t)qword_1ED22A3C0);
    OUTLINED_FUNCTION_134();
    v25 = OUTLINED_FUNCTION_61_0();
    v26 = OUTLINED_FUNCTION_41(v25);
    v27 = *(void **)(v2 + 184);
    if (v26)
    {
      v28 = *(_QWORD *)(v2 + 176);
      v29 = (uint8_t *)OUTLINED_FUNCTION_2_4();
      v30 = OUTLINED_FUNCTION_2_4();
      OUTLINED_FUNCTION_363(v30);
      OUTLINED_FUNCTION_168(4.8751e-34);
      v32 = OUTLINED_FUNCTION_285(v28, v31, v88);
      OUTLINED_FUNCTION_281(v32);
      OUTLINED_FUNCTION_37();
      OUTLINED_FUNCTION_33(&dword_1A6185000, v23, (os_log_type_t)v9, "Received invalid response type for request: %{public}s", v29);
      OUTLINED_FUNCTION_33_2();
      OUTLINED_FUNCTION_0_5();
    }
    OUTLINED_FUNCTION_19_0();

    v33 = *(void **)(v2 + 480);
    v34 = *(void **)(v2 + 448);
    v35 = OUTLINED_FUNCTION_2_8();
    OUTLINED_FUNCTION_159(v35);
    v36 = OUTLINED_FUNCTION_88_0();
    sub_1A6217EC0(v36, v37, v38, v39, v40, v41, v42);

    OUTLINED_FUNCTION_124(v43, (uint64_t *)&unk_1ED21B908);
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_84_0((uint64_t)&unk_1EE845EF8);
    OUTLINED_FUNCTION_21();
    *(_QWORD *)(v44 + 8) = 0;
    *(_QWORD *)(v44 + 16) = 0;
    *(_QWORD *)v44 = 3;
    *(_BYTE *)(v44 + 24) = 4;
    OUTLINED_FUNCTION_76();

    OUTLINED_FUNCTION_507();
  }
  OUTLINED_FUNCTION_108_0(*(_QWORD *)(v2 + 240));
  OUTLINED_FUNCTION_438();
  OUTLINED_FUNCTION_9_9();
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_254();
  OUTLINED_FUNCTION_302();
  OUTLINED_FUNCTION_307();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_592();
  OUTLINED_FUNCTION_642();
  OUTLINED_FUNCTION_596();
  OUTLINED_FUNCTION_821();
  OUTLINED_FUNCTION_820();
  OUTLINED_FUNCTION_854();
  OUTLINED_FUNCTION_822();
  OUTLINED_FUNCTION_476();
  OUTLINED_FUNCTION_163();
  OUTLINED_FUNCTION_754();
  OUTLINED_FUNCTION_422();
  return OUTLINED_FUNCTION_492(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1A621524C()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t);
  uint64_t v46;

  OUTLINED_FUNCTION_712();
  v43 = (void *)OUTLINED_FUNCTION_543();
  if (objc_msgSend(v43, sel_code) != (id)-999)
  {
    if (qword_1ED21D318 != -1)
      swift_once();
    v1 = *(NSObject **)(v0 + 488);
    v2 = *(_QWORD *)(v0 + 184);
    v3 = OUTLINED_FUNCTION_30();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ED22A3C0);
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_199();
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_199();
    OUTLINED_FUNCTION_314();
    v4 = OUTLINED_FUNCTION_61_0();
    if (OUTLINED_FUNCTION_27_2(v4))
    {
      v41 = *(_QWORD *)(v0 + 176);
      v5 = OUTLINED_FUNCTION_2_4();
      v46 = OUTLINED_FUNCTION_2_4();
      OUTLINED_FUNCTION_277(4.8452e-34);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD0);
      v6 = OUTLINED_FUNCTION_381();
      *(_QWORD *)(v0 + 24) = OUTLINED_FUNCTION_1025(v6, v7);
      OUTLINED_FUNCTION_183();
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_121();
      OUTLINED_FUNCTION_121();
      *(_WORD *)(v5 + 12) = 2082;
      OUTLINED_FUNCTION_172();
      v9 = OUTLINED_FUNCTION_285(v41, v8, &v46);
      OUTLINED_FUNCTION_223(v9);
      OUTLINED_FUNCTION_37();
      OUTLINED_FUNCTION_67_0(&dword_1A6185000, v1, (os_log_type_t)v2, "A network error occurred while communicating with WDS: %{private}s for request: %{public}s", (uint8_t *)v5);
      OUTLINED_FUNCTION_122();
      OUTLINED_FUNCTION_0_5();
    }
    OUTLINED_FUNCTION_121();
    OUTLINED_FUNCTION_121();
    OUTLINED_FUNCTION_19_0();

  }
  v10 = *(void **)(v0 + 448);
  v11 = (void *)OUTLINED_FUNCTION_317();
  v12 = OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_158(v12);
  v13 = OUTLINED_FUNCTION_110_0();
  sub_1A6217EC0(v13, v14, v15, v16, v17, v18, v19);
  OUTLINED_FUNCTION_72();

  OUTLINED_FUNCTION_124(v20, (uint64_t *)&unk_1ED21B908);
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_84_0((uint64_t)&unk_1EE845EF8);
  v42 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_141(v42, v21);
  swift_willThrow();

  OUTLINED_FUNCTION_72();
  v32 = *(_QWORD *)(v0 + 336);
  v33 = *(_QWORD *)(v0 + 328);
  v34 = *(_QWORD *)(v0 + 304);
  v35 = *(_QWORD *)(v0 + 296);
  v36 = *(_QWORD *)(v0 + 288);
  v37 = *(_QWORD *)(v0 + 280);
  v38 = *(_QWORD *)(v0 + 264);
  v39 = *(_QWORD *)(v0 + 256);
  v40 = *(_QWORD *)(v0 + 224);
  v44 = *(_QWORD *)(v0 + 216);
  v22 = OUTLINED_FUNCTION_108_0(*(_QWORD *)(v0 + 240));
  OUTLINED_FUNCTION_857(v22, v23, v24, v25, v26, v27, v28, v29, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v42,
    v44,
    v45);
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_254();
  OUTLINED_FUNCTION_302();
  OUTLINED_FUNCTION_307();
  OUTLINED_FUNCTION_9_9();
  OUTLINED_FUNCTION_554();
  OUTLINED_FUNCTION_982();
  OUTLINED_FUNCTION_641();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_760();
  OUTLINED_FUNCTION_749();
  OUTLINED_FUNCTION_654();
  OUTLINED_FUNCTION_163();
  OUTLINED_FUNCTION_602();
  OUTLINED_FUNCTION_463();
  return OUTLINED_FUNCTION_524(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1A6215540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)(v9 + 384) = a8;
  *(_QWORD *)(v9 + 168) = a7;
  *(_QWORD *)(v9 + 176) = v8;
  *(_QWORD *)(v9 + 152) = a5;
  *(_QWORD *)(v9 + 160) = a6;
  *(_QWORD *)(v9 + 136) = a3;
  *(_QWORD *)(v9 + 144) = a4;
  *(_QWORD *)(v9 + 120) = a1;
  *(_QWORD *)(v9 + 128) = a2;
  sub_1A633533C();
  *(_QWORD *)(v9 + 184) = swift_task_alloc();
  v10 = sub_1A6332C24();
  *(_QWORD *)(v9 + 192) = v10;
  *(_QWORD *)(v9 + 200) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v9 + 208) = swift_task_alloc();
  v11 = sub_1A6332A98();
  *(_QWORD *)(v9 + 216) = v11;
  *(_QWORD *)(v9 + 224) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v9 + 232) = swift_task_alloc();
  *(_QWORD *)(v9 + 240) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21DA40);
  *(_QWORD *)(v9 + 248) = swift_task_alloc();
  *(_QWORD *)(v9 + 256) = swift_task_alloc();
  *(_QWORD *)(v9 + 264) = swift_task_alloc();
  *(_QWORD *)(v9 + 272) = swift_task_alloc();
  v12 = sub_1A6334EE0();
  *(_QWORD *)(v9 + 280) = v12;
  *(_QWORD *)(v9 + 288) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v9 + 296) = swift_task_alloc();
  *(_QWORD *)(v9 + 304) = swift_task_alloc();
  return swift_task_switch();
}

#error "1A621596C: call analysis failed (funcsize=223)"

uint64_t sub_1A6215A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_111(a1, a2, a3);
  OUTLINED_FUNCTION_769();
  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_1_13();
}

uint64_t sub_1A6215AA4(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  uint64_t v25;
  os_log_type_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  unsigned __int8 v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  uint64_t v43;
  os_log_type_t v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  void *v52;
  void *v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  void *v60;
  void *v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  void *v68;
  NSObject *v69;
  uint64_t v70;
  id v71;
  os_log_type_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  id v83;
  uint64_t v84;
  void *v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(void);
  void *v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  char *v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  void *v124;
  uint64_t v125;
  unint64_t v126;
  void *v127;
  uint64_t v128;
  void *v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132[2];

  v7 = *(void **)(v2 + 368);
  OUTLINED_FUNCTION_233(a1, *(_QWORD *)(v2 + 360));
  v8 = v7;
  v9 = (void *)sub_1A63356FC();
  v10 = OUTLINED_FUNCTION_0_4();
  *(_OWORD *)(v10 + 16) = xmmword_1A6338E30;
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 64) = v5;
  *(_QWORD *)(v10 + 32) = v6;
  *(_QWORD *)(v10 + 40) = v4;
  OUTLINED_FUNCTION_93_0();
  OUTLINED_FUNCTION_486();
  v11 = OUTLINED_FUNCTION_273();
  if (v12)
  {
    OUTLINED_FUNCTION_360(v11, &qword_1ED21DA40);
    OUTLINED_FUNCTION_343();
  }
  else
  {
    OUTLINED_FUNCTION_479();
    OUTLINED_FUNCTION_115();
    OUTLINED_FUNCTION_343();
    if (v1)
    {
      *v13 = v3;
      goto LABEL_7;
    }
  }
  OUTLINED_FUNCTION_186(v13);
LABEL_7:
  v14 = *(_QWORD *)(v2 + 368);
  v15 = *(_QWORD *)(v2 + 288);
  *(_QWORD *)(v10 + 80) = v1;
  OUTLINED_FUNCTION_20_10();
  OUTLINED_FUNCTION_169();
  OUTLINED_FUNCTION_13_4();
  OUTLINED_FUNCTION_230();
  objc_opt_self();
  if (!OUTLINED_FUNCTION_349())
  {
    OUTLINED_FUNCTION_503();
    if (qword_1ED21D318 != -1)
      swift_once();
    v24 = *(NSObject **)(v2 + 144);
    v25 = OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_11_9(v25, (uint64_t)qword_1ED22A3C0);
    OUTLINED_FUNCTION_134();
    v26 = OUTLINED_FUNCTION_61_0();
    if (OUTLINED_FUNCTION_41(v26))
    {
      v27 = *(_QWORD *)(v2 + 136);
      v28 = (uint8_t *)OUTLINED_FUNCTION_2_4();
      v29 = OUTLINED_FUNCTION_2_4();
      OUTLINED_FUNCTION_487(v29);
      OUTLINED_FUNCTION_168(4.8751e-34);
      *(_QWORD *)(v2 + 40) = OUTLINED_FUNCTION_285(v27, v30, v132);
      OUTLINED_FUNCTION_332();
      OUTLINED_FUNCTION_37();
      OUTLINED_FUNCTION_33(&dword_1A6185000, v24, (os_log_type_t)v10, "Received invalid response type for request: %{public}s", v28);
      OUTLINED_FUNCTION_33_2();
      OUTLINED_FUNCTION_0_5();
    }
    OUTLINED_FUNCTION_19_0();

    v52 = *(void **)(v2 + 368);
    v125 = *(_QWORD *)(v2 + 352);
    v130 = *(_QWORD *)(v2 + 360);
    v53 = *(void **)(v2 + 336);
    v54 = *(_BYTE *)(v2 + 384);
    v55 = *(_QWORD *)(v2 + 168);
    v56 = *(_QWORD *)(v2 + 152);
    v57 = *(_QWORD *)(v2 + 160);
    v58 = (void *)sub_1A61A62D8();
    sub_1A621805C(v56, v57, v52, v58, 0xF000000000000007, 0, v55, v54);

    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_84_0((uint64_t)&unk_1EE846110);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_577(v59, 3);
    OUTLINED_FUNCTION_76();

    sub_1A61A68B8(v125, v130);
    goto LABEL_32;
  }
  OUTLINED_FUNCTION_433();
  v129 = v1;
  if (OUTLINED_FUNCTION_207() == (id)401)
  {
    OUTLINED_FUNCTION_503();
    if (qword_1ED21D318 != -1)
      swift_once();
    v16 = *(NSObject **)(v2 + 144);
    v17 = OUTLINED_FUNCTION_30();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED22A3C0);
    OUTLINED_FUNCTION_21_7();
    OUTLINED_FUNCTION_244();
    v18 = OUTLINED_FUNCTION_61_0();
    if (OUTLINED_FUNCTION_35(v18))
    {
      v19 = *(_QWORD *)(v2 + 136);
      v20 = (uint8_t *)OUTLINED_FUNCTION_2_4();
      v21 = OUTLINED_FUNCTION_2_4();
      OUTLINED_FUNCTION_487(v21);
      OUTLINED_FUNCTION_146(4.8751e-34);
      v23 = OUTLINED_FUNCTION_23_3(v19, v22, v132);
      OUTLINED_FUNCTION_184(v23);
      OUTLINED_FUNCTION_37();
      OUTLINED_FUNCTION_33(&dword_1A6185000, v16, (os_log_type_t)v14, "Received authentication failure for request: %{public}s", v20);
      OUTLINED_FUNCTION_33_2();
      OUTLINED_FUNCTION_0_5();
    }
    OUTLINED_FUNCTION_19_0();

    v60 = *(void **)(v2 + 368);
    v126 = *(_QWORD *)(v2 + 360);
    v121 = *(_QWORD *)(v2 + 352);
    v61 = *(void **)(v2 + 336);
    v62 = *(_QWORD *)(v2 + 176);
    v63 = (void *)OUTLINED_FUNCTION_317();
    v64 = OUTLINED_FUNCTION_879();
    OUTLINED_FUNCTION_709(v64, v65, v66, v63);

    OUTLINED_FUNCTION_66_0((_QWORD *)(v62 + qword_1ED22A398));
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_84_0((uint64_t)&unk_1EE846110);
    OUTLINED_FUNCTION_21();
    *(_QWORD *)(v67 + 8) = 0;
    *(_QWORD *)(v67 + 16) = 0;
    OUTLINED_FUNCTION_826(v67, (uint64_t)v129);
    OUTLINED_FUNCTION_76();
    sub_1A61A68B8(v121, v126);

LABEL_32:
    OUTLINED_FUNCTION_714();
    OUTLINED_FUNCTION_182(v104);
    OUTLINED_FUNCTION_517();
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_42_0();
    OUTLINED_FUNCTION_241();
    OUTLINED_FUNCTION_257();
    OUTLINED_FUNCTION_254();
    OUTLINED_FUNCTION_302();
    OUTLINED_FUNCTION_307();
    OUTLINED_FUNCTION_422();
    OUTLINED_FUNCTION_9_9();
    OUTLINED_FUNCTION_604();
    v89 = *(uint64_t (**)(void))(v2 + 8);
    return OUTLINED_FUNCTION_723(v89);
  }
  if (!OUTLINED_FUNCTION_655())
  {
    if (qword_1ED21D318 != -1)
      swift_once();
    v68 = *(void **)(v2 + 368);
    v69 = *(NSObject **)(v2 + 144);
    v70 = OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_11_9(v70, (uint64_t)qword_1ED22A3C0);
    v71 = v68;
    OUTLINED_FUNCTION_134();
    v72 = OUTLINED_FUNCTION_61_0();
    OUTLINED_FUNCTION_41(v72);
    OUTLINED_FUNCTION_824();
    if ((v73 & 1) != 0)
    {
      v122 = *(_QWORD *)(v2 + 136);
      v74 = OUTLINED_FUNCTION_2_4();
      v75 = OUTLINED_FUNCTION_2_4();
      OUTLINED_FUNCTION_487(v75);
      *(_DWORD *)v74 = 134349314;
      *(_QWORD *)(v2 + 48) = objc_msgSend(v129, (SEL)(v15 + 1096));
      OUTLINED_FUNCTION_171();

      *(_WORD *)(v74 + 12) = 2082;
      OUTLINED_FUNCTION_93_0();
      *(_QWORD *)(v2 + 56) = OUTLINED_FUNCTION_425(v122, v76, v132);
      OUTLINED_FUNCTION_375();
      OUTLINED_FUNCTION_37();
      OUTLINED_FUNCTION_67_0(&dword_1A6185000, v69, (os_log_type_t)v68, "Received invalid http response code %{public}ld for request: %{public}s", (uint8_t *)v74);
      OUTLINED_FUNCTION_33_2();
      OUTLINED_FUNCTION_0_5();
    }

    OUTLINED_FUNCTION_19_0();
    v77 = *(void **)(v2 + 368);
    v127 = *(void **)(v2 + 336);
    v78 = (void *)*(unsigned __int8 *)(v2 + 384);
    v79 = *(_QWORD *)(v2 + 160);
    v80 = *(_QWORD *)(v2 + 168);
    v81 = *(_QWORD *)(v2 + 152);
    v82 = (void *)sub_1A61A62D8();
    sub_1A621805C(v81, v79, v77, v82, 0xF000000000000007, 0, v80, (char)v78);

    v83 = v77;
    OUTLINED_FUNCTION_389();
    OUTLINED_FUNCTION_373();
    OUTLINED_FUNCTION_152();
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_576((uint64_t)&unk_1EE846110);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_932(v84, (uint64_t)v129);
    OUTLINED_FUNCTION_76();

    OUTLINED_FUNCTION_380();
    goto LABEL_32;
  }
  v113 = v10;
  v120 = *(_QWORD *)(v2 + 376);
  v118 = *(char **)(v2 + 352);
  v119 = *(_QWORD *)(v2 + 360);
  v31 = *(void **)(v2 + 336);
  v116 = *(void **)(v2 + 368);
  v117 = *(_QWORD *)(v2 + 304);
  v32 = *(_BYTE *)(v2 + 384);
  v33 = *(_QWORD *)(v2 + 168);
  v114 = *(_QWORD *)(v2 + 176);
  v115 = *(_QWORD *)(v2 + 208);
  v35 = *(char **)(v2 + 152);
  v34 = *(_QWORD *)(v2 + 160);
  v37 = *(_QWORD *)(v2 + 136);
  v36 = *(void **)(v2 + 144);
  v39 = *(uint64_t **)(v2 + 120);
  v38 = *(_QWORD *)(v2 + 128);
  v124 = (void *)MEMORY[0x1A85BEA08]();
  sub_1A621BA50(v114, v37, v36, v38, v129, v118, v119, v117, v39, v115, v35, v34, v116, v31, v33, v32);
  if (v120)
  {
    v40 = v120;
    v41 = *(_QWORD *)(v2 + 352);
    objc_autoreleasePoolPop(v124);
    OUTLINED_FUNCTION_340(v41);
    if (qword_1ED21D318 != -1)
      swift_once();
    v42 = *(NSObject **)(v2 + 144);
    v43 = OUTLINED_FUNCTION_30();
    v44 = __swift_project_value_buffer(v43, (uint64_t)qword_1ED22A3C0);
    OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_21_2();
    OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_21_2();
    OUTLINED_FUNCTION_244();
    v45 = OUTLINED_FUNCTION_61_0();
    if (OUTLINED_FUNCTION_27_2(v45))
    {
      v46 = OUTLINED_FUNCTION_2_4();
      v47 = OUTLINED_FUNCTION_2_4();
      OUTLINED_FUNCTION_1040(v47);
      *(_DWORD *)v46 = 136446467;
      v48 = OUTLINED_FUNCTION_110();
      *(_QWORD *)(v2 + 64) = OUTLINED_FUNCTION_321(v48, v49, v132);
      OUTLINED_FUNCTION_171();
      OUTLINED_FUNCTION_37();
      *(_WORD *)(v46 + 12) = 2081;
      *(_QWORD *)(v2 + 72) = v120;
      OUTLINED_FUNCTION_21_2();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD0);
      v50 = OUTLINED_FUNCTION_259();
      *(_QWORD *)(v2 + 80) = OUTLINED_FUNCTION_664(v50, v51);
      OUTLINED_FUNCTION_514();
      OUTLINED_FUNCTION_786();
      OUTLINED_FUNCTION_7_3();
      OUTLINED_FUNCTION_7_3();
      OUTLINED_FUNCTION_67_0(&dword_1A6185000, v42, v44, "Failed to create response model for request: %{public}s with error: %{private}s", (uint8_t *)v46);
      OUTLINED_FUNCTION_122();
      OUTLINED_FUNCTION_0_5();
    }
    OUTLINED_FUNCTION_19_0();
    OUTLINED_FUNCTION_7_3();
    OUTLINED_FUNCTION_7_3();

    v90 = *(void **)(v2 + 368);
    v128 = *(_QWORD *)(v2 + 352);
    v131 = *(_QWORD *)(v2 + 360);
    v123 = *(void **)(v2 + 336);
    v91 = (void *)sub_1A61A62D8();
    v92 = OUTLINED_FUNCTION_879();
    OUTLINED_FUNCTION_709(v92, v93, v94, v91);

    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_84_0((uint64_t)&unk_1EE846110);
    OUTLINED_FUNCTION_21();
    *(_QWORD *)(v95 + 8) = 0;
    *(_QWORD *)(v95 + 16) = 0;
    *(_QWORD *)v95 = v40;
    *(_BYTE *)(v95 + 24) = 2;
    OUTLINED_FUNCTION_21_2();
    swift_willThrow();

    v96 = sub_1A61A68B8(v128, v131);
    OUTLINED_FUNCTION_823(v96, v97, v98, v99, v100, v101, v102, v103, v106, v107, v108, v109, v110, v111, v112, v113, v114, v115, (uint64_t)v116,
      v117,
      (uint64_t)v118,
      v119,
      v123);

    OUTLINED_FUNCTION_7_3();
    goto LABEL_32;
  }
  v85 = *(void **)(v2 + 368);
  v86 = *(void **)(v2 + 336);
  v88 = *(_QWORD *)(v2 + 200);
  v87 = *(_QWORD *)(v2 + 208);
  objc_autoreleasePoolPop(v124);

  OUTLINED_FUNCTION_696();
  OUTLINED_FUNCTION_696();

  OUTLINED_FUNCTION_785(v87, *(uint64_t (**)(uint64_t, uint64_t))(v88 + 8));
  OUTLINED_FUNCTION_896();
  OUTLINED_FUNCTION_618();
  OUTLINED_FUNCTION_9_9();
  OUTLINED_FUNCTION_602();
  OUTLINED_FUNCTION_746();
  OUTLINED_FUNCTION_463();
  OUTLINED_FUNCTION_496();
  OUTLINED_FUNCTION_443();
  OUTLINED_FUNCTION_500();
  OUTLINED_FUNCTION_592();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_604();
  v89 = (uint64_t (*)(void))OUTLINED_FUNCTION_41_0();
  return OUTLINED_FUNCTION_723(v89);
}

#error "1A62166C4: call analysis failed (funcsize=150)"

void sub_1A6216740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(unint64_t, char *, uint64_t);
  void *v13;
  uint64_t v14;
  void *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v17 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C968);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a2;
  v19 = a3;
  sub_1A6332810();
  sub_1A6334EA4();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v16(v9, a1, v6);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  v12 = *(void (**)(unint64_t, char *, uint64_t))(v7 + 32);
  v12(v11 + v10, v9, v6);
  v13 = (void *)sub_1A6334DD8();
  sub_1A6334E20();
  swift_release();
  swift_release();

  v16(v9, v17, v6);
  v14 = swift_allocObject();
  v12(v14 + v10, v9, v6);
  v15 = (void *)sub_1A6334DD8();
  sub_1A6334E80();
  swift_release();
  swift_release();
  swift_release();

}

void sub_1A62168F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(unint64_t, char *, uint64_t);
  void *v13;
  uint64_t v14;
  void *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v17 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C968);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a2;
  v19 = a3;
  sub_1A6332810();
  sub_1A6334EA4();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v16(v9, a1, v6);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  v12 = *(void (**)(unint64_t, char *, uint64_t))(v7 + 32);
  v12(v11 + v10, v9, v6);
  v13 = (void *)sub_1A6334DD8();
  sub_1A6334E20();
  swift_release();
  swift_release();

  v16(v9, v17, v6);
  v14 = swift_allocObject();
  v12(v14 + v10, v9, v6);
  v15 = (void *)sub_1A6334DD8();
  sub_1A6334E80();
  swift_release();
  swift_release();
  swift_release();

}

void sub_1A6216AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(unint64_t, char *, uint64_t);
  void *v13;
  uint64_t v14;
  void *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v17 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C968);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a2;
  v19 = a3;
  sub_1A6332810();
  sub_1A6334EA4();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v16(v9, a1, v6);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  v12 = *(void (**)(unint64_t, char *, uint64_t))(v7 + 32);
  v12(v11 + v10, v9, v6);
  v13 = (void *)sub_1A6334DD8();
  sub_1A6334E20();
  swift_release();
  swift_release();

  v16(v9, v17, v6);
  v14 = swift_allocObject();
  v12(v14 + v10, v9, v6);
  v15 = (void *)sub_1A6334DD8();
  sub_1A6334E80();
  swift_release();
  swift_release();
  swift_release();

}

void sub_1A6216C50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(unint64_t, char *, uint64_t);
  void *v13;
  uint64_t v14;
  void *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v17 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C968);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a2;
  v19 = a3;
  sub_1A6332810();
  sub_1A6334EA4();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v16(v9, a1, v6);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  v12 = *(void (**)(unint64_t, char *, uint64_t))(v7 + 32);
  v12(v11 + v10, v9, v6);
  v13 = (void *)sub_1A6334DD8();
  sub_1A6334E20();
  swift_release();
  swift_release();

  v16(v9, v17, v6);
  v14 = swift_allocObject();
  v12(v14 + v10, v9, v6);
  v15 = (void *)sub_1A6334DD8();
  sub_1A6334E80();
  swift_release();
  swift_release();
  swift_release();

}

void sub_1A6216E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(unint64_t, char *, uint64_t);
  void *v13;
  uint64_t v14;
  void *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v17 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C968);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a2;
  v19 = a3;
  sub_1A6332810();
  sub_1A6334EA4();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v16(v9, a1, v6);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  v12 = *(void (**)(unint64_t, char *, uint64_t))(v7 + 32);
  v12(v11 + v10, v9, v6);
  v13 = (void *)sub_1A6334DD8();
  sub_1A6334E20();
  swift_release();
  swift_release();

  v16(v9, v17, v6);
  v14 = swift_allocObject();
  v12(v14 + v10, v9, v6);
  v15 = (void *)sub_1A6334DD8();
  sub_1A6334E80();
  swift_release();
  swift_release();
  swift_release();

}

void sub_1A6216FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(unint64_t, char *, uint64_t);
  void *v13;
  uint64_t v14;
  void *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v17 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C968);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a2;
  v19 = a3;
  sub_1A6332810();
  sub_1A6334EA4();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v16(v9, a1, v6);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  v12 = *(void (**)(unint64_t, char *, uint64_t))(v7 + 32);
  v12(v11 + v10, v9, v6);
  v13 = (void *)sub_1A6334DD8();
  sub_1A6334E20();
  swift_release();
  swift_release();

  v16(v9, v17, v6);
  v14 = swift_allocObject();
  v12(v14 + v10, v9, v6);
  v15 = (void *)sub_1A6334DD8();
  sub_1A6334E80();
  swift_release();
  swift_release();
  swift_release();

}

void sub_1A6217160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(unint64_t, char *, uint64_t);
  void *v13;
  uint64_t v14;
  void *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v17 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C968);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a2;
  v19 = a3;
  sub_1A6332810();
  sub_1A6334EA4();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v16(v9, a1, v6);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  v12 = *(void (**)(unint64_t, char *, uint64_t))(v7 + 32);
  v12(v11 + v10, v9, v6);
  v13 = (void *)sub_1A6334DD8();
  sub_1A6334E20();
  swift_release();
  swift_release();

  v16(v9, v17, v6);
  v14 = swift_allocObject();
  v12(v14 + v10, v9, v6);
  v15 = (void *)sub_1A6334DD8();
  sub_1A6334E80();
  swift_release();
  swift_release();
  swift_release();

}

void sub_1A6217310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(unint64_t, char *, uint64_t);
  void *v13;
  uint64_t v14;
  void *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v17 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C968);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a2;
  v19 = a3;
  sub_1A6332810();
  sub_1A6334EA4();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v16(v9, a1, v6);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  v12 = *(void (**)(unint64_t, char *, uint64_t))(v7 + 32);
  v12(v11 + v10, v9, v6);
  v13 = (void *)sub_1A6334DD8();
  sub_1A6334E20();
  swift_release();
  swift_release();

  v16(v9, v17, v6);
  v14 = swift_allocObject();
  v12(v14 + v10, v9, v6);
  v15 = (void *)sub_1A6334DD8();
  sub_1A6334E80();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1A62174C0(const void *a1, void *a2, void *a3, uint64_t a4, void *a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void *v21;
  void *v22;
  void *v23;
  _BYTE __dst[65];

  v22 = a3;
  v23 = a5;
  v21 = a2;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE845BD8);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(__dst, a1, sizeof(__dst));
  sub_1A61AEF94(a4, (uint64_t)v15, &qword_1EE845BD8);
  v16 = (*(unsigned __int8 *)(v13 + 80) + 81) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v17 = (v14 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  memcpy((void *)(v18 + 16), __dst, 0x41uLL);
  sub_1A61AED54((uint64_t)v15, v18 + v16, &qword_1EE845BD8);
  *(_QWORD *)(v18 + v17) = v7;
  v19 = v18 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v19 = a6;
  *(_BYTE *)(v19 + 8) = a7;
  sub_1A622CFA4((uint64_t)a1);
  swift_retain();
  sub_1A61A62E4(v21, v22, v23, (void (*)(uint64_t *))sub_1A622CEC0, v18);
  return swift_release();
}

uint64_t sub_1A621760C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t *a7, void *a8, uint64_t a9, char a10)
{
  uint64_t v10;
  uint64_t v16;
  _BYTE v21[184];

  sub_1A61AED54((uint64_t)a7, (uint64_t)v21, &qword_1ED219A00);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  *(_QWORD *)(v16 + 32) = a3;
  *(_QWORD *)(v16 + 40) = a4;
  sub_1A61AED54((uint64_t)v21, v16 + 48, &qword_1ED219A00);
  *(_QWORD *)(v16 + 224) = v10;
  *(_QWORD *)(v16 + 232) = a9;
  *(_BYTE *)(v16 + 240) = a10;
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A622E480(a7);
  swift_retain();
  sub_1A61A62E4(a5, a6, a8, (void (*)(uint64_t *))sub_1A622E46C, v16);
  return swift_release();
}

uint64_t sub_1A6217700(_OWORD *a1, void *a2, void *a3, uint64_t a4, void *a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v14;
  __int128 v15;
  uint64_t v17;

  v17 = a4;
  v14 = swift_allocObject();
  v15 = a1[1];
  *(_OWORD *)(v14 + 16) = *a1;
  *(_OWORD *)(v14 + 32) = v15;
  *(_OWORD *)(v14 + 48) = a1[2];
  sub_1A61AED54((uint64_t)&v17, v14 + 64, &qword_1ED2195A8);
  *(_QWORD *)(v14 + 72) = v7;
  *(_QWORD *)(v14 + 80) = a6;
  *(_BYTE *)(v14 + 88) = a7;
  sub_1A61A600C((uint64_t)a1);
  sub_1A6334CDC();
  swift_retain();
  sub_1A61A62E4(a2, a3, a5, (void (*)(uint64_t *))sub_1A622EB78, v14);
  return swift_release();
}

uint64_t sub_1A62177E0(__int128 *a1, void *a2, void *a3, uint64_t a4, void *a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;
  _OWORD *v20;
  __int128 v21;
  char *v22;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;

  v26 = a3;
  v27 = a5;
  v25 = a2;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8465F0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  v31 = a1[1];
  v32 = v16;
  v17 = a1[2];
  v28 = v31;
  v29 = v17;
  v30 = v17;
  sub_1A61AEF94(a4, (uint64_t)v15, &qword_1EE8465F0);
  v18 = (*(unsigned __int8 *)(v13 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v19 = (v14 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (_OWORD *)swift_allocObject();
  v21 = a1[1];
  v20[1] = *a1;
  v20[2] = v21;
  v20[3] = a1[2];
  sub_1A61AED54((uint64_t)v15, (uint64_t)v20 + v18, &qword_1EE8465F0);
  *(_QWORD *)((char *)v20 + v19) = v7;
  v22 = (char *)v20 + ((v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v22 = a6;
  v22[8] = a7;
  sub_1A61A6148((uint64_t)&v32);
  sub_1A61A6148((uint64_t)&v31);
  sub_1A61A6148((uint64_t)&v30);
  swift_retain();
  sub_1A61A62E4(v25, v26, v27, (void (*)(uint64_t *))sub_1A622D8D8, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_1A6217940(const void *a1, void *a2, void *a3, uint64_t a4, void *a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void *v21;
  void *v22;
  void *v23;
  _BYTE __dst[65];

  v22 = a3;
  v23 = a5;
  v21 = a2;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8464A0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(__dst, a1, sizeof(__dst));
  sub_1A61AEF94(a4, (uint64_t)v15, &qword_1EE8464A0);
  v16 = (*(unsigned __int8 *)(v13 + 80) + 81) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v17 = (v14 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  memcpy((void *)(v18 + 16), __dst, 0x41uLL);
  sub_1A61AED54((uint64_t)v15, v18 + v16, &qword_1EE8464A0);
  *(_QWORD *)(v18 + v17) = v7;
  v19 = v18 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v19 = a6;
  *(_BYTE *)(v19 + 8) = a7;
  sub_1A622CFA4((uint64_t)a1);
  swift_retain();
  sub_1A61A62E4(v21, v22, v23, (void (*)(uint64_t *))sub_1A622D200, v18);
  return swift_release();
}

uint64_t sub_1A6217A8C(const void *a1, void *a2, void *a3, uint64_t a4, void *a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void *v21;
  void *v22;
  void *v23;
  _BYTE __dst[65];

  v22 = a3;
  v23 = a5;
  v21 = a2;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846378);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(__dst, a1, sizeof(__dst));
  sub_1A61AEF94(a4, (uint64_t)v15, &qword_1EE846378);
  v16 = (*(unsigned __int8 *)(v13 + 80) + 81) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v17 = (v14 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  memcpy((void *)(v18 + 16), __dst, 0x41uLL);
  sub_1A61AED54((uint64_t)v15, v18 + v16, &qword_1EE846378);
  *(_QWORD *)(v18 + v17) = v7;
  v19 = v18 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v19 = a6;
  *(_BYTE *)(v19 + 8) = a7;
  sub_1A622CFA4((uint64_t)a1);
  swift_retain();
  sub_1A61A62E4(v21, v22, v23, (void (*)(uint64_t *))sub_1A622CC9C, v18);
  return swift_release();
}

uint64_t sub_1A6217BD8(const void *a1, void *a2, void *a3, uint64_t a4, void *a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void *v21;
  void *v22;
  void *v23;
  _BYTE __dst[65];

  v22 = a3;
  v23 = a5;
  v21 = a2;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8462D8);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(__dst, a1, sizeof(__dst));
  sub_1A61AEF94(a4, (uint64_t)v15, &qword_1EE8462D8);
  v16 = (*(unsigned __int8 *)(v13 + 80) + 81) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v17 = (v14 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  memcpy((void *)(v18 + 16), __dst, 0x41uLL);
  sub_1A61AED54((uint64_t)v15, v18 + v16, &qword_1EE8462D8);
  *(_QWORD *)(v18 + v17) = v7;
  v19 = v18 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v19 = a6;
  *(_BYTE *)(v19 + 8) = a7;
  sub_1A622CFA4((uint64_t)a1);
  swift_retain();
  sub_1A61A62E4(v21, v22, v23, (void (*)(uint64_t *))sub_1A622CB38, v18);
  return swift_release();
}

uint64_t sub_1A6217D24(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD);
  uint64_t (*v20)(_QWORD);
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  int v29;
  void *v30;
  void *v31;
  void *v32;

  v29 = a7;
  v28 = a6;
  v31 = a3;
  v32 = a5;
  v30 = a2;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED21B908);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for WeatherRequest();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1;
  v20 = v19;
  sub_1A618D9C4(v18, (uint64_t)v17, v19);
  sub_1A61AEF94(a4, (uint64_t)v13, (uint64_t *)&unk_1ED21B908);
  v21 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v22 = (v16 + *(unsigned __int8 *)(v11 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v23 = (v12 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = swift_allocObject();
  sub_1A618B330((uint64_t)v17, v24 + v21, v20);
  sub_1A61AED54((uint64_t)v13, v24 + v22, (uint64_t *)&unk_1ED21B908);
  *(_QWORD *)(v24 + v23) = v7;
  v25 = v24 + ((v23 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v25 = v28;
  *(_BYTE *)(v25 + 8) = v29;
  swift_retain();
  sub_1A61A62E4(v30, v31, v32, (void (*)(uint64_t *))sub_1A6229C54, v24);
  return swift_release();
}

uint64_t sub_1A6217EC0(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD);
  uint64_t (*v20)(_QWORD);
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  int v29;
  void *v30;
  void *v31;
  void *v32;

  v29 = a7;
  v28 = a6;
  v31 = a3;
  v32 = a5;
  v30 = a2;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED21B908);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for WeatherRequest();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1;
  v20 = v19;
  sub_1A618D9C4(v18, (uint64_t)v17, v19);
  sub_1A61AEF94(a4, (uint64_t)v13, (uint64_t *)&unk_1ED21B908);
  v21 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v22 = (v16 + *(unsigned __int8 *)(v11 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v23 = (v12 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = swift_allocObject();
  sub_1A618B330((uint64_t)v17, v24 + v21, v20);
  sub_1A61AED54((uint64_t)v13, v24 + v22, (uint64_t *)&unk_1ED21B908);
  *(_QWORD *)(v24 + v23) = v7;
  v25 = v24 + ((v23 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v25 = v28;
  *(_BYTE *)(v25 + 8) = v29;
  swift_retain();
  sub_1A61A62E4(v30, v31, v32, (void (*)(uint64_t *))sub_1A6229C54, v24);
  return swift_release();
}

uint64_t sub_1A621805C(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void *a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v17;
  uint64_t v19;

  v19 = a5;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  *(_QWORD *)(v17 + 24) = a2;
  sub_1A61AED54((uint64_t)&v19, v17 + 32, &qword_1EE846238);
  *(_QWORD *)(v17 + 40) = v8;
  *(_QWORD *)(v17 + 48) = a7;
  *(_BYTE *)(v17 + 56) = a8;
  sub_1A6334CDC();
  sub_1A622C9D0(a5);
  swift_retain();
  sub_1A61A62E4(a3, a4, a6, (void (*)(uint64_t *))sub_1A622C9BC, v17);
  return swift_release();
}

uint64_t sub_1A6218134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, void *a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, void *a11, void *a12, uint64_t a13, unint64_t a14, char a15)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  int EnumTagSinglePayload;
  uint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  void *v103;
  void *v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115[2];

  v92 = a8;
  v104 = a6;
  v105 = a7;
  v103 = a5;
  v112 = a4;
  v109 = a9;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE845BD8);
  MEMORY[0x1E0C80A78](v18);
  v95 = (uint64_t)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1A6332C24();
  v96 = *(_QWORD *)(v20 - 8);
  v97 = v20;
  MEMORY[0x1E0C80A78](v20);
  v101 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21DA40);
  MEMORY[0x1E0C80A78](v22);
  v94 = (char *)&v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v93 = (char *)&v90 - v25;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v90 - v27;
  v29 = sub_1A6334EE0();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v32 = (char *)&v90 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = a1;
  v111 = *(id *)(a1 + qword_1ED21D148);
  sub_1A6334ED4();
  LODWORD(v102) = sub_1A6335708();
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D210);
  v33 = swift_allocObject();
  v98 = xmmword_1A6338E30;
  *(_OWORD *)(v33 + 16) = xmmword_1A6338E30;
  v34 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v33 + 56) = MEMORY[0x1E0DEA968];
  v35 = sub_1A61AD1D4();
  *(_QWORD *)(v33 + 64) = v35;
  v108 = a2;
  *(_QWORD *)(v33 + 32) = a2;
  *(_QWORD *)(v33 + 40) = a3;
  v113 = a3;
  sub_1A6334CDC();
  sub_1A63327E0();
  v36 = sub_1A6332A98();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v28, 1, v36);
  v107 = v29;
  if (EnumTagSinglePayload == 1)
  {
    sub_1A622D748((uint64_t)v28, &qword_1ED21DA40);
    v38 = (uint64_t *)(v33 + 72);
    *(_QWORD *)(v33 + 96) = v34;
    *(_QWORD *)(v33 + 104) = v35;
    v39 = v35;
  }
  else
  {
    v100 = v32;
    v40 = sub_1A6332A14();
    v42 = v41;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v28, v36);
    v38 = (uint64_t *)(v33 + 72);
    *(_QWORD *)(v33 + 96) = v34;
    *(_QWORD *)(v33 + 104) = v35;
    v39 = v35;
    if (v42)
    {
      *v38 = v40;
      v32 = v100;
      goto LABEL_7;
    }
    v32 = v100;
  }
  *v38 = 0;
  v42 = 0xE000000000000000;
LABEL_7:
  *(_QWORD *)(v33 + 80) = v42;
  sub_1A6334EC8();
  swift_bridgeObjectRelease();
  v43 = objc_msgSend(v103, sel_MIMEType);
  if (v43)
  {
    v44 = v43;
    sub_1A6335300();

  }
  else
  {
    sub_1A6334CDC();
  }
  v45 = v106;
  sub_1A61F9FC4((uint64_t)v104, v105, v109);
  v106 = v45;
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v107);
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  LODWORD(v105) = sub_1A63356FC();
  v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = v98;
  v48 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v47 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v47 + 64) = v39;
  *(_QWORD *)(v47 + 32) = v108;
  *(_QWORD *)(v47 + 40) = v113;
  sub_1A6334CDC();
  v49 = (uint64_t)v93;
  sub_1A63327E0();
  v50 = v49;
  v51 = __swift_getEnumTagSinglePayload(v49, 1, v36);
  v91 = v30;
  if (v51 == 1)
  {
    sub_1A622D748(v49, &qword_1ED21DA40);
    v52 = (uint64_t *)(v47 + 72);
    *(_QWORD *)(v47 + 96) = v48;
    *(_QWORD *)(v47 + 104) = v39;
  }
  else
  {
    v53 = v32;
    v54 = v50;
    v55 = sub_1A6332A14();
    v57 = v56;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v54, v36);
    v52 = (uint64_t *)(v47 + 72);
    *(_QWORD *)(v47 + 96) = v48;
    *(_QWORD *)(v47 + 104) = v39;
    if (v57)
    {
      *v52 = v55;
      v32 = v53;
      goto LABEL_18;
    }
    v32 = v53;
  }
  *v52 = 0;
  v57 = 0xE000000000000000;
LABEL_18:
  *(_QWORD *)(v47 + 80) = v57;
  v100 = v32;
  sub_1A6334EC8();
  swift_bridgeObjectRelease();
  if (qword_1ED21D318 != -1)
    swift_once();
  v93 = a10;
  v58 = sub_1A6334F04();
  v59 = __swift_project_value_buffer(v58, (uint64_t)qword_1ED22A3C0);
  swift_bridgeObjectRetain_n();
  v90 = v59;
  v60 = sub_1A6334EEC();
  v61 = sub_1A633569C();
  if (os_log_type_enabled(v60, v61))
  {
    v62 = (uint8_t *)swift_slowAlloc();
    v63 = v36;
    v64 = swift_slowAlloc();
    v115[0] = v64;
    *(_DWORD *)v62 = 136446210;
    v65 = v39;
    v66 = v113;
    sub_1A6334CDC();
    v114 = sub_1A61A6A1C(v108, v66, v115);
    sub_1A6335774();
    v39 = v65;
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v60, v61, "Created response model for request: %{public}s", v62, 0xCu);
    swift_arrayDestroy();
    v67 = v64;
    v36 = v63;
    MEMORY[0x1A85BEFA8](v67, -1, -1);
    MEMORY[0x1A85BEFA8](v62, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v68 = (uint64_t)v94;
  v69 = MEMORY[0x1E0DEA968];
  v104 = a12;
  v102 = a13;
  v103 = a11;
  sub_1A63356FC();
  v70 = swift_allocObject();
  *(_OWORD *)(v70 + 16) = v98;
  *(_QWORD *)(v70 + 56) = v69;
  *(_QWORD *)(v70 + 64) = v39;
  *(_QWORD *)(v70 + 32) = v108;
  *(_QWORD *)(v70 + 40) = v113;
  sub_1A6334CDC();
  sub_1A63327E0();
  v71 = __swift_getEnumTagSinglePayload(v68, 1, v36);
  v105 = a14;
  if (v71 == 1)
  {
    sub_1A622D748(v68, &qword_1ED21DA40);
    v72 = (uint64_t *)(v70 + 72);
    *(_QWORD *)(v70 + 96) = v69;
    *(_QWORD *)(v70 + 104) = v39;
LABEL_27:
    *v72 = 0;
    v77 = 0xE000000000000000;
    goto LABEL_28;
  }
  v73 = sub_1A6332A14();
  v74 = v36;
  v75 = v73;
  v77 = v76;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 8))(v68, v74);
  v72 = (uint64_t *)(v70 + 72);
  *(_QWORD *)(v70 + 96) = v69;
  *(_QWORD *)(v70 + 104) = v39;
  if (!v77)
    goto LABEL_27;
  *v72 = v75;
LABEL_28:
  *(_QWORD *)(v70 + 80) = v77;
  sub_1A6334EC8();
  swift_bridgeObjectRelease();
  sub_1A6332C0C();
  sub_1A6332B58();
  swift_bridgeObjectRetain_n();
  v78 = sub_1A6334EEC();
  v79 = sub_1A6335684();
  if (os_log_type_enabled(v78, v79))
  {
    v80 = swift_slowAlloc();
    v81 = swift_slowAlloc();
    v115[0] = v81;
    *(_DWORD *)v80 = 136446466;
    v82 = Double.humanReadableDescription.getter();
    v114 = sub_1A61A6A1C(v82, v83, v115);
    sub_1A6335774();
    swift_bridgeObjectRelease();
    *(_WORD *)(v80 + 12) = 2082;
    v84 = v113;
    sub_1A6334CDC();
    v114 = sub_1A61A6A1C(v108, v84, v115);
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v78, v79, "Fetch took: %{public}s for request: %{public}s", (uint8_t *)v80, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v81, -1, -1);
    MEMORY[0x1A85BEFA8](v80, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v85 = v91;
  v86 = v100;
  v87 = v95;
  sub_1A618D9C4(v109, v95, (uint64_t (*)(_QWORD))type metadata accessor for DailySummary);
  v88 = type metadata accessor for DailySummary();
  __swift_storeEnumTagSinglePayload(v87, 0, 1, v88);
  v89 = (void *)sub_1A61A62D8();
  sub_1A62174C0(v103, v104, v89, v87, 0, v105, a15 & 1);

  sub_1A622D748(v87, &qword_1EE845BD8);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v101, v97);
  return (*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v86, v107);
}

void *sub_1A6218B70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, char *a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, void *a12, char *a13, unint64_t a14, void *a15, char *a16, uint64_t a17, char a18)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  int EnumTagSinglePayload;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  BOOL v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  char *v75;
  unint64_t v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  void *v84;
  _DWORD v85[2];
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  char *v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  char *v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD v111[22];
  uint64_t v112[22];
  _BYTE v113[176];
  uint64_t v114[23];

  v102 = a7;
  v90 = a8;
  v100 = a5;
  v101 = a6;
  v109 = a4;
  v95 = a9;
  v21 = sub_1A6332C24();
  v93 = *(_QWORD *)(v21 - 8);
  v94 = v21;
  MEMORY[0x1E0C80A78](v21);
  v96 = (char *)v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21DA40);
  MEMORY[0x1E0C80A78](v23);
  v92 = (uint64_t)v85 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v91 = (char *)v85 - v26;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)v85 - v28;
  v30 = sub_1A6334EE0();
  v104 = *(_QWORD *)(v30 - 8);
  v105 = v30;
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)v85 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = a1;
  v33 = *(id *)(a1 + qword_1ED21D148);
  v107 = v32;
  v110 = (uint64_t)v33;
  sub_1A6334ED4();
  sub_1A6335708();
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D210);
  v34 = swift_allocObject();
  v97 = xmmword_1A6338E30;
  *(_OWORD *)(v34 + 16) = xmmword_1A6338E30;
  v35 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v34 + 56) = MEMORY[0x1E0DEA968];
  v36 = sub_1A61AD1D4();
  *(_QWORD *)(v34 + 64) = v36;
  v99 = a2;
  *(_QWORD *)(v34 + 32) = a2;
  *(_QWORD *)(v34 + 40) = a3;
  v106 = a3;
  sub_1A6334CDC();
  sub_1A63327E0();
  v37 = sub_1A6332A98();
  if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v37) == 1)
  {
    sub_1A622D748((uint64_t)v29, &qword_1ED21DA40);
    v38 = (uint64_t *)(v34 + 72);
    *(_QWORD *)(v34 + 96) = v35;
    *(_QWORD *)(v34 + 104) = v36;
    v39 = v107;
  }
  else
  {
    v40 = sub_1A6332A14();
    v42 = v41;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v29, v37);
    v38 = (uint64_t *)(v34 + 72);
    *(_QWORD *)(v34 + 96) = v35;
    *(_QWORD *)(v34 + 104) = v36;
    if (v42)
    {
      *v38 = v40;
      v39 = v107;
      goto LABEL_7;
    }
    v39 = v107;
  }
  *v38 = 0;
  v42 = 0xE000000000000000;
LABEL_7:
  *(_QWORD *)(v34 + 80) = v42;
  sub_1A6334EC8();
  swift_bridgeObjectRelease();
  v43 = objc_msgSend(v100, sel_MIMEType);
  if (v43)
  {
    v44 = v43;
    sub_1A6335300();

  }
  else
  {
    sub_1A6334CDC();
  }
  v45 = v103;
  sub_1A61FA0A4(v101, v102, v113);
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v104 + 8))(v39, v105);
    return (void *)swift_bridgeObjectRelease();
  }
  v103 = 0;
  swift_bridgeObjectRelease();
  sub_1A63356FC();
  v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = v97;
  *(_QWORD *)(v47 + 56) = v35;
  *(_QWORD *)(v47 + 64) = v36;
  *(_QWORD *)(v47 + 32) = v99;
  *(_QWORD *)(v47 + 40) = v106;
  sub_1A6334CDC();
  v48 = (uint64_t)v91;
  sub_1A63327E0();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v48, 1, v37);
  v89 = v36;
  if (EnumTagSinglePayload == 1)
  {
    sub_1A622D748(v48, &qword_1ED21DA40);
    v50 = (uint64_t *)(v47 + 72);
    *(_QWORD *)(v47 + 96) = v35;
    *(_QWORD *)(v47 + 104) = v36;
  }
  else
  {
    v51 = sub_1A6332A14();
    v52 = v48;
    v53 = v51;
    v55 = v54;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v52, v37);
    v50 = (uint64_t *)(v47 + 72);
    *(_QWORD *)(v47 + 96) = v35;
    *(_QWORD *)(v47 + 104) = v36;
    if (v55)
    {
      *v50 = v53;
      v56 = (unint64_t)v106;
      goto LABEL_17;
    }
  }
  v56 = (unint64_t)v106;
  *v50 = 0;
  v55 = 0xE000000000000000;
LABEL_17:
  *(_QWORD *)(v47 + 80) = v55;
  sub_1A6334EC8();
  swift_bridgeObjectRelease();
  if (qword_1ED21D318 != -1)
    swift_once();
  v87 = a10;
  v57 = sub_1A6334F04();
  v58 = __swift_project_value_buffer(v57, (uint64_t)qword_1ED22A3C0);
  swift_bridgeObjectRetain_n();
  v86 = v58;
  v59 = sub_1A6334EEC();
  v60 = sub_1A633569C();
  v61 = os_log_type_enabled(v59, v60);
  v88 = v37;
  if (v61)
  {
    v62 = (uint8_t *)swift_slowAlloc();
    v63 = swift_slowAlloc();
    v112[0] = v63;
    *(_DWORD *)v62 = 136446210;
    sub_1A6334CDC();
    v64 = v99;
    v111[0] = sub_1A61A6A1C(v99, (unint64_t)v106, v112);
    v56 = (unint64_t)v106;
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v59, v60, "Created response model for request: %{public}s", v62, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v63, -1, -1);
    MEMORY[0x1A85BEFA8](v62, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    v64 = v99;
  }
  v65 = v92;
  v91 = a16;
  v106 = a15;
  v102 = a14;
  v101 = a13;
  v100 = a12;
  v92 = a11;
  v85[1] = sub_1A63356FC();
  v66 = swift_allocObject();
  *(_OWORD *)(v66 + 16) = v97;
  v67 = MEMORY[0x1E0DEA968];
  v68 = v89;
  *(_QWORD *)(v66 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v66 + 64) = v68;
  *(_QWORD *)(v66 + 32) = v64;
  *(_QWORD *)(v66 + 40) = v56;
  v69 = v56;
  sub_1A6334CDC();
  sub_1A63327E0();
  v70 = v88;
  if (__swift_getEnumTagSinglePayload(v65, 1, v88) == 1)
  {
    sub_1A622D748(v65, &qword_1ED21DA40);
    v71 = (uint64_t *)(v66 + 72);
    *(_QWORD *)(v66 + 96) = v67;
    *(_QWORD *)(v66 + 104) = v68;
LABEL_26:
    v75 = v96;
    v76 = v69;
    *v71 = 0;
    v74 = 0xE000000000000000;
    goto LABEL_27;
  }
  v72 = sub_1A6332A14();
  v74 = v73;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 8))(v65, v70);
  v71 = (uint64_t *)(v66 + 72);
  *(_QWORD *)(v66 + 96) = v67;
  *(_QWORD *)(v66 + 104) = v68;
  if (!v74)
    goto LABEL_26;
  *v71 = v72;
  v75 = v96;
  v76 = v69;
LABEL_27:
  v77 = a17;
  *(_QWORD *)(v66 + 80) = v74;
  sub_1A6334EC8();
  swift_bridgeObjectRelease();
  sub_1A6332C0C();
  sub_1A6332B58();
  swift_bridgeObjectRetain_n();
  v78 = sub_1A6334EEC();
  v79 = sub_1A6335684();
  if (os_log_type_enabled(v78, v79))
  {
    v80 = swift_slowAlloc();
    v109 = swift_slowAlloc();
    v112[0] = v109;
    *(_DWORD *)v80 = 136446466;
    v81 = Double.humanReadableDescription.getter();
    v110 = a17;
    v111[0] = sub_1A61A6A1C(v81, v82, v112);
    sub_1A6335774();
    swift_bridgeObjectRelease();
    *(_WORD *)(v80 + 12) = 2082;
    sub_1A6334CDC();
    v111[0] = sub_1A61A6A1C(v99, v76, v112);
    v77 = v110;
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v78, v79, "Fetch took: %{public}s for request: %{public}s", (uint8_t *)v80, 0x16u);
    v83 = v109;
    swift_arrayDestroy();
    v75 = v96;
    MEMORY[0x1A85BEFA8](v83, -1, -1);
    MEMORY[0x1A85BEFA8](v80, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  memcpy(v111, v113, sizeof(v111));
  memcpy(v112, v113, sizeof(v112));
  nullsub_1(v112);
  sub_1A61AED54((uint64_t)v112, (uint64_t)v114, &qword_1ED219A00);
  sub_1A61F3CD4(v111);
  v84 = (void *)sub_1A61A62D8();
  sub_1A621760C(v92, (uint64_t)v100, (uint64_t)v101, v102, v106, v84, v114, 0, v77, a18 & 1);

  sub_1A622D928(v111);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v75, v94);
  (*(void (**)(char *, uint64_t))(v104 + 8))(v107, v105);
  return memcpy(v95, v113, 0xB0uLL);
}

uint64_t sub_1A6219564(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void *a5, char *a6, char *a7, uint64_t a8, uint64_t a9, char *a10, void *a11, void *a12, void *a13, unsigned __int8 a14)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  int EnumTagSinglePayload;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  id v43;
  void *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  BOOL v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  char *v74;
  NSObject *v75;
  os_log_type_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  _QWORD v85[3];
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  uint64_t v105[2];

  v85[2] = a8;
  v97 = a6;
  v98 = a7;
  v96 = a5;
  v18 = sub_1A6332C24();
  v89 = *(_QWORD *)(v18 - 8);
  v90 = v18;
  MEMORY[0x1E0C80A78](v18);
  v88 = (char *)v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21DA40);
  MEMORY[0x1E0C80A78](v20);
  v87 = (char *)v85 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v86 = (char *)v85 - v23;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)v85 - v25;
  v27 = sub_1A6334EE0();
  v100 = *(_QWORD *)(v27 - 8);
  v101 = v27;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)v85 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = *(id *)(a1 + qword_1ED21D148);
  sub_1A6334ED4();
  LODWORD(v95) = sub_1A6335708();
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D210);
  v30 = swift_allocObject();
  v91 = xmmword_1A6338E30;
  *(_OWORD *)(v30 + 16) = xmmword_1A6338E30;
  v31 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v30 + 56) = MEMORY[0x1E0DEA968];
  v32 = sub_1A61AD1D4();
  *(_QWORD *)(v30 + 64) = v32;
  v102 = a2;
  *(_QWORD *)(v30 + 32) = a2;
  *(_QWORD *)(v30 + 40) = a3;
  sub_1A6334CDC();
  v94 = a4;
  sub_1A63327E0();
  v33 = sub_1A6332A98();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v26, 1, v33);
  v93 = v32;
  if (EnumTagSinglePayload == 1)
  {
    sub_1A622D748((uint64_t)v26, &qword_1ED21DA40);
    v35 = (uint64_t *)(v30 + 72);
    *(_QWORD *)(v30 + 96) = v31;
    *(_QWORD *)(v30 + 104) = v32;
  }
  else
  {
    v36 = sub_1A6332A14();
    v37 = v33;
    v38 = v36;
    v40 = v39;
    v41 = v26;
    v42 = v37;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v41, v37);
    v35 = (uint64_t *)(v30 + 72);
    *(_QWORD *)(v30 + 96) = v31;
    *(_QWORD *)(v30 + 104) = v32;
    if (v40)
    {
      *v35 = v38;
      v33 = v42;
      goto LABEL_7;
    }
    v33 = v42;
  }
  *v35 = 0;
  v40 = 0xE000000000000000;
LABEL_7:
  *(_QWORD *)(v30 + 80) = v40;
  sub_1A6334EC8();
  swift_bridgeObjectRelease();
  v43 = objc_msgSend(v96, sel_MIMEType);
  if (v43)
  {
    v44 = v43;
    sub_1A6335300();

  }
  else
  {
    sub_1A6334CDC();
  }
  v45 = v99;
  v46 = sub_1A61FA160(v97, v98);
  v47 = (uint64_t)v46;
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v100 + 8))(v29, v101);
    swift_bridgeObjectRelease();
    return v47;
  }
  v98 = 0;
  v99 = v46;
  swift_bridgeObjectRelease();
  LODWORD(v97) = sub_1A63356FC();
  v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = v91;
  v49 = MEMORY[0x1E0DEA968];
  v50 = v93;
  *(_QWORD *)(v48 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v48 + 64) = v50;
  *(_QWORD *)(v48 + 32) = v102;
  *(_QWORD *)(v48 + 40) = a3;
  sub_1A6334CDC();
  v51 = (uint64_t)v86;
  sub_1A63327E0();
  v52 = v51;
  if (__swift_getEnumTagSinglePayload(v51, 1, v33) == 1)
  {
    sub_1A622D748(v51, &qword_1ED21DA40);
    v53 = (_QWORD *)(v48 + 72);
    *(_QWORD *)(v48 + 96) = v49;
    *(_QWORD *)(v48 + 104) = v50;
  }
  else
  {
    v54 = a3;
    v55 = v29;
    v56 = v52;
    v96 = (id)sub_1A6332A14();
    v58 = v57;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v56, v33);
    v53 = (_QWORD *)(v48 + 72);
    *(_QWORD *)(v48 + 96) = v49;
    *(_QWORD *)(v48 + 104) = v50;
    if (v58)
    {
      *v53 = v96;
      v29 = v55;
      a3 = v54;
      goto LABEL_18;
    }
    v29 = v55;
    a3 = v54;
  }
  *v53 = 0;
  v58 = 0xE000000000000000;
LABEL_18:
  *(_QWORD *)(v48 + 80) = v58;
  sub_1A6334EC8();
  swift_bridgeObjectRelease();
  if (qword_1ED21D318 != -1)
    swift_once();
  v95 = a9;
  v59 = sub_1A6334F04();
  v60 = __swift_project_value_buffer(v59, (uint64_t)qword_1ED22A3C0);
  swift_bridgeObjectRetain_n();
  v61 = sub_1A6334EEC();
  v62 = sub_1A633569C();
  v63 = os_log_type_enabled(v61, v62);
  v85[1] = a1;
  v85[0] = v29;
  v86 = (char *)v60;
  if (v63)
  {
    v64 = (uint8_t *)swift_slowAlloc();
    v65 = swift_slowAlloc();
    v105[0] = v65;
    *(_DWORD *)v64 = 136446210;
    sub_1A6334CDC();
    v104 = sub_1A61A6A1C(v102, a3, v105);
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v61, v62, "Created response model for request: %{public}s", v64, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v65, -1, -1);
    MEMORY[0x1A85BEFA8](v64, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v66 = (uint64_t)v87;
  v67 = MEMORY[0x1E0DEA968];
  v68 = (uint64_t)a13;
  v96 = a12;
  v97 = a10;
  LODWORD(v87) = sub_1A63356FC();
  v69 = swift_allocObject();
  *(_OWORD *)(v69 + 16) = v91;
  v70 = v93;
  *(_QWORD *)(v69 + 56) = v67;
  *(_QWORD *)(v69 + 64) = v70;
  *(_QWORD *)(v69 + 32) = v102;
  *(_QWORD *)(v69 + 40) = a3;
  sub_1A6334CDC();
  sub_1A63327E0();
  if (__swift_getEnumTagSinglePayload(v66, 1, v33) == 1)
  {
    sub_1A622D748(v66, &qword_1ED21DA40);
    v71 = (uint64_t *)(v69 + 72);
    *(_QWORD *)(v69 + 96) = v67;
    *(_QWORD *)(v69 + 104) = v70;
LABEL_27:
    *v71 = 0;
    v73 = 0xE000000000000000;
    goto LABEL_28;
  }
  v94 = sub_1A6332A14();
  v73 = v72;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v66, v33);
  v71 = (uint64_t *)(v69 + 72);
  *(_QWORD *)(v69 + 96) = v67;
  *(_QWORD *)(v69 + 104) = v70;
  if (!v73)
    goto LABEL_27;
  *v71 = v94;
LABEL_28:
  LODWORD(v95) = a14;
  *(_QWORD *)(v69 + 80) = v73;
  sub_1A6334EC8();
  swift_bridgeObjectRelease();
  v74 = v88;
  sub_1A6332C0C();
  sub_1A6332B58();
  swift_bridgeObjectRetain_n();
  v75 = sub_1A6334EEC();
  v76 = sub_1A6335684();
  if (os_log_type_enabled(v75, v76))
  {
    v77 = swift_slowAlloc();
    v94 = swift_slowAlloc();
    v105[0] = v94;
    *(_DWORD *)v77 = 136446466;
    v78 = Double.humanReadableDescription.getter();
    v80 = sub_1A61A6A1C(v78, v79, v105);
    v103 = a13;
    v104 = v80;
    sub_1A6335774();
    swift_bridgeObjectRelease();
    *(_WORD *)(v77 + 12) = 2082;
    sub_1A6334CDC();
    v104 = sub_1A61A6A1C(v102, a3, v105);
    v68 = (uint64_t)v103;
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v75, v76, "Fetch took: %{public}s for request: %{public}s", (uint8_t *)v77, 0x16u);
    v81 = v94;
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v81, -1, -1);
    MEMORY[0x1A85BEFA8](v77, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v82 = v85[0];
  v47 = (uint64_t)v99;
  sub_1A6334CDC();
  v83 = (void *)sub_1A61A62D8();
  sub_1A6217700(v97, a11, v83, v47, 0, v68, v95 & 1);
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v89 + 8))(v74, v90);
  (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v82, v101);
  return v47;
}

uint64_t sub_1A6219F08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, __int128 *a5@<X4>, void *a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, char *a10, __int128 *a11, void *a12, uint64_t a13, unint64_t a14, char a15)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  int EnumTagSinglePayload;
  uint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  __int128 *v103;
  void *v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115[2];

  v92 = a8;
  v104 = a6;
  v105 = a7;
  v103 = a5;
  v112 = a4;
  v109 = a9;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8465F0);
  MEMORY[0x1E0C80A78](v18);
  v95 = (uint64_t)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1A6332C24();
  v96 = *(_QWORD *)(v20 - 8);
  v97 = v20;
  MEMORY[0x1E0C80A78](v20);
  v101 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21DA40);
  MEMORY[0x1E0C80A78](v22);
  v94 = (char *)&v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v93 = (char *)&v90 - v25;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v90 - v27;
  v29 = sub_1A6334EE0();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v32 = (char *)&v90 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = a1;
  v111 = *(id *)(a1 + qword_1ED21D148);
  sub_1A6334ED4();
  LODWORD(v102) = sub_1A6335708();
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D210);
  v33 = swift_allocObject();
  v98 = xmmword_1A6338E30;
  *(_OWORD *)(v33 + 16) = xmmword_1A6338E30;
  v34 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v33 + 56) = MEMORY[0x1E0DEA968];
  v35 = sub_1A61AD1D4();
  *(_QWORD *)(v33 + 64) = v35;
  v108 = a2;
  *(_QWORD *)(v33 + 32) = a2;
  *(_QWORD *)(v33 + 40) = a3;
  v113 = a3;
  sub_1A6334CDC();
  sub_1A63327E0();
  v36 = sub_1A6332A98();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v28, 1, v36);
  v107 = v29;
  if (EnumTagSinglePayload == 1)
  {
    sub_1A622D748((uint64_t)v28, &qword_1ED21DA40);
    v38 = (uint64_t *)(v33 + 72);
    *(_QWORD *)(v33 + 96) = v34;
    *(_QWORD *)(v33 + 104) = v35;
    v39 = v35;
  }
  else
  {
    v100 = v32;
    v40 = sub_1A6332A14();
    v42 = v41;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v28, v36);
    v38 = (uint64_t *)(v33 + 72);
    *(_QWORD *)(v33 + 96) = v34;
    *(_QWORD *)(v33 + 104) = v35;
    v39 = v35;
    if (v42)
    {
      *v38 = v40;
      v32 = v100;
      goto LABEL_7;
    }
    v32 = v100;
  }
  *v38 = 0;
  v42 = 0xE000000000000000;
LABEL_7:
  *(_QWORD *)(v33 + 80) = v42;
  sub_1A6334EC8();
  swift_bridgeObjectRelease();
  v43 = objc_msgSend(v103, sel_MIMEType);
  if (v43)
  {
    v44 = v43;
    sub_1A6335300();

  }
  else
  {
    sub_1A6334CDC();
  }
  v45 = v106;
  sub_1A61FA21C((uint64_t)v104, v105, v109);
  v106 = v45;
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v107);
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  LODWORD(v105) = sub_1A63356FC();
  v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = v98;
  v48 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v47 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v47 + 64) = v39;
  *(_QWORD *)(v47 + 32) = v108;
  *(_QWORD *)(v47 + 40) = v113;
  sub_1A6334CDC();
  v49 = (uint64_t)v93;
  sub_1A63327E0();
  v50 = v49;
  v51 = __swift_getEnumTagSinglePayload(v49, 1, v36);
  v91 = v30;
  if (v51 == 1)
  {
    sub_1A622D748(v49, &qword_1ED21DA40);
    v52 = (uint64_t *)(v47 + 72);
    *(_QWORD *)(v47 + 96) = v48;
    *(_QWORD *)(v47 + 104) = v39;
  }
  else
  {
    v53 = v32;
    v54 = v50;
    v55 = sub_1A6332A14();
    v57 = v56;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v54, v36);
    v52 = (uint64_t *)(v47 + 72);
    *(_QWORD *)(v47 + 96) = v48;
    *(_QWORD *)(v47 + 104) = v39;
    if (v57)
    {
      *v52 = v55;
      v32 = v53;
      goto LABEL_18;
    }
    v32 = v53;
  }
  *v52 = 0;
  v57 = 0xE000000000000000;
LABEL_18:
  *(_QWORD *)(v47 + 80) = v57;
  v100 = v32;
  sub_1A6334EC8();
  swift_bridgeObjectRelease();
  if (qword_1ED21D318 != -1)
    swift_once();
  v93 = a10;
  v58 = sub_1A6334F04();
  v59 = __swift_project_value_buffer(v58, (uint64_t)qword_1ED22A3C0);
  swift_bridgeObjectRetain_n();
  v90 = v59;
  v60 = sub_1A6334EEC();
  v61 = sub_1A633569C();
  if (os_log_type_enabled(v60, v61))
  {
    v62 = (uint8_t *)swift_slowAlloc();
    v63 = v36;
    v64 = swift_slowAlloc();
    v115[0] = v64;
    *(_DWORD *)v62 = 136446210;
    v65 = v39;
    v66 = v113;
    sub_1A6334CDC();
    v114 = sub_1A61A6A1C(v108, v66, v115);
    sub_1A6335774();
    v39 = v65;
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v60, v61, "Created response model for request: %{public}s", v62, 0xCu);
    swift_arrayDestroy();
    v67 = v64;
    v36 = v63;
    MEMORY[0x1A85BEFA8](v67, -1, -1);
    MEMORY[0x1A85BEFA8](v62, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v68 = (uint64_t)v94;
  v69 = MEMORY[0x1E0DEA968];
  v104 = a12;
  v102 = a13;
  v103 = a11;
  sub_1A63356FC();
  v70 = swift_allocObject();
  *(_OWORD *)(v70 + 16) = v98;
  *(_QWORD *)(v70 + 56) = v69;
  *(_QWORD *)(v70 + 64) = v39;
  *(_QWORD *)(v70 + 32) = v108;
  *(_QWORD *)(v70 + 40) = v113;
  sub_1A6334CDC();
  sub_1A63327E0();
  v71 = __swift_getEnumTagSinglePayload(v68, 1, v36);
  v105 = a14;
  if (v71 == 1)
  {
    sub_1A622D748(v68, &qword_1ED21DA40);
    v72 = (uint64_t *)(v70 + 72);
    *(_QWORD *)(v70 + 96) = v69;
    *(_QWORD *)(v70 + 104) = v39;
LABEL_27:
    *v72 = 0;
    v77 = 0xE000000000000000;
    goto LABEL_28;
  }
  v73 = sub_1A6332A14();
  v74 = v36;
  v75 = v73;
  v77 = v76;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 8))(v68, v74);
  v72 = (uint64_t *)(v70 + 72);
  *(_QWORD *)(v70 + 96) = v69;
  *(_QWORD *)(v70 + 104) = v39;
  if (!v77)
    goto LABEL_27;
  *v72 = v75;
LABEL_28:
  *(_QWORD *)(v70 + 80) = v77;
  sub_1A6334EC8();
  swift_bridgeObjectRelease();
  sub_1A6332C0C();
  sub_1A6332B58();
  swift_bridgeObjectRetain_n();
  v78 = sub_1A6334EEC();
  v79 = sub_1A6335684();
  if (os_log_type_enabled(v78, v79))
  {
    v80 = swift_slowAlloc();
    v81 = swift_slowAlloc();
    v115[0] = v81;
    *(_DWORD *)v80 = 136446466;
    v82 = Double.humanReadableDescription.getter();
    v114 = sub_1A61A6A1C(v82, v83, v115);
    sub_1A6335774();
    swift_bridgeObjectRelease();
    *(_WORD *)(v80 + 12) = 2082;
    v84 = v113;
    sub_1A6334CDC();
    v114 = sub_1A61A6A1C(v108, v84, v115);
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v78, v79, "Fetch took: %{public}s for request: %{public}s", (uint8_t *)v80, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v81, -1, -1);
    MEMORY[0x1A85BEFA8](v80, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v85 = v91;
  v86 = v100;
  v87 = v95;
  sub_1A618D9C4((uint64_t)v109, v95, (uint64_t (*)(_QWORD))type metadata accessor for WeatherAlert);
  v88 = type metadata accessor for WeatherAlert();
  __swift_storeEnumTagSinglePayload(v87, 0, 1, v88);
  v89 = (void *)sub_1A61A62D8();
  sub_1A62177E0(v103, v104, v89, v87, 0, v105, a15 & 1);

  sub_1A622D748(v87, &qword_1EE8465F0);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v101, v97);
  return (*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v86, v107);
}

void sub_1A621A944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,unsigned __int8 a26,uint64_t *a27,void (*a28)(uint64_t, uint64_t, uint64_t, uint64_t),uint64_t (*a29)(_QWORD),void (*a30)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t (*v30)(_QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(_QWORD);
  uint64_t (*v56)(_QWORD);
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(_QWORD);
  uint64_t (*v73)(_QWORD);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (*v82)(_QWORD);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  BOOL v88;
  uint8_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  NSObject *v97;
  NSObject *v98;
  os_log_type_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t (*v105)(_QWORD);
  uint64_t v106;
  void *v107;
  _QWORD v108[2];
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  __int128 v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v122;
  id v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t (*v126)(_QWORD);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134[2];

  OUTLINED_FUNCTION_649();
  v126 = v30;
  v110 = v32;
  v124 = v33;
  v125 = v34;
  v123 = v35;
  v131 = v36;
  v38 = v37;
  v40 = v39;
  v42 = v41;
  v129 = v43;
  v116 = a27;
  __swift_instantiateConcreteTypeFromMangledName(a27);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v44);
  OUTLINED_FUNCTION_1_0();
  v115 = v45;
  v114 = OUTLINED_FUNCTION_6();
  v113 = *(_QWORD *)(v114 - 8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v46);
  OUTLINED_FUNCTION_1_0();
  v120 = v47;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21DA40);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v48);
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_708();
  MEMORY[0x1E0C80A78](v49);
  OUTLINED_FUNCTION_708();
  MEMORY[0x1E0C80A78](v50);
  v52 = (char *)v108 - v51;
  v53 = sub_1A6334EE0();
  v127 = *(_QWORD *)(v53 - 8);
  v128 = v53;
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v54);
  OUTLINED_FUNCTION_11();
  v130 = v42;
  v55 = (uint64_t (*)(_QWORD))*(id *)(v42 + qword_1ED21D148);
  v132 = v31;
  v56 = v55;
  sub_1A6334ED4();
  LODWORD(v122) = sub_1A6335708();
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D210);
  v57 = OUTLINED_FUNCTION_461();
  v117 = xmmword_1A6338E30;
  *(_OWORD *)(v57 + 16) = xmmword_1A6338E30;
  v58 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v57 + 56) = MEMORY[0x1E0DEA968];
  v59 = sub_1A61AD1D4();
  *(_QWORD *)(v57 + 64) = v59;
  v121 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v40;
  *(_QWORD *)(v57 + 32) = v40;
  *(_QWORD *)(v57 + 40) = v38;
  v60 = v38;
  OUTLINED_FUNCTION_242();
  OUTLINED_FUNCTION_976();
  v61 = sub_1A6332A98();
  OUTLINED_FUNCTION_603((uint64_t)v52, 1, v61);
  v119 = v61;
  if (v62)
  {
    sub_1A622D748((uint64_t)v52, &qword_1ED21DA40);
    v63 = (uint64_t *)(v57 + 72);
    *(_QWORD *)(v57 + 96) = v58;
    *(_QWORD *)(v57 + 104) = v59;
    v64 = v59;
  }
  else
  {
    v65 = sub_1A6332A14();
    v42 = v66;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v61 - 8) + 8))(v52, v61);
    v63 = (uint64_t *)(v57 + 72);
    *(_QWORD *)(v57 + 96) = v58;
    *(_QWORD *)(v57 + 104) = v59;
    v64 = v59;
    if (v42)
    {
      *v63 = v65;
      goto LABEL_7;
    }
  }
  OUTLINED_FUNCTION_186(v63);
LABEL_7:
  *(_QWORD *)(v57 + 80) = v42;
  OUTLINED_FUNCTION_20_10();
  OUTLINED_FUNCTION_813();
  OUTLINED_FUNCTION_764();
  v67 = objc_msgSend(v123, sel_MIMEType);
  if (v67)
  {
    v68 = v67;
    v69 = sub_1A6335300();
    v71 = v70;

  }
  else
  {
    v69 = *(_QWORD *)(v130 + qword_1ED21D218);
    v71 = *(_QWORD *)(v130 + qword_1ED21D218 + 8);
    OUTLINED_FUNCTION_172();
  }
  v72 = v126;
  a28(v124, v125, v69, v71);
  v73 = v72;
  if (v72)
  {
    OUTLINED_FUNCTION_925();
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  v125 = 0;
  v126 = v56;
  swift_bridgeObjectRelease();
  sub_1A63356FC();
  v74 = OUTLINED_FUNCTION_461();
  *(_OWORD *)(v74 + 16) = v117;
  *(_QWORD *)(v74 + 56) = v58;
  *(_QWORD *)(v74 + 64) = v64;
  v75 = (uint64_t)v121;
  *(_QWORD *)(v74 + 32) = v121;
  *(_QWORD *)(v74 + 40) = v60;
  OUTLINED_FUNCTION_22_1();
  v76 = v111;
  OUTLINED_FUNCTION_976();
  v77 = v119;
  OUTLINED_FUNCTION_603(v76, 1, v119);
  v109 = v64;
  if (v62)
  {
    sub_1A622D748(v76, &qword_1ED21DA40);
    v78 = (uint64_t *)(v74 + 72);
    *(_QWORD *)(v74 + 96) = v58;
    *(_QWORD *)(v74 + 104) = v64;
  }
  else
  {
    v79 = sub_1A6332A14();
    v80 = v76;
    v81 = v79;
    v73 = v82;
    OUTLINED_FUNCTION_860(v80, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 8));
    v78 = (uint64_t *)(v74 + 72);
    *(_QWORD *)(v74 + 96) = v58;
    *(_QWORD *)(v74 + 104) = v64;
    if (v73)
    {
      *v78 = v81;
      v83 = v75;
      goto LABEL_18;
    }
  }
  v83 = v75;
  OUTLINED_FUNCTION_186(v78);
LABEL_18:
  *(_QWORD *)(v74 + 80) = v73;
  OUTLINED_FUNCTION_20_10();
  OUTLINED_FUNCTION_813();
  swift_bridgeObjectRelease();
  if (qword_1ED21D318 != -1)
    swift_once();
  v111 = a21;
  v84 = OUTLINED_FUNCTION_30();
  v85 = __swift_project_value_buffer(v84, (uint64_t)qword_1ED22A3C0);
  OUTLINED_FUNCTION_46_2();
  v86 = sub_1A6334EEC();
  v87 = sub_1A633569C();
  v88 = os_log_type_enabled(v86, v87);
  v108[1] = v85;
  if (v88)
  {
    v89 = (uint8_t *)OUTLINED_FUNCTION_2_4();
    v134[0] = OUTLINED_FUNCTION_2_4();
    *(_DWORD *)v89 = 136446210;
    OUTLINED_FUNCTION_22_1();
    v133 = sub_1A61A6A1C((uint64_t)v121, v60, v134);
    OUTLINED_FUNCTION_981();
    OUTLINED_FUNCTION_37();
    OUTLINED_FUNCTION_33(&dword_1A6185000, v86, v87, "Created response model for request: %{public}s", v89);
    OUTLINED_FUNCTION_32();
    OUTLINED_FUNCTION_0_5();
  }

  OUTLINED_FUNCTION_19_0();
  v90 = v112;
  v124 = a25;
  v112 = a24;
  v122 = a22;
  v123 = a23;
  sub_1A63356FC();
  v91 = OUTLINED_FUNCTION_461();
  *(_OWORD *)(v91 + 16) = v117;
  v92 = MEMORY[0x1E0DEA968];
  v93 = v109;
  *(_QWORD *)(v91 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v91 + 64) = v93;
  *(_QWORD *)(v91 + 32) = v83;
  *(_QWORD *)(v91 + 40) = v60;
  OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_976();
  v94 = v119;
  OUTLINED_FUNCTION_603(v90, 1, v119);
  if (v62)
  {
    sub_1A622D748(v90, &qword_1ED21DA40);
    v95 = (uint64_t *)(v91 + 72);
    *(_QWORD *)(v91 + 96) = v92;
    *(_QWORD *)(v91 + 104) = v93;
LABEL_28:
    OUTLINED_FUNCTION_186(v95);
    goto LABEL_29;
  }
  v96 = sub_1A6332A14();
  v86 = v97;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 8))(v90, v94);
  v95 = (uint64_t *)(v91 + 72);
  *(_QWORD *)(v91 + 96) = v92;
  *(_QWORD *)(v91 + 104) = v93;
  if (!v86)
  {
    v83 = (uint64_t)v121;
    goto LABEL_28;
  }
  *v95 = v96;
  v83 = (uint64_t)v121;
LABEL_29:
  v126 = a29;
  LODWORD(v131) = a26;
  *(_QWORD *)(v91 + 80) = v86;
  OUTLINED_FUNCTION_20_10();
  OUTLINED_FUNCTION_960();
  swift_bridgeObjectRelease();
  sub_1A6332C0C();
  sub_1A6332B58();
  OUTLINED_FUNCTION_46_2();
  v98 = sub_1A6334EEC();
  v99 = sub_1A6335684();
  if (os_log_type_enabled(v98, v99))
  {
    v100 = OUTLINED_FUNCTION_2_4();
    v101 = OUTLINED_FUNCTION_2_4();
    v121 = a30;
    v134[0] = v101;
    *(_DWORD *)v100 = 136446466;
    v102 = OUTLINED_FUNCTION_843();
    v133 = sub_1A61A6A1C(v102, v103, v134);
    OUTLINED_FUNCTION_864();
    swift_bridgeObjectRelease();
    *(_WORD *)(v100 + 12) = 2082;
    OUTLINED_FUNCTION_22_1();
    v133 = sub_1A61A6A1C(v83, v60, v134);
    OUTLINED_FUNCTION_864();
    OUTLINED_FUNCTION_37();
    _os_log_impl(&dword_1A6185000, v98, v99, "Fetch took: %{public}s for request: %{public}s", (uint8_t *)v100, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_0_5();
  }

  OUTLINED_FUNCTION_19_0();
  v104 = v115;
  v105 = v126;
  sub_1A618D9C4(v129, v115, v126);
  v106 = v105(0);
  OUTLINED_FUNCTION_773(v106);
  v107 = (void *)sub_1A61A62D8();
  a30(v122, v123, v107, v104, 0, v124, v131 & 1);

  sub_1A622D748(v104, v116);
  (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v120, v114);
  OUTLINED_FUNCTION_925();
LABEL_32:
  OUTLINED_FUNCTION_5();
}

void sub_1A621B1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,unint64_t a25,char a26,uint64_t a27,void (*a28)(uint64_t, uint64_t, void *, uint64_t, _QWORD, unint64_t, _QWORD))
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  _QWORD *v61;
  uint64_t v62;
  id v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  BOOL v83;
  uint8_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  NSObject *v98;
  os_log_type_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  _QWORD v107[2];
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132[2];

  OUTLINED_FUNCTION_649();
  v124 = v28;
  v107[0] = v29;
  v122 = v30;
  v123 = v31;
  v130 = v32;
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v126 = v39;
  v120 = v40;
  v121 = a27;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED21B908);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v41);
  OUTLINED_FUNCTION_1_0();
  v109 = v42;
  v111 = OUTLINED_FUNCTION_6();
  v110 = *(_QWORD *)(v111 - 8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v43);
  OUTLINED_FUNCTION_1_0();
  v117 = v44;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21DA40);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v45);
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_708();
  MEMORY[0x1E0C80A78](v46);
  OUTLINED_FUNCTION_708();
  MEMORY[0x1E0C80A78](v47);
  v49 = (char *)v107 - v48;
  v50 = sub_1A6334EE0();
  v51 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v53 = (char *)v107 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = v38;
  v54 = *(id *)(v38 + qword_1ED21D148);
  v128 = v53;
  v129 = v54;
  sub_1A6334ED4();
  LODWORD(v119) = sub_1A6335708();
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D210);
  v55 = OUTLINED_FUNCTION_461();
  v112 = xmmword_1A6338E30;
  *(_OWORD *)(v55 + 16) = xmmword_1A6338E30;
  v56 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v55 + 56) = MEMORY[0x1E0DEA968];
  v57 = sub_1A61AD1D4();
  *(_QWORD *)(v55 + 64) = v57;
  v118 = v36;
  *(_QWORD *)(v55 + 32) = v36;
  *(_QWORD *)(v55 + 40) = v34;
  v125 = v34;
  OUTLINED_FUNCTION_242();
  v58 = v130;
  sub_1A63327E0();
  v59 = sub_1A6332A98();
  OUTLINED_FUNCTION_603((uint64_t)v49, 1, v59);
  v114 = v59;
  if (v60)
  {
    sub_1A622D748((uint64_t)v49, &qword_1ED21DA40);
    v61 = (_QWORD *)(v55 + 72);
    *(_QWORD *)(v55 + 96) = v56;
    *(_QWORD *)(v55 + 104) = v57;
    v49 = v128;
  }
  else
  {
    v115 = v51;
    v116 = v50;
    v51 = v127;
    v50 = sub_1A6332A14();
    v58 = v62;
    OUTLINED_FUNCTION_785((uint64_t)v49, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8));
    *(_QWORD *)(v55 + 96) = v56;
    *(_QWORD *)(v55 + 104) = v57;
    if (v58)
    {
      *(_QWORD *)(v55 + 72) = v50;
      OUTLINED_FUNCTION_890();
      goto LABEL_8;
    }
    OUTLINED_FUNCTION_890();
  }
  OUTLINED_FUNCTION_186(v61);
LABEL_8:
  *(_QWORD *)(v55 + 80) = v58;
  OUTLINED_FUNCTION_20_10();
  OUTLINED_FUNCTION_784();
  OUTLINED_FUNCTION_764();
  v63 = objc_msgSend(v120, sel_MIMEType);
  if (v63)
  {
    v64 = v63;
    sub_1A6335300();

  }
  else
  {
    OUTLINED_FUNCTION_242();
  }
  v65 = v124;
  sub_1A61FA59C();
  if (v65)
  {
    OUTLINED_FUNCTION_860((uint64_t)v49, *(uint64_t (**)(uint64_t, uint64_t))(v51 + 8));
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  v124 = 0;
  swift_bridgeObjectRelease();
  LODWORD(v123) = sub_1A63356FC();
  v66 = OUTLINED_FUNCTION_461();
  *(_OWORD *)(v66 + 16) = v112;
  v67 = v57;
  v68 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v66 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v66 + 64) = v67;
  *(_QWORD *)(v66 + 32) = v118;
  *(_QWORD *)(v66 + 40) = v125;
  sub_1A6334CDC();
  v69 = v107[1];
  OUTLINED_FUNCTION_966();
  v70 = v69;
  OUTLINED_FUNCTION_603(v69, 1, v114);
  v116 = v50;
  if (v60)
  {
    sub_1A622D748(v69, &qword_1ED21DA40);
    v71 = (uint64_t *)(v66 + 72);
    *(_QWORD *)(v66 + 96) = v68;
    *(_QWORD *)(v66 + 104) = v67;
    v72 = v67;
  }
  else
  {
    v73 = sub_1A6332A14();
    v70 = v74;
    v75 = OUTLINED_FUNCTION_1032();
    v76(v75);
    v71 = (uint64_t *)(v66 + 72);
    *(_QWORD *)(v66 + 96) = v68;
    *(_QWORD *)(v66 + 104) = v67;
    v72 = v67;
    if (v70)
    {
      *v71 = v73;
      v77 = v51;
      goto LABEL_19;
    }
  }
  v77 = v51;
  OUTLINED_FUNCTION_186(v71);
LABEL_19:
  *(_QWORD *)(v66 + 80) = v70;
  OUTLINED_FUNCTION_20_10();
  OUTLINED_FUNCTION_784();
  OUTLINED_FUNCTION_764();
  if (qword_1ED21D318 != -1)
    swift_once();
  v120 = a21;
  v78 = OUTLINED_FUNCTION_30();
  v79 = __swift_project_value_buffer(v78, (uint64_t)qword_1ED22A3C0);
  v80 = v125;
  OUTLINED_FUNCTION_46_2();
  v119 = v79;
  v81 = sub_1A6334EEC();
  v82 = sub_1A633569C();
  v83 = os_log_type_enabled(v81, v82);
  v115 = v77;
  if (v83)
  {
    v84 = (uint8_t *)OUTLINED_FUNCTION_2_4();
    v85 = OUTLINED_FUNCTION_2_4();
    OUTLINED_FUNCTION_363(v85);
    *(_DWORD *)v84 = 136446210;
    sub_1A6334CDC();
    v86 = sub_1A61A6A1C(v118, v125, v132);
    OUTLINED_FUNCTION_863(v86);
    sub_1A6335774();
    OUTLINED_FUNCTION_37();
    OUTLINED_FUNCTION_33(&dword_1A6185000, v81, v82, "Created response model for request: %{public}s", v84);
    OUTLINED_FUNCTION_32();
    OUTLINED_FUNCTION_0_5();
  }

  OUTLINED_FUNCTION_19_0();
  v87 = v118;
  v88 = v108;
  v89 = MEMORY[0x1E0DEA968];
  v125 = a25;
  v123 = a23;
  v121 = a24;
  v122 = a22;
  LODWORD(v108) = sub_1A63356FC();
  v90 = OUTLINED_FUNCTION_461();
  *(_OWORD *)(v90 + 16) = v112;
  *(_QWORD *)(v90 + 56) = v89;
  *(_QWORD *)(v90 + 64) = v72;
  *(_QWORD *)(v90 + 32) = v87;
  *(_QWORD *)(v90 + 40) = v80;
  OUTLINED_FUNCTION_172();
  OUTLINED_FUNCTION_966();
  v91 = v114;
  OUTLINED_FUNCTION_603(v88, 1, v114);
  if (v60)
  {
    sub_1A622D748(v88, &qword_1ED21DA40);
    v92 = (uint64_t *)(v90 + 72);
    *(_QWORD *)(v90 + 96) = v89;
    *(_QWORD *)(v90 + 104) = v72;
LABEL_28:
    v97 = v119;
    OUTLINED_FUNCTION_186(v92);
    goto LABEL_29;
  }
  v93 = v72;
  v94 = v89;
  v95 = sub_1A6332A14();
  v81 = v96;
  OUTLINED_FUNCTION_785(v88, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 8));
  v92 = (uint64_t *)(v90 + 72);
  *(_QWORD *)(v90 + 96) = v94;
  *(_QWORD *)(v90 + 104) = v93;
  if (!v81)
    goto LABEL_28;
  *v92 = v95;
  v97 = v119;
LABEL_29:
  *(_QWORD *)(v90 + 80) = v81;
  OUTLINED_FUNCTION_20_10();
  OUTLINED_FUNCTION_960();
  swift_bridgeObjectRelease();
  sub_1A6332C0C();
  sub_1A6332B58();
  OUTLINED_FUNCTION_46_2();
  v98 = sub_1A6334EEC();
  v99 = sub_1A6335684();
  if (OUTLINED_FUNCTION_862(v99))
  {
    v100 = OUTLINED_FUNCTION_2_4();
    v130 = OUTLINED_FUNCTION_2_4();
    v132[0] = v130;
    *(_DWORD *)v100 = 136446466;
    v101 = OUTLINED_FUNCTION_843();
    v131 = sub_1A61A6A1C(v101, v102, v132);
    sub_1A6335774();
    swift_bridgeObjectRelease();
    *(_WORD *)(v100 + 12) = 2082;
    OUTLINED_FUNCTION_172();
    v131 = sub_1A61A6A1C(v118, v80, v132);
    sub_1A6335774();
    OUTLINED_FUNCTION_37();
    _os_log_impl(&dword_1A6185000, v98, v97, "Fetch took: %{public}s for request: %{public}s", (uint8_t *)v100, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_0_5();
  }

  OUTLINED_FUNCTION_19_0();
  v103 = v115;
  v104 = v109;
  sub_1A618D9C4(v126, v109, (uint64_t (*)(_QWORD))type metadata accessor for Weather);
  v105 = type metadata accessor for Weather();
  OUTLINED_FUNCTION_773(v105);
  v106 = (void *)sub_1A61A62D8();
  a28(v122, v123, v106, v104, 0, v125, a26 & 1);

  sub_1A622D748(v104, (uint64_t *)&unk_1ED21B908);
  (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v117, v111);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v128, v116);
LABEL_32:
  OUTLINED_FUNCTION_5();
}

uint64_t sub_1A621BA50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, char *a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, char *a11, unint64_t a12, void *a13, void *a14, uint64_t a15, unsigned __int8 a16)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  int EnumTagSinglePayload;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  BOOL v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  char *v81;
  unsigned __int8 v82;
  NSObject *v83;
  os_log_type_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  _DWORD v93[2];
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  char *v101;
  unint64_t v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  id v109;
  char *v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;

  v95 = a8;
  v110 = a6;
  v111 = a7;
  v109 = a5;
  v100 = a9;
  v99 = sub_1A6332C24();
  v98 = *(_QWORD *)(v99 - 8);
  MEMORY[0x1E0C80A78](v99);
  v101 = (char *)v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21DA40);
  MEMORY[0x1E0C80A78](v21);
  v97 = (char *)v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v96 = (char *)v93 - v24;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)v93 - v26;
  v28 = sub_1A6334EE0();
  v113 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)v93 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = a1;
  v117 = *(id *)(a1 + qword_1ED21D148);
  sub_1A6334ED4();
  LODWORD(v108) = sub_1A6335708();
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D210);
  v31 = swift_allocObject();
  v103 = xmmword_1A6338E30;
  *(_OWORD *)(v31 + 16) = xmmword_1A6338E30;
  v32 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v31 + 56) = MEMORY[0x1E0DEA968];
  v33 = sub_1A61AD1D4();
  *(_QWORD *)(v31 + 64) = v33;
  v114 = a3;
  v115 = a2;
  *(_QWORD *)(v31 + 32) = a2;
  *(_QWORD *)(v31 + 40) = a3;
  sub_1A6334CDC();
  v106 = a4;
  sub_1A63327E0();
  v34 = sub_1A6332A98();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v27, 1, v34);
  v105 = v34;
  v102 = v33;
  if (EnumTagSinglePayload == 1)
  {
    v36 = v28;
    sub_1A622D748((uint64_t)v27, &qword_1ED21DA40);
    v37 = (uint64_t *)(v31 + 72);
    *(_QWORD *)(v31 + 96) = v32;
    *(_QWORD *)(v31 + 104) = v33;
  }
  else
  {
    v107 = v30;
    v38 = v28;
    v39 = sub_1A6332A14();
    v41 = v40;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v27, v34);
    v37 = (uint64_t *)(v31 + 72);
    *(_QWORD *)(v31 + 96) = v32;
    *(_QWORD *)(v31 + 104) = v33;
    if (v41)
    {
      *v37 = v39;
      v36 = v38;
      v30 = v107;
      v42 = v115;
      goto LABEL_7;
    }
    v36 = v38;
    v30 = v107;
  }
  *v37 = 0;
  v41 = 0xE000000000000000;
  v42 = v115;
LABEL_7:
  *(_QWORD *)(v31 + 80) = v41;
  sub_1A6334EC8();
  swift_bridgeObjectRelease();
  v43 = objc_msgSend(v109, sel_MIMEType);
  if (v43)
  {
    v44 = v43;
    sub_1A6335300();

  }
  else
  {
    sub_1A6334CDC();
  }
  v45 = v112;
  sub_1A61FA664(v110, v111, &v120);
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v113 + 8))(v30, v36);
    return swift_bridgeObjectRelease();
  }
  v112 = 0;
  swift_bridgeObjectRelease();
  sub_1A63356FC();
  v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = v103;
  v48 = v102;
  *(_QWORD *)(v47 + 56) = v32;
  *(_QWORD *)(v47 + 64) = v48;
  *(_QWORD *)(v47 + 32) = v42;
  *(_QWORD *)(v47 + 40) = v114;
  sub_1A6334CDC();
  v49 = (uint64_t)v96;
  sub_1A63327E0();
  v50 = v105;
  if (__swift_getEnumTagSinglePayload(v49, 1, v105) == 1)
  {
    sub_1A622D748(v49, &qword_1ED21DA40);
    v51 = (uint64_t *)(v47 + 72);
    *(_QWORD *)(v47 + 96) = v32;
    *(_QWORD *)(v47 + 104) = v48;
  }
  else
  {
    v52 = sub_1A6332A14();
    v53 = v49;
    v54 = v52;
    v56 = v55;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v53, v50);
    v51 = (uint64_t *)(v47 + 72);
    *(_QWORD *)(v47 + 96) = v32;
    *(_QWORD *)(v47 + 104) = v48;
    if (v56)
    {
      *v51 = v54;
      goto LABEL_17;
    }
  }
  *v51 = 0;
  v56 = 0xE000000000000000;
LABEL_17:
  *(_QWORD *)(v47 + 80) = v56;
  sub_1A6334EC8();
  swift_bridgeObjectRelease();
  if (qword_1ED21D318 != -1)
    swift_once();
  v108 = a10;
  v57 = sub_1A6334F04();
  v58 = __swift_project_value_buffer(v57, (uint64_t)qword_1ED22A3C0);
  v59 = (unint64_t)v114;
  swift_bridgeObjectRetain_n();
  v96 = (char *)v58;
  v60 = sub_1A6334EEC();
  v61 = sub_1A633569C();
  v62 = os_log_type_enabled(v60, v61);
  v94 = v36;
  if (v62)
  {
    v63 = (uint8_t *)swift_slowAlloc();
    v64 = swift_slowAlloc();
    v119 = v64;
    *(_DWORD *)v63 = 136446210;
    sub_1A6334CDC();
    v65 = v115;
    v118 = sub_1A61A6A1C(v115, (unint64_t)v114, &v119);
    v59 = (unint64_t)v114;
    v66 = v102;
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v60, v61, "Created response model for request: %{public}s", v63, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v64, -1, -1);
    MEMORY[0x1A85BEFA8](v63, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    v65 = v115;
    v66 = v102;
  }
  v114 = a13;
  v115 = a15;
  v111 = a12;
  v109 = a14;
  v110 = a11;
  v93[1] = sub_1A63356FC();
  v67 = swift_allocObject();
  *(_OWORD *)(v67 + 16) = v103;
  v68 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v67 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v67 + 64) = v66;
  *(_QWORD *)(v67 + 32) = v65;
  *(_QWORD *)(v67 + 40) = v59;
  sub_1A6334CDC();
  v69 = v66;
  v70 = (uint64_t)v97;
  sub_1A63327E0();
  v71 = v105;
  v72 = __swift_getEnumTagSinglePayload(v70, 1, v105);
  v73 = v65;
  v107 = v30;
  if (v72 == 1)
  {
    sub_1A622D748(v70, &qword_1ED21DA40);
    v74 = (uint64_t *)(v67 + 72);
    *(_QWORD *)(v67 + 96) = v68;
    *(_QWORD *)(v67 + 104) = v69;
LABEL_26:
    v81 = v101;
    *v74 = 0;
    v80 = 0xE000000000000000;
    goto LABEL_27;
  }
  v75 = v71;
  v76 = sub_1A6332A14();
  v77 = v70;
  v78 = v76;
  v80 = v79;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 8))(v77, v75);
  v74 = (uint64_t *)(v67 + 72);
  *(_QWORD *)(v67 + 96) = v68;
  *(_QWORD *)(v67 + 104) = v69;
  if (!v80)
    goto LABEL_26;
  *v74 = v78;
  v81 = v101;
LABEL_27:
  v82 = a16;
  *(_QWORD *)(v67 + 80) = v80;
  sub_1A6334EC8();
  swift_bridgeObjectRelease();
  sub_1A6332C0C();
  sub_1A6332B58();
  swift_bridgeObjectRetain_n();
  v83 = sub_1A6334EEC();
  v84 = sub_1A6335684();
  if (os_log_type_enabled(v83, v84))
  {
    v85 = swift_slowAlloc();
    v86 = swift_slowAlloc();
    LODWORD(v117) = a16;
    v87 = v86;
    v119 = v86;
    *(_DWORD *)v85 = 136446466;
    v88 = Double.humanReadableDescription.getter();
    v118 = sub_1A61A6A1C(v88, v89, &v119);
    sub_1A6335774();
    swift_bridgeObjectRelease();
    *(_WORD *)(v85 + 12) = 2082;
    sub_1A6334CDC();
    v82 = v117;
    v118 = sub_1A61A6A1C(v73, v59, &v119);
    v81 = v101;
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v83, v84, "Fetch took: %{public}s for request: %{public}s", (uint8_t *)v85, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v87, -1, -1);
    MEMORY[0x1A85BEFA8](v85, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v90 = v94;
  v91 = v120;
  swift_retain();
  v92 = (void *)sub_1A61A62D8();
  sub_1A621805C((uint64_t)v110, v111, v114, v92, v91, 0, v115, v82 & 1);
  swift_release();

  (*(void (**)(char *, uint64_t))(v98 + 8))(v81, v99);
  result = (*(uint64_t (**)(char *, uint64_t))(v113 + 8))(v107, v90);
  *v100 = v120;
  return result;
}

uint64_t sub_1A621C474@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void (*v37)(char *, uint64_t);
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47[6];

  v42 = (char *)a3;
  v5 = sub_1A6334010();
  v44 = *(_QWORD *)(v5 - 8);
  v45 = (char *)v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A633404C();
  v41 = *(char **)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v40 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v39 - v11;
  v13 = sub_1A6332C24();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v39 - v18;
  sub_1A6332C0C();
  sub_1A61A6288(a1, a2);
  v47[3] = sub_1A6333BD8();
  v47[4] = v20;
  v47[5] = v21;
  sub_1A6334004();
  v22 = v43;
  sub_1A6333FF8();
  if (v22)
  {
    (*(void (**)(char *, char *))(v44 + 8))(v7, v45);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  }
  else
  {
    v43 = v14;
    (*(void (**)(char *, char *))(v44 + 8))(v7, v45);
    v25 = v40;
    v24 = v41;
    v26 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v41 + 2);
    v45 = v12;
    v26(v40, v12, v8);
    type metadata accessor for DailySummaryModelFactory();
    swift_initStackObject();
    sub_1A6270428((uint64_t)v42);
    v44 = *((_QWORD *)v24 + 1);
    ((void (*)(char *, uint64_t))v44)(v25, v8);
    sub_1A6332C0C();
    sub_1A6332B58();
    v27 = v19;
    if (qword_1ED21D318 != -1)
      swift_once();
    v28 = v8;
    v29 = sub_1A6334F04();
    __swift_project_value_buffer(v29, (uint64_t)qword_1ED22A3C0);
    v30 = sub_1A6334EEC();
    v31 = sub_1A6335684();
    v32 = v13;
    if (os_log_type_enabled(v30, v31))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v47[0] = v34;
      v42 = v16;
      *(_DWORD *)v33 = 136446210;
      v40 = (char *)(v33 + 4);
      v35 = Double.humanReadableDescription.getter();
      v41 = v27;
      v46 = sub_1A61A6A1C(v35, v36, v47);
      sub_1A6335774();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A6185000, v30, v31, "Flatbuffer decoding took: %{public}s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85BEFA8](v34, -1, -1);
      MEMORY[0x1A85BEFA8](v33, -1, -1);

      v37 = *(void (**)(char *, uint64_t))(v43 + 8);
      v37(v42, v32);
      ((void (*)(char *, uint64_t))v44)(v45, v28);
      swift_release();
      return ((uint64_t (*)(char *, uint64_t))v37)(v41, v32);
    }
    else
    {

      v38 = *(void (**)(char *, uint64_t))(v43 + 8);
      v38(v16, v13);
      ((void (*)(char *, uint64_t))v44)(v45, v28);
      swift_release();
      return ((uint64_t (*)(char *, uint64_t))v38)(v27, v13);
    }
  }
}

void *sub_1A621C888@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  void *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  char *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE __src[176];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v38 = a3;
  v5 = sub_1A6334010();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A6332C24();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v35 - v14;
  sub_1A6332C0C();
  sub_1A61A6288(a1, a2);
  v43 = sub_1A6333BD8();
  v44 = v16;
  v45 = v17;
  sub_1A6334004();
  sub_1A61F80D4();
  sub_1A61F8114();
  v18 = v39;
  sub_1A6333FF8();
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_release();
    return (void *)(*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  else
  {
    v20 = v10;
    v39 = v9;
    v21 = v38;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_retain();
    sub_1A6220988();
    v22 = v12;
    sub_1A6332C0C();
    v23 = v15;
    sub_1A6332B58();
    v24 = v20;
    if (qword_1ED21D318 != -1)
      swift_once();
    v25 = sub_1A6334F04();
    __swift_project_value_buffer(v25, (uint64_t)qword_1ED22A3C0);
    v26 = sub_1A6334EEC();
    v27 = sub_1A6335684();
    if (os_log_type_enabled(v26, v27))
    {
      v37 = v22;
      v28 = (uint8_t *)swift_slowAlloc();
      v41 = swift_slowAlloc();
      v36 = v24;
      v29 = v41;
      *(_DWORD *)v28 = 136446210;
      v35 = v28 + 4;
      v30 = Double.humanReadableDescription.getter();
      v40 = sub_1A61A6A1C(v30, v31, &v41);
      sub_1A6335774();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A6185000, v26, v27, "Flatbuffer decoding took: %{public}s", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85BEFA8](v29, -1, -1);
      MEMORY[0x1A85BEFA8](v28, -1, -1);

      v32 = *(void (**)(char *, uint64_t))(v36 + 8);
      v33 = v37;
    }
    else
    {

      v32 = *(void (**)(char *, uint64_t))(v24 + 8);
      v33 = v22;
    }
    v34 = v39;
    v32(v33, v39);
    swift_release();
    swift_release();
    v32(v23, v34);
    return memcpy(v21, __src, 0xB0uLL);
  }
}

char *sub_1A621CC80(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint8_t *v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[7];

  v5 = sub_1A6334010();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1A6332C24();
  v9 = *(_QWORD *)(v32 - 8);
  v10 = MEMORY[0x1E0C80A78](v32);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v29 - v13;
  sub_1A6332C0C();
  sub_1A61A6288(a1, a2);
  v34[4] = sub_1A6333BD8();
  v34[5] = v15;
  v34[6] = v16;
  sub_1A6334004();
  sub_1A61F80D4();
  sub_1A61F8114();
  sub_1A6333FF8();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v32);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_retain();
    v8 = (char *)sub_1A6220AA8();
    v18 = v12;
    sub_1A6332C0C();
    sub_1A6332B58();
    if (qword_1ED21D318 != -1)
      swift_once();
    v19 = sub_1A6334F04();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED22A3C0);
    v20 = sub_1A6334EEC();
    v21 = sub_1A6335684();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v34[0] = v31;
      v30 = v22;
      *(_DWORD *)v22 = 136446210;
      v29 = v22 + 4;
      v23 = Double.humanReadableDescription.getter();
      v33 = sub_1A61A6A1C(v23, v24, v34);
      sub_1A6335774();
      swift_bridgeObjectRelease();
      v25 = v30;
      _os_log_impl(&dword_1A6185000, v20, v21, "Flatbuffer decoding took: %{public}s", v30, 0xCu);
      v26 = v31;
      swift_arrayDestroy();
      MEMORY[0x1A85BEFA8](v26, -1, -1);
      MEMORY[0x1A85BEFA8](v25, -1, -1);
    }

    v27 = *(void (**)(char *, uint64_t))(v9 + 8);
    v28 = v32;
    v27(v18, v32);
    swift_release();
    swift_release();
    v27(v14, v28);
  }
  return v8;
}

uint64_t sub_1A621CFF0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  uint64_t v30;
  _QWORD v31[2];
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[7];

  v32 = a3;
  v6 = sub_1A6334010();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1A6332C24();
  v10 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v31 - v14;
  sub_1A6332C0C();
  sub_1A61A6288(a1, a2);
  v35[4] = sub_1A6333BD8();
  v35[5] = v16;
  v35[6] = v17;
  sub_1A6334004();
  sub_1A61F80D4();
  sub_1A61F8114();
  sub_1A6333FF8();
  if (v3)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v33);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_retain();
    sub_1A62208F8();
    v19 = v12;
    sub_1A6332C0C();
    sub_1A6332B58();
    if (qword_1ED21D318 != -1)
      swift_once();
    v20 = sub_1A6334F04();
    __swift_project_value_buffer(v20, (uint64_t)qword_1ED22A3C0);
    v21 = sub_1A6334EEC();
    v22 = sub_1A6335684();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc();
      v32 = v19;
      v24 = (uint8_t *)v23;
      v25 = swift_slowAlloc();
      v35[0] = v25;
      *(_DWORD *)v24 = 136446210;
      v31[1] = v24 + 4;
      v26 = Double.humanReadableDescription.getter();
      v34 = sub_1A61A6A1C(v26, v27, v35);
      sub_1A6335774();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A6185000, v21, v22, "Flatbuffer decoding took: %{public}s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85BEFA8](v25, -1, -1);
      MEMORY[0x1A85BEFA8](v24, -1, -1);

      v28 = *(void (**)(char *, uint64_t))(v10 + 8);
      v29 = v32;
    }
    else
    {

      v28 = *(void (**)(char *, uint64_t))(v10 + 8);
      v29 = v19;
    }
    v30 = v33;
    v28(v29, v33);
    swift_release();
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v28)(v15, v30);
  }
}

uint64_t sub_1A621D364@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void (*v37)(char *, uint64_t);
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47[6];

  v42 = (char *)a3;
  v5 = sub_1A6334010();
  v44 = *(_QWORD *)(v5 - 8);
  v45 = (char *)v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A6333B9C();
  v41 = *(char **)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v40 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v39 - v11;
  v13 = sub_1A6332C24();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v39 - v18;
  sub_1A6332C0C();
  sub_1A61A6288(a1, a2);
  v47[3] = sub_1A6333BD8();
  v47[4] = v20;
  v47[5] = v21;
  sub_1A6334004();
  v22 = v43;
  sub_1A6333FF8();
  if (v22)
  {
    (*(void (**)(char *, char *))(v44 + 8))(v7, v45);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  }
  else
  {
    v43 = v14;
    (*(void (**)(char *, char *))(v44 + 8))(v7, v45);
    v25 = v40;
    v24 = v41;
    v26 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v41 + 2);
    v45 = v12;
    v26(v40, v12, v8);
    type metadata accessor for DailyStatisticsModelFactory();
    swift_initStackObject();
    sub_1A6231DF0((uint64_t)v42);
    v44 = *((_QWORD *)v24 + 1);
    ((void (*)(char *, uint64_t))v44)(v25, v8);
    sub_1A6332C0C();
    sub_1A6332B58();
    v27 = v19;
    if (qword_1ED21D318 != -1)
      swift_once();
    v28 = v8;
    v29 = sub_1A6334F04();
    __swift_project_value_buffer(v29, (uint64_t)qword_1ED22A3C0);
    v30 = sub_1A6334EEC();
    v31 = sub_1A6335684();
    v32 = v13;
    if (os_log_type_enabled(v30, v31))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v47[0] = v34;
      v42 = v16;
      *(_DWORD *)v33 = 136446210;
      v40 = (char *)(v33 + 4);
      v35 = Double.humanReadableDescription.getter();
      v41 = v27;
      v46 = sub_1A61A6A1C(v35, v36, v47);
      sub_1A6335774();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A6185000, v30, v31, "Flatbuffer decoding took: %{public}s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85BEFA8](v34, -1, -1);
      MEMORY[0x1A85BEFA8](v33, -1, -1);

      v37 = *(void (**)(char *, uint64_t))(v43 + 8);
      v37(v42, v32);
      ((void (*)(char *, uint64_t))v44)(v45, v28);
      swift_release();
      return ((uint64_t (*)(char *, uint64_t))v37)(v41, v32);
    }
    else
    {

      v38 = *(void (**)(char *, uint64_t))(v43 + 8);
      v38(v16, v13);
      ((void (*)(char *, uint64_t))v44)(v45, v28);
      swift_release();
      return ((uint64_t (*)(char *, uint64_t))v38)(v27, v13);
    }
  }
}

uint64_t sub_1A621D778@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void (*v37)(char *, uint64_t);
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47[6];

  v42 = (char *)a3;
  v5 = sub_1A6334010();
  v44 = *(_QWORD *)(v5 - 8);
  v45 = (char *)v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A6332EDC();
  v41 = *(char **)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v40 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v39 - v11;
  v13 = sub_1A6332C24();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v39 - v18;
  sub_1A6332C0C();
  sub_1A61A6288(a1, a2);
  v47[3] = sub_1A6333BD8();
  v47[4] = v20;
  v47[5] = v21;
  sub_1A6334004();
  v22 = v43;
  sub_1A6333FF8();
  if (v22)
  {
    (*(void (**)(char *, char *))(v44 + 8))(v7, v45);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  }
  else
  {
    v43 = v14;
    (*(void (**)(char *, char *))(v44 + 8))(v7, v45);
    v25 = v40;
    v24 = v41;
    v26 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v41 + 2);
    v45 = v12;
    v26(v40, v12, v8);
    type metadata accessor for HourlyStatisticsModelFactory();
    swift_initStackObject();
    sub_1A61C8FD4((uint64_t)v42);
    v44 = *((_QWORD *)v24 + 1);
    ((void (*)(char *, uint64_t))v44)(v25, v8);
    sub_1A6332C0C();
    sub_1A6332B58();
    v27 = v19;
    if (qword_1ED21D318 != -1)
      swift_once();
    v28 = v8;
    v29 = sub_1A6334F04();
    __swift_project_value_buffer(v29, (uint64_t)qword_1ED22A3C0);
    v30 = sub_1A6334EEC();
    v31 = sub_1A6335684();
    v32 = v13;
    if (os_log_type_enabled(v30, v31))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v47[0] = v34;
      v42 = v16;
      *(_DWORD *)v33 = 136446210;
      v40 = (char *)(v33 + 4);
      v35 = Double.humanReadableDescription.getter();
      v41 = v27;
      v46 = sub_1A61A6A1C(v35, v36, v47);
      sub_1A6335774();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A6185000, v30, v31, "Flatbuffer decoding took: %{public}s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85BEFA8](v34, -1, -1);
      MEMORY[0x1A85BEFA8](v33, -1, -1);

      v37 = *(void (**)(char *, uint64_t))(v43 + 8);
      v37(v42, v32);
      ((void (*)(char *, uint64_t))v44)(v45, v28);
      swift_release();
      return ((uint64_t (*)(char *, uint64_t))v37)(v41, v32);
    }
    else
    {

      v38 = *(void (**)(char *, uint64_t))(v43 + 8);
      v38(v16, v13);
      ((void (*)(char *, uint64_t))v44)(v45, v28);
      swift_release();
      return ((uint64_t (*)(char *, uint64_t))v38)(v27, v13);
    }
  }
}

uint64_t sub_1A621DB8C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void (*v37)(char *, uint64_t);
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47[6];

  v42 = (char *)a3;
  v5 = sub_1A6334010();
  v44 = *(_QWORD *)(v5 - 8);
  v45 = (char *)v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A6333254();
  v41 = *(char **)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v40 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v39 - v11;
  v13 = sub_1A6332C24();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v39 - v18;
  sub_1A6332C0C();
  sub_1A61A6288(a1, a2);
  v47[3] = sub_1A6333BD8();
  v47[4] = v20;
  v47[5] = v21;
  sub_1A6334004();
  v22 = v43;
  sub_1A6333FF8();
  if (v22)
  {
    (*(void (**)(char *, char *))(v44 + 8))(v7, v45);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  }
  else
  {
    v43 = v14;
    (*(void (**)(char *, char *))(v44 + 8))(v7, v45);
    v25 = v40;
    v24 = v41;
    v26 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v41 + 2);
    v45 = v12;
    v26(v40, v12, v8);
    type metadata accessor for MonthlyStatisticsModelFactory();
    swift_initStackObject();
    sub_1A6270CFC((uint64_t)v42);
    v44 = *((_QWORD *)v24 + 1);
    ((void (*)(char *, uint64_t))v44)(v25, v8);
    sub_1A6332C0C();
    sub_1A6332B58();
    v27 = v19;
    if (qword_1ED21D318 != -1)
      swift_once();
    v28 = v8;
    v29 = sub_1A6334F04();
    __swift_project_value_buffer(v29, (uint64_t)qword_1ED22A3C0);
    v30 = sub_1A6334EEC();
    v31 = sub_1A6335684();
    v32 = v13;
    if (os_log_type_enabled(v30, v31))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v47[0] = v34;
      v42 = v16;
      *(_DWORD *)v33 = 136446210;
      v40 = (char *)(v33 + 4);
      v35 = Double.humanReadableDescription.getter();
      v41 = v27;
      v46 = sub_1A61A6A1C(v35, v36, v47);
      sub_1A6335774();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A6185000, v30, v31, "Flatbuffer decoding took: %{public}s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85BEFA8](v34, -1, -1);
      MEMORY[0x1A85BEFA8](v33, -1, -1);

      v37 = *(void (**)(char *, uint64_t))(v43 + 8);
      v37(v42, v32);
      ((void (*)(char *, uint64_t))v44)(v45, v28);
      swift_release();
      return ((uint64_t (*)(char *, uint64_t))v37)(v41, v32);
    }
    else
    {

      v38 = *(void (**)(char *, uint64_t))(v43 + 8);
      v38(v16, v13);
      ((void (*)(char *, uint64_t))v44)(v45, v28);
      swift_release();
      return ((uint64_t (*)(char *, uint64_t))v38)(v27, v13);
    }
  }
}

void sub_1A621DFA0()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t HourForecast;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  _QWORD v53[2];
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[4];

  OUTLINED_FUNCTION_649();
  v2 = v1;
  v4 = v3;
  v59 = v5;
  v57 = type metadata accessor for Weather();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_1_0();
  v58 = v7;
  v8 = sub_1A6334010();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_190();
  v9 = sub_1A63333F8();
  v56 = *(_QWORD *)(v9 - 8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_27();
  v55 = v11;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v53 - v13;
  v15 = OUTLINED_FUNCTION_6();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_27();
  v60 = v17;
  MEMORY[0x1E0C80A78](v18);
  v62 = (uint64_t)v53 - v19;
  sub_1A6332C0C();
  sub_1A61A6288(v4, v2);
  v63[1] = sub_1A6333BD8();
  v63[2] = v20;
  v63[3] = v21;
  sub_1A6334004();
  OUTLINED_FUNCTION_8_12();
  sub_1A6333FF8();
  if (v0)
  {
    OUTLINED_FUNCTION_912();
    OUTLINED_FUNCTION_935();
    OUTLINED_FUNCTION_785(v62, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  }
  else
  {
    v53[1] = v16;
    v61 = v15;
    OUTLINED_FUNCTION_912();
    v23 = v55;
    v22 = v56;
    v24 = *(void (**)(uint64_t, char *, uint64_t))(v56 + 16);
    v54 = v14;
    v24(v55, v14, v9);
    v25 = type metadata accessor for AirQuality();
    v26 = v59;
    OUTLINED_FUNCTION_5_4(v59, v27, v28, v25);
    v29 = v57;
    OUTLINED_FUNCTION_521();
    v30 = type metadata accessor for CurrentWeather();
    OUTLINED_FUNCTION_113(v30);
    OUTLINED_FUNCTION_521();
    v31 = type metadata accessor for DailyForecast();
    OUTLINED_FUNCTION_113(v31);
    OUTLINED_FUNCTION_521();
    v32 = type metadata accessor for HourlyForecast();
    OUTLINED_FUNCTION_113(v32);
    OUTLINED_FUNCTION_521();
    HourForecast = type metadata accessor for NextHourForecast();
    OUTLINED_FUNCTION_113(HourForecast);
    OUTLINED_FUNCTION_521();
    v34 = type metadata accessor for LocationInfo();
    OUTLINED_FUNCTION_113(v34);
    OUTLINED_FUNCTION_521();
    v35 = type metadata accessor for MarineForecast();
    OUTLINED_FUNCTION_113(v35);
    OUTLINED_FUNCTION_521();
    v36 = type metadata accessor for News();
    OUTLINED_FUNCTION_113(v36);
    OUTLINED_FUNCTION_521();
    v37 = type metadata accessor for TideEvents();
    OUTLINED_FUNCTION_113(v37);
    OUTLINED_FUNCTION_521();
    v38 = type metadata accessor for WeatherAlerts();
    OUTLINED_FUNCTION_113(v38);
    OUTLINED_FUNCTION_521();
    v39 = type metadata accessor for WeatherChange();
    OUTLINED_FUNCTION_113(v39);
    OUTLINED_FUNCTION_521();
    v40 = type metadata accessor for WeatherComparisons();
    OUTLINED_FUNCTION_113(v40);
    *(_QWORD *)(v26 + *(int *)(v29 + 64)) = 0;
    type metadata accessor for WeatherDaemonModelFactory();
    OUTLINED_FUNCTION_0_4();
    v41 = v58;
    sub_1A6325A78();
    swift_release();
    v42 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v42(v23, v9);
    sub_1A61A72B4(v26, (uint64_t (*)(_QWORD))type metadata accessor for Weather);
    sub_1A618B330(v41, v26, (uint64_t (*)(_QWORD))type metadata accessor for Weather);
    v43 = v60;
    sub_1A6332C0C();
    v44 = v62;
    sub_1A6332B58();
    if (qword_1ED21D318 != -1)
      swift_once();
    v45 = OUTLINED_FUNCTION_30();
    __swift_project_value_buffer(v45, (uint64_t)qword_1ED22A3C0);
    v46 = sub_1A6334EEC();
    v47 = sub_1A6335684();
    if (OUTLINED_FUNCTION_862(v47))
    {
      v48 = (uint8_t *)OUTLINED_FUNCTION_2_4();
      v49 = OUTLINED_FUNCTION_2_4();
      v59 = v9;
      v63[0] = v49;
      *(_DWORD *)v48 = 136446210;
      v50 = OUTLINED_FUNCTION_843();
      v52 = sub_1A61A6A1C(v50, v51, v63);
      OUTLINED_FUNCTION_969(v52);
      sub_1A6335774();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_33(&dword_1A6185000, v46, (os_log_type_t)v26, "Flatbuffer decoding took: %{public}s", v48);
      OUTLINED_FUNCTION_32();
      OUTLINED_FUNCTION_0_5();
    }

    OUTLINED_FUNCTION_750(v43);
    v42((uint64_t)v54, v9);
    OUTLINED_FUNCTION_935();
    OUTLINED_FUNCTION_750(v44);
  }
  OUTLINED_FUNCTION_5();
}

uint64_t sub_1A621E41C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[8];

  v38 = a3;
  v5 = sub_1A6334010();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A6332C24();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v35 - v14;
  sub_1A6332C0C();
  sub_1A61A6288(a1, a2);
  v41[5] = sub_1A6333BD8();
  v41[6] = v16;
  v41[7] = v17;
  sub_1A6334004();
  sub_1A61F80D4();
  sub_1A61F8114();
  v18 = v39;
  sub_1A6333FF8();
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  else
  {
    v20 = v10;
    v39 = v9;
    v21 = v38;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_retain();
    sub_1A6220A18();
    v22 = v12;
    sub_1A6332C0C();
    v23 = v15;
    sub_1A6332B58();
    v24 = v20;
    if (qword_1ED21D318 != -1)
      swift_once();
    v25 = sub_1A6334F04();
    __swift_project_value_buffer(v25, (uint64_t)qword_1ED22A3C0);
    v26 = sub_1A6334EEC();
    v27 = sub_1A6335684();
    if (os_log_type_enabled(v26, v27))
    {
      v37 = v22;
      v28 = (uint8_t *)swift_slowAlloc();
      v41[0] = swift_slowAlloc();
      v36 = v24;
      v29 = v41[0];
      *(_DWORD *)v28 = 136446210;
      v35 = v28 + 4;
      v30 = Double.humanReadableDescription.getter();
      v40 = sub_1A61A6A1C(v30, v31, v41);
      sub_1A6335774();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A6185000, v26, v27, "Flatbuffer decoding took: %{public}s", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85BEFA8](v29, -1, -1);
      MEMORY[0x1A85BEFA8](v28, -1, -1);

      v32 = v37;
      v33 = *(void (**)(char *, uint64_t))(v36 + 8);
    }
    else
    {

      v33 = *(void (**)(char *, uint64_t))(v24 + 8);
      v32 = v22;
    }
    v34 = v39;
    v33(v32, v39);
    swift_release();
    swift_release();
    result = ((uint64_t (*)(char *, uint64_t))v33)(v23, v34);
    *v21 = v41[1];
  }
  return result;
}

void *sub_1A621E7C8@<X0>(char *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  uint8_t *v27;
  void *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE __src[176];

  v30 = a2;
  v29 = a1;
  v28 = a3;
  v3 = sub_1A633281C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint8_t **)((char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_1A6332C24();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v27 - v12;
  sub_1A6332C0C();
  sub_1A633284C();
  swift_allocObject();
  sub_1A6332840();
  *v6 = sub_1A621F788;
  v6[1] = 0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0CAE030], v3);
  sub_1A6332828();
  sub_1A622DA74();
  v14 = v31;
  sub_1A6332834();
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    return (void *)swift_release();
  }
  else
  {
    v31 = v8;
    v30 = v7;
    sub_1A6332C0C();
    sub_1A6332B58();
    v16 = v13;
    if (qword_1ED21D318 != -1)
      swift_once();
    v17 = sub_1A6334F04();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED22A3C0);
    v18 = sub_1A6334EEC();
    v19 = sub_1A6335684();
    if (os_log_type_enabled(v18, v19))
    {
      v29 = v10;
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v33 = v21;
      *(_DWORD *)v20 = 136446210;
      v27 = v20 + 4;
      v22 = Double.humanReadableDescription.getter();
      v32 = sub_1A61A6A1C(v22, v23, &v33);
      sub_1A6335774();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A6185000, v18, v19, "JSON decoding took: %{public}s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85BEFA8](v21, -1, -1);
      MEMORY[0x1A85BEFA8](v20, -1, -1);

      swift_release();
      v24 = *(void (**)(char *, uint64_t))(v31 + 8);
      v25 = v29;
    }
    else
    {

      swift_release();
      v24 = *(void (**)(char *, uint64_t))(v31 + 8);
      v25 = v10;
    }
    v26 = v30;
    v24(v25, v30);
    v24(v16, v26);
    return memcpy(v28, __src, 0xB0uLL);
  }
}

uint64_t sub_1A621EB5C(char *a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  _QWORD v25[2];
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[2];

  v27 = a2;
  v26 = a1;
  v2 = sub_1A633281C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (_QWORD *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_1A6332C24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v25 - v11;
  sub_1A6332C0C();
  sub_1A633284C();
  swift_allocObject();
  sub_1A6332840();
  *v5 = sub_1A621F7AC;
  v5[1] = 0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CAE030], v2);
  sub_1A6332828();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED219590);
  sub_1A622E5F0();
  v13 = v28;
  sub_1A6332834();
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    return swift_release();
  }
  else
  {
    v28 = v7;
    sub_1A6332C0C();
    sub_1A6332B58();
    if (qword_1ED21D318 != -1)
      swift_once();
    v15 = sub_1A6334F04();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED22A3C0);
    v16 = sub_1A6334EEC();
    v17 = sub_1A6335684();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v26 = v10;
      v27 = v12;
      v19 = (uint8_t *)v18;
      v20 = swift_slowAlloc();
      v30[0] = v20;
      *(_DWORD *)v19 = 136446210;
      v25[1] = v19 + 4;
      v21 = Double.humanReadableDescription.getter();
      v29 = sub_1A61A6A1C(v21, v22, v30);
      sub_1A6335774();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A6185000, v16, v17, "JSON decoding took: %{public}s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85BEFA8](v20, -1, -1);
      MEMORY[0x1A85BEFA8](v19, -1, -1);

      swift_release();
      v23 = *(void (**)(char *, uint64_t))(v28 + 8);
      v23(v26, v6);
      v24 = v27;
    }
    else
    {

      swift_release();
      v23 = *(void (**)(char *, uint64_t))(v28 + 8);
      v23(v10, v6);
      v24 = v12;
    }
    v23(v24, v6);
    return v30[1];
  }
}

void sub_1A621EE9C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  void (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(_QWORD);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_649();
  v32 = v3;
  v33 = v2;
  v29 = v4;
  v30 = v5;
  v28 = v6;
  v34 = v7;
  v31 = v8;
  v9 = sub_1A633281C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_623();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_919();
  v17 = v15 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v28 - v19;
  sub_1A6332C0C();
  sub_1A633284C();
  OUTLINED_FUNCTION_1_1();
  sub_1A6332840();
  *v12 = v28;
  v12[1] = 0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0CAE030], v9);
  sub_1A6332828();
  v29(0);
  sub_1A622D268(v30);
  sub_1A6332834();
  if (v0)
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v20, v13);
    swift_release();
  }
  else
  {
    v34 = v1;
    v35 = v13;
    sub_1A6332C0C();
    sub_1A6332B58();
    if (qword_1ED21D318 != -1)
      swift_once();
    v21 = OUTLINED_FUNCTION_30();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED22A3C0);
    v22 = sub_1A6334EEC();
    v23 = sub_1A6335684();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)OUTLINED_FUNCTION_2_4();
      v25 = OUTLINED_FUNCTION_2_4();
      v32 = v17;
      v33 = v20;
      v37 = v25;
      *(_DWORD *)v24 = 136446210;
      v26 = OUTLINED_FUNCTION_843();
      v36 = sub_1A61A6A1C(v26, v27, &v37);
      OUTLINED_FUNCTION_981();
      OUTLINED_FUNCTION_327();
      OUTLINED_FUNCTION_33(&dword_1A6185000, v22, v23, "JSON decoding took: %{public}s", v24);
      OUTLINED_FUNCTION_32();
      OUTLINED_FUNCTION_0_5();
    }

    swift_release();
    OUTLINED_FUNCTION_750(v17);
    OUTLINED_FUNCTION_750((uint64_t)v20);
  }
  OUTLINED_FUNCTION_5();
}

uint64_t sub_1A621F16C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  uint64_t v25;
  uint8_t *v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[2];

  v29 = a2;
  v27 = a3;
  v28 = a1;
  v3 = sub_1A633281C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint8_t **)((char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_1A6332C24();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v26 - v12;
  sub_1A6332C0C();
  sub_1A633284C();
  swift_allocObject();
  sub_1A6332840();
  *v6 = sub_1A621FAEC;
  v6[1] = 0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0CAE030], v3);
  sub_1A6332828();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE845EA0);
  sub_1A622E5C0((uint64_t)&qword_1EE845E98);
  v14 = v30;
  sub_1A6332834();
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    return swift_release();
  }
  else
  {
    v29 = v7;
    v30 = v8;
    sub_1A6332C0C();
    sub_1A6332B58();
    if (qword_1ED21D318 != -1)
      swift_once();
    v16 = sub_1A6334F04();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED22A3C0);
    v17 = sub_1A6334EEC();
    v18 = sub_1A6335684();
    if (os_log_type_enabled(v17, v18))
    {
      v28 = v10;
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v32[0] = v20;
      *(_DWORD *)v19 = 136446210;
      v26 = v19 + 4;
      v21 = Double.humanReadableDescription.getter();
      v31 = sub_1A61A6A1C(v21, v22, v32);
      sub_1A6335774();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A6185000, v17, v18, "JSON decoding took: %{public}s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85BEFA8](v20, -1, -1);
      MEMORY[0x1A85BEFA8](v19, -1, -1);

      swift_release();
      v23 = *(void (**)(char *, uint64_t))(v30 + 8);
      v24 = v28;
    }
    else
    {

      swift_release();
      v23 = *(void (**)(char *, uint64_t))(v30 + 8);
      v24 = v10;
    }
    v25 = v29;
    v23(v24, v29);
    result = ((uint64_t (*)(char *, uint64_t))v23)(v13, v25);
    *v27 = v32[1];
  }
  return result;
}

uint64_t sub_1A621F4C4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  _QWORD v15[3];
  uint64_t v16;

  v5 = sub_1A6332B70();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v15[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1A6335BD0();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v15, v16);
    sub_1A6335AD4();
    MEMORY[0x1A85BB708]();
    sub_1A6332B64();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRelease();
    v13 = sub_1A6332C24();
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v13) == 1)
    {
      sub_1A622D748((uint64_t)v11, &qword_1ED21D330);
      __swift_project_boxed_opaque_existential_1(v15, v16);
      sub_1A6335AE0();
      sub_1A6332BD0();
    }
    else
    {
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a2, v11, v13);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  return result;
}

uint64_t sub_1A621F788@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A621F7D0(a1, (uint64_t)&unk_1EE846608, a2);
}

uint64_t sub_1A621F7AC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A621F7D0(a1, (uint64_t)&unk_1ED2190A8, a2);
}

uint64_t sub_1A621F7D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char v11;
  _BYTE v12[24];
  uint64_t v13;

  v13 = a2;
  sub_1A6332B70();
  OUTLINED_FUNCTION_623();
  MEMORY[0x1E0C80A78](v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_11();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_1032();
  result = sub_1A6335BD0();
  if (!v3)
  {
    OUTLINED_FUNCTION_970();
    sub_1A6335AD4();
    MEMORY[0x1A85BB708]();
    sub_1A6332B64();
    OUTLINED_FUNCTION_861();
    OUTLINED_FUNCTION_327();
    v10 = OUTLINED_FUNCTION_6();
    __swift_storeEnumTagSinglePayload(v4, 0, 1, v10);
    OUTLINED_FUNCTION_603(v4, 1, v10);
    if (v11)
    {
      sub_1A622D748(v4, &qword_1ED21D330);
      OUTLINED_FUNCTION_970();
      sub_1A6335AE0();
      sub_1A6332BD0();
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a3, v4, v10);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  return result;
}

uint64_t sub_1A621FA14@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A621F7D0(a1, (uint64_t)&unk_1EE8464C0, a2);
}

uint64_t sub_1A621FA38@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A621F7D0(a1, (uint64_t)&unk_1EE846428, a2);
}

uint64_t sub_1A621FA5C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A621F7D0(a1, (uint64_t)&unk_1EE8462F8, a2);
}

uint64_t sub_1A621FA80@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A621F7D0(a1, (uint64_t)&unk_1EE846258, a2);
}

uint64_t sub_1A621FAA4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A621F7D0(a1, (uint64_t)&unk_1ED21B778, a2);
}

uint64_t sub_1A621FAC8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A621F7D0(a1, (uint64_t)&unk_1EE845EF8, a2);
}

uint64_t sub_1A621FAEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A621F7D0(a1, (uint64_t)&unk_1EE846110, a2);
}

void sub_1A621FB10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;

  v12 = type metadata accessor for NetworkTelemetry();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TelemetryActivity();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B9A0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v30 - v22;
  v24 = sub_1A6334D48();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v23, a1, v24);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v15);
  sub_1A61AEF94((uint64_t)v23, (uint64_t)v20, &qword_1ED21B9A0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v15) == 1)
  {
    sub_1A622D748((uint64_t)v23, &qword_1ED21B9A0);
    v23 = v20;
  }
  else
  {
    sub_1A618B330((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for TelemetryActivity);
    v25 = (_QWORD *)(a7 + qword_1ED22A378);
    v26 = *(_QWORD *)(a7 + qword_1ED22A378 + 24);
    v27 = v25[4];
    __swift_project_boxed_opaque_existential_1(v25, v26);
    v28 = a8;
    v29 = &v14[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAA0) + 48)];
    sub_1A618D9C4((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for TelemetryActivity);
    *(_QWORD *)v29 = v28;
    v29[8] = a9 & 1;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v14, v26, v27);
    sub_1A61A72B4((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for NetworkTelemetry);
    sub_1A61A72B4((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for TelemetryActivity);
  }
  sub_1A622D748((uint64_t)v23, &qword_1ED21B9A0);
}

void sub_1A621FD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a5;
  v9 = type metadata accessor for NetworkTelemetry();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TelemetryActivity();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B9A0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v26 - v19;
  v21 = sub_1A6334D48();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v20, a1, v21);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v12);
  sub_1A61AEF94((uint64_t)v20, (uint64_t)v17, &qword_1ED21B9A0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v12) == 1)
  {
    sub_1A622D748((uint64_t)v20, &qword_1ED21B9A0);
    v20 = v17;
  }
  else
  {
    sub_1A618B330((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for TelemetryActivity);
    v22 = (_QWORD *)(a4 + qword_1ED22A378);
    v23 = *(_QWORD *)(a4 + qword_1ED22A378 + 24);
    v24 = v22[4];
    __swift_project_boxed_opaque_existential_1(v22, v23);
    v25 = &v11[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAA0) + 48)];
    sub_1A618D9C4((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for TelemetryActivity);
    *(_QWORD *)v25 = v27;
    v25[8] = a6 & 1;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v11, v23, v24);
    sub_1A61A72B4((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for NetworkTelemetry);
    sub_1A61A72B4((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for TelemetryActivity);
  }
  sub_1A622D748((uint64_t)v20, &qword_1ED21B9A0);
}

void sub_1A621FFC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a5;
  v9 = type metadata accessor for NetworkTelemetry();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TelemetryActivity();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B9A0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v26 - v19;
  v21 = sub_1A6334D48();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v20, a1, v21);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v12);
  sub_1A61AEF94((uint64_t)v20, (uint64_t)v17, &qword_1ED21B9A0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v12) == 1)
  {
    sub_1A622D748((uint64_t)v20, &qword_1ED21B9A0);
    v20 = v17;
  }
  else
  {
    sub_1A618B330((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for TelemetryActivity);
    v22 = (_QWORD *)(a4 + qword_1ED22A378);
    v23 = *(_QWORD *)(a4 + qword_1ED22A378 + 24);
    v24 = v22[4];
    __swift_project_boxed_opaque_existential_1(v22, v23);
    v25 = &v11[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAA0) + 48)];
    sub_1A618D9C4((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for TelemetryActivity);
    *(_QWORD *)v25 = v27;
    v25[8] = a6 & 1;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v11, v23, v24);
    sub_1A61A72B4((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for NetworkTelemetry);
    sub_1A61A72B4((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for TelemetryActivity);
  }
  sub_1A622D748((uint64_t)v20, &qword_1ED21B9A0);
}

void sub_1A622021C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _DWORD v30[2];
  uint64_t v31;

  OUTLINED_FUNCTION_5_13();
  v30[1] = v2;
  v31 = v3;
  v5 = v4;
  v7 = v6;
  type metadata accessor for NetworkTelemetry();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v8);
  v9 = OUTLINED_FUNCTION_700();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_2_3();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_919();
  v14 = v12 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v30 - v16;
  v18 = sub_1A6334D48();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v17, v7, v18);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v9);
  sub_1A61AEF94((uint64_t)v17, v14, &qword_1ED21B9A0);
  v19 = OUTLINED_FUNCTION_603(v14, 1, v9);
  if (v20)
  {
    OUTLINED_FUNCTION_360(v19, &qword_1ED21B9A0);
  }
  else
  {
    v21 = OUTLINED_FUNCTION_1032();
    sub_1A618B330(v21, v22, (uint64_t (*)(_QWORD))type metadata accessor for TelemetryActivity);
    v23 = (_QWORD *)(v5 + qword_1ED22A378);
    v24 = *(_QWORD *)(v5 + qword_1ED22A378 + 24);
    v25 = v23[4];
    __swift_project_boxed_opaque_existential_1(v23, v24);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAA0);
    v26 = OUTLINED_FUNCTION_968();
    sub_1A618D9C4(v26, v27, (uint64_t (*)(_QWORD))type metadata accessor for TelemetryActivity);
    OUTLINED_FUNCTION_571();
    v28 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v0, v24, v25);
    OUTLINED_FUNCTION_856(v28, (uint64_t (*)(_QWORD))type metadata accessor for NetworkTelemetry);
    OUTLINED_FUNCTION_678(v1);
  }
  OUTLINED_FUNCTION_360(v29, &qword_1ED21B9A0);
  OUTLINED_FUNCTION_7();
}

void sub_1A62203D0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;

  OUTLINED_FUNCTION_5_13();
  v31 = v2;
  v32 = v3;
  v30 = v4;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  type metadata accessor for NetworkTelemetry();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v11);
  v12 = OUTLINED_FUNCTION_700();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_2_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B9A0);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_919();
  v17 = v15 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v29 - v19;
  sub_1A62207BC(v8, v10, v6, (uint64_t)&v29 - v19);
  sub_1A61AEF94((uint64_t)v20, v17, &qword_1ED21B9A0);
  v21 = OUTLINED_FUNCTION_603(v17, 1, v12);
  if (v22)
  {
    OUTLINED_FUNCTION_124(v21, &qword_1ED21B9A0);
  }
  else
  {
    sub_1A618B330(v17, v1, (uint64_t (*)(_QWORD))type metadata accessor for TelemetryActivity);
    v23 = *(_QWORD *)(v30 + qword_1ED22A378 + 24);
    v24 = *(_QWORD *)(v30 + qword_1ED22A378 + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v30 + qword_1ED22A378), v23);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAA0);
    v25 = OUTLINED_FUNCTION_968();
    OUTLINED_FUNCTION_20_2(v25, v26);
    OUTLINED_FUNCTION_571();
    v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v0, v23, v24);
    OUTLINED_FUNCTION_856(v27, (uint64_t (*)(_QWORD))type metadata accessor for NetworkTelemetry);
    sub_1A61A72B4(v1, (uint64_t (*)(_QWORD))type metadata accessor for TelemetryActivity);
  }
  OUTLINED_FUNCTION_124(v28, &qword_1ED21B9A0);
  OUTLINED_FUNCTION_7();
}

void sub_1A6220564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a6;
  v10 = type metadata accessor for NetworkTelemetry();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TelemetryActivity();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B9A0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v27 - v20;
  v22 = sub_1A6334D48();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v21, a1, v22);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v13);
  sub_1A61AEF94((uint64_t)v21, (uint64_t)v18, &qword_1ED21B9A0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v13) == 1)
  {
    sub_1A622D748((uint64_t)v21, &qword_1ED21B9A0);
    v21 = v18;
  }
  else
  {
    sub_1A618B330((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for TelemetryActivity);
    v23 = (_QWORD *)(a5 + qword_1ED22A378);
    v24 = *(_QWORD *)(a5 + qword_1ED22A378 + 24);
    v25 = v23[4];
    __swift_project_boxed_opaque_existential_1(v23, v24);
    v26 = &v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAA0) + 48)];
    sub_1A618D9C4((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for TelemetryActivity);
    *(_QWORD *)v26 = v28;
    v26[8] = a7 & 1;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v12, v24, v25);
    sub_1A61A72B4((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for NetworkTelemetry);
    sub_1A61A72B4((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for TelemetryActivity);
  }
  sub_1A622D748((uint64_t)v21, &qword_1ED21B9A0);
}

uint64_t sub_1A62207BC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED21B908);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_918();
  v11 = *a1;
  v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B8A8) + 48);
  OUTLINED_FUNCTION_473();
  v13 = sub_1A6334D48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a4, a2, v13);
  *(_QWORD *)(a4 + v12) = v11;
  sub_1A61AEF94(a3, v4, (uint64_t *)&unk_1ED21B908);
  OUTLINED_FUNCTION_2_8();
  if (OUTLINED_FUNCTION_57_1(v4) == 1)
  {
    v14 = OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_124(v14, (uint64_t *)&unk_1ED21B908);
    OUTLINED_FUNCTION_957(v5, 1);
  }
  else
  {
    sub_1A618B330(v4, v5, (uint64_t (*)(_QWORD))type metadata accessor for Weather);
    OUTLINED_FUNCTION_957(v5, 0);
    OUTLINED_FUNCTION_6_3();
  }
  v15 = type metadata accessor for TelemetryActivity();
  OUTLINED_FUNCTION_8_3();
  swift_storeEnumTagMultiPayload();
  return __swift_storeEnumTagSinglePayload(a4, 0, 1, v15);
}

uint64_t sub_1A62208F8()
{
  _QWORD *v0;

  sub_1A6335834();
  swift_bridgeObjectRelease();
  sub_1A622C088();
  swift_allocError();
  *v0 = 0xD000000000000029;
  v0[1] = 0x80000001A634A310;
  swift_willThrow();
  return swift_release();
}

uint64_t sub_1A6220988()
{
  _QWORD *v0;

  sub_1A6335834();
  swift_bridgeObjectRelease();
  sub_1A622C088();
  swift_allocError();
  *v0 = 0xD00000000000002CLL;
  v0[1] = 0x80000001A634A340;
  swift_willThrow();
  return swift_release();
}

uint64_t sub_1A6220A18()
{
  _QWORD *v0;

  sub_1A6335834();
  swift_bridgeObjectRelease();
  sub_1A622C088();
  swift_allocError();
  *v0 = 0xD00000000000003FLL;
  v0[1] = 0x80000001A634A2D0;
  swift_willThrow();
  return swift_release();
}

uint64_t sub_1A6220AA8()
{
  _QWORD *v0;

  sub_1A6335834();
  swift_bridgeObjectRelease();
  sub_1A622C088();
  swift_allocError();
  *v0 = 0xD00000000000002BLL;
  v0[1] = 0x80000001A634A370;
  swift_willThrow();
  return swift_release();
}

void sub_1A6220B38()
{
  void (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  void (*v5)(uint64_t, uint64_t, uint64_t);
  void (*v6)(uint64_t, uint64_t, uint64_t);
  void (*v7)(uint64_t, uint64_t, uint64_t);
  void (*v8)(uint64_t, uint64_t, uint64_t);
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char v31;
  uint64_t v32;
  void *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  OUTLINED_FUNCTION_448();
  v59 = v2;
  v60 = v3;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v57 = v0;
  v55 = *(_QWORD *)v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C368);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_190();
  v58 = sub_1A6332DB0();
  v53 = *(_QWORD *)(v58 - 8);
  v11 = *(_QWORD *)(v53 + 64);
  MEMORY[0x1E0C80A78](v58);
  v52 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v56 = (uint64_t)&v49 - v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C510);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = OUTLINED_FUNCTION_644();
  v50 = *(_QWORD *)(v17 - 8);
  v18 = *(_QWORD *)(v50 + 64);
  MEMORY[0x1E0C80A78](v17);
  v51 = (uint64_t)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v49 - v20;
  v22 = OUTLINED_FUNCTION_92();
  v23 = v5;
  sub_1A61AEF94((uint64_t)v5 + *(int *)(v22 + 48), (uint64_t)v16, &qword_1ED21C510);
  v24 = OUTLINED_FUNCTION_603((uint64_t)v16, 1, v17);
  if (v31)
  {
    OUTLINED_FUNCTION_572(v24, &qword_1ED21C510);
    if (qword_1ED21D318 != -1)
      swift_once();
    v25 = OUTLINED_FUNCTION_30();
    v26 = (void *)OUTLINED_FUNCTION_801(v25, (uint64_t)qword_1ED22A3C0);
    v27 = sub_1A6335690();
    if (OUTLINED_FUNCTION_665(v27))
    {
      *(_WORD *)OUTLINED_FUNCTION_2_4() = 0;
      OUTLINED_FUNCTION_0_5();
    }

    sub_1A622A770();
    OUTLINED_FUNCTION_21();
    *v30 = 0xD00000000000002ALL;
    v30[1] = 0x80000001A634A1D0;
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED219610);
    OUTLINED_FUNCTION_1_1();
    OUTLINED_FUNCTION_804();
  }
  else
  {
    sub_1A618B330((uint64_t)v16, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for WeatherInterpolationOptions);
    sub_1A61AEF94((uint64_t)v5 + *(int *)(v22 + 20), v1, &qword_1ED21C368);
    OUTLINED_FUNCTION_603(v1, 1, v58);
    v54 = v21;
    if (v31)
    {
      sub_1A622D748(v1, &qword_1ED21C368);
      if (qword_1ED21D318 != -1)
        swift_once();
      v32 = OUTLINED_FUNCTION_30();
      v33 = (void *)OUTLINED_FUNCTION_801(v32, (uint64_t)qword_1ED22A3C0);
      v34 = sub_1A6335690();
      if (OUTLINED_FUNCTION_665(v34))
      {
        *(_WORD *)OUTLINED_FUNCTION_2_4() = 0;
        OUTLINED_FUNCTION_591(&dword_1A6185000, v35, v36, "missing timeZone ... aborting");
        OUTLINED_FUNCTION_0_5();
      }

      sub_1A622A770();
      OUTLINED_FUNCTION_21();
      *v37 = 0xD000000000000025;
      v37[1] = 0x80000001A634A200;
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED219610);
      OUTLINED_FUNCTION_1_1();
      OUTLINED_FUNCTION_804();
      v48 = (uint64_t)v54;
    }
    else
    {
      v38 = v53;
      v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 32);
      v39 = v56;
      v40 = v58;
      v49(v56, v1, v58);
      OUTLINED_FUNCTION_693();
      MEMORY[0x1E0C80A78](v41);
      *(&v49 - 4) = v57;
      *(&v49 - 3) = v9;
      *(&v49 - 2) = v7;
      *(&v49 - 1) = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CBA8);
      sub_1A6334EA4();
      v42 = v51;
      sub_1A618D9C4((uint64_t)v54, v51, (uint64_t (*)(_QWORD))type metadata accessor for WeatherInterpolationOptions);
      v43 = v52;
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v52, v39, v40);
      v44 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
      v45 = (v18 + *(unsigned __int8 *)(v38 + 80) + v44) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
      v46 = swift_allocObject();
      *(_QWORD *)(v46 + 16) = v9;
      *(_QWORD *)(v46 + 24) = v7;
      sub_1A618B330(v42, v46 + v44, (uint64_t (*)(_QWORD))type metadata accessor for WeatherInterpolationOptions);
      v49(v46 + v45, (uint64_t)v43, v40);
      v47 = (void *)sub_1A6334DD8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED219768);
      sub_1A6334E2C();
      OUTLINED_FUNCTION_639();
      OUTLINED_FUNCTION_2_6();

      OUTLINED_FUNCTION_258(v56, *(uint64_t (**)(uint64_t, uint64_t))(v38 + 8));
      v48 = (uint64_t)v54;
    }
    sub_1A61A72B4(v48, (uint64_t (*)(_QWORD))type metadata accessor for WeatherInterpolationOptions);
  }
  OUTLINED_FUNCTION_20();
}

uint64_t sub_1A622102C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  NSObject *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  _QWORD *v73;

  v65 = a2;
  v66 = a4;
  v64 = a3;
  v62 = type metadata accessor for InterpolationInputProducts();
  MEMORY[0x1E0C80A78](v62);
  v63 = ((char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D0A0);
  MEMORY[0x1E0C80A78](v10);
  v68 = (uint64_t)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DailyForecast();
  MEMORY[0x1E0C80A78](v12);
  v67 = (uint64_t)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for HourlyForecast();
  MEMORY[0x1E0C80A78](v14);
  v70 = (uint64_t)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for WeatherModel();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v69 = (uint64_t)&v62 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v62 - v22;
  MEMORY[0x1E0C80A78](v24);
  v71 = (uint64_t)&v62 - v25;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C3A8);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v62 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v62 - v30;
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v62 - v33;
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v62 - v36;
  v38 = *a1;
  sub_1A61F5FD4(3, v38);
  v72 = v34;
  sub_1A61F5FD4(2, v38);
  sub_1A61AEF94((uint64_t)v37, (uint64_t)v31, &qword_1ED21C3A8);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B8B0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v39) != 1)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v40 = &qword_1ED21B8B0;
      goto LABEL_5;
    }
    v49 = (uint64_t)v31;
    v50 = v71;
    sub_1A618B330(v49, v71, (uint64_t (*)(_QWORD))type metadata accessor for WeatherModel);
    sub_1A618D9C4(v50, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for WeatherModel);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      v51 = v70;
      sub_1A618B330((uint64_t)v23, v70, (uint64_t (*)(_QWORD))type metadata accessor for HourlyForecast);
      sub_1A61AEF94((uint64_t)v72, (uint64_t)v28, &qword_1ED21C3A8);
      if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v39) == 1)
      {
        sub_1A61A72B4(v51, (uint64_t (*)(_QWORD))type metadata accessor for HourlyForecast);
        sub_1A61A72B4(v50, (uint64_t (*)(_QWORD))type metadata accessor for WeatherModel);
        v40 = &qword_1ED21C3A8;
LABEL_20:
        v41 = (uint64_t)v28;
        goto LABEL_6;
      }
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1A61A72B4(v51, (uint64_t (*)(_QWORD))type metadata accessor for HourlyForecast);
        sub_1A61A72B4(v50, (uint64_t (*)(_QWORD))type metadata accessor for WeatherModel);
        v40 = &qword_1ED21B8B0;
        goto LABEL_20;
      }
      v53 = (uint64_t)v28;
      v54 = v69;
      sub_1A618B330(v53, v69, (uint64_t (*)(_QWORD))type metadata accessor for WeatherModel);
      sub_1A618D9C4(v54, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for WeatherModel);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v55 = v67;
        sub_1A618B330((uint64_t)v18, v67, (uint64_t (*)(_QWORD))type metadata accessor for DailyForecast);
        v56 = v68;
        sub_1A622177C(v38, v68);
        v57 = v63;
        sub_1A618D9C4(v51, (uint64_t)v63, (uint64_t (*)(_QWORD))type metadata accessor for HourlyForecast);
        v58 = v62;
        sub_1A618D9C4(v55, (uint64_t)v57 + *(int *)(v62 + 20), (uint64_t (*)(_QWORD))type metadata accessor for DailyForecast);
        sub_1A61AEF94(v56, (uint64_t)v57 + *(int *)(v58 + 24), &qword_1ED21D0A0);
        v59 = sub_1A62219D4(v57, v64, (_QWORD *)(v65 + 32), v66, a5, a6);
        sub_1A61A72B4((uint64_t)v57, (uint64_t (*)(_QWORD))type metadata accessor for InterpolationInputProducts);
        if (v59)
        {
          v73 = v59;
          __swift_instantiateConcreteTypeFromMangledName(qword_1ED219610);
          swift_allocObject();
          v60 = sub_1A6334E5C();
        }
        else
        {
          sub_1A622A770();
          swift_allocError();
          *v61 = 0xD00000000000004CLL;
          v61[1] = 0x80000001A634A280;
          __swift_instantiateConcreteTypeFromMangledName(qword_1ED219610);
          swift_allocObject();
          v60 = sub_1A6334E50();
        }
        v47 = v60;
        sub_1A622D748(v56, &qword_1ED21D0A0);
        sub_1A61A72B4(v55, (uint64_t (*)(_QWORD))type metadata accessor for DailyForecast);
        sub_1A61A72B4(v69, (uint64_t (*)(_QWORD))type metadata accessor for WeatherModel);
        sub_1A61A72B4(v51, (uint64_t (*)(_QWORD))type metadata accessor for HourlyForecast);
        sub_1A61A72B4(v71, (uint64_t (*)(_QWORD))type metadata accessor for WeatherModel);
        goto LABEL_12;
      }
      sub_1A61A72B4(v54, (uint64_t (*)(_QWORD))type metadata accessor for WeatherModel);
      sub_1A61A72B4(v51, (uint64_t (*)(_QWORD))type metadata accessor for HourlyForecast);
      sub_1A61A72B4(v50, (uint64_t (*)(_QWORD))type metadata accessor for WeatherModel);
      v52 = (uint64_t)v18;
    }
    else
    {
      sub_1A61A72B4(v50, (uint64_t (*)(_QWORD))type metadata accessor for WeatherModel);
      v52 = (uint64_t)v23;
    }
    sub_1A61A72B4(v52, (uint64_t (*)(_QWORD))type metadata accessor for WeatherModel);
    goto LABEL_7;
  }
  v40 = &qword_1ED21C3A8;
LABEL_5:
  v41 = (uint64_t)v31;
LABEL_6:
  sub_1A622D748(v41, v40);
LABEL_7:
  if (qword_1ED21D318 != -1)
    swift_once();
  v42 = sub_1A6334F04();
  __swift_project_value_buffer(v42, (uint64_t)qword_1ED22A3C0);
  v43 = sub_1A6334EEC();
  v44 = sub_1A6335690();
  if (os_log_type_enabled(v43, v44))
  {
    v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v45 = 0;
    _os_log_impl(&dword_1A6185000, v43, v44, "Hourly and Daily forecasts missing from WDS fetch, so cannot interpolate", v45, 2u);
    MEMORY[0x1A85BEFA8](v45, -1, -1);
  }

  sub_1A622A770();
  swift_allocError();
  *v46 = 0xD000000000000048;
  v46[1] = 0x80000001A634A230;
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED219610);
  swift_allocObject();
  v47 = sub_1A6334E50();
LABEL_12:
  sub_1A622D748((uint64_t)v72, &qword_1ED21C3A8);
  sub_1A622D748((uint64_t)v37, &qword_1ED21C3A8);
  return v47;
}

void sub_1A622177C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t HourForecast;
  uint64_t v27;

  v4 = type metadata accessor for WeatherModel();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v27 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C3A8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v27 - v14;
  if (*(_QWORD *)(a1 + 16) && (v16 = sub_1A61F73B8(4), (v17 & 1) != 0))
  {
    v18 = v16;
    v19 = *(_QWORD *)(a1 + 56);
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B8B0);
    sub_1A61AEF94(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v18, (uint64_t)v15, &qword_1ED21B8B0);
    v21 = (uint64_t)v15;
    v22 = 0;
    v23 = v20;
  }
  else
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B8B0);
    v21 = (uint64_t)v15;
    v22 = 1;
  }
  __swift_storeEnumTagSinglePayload(v21, v22, 1, v23);
  sub_1A61AED54((uint64_t)v15, (uint64_t)v12, &qword_1ED21C3A8);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B8B0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v24) == 1)
  {
    v25 = &qword_1ED21C3A8;
LABEL_9:
    sub_1A622D748((uint64_t)v12, v25);
    goto LABEL_10;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v25 = &qword_1ED21B8B0;
    goto LABEL_9;
  }
  sub_1A618B330((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WeatherModel);
  sub_1A618B330((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WeatherModel);
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    sub_1A61AED54((uint64_t)v6, a2, &qword_1ED21D0A0);
    return;
  }
  sub_1A61A72B4((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WeatherModel);
LABEL_10:
  HourForecast = type metadata accessor for NextHourForecast();
  __swift_storeEnumTagSinglePayload(a2, 1, 1, HourForecast);
}

_QWORD *sub_1A62219D4(NSObject *a1, uint64_t a2, _QWORD *a3, uint64_t a4, double a5, double a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t (*v53)(_QWORD);
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  NSObject *v61;
  os_log_type_t v62;
  int v63;
  _BOOL4 v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void (*v74)(char *, uint64_t);
  char *v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  os_log_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  _BOOL4 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  void (*v98)(char *, uint64_t);
  uint64_t v99;
  void (*v100)(char *, uint64_t);
  char v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int EnumTagSinglePayload;
  uint64_t v112;
  NSObject *v113;
  os_log_type_t v114;
  uint64_t v115;
  uint8_t *v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char *v120;
  char *v121;
  NSObject *v122;
  os_log_type_t v123;
  char *v124;
  uint8_t *v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char *v129;
  uint64_t v130;
  void (*v131)(char *, char *, uint64_t);
  char *v132;
  NSObject *v133;
  os_log_type_t v134;
  int v135;
  _BOOL4 v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  char *v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  char *v147;
  void (*v148)(char *, uint64_t);
  void (*v149)(char *, uint64_t);
  uint64_t v150;
  unint64_t v151;
  os_log_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  void (*v156)(char *, char *, uint64_t);
  char *v157;
  NSObject *v158;
  os_log_type_t v159;
  int v160;
  _BOOL4 v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  unint64_t v166;
  unint64_t v167;
  char *v168;
  uint64_t v169;
  unint64_t v170;
  unint64_t v171;
  char *v172;
  void (*v173)(char *, uint64_t);
  void (*v174)(char *, uint64_t);
  uint64_t v175;
  unint64_t v176;
  uint64_t v177;
  void (*v178)(char *, uint64_t);
  unint64_t v179;
  void (*v180)(char *, uint64_t);
  uint64_t v182;
  void (*v183)(char *, uint64_t);
  uint64_t v184;
  double *v185;
  _QWORD *v186;
  int v187;
  os_log_t v188;
  uint64_t v189;
  char *v190;
  void (*v191)(char *, char *, uint64_t);
  char *v192;
  char *v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  _QWORD *v208;
  os_log_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  double v213;
  uint64_t v214;

  v209 = a1;
  v210 = a4;
  v208 = a3;
  v200 = a2;
  v201 = sub_1A63328AC();
  v8 = *(_QWORD *)(v201 - 8);
  MEMORY[0x1E0C80A78](v201);
  v192 = (char *)&v182 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v190 = (char *)&v182 - v11;
  MEMORY[0x1E0C80A78](v12);
  v194 = (char *)&v182 - v13;
  MEMORY[0x1E0C80A78](v14);
  v193 = (char *)&v182 - v15;
  MEMORY[0x1E0C80A78](v16);
  v199 = (char *)&v182 - v17;
  MEMORY[0x1E0C80A78](v18);
  v204 = (char *)&v182 - v19;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v182 - v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CBE8);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v182 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v195 = (char *)&v182 - v27;
  v28 = type metadata accessor for CurrentWeather();
  v206 = *(_QWORD *)(v28 - 8);
  v207 = v28;
  MEMORY[0x1E0C80A78](v28);
  v202 = (uint64_t)&v182 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v182 - v31;
  MEMORY[0x1E0C80A78](v33);
  v197 = (uint64_t)&v182 - v34;
  v35 = sub_1A6332C24();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v211 = (char *)&v182 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v38);
  v198 = (char *)&v182 - v39;
  MEMORY[0x1E0C80A78](v40);
  v196 = (uint64_t)&v182 - v41;
  MEMORY[0x1E0C80A78](v42);
  v191 = (void (*)(char *, char *, uint64_t))((char *)&v182 - v43);
  MEMORY[0x1E0C80A78](v44);
  v46 = (char *)&v182 - v45;
  MEMORY[0x1E0C80A78](v47);
  v49 = (char *)&v182 - v48;
  v50 = type metadata accessor for WeatherInterpolationOptions();
  MEMORY[0x1E0C80A78](v50);
  v52 = (char *)&v182 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A618D9C4(v200, (uint64_t)v52, v53);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v200 = v36;
    v54 = &v52[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED219608) + 48)];
    v196 = *(_QWORD *)v54;
    LODWORD(v197) = v54[8];
    v55 = v201;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v22, v52, v201);
    v56 = (_QWORD *)v8;
    if (qword_1ED21D318 != -1)
      goto LABEL_42;
    while (1)
    {
      v57 = sub_1A6334F04();
      v58 = __swift_project_value_buffer(v57, (uint64_t)qword_1ED22A3C0);
      v59 = (void (*)(char *, char *, uint64_t))v56[2];
      v59(v204, v22, v55);
      v60 = v199;
      v191 = v59;
      v59(v199, v22, v55);
      v195 = (char *)v58;
      v61 = sub_1A6334EEC();
      v62 = sub_1A633569C();
      v63 = v62;
      v64 = os_log_type_enabled(v61, v62);
      v203 = v22;
      v65 = v198;
      if (v64)
      {
        v66 = swift_slowAlloc();
        v189 = swift_slowAlloc();
        v214 = v189;
        *(_DWORD *)v66 = 141559043;
        v212 = 1752392040;
        sub_1A6335774();
        *(_WORD *)(v66 + 12) = 2081;
        v188 = v61;
        v212 = *(_QWORD *)&a5;
        v213 = a6;
        type metadata accessor for CLLocationCoordinate2D(0);
        v187 = v63;
        v67 = sub_1A6335348();
        v186 = v56;
        v212 = sub_1A61A6A1C(v67, v68, &v214);
        v185 = &v213;
        sub_1A6335774();
        swift_bridgeObjectRelease();
        *(_WORD *)(v66 + 22) = 2080;
        v182 = v66 + 24;
        v69 = v204;
        sub_1A63328A0();
        sub_1A622D268((uint64_t)&qword_1ED21B780);
        v184 = v70;
        v71 = sub_1A6335AA4();
        v73 = v72;
        v183 = *(void (**)(char *, uint64_t))(v200 + 8);
        v183(v65, v35);
        v212 = sub_1A61A6A1C(v71, v73, &v214);
        sub_1A6335774();
        swift_bridgeObjectRelease();
        v74 = (void (*)(char *, uint64_t))v186[1];
        v74(v69, v55);
        *(_WORD *)(v66 + 32) = 2080;
        v204 = (char *)(v66 + 34);
        v75 = v199;
        sub_1A6332894();
        v76 = sub_1A6335AA4();
        v78 = v77;
        v183(v65, v35);
        v212 = sub_1A61A6A1C(v76, v78, &v214);
        sub_1A6335774();
        swift_bridgeObjectRelease();
        v199 = (char *)v74;
        v74(v75, v201);
        *(_WORD *)(v66 + 42) = 2080;
        v212 = v196;
        LOBYTE(v213) = v197;
        v79 = WeatherInterpolationOptions.Stride.description.getter();
        v212 = sub_1A61A6A1C(v79, v80, &v214);
        v22 = v203;
        sub_1A6335774();
        swift_bridgeObjectRelease();
        v81 = v188;
        _os_log_impl(&dword_1A6185000, v188, (os_log_type_t)v187, "Attempting to interpolate current weather; location=%{private,mask.hash}s, DateInterval.start: %s, DateInterva"
          "l.end: %s, stride: %s",
          (uint8_t *)v66,
          0x34u);
        v82 = v189;
        swift_arrayDestroy();
        MEMORY[0x1A85BEFA8](v82, -1, -1);
        v83 = v66;
        v84 = v200;
        MEMORY[0x1A85BEFA8](v83, -1, -1);

      }
      else
      {
        v100 = (void (*)(char *, uint64_t))v56[1];
        v100(v204, v55);
        v199 = (char *)v100;
        v100(v60, v55);

        v84 = v200;
      }
      sub_1A63328A0();
      sub_1A6332894();
      v101 = sub_1A6332B94();
      v204 = *(char **)(v84 + 8);
      v205 = v35;
      ((void (*)(char *, uint64_t))v204)(v65, v35);
      if ((v101 & 1) == 0)
        break;
      v55 = v197 | ((unsigned __int128)(v196 * (__int128)60) >> 64 == (60 * v196) >> 63);
      v56 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v102 = v211;
      while (1)
      {
        v103 = v208[3];
        v104 = v208[4];
        __swift_project_boxed_opaque_existential_1(v208, v103);
        (*(void (**)(os_log_t, char *, uint64_t, uint64_t, uint64_t, double, double))(v104 + 8))(v209, v102, v210, v103, v104, a5, a6);
        if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v207) == 1)
        {
          sub_1A622D748((uint64_t)v25, &qword_1ED21CBE8);
          v22 = v203;
          goto LABEL_28;
        }
        sub_1A618B330((uint64_t)v25, (uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for CurrentWeather);
        v35 = v202;
        sub_1A618D9C4((uint64_t)v32, v202, (uint64_t (*)(_QWORD))type metadata accessor for CurrentWeather);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v56 = (_QWORD *)sub_1A61D4134(0, v56[2] + 1, 1, (uint64_t)v56);
        v22 = v203;
        v106 = v56[2];
        v105 = v56[3];
        if (v106 >= v105 >> 1)
          v56 = (_QWORD *)sub_1A61D4134(v105 > 1, v106 + 1, 1, (uint64_t)v56);
        v56[2] = v106 + 1;
        sub_1A618B330(v35, (uint64_t)v56+ ((*(unsigned __int8 *)(v206 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v206 + 80))+ *(_QWORD *)(v206 + 72) * v106, (uint64_t (*)(_QWORD))type metadata accessor for CurrentWeather);
        if (!(_DWORD)v55)
          break;
        v102 = v211;
        sub_1A6332BF4();
        sub_1A61A72B4((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for CurrentWeather);
        sub_1A6332894();
        v107 = sub_1A6332B94();
        ((void (*)(char *, uint64_t))v204)(v65, v205);
        if ((v107 & 1) == 0)
          goto LABEL_28;
      }
      __break(1u);
LABEL_42:
      swift_once();
    }
    v56 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_28:
    if (v56[2])
    {
      v129 = v193;
      v130 = v201;
      v131 = v191;
      v191(v193, v22, v201);
      v132 = v194;
      v131(v194, v22, v130);
      v133 = sub_1A6334EEC();
      v134 = sub_1A633569C();
      v135 = v134;
      v136 = os_log_type_enabled(v133, v134);
      v137 = v205;
      if (v136)
      {
        v138 = swift_slowAlloc();
        v210 = swift_slowAlloc();
        v214 = v210;
        *(_DWORD *)v138 = 136315650;
        v207 = v138 + 4;
        v139 = v198;
        v209 = v133;
        sub_1A63328A0();
        sub_1A622D268((uint64_t)&qword_1ED21B780);
        LODWORD(v208) = v135;
        v140 = sub_1A6335AA4();
        v142 = v141;
        ((void (*)(char *, uint64_t))v204)(v139, v137);
        v212 = sub_1A61A6A1C(v140, v142, &v214);
        sub_1A6335774();
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v199)(v129, v130);
        *(_WORD *)(v138 + 12) = 2080;
        v143 = v194;
        sub_1A6332894();
        v144 = sub_1A6335AA4();
        v146 = v145;
        v147 = v139;
        v148 = (void (*)(char *, uint64_t))v204;
        ((void (*)(char *, uint64_t))v204)(v147, v137);
        v212 = sub_1A61A6A1C(v144, v146, &v214);
        sub_1A6335774();
        swift_bridgeObjectRelease();
        v149 = (void (*)(char *, uint64_t))v199;
        ((void (*)(char *, uint64_t))v199)(v143, v130);
        *(_WORD *)(v138 + 22) = 2080;
        v212 = v196;
        LOBYTE(v213) = v197;
        v150 = WeatherInterpolationOptions.Stride.description.getter();
        v212 = sub_1A61A6A1C(v150, v151, &v214);
        sub_1A6335774();
        swift_bridgeObjectRelease();
        v152 = v209;
        _os_log_impl(&dword_1A6185000, v209, (os_log_type_t)v208, "Successfully interpolated for dateInterval.start: %s, dateInterval.end: %s, stride: %s", (uint8_t *)v138, 0x20u);
        v153 = v210;
        swift_arrayDestroy();
        MEMORY[0x1A85BEFA8](v153, -1, -1);
        MEMORY[0x1A85BEFA8](v138, -1, -1);

        v148(v211, v205);
        v149(v203, v130);
      }
      else
      {

        v178 = (void (*)(char *, uint64_t))v199;
        ((void (*)(char *, uint64_t))v199)(v132, v130);
        v178(v129, v130);
        ((void (*)(char *, uint64_t))v204)(v211, v137);
        v178(v22, v130);
      }
      return v56;
    }
    swift_bridgeObjectRelease();
    v154 = v190;
    v155 = v201;
    v156 = v191;
    v191(v190, v22, v201);
    v157 = v192;
    v156(v192, v22, v155);
    v158 = sub_1A6334EEC();
    v159 = sub_1A6335690();
    v160 = v159;
    v161 = os_log_type_enabled(v158, v159);
    v162 = v205;
    if (v161)
    {
      v163 = swift_slowAlloc();
      v210 = swift_slowAlloc();
      v214 = v210;
      *(_DWORD *)v163 = 136315650;
      v208 = (_QWORD *)(v163 + 4);
      v164 = v198;
      LODWORD(v209) = v160;
      sub_1A63328A0();
      sub_1A622D268((uint64_t)&qword_1ED21B780);
      v165 = sub_1A6335AA4();
      v167 = v166;
      ((void (*)(char *, uint64_t))v204)(v164, v162);
      v212 = sub_1A61A6A1C(v165, v167, &v214);
      sub_1A6335774();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v199)(v154, v155);
      *(_WORD *)(v163 + 12) = 2080;
      v168 = v192;
      sub_1A6332894();
      v169 = sub_1A6335AA4();
      v171 = v170;
      v172 = v164;
      v173 = (void (*)(char *, uint64_t))v204;
      ((void (*)(char *, uint64_t))v204)(v172, v162);
      v212 = sub_1A61A6A1C(v169, v171, &v214);
      sub_1A6335774();
      swift_bridgeObjectRelease();
      v174 = (void (*)(char *, uint64_t))v199;
      ((void (*)(char *, uint64_t))v199)(v168, v155);
      *(_WORD *)(v163 + 22) = 2080;
      v212 = v196;
      LOBYTE(v213) = v197;
      v175 = WeatherInterpolationOptions.Stride.description.getter();
      v212 = sub_1A61A6A1C(v175, v176, &v214);
      sub_1A6335774();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A6185000, v158, (os_log_type_t)v209, "Failed to interpolate for dateInterval.start: %s, dateInterval.end: %s, stride: %s", (uint8_t *)v163, 0x20u);
      v177 = v210;
      swift_arrayDestroy();
      MEMORY[0x1A85BEFA8](v177, -1, -1);
      MEMORY[0x1A85BEFA8](v163, -1, -1);

      v173(v211, v205);
      v174(v203, v155);
    }
    else
    {

      v180 = (void (*)(char *, uint64_t))v199;
      ((void (*)(char *, uint64_t))v199)(v157, v155);
      v180(v154, v155);
      ((void (*)(char *, uint64_t))v204)(v211, v162);
      v180(v22, v155);
    }
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v49, v52, v35);
  if (qword_1ED21D318 != -1)
    swift_once();
  v85 = sub_1A6334F04();
  v86 = __swift_project_value_buffer(v85, (uint64_t)qword_1ED22A3C0);
  v211 = *(char **)(v36 + 16);
  ((void (*)(char *, char *, uint64_t))v211)(v46, v49, v35);
  v87 = sub_1A6334EEC();
  v88 = sub_1A633569C();
  v89 = os_log_type_enabled(v87, v88);
  v189 = (uint64_t)v49;
  if (v89)
  {
    v90 = swift_slowAlloc();
    v91 = swift_slowAlloc();
    v200 = v36;
    v204 = (char *)v86;
    v92 = v91;
    v214 = v91;
    *(_DWORD *)v90 = 141558531;
    v212 = 1752392040;
    sub_1A6335774();
    *(_WORD *)(v90 + 12) = 2081;
    v212 = *(_QWORD *)&a5;
    v213 = a6;
    type metadata accessor for CLLocationCoordinate2D(0);
    v93 = sub_1A6335348();
    v212 = sub_1A61A6A1C(v93, v94, &v214);
    v95 = v35;
    sub_1A6335774();
    swift_bridgeObjectRelease();
    *(_WORD *)(v90 + 22) = 2080;
    sub_1A622D268((uint64_t)&qword_1ED21B780);
    v96 = sub_1A6335AA4();
    v212 = sub_1A61A6A1C(v96, v97, &v214);
    sub_1A6335774();
    swift_bridgeObjectRelease();
    v98 = *(void (**)(char *, uint64_t))(v200 + 8);
    v98(v46, v35);
    _os_log_impl(&dword_1A6185000, v87, v88, "Attempting to interpolate current weather; location=%{private,mask.hash}s, date: %s",
      (uint8_t *)v90,
      0x20u);
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v92, -1, -1);
    v99 = v90;
    v49 = (char *)v189;
    MEMORY[0x1A85BEFA8](v99, -1, -1);

  }
  else
  {
    v98 = *(void (**)(char *, uint64_t))(v36 + 8);
    v98(v46, v35);

    v95 = v35;
  }
  v108 = v208[3];
  v109 = v208[4];
  __swift_project_boxed_opaque_existential_1(v208, v108);
  v110 = (uint64_t)v195;
  (*(void (**)(os_log_t, char *, uint64_t, uint64_t, uint64_t, double, double))(v109 + 8))(v209, v49, v210, v108, v109, a5, a6);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v110, 1, v207);
  v112 = v196;
  if (EnumTagSinglePayload == 1)
  {
    sub_1A622D748(v110, &qword_1ED21CBE8);
    ((void (*)(uint64_t, char *, uint64_t))v211)(v112, v49, v95);
    v113 = sub_1A6334EEC();
    v114 = sub_1A6335690();
    if (os_log_type_enabled(v113, v114))
    {
      v115 = v112;
      v116 = (uint8_t *)swift_slowAlloc();
      v117 = swift_slowAlloc();
      v212 = v117;
      *(_DWORD *)v116 = 136315138;
      sub_1A622D268((uint64_t)&qword_1ED21B780);
      v118 = sub_1A6335AA4();
      v214 = sub_1A61A6A1C(v118, v119, &v212);
      sub_1A6335774();
      swift_bridgeObjectRelease();
      v98((char *)v115, v95);
      _os_log_impl(&dword_1A6185000, v113, v114, "Failed to interpolate for date: %s", v116, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85BEFA8](v117, -1, -1);
      MEMORY[0x1A85BEFA8](v116, -1, -1);

      v120 = (char *)v189;
    }
    else
    {

      v98((char *)v112, v95);
      v120 = v49;
    }
    v98(v120, v95);
    return 0;
  }
  sub_1A618B330(v110, v197, (uint64_t (*)(_QWORD))type metadata accessor for CurrentWeather);
  v121 = (char *)v191;
  ((void (*)(_QWORD, char *, uint64_t))v211)(v191, v49, v95);
  v122 = sub_1A6334EEC();
  v123 = sub_1A633569C();
  if (os_log_type_enabled(v122, v123))
  {
    v124 = v121;
    v125 = (uint8_t *)swift_slowAlloc();
    v126 = swift_slowAlloc();
    v212 = v126;
    *(_DWORD *)v125 = 136315138;
    sub_1A622D268((uint64_t)&qword_1ED21B780);
    v127 = sub_1A6335AA4();
    v214 = sub_1A61A6A1C(v127, v128, &v212);
    v49 = (char *)v189;
    sub_1A6335774();
    swift_bridgeObjectRelease();
    v98(v124, v95);
    _os_log_impl(&dword_1A6185000, v122, v123, "Successfuly interpolated for date: %s", v125, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v126, -1, -1);
    MEMORY[0x1A85BEFA8](v125, -1, -1);
  }
  else
  {
    v98(v121, v95);
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8459B0);
  v179 = (*(unsigned __int8 *)(v206 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v206 + 80);
  v56 = (_QWORD *)swift_allocObject();
  *((_OWORD *)v56 + 1) = xmmword_1A6338890;
  sub_1A618B330(v197, (uint64_t)v56 + v179, (uint64_t (*)(_QWORD))type metadata accessor for CurrentWeather);
  v98(v49, v95);
  return v56;
}

void sub_1A6222F84(uint64_t a1)
{
  if (*(_BYTE *)(a1 + *(int *)(type metadata accessor for WeatherRequestOptions() + 72)) == 1)
    sub_1A622301C();
  else
    sub_1A62232AC();
}

void sub_1A622301C()
{
  void *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  _DWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_448();
  v36 = v2;
  v37 = v3;
  v5 = v4;
  v7 = v6;
  v8 = OUTLINED_FUNCTION_308();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_92();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_12_0();
  if (qword_1ED21D318 != -1)
    swift_once();
  v13 = OUTLINED_FUNCTION_30();
  v14 = OUTLINED_FUNCTION_635(v13, (uint64_t)qword_1ED22A3C0);
  OUTLINED_FUNCTION_427(v14, v15, (uint64_t (*)(_QWORD))type metadata accessor for WeatherRequestOptions);
  OUTLINED_FUNCTION_46_2();
  sub_1A6334EEC();
  v16 = OUTLINED_FUNCTION_35_0();
  if (OUTLINED_FUNCTION_878(v16))
  {
    v17 = OUTLINED_FUNCTION_2_4();
    v30[1] = v1;
    v18 = v17;
    v31 = OUTLINED_FUNCTION_2_4();
    v35 = v31;
    *(_DWORD *)v18 = 136446979;
    v19 = OUTLINED_FUNCTION_59();
    MEMORY[0x1A85BE234](v19, &type metadata for WeatherProduct);
    v32 = v5;
    v33 = v0;
    OUTLINED_FUNCTION_94();
    v34 = OUTLINED_FUNCTION_852();
    OUTLINED_FUNCTION_161();
    OUTLINED_FUNCTION_19_0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_513();
    v20 = OUTLINED_FUNCTION_739();
    v22 = OUTLINED_FUNCTION_796(v20, v21);
    OUTLINED_FUNCTION_740(v22);
    OUTLINED_FUNCTION_327();
    *(_WORD *)(v18 + 32) = 2082;
    OUTLINED_FUNCTION_242();
    v23 = OUTLINED_FUNCTION_853();
    OUTLINED_FUNCTION_660(v23);
    v24 = OUTLINED_FUNCTION_13_4();
    OUTLINED_FUNCTION_532(v24, (uint64_t (*)(_QWORD))type metadata accessor for WeatherRequestOptions);
    OUTLINED_FUNCTION_805(&dword_1A6185000, v25, v26, "Fetching: %{public}s for location: %{private,mask.hash}s with language: %{public}s");
    OUTLINED_FUNCTION_792();
    OUTLINED_FUNCTION_0_5();
  }
  v27 = OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_532(v27, (uint64_t (*)(_QWORD))type metadata accessor for WeatherRequestOptions);

  sub_1A618D9C4(v5, (uint64_t)&v11[*(int *)(v8 + 24)], (uint64_t (*)(_QWORD))type metadata accessor for WeatherRequestOptions);
  OUTLINED_FUNCTION_620();
  OUTLINED_FUNCTION_59();
  sub_1A61F977C();
  *(_QWORD *)(OUTLINED_FUNCTION_0_4() + 16) = v7;
  OUTLINED_FUNCTION_59();
  v28 = (void *)sub_1A6334DD8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CBA8);
  OUTLINED_FUNCTION_1022();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_1027();

  OUTLINED_FUNCTION_856(v29, (uint64_t (*)(_QWORD))type metadata accessor for WeatherRequest);
  OUTLINED_FUNCTION_20();
}

void sub_1A62232AC()
{
  void *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  _DWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_448();
  v36 = v2;
  v37 = v3;
  v5 = v4;
  v7 = v6;
  v8 = OUTLINED_FUNCTION_308();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_92();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_12_0();
  if (qword_1ED21D318 != -1)
    swift_once();
  v13 = OUTLINED_FUNCTION_30();
  v14 = OUTLINED_FUNCTION_635(v13, (uint64_t)qword_1ED22A3C0);
  OUTLINED_FUNCTION_427(v14, v15, (uint64_t (*)(_QWORD))type metadata accessor for WeatherRequestOptions);
  OUTLINED_FUNCTION_46_2();
  sub_1A6334EEC();
  v16 = OUTLINED_FUNCTION_35_0();
  if (OUTLINED_FUNCTION_878(v16))
  {
    v17 = OUTLINED_FUNCTION_2_4();
    v30[1] = v1;
    v18 = v17;
    v31 = OUTLINED_FUNCTION_2_4();
    v35 = v31;
    *(_DWORD *)v18 = 136446979;
    v19 = OUTLINED_FUNCTION_59();
    MEMORY[0x1A85BE234](v19, &type metadata for WeatherProduct);
    v32 = v5;
    v33 = v0;
    OUTLINED_FUNCTION_94();
    v34 = OUTLINED_FUNCTION_852();
    OUTLINED_FUNCTION_161();
    OUTLINED_FUNCTION_19_0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_513();
    v20 = OUTLINED_FUNCTION_739();
    v22 = OUTLINED_FUNCTION_796(v20, v21);
    OUTLINED_FUNCTION_740(v22);
    OUTLINED_FUNCTION_327();
    *(_WORD *)(v18 + 32) = 2082;
    OUTLINED_FUNCTION_242();
    v23 = OUTLINED_FUNCTION_853();
    OUTLINED_FUNCTION_660(v23);
    v24 = OUTLINED_FUNCTION_13_4();
    OUTLINED_FUNCTION_532(v24, (uint64_t (*)(_QWORD))type metadata accessor for WeatherRequestOptions);
    OUTLINED_FUNCTION_805(&dword_1A6185000, v25, v26, "Fetching: %{public}s for location: %{private,mask.hash}s with language: %{public}s");
    OUTLINED_FUNCTION_792();
    OUTLINED_FUNCTION_0_5();
  }
  v27 = OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_532(v27, (uint64_t (*)(_QWORD))type metadata accessor for WeatherRequestOptions);

  sub_1A618D9C4(v5, (uint64_t)&v11[*(int *)(v8 + 24)], (uint64_t (*)(_QWORD))type metadata accessor for WeatherRequestOptions);
  OUTLINED_FUNCTION_620();
  OUTLINED_FUNCTION_59();
  sub_1A61F977C();
  *(_QWORD *)(OUTLINED_FUNCTION_0_4() + 16) = v7;
  OUTLINED_FUNCTION_59();
  v28 = (void *)sub_1A6334DD8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CBA8);
  OUTLINED_FUNCTION_1022();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_1027();

  OUTLINED_FUNCTION_856(v29, (uint64_t (*)(_QWORD))type metadata accessor for WeatherRequest);
  OUTLINED_FUNCTION_20();
}

uint64_t sub_1A622353C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_918();
  sub_1A6334B08();
  CLLocationCoordinate2D.id.getter();
  swift_beginAccess();
  v4 = OUTLINED_FUNCTION_788();
  sub_1A61A2100(v4, v5, v6, v7);
  OUTLINED_FUNCTION_24_1();
  v8 = OUTLINED_FUNCTION_6();
  v9 = OUTLINED_FUNCTION_170(v1);
  if ((_DWORD)v9 == 1)
  {
    OUTLINED_FUNCTION_124(v9, &qword_1ED21D330);
    swift_endAccess();
    v10 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, v1, v8);
    swift_endAccess();
    v10 = 0;
  }
  __swift_storeEnumTagSinglePayload(a1, v10, 1, v8);
  return sub_1A6334B14();
}

uint64_t sub_1A6223654()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  OUTLINED_FUNCTION_511();
  OUTLINED_FUNCTION_955();
  return v0;
}

uint64_t sub_1A6223688()
{
  sub_1A6223654();
  return swift_deallocClassInstance();
}

void sub_1A62236A8()
{
  sub_1A6220B38();
}

uint64_t sub_1A62236C8()
{
  return 0;
}

uint64_t sub_1A62236D0@<X0>(uint64_t a1@<X8>)
{
  return sub_1A622353C(a1);
}

uint64_t sub_1A62236F0()
{
  return swift_deallocObject();
}

uint64_t sub_1A6223700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  v8 = sub_1A63358A0();
  v7[7] = v8;
  v7[8] = *(_QWORD *)(v8 - 8);
  v7[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A6223768()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_794();
  v0 = (_QWORD *)OUTLINED_FUNCTION_19_7();
  v1 = OUTLINED_FUNCTION_144(v0, (uint64_t)sub_1A62237A0);
  return OUTLINED_FUNCTION_278(v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1A62237A0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_231();
  OUTLINED_FUNCTION_218(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_2_17();
}

uint64_t sub_1A62237F0()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_771();
  if (v0)
  {
    OUTLINED_FUNCTION_490();
    v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_95_0();
    return OUTLINED_FUNCTION_13_10(v1);
  }
  else
  {
    v3 = OUTLINED_FUNCTION_19_7();
    v4 = (_QWORD *)OUTLINED_FUNCTION_768(v3);
    v5 = OUTLINED_FUNCTION_442(v4);
    return OUTLINED_FUNCTION_311(v5, v6);
  }
}

uint64_t sub_1A6223844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[5] = a5;
  v6[6] = a6;
  v6[3] = a3;
  v6[4] = a4;
  v7 = sub_1A63358A0();
  v6[7] = v7;
  v6[8] = *(_QWORD *)(v7 - 8);
  v6[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A62238A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_794();
  v0 = (_QWORD *)OUTLINED_FUNCTION_19_7();
  v1 = OUTLINED_FUNCTION_144(v0, (uint64_t)sub_1A62238E0);
  return OUTLINED_FUNCTION_278(v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1A62238E0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_440(v2);
  *(_QWORD *)(v0 + 88) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_565(*(_QWORD *)(v0 + 64));
  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_1_13();
}

uint64_t sub_1A6223938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);

  OUTLINED_FUNCTION_771();
  if (v0)
  {
    OUTLINED_FUNCTION_490();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_95_0();
    return v2();
  }
  else
  {
    v4 = OUTLINED_FUNCTION_31_1();
    v5 = (_QWORD *)OUTLINED_FUNCTION_768(v4);
    *v5 = v1;
    v5[1] = sub_1A62239D8;
    v6 = OUTLINED_FUNCTION_855();
    return v7(v6);
  }
}

uint64_t sub_1A62239B0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_490();
  return OUTLINED_FUNCTION_6_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1A62239D8()
{
  OUTLINED_FUNCTION_609();
  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_3_13();
}

uint64_t sub_1A6223A14()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc();
  return OUTLINED_FUNCTION_725(v1, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1A6223A48()
{
  uint64_t v0;

  OUTLINED_FUNCTION_490();
  return OUTLINED_FUNCTION_6_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1A6223A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  v8 = sub_1A63358A0();
  v7[7] = v8;
  v7[8] = *(_QWORD *)(v8 - 8);
  v7[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A6223AD8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_794();
  v0 = (_QWORD *)OUTLINED_FUNCTION_19_7();
  v1 = OUTLINED_FUNCTION_144(v0, (uint64_t)sub_1A6223B10);
  return OUTLINED_FUNCTION_278(v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1A6223B10()
{
  uint64_t v0;

  OUTLINED_FUNCTION_231();
  OUTLINED_FUNCTION_218(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_2_17();
}

uint64_t sub_1A6223B60()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_771();
  if (v0)
  {
    OUTLINED_FUNCTION_490();
    v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_95_0();
    return OUTLINED_FUNCTION_13_10(v1);
  }
  else
  {
    v3 = OUTLINED_FUNCTION_19_7();
    v4 = (_QWORD *)OUTLINED_FUNCTION_768(v3);
    v5 = OUTLINED_FUNCTION_442(v4);
    return OUTLINED_FUNCTION_311(v5, v6);
  }
}

uint64_t sub_1A6223BB4()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_205();
  v1 = *v0;
  OUTLINED_FUNCTION_251(v2);
  swift_task_dealloc();
  return OUTLINED_FUNCTION_4_17(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1A6223BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_1A6223C08()
{
  __n128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _QWORD *v10;

  OUTLINED_FUNCTION_616();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21AE38);
  v0 = (__n128 *)OUTLINED_FUNCTION_590();
  OUTLINED_FUNCTION_364(v0, v1, v2, v3, v4, v5, v6, v7, v8);
  v9 = swift_task_alloc();
  v10 = (_QWORD *)OUTLINED_FUNCTION_834(v9);
  OUTLINED_FUNCTION_611(v10);
  OUTLINED_FUNCTION_248();
  return OUTLINED_FUNCTION_224();
}

uint64_t sub_1A6223C70()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_193();
  if (v0)
  {
    OUTLINED_FUNCTION_8_12();
    return OUTLINED_FUNCTION_1_13();
  }
  else
  {
    OUTLINED_FUNCTION_775();
    return OUTLINED_FUNCTION_4_17(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_1A6223CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a3;
  return swift_task_switch();
}

uint64_t sub_1A6223CCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  __int128 v5;

  v1 = *(_QWORD *)(v0 + 56);
  v5 = *(_OWORD *)(v0 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED219560);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v2;
  *(_OWORD *)(v2 + 16) = v5;
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v3;
  *v3 = v0;
  v3[1] = sub_1A6223D84;
  return OUTLINED_FUNCTION_224();
}

uint64_t sub_1A6223D84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_440(v3);
  *(_QWORD *)(v0 + 80) = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_8_12();
    return OUTLINED_FUNCTION_1_13();
  }
  else
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_557(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(_QWORD *)(v0 + 32), *(uint64_t (**)(void))(v2 + 8));
  }
}

uint64_t sub_1A6223DE8()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_6_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1A6223E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_1A6223E34()
{
  __n128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _QWORD *v10;

  OUTLINED_FUNCTION_616();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8464E0);
  v0 = (__n128 *)OUTLINED_FUNCTION_590();
  OUTLINED_FUNCTION_364(v0, v1, v2, v3, v4, v5, v6, v7, v8);
  v9 = swift_task_alloc();
  v10 = (_QWORD *)OUTLINED_FUNCTION_834(v9);
  OUTLINED_FUNCTION_611(v10);
  OUTLINED_FUNCTION_248();
  return OUTLINED_FUNCTION_224();
}

uint64_t sub_1A6223E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_1A6223EB8()
{
  __n128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _QWORD *v10;

  OUTLINED_FUNCTION_616();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C930);
  v0 = (__n128 *)OUTLINED_FUNCTION_590();
  OUTLINED_FUNCTION_364(v0, v1, v2, v3, v4, v5, v6, v7, v8);
  v9 = swift_task_alloc();
  v10 = (_QWORD *)OUTLINED_FUNCTION_834(v9);
  OUTLINED_FUNCTION_611(v10);
  OUTLINED_FUNCTION_248();
  return OUTLINED_FUNCTION_224();
}

uint64_t sub_1A6223F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_1A6223F3C()
{
  __n128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _QWORD *v10;

  OUTLINED_FUNCTION_616();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE845F20);
  v0 = (__n128 *)OUTLINED_FUNCTION_590();
  OUTLINED_FUNCTION_364(v0, v1, v2, v3, v4, v5, v6, v7, v8);
  v9 = swift_task_alloc();
  v10 = (_QWORD *)OUTLINED_FUNCTION_834(v9);
  OUTLINED_FUNCTION_611(v10);
  OUTLINED_FUNCTION_248();
  return OUTLINED_FUNCTION_224();
}

uint64_t sub_1A6223FA4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_193();
  if (v0)
  {
    OUTLINED_FUNCTION_8_12();
    return OUTLINED_FUNCTION_1_13();
  }
  else
  {
    OUTLINED_FUNCTION_775();
    return OUTLINED_FUNCTION_4_17(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_1A6223FE4()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_6_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1A6224010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_1A622402C()
{
  __n128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _QWORD *v10;

  OUTLINED_FUNCTION_616();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846150);
  v0 = (__n128 *)OUTLINED_FUNCTION_590();
  OUTLINED_FUNCTION_364(v0, v1, v2, v3, v4, v5, v6, v7, v8);
  v9 = swift_task_alloc();
  v10 = (_QWORD *)OUTLINED_FUNCTION_834(v9);
  OUTLINED_FUNCTION_611(v10);
  OUTLINED_FUNCTION_248();
  return OUTLINED_FUNCTION_224();
}

uint64_t sub_1A6224094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[188] = a5;
  v5[187] = a4;
  v5[186] = a3;
  v5[185] = a2;
  v5[184] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C970);
  v5[189] = swift_task_alloc();
  v5[190] = swift_task_alloc();
  return swift_task_switch();
}

#error "1A6224174: call analysis failed (funcsize=113)"

uint64_t sub_1A62242F4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_295();
  OUTLINED_FUNCTION_720();
  *(_QWORD *)(v1 + 1552) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_3_13();
}

void sub_1A6224340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  void *v11;
  const void *v12;
  _QWORD *v13;

  OUTLINED_FUNCTION_45_0();
  v1 = OUTLINED_FUNCTION_788();
  sub_1A61AED54(v1, v2, &qword_1EE8466B0);
  sub_1A61AED54(v0 + 16, v0 + 616, &qword_1EE8466B0);
  if (sub_1A622DF0C(v0 + 616) == 1)
  {
    if (*(_QWORD *)(v0 + 1536))
    {
      OUTLINED_FUNCTION_732();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD0);
LABEL_6:
      sub_1A6335600();
      swift_task_dealloc();
      OUTLINED_FUNCTION_9_9();
      v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_656();
LABEL_7:
      OUTLINED_FUNCTION_10_8(v4);
      return;
    }
    OUTLINED_FUNCTION_499();
    OUTLINED_FUNCTION_371();
    OUTLINED_FUNCTION_178();
    OUTLINED_FUNCTION_324();
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 1552);
    sub_1A61AED54(v0 + 16, v0 + 1016, &qword_1EE8466B0);
    sub_1A63355E8();
    if (v3)
    {
      OUTLINED_FUNCTION_1007();
      OUTLINED_FUNCTION_484();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD0);
      OUTLINED_FUNCTION_897();
      goto LABEL_6;
    }
    v5 = OUTLINED_FUNCTION_897();
    sub_1A61AED54(v5, v6, v7);
    if (sub_1A622E098(v0 + 1216) != 1)
    {
      v11 = *(void **)(v0 + 1472);
      nullsub_1(v0 + 1216);
      OUTLINED_FUNCTION_72();
      sub_1A61AED54(v0 + 1016, v0 + 816, &qword_1EE8466B8);
      v12 = (const void *)nullsub_1(v0 + 816);
      memcpy(v11, v12, 0xC0uLL);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD0);
      sub_1A6335600();
      OUTLINED_FUNCTION_257();
      OUTLINED_FUNCTION_254();
      v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_41_0();
      goto LABEL_7;
    }
    v8 = *(_QWORD *)(v0 + 1496);
    nullsub_1(v0 + 1216);
    sub_1A61AED54(v0 + 1016, v0 + 216, &qword_1EE8466B8);
    v9 = *(_QWORD *)nullsub_1(v0 + 216);
    if (v8)
    {
      v10 = *(void (**)(uint64_t))(v0 + 1496);
      OUTLINED_FUNCTION_1007();
      sub_1A61A2960((uint64_t)v10);
      v10(v9);
      OUTLINED_FUNCTION_1007();
      OUTLINED_FUNCTION_484();
      OUTLINED_FUNCTION_1020();
    }
    else
    {

    }
    *(_QWORD *)(v0 + 1536) = v9;
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1544) = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED219A18);
    *v13 = v0;
    v13[1] = sub_1A62242F4;
    OUTLINED_FUNCTION_212();
  }
}

uint64_t sub_1A622464C()
{
  return OUTLINED_FUNCTION_412();
}

uint64_t sub_1A622465C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[15] = a3;
  v4[16] = a4;
  v4[13] = a1;
  v4[14] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C970);
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  return swift_task_switch();
}

#error "1A622472C: call analysis failed (funcsize=102)"

uint64_t sub_1A6224884()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_440(v2);
  *(_QWORD *)(v0 + 176) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    *(_OWORD *)(v0 + 184) = *(_OWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 200) = *(_QWORD *)(v0 + 64);
    *(_BYTE *)(v0 + 73) = *(_BYTE *)(v0 + 72);
  }
  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_1_13();
}

void sub_1A62248E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  void (*v19)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(void *);
  void *v36;
  uint64_t v37;

  OUTLINED_FUNCTION_270();
  if (*(unsigned __int8 *)(v16 + 73) == 255)
  {
    if (*(_QWORD *)(v16 + 160))
    {
      OUTLINED_FUNCTION_732();
      goto LABEL_6;
    }
    OUTLINED_FUNCTION_499();
    OUTLINED_FUNCTION_371();
    OUTLINED_FUNCTION_178();
    OUTLINED_FUNCTION_357();
  }
  else
  {
    v17 = *(_QWORD *)(v16 + 176);
    sub_1A63355E8();
    v18 = *(_BYTE *)(v16 + 73);
    if (v17)
    {
      sub_1A61A0A20(*(void **)(v16 + 184), *(_QWORD *)(v16 + 192), *(_QWORD *)(v16 + 200), v18);
      OUTLINED_FUNCTION_82();
LABEL_6:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD0);
      OUTLINED_FUNCTION_585();
      swift_task_dealloc();
      OUTLINED_FUNCTION_9_9();
      OUTLINED_FUNCTION_832();
      OUTLINED_FUNCTION_357();
      v19(v19, v20, v21, v22, v23, v24, v25, v26, a9, a10, a11, a12, a13, a14, a15, a16);
      return;
    }
    if ((*(_BYTE *)(v16 + 73) & 1) != 0)
    {
      v35 = *(void (**)(void *))(v16 + 120);
      if (v35)
      {
        v36 = *(void **)(v16 + 184);
        sub_1A622E9B0(v36, *(_QWORD *)(v16 + 192), *(_QWORD *)(v16 + 200), v18);
        sub_1A61A2960((uint64_t)v35);
        v35(v36);
        OUTLINED_FUNCTION_790();
        OUTLINED_FUNCTION_669();
      }
      else
      {

      }
      *(_QWORD *)(v16 + 160) = *(_QWORD *)(v16 + 184);
      v37 = swift_task_alloc();
      OUTLINED_FUNCTION_1042(v37);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2195B0);
      OUTLINED_FUNCTION_941((uint64_t)sub_1A6224884);
      OUTLINED_FUNCTION_319();
    }
    else
    {

      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD0);
      sub_1A6335600();
      OUTLINED_FUNCTION_42_0();
      OUTLINED_FUNCTION_163();
      OUTLINED_FUNCTION_357();
      v30(v27, v28, v29, v30, v31, v32, v33, v34, a9, a10, a11, a12, a13, a14, a15, a16);
    }
  }
}

uint64_t sub_1A6224B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[12] = a4;
  v5[13] = a5;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846560);
  v5[14] = swift_task_alloc();
  v5[15] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846568);
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C970);
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  return swift_task_switch();
}

#error "1A6224C38: call analysis failed (funcsize=88)"

uint64_t sub_1A6224D64()
{
  OUTLINED_FUNCTION_196();
  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_3_13();
}

void sub_1A6224DA0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_45_0();
  v3 = OUTLINED_FUNCTION_603(v0[14], 1, v0[15]);
  if (v4)
  {
    v5 = v0[21];
    OUTLINED_FUNCTION_634(v3, &qword_1EE846560);
    if (v5)
    {
      OUTLINED_FUNCTION_652();
LABEL_8:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD0);
      OUTLINED_FUNCTION_585();
      OUTLINED_FUNCTION_464();
      OUTLINED_FUNCTION_9_9();
      OUTLINED_FUNCTION_42_0();
      OUTLINED_FUNCTION_163();
      OUTLINED_FUNCTION_241();
      v10 = (uint64_t (*)(void))OUTLINED_FUNCTION_656();
LABEL_9:
      OUTLINED_FUNCTION_10_8(v10);
      return;
    }
    OUTLINED_FUNCTION_499();
    OUTLINED_FUNCTION_371();
    OUTLINED_FUNCTION_178();
    OUTLINED_FUNCTION_324();
  }
  else
  {
    v6 = (void *)v0[23];
    OUTLINED_FUNCTION_1019(v3, v0[17], &qword_1EE846568);
    sub_1A63355E8();
    if (v6)
    {
      v8 = OUTLINED_FUNCTION_819();
      sub_1A622D748(v8, &qword_1EE846568);
      v9 = v6;
LABEL_7:

      goto LABEL_8;
    }
    v11 = v0[15];
    OUTLINED_FUNCTION_1029(v0[17], v7, &qword_1EE846568);
    if (OUTLINED_FUNCTION_799() != 1)
    {
      OUTLINED_FUNCTION_599();
      OUTLINED_FUNCTION_360(v13, &qword_1EE846568);
      OUTLINED_FUNCTION_484();
      OUTLINED_FUNCTION_791(v14, v15, &qword_1EE8464E0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD0);
      OUTLINED_FUNCTION_800();
      OUTLINED_FUNCTION_42_0();
      OUTLINED_FUNCTION_163();
      OUTLINED_FUNCTION_241();
      OUTLINED_FUNCTION_257();
      OUTLINED_FUNCTION_254();
      v10 = (uint64_t (*)(void))OUTLINED_FUNCTION_41_0();
      goto LABEL_9;
    }
    OUTLINED_FUNCTION_815();
    if (v2)
    {
      OUTLINED_FUNCTION_544();
      OUTLINED_FUNCTION_789();
      if (v11)
      {
        v12 = OUTLINED_FUNCTION_745();
        sub_1A622D748(v12, &qword_1EE846568);
        OUTLINED_FUNCTION_82();
        v9 = (void *)OUTLINED_FUNCTION_892();
        goto LABEL_7;
      }
      sub_1A622D748(v0[17], &qword_1EE846568);
      OUTLINED_FUNCTION_82();
      OUTLINED_FUNCTION_669();
    }
    else
    {
      sub_1A622D748(v0[17], &qword_1EE846568);
      OUTLINED_FUNCTION_484();
    }
    v0[21] = v1;
    v16 = swift_task_alloc();
    OUTLINED_FUNCTION_706(v16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846580);
    OUTLINED_FUNCTION_365((uint64_t)sub_1A6224D64);
    OUTLINED_FUNCTION_212();
  }
}

uint64_t sub_1A6224FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[12] = a4;
  v5[13] = a5;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED219F40);
  v5[14] = swift_task_alloc();
  v5[15] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED219F38);
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C970);
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  return swift_task_switch();
}

#error "1A62250E0: call analysis failed (funcsize=88)"

uint64_t sub_1A622520C()
{
  OUTLINED_FUNCTION_196();
  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_3_13();
}

void sub_1A6225248()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_45_0();
  v3 = OUTLINED_FUNCTION_603(v0[14], 1, v0[15]);
  if (v4)
  {
    v5 = v0[21];
    OUTLINED_FUNCTION_634(v3, (uint64_t *)&unk_1ED219F40);
    if (v5)
    {
      OUTLINED_FUNCTION_652();
LABEL_8:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD0);
      OUTLINED_FUNCTION_585();
      OUTLINED_FUNCTION_464();
      OUTLINED_FUNCTION_9_9();
      OUTLINED_FUNCTION_42_0();
      OUTLINED_FUNCTION_163();
      OUTLINED_FUNCTION_241();
      v10 = (uint64_t (*)(void))OUTLINED_FUNCTION_656();
LABEL_9:
      OUTLINED_FUNCTION_10_8(v10);
      return;
    }
    OUTLINED_FUNCTION_499();
    OUTLINED_FUNCTION_371();
    OUTLINED_FUNCTION_178();
    OUTLINED_FUNCTION_324();
  }
  else
  {
    v6 = (void *)v0[23];
    OUTLINED_FUNCTION_1019(v3, v0[17], &qword_1ED219F38);
    sub_1A63355E8();
    if (v6)
    {
      v8 = OUTLINED_FUNCTION_819();
      sub_1A622D748(v8, &qword_1ED219F38);
      v9 = v6;
LABEL_7:

      goto LABEL_8;
    }
    v11 = v0[15];
    OUTLINED_FUNCTION_1029(v0[17], v7, &qword_1ED219F38);
    if (OUTLINED_FUNCTION_799() != 1)
    {
      OUTLINED_FUNCTION_599();
      OUTLINED_FUNCTION_360(v13, &qword_1ED219F38);
      OUTLINED_FUNCTION_484();
      OUTLINED_FUNCTION_791(v14, v15, &qword_1ED21C930);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD0);
      OUTLINED_FUNCTION_800();
      OUTLINED_FUNCTION_42_0();
      OUTLINED_FUNCTION_163();
      OUTLINED_FUNCTION_241();
      OUTLINED_FUNCTION_257();
      OUTLINED_FUNCTION_254();
      v10 = (uint64_t (*)(void))OUTLINED_FUNCTION_41_0();
      goto LABEL_9;
    }
    OUTLINED_FUNCTION_815();
    if (v2)
    {
      OUTLINED_FUNCTION_544();
      OUTLINED_FUNCTION_789();
      if (v11)
      {
        v12 = OUTLINED_FUNCTION_745();
        sub_1A622D748(v12, &qword_1ED219F38);
        OUTLINED_FUNCTION_82();
        v9 = (void *)OUTLINED_FUNCTION_892();
        goto LABEL_7;
      }
      sub_1A622D748(v0[17], &qword_1ED219F38);
      OUTLINED_FUNCTION_82();
      OUTLINED_FUNCTION_669();
    }
    else
    {
      sub_1A622D748(v0[17], &qword_1ED219F38);
      OUTLINED_FUNCTION_484();
    }
    v0[21] = v1;
    v16 = swift_task_alloc();
    OUTLINED_FUNCTION_706(v16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED219EF8);
    OUTLINED_FUNCTION_365((uint64_t)sub_1A622520C);
    OUTLINED_FUNCTION_212();
  }
}

uint64_t sub_1A6225464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[12] = a4;
  v5[13] = a5;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE845FA0);
  v5[14] = swift_task_alloc();
  v5[15] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE845FA8);
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C970);
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  return swift_task_switch();
}

#error "1A6225588: call analysis failed (funcsize=88)"

uint64_t sub_1A62256B4()
{
  OUTLINED_FUNCTION_196();
  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_3_13();
}

void sub_1A62256F0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_45_0();
  v3 = OUTLINED_FUNCTION_603(v0[14], 1, v0[15]);
  if (v4)
  {
    v5 = v0[21];
    OUTLINED_FUNCTION_634(v3, &qword_1EE845FA0);
    if (v5)
    {
      OUTLINED_FUNCTION_652();
LABEL_8:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD0);
      OUTLINED_FUNCTION_585();
      OUTLINED_FUNCTION_464();
      OUTLINED_FUNCTION_9_9();
      OUTLINED_FUNCTION_42_0();
      OUTLINED_FUNCTION_163();
      OUTLINED_FUNCTION_241();
      v10 = (uint64_t (*)(void))OUTLINED_FUNCTION_656();
LABEL_9:
      OUTLINED_FUNCTION_10_8(v10);
      return;
    }
    OUTLINED_FUNCTION_499();
    OUTLINED_FUNCTION_371();
    OUTLINED_FUNCTION_178();
    OUTLINED_FUNCTION_324();
  }
  else
  {
    v6 = (void *)v0[23];
    OUTLINED_FUNCTION_1019(v3, v0[17], &qword_1EE845FA8);
    sub_1A63355E8();
    if (v6)
    {
      v8 = OUTLINED_FUNCTION_819();
      sub_1A622D748(v8, &qword_1EE845FA8);
      v9 = v6;
LABEL_7:

      goto LABEL_8;
    }
    v11 = v0[15];
    OUTLINED_FUNCTION_1029(v0[17], v7, &qword_1EE845FA8);
    if (OUTLINED_FUNCTION_799() != 1)
    {
      OUTLINED_FUNCTION_599();
      OUTLINED_FUNCTION_360(v13, &qword_1EE845FA8);
      OUTLINED_FUNCTION_484();
      OUTLINED_FUNCTION_791(v14, v15, &qword_1EE845F20);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD0);
      OUTLINED_FUNCTION_800();
      OUTLINED_FUNCTION_42_0();
      OUTLINED_FUNCTION_163();
      OUTLINED_FUNCTION_241();
      OUTLINED_FUNCTION_257();
      OUTLINED_FUNCTION_254();
      v10 = (uint64_t (*)(void))OUTLINED_FUNCTION_41_0();
      goto LABEL_9;
    }
    OUTLINED_FUNCTION_815();
    if (v2)
    {
      OUTLINED_FUNCTION_544();
      OUTLINED_FUNCTION_789();
      if (v11)
      {
        v12 = OUTLINED_FUNCTION_745();
        sub_1A622D748(v12, &qword_1EE845FA8);
        OUTLINED_FUNCTION_82();
        v9 = (void *)OUTLINED_FUNCTION_892();
        goto LABEL_7;
      }
      sub_1A622D748(v0[17], &qword_1EE845FA8);
      OUTLINED_FUNCTION_82();
      OUTLINED_FUNCTION_669();
    }
    else
    {
      sub_1A622D748(v0[17], &qword_1EE845FA8);
      OUTLINED_FUNCTION_484();
    }
    v0[21] = v1;
    v16 = swift_task_alloc();
    OUTLINED_FUNCTION_706(v16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE845FC0);
    OUTLINED_FUNCTION_365((uint64_t)sub_1A62256B4);
    OUTLINED_FUNCTION_212();
  }
}

uint64_t sub_1A622590C()
{
  return OUTLINED_FUNCTION_412();
}

uint64_t sub_1A622591C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[16] = a4;
  v5[17] = a5;
  v5[14] = a2;
  v5[15] = a3;
  v5[13] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C970);
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A6225990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;

  OUTLINED_FUNCTION_270();
  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (__int128 *)(v1 + 32);
    v4 = OUTLINED_FUNCTION_549();
    OUTLINED_FUNCTION_6_3();
    do
    {
      v6 = *(_QWORD *)(v0 + 144);
      v5 = *(_QWORD *)(v0 + 152);
      v19 = *v3;
      __swift_storeEnumTagSinglePayload(v5, 1, 1, v4);
      v7 = OUTLINED_FUNCTION_0_4();
      *(_QWORD *)(v7 + 16) = 0;
      *(_QWORD *)(v7 + 24) = 0;
      *(_OWORD *)(v7 + 32) = v19;
      v8 = OUTLINED_FUNCTION_896();
      sub_1A61AEF94(v8, v9, &qword_1ED21C970);
      OUTLINED_FUNCTION_344(v6);
      swift_retain();
      OUTLINED_FUNCTION_990();
      if (v10)
      {
        sub_1A622D748(v5, &qword_1ED21C970);
      }
      else
      {
        sub_1A63355B8();
        OUTLINED_FUNCTION_226(v5, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8));
      }
      if (*(_QWORD *)(v7 + 16))
      {
        OUTLINED_FUNCTION_466();
        swift_unknownObjectRetain();
        OUTLINED_FUNCTION_1032();
        v11 = sub_1A6335594();
        v13 = v12;
        swift_unknownObjectRelease();
      }
      else
      {
        v11 = 0;
        v13 = 0;
      }
      v14 = **(_QWORD **)(v0 + 112);
      *(_QWORD *)(v0 + 184) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846150);
      v15 = v13 | v11;
      if (v13 | v11)
      {
        v15 = v0 + 16;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = v11;
        *(_QWORD *)(v0 + 40) = v13;
      }
      v16 = *(_QWORD *)(v0 + 152);
      *(_QWORD *)(v0 + 80) = 1;
      *(_QWORD *)(v0 + 88) = v15;
      *(_QWORD *)(v0 + 96) = v14;
      OUTLINED_FUNCTION_719();
      swift_release();
      sub_1A622D748(v16, &qword_1ED21C970);
      ++v3;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 160) = 0;
    v17 = swift_task_alloc();
    OUTLINED_FUNCTION_1042(v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8461C8);
    *(_QWORD *)v3 = v0;
    *((_QWORD *)v3 + 1) = sub_1A6225BCC;
    return OUTLINED_FUNCTION_319();
  }
  else
  {
    sub_1A62294B4();
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_76();
    swift_task_dealloc();
    OUTLINED_FUNCTION_12_9();
    return OUTLINED_FUNCTION_64_0(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_1A6225BCC()
{
  OUTLINED_FUNCTION_608();
  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_3_13();
}

void sub_1A6225C08()
{
  uint64_t v0;
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v7)(void);
  uint64_t v8;
  void (*v9)(void *);
  uint64_t v10;

  OUTLINED_FUNCTION_270();
  v1 = *(void **)(v0 + 48);
  v2 = *(unsigned __int8 *)(v0 + 72);
  if (v2 == 255)
  {
    if (*(_QWORD *)(v0 + 160))
    {
      OUTLINED_FUNCTION_732();
      goto LABEL_6;
    }
    OUTLINED_FUNCTION_499();
    OUTLINED_FUNCTION_371();
    OUTLINED_FUNCTION_178();
    OUTLINED_FUNCTION_357();
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 56);
    v3 = *(_QWORD *)(v0 + 64);
    v5 = *(_QWORD **)(v0 + 176);
    sub_1A63355E8();
    v6 = v5;
    if (v5)
    {
      sub_1A622C70C(v1, v4, v3, v2);
      OUTLINED_FUNCTION_82();
LABEL_6:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD0);
      OUTLINED_FUNCTION_585();
      swift_task_dealloc();
      OUTLINED_FUNCTION_9_9();
      v7 = (uint64_t (*)(void))OUTLINED_FUNCTION_656();
LABEL_7:
      OUTLINED_FUNCTION_64_0(v7);
      return;
    }
    if ((v2 & 1) == 0)
    {
      v8 = *(_QWORD *)(v0 + 104);

      *(_QWORD *)v8 = v1;
      *(_BYTE *)(v8 + 8) = v4 & 1;
      *(_QWORD *)(v8 + 16) = v3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD0);
      sub_1A6335600();
      OUTLINED_FUNCTION_12_9();
      OUTLINED_FUNCTION_42_0();
      v7 = (uint64_t (*)(void))OUTLINED_FUNCTION_41_0();
      goto LABEL_7;
    }
    v9 = *(void (**)(void *))(v0 + 128);
    if (v9)
    {
      sub_1A622C734(v1, v4, v3, v2);
      sub_1A61A2960((uint64_t)v9);
      v9(v1);
      v6 = *(_QWORD **)(v0 + 136);
      OUTLINED_FUNCTION_787();
      OUTLINED_FUNCTION_484();
      OUTLINED_FUNCTION_1020();
    }
    else
    {

    }
    *(_QWORD *)(v0 + 160) = v1;
    v10 = swift_task_alloc();
    OUTLINED_FUNCTION_1042(v10);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8461C8);
    *v6 = v0;
    v6[1] = sub_1A6225BCC;
    OUTLINED_FUNCTION_319();
  }
}

uint64_t sub_1A6225E38()
{
  return OUTLINED_FUNCTION_412();
}

uint64_t sub_1A6225E48(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v8 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v6;
  *v6 = v4;
  v6[1] = sub_1A61BABA8;
  return v8(a1);
}

uint64_t sub_1A6225EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v8[13] = v12;
  v8[14] = v13;
  v8[11] = a7;
  v8[12] = a8;
  v8[9] = a5;
  v8[10] = a6;
  v8[7] = a1;
  v8[8] = a4;
  v9 = sub_1A6335888();
  v8[15] = v9;
  v8[16] = *(_QWORD *)(v9 - 8);
  v8[17] = swift_task_alloc();
  v8[18] = swift_task_alloc();
  v10 = sub_1A63358A0();
  v8[19] = v10;
  v8[20] = *(_QWORD *)(v10 - 8);
  v8[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A6225F54()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  OUTLINED_FUNCTION_627();
  if (v2 != v3)
  {
    v7 = OUTLINED_FUNCTION_31_1();
    v8 = (_QWORD *)OUTLINED_FUNCTION_615(v7);
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v1 + 192) = 0;
    *(_QWORD *)(v1 + 200) = v4;
    OUTLINED_FUNCTION_306();
    if (v0)
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_71_0();
      OUTLINED_FUNCTION_9_9();
      OUTLINED_FUNCTION_12_9();
      v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_95_0();
      return OUTLINED_FUNCTION_17_7(v5);
    }
    v9 = OUTLINED_FUNCTION_31_1();
    v8 = (_QWORD *)OUTLINED_FUNCTION_368(v9);
  }
  v10 = OUTLINED_FUNCTION_118(v8);
  return OUTLINED_FUNCTION_30_3(v10, v11, v12);
}

uint64_t sub_1A6225FEC()
{
  uint64_t v0;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_62_0();
  if (v0)
  {
    OUTLINED_FUNCTION_8_12();
    return OUTLINED_FUNCTION_1_13();
  }
  else
  {
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_9_9();
    OUTLINED_FUNCTION_12_9();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_41_0();
    return OUTLINED_FUNCTION_4_17(v2);
  }
}

uint64_t sub_1A6226034()
{
  uint64_t v0;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_80_0();
  if (v0)
  {
    OUTLINED_FUNCTION_8_12();
    return OUTLINED_FUNCTION_1_13();
  }
  else
  {
    OUTLINED_FUNCTION_636();
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_9_9();
    OUTLINED_FUNCTION_12_9();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_41_0();
    return OUTLINED_FUNCTION_4_17(v2);
  }
}

#error "1A622612C: call analysis failed (funcsize=87)"

uint64_t sub_1A62261EC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_78_1();
  if (v0)
  {
    OUTLINED_FUNCTION_265();
  }
  else
  {
    OUTLINED_FUNCTION_192();
    OUTLINED_FUNCTION_198(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_2_17();
}

void sub_1A6226244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v9;
  char v10;
  uint64_t (*v11)(void);
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  OUTLINED_FUNCTION_559();
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_692();
  if (v10)
  {
    sub_1A63355E8();
    if (v9)
      goto LABEL_7;
    v12 = (_QWORD *)OUTLINED_FUNCTION_19_7();
    v13 = OUTLINED_FUNCTION_201(v12);
LABEL_10:
    OUTLINED_FUNCTION_30_3(v13, v14, a9);
    return;
  }
  OUTLINED_FUNCTION_155();
  if (!v10)
  {
    sub_1A63355E8();
    if (v9)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_71_0();
      OUTLINED_FUNCTION_9_9();
      OUTLINED_FUNCTION_12_9();
      v11 = (uint64_t (*)(void))OUTLINED_FUNCTION_95_0();
      OUTLINED_FUNCTION_17_7(v11);
      return;
    }
    v15 = OUTLINED_FUNCTION_19_7();
    v16 = (_QWORD *)OUTLINED_FUNCTION_368(v15);
    v13 = OUTLINED_FUNCTION_174(v16);
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_1A62262FC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_565(*(_QWORD *)(v0 + 160));
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_950();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_42_0();
  return OUTLINED_FUNCTION_13_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1A622634C()
{
  uint64_t v0;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_79_0();
  if (v0)
  {
    OUTLINED_FUNCTION_8_12();
    return OUTLINED_FUNCTION_1_13();
  }
  else
  {
    OUTLINED_FUNCTION_598();
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_9_9();
    OUTLINED_FUNCTION_12_9();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_41_0();
    return OUTLINED_FUNCTION_4_17(v2);
  }
}

uint64_t sub_1A6226398()
{
  uint64_t v0;
  id v1;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v3;
  char v4;
  _QWORD *v5;
  uint64_t (*v6)(void);
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_559();
  v1 = *(id *)(v0 + 264);
  OUTLINED_FUNCTION_6_3();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v3 = *(_QWORD *)(v0 + 224);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    OUTLINED_FUNCTION_58_2();
    v3 = v8;
  }
  OUTLINED_FUNCTION_816();
  if (v4)
  {
    OUTLINED_FUNCTION_75_0();
    v3 = v9;
  }
  OUTLINED_FUNCTION_647();
  sub_1A62292B0();
  OUTLINED_FUNCTION_21();
  *v5 = v3;
  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_767();
  OUTLINED_FUNCTION_9_9();
  OUTLINED_FUNCTION_42_0();
  v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_656();
  return OUTLINED_FUNCTION_17_7(v6);
}

uint64_t sub_1A6226448()
{
  __n128 *v0;
  __n128 **v1;
  uint64_t (*v2)(void);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B318);
  v0 = (__n128 *)OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_929(v0, (__n128)xmmword_1A6338890);
  OUTLINED_FUNCTION_21();
  *v1 = v0;
  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_767();
  OUTLINED_FUNCTION_9_9();
  OUTLINED_FUNCTION_42_0();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_656();
  return OUTLINED_FUNCTION_13_10(v2);
}

uint64_t sub_1A62264C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v8[13] = v12;
  v8[14] = v13;
  v8[11] = a7;
  v8[12] = a8;
  v8[9] = a5;
  v8[10] = a6;
  v8[7] = a1;
  v8[8] = a4;
  v9 = sub_1A6335888();
  v8[15] = v9;
  v8[16] = *(_QWORD *)(v9 - 8);
  v8[17] = swift_task_alloc();
  v8[18] = swift_task_alloc();
  v10 = sub_1A63358A0();
  v8[19] = v10;
  v8[20] = *(_QWORD *)(v10 - 8);
  v8[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A6226568()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  OUTLINED_FUNCTION_627();
  if (v2 != v3)
  {
    v7 = OUTLINED_FUNCTION_31_1();
    v8 = (_QWORD *)OUTLINED_FUNCTION_615(v7);
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v1 + 192) = 0;
    *(_QWORD *)(v1 + 200) = v4;
    OUTLINED_FUNCTION_306();
    if (v0)
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_71_0();
      OUTLINED_FUNCTION_9_9();
      OUTLINED_FUNCTION_12_9();
      v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_95_0();
      return OUTLINED_FUNCTION_17_7(v5);
    }
    v9 = OUTLINED_FUNCTION_31_1();
    v8 = (_QWORD *)OUTLINED_FUNCTION_368(v9);
  }
  v10 = OUTLINED_FUNCTION_118(v8);
  return OUTLINED_FUNCTION_30_3(v10, v11, v12);
}

uint64_t sub_1A6226600()
{
  uint64_t v0;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_62_0();
  if (v0)
  {
    OUTLINED_FUNCTION_8_12();
    return OUTLINED_FUNCTION_1_13();
  }
  else
  {
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_9_9();
    OUTLINED_FUNCTION_12_9();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_41_0();
    return OUTLINED_FUNCTION_4_17(v2);
  }
}

uint64_t sub_1A6226648()
{
  uint64_t v0;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_80_0();
  if (v0)
  {
    OUTLINED_FUNCTION_8_12();
    return OUTLINED_FUNCTION_1_13();
  }
  else
  {
    OUTLINED_FUNCTION_636();
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_9_9();
    OUTLINED_FUNCTION_12_9();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_41_0();
    return OUTLINED_FUNCTION_4_17(v2);
  }
}

#error "1A6226740: call analysis failed (funcsize=87)"

uint64_t sub_1A6226800()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_78_1();
  if (v0)
  {
    OUTLINED_FUNCTION_265();
  }
  else
  {
    OUTLINED_FUNCTION_192();
    OUTLINED_FUNCTION_198(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_2_17();
}

void sub_1A6226858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v9;
  char v10;
  uint64_t (*v11)(void);
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  OUTLINED_FUNCTION_559();
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_692();
  if (v10)
  {
    sub_1A63355E8();
    if (v9)
      goto LABEL_7;
    v12 = (_QWORD *)OUTLINED_FUNCTION_19_7();
    v13 = OUTLINED_FUNCTION_201(v12);
LABEL_10:
    OUTLINED_FUNCTION_30_3(v13, v14, a9);
    return;
  }
  OUTLINED_FUNCTION_155();
  if (!v10)
  {
    sub_1A63355E8();
    if (v9)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_71_0();
      OUTLINED_FUNCTION_9_9();
      OUTLINED_FUNCTION_12_9();
      v11 = (uint64_t (*)(void))OUTLINED_FUNCTION_95_0();
      OUTLINED_FUNCTION_17_7(v11);
      return;
    }
    v15 = OUTLINED_FUNCTION_19_7();
    v16 = (_QWORD *)OUTLINED_FUNCTION_368(v15);
    v13 = OUTLINED_FUNCTION_174(v16);
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_1A6226910()
{
  uint64_t v0;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_79_0();
  if (v0)
  {
    OUTLINED_FUNCTION_8_12();
    return OUTLINED_FUNCTION_1_13();
  }
  else
  {
    OUTLINED_FUNCTION_598();
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_9_9();
    OUTLINED_FUNCTION_12_9();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_41_0();
    return OUTLINED_FUNCTION_4_17(v2);
  }
}

uint64_t sub_1A622695C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v8[15] = a8;
  v8[16] = v12;
  v8[13] = a6;
  v8[14] = a7;
  v8[11] = a4;
  v8[12] = a5;
  v8[10] = a3;
  v9 = sub_1A6335888();
  v8[17] = v9;
  v8[18] = *(_QWORD *)(v9 - 8);
  v8[19] = swift_task_alloc();
  v8[20] = swift_task_alloc();
  v10 = sub_1A63358A0();
  v8[21] = v10;
  v8[22] = *(_QWORD *)(v10 - 8);
  v8[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A6226A04()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  _QWORD *v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  if (v1[10] < 1)
  {
    v5 = (_QWORD *)OUTLINED_FUNCTION_31_1();
    v1[24] = (uint64_t)v5;
    v6 = sub_1A6226AB8;
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9D8];
    v1[26] = 0;
    v1[27] = v2;
    OUTLINED_FUNCTION_306();
    if (v0)
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_761();
      OUTLINED_FUNCTION_9_9();
      OUTLINED_FUNCTION_12_9();
      v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_722();
      return OUTLINED_FUNCTION_17_7(v3);
    }
    v7 = OUTLINED_FUNCTION_31_1();
    v5 = (_QWORD *)OUTLINED_FUNCTION_506(v7);
    v6 = sub_1A6226B04;
  }
  *v5 = v1;
  v5[1] = v6;
  v8 = OUTLINED_FUNCTION_855();
  return OUTLINED_FUNCTION_30_3(v8, 0, v9);
}

uint64_t sub_1A6226AB8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_295();
  OUTLINED_FUNCTION_720();
  *(_QWORD *)(v1 + 200) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_3_13();
}

uint64_t sub_1A6226B04()
{
  uint64_t v0;

  OUTLINED_FUNCTION_600();
  if (!v0)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_1_13();
}

uint64_t sub_1A6226B48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  _QWORD *v7;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_306();
  if (v0)
  {
    OUTLINED_FUNCTION_94();
LABEL_14:
    OUTLINED_FUNCTION_7_3();
    OUTLINED_FUNCTION_761();
    OUTLINED_FUNCTION_9_9();
    OUTLINED_FUNCTION_12_9();
    v12 = (uint64_t (*)(void))OUTLINED_FUNCTION_949();
    return OUTLINED_FUNCTION_10_8(v12);
  }
  OUTLINED_FUNCTION_59();
  v2 = OUTLINED_FUNCTION_316();
  OUTLINED_FUNCTION_94();
  if ((v2 & 1) == 0)
  {
    OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_21_2();
    v9 = OUTLINED_FUNCTION_305();
    v10 = *(_QWORD *)(v1 + 216);
    if ((v9 & 1) == 0)
    {
      OUTLINED_FUNCTION_58_2();
      v10 = v14;
    }
    OUTLINED_FUNCTION_330();
    if (v4)
    {
      OUTLINED_FUNCTION_75_0();
      v10 = v15;
    }
    OUTLINED_FUNCTION_202();
    sub_1A62292B0();
    OUTLINED_FUNCTION_21();
    *v11 = v10;
    OUTLINED_FUNCTION_76();
    goto LABEL_14;
  }
  OUTLINED_FUNCTION_21_2();
  if ((OUTLINED_FUNCTION_305() & 1) == 0)
    OUTLINED_FUNCTION_128();
  OUTLINED_FUNCTION_331();
  if (v4)
  {
    OUTLINED_FUNCTION_129();
    v3 = v13;
  }
  *(_QWORD *)(v1 + 240) = v3;
  v16 = *(_QWORD *)(v1 + 144);
  v5 = *(_QWORD *)(v1 + 128);
  OUTLINED_FUNCTION_203(*(_QWORD *)(v1 + 232), v3, *(uint64_t (**)(void))(v1 + 120));
  OUTLINED_FUNCTION_214();
  *(_QWORD *)(v1 + 64) = v5;
  *(_QWORD *)(v1 + 72) = v2;
  *(_QWORD *)(v1 + 48) = 0;
  *(_QWORD *)(v1 + 40) = 0;
  *(_BYTE *)(v1 + 56) = 1;
  sub_1A622D268((uint64_t)&unk_1ED219F10);
  OUTLINED_FUNCTION_97();
  sub_1A622D268((uint64_t)&unk_1ED219F08);
  OUTLINED_FUNCTION_100_0();
  v6 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8);
  *(_QWORD *)(v1 + 248) = v6;
  OUTLINED_FUNCTION_218(v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 256) = v7;
  *v7 = v1;
  v7[1] = sub_1A6226D28;
  OUTLINED_FUNCTION_219(*(_QWORD *)(v1 + 160));
  return OUTLINED_FUNCTION_34_1();
}

uint64_t sub_1A6226D28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_597();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v1 + 248))(*(_QWORD *)(v1 + 160), *(_QWORD *)(v1 + 136));
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 176);
    (*(void (**)(_QWORD, _QWORD))(v1 + 248))(*(_QWORD *)(v1 + 160), *(_QWORD *)(v1 + 136));
    OUTLINED_FUNCTION_198(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_2_17();
}

void sub_1A6226D9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(void);
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void (*v12)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 208) + 1;

  v3 = *(_QWORD *)(v0 + 264);
  if (v2 == v1)
  {
    sub_1A63355E8();
    if (v3)
      goto LABEL_6;
    v7 = (_QWORD *)OUTLINED_FUNCTION_31_1();
    *(_QWORD *)(v0 + 272) = v7;
    *v7 = v0;
    v7[1] = sub_1A6226F0C;
    v8 = *(_QWORD *)(v0 + 80);
    v9 = v0 + 16;
LABEL_9:
    v12(v9, v8);
    return;
  }
  v4 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 208) + 1;
  *(_QWORD *)(v0 + 208) = v5;
  *(_QWORD *)(v0 + 216) = v4;
  if (v5 != *(_QWORD *)(v0 + 80))
  {
    sub_1A63355E8();
    if (v3)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_761();
      OUTLINED_FUNCTION_9_9();
      OUTLINED_FUNCTION_12_9();
      v6 = (void (*)(void))OUTLINED_FUNCTION_722();
      v6();
      return;
    }
    v10 = OUTLINED_FUNCTION_31_1();
    v11 = (_QWORD *)OUTLINED_FUNCTION_506(v10);
    *v11 = v0;
    v11[1] = sub_1A6226B04;
    v9 = v0 + 16;
    v8 = v5;
    goto LABEL_9;
  }
  __break(1u);
}

uint64_t sub_1A6226EB8()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_565(*(_QWORD *)(v0 + 176));
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_7_3();
  swift_task_dealloc();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_42_0();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_949();
  return OUTLINED_FUNCTION_417(v1);
}

uint64_t sub_1A6226F0C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_440(v2);
  *(_QWORD *)(v0 + 280) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_1_13();
}

uint64_t sub_1A6226F60()
{
  uint64_t v0;
  id v1;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v3;
  char v4;
  _QWORD *v5;
  uint64_t (*v6)(void);
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_559();
  v1 = *(id *)(v0 + 280);
  OUTLINED_FUNCTION_6_3();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v3 = *(_QWORD *)(v0 + 240);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    OUTLINED_FUNCTION_58_2();
    v3 = v8;
  }
  OUTLINED_FUNCTION_816();
  if (v4)
  {
    OUTLINED_FUNCTION_75_0();
    v3 = v9;
  }
  OUTLINED_FUNCTION_647();
  sub_1A62292B0();
  OUTLINED_FUNCTION_21();
  *v5 = v3;
  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_933();
  OUTLINED_FUNCTION_9_9();
  OUTLINED_FUNCTION_42_0();
  v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_832();
  return OUTLINED_FUNCTION_17_7(v6);
}

uint64_t sub_1A6227010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_729();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9_9();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_837();
  return v3(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1A6227070()
{
  __n128 *v0;
  __n128 **v1;
  uint64_t (*v2)(void);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B318);
  v0 = (__n128 *)OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_929(v0, (__n128)xmmword_1A6338890);
  OUTLINED_FUNCTION_21();
  *v1 = v0;
  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_933();
  OUTLINED_FUNCTION_9_9();
  OUTLINED_FUNCTION_42_0();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_832();
  return OUTLINED_FUNCTION_417(v2);
}

uint64_t sub_1A62270E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v8[13] = v12;
  v8[14] = v13;
  v8[11] = a7;
  v8[12] = a8;
  v8[9] = a5;
  v8[10] = a6;
  v8[7] = a1;
  v8[8] = a4;
  v9 = sub_1A6335888();
  v8[15] = v9;
  v8[16] = *(_QWORD *)(v9 - 8);
  v8[17] = swift_task_alloc();
  v8[18] = swift_task_alloc();
  v10 = sub_1A63358A0();
  v8[19] = v10;
  v8[20] = *(_QWORD *)(v10 - 8);
  v8[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A622718C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  OUTLINED_FUNCTION_627();
  if (v2 != v3)
  {
    v7 = OUTLINED_FUNCTION_31_1();
    v8 = (_QWORD *)OUTLINED_FUNCTION_615(v7);
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v1 + 192) = 0;
    *(_QWORD *)(v1 + 200) = v4;
    OUTLINED_FUNCTION_306();
    if (v0)
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_71_0();
      OUTLINED_FUNCTION_9_9();
      OUTLINED_FUNCTION_12_9();
      v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_95_0();
      return OUTLINED_FUNCTION_17_7(v5);
    }
    v9 = OUTLINED_FUNCTION_31_1();
    v8 = (_QWORD *)OUTLINED_FUNCTION_368(v9);
  }
  v10 = OUTLINED_FUNCTION_118(v8);
  return OUTLINED_FUNCTION_30_3(v10, v11, v12);
}

uint64_t sub_1A6227224()
{
  uint64_t v0;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_80_0();
  if (v0)
  {
    OUTLINED_FUNCTION_8_12();
    return OUTLINED_FUNCTION_1_13();
  }
  else
  {
    OUTLINED_FUNCTION_636();
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_9_9();
    OUTLINED_FUNCTION_12_9();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_41_0();
    return OUTLINED_FUNCTION_4_17(v2);
  }
}

#error "1A622731C: call analysis failed (funcsize=87)"

uint64_t sub_1A62273DC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_78_1();
  if (v0)
  {
    OUTLINED_FUNCTION_265();
  }
  else
  {
    OUTLINED_FUNCTION_192();
    OUTLINED_FUNCTION_198(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_2_17();
}

void sub_1A6227434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v9;
  char v10;
  uint64_t (*v11)(void);
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  OUTLINED_FUNCTION_559();
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_692();
  if (v10)
  {
    sub_1A63355E8();
    if (v9)
      goto LABEL_7;
    v12 = (_QWORD *)OUTLINED_FUNCTION_19_7();
    v13 = OUTLINED_FUNCTION_201(v12);
LABEL_10:
    OUTLINED_FUNCTION_30_3(v13, v14, a9);
    return;
  }
  OUTLINED_FUNCTION_155();
  if (!v10)
  {
    sub_1A63355E8();
    if (v9)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_71_0();
      OUTLINED_FUNCTION_9_9();
      OUTLINED_FUNCTION_12_9();
      v11 = (uint64_t (*)(void))OUTLINED_FUNCTION_95_0();
      OUTLINED_FUNCTION_17_7(v11);
      return;
    }
    v15 = OUTLINED_FUNCTION_19_7();
    v16 = (_QWORD *)OUTLINED_FUNCTION_368(v15);
    v13 = OUTLINED_FUNCTION_174(v16);
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_1A62274EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v8[13] = v12;
  v8[14] = v13;
  v8[11] = a7;
  v8[12] = a8;
  v8[9] = a5;
  v8[10] = a6;
  v8[7] = a1;
  v8[8] = a4;
  v9 = sub_1A6335888();
  v8[15] = v9;
  v8[16] = *(_QWORD *)(v9 - 8);
  v8[17] = swift_task_alloc();
  v8[18] = swift_task_alloc();
  v10 = sub_1A63358A0();
  v8[19] = v10;
  v8[20] = *(_QWORD *)(v10 - 8);
  v8[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A6227594()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  OUTLINED_FUNCTION_627();
  if (v2 != v3)
  {
    v7 = OUTLINED_FUNCTION_31_1();
    v8 = (_QWORD *)OUTLINED_FUNCTION_615(v7);
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v1 + 192) = 0;
    *(_QWORD *)(v1 + 200) = v4;
    OUTLINED_FUNCTION_306();
    if (v0)
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_71_0();
      OUTLINED_FUNCTION_9_9();
      OUTLINED_FUNCTION_12_9();
      v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_95_0();
      return OUTLINED_FUNCTION_17_7(v5);
    }
    v9 = OUTLINED_FUNCTION_31_1();
    v8 = (_QWORD *)OUTLINED_FUNCTION_368(v9);
  }
  v10 = OUTLINED_FUNCTION_118(v8);
  return OUTLINED_FUNCTION_30_3(v10, v11, v12);
}

uint64_t sub_1A622762C()
{
  uint64_t v0;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_80_0();
  if (v0)
  {
    OUTLINED_FUNCTION_8_12();
    return OUTLINED_FUNCTION_1_13();
  }
  else
  {
    OUTLINED_FUNCTION_636();
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_9_9();
    OUTLINED_FUNCTION_12_9();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_41_0();
    return OUTLINED_FUNCTION_4_17(v2);
  }
}

#error "1A6227724: call analysis failed (funcsize=87)"

uint64_t sub_1A62277E4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_78_1();
  if (v0)
  {
    OUTLINED_FUNCTION_265();
  }
  else
  {
    OUTLINED_FUNCTION_192();
    OUTLINED_FUNCTION_198(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_2_17();
}

void sub_1A622783C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v9;
  char v10;
  uint64_t (*v11)(void);
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  OUTLINED_FUNCTION_559();
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_692();
  if (v10)
  {
    sub_1A63355E8();
    if (v9)
      goto LABEL_7;
    v12 = (_QWORD *)OUTLINED_FUNCTION_19_7();
    v13 = OUTLINED_FUNCTION_201(v12);
LABEL_10:
    OUTLINED_FUNCTION_30_3(v13, v14, a9);
    return;
  }
  OUTLINED_FUNCTION_155();
  if (!v10)
  {
    sub_1A63355E8();
    if (v9)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_71_0();
      OUTLINED_FUNCTION_9_9();
      OUTLINED_FUNCTION_12_9();
      v11 = (uint64_t (*)(void))OUTLINED_FUNCTION_95_0();
      OUTLINED_FUNCTION_17_7(v11);
      return;
    }
    v15 = OUTLINED_FUNCTION_19_7();
    v16 = (_QWORD *)OUTLINED_FUNCTION_368(v15);
    v13 = OUTLINED_FUNCTION_174(v16);
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_1A62278F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v8[13] = v12;
  v8[14] = v13;
  v8[11] = a7;
  v8[12] = a8;
  v8[9] = a5;
  v8[10] = a6;
  v8[7] = a1;
  v8[8] = a4;
  v9 = sub_1A6335888();
  v8[15] = v9;
  v8[16] = *(_QWORD *)(v9 - 8);
  v8[17] = swift_task_alloc();
  v8[18] = swift_task_alloc();
  v10 = sub_1A63358A0();
  v8[19] = v10;
  v8[20] = *(_QWORD *)(v10 - 8);
  v8[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A622799C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  OUTLINED_FUNCTION_627();
  if (v2 != v3)
  {
    v7 = OUTLINED_FUNCTION_31_1();
    v8 = (_QWORD *)OUTLINED_FUNCTION_615(v7);
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v1 + 192) = 0;
    *(_QWORD *)(v1 + 200) = v4;
    OUTLINED_FUNCTION_306();
    if (v0)
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_71_0();
      OUTLINED_FUNCTION_9_9();
      OUTLINED_FUNCTION_12_9();
      v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_95_0();
      return OUTLINED_FUNCTION_17_7(v5);
    }
    v9 = OUTLINED_FUNCTION_31_1();
    v8 = (_QWORD *)OUTLINED_FUNCTION_368(v9);
  }
  v10 = OUTLINED_FUNCTION_118(v8);
  return OUTLINED_FUNCTION_30_3(v10, v11, v12);
}

uint64_t sub_1A6227A34()
{
  uint64_t v0;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_80_0();
  if (v0)
  {
    OUTLINED_FUNCTION_8_12();
    return OUTLINED_FUNCTION_1_13();
  }
  else
  {
    OUTLINED_FUNCTION_636();
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_9_9();
    OUTLINED_FUNCTION_12_9();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_41_0();
    return OUTLINED_FUNCTION_4_17(v2);
  }
}

#error "1A6227B2C: call analysis failed (funcsize=87)"

uint64_t sub_1A6227BEC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_78_1();
  if (v0)
  {
    OUTLINED_FUNCTION_265();
  }
  else
  {
    OUTLINED_FUNCTION_192();
    OUTLINED_FUNCTION_198(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_2_17();
}

void sub_1A6227C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v9;
  char v10;
  uint64_t (*v11)(void);
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  OUTLINED_FUNCTION_559();
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_692();
  if (v10)
  {
    sub_1A63355E8();
    if (v9)
      goto LABEL_7;
    v12 = (_QWORD *)OUTLINED_FUNCTION_19_7();
    v13 = OUTLINED_FUNCTION_201(v12);
LABEL_10:
    OUTLINED_FUNCTION_30_3(v13, v14, a9);
    return;
  }
  OUTLINED_FUNCTION_155();
  if (!v10)
  {
    sub_1A63355E8();
    if (v9)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_71_0();
      OUTLINED_FUNCTION_9_9();
      OUTLINED_FUNCTION_12_9();
      v11 = (uint64_t (*)(void))OUTLINED_FUNCTION_95_0();
      OUTLINED_FUNCTION_17_7(v11);
      return;
    }
    v15 = OUTLINED_FUNCTION_19_7();
    v16 = (_QWORD *)OUTLINED_FUNCTION_368(v15);
    v13 = OUTLINED_FUNCTION_174(v16);
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_1A6227CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v8[13] = v12;
  v8[14] = v13;
  v8[11] = a7;
  v8[12] = a8;
  v8[9] = a5;
  v8[10] = a6;
  v8[7] = a1;
  v8[8] = a4;
  v9 = sub_1A6335888();
  v8[15] = v9;
  v8[16] = *(_QWORD *)(v9 - 8);
  v8[17] = swift_task_alloc();
  v8[18] = swift_task_alloc();
  v10 = sub_1A63358A0();
  v8[19] = v10;
  v8[20] = *(_QWORD *)(v10 - 8);
  v8[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A6227DA4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  OUTLINED_FUNCTION_627();
  if (v2 != v3)
  {
    v7 = OUTLINED_FUNCTION_31_1();
    v8 = (_QWORD *)OUTLINED_FUNCTION_615(v7);
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v1 + 192) = 0;
    *(_QWORD *)(v1 + 200) = v4;
    OUTLINED_FUNCTION_306();
    if (v0)
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_71_0();
      OUTLINED_FUNCTION_9_9();
      OUTLINED_FUNCTION_12_9();
      v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_95_0();
      return OUTLINED_FUNCTION_17_7(v5);
    }
    v9 = OUTLINED_FUNCTION_31_1();
    v8 = (_QWORD *)OUTLINED_FUNCTION_368(v9);
  }
  v10 = OUTLINED_FUNCTION_118(v8);
  return OUTLINED_FUNCTION_30_3(v10, v11, v12);
}

uint64_t sub_1A6227E3C()
{
  uint64_t v0;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_80_0();
  if (v0)
  {
    OUTLINED_FUNCTION_8_12();
    return OUTLINED_FUNCTION_1_13();
  }
  else
  {
    OUTLINED_FUNCTION_636();
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_9_9();
    OUTLINED_FUNCTION_12_9();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_41_0();
    return OUTLINED_FUNCTION_4_17(v2);
  }
}

#error "1A6227F34: call analysis failed (funcsize=87)"

uint64_t sub_1A6227FF4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_78_1();
  if (v0)
  {
    OUTLINED_FUNCTION_265();
  }
  else
  {
    OUTLINED_FUNCTION_192();
    OUTLINED_FUNCTION_198(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_2_17();
}

void sub_1A622804C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v9;
  char v10;
  uint64_t (*v11)(void);
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  OUTLINED_FUNCTION_559();
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_692();
  if (v10)
  {
    sub_1A63355E8();
    if (v9)
      goto LABEL_7;
    v12 = (_QWORD *)OUTLINED_FUNCTION_19_7();
    v13 = OUTLINED_FUNCTION_201(v12);
LABEL_10:
    OUTLINED_FUNCTION_30_3(v13, v14, a9);
    return;
  }
  OUTLINED_FUNCTION_155();
  if (!v10)
  {
    sub_1A63355E8();
    if (v9)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_71_0();
      OUTLINED_FUNCTION_9_9();
      OUTLINED_FUNCTION_12_9();
      v11 = (uint64_t (*)(void))OUTLINED_FUNCTION_95_0();
      OUTLINED_FUNCTION_17_7(v11);
      return;
    }
    v15 = OUTLINED_FUNCTION_19_7();
    v16 = (_QWORD *)OUTLINED_FUNCTION_368(v15);
    v13 = OUTLINED_FUNCTION_174(v16);
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_1A6228104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v8[13] = v12;
  v8[14] = v13;
  v8[11] = a7;
  v8[12] = a8;
  v8[9] = a5;
  v8[10] = a6;
  v8[7] = a1;
  v8[8] = a4;
  v9 = sub_1A6335888();
  v8[15] = v9;
  v8[16] = *(_QWORD *)(v9 - 8);
  v8[17] = swift_task_alloc();
  v8[18] = swift_task_alloc();
  v10 = sub_1A63358A0();
  v8[19] = v10;
  v8[20] = *(_QWORD *)(v10 - 8);
  v8[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A62281AC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  OUTLINED_FUNCTION_627();
  if (v2 != v3)
  {
    v7 = OUTLINED_FUNCTION_31_1();
    v8 = (_QWORD *)OUTLINED_FUNCTION_615(v7);
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v1 + 192) = 0;
    *(_QWORD *)(v1 + 200) = v4;
    OUTLINED_FUNCTION_306();
    if (v0)
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_71_0();
      OUTLINED_FUNCTION_9_9();
      OUTLINED_FUNCTION_12_9();
      v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_95_0();
      return OUTLINED_FUNCTION_17_7(v5);
    }
    v9 = OUTLINED_FUNCTION_31_1();
    v8 = (_QWORD *)OUTLINED_FUNCTION_368(v9);
  }
  v10 = OUTLINED_FUNCTION_118(v8);
  return OUTLINED_FUNCTION_30_3(v10, v11, v12);
}

uint64_t sub_1A6228244()
{
  uint64_t v0;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_80_0();
  if (v0)
  {
    OUTLINED_FUNCTION_8_12();
    return OUTLINED_FUNCTION_1_13();
  }
  else
  {
    OUTLINED_FUNCTION_636();
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_9_9();
    OUTLINED_FUNCTION_12_9();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_41_0();
    return OUTLINED_FUNCTION_4_17(v2);
  }
}

#error "1A622833C: call analysis failed (funcsize=87)"

uint64_t sub_1A62283FC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_78_1();
  if (v0)
  {
    OUTLINED_FUNCTION_265();
  }
  else
  {
    OUTLINED_FUNCTION_192();
    OUTLINED_FUNCTION_198(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_2_17();
}

void sub_1A6228454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v9;
  char v10;
  uint64_t (*v11)(void);
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  OUTLINED_FUNCTION_559();
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_692();
  if (v10)
  {
    sub_1A63355E8();
    if (v9)
      goto LABEL_7;
    v12 = (_QWORD *)OUTLINED_FUNCTION_19_7();
    v13 = OUTLINED_FUNCTION_201(v12);
LABEL_10:
    OUTLINED_FUNCTION_30_3(v13, v14, a9);
    return;
  }
  OUTLINED_FUNCTION_155();
  if (!v10)
  {
    sub_1A63355E8();
    if (v9)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_71_0();
      OUTLINED_FUNCTION_9_9();
      OUTLINED_FUNCTION_12_9();
      v11 = (uint64_t (*)(void))OUTLINED_FUNCTION_95_0();
      OUTLINED_FUNCTION_17_7(v11);
      return;
    }
    v15 = OUTLINED_FUNCTION_19_7();
    v16 = (_QWORD *)OUTLINED_FUNCTION_368(v15);
    v13 = OUTLINED_FUNCTION_174(v16);
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_1A622850C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v8[13] = v12;
  v8[14] = v13;
  v8[11] = a7;
  v8[12] = a8;
  v8[9] = a5;
  v8[10] = a6;
  v8[7] = a1;
  v8[8] = a4;
  v9 = sub_1A6335888();
  v8[15] = v9;
  v8[16] = *(_QWORD *)(v9 - 8);
  v8[17] = swift_task_alloc();
  v8[18] = swift_task_alloc();
  v10 = sub_1A63358A0();
  v8[19] = v10;
  v8[20] = *(_QWORD *)(v10 - 8);
  v8[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A62285B4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  OUTLINED_FUNCTION_627();
  if (v2 != v3)
  {
    v7 = OUTLINED_FUNCTION_31_1();
    v8 = (_QWORD *)OUTLINED_FUNCTION_615(v7);
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v1 + 192) = 0;
    *(_QWORD *)(v1 + 200) = v4;
    OUTLINED_FUNCTION_306();
    if (v0)
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_71_0();
      OUTLINED_FUNCTION_9_9();
      OUTLINED_FUNCTION_12_9();
      v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_95_0();
      return OUTLINED_FUNCTION_17_7(v5);
    }
    v9 = OUTLINED_FUNCTION_31_1();
    v8 = (_QWORD *)OUTLINED_FUNCTION_368(v9);
  }
  v10 = OUTLINED_FUNCTION_118(v8);
  return OUTLINED_FUNCTION_30_3(v10, v11, v12);
}

uint64_t sub_1A622864C()
{
  uint64_t v0;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_80_0();
  if (v0)
  {
    OUTLINED_FUNCTION_8_12();
    return OUTLINED_FUNCTION_1_13();
  }
  else
  {
    OUTLINED_FUNCTION_636();
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_9_9();
    OUTLINED_FUNCTION_12_9();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_41_0();
    return OUTLINED_FUNCTION_4_17(v2);
  }
}

#error "1A6228744: call analysis failed (funcsize=87)"

uint64_t sub_1A6228804()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_78_1();
  if (v0)
  {
    OUTLINED_FUNCTION_265();
  }
  else
  {
    OUTLINED_FUNCTION_192();
    OUTLINED_FUNCTION_198(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_2_17();
}

void sub_1A622885C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v9;
  char v10;
  uint64_t (*v11)(void);
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  OUTLINED_FUNCTION_559();
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_692();
  if (v10)
  {
    sub_1A63355E8();
    if (v9)
      goto LABEL_7;
    v12 = (_QWORD *)OUTLINED_FUNCTION_19_7();
    v13 = OUTLINED_FUNCTION_201(v12);
LABEL_10:
    OUTLINED_FUNCTION_30_3(v13, v14, a9);
    return;
  }
  OUTLINED_FUNCTION_155();
  if (!v10)
  {
    sub_1A63355E8();
    if (v9)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_71_0();
      OUTLINED_FUNCTION_9_9();
      OUTLINED_FUNCTION_12_9();
      v11 = (uint64_t (*)(void))OUTLINED_FUNCTION_95_0();
      OUTLINED_FUNCTION_17_7(v11);
      return;
    }
    v15 = OUTLINED_FUNCTION_19_7();
    v16 = (_QWORD *)OUTLINED_FUNCTION_368(v15);
    v13 = OUTLINED_FUNCTION_174(v16);
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_1A6228914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v8[13] = v12;
  v8[14] = v13;
  v8[11] = a7;
  v8[12] = a8;
  v8[9] = a5;
  v8[10] = a6;
  v8[7] = a1;
  v8[8] = a4;
  v9 = sub_1A6335888();
  v8[15] = v9;
  v8[16] = *(_QWORD *)(v9 - 8);
  v8[17] = swift_task_alloc();
  v8[18] = swift_task_alloc();
  v10 = sub_1A63358A0();
  v8[19] = v10;
  v8[20] = *(_QWORD *)(v10 - 8);
  v8[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A62289BC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  OUTLINED_FUNCTION_627();
  if (v2 != v3)
  {
    v7 = OUTLINED_FUNCTION_31_1();
    v8 = (_QWORD *)OUTLINED_FUNCTION_615(v7);
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v1 + 208) = 0;
    *(_QWORD *)(v1 + 216) = v4;
    OUTLINED_FUNCTION_306();
    if (v0)
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_71_0();
      OUTLINED_FUNCTION_9_9();
      OUTLINED_FUNCTION_12_9();
      v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_95_0();
      return OUTLINED_FUNCTION_17_7(v5);
    }
    v9 = OUTLINED_FUNCTION_31_1();
    v8 = (_QWORD *)OUTLINED_FUNCTION_506(v9);
  }
  v10 = OUTLINED_FUNCTION_118(v8);
  return OUTLINED_FUNCTION_30_3(v10, v11, v12);
}

uint64_t sub_1A6228A54()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_440(v2);
  *(_QWORD *)(v0 + 200) = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_8_12();
    return OUTLINED_FUNCTION_1_13();
  }
  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_9_9();
    OUTLINED_FUNCTION_12_9();
    v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_41_0();
    return OUTLINED_FUNCTION_4_17(v4);
  }
}

uint64_t sub_1A6228AB4()
{
  uint64_t v0;
  id v1;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v3;
  char v4;
  _QWORD *v5;
  uint64_t (*v6)(void);
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_559();
  v1 = *(id *)(v0 + 200);
  OUTLINED_FUNCTION_6_3();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v3 = *(_QWORD *)(v0 + 240);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    OUTLINED_FUNCTION_58_2();
    v3 = v8;
  }
  OUTLINED_FUNCTION_816();
  if (v4)
  {
    OUTLINED_FUNCTION_75_0();
    v3 = v9;
  }
  OUTLINED_FUNCTION_647();
  sub_1A62292B0();
  OUTLINED_FUNCTION_21();
  *v5 = v3;
  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_767();
  OUTLINED_FUNCTION_9_9();
  OUTLINED_FUNCTION_42_0();
  v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_656();
  return OUTLINED_FUNCTION_17_7(v6);
}

uint64_t sub_1A6228B64()
{
  uint64_t v0;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_600();
  if (v0)
  {
    OUTLINED_FUNCTION_8_12();
    return OUTLINED_FUNCTION_1_13();
  }
  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_9_9();
    OUTLINED_FUNCTION_12_9();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_41_0();
    return OUTLINED_FUNCTION_4_17(v2);
  }
}

uint64_t sub_1A6228BB4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  _QWORD *v6;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v11)(void);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_306();
  if (v0)
  {
    OUTLINED_FUNCTION_94();
LABEL_14:
    OUTLINED_FUNCTION_7_3();
    OUTLINED_FUNCTION_71_0();
    OUTLINED_FUNCTION_9_9();
    OUTLINED_FUNCTION_12_9();
    v11 = (uint64_t (*)(void))OUTLINED_FUNCTION_610();
    return OUTLINED_FUNCTION_10_8(v11);
  }
  OUTLINED_FUNCTION_59();
  v2 = OUTLINED_FUNCTION_316();
  OUTLINED_FUNCTION_94();
  if ((v2 & 1) == 0)
  {
    OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_21_2();
    v8 = OUTLINED_FUNCTION_305();
    v9 = *(_QWORD *)(v1 + 216);
    if ((v8 & 1) == 0)
    {
      OUTLINED_FUNCTION_58_2();
      v9 = v13;
    }
    OUTLINED_FUNCTION_330();
    if (v4)
    {
      OUTLINED_FUNCTION_75_0();
      v9 = v14;
    }
    OUTLINED_FUNCTION_202();
    sub_1A62292B0();
    OUTLINED_FUNCTION_21();
    *v10 = v9;
    OUTLINED_FUNCTION_76();
    goto LABEL_14;
  }
  OUTLINED_FUNCTION_21_2();
  if ((OUTLINED_FUNCTION_305() & 1) == 0)
    OUTLINED_FUNCTION_128();
  OUTLINED_FUNCTION_331();
  if (v4)
  {
    OUTLINED_FUNCTION_129();
    v3 = v12;
  }
  *(_QWORD *)(v1 + 240) = v3;
  v15 = *(_QWORD *)(v1 + 128);
  OUTLINED_FUNCTION_203(*(_QWORD *)(v1 + 232), v3, *(uint64_t (**)(void))(v1 + 104));
  OUTLINED_FUNCTION_214();
  OUTLINED_FUNCTION_65();
  sub_1A622D268((uint64_t)&unk_1ED219F10);
  OUTLINED_FUNCTION_97();
  sub_1A622D268((uint64_t)&unk_1ED219F08);
  OUTLINED_FUNCTION_100_0();
  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8);
  *(_QWORD *)(v1 + 248) = v5;
  OUTLINED_FUNCTION_218(v5);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 256) = v6;
  *v6 = v1;
  v6[1] = sub_1A6228D74;
  OUTLINED_FUNCTION_219(*(_QWORD *)(v1 + 144));
  return OUTLINED_FUNCTION_34_1();
}

uint64_t sub_1A6228D74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_597();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v1 + 248))(*(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 120));
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 160);
    (*(void (**)(_QWORD, _QWORD))(v1 + 248))(*(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 120));
    OUTLINED_FUNCTION_198(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  OUTLINED_FUNCTION_8_12();
  return OUTLINED_FUNCTION_2_17();
}

void sub_1A6228DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  OUTLINED_FUNCTION_559();
  v10 = *(_QWORD *)(v9 + 64);
  v11 = *(_QWORD *)(v9 + 208) + 1;

  v12 = *(_QWORD *)(v9 + 264);
  if (v11 == v10)
  {
    sub_1A63355E8();
    if (v12)
      goto LABEL_6;
    v16 = (_QWORD *)OUTLINED_FUNCTION_19_7();
    *(_QWORD *)(v9 + 192) = v16;
    *v16 = v9;
    v16[1] = sub_1A6228A54;
    v17 = *(_QWORD *)(v9 + 56);
    v18 = *(_QWORD *)(v9 + 64);
LABEL_9:
    OUTLINED_FUNCTION_30_3(v17, v18, a9);
    return;
  }
  v13 = *(_QWORD *)(v9 + 240);
  v14 = *(_QWORD *)(v9 + 208) + 1;
  *(_QWORD *)(v9 + 208) = v14;
  *(_QWORD *)(v9 + 216) = v13;
  if (v14 != *(_QWORD *)(v9 + 64))
  {
    sub_1A63355E8();
    if (v12)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_71_0();
      OUTLINED_FUNCTION_9_9();
      OUTLINED_FUNCTION_12_9();
      v15 = (uint64_t (*)(void))OUTLINED_FUNCTION_95_0();
      OUTLINED_FUNCTION_17_7(v15);
      return;
    }
    v19 = OUTLINED_FUNCTION_19_7();
    v20 = (_QWORD *)OUTLINED_FUNCTION_506(v19);
    v17 = OUTLINED_FUNCTION_174(v20);
    goto LABEL_9;
  }
  __break(1u);
}

uint64_t sub_1A6228ED8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_565(*(_QWORD *)(v0 + 160));
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_950();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_42_0();
  return OUTLINED_FUNCTION_13_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1A6228F28()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B8B0);
  sub_1A61B67FC();
  sub_1A6335540();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B8B8);
  OUTLINED_FUNCTION_1_1();
  return sub_1A6334E5C();
}

uint64_t sub_1A6228FC0()
{
  return sub_1A6228F28();
}

uint64_t sub_1A6228FE0(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1A6229044;
  return v6(a1);
}

uint64_t sub_1A6229044()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_103_0();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_41_0();
  return OUTLINED_FUNCTION_6_10(v0);
}

void sub_1A6229078(uint64_t a1)
{
  sub_1A6271CC4(a1);
}

#error "1A62290BC: call analysis failed (funcsize=12)"

uint64_t sub_1A62290CC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_291();
  OUTLINED_FUNCTION_308();
  OUTLINED_FUNCTION_289();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_22_7();
  OUTLINED_FUNCTION_109_0();
  return sub_1A61FD038(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1A6229140()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A6229164(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(int **)(v1 + 16);
  v5 = swift_task_alloc();
  v6 = (_QWORD *)OUTLINED_FUNCTION_37_1(v5);
  *v6 = v2;
  v6[1] = sub_1A61BABA8;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EE845F10 + dword_1EE845F10))(a1, v4);
}

uint64_t sub_1A62291D4(uint64_t a1, uint64_t a2)
{
  __n128 *v2;

  return sub_1A61DF874(a1, a2, v2 + 1, v2[5].n128_i64[0]);
}

uint64_t sub_1A62291E4(uint64_t a1, uint64_t a2)
{
  __n128 *v2;

  return sub_1A61DFAE0(a1, a2, v2 + 1, v2[5].n128_i64[0]);
}

uint64_t sub_1A62291F4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_509();
  OUTLINED_FUNCTION_308();
  OUTLINED_FUNCTION_401();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_37_1(v0);
  OUTLINED_FUNCTION_612(v1);
  OUTLINED_FUNCTION_489();
  return sub_1A6204A20(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1A6229250()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_92_0();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_22_7();
  OUTLINED_FUNCTION_109_0();
  return sub_1A622850C(v3, v4, v5, v6, v7, v8, v9, v10);
}

unint64_t sub_1A62292B0()
{
  unint64_t result;

  result = qword_1ED21B690;
  if (!qword_1ED21B690)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633A294, &type metadata for RetriedError);
    atomic_store(result, (unint64_t *)&qword_1ED21B690);
  }
  return result;
}

uint64_t sub_1A62292F0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  OUTLINED_FUNCTION_335();
  OUTLINED_FUNCTION_308();
  OUTLINED_FUNCTION_290();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  v3 = OUTLINED_FUNCTION_120();
  return sub_1A620558C(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1A6229354()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_291();
  OUTLINED_FUNCTION_308();
  OUTLINED_FUNCTION_200();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_22_7();
  OUTLINED_FUNCTION_109_0();
  return sub_1A6205BB0(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1A62293CC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_558();
  OUTLINED_FUNCTION_391();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  v3 = OUTLINED_FUNCTION_187();
  return sub_1A6223F20(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1A6229420()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_729();
  OUTLINED_FUNCTION_385();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_243();
  OUTLINED_FUNCTION_837();
  return sub_1A6225464(v3, v4, v5, v6, v7);
}

uint64_t sub_1A6229474()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_558();
  OUTLINED_FUNCTION_550();
  v0 = OUTLINED_FUNCTION_680();
  v1 = (_QWORD *)OUTLINED_FUNCTION_37_1(v0);
  v2 = OUTLINED_FUNCTION_117(v1);
  return OUTLINED_FUNCTION_107_0(v2, v3, v4, v5, v6, v7);
}

unint64_t sub_1A62294B4()
{
  unint64_t result;

  result = qword_1EE845FC8;
  if (!qword_1EE845FC8)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633A348, &type metadata for TaskError);
    atomic_store(result, &qword_1EE845FC8);
  }
  return result;
}

uint64_t sub_1A62294F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_308();
  OUTLINED_FUNCTION_264();
  v10 = swift_task_alloc();
  v11 = (_QWORD *)OUTLINED_FUNCTION_37_1(v10);
  *v11 = v9;
  v11[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_206();
  OUTLINED_FUNCTION_109_0();
  return sub_1A6203034(v12, v13, v14, v15, v16, v17, v18, v19, a9);
}

uint64_t sub_1A6229560()
{
  uint64_t v0;
  _QWORD *v1;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_37_1(v0);
  OUTLINED_FUNCTION_441(v1);
  return sub_1A62036DC();
}

uint64_t sub_1A62295A4()
{
  uint64_t v0;

  return sub_1A620386C(v0, (uint64_t (*)(_QWORD))type metadata accessor for Weather);
}

uint64_t sub_1A62295C8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_509();
  OUTLINED_FUNCTION_460();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_489();
  return sub_1A6223A70(v3, v4, v5, v6, v7, v8, v9);
}

void sub_1A6229624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *__src, uint64_t a7, uint64_t a8)
{
  uint64_t __dst[12];

  memcpy(__dst, __src, 0x41uLL);
  sub_1A61FA9F0(a1, a2, a3, a4, a5, (uint64_t)__dst, a7, a8, (uint64_t)&unk_1E4FFF858, (uint64_t)&unk_1E4FFF880, (uint64_t)&unk_1EE8463A8, __dst[0], __dst[1], __dst[2], __dst[3], __dst[4], __dst[5], __dst[6], __dst[7],
    __dst[8],
    __dst[9],
    __dst[10],
    __dst[11]);
}

uint64_t sub_1A62296CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *__src, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v14;

  memcpy((void *)(v8 + 16), __src, 0x41uLL);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 88) = v14;
  *v14 = v8;
  v14[1] = sub_1A622978C;
  return sub_1A61FADC0(a1, a2, a3, a4, v8 + 16, a6, a7, a8);
}

uint64_t sub_1A622978C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_103_0();
  return OUTLINED_FUNCTION_6_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1A62297C0(uint64_t a1, uint64_t a2, uint64_t a3, void *__src, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v14;

  memcpy((void *)(v7 + 16), __src, 0x41uLL);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 88) = v14;
  *v14 = v7;
  v14[1] = sub_1A622978C;
  return sub_1A62038DC(a1, a2, a3, v7 + 16, a5, a6, a7);
}

id sub_1A6229868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  objc_class *ObjectType;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  objc_super v12;
  uint64_t v13;

  ObjectType = (objc_class *)swift_getObjectType();
  v7 = OBJC_IVAR____TtC13WeatherDaemon25WDSURLSessionTaskDelegate__taskMetrics;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C3A0);
  swift_allocObject();
  v8 = a5;
  *(_QWORD *)&a5[v7] = sub_1A6334DE4();
  v9 = OBJC_IVAR____TtC13WeatherDaemon25WDSURLSessionTaskDelegate__activity;
  v13 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C398);
  swift_allocObject();
  *(_QWORD *)&v8[v9] = sub_1A6334DE4();
  v8[OBJC_IVAR____TtC13WeatherDaemon25WDSURLSessionTaskDelegate_taskContainsSensitiveData] = 0;

  v12.receiver = v8;
  v12.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v12, sel_init);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

id sub_1A6229968(__int128 *a1, char *a2)
{
  objc_class *ObjectType;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  objc_super v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  ObjectType = (objc_class *)swift_getObjectType();
  v5 = a1[1];
  v18 = *a1;
  v6 = a1[2];
  v14 = v5;
  v15 = v6;
  v16 = v6;
  v17 = v5;
  v7 = OBJC_IVAR____TtC13WeatherDaemon25WDSURLSessionTaskDelegate__taskMetrics;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C3A0);
  swift_allocObject();
  v8 = a2;
  *(_QWORD *)&a2[v7] = sub_1A6334DE4();
  v9 = OBJC_IVAR____TtC13WeatherDaemon25WDSURLSessionTaskDelegate__activity;
  v13 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C398);
  swift_allocObject();
  *(_QWORD *)&v8[v9] = sub_1A6334DE4();
  v8[OBJC_IVAR____TtC13WeatherDaemon25WDSURLSessionTaskDelegate_taskContainsSensitiveData] = 0;

  v12.receiver = v8;
  v12.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v12, sel_init);
  sub_1A622D720((uint64_t)&v18);
  sub_1A622D720((uint64_t)&v17);
  sub_1A622D720((uint64_t)&v16);
  return v10;
}

id sub_1A6229A78(uint64_t a1, char *a2)
{
  objc_class *ObjectType;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  objc_super v9;
  uint64_t v10;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = OBJC_IVAR____TtC13WeatherDaemon25WDSURLSessionTaskDelegate__taskMetrics;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C3A0);
  OUTLINED_FUNCTION_1_1();
  v5 = a2;
  *(_QWORD *)&a2[v4] = sub_1A6334DE4();
  v6 = OBJC_IVAR____TtC13WeatherDaemon25WDSURLSessionTaskDelegate__activity;
  v10 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C398);
  OUTLINED_FUNCTION_1_1();
  *(_QWORD *)&v5[v6] = sub_1A6334DE4();
  v5[OBJC_IVAR____TtC13WeatherDaemon25WDSURLSessionTaskDelegate_taskContainsSensitiveData] = 1;

  v9.receiver = v5;
  v9.super_class = ObjectType;
  v7 = objc_msgSendSuper2(&v9, sel_init);
  sub_1A622D0D4();
  return v7;
}

id sub_1A6229B58(uint64_t a1, char *a2)
{
  objc_class *ObjectType;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  objc_super v10;
  uint64_t v11;

  ObjectType = (objc_class *)swift_getObjectType();
  v5 = OBJC_IVAR____TtC13WeatherDaemon25WDSURLSessionTaskDelegate__taskMetrics;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C3A0);
  swift_allocObject();
  v6 = a2;
  *(_QWORD *)&a2[v5] = sub_1A6334DE4();
  v7 = OBJC_IVAR____TtC13WeatherDaemon25WDSURLSessionTaskDelegate__activity;
  v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C398);
  swift_allocObject();
  *(_QWORD *)&v6[v7] = sub_1A6334DE4();
  v6[OBJC_IVAR____TtC13WeatherDaemon25WDSURLSessionTaskDelegate_taskContainsSensitiveData] = 1;

  v10.receiver = v6;
  v10.super_class = ObjectType;
  v8 = objc_msgSendSuper2(&v10, sel_init);
  sub_1A61A72B4(a1, (uint64_t (*)(_QWORD))type metadata accessor for WeatherRequest);
  return v8;
}

void sub_1A6229C58(uint64_t a1)
{
  uint64_t v1;

  sub_1A6217160(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1A6229C68()
{
  sub_1A622EBF4();
}

uint64_t sub_1A6229C7C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A6229CA0()
{
  return sub_1A6228F28();
}

uint64_t sub_1A6229CC0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t objectdestroy_8Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_448();
  OUTLINED_FUNCTION_308();
  OUTLINED_FUNCTION_512();
  OUTLINED_FUNCTION_677();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_92();
  v0 = OUTLINED_FUNCTION_93();
  if (!OUTLINED_FUNCTION_21_0(v0))
    OUTLINED_FUNCTION_101();
  OUTLINED_FUNCTION_703();
  if (!OUTLINED_FUNCTION_123())
    OUTLINED_FUNCTION_49_3();
  if (!OUTLINED_FUNCTION_123())
    OUTLINED_FUNCTION_49_3();
  v1 = type metadata accessor for WeatherRequestDailyRelativeRange();
  if (!OUTLINED_FUNCTION_28_3(v1))
  {
    v2 = OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_48_1(v2);
  }
  v3 = type metadata accessor for WeatherRequestHourlyRelativeRange();
  if (!OUTLINED_FUNCTION_28_3(v3))
  {
    v4 = OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_48_1(v4);
  }
  v5 = type metadata accessor for WeatherRequestMarineHourlyRelativeRange();
  if (!OUTLINED_FUNCTION_28_3(v5))
  {
    v6 = OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_48_1(v6);
  }
  v7 = OUTLINED_FUNCTION_644();
  if (!OUTLINED_FUNCTION_28_3(v7))
  {
    if (OUTLINED_FUNCTION_482() != 1)
      OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_49_3();
  }
  OUTLINED_FUNCTION_29_6();
  swift_bridgeObjectRelease();
  v8 = type metadata accessor for WDSNetworkActivity();
  if (!OUTLINED_FUNCTION_21_0(v8))
  {
    v9 = OUTLINED_FUNCTION_341();
    if (!OUTLINED_FUNCTION_21_0(v9))
      OUTLINED_FUNCTION_101();
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_29_6();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_632();
  return OUTLINED_FUNCTION_137();
}

uint64_t sub_1A6229EDC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_291();
  OUTLINED_FUNCTION_308();
  OUTLINED_FUNCTION_289();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_22_7();
  OUTLINED_FUNCTION_109_0();
  return sub_1A61FCD28(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t objectdestroy_24Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_448();
  OUTLINED_FUNCTION_308();
  OUTLINED_FUNCTION_393();
  OUTLINED_FUNCTION_397();
  OUTLINED_FUNCTION_511();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_92();
  v0 = OUTLINED_FUNCTION_423();
  if (!OUTLINED_FUNCTION_21_0(v0))
    OUTLINED_FUNCTION_101();
  OUTLINED_FUNCTION_530();
  if (!OUTLINED_FUNCTION_123())
    OUTLINED_FUNCTION_49_3();
  if (!OUTLINED_FUNCTION_123())
    OUTLINED_FUNCTION_49_3();
  v1 = OUTLINED_FUNCTION_529();
  if (!OUTLINED_FUNCTION_28_3(v1))
  {
    v2 = OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_48_1(v2);
  }
  v3 = OUTLINED_FUNCTION_528();
  if (!OUTLINED_FUNCTION_28_3(v3))
  {
    v4 = OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_48_1(v4);
  }
  v5 = OUTLINED_FUNCTION_527();
  if (!OUTLINED_FUNCTION_28_3(v5))
  {
    v6 = OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_48_1(v6);
  }
  v7 = OUTLINED_FUNCTION_526();
  if (!OUTLINED_FUNCTION_28_3(v7))
  {
    if (OUTLINED_FUNCTION_482() != 1)
      OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_49_3();
  }
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_624();
  v8 = OUTLINED_FUNCTION_525();
  if (!OUTLINED_FUNCTION_21_0(v8))
  {
    v9 = OUTLINED_FUNCTION_341();
    if (!OUTLINED_FUNCTION_21_0(v9))
      OUTLINED_FUNCTION_101();
  }
  OUTLINED_FUNCTION_624();
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_871();
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_632();
  return OUTLINED_FUNCTION_137();
}

uint64_t sub_1A622A0E0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_92_0();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_22_7();
  OUTLINED_FUNCTION_109_0();
  return sub_1A6228104(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t objectdestroy_43Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_448();
  OUTLINED_FUNCTION_308();
  OUTLINED_FUNCTION_329();
  OUTLINED_FUNCTION_676();
  OUTLINED_FUNCTION_92();
  v0 = OUTLINED_FUNCTION_423();
  if (!OUTLINED_FUNCTION_21_0(v0))
    OUTLINED_FUNCTION_101();
  OUTLINED_FUNCTION_530();
  if (!OUTLINED_FUNCTION_123())
    OUTLINED_FUNCTION_49_3();
  if (!OUTLINED_FUNCTION_123())
    OUTLINED_FUNCTION_49_3();
  v1 = OUTLINED_FUNCTION_529();
  if (!OUTLINED_FUNCTION_28_3(v1))
  {
    v2 = OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_48_1(v2);
  }
  v3 = OUTLINED_FUNCTION_528();
  if (!OUTLINED_FUNCTION_28_3(v3))
  {
    v4 = OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_48_1(v4);
  }
  v5 = OUTLINED_FUNCTION_527();
  if (!OUTLINED_FUNCTION_28_3(v5))
  {
    v6 = OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_48_1(v6);
  }
  v7 = OUTLINED_FUNCTION_526();
  if (!OUTLINED_FUNCTION_28_3(v7))
  {
    if (OUTLINED_FUNCTION_482() != 1)
      OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_49_3();
  }
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_624();
  v8 = OUTLINED_FUNCTION_525();
  if (!OUTLINED_FUNCTION_21_0(v8))
  {
    v9 = OUTLINED_FUNCTION_341();
    if (!OUTLINED_FUNCTION_21_0(v9))
      OUTLINED_FUNCTION_101();
  }
  OUTLINED_FUNCTION_673();
  OUTLINED_FUNCTION_624();
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_871();
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_632();
  return OUTLINED_FUNCTION_137();
}

uint64_t objectdestroy_47Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_448();
  OUTLINED_FUNCTION_308();
  OUTLINED_FUNCTION_329();
  OUTLINED_FUNCTION_676();
  OUTLINED_FUNCTION_92();
  v0 = OUTLINED_FUNCTION_423();
  if (!OUTLINED_FUNCTION_21_0(v0))
    OUTLINED_FUNCTION_101();
  OUTLINED_FUNCTION_530();
  if (!OUTLINED_FUNCTION_123())
    OUTLINED_FUNCTION_49_3();
  if (!OUTLINED_FUNCTION_123())
    OUTLINED_FUNCTION_49_3();
  v1 = OUTLINED_FUNCTION_529();
  if (!OUTLINED_FUNCTION_28_3(v1))
  {
    v2 = OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_48_1(v2);
  }
  v3 = OUTLINED_FUNCTION_528();
  if (!OUTLINED_FUNCTION_28_3(v3))
  {
    v4 = OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_48_1(v4);
  }
  v5 = OUTLINED_FUNCTION_527();
  if (!OUTLINED_FUNCTION_28_3(v5))
  {
    v6 = OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_48_1(v6);
  }
  v7 = OUTLINED_FUNCTION_526();
  if (!OUTLINED_FUNCTION_28_3(v7))
  {
    if (OUTLINED_FUNCTION_482() != 1)
      OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_49_3();
  }
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_624();
  v8 = OUTLINED_FUNCTION_525();
  if (!OUTLINED_FUNCTION_21_0(v8))
  {
    v9 = OUTLINED_FUNCTION_341();
    if (!OUTLINED_FUNCTION_21_0(v9))
      OUTLINED_FUNCTION_101();
  }
  OUTLINED_FUNCTION_624();
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_871();
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_632();
  return OUTLINED_FUNCTION_137();
}

uint64_t sub_1A622A3DC()
{
  OUTLINED_FUNCTION_393();
  return swift_deallocObject();
}

uint64_t sub_1A622A400()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_558();
  OUTLINED_FUNCTION_391();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  v3 = OUTLINED_FUNCTION_187();
  return sub_1A6223E9C(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1A622A454()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_729();
  OUTLINED_FUNCTION_385();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_243();
  OUTLINED_FUNCTION_837();
  return sub_1A6224FBC(v3, v4, v5, v6, v7);
}

uint64_t sub_1A622A4A8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_558();
  OUTLINED_FUNCTION_550();
  v0 = OUTLINED_FUNCTION_680();
  v1 = (_QWORD *)OUTLINED_FUNCTION_37_1(v0);
  v2 = OUTLINED_FUNCTION_117(v1);
  return OUTLINED_FUNCTION_107_0(v2, v3, v4, v5, v6, v7);
}

uint64_t objectdestroy_72Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_448();
  OUTLINED_FUNCTION_308();
  OUTLINED_FUNCTION_329();
  OUTLINED_FUNCTION_676();
  OUTLINED_FUNCTION_92();
  v0 = OUTLINED_FUNCTION_423();
  if (!OUTLINED_FUNCTION_21_0(v0))
    OUTLINED_FUNCTION_101();
  OUTLINED_FUNCTION_530();
  if (!OUTLINED_FUNCTION_123())
    OUTLINED_FUNCTION_49_3();
  if (!OUTLINED_FUNCTION_123())
    OUTLINED_FUNCTION_49_3();
  v1 = OUTLINED_FUNCTION_529();
  if (!OUTLINED_FUNCTION_28_3(v1))
  {
    v2 = OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_48_1(v2);
  }
  v3 = OUTLINED_FUNCTION_528();
  if (!OUTLINED_FUNCTION_28_3(v3))
  {
    v4 = OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_48_1(v4);
  }
  v5 = OUTLINED_FUNCTION_527();
  if (!OUTLINED_FUNCTION_28_3(v5))
  {
    v6 = OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_48_1(v6);
  }
  v7 = OUTLINED_FUNCTION_526();
  if (!OUTLINED_FUNCTION_28_3(v7))
  {
    if (OUTLINED_FUNCTION_482() != 1)
      OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_49_3();
  }
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_624();
  v8 = OUTLINED_FUNCTION_525();
  if (!OUTLINED_FUNCTION_21_0(v8))
  {
    v9 = OUTLINED_FUNCTION_341();
    if (!OUTLINED_FUNCTION_21_0(v9))
      OUTLINED_FUNCTION_101();
  }
  OUTLINED_FUNCTION_673();
  OUTLINED_FUNCTION_624();
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_871();
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_632();
  return OUTLINED_FUNCTION_137();
}

uint64_t sub_1A622A61C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_308();
  OUTLINED_FUNCTION_264();
  v10 = swift_task_alloc();
  v11 = (_QWORD *)OUTLINED_FUNCTION_37_1(v10);
  *v11 = v9;
  v11[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_206();
  OUTLINED_FUNCTION_109_0();
  return sub_1A6202F84(v12, v13, v14, v15, v16, v17, v18, v19, a9);
}

uint64_t sub_1A622A688()
{
  uint64_t v0;
  _QWORD *v1;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_37_1(v0);
  OUTLINED_FUNCTION_441(v1);
  return sub_1A6203650();
}

void sub_1A622A6D0()
{
  OUTLINED_FUNCTION_308();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED21B908);
  OUTLINED_FUNCTION_915();
  sub_1A62203D0();
}

void sub_1A622A760(uint64_t a1)
{
  uint64_t v1;

  sub_1A61B8D20(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1A622A770()
{
  unint64_t result;

  result = qword_1ED2196C8;
  if (!qword_1ED2196C8)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for WeatherDataError, &type metadata for WeatherDataError);
    atomic_store(result, (unint64_t *)&qword_1ED2196C8);
  }
  return result;
}

uint64_t sub_1A622A7AC()
{
  uint64_t v0;

  return sub_1A61A1CA4(*(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_1A622A7E8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_5_13();
  v1 = *(_QWORD *)(OUTLINED_FUNCTION_644() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(OUTLINED_FUNCTION_93() - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  if (swift_getEnumCaseMultiPayload() == 1)
    v6 = OUTLINED_FUNCTION_703();
  else
    v6 = OUTLINED_FUNCTION_6();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v2, v6);
  OUTLINED_FUNCTION_86(v0 + ((v2 + v3 + v5) & ~v5), *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  return OUTLINED_FUNCTION_240();
}

uint64_t sub_1A622A89C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  type metadata accessor for WeatherInterpolationOptions();
  OUTLINED_FUNCTION_915();
  v6 = (v5 + 32) & ~v5;
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A6332DB0() - 8) + 80);
  return sub_1A622102C(a1, a2, v2 + v6, v2 + ((v6 + v8 + v9) & ~v9), *(double *)(v2 + 16), *(double *)(v2 + 24));
}

id sub_1A622A920(uint64_t a1, uint64_t a2, char *a3)
{
  objc_class *ObjectType;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  objc_super v10;
  uint64_t v11;

  ObjectType = (objc_class *)swift_getObjectType();
  v5 = OBJC_IVAR____TtC13WeatherDaemon25WDSURLSessionTaskDelegate__taskMetrics;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C3A0);
  swift_allocObject();
  v6 = a3;
  *(_QWORD *)&a3[v5] = sub_1A6334DE4();
  v7 = OBJC_IVAR____TtC13WeatherDaemon25WDSURLSessionTaskDelegate__activity;
  v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C398);
  swift_allocObject();
  *(_QWORD *)&v6[v7] = sub_1A6334DE4();
  v6[OBJC_IVAR____TtC13WeatherDaemon25WDSURLSessionTaskDelegate_taskContainsSensitiveData] = 0;

  v10.receiver = v6;
  v10.super_class = ObjectType;
  v8 = objc_msgSendSuper2(&v10, sel_init);
  swift_bridgeObjectRelease();
  return v8;
}

void sub_1A622AA0C(uint64_t a1, const void *a2)
{
  _BYTE __dst[65];

  memcpy(__dst, a2, sizeof(__dst));
  sub_1A622021C();
}

uint64_t sub_1A622AA7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  return sub_1A61FA720(a1, a2, a3, a4, a5, *a6, a6[1], a6[2], a6[3], a7, a8);
}

uint64_t sub_1A622AAB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v8 = *a5;
  v9 = a5[1];
  v10 = a5[2];
  v11 = a5[3];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v12;
  *v12 = v5;
  v12[1] = sub_1A61BABA8;
  return sub_1A61FB38C(a1, a2, a3, a4, v8, v9, v10, v11);
}

uint64_t sub_1A622AB7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v9 = *a4;
  v10 = a4[1];
  v12 = a4[2];
  v11 = a4[3];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v13;
  *v13 = v5;
  v13[1] = sub_1A61BABA8;
  return sub_1A6203A58(a1, a2, a3, v9, v10, v12, v11, a5);
}

uint64_t sub_1A622AC28(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v8 = *a2;
  v9 = a2[1];
  v11 = a2[2];
  v10 = a2[3];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v12;
  *v12 = v5;
  v12[1] = sub_1A61BABA8;
  return sub_1A62052CC(a1, v8, v9, v11, v10, a3, a4, a5);
}

uint64_t sub_1A622ACE0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v10 = a2[3];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1A61BABA8;
  return sub_1A6205810(a1, v7, v8, v9, v10, a3, a4, a5);
}

void sub_1A622ADA4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[176];

  v10 = *a2;
  v11 = a2[1];
  v12 = a2[2];
  v13 = a2[3];
  sub_1A61AED54(a3, (uint64_t)v14, &qword_1ED219A00);
  sub_1A621FB10(a1, v10, v11, v12, v13, (uint64_t)v14, a4, a5, a6);
}

uint64_t sub_1A622AE3C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v15 = *a2;
  v16 = a2[1];
  v18 = a2[2];
  v17 = a2[3];
  v19 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v12 + 16) = v19;
  *v19 = v12;
  v19[1] = sub_1A61BABA8;
  return sub_1A6202D44(a1, v15, v16, v18, v17, a3, a4, a5, a8, a9, a11, a12);
}

uint64_t sub_1A622AEF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int128 v14;
  _QWORD *v15;

  v14 = a5[1];
  *(_OWORD *)(v8 + 16) = *a5;
  *(_OWORD *)(v8 + 32) = v14;
  *(_OWORD *)(v8 + 48) = a5[2];
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 64) = v15;
  *v15 = v8;
  v15[1] = sub_1A622EC54;
  return sub_1A61FBA60(a1, a2, a3, a4, v8 + 16, a6, a7, a8);
}

uint64_t sub_1A622AFB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v17;

  *(_QWORD *)(v9 + 16) = a1;
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 24) = v17;
  *v17 = v9;
  v17[1] = sub_1A622EC7C;
  return sub_1A622695C(a2, a3, a4, a5, a6, a7, a8, a9);
}

void sub_1A622B060(uint64_t a1, _OWORD *a2, uint64_t *a3, uint64_t a4, uint64_t a5, char a6)
{
  __int128 v6;
  _OWORD v7[3];

  v6 = a2[1];
  v7[0] = *a2;
  v7[1] = v6;
  v7[2] = a2[2];
  sub_1A621FD6C(a1, (uint64_t)v7, *a3, a4, a5, a6);
}

uint64_t sub_1A622B094(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  char v14;
  __int128 v15;
  _QWORD *v16;
  char v18;

  *(_QWORD *)(v8 + 64) = a1;
  v14 = a7 & 1;
  v15 = a2[1];
  *(_OWORD *)(v8 + 16) = *a2;
  *(_OWORD *)(v8 + 32) = v15;
  *(_OWORD *)(v8 + 48) = a2[2];
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 72) = v16;
  *v16 = v8;
  v16[1] = sub_1A622B148;
  return sub_1A6202E04(v8 + 16, a3, a4, a5, a6, v14, a8, v18);
}

uint64_t sub_1A622B148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _QWORD *v5;

  OUTLINED_FUNCTION_593();
  v4 = *v3;
  OUTLINED_FUNCTION_251(v5);
  if (!v1)
    **(_QWORD **)(v2 + 64) = v0;
  return OUTLINED_FUNCTION_13_10(*(uint64_t (**)(void))(v4 + 8));
}

uint64_t sub_1A622B18C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1A622B1DC;
  return sub_1A62034EC();
}

uint64_t sub_1A622B1DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _QWORD *v5;

  OUTLINED_FUNCTION_593();
  v4 = *v3;
  OUTLINED_FUNCTION_251(v5);
  if (!v1)
    **(_QWORD **)(v2 + 16) = v0;
  return OUTLINED_FUNCTION_13_10(*(uint64_t (**)(void))(v4 + 8));
}

uint64_t sub_1A622B220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v14;

  *(_QWORD *)(v7 + 16) = a1;
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 24) = v14;
  *v14 = v7;
  v14[1] = sub_1A622ECC0;
  return sub_1A6223844(a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1A622B2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v12;

  *(_QWORD *)(v6 + 16) = a1;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 24) = v12;
  *v12 = v6;
  v12[1] = sub_1A622B328;
  return sub_1A6223CB0(a2, a3, a4, a5, a6);
}

uint64_t sub_1A622B328()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_729();
  OUTLINED_FUNCTION_757();
  v3 = *v1;
  OUTLINED_FUNCTION_251(v4);
  if (!v0)
    OUTLINED_FUNCTION_931(*(_QWORD *)(v2 + 16));
  return OUTLINED_FUNCTION_17_7(*(uint64_t (**)(void))(v3 + 8));
}

uint64_t sub_1A622B370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v10;

  *(_QWORD *)(v5 + 16) = a1;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 24) = v10;
  *v10 = v5;
  v10[1] = sub_1A622EC7C;
  return sub_1A622465C(a2, a3, a4, a5);
}

uint64_t sub_1A622B3E0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  *(_QWORD *)(v4 + 40) = a1;
  v7 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 48) = v5;
  *v5 = v4;
  v5[1] = sub_1A622B448;
  return v7(v4 + 16);
}

uint64_t sub_1A622B448()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = *v1;
  v8 = *v1;
  v3 = *v1;
  OUTLINED_FUNCTION_251(&v8);
  if (!v0)
  {
    v4 = *(_BYTE *)(v2 + 24);
    v6 = *(_QWORD *)(v2 + 32);
    v5 = *(_QWORD *)(v2 + 40);
    *(_QWORD *)v5 = *(_QWORD *)(v2 + 16);
    *(_BYTE *)(v5 + 8) = v4;
    *(_QWORD *)(v5 + 16) = v6;
  }
  return OUTLINED_FUNCTION_4_17(*(uint64_t (**)(void))(v3 + 8));
}

uint64_t sub_1A622B49C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int128 *a6, uint64_t a7, uint64_t a8)
{
  __int128 v8;
  __int128 v10[3];

  v8 = a6[1];
  v10[0] = *a6;
  v10[1] = v8;
  v10[2] = a6[2];
  return sub_1A61FA87C(a1, a2, a3, a4, a5, v10, a7, a8);
}

uint64_t sub_1A622B4CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int128 v14;
  _QWORD *v15;

  v14 = a5[1];
  *(_OWORD *)(v8 + 16) = *a5;
  *(_OWORD *)(v8 + 32) = v14;
  *(_OWORD *)(v8 + 48) = a5[2];
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 64) = v15;
  *v15 = v8;
  v15[1] = sub_1A622B58C;
  return sub_1A61FC0E8(a1, a2, a3, a4, v8 + 16, a6, a7, a8);
}

uint64_t sub_1A622B58C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_103_0();
  return OUTLINED_FUNCTION_6_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1A622B5C0(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  __int128 v14;
  _QWORD *v15;

  v14 = a4[1];
  *(_OWORD *)(v7 + 16) = *a4;
  *(_OWORD *)(v7 + 32) = v14;
  *(_OWORD *)(v7 + 48) = a4[2];
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 64) = v15;
  *v15 = v7;
  v15[1] = sub_1A622EC54;
  return sub_1A620402C(a1, a2, a3, v7 + 16, a5, a6, a7);
}

uint64_t sub_1A622B668(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  char v15;
  __int128 v16;
  _QWORD *v17;

  v15 = a7 & 1;
  v16 = a2[1];
  *(_OWORD *)(v8 + 16) = *a2;
  *(_OWORD *)(v8 + 32) = v16;
  *(_OWORD *)(v8 + 48) = a2[2];
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 64) = v17;
  *v17 = v8;
  v17[1] = sub_1A622EC54;
  return sub_1A6205430(a1, v8 + 16, a3, a4, a5, a6, v15, a8);
}

uint64_t sub_1A622B718(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int128 v14;
  _QWORD *v15;

  v14 = a2[1];
  *(_OWORD *)(v8 + 16) = *a2;
  *(_OWORD *)(v8 + 32) = v14;
  *(_OWORD *)(v8 + 48) = a2[2];
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 64) = v15;
  *v15 = v8;
  v15[1] = sub_1A622EC54;
  return sub_1A62059EC(a1, v8 + 16, a3, a4, a5, a6, a7, a8);
}

void sub_1A622B7DC(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  __int128 v6;
  _OWORD v7[3];

  v6 = a2[1];
  v7[0] = *a2;
  v7[1] = v6;
  v7[2] = a2[2];
  sub_1A621FFC4(a1, (uint64_t)v7, a3, a4, a5, a6);
}

uint64_t sub_1A622B80C(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, char a9)
{
  uint64_t v9;
  char v16;
  __int128 v17;
  _QWORD *v18;

  v16 = a7 & 1;
  v17 = a2[1];
  *(_OWORD *)(v9 + 16) = *a2;
  *(_OWORD *)(v9 + 32) = v17;
  *(_OWORD *)(v9 + 48) = a2[2];
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 64) = v18;
  *v18 = v9;
  v18[1] = sub_1A622B58C;
  return sub_1A6202ED4(a1, v9 + 16, a3, a4, a5, a6, v16, a8, a9);
}

void sub_1A622B8CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *__src, uint64_t a7, uint64_t a8)
{
  uint64_t __dst[12];

  memcpy(__dst, __src, 0x41uLL);
  sub_1A61FA9F0(a1, a2, a3, a4, a5, (uint64_t)__dst, a7, a8, (uint64_t)&unk_1E4FFF9C0, (uint64_t)&unk_1E4FFF9E8, (uint64_t)&unk_1EE846438, __dst[0], __dst[1], __dst[2], __dst[3], __dst[4], __dst[5], __dst[6], __dst[7],
    __dst[8],
    __dst[9],
    __dst[10],
    __dst[11]);
}

uint64_t sub_1A622B974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *__src, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v14;

  memcpy((void *)(v8 + 16), __src, 0x41uLL);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 88) = v14;
  *v14 = v8;
  v14[1] = sub_1A622EC58;
  return sub_1A61FC3F8(a1, a2, a3, a4, v8 + 16, a6, a7, a8);
}

uint64_t sub_1A622BA34(uint64_t a1, uint64_t a2, uint64_t a3, void *__src, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v14;

  memcpy((void *)(v7 + 16), __src, 0x41uLL);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 88) = v14;
  *v14 = v7;
  v14[1] = sub_1A622EC58;
  return sub_1A6204580(a1, a2, a3, v7 + 16, a5, a6, a7);
}

void sub_1A622BADC(uint64_t a1, const void *a2)
{
  _BYTE __dst[65];

  memcpy(__dst, a2, sizeof(__dst));
  sub_1A622021C();
}

void sub_1A622BB4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *__src, uint64_t a7, uint64_t a8)
{
  uint64_t __dst[12];

  memcpy(__dst, __src, 0x41uLL);
  sub_1A61FA9F0(a1, a2, a3, a4, a5, (uint64_t)__dst, a7, a8, (uint64_t)&unk_1E4FFF6F0, (uint64_t)&unk_1E4FFF718, (uint64_t)&unk_1EE846310, __dst[0], __dst[1], __dst[2], __dst[3], __dst[4], __dst[5], __dst[6], __dst[7],
    __dst[8],
    __dst[9],
    __dst[10],
    __dst[11]);
}

uint64_t sub_1A622BBF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *__src, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v14;

  memcpy((void *)(v8 + 16), __src, 0x41uLL);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 88) = v14;
  *v14 = v8;
  v14[1] = sub_1A622EC58;
  return sub_1A61FC708(a1, a2, a3, a4, v8 + 16, a6, a7, a8);
}

uint64_t sub_1A622BCB4(uint64_t a1, uint64_t a2, uint64_t a3, void *__src, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v14;

  memcpy((void *)(v7 + 16), __src, 0x41uLL);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 88) = v14;
  *v14 = v7;
  v14[1] = sub_1A622EC58;
  return sub_1A62046D4(a1, a2, a3, v7 + 16, a5, a6, a7);
}

void sub_1A622BD5C(uint64_t a1, const void *a2)
{
  _BYTE __dst[65];

  memcpy(__dst, a2, sizeof(__dst));
  sub_1A622021C();
}

void sub_1A622BDCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *__src, uint64_t a7, uint64_t a8)
{
  uint64_t __dst[12];

  memcpy(__dst, __src, 0x41uLL);
  sub_1A61FA9F0(a1, a2, a3, a4, a5, (uint64_t)__dst, a7, a8, (uint64_t)&unk_1E4FFF588, (uint64_t)&unk_1E4FFF5B0, (uint64_t)&unk_1EE846270, __dst[0], __dst[1], __dst[2], __dst[3], __dst[4], __dst[5], __dst[6], __dst[7],
    __dst[8],
    __dst[9],
    __dst[10],
    __dst[11]);
}

uint64_t sub_1A622BE74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *__src, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v14;

  memcpy((void *)(v8 + 16), __src, 0x41uLL);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 88) = v14;
  *v14 = v8;
  v14[1] = sub_1A622EC58;
  return sub_1A61FCA18(a1, a2, a3, a4, v8 + 16, a6, a7, a8);
}

uint64_t sub_1A622BF34(uint64_t a1, uint64_t a2, uint64_t a3, void *__src, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v14;

  memcpy((void *)(v7 + 16), __src, 0x41uLL);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 88) = v14;
  *v14 = v7;
  v14[1] = sub_1A622EC58;
  return sub_1A6204828(a1, a2, a3, v7 + 16, a5, a6, a7);
}

void sub_1A622BFDC(uint64_t a1, const void *a2)
{
  _BYTE __dst[65];

  memcpy(__dst, a2, sizeof(__dst));
  sub_1A622021C();
}

uint64_t sub_1A622C04C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  return sub_1A61FAC78(a1, a2, a3, a4, a5, *a6, a6[1], a7, a8);
}

uint64_t sub_1A622C07C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1A622C04C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(uint64_t **)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40));
}

unint64_t sub_1A622C088()
{
  unint64_t result;

  result = qword_1EE846118;
  if (!qword_1EE846118)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633AA94, &type metadata for WDSFlatbufferUnsupported.Errors);
    atomic_store(result, (unint64_t *)&qword_1EE846118);
  }
  return result;
}

uint64_t sub_1A622C0C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v11 = *a5;
  v12 = a5[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v13;
  *v13 = v7;
  v13[1] = sub_1A61BABA8;
  return sub_1A61FD348(a1, a2, a3, a4, v11, v12, a6, a7);
}

uint64_t sub_1A622C178()
{
  OUTLINED_FUNCTION_512();
  OUTLINED_FUNCTION_677();
  OUTLINED_FUNCTION_734();
  OUTLINED_FUNCTION_397();
  OUTLINED_FUNCTION_955();
  OUTLINED_FUNCTION_963();
  return swift_deallocObject();
}

uint64_t sub_1A622C1AC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_154();
  OUTLINED_FUNCTION_922();
  v1 = OUTLINED_FUNCTION_421();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_22_7();
  return OUTLINED_FUNCTION_23_6();
}

uint64_t sub_1A622C234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v14 = *a4;
  v15 = a4[1];
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v16;
  *v16 = v7;
  v16[1] = sub_1A61BABA8;
  return sub_1A6204EA8(a1, a2, a3, v14, v15, a5, a6, a7);
}

uint64_t sub_1A622C2D0()
{
  OUTLINED_FUNCTION_393();
  OUTLINED_FUNCTION_397();
  OUTLINED_FUNCTION_511();
  OUTLINED_FUNCTION_733();
  OUTLINED_FUNCTION_963();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A622C308()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_335();
  OUTLINED_FUNCTION_1026();
  v0 = OUTLINED_FUNCTION_569();
  v1 = (_QWORD *)OUTLINED_FUNCTION_37_1(v0);
  v2 = OUTLINED_FUNCTION_44_1(v1);
  return OUTLINED_FUNCTION_50_2(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1A622C354()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_92_0();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_22_7();
  OUTLINED_FUNCTION_109_0();
  return sub_1A6228914(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1A622C3B4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;

  v13 = *a2;
  v14 = a2[1];
  v15 = a7 & 1;
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v16;
  *v16 = v7;
  v16[1] = sub_1A61BABA8;
  return sub_1A62056E8(a1, v13, v14, a3, a4, a5, a6, v15);
}

uint64_t sub_1A622C460()
{
  return objectdestroy_250Tm();
}

uint64_t sub_1A622C468()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_291();
  v1 = OUTLINED_FUNCTION_844();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_120();
  return OUTLINED_FUNCTION_215();
}

uint64_t sub_1A622C4D0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v11 = *a2;
  v12 = a2[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v13;
  *v13 = v7;
  v13[1] = sub_1A61BABA8;
  return sub_1A6205D48(a1, v11, v12, a3, a4, a5, a6, a7);
}

uint64_t sub_1A622C588()
{
  return objectdestroy_250Tm();
}

uint64_t sub_1A622C590()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_154();
  v1 = OUTLINED_FUNCTION_842();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_40_2();
  return OUTLINED_FUNCTION_23_6();
}

uint64_t sub_1A622C624()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_558();
  OUTLINED_FUNCTION_391();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  v3 = OUTLINED_FUNCTION_187();
  return sub_1A6224010(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1A622C678()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_729();
  OUTLINED_FUNCTION_385();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_243();
  OUTLINED_FUNCTION_837();
  return sub_1A622591C(v3, v4, v5, v6, v7);
}

uint64_t sub_1A622C6CC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_558();
  OUTLINED_FUNCTION_550();
  v0 = OUTLINED_FUNCTION_680();
  v1 = (_QWORD *)OUTLINED_FUNCTION_37_1(v0);
  v2 = OUTLINED_FUNCTION_117(v1);
  return OUTLINED_FUNCTION_107_0(v2, v3, v4, v5, v6, v7);
}

void sub_1A622C70C(void *a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255)
    sub_1A622C724(a1, a2, a3, a4 & 1);
}

void sub_1A622C724(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)

  else
    swift_release();
}

id sub_1A622C734(id result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255)
    return sub_1A622C74C(result, a2, a3, a4 & 1);
  return result;
}

id sub_1A622C74C(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    return a1;
  else
    return (id)swift_retain();
}

void sub_1A622C75C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5, char a6)
{
  sub_1A6220564(a1, *a2, a2[1], *a3, a4, a5, a6);
}

uint64_t sub_1A622C77C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, char a9)
{
  uint64_t v9;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _QWORD *v18;

  v15 = *a2;
  v16 = a2[1];
  v17 = a7 & 1;
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v18;
  *v18 = v9;
  v18[1] = sub_1A61BABA8;
  return sub_1A62030E4(a1, v15, v16, a3, a4, a5, a6, v17, a8, a9);
}

uint64_t sub_1A622C830()
{
  return objectdestroy_250Tm();
}

uint64_t objectdestroy_250Tm()
{
  OUTLINED_FUNCTION_393();
  OUTLINED_FUNCTION_677();
  OUTLINED_FUNCTION_734();
  OUTLINED_FUNCTION_747();
  return OUTLINED_FUNCTION_407();
}

uint64_t sub_1A622C860()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_119();
  v0 = OUTLINED_FUNCTION_421();
  v1 = (_QWORD *)OUTLINED_FUNCTION_37_1(v0);
  OUTLINED_FUNCTION_148(v1);
  return OUTLINED_FUNCTION_215();
}

uint64_t sub_1A622C8BC()
{
  uint64_t v0;
  _QWORD *v1;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_37_1(v0);
  OUTLINED_FUNCTION_441(v1);
  return sub_1A620379C();
}

uint64_t sub_1A622C900()
{
  uint64_t v0;

  return sub_1A62038A4(v0, &qword_1EE845EA0);
}

uint64_t sub_1A622C924()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_509();
  OUTLINED_FUNCTION_460();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_489();
  return sub_1A6223700(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1A622C980()
{
  uint64_t v0;

  OUTLINED_FUNCTION_393();
  if ((~*(_QWORD *)(v0 + 32) & 0xF000000000000007) != 0)
    OUTLINED_FUNCTION_1036();
  swift_release();
  return swift_deallocObject();
}

void sub_1A622C9BC(uint64_t a1)
{
  uint64_t v1;

  sub_1A622C75C(a1, (uint64_t *)(v1 + 16), (uint64_t *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_BYTE *)(v1 + 56));
}

uint64_t sub_1A622C9D0(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_retain();
  return result;
}

void sub_1A622C9E8(uint64_t a1)
{
  uint64_t v1;

  sub_1A6217310(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1A622C9F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1A622BDCC(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(void **)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40));
}

uint64_t sub_1A622CA08()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_154();
  OUTLINED_FUNCTION_221();
  v1 = OUTLINED_FUNCTION_421();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_22_7();
  return OUTLINED_FUNCTION_23_6();
}

uint64_t sub_1A622CA80()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_335();
  OUTLINED_FUNCTION_386();
  v0 = OUTLINED_FUNCTION_569();
  v1 = (_QWORD *)OUTLINED_FUNCTION_37_1(v0);
  v2 = OUTLINED_FUNCTION_44_1(v1);
  return OUTLINED_FUNCTION_50_2(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1A622CAC4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_92_0();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_22_7();
  OUTLINED_FUNCTION_109_0();
  return sub_1A6227CFC(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1A622CB24()
{
  return objectdestroy_369Tm();
}

uint64_t sub_1A622CB38(uint64_t a1)
{
  return sub_1A622D214(a1, &qword_1EE8462D8, (uint64_t (*)(uint64_t))sub_1A622BFDC);
}

void sub_1A622CB4C(uint64_t a1)
{
  uint64_t v1;

  sub_1A6216FB0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1A622CB5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1A622BB4C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(void **)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40));
}

uint64_t sub_1A622CB6C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_154();
  OUTLINED_FUNCTION_221();
  v1 = OUTLINED_FUNCTION_421();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_22_7();
  return OUTLINED_FUNCTION_23_6();
}

uint64_t sub_1A622CBE4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_335();
  OUTLINED_FUNCTION_386();
  v0 = OUTLINED_FUNCTION_569();
  v1 = (_QWORD *)OUTLINED_FUNCTION_37_1(v0);
  v2 = OUTLINED_FUNCTION_44_1(v1);
  return OUTLINED_FUNCTION_50_2(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1A622CC28()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_92_0();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_22_7();
  OUTLINED_FUNCTION_109_0();
  return sub_1A62278F4(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1A622CC88()
{
  return objectdestroy_369Tm();
}

uint64_t sub_1A622CC9C(uint64_t a1)
{
  return sub_1A622D214(a1, &qword_1EE846378, (uint64_t (*)(uint64_t))sub_1A622BD5C);
}

void sub_1A622CCB0(uint64_t a1)
{
  uint64_t v1;

  sub_1A6216E00(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1A622CCC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1A6229624(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(void **)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40));
}

uint64_t sub_1A622CCD0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_154();
  OUTLINED_FUNCTION_221();
  v1 = OUTLINED_FUNCTION_421();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A6203768;
  OUTLINED_FUNCTION_22_7();
  return OUTLINED_FUNCTION_23_6();
}

uint64_t sub_1A622CD48()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_335();
  OUTLINED_FUNCTION_386();
  v0 = OUTLINED_FUNCTION_569();
  v1 = (_QWORD *)OUTLINED_FUNCTION_37_1(v0);
  v2 = OUTLINED_FUNCTION_44_1(v1);
  return OUTLINED_FUNCTION_50_2(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1A622CD8C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_92_0();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_22_7();
  OUTLINED_FUNCTION_109_0();
  return sub_1A6225EAC(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1A622CDEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_5_13();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE845BD8);
  OUTLINED_FUNCTION_698();
  OUTLINED_FUNCTION_734();
  OUTLINED_FUNCTION_397();
  v2 = v0 + v1;
  OUTLINED_FUNCTION_704();
  if (!OUTLINED_FUNCTION_344(v0 + v1))
  {
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_998(v0 + v1);
    v3 = OUTLINED_FUNCTION_402();
    OUTLINED_FUNCTION_998(v2 + *(int *)(v3 + 20));
    v4 = v2 + *(int *)(v3 + 24);
    if (!OUTLINED_FUNCTION_57_1(v4))
      OUTLINED_FUNCTION_998(v4);
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_737();
  }
  OUTLINED_FUNCTION_563();
  OUTLINED_FUNCTION_631();
  return OUTLINED_FUNCTION_240();
}

uint64_t sub_1A622CEC0(uint64_t a1)
{
  return sub_1A622D214(a1, &qword_1EE845BD8, (uint64_t (*)(uint64_t))sub_1A622AA0C);
}

void sub_1A622CED4(uint64_t a1)
{
  uint64_t v1;

  sub_1A6216740(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1A622CEE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1A622B8CC(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(void **)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40));
}

uint64_t objectdestroy_329Tm()
{
  OUTLINED_FUNCTION_512();
  OUTLINED_FUNCTION_677();
  OUTLINED_FUNCTION_772();
  OUTLINED_FUNCTION_511();
  OUTLINED_FUNCTION_733();
  OUTLINED_FUNCTION_840();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A622CF38()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_154();
  OUTLINED_FUNCTION_221();
  v1 = OUTLINED_FUNCTION_421();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_22_7();
  return OUTLINED_FUNCTION_23_6();
}

void sub_1A622CFA4(uint64_t a1)
{
  OUTLINED_FUNCTION_1043(a1);
  sub_1A6334CDC();
  OUTLINED_FUNCTION_6_3();
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_3_1();
}

uint64_t objectdestroy_343Tm()
{
  OUTLINED_FUNCTION_393();
  OUTLINED_FUNCTION_397();
  OUTLINED_FUNCTION_511();
  OUTLINED_FUNCTION_730();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A622D030()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_335();
  OUTLINED_FUNCTION_386();
  v0 = OUTLINED_FUNCTION_569();
  v1 = (_QWORD *)OUTLINED_FUNCTION_37_1(v0);
  v2 = OUTLINED_FUNCTION_44_1(v1);
  return OUTLINED_FUNCTION_50_2(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1A622D074()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_92_0();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_22_7();
  OUTLINED_FUNCTION_109_0();
  return sub_1A62274EC(v3, v4, v5, v6, v7, v8, v9, v10);
}

void sub_1A622D0D4()
{
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_94();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_3_1();
}

uint64_t sub_1A622D10C()
{
  return objectdestroy_369Tm();
}

uint64_t objectdestroy_369Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t (*v3)(_QWORD);
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_5_13();
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(v4);
  OUTLINED_FUNCTION_698();
  OUTLINED_FUNCTION_734();
  OUTLINED_FUNCTION_397();
  v5 = v0 + v1;
  v6 = v3(0);
  if (!OUTLINED_FUNCTION_344(v0 + v1))
  {
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_881(v0 + v1);
    v7 = OUTLINED_FUNCTION_402();
    OUTLINED_FUNCTION_881(v5 + *(int *)(v7 + 20));
    v8 = v5 + *(int *)(v7 + 24);
    if (!OUTLINED_FUNCTION_170(v8))
      OUTLINED_FUNCTION_881(v8);
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_737();
    OUTLINED_FUNCTION_881(v5 + *(int *)(v6 + 24));
  }
  OUTLINED_FUNCTION_563();
  OUTLINED_FUNCTION_631();
  return OUTLINED_FUNCTION_240();
}

uint64_t sub_1A622D200(uint64_t a1)
{
  return sub_1A622D214(a1, &qword_1EE8464A0, (uint64_t (*)(uint64_t))sub_1A622BADC);
}

uint64_t sub_1A622D214(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;

  OUTLINED_FUNCTION_811(a1, a2);
  OUTLINED_FUNCTION_915();
  v3 = OUTLINED_FUNCTION_435();
  return a3(v3);
}

void sub_1A622D24C(uint64_t a1)
{
  uint64_t v1;

  sub_1A6216C50(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1A622D25C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1A622B49C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(__int128 **)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40));
}

void sub_1A622D268(uint64_t a1)
{
  void (*v1)(uint64_t);

  if (!OUTLINED_FUNCTION_1043(a1))
  {
    v1(255);
    OUTLINED_FUNCTION_83();
  }
  OUTLINED_FUNCTION_29_1();
}

uint64_t sub_1A622D298()
{
  OUTLINED_FUNCTION_512();
  OUTLINED_FUNCTION_677();
  OUTLINED_FUNCTION_734();
  OUTLINED_FUNCTION_397();
  OUTLINED_FUNCTION_730();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_845();
  OUTLINED_FUNCTION_839();
  OUTLINED_FUNCTION_898();
  return swift_deallocObject();
}

uint64_t sub_1A622D2D0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_154();
  OUTLINED_FUNCTION_594();
  v1 = OUTLINED_FUNCTION_421();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_22_7();
  return OUTLINED_FUNCTION_23_6();
}

uint64_t sub_1A622D344()
{
  OUTLINED_FUNCTION_393();
  OUTLINED_FUNCTION_397();
  OUTLINED_FUNCTION_511();
  OUTLINED_FUNCTION_733();
  OUTLINED_FUNCTION_952();
  OUTLINED_FUNCTION_840();
  OUTLINED_FUNCTION_839();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A622D384()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_335();
  OUTLINED_FUNCTION_803();
  v0 = OUTLINED_FUNCTION_569();
  v1 = (_QWORD *)OUTLINED_FUNCTION_37_1(v0);
  v2 = OUTLINED_FUNCTION_44_1(v1);
  return OUTLINED_FUNCTION_50_2(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1A622D3C8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_92_0();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_22_7();
  OUTLINED_FUNCTION_109_0();
  return sub_1A62270E4(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1A622D428()
{
  return objectdestroy_586Tm();
}

uint64_t sub_1A622D430()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_291();
  OUTLINED_FUNCTION_812();
  v1 = OUTLINED_FUNCTION_844();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_120();
  return OUTLINED_FUNCTION_215();
}

uint64_t sub_1A622D484()
{
  return objectdestroy_586Tm();
}

uint64_t sub_1A622D48C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_154();
  OUTLINED_FUNCTION_595();
  v1 = OUTLINED_FUNCTION_842();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_40_2();
  return OUTLINED_FUNCTION_23_6();
}

uint64_t sub_1A622D4FC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_558();
  OUTLINED_FUNCTION_391();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  v3 = OUTLINED_FUNCTION_187();
  return sub_1A6223E18(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1A622D550()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_729();
  OUTLINED_FUNCTION_385();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_243();
  OUTLINED_FUNCTION_837();
  return sub_1A6224B14(v3, v4, v5, v6, v7);
}

uint64_t sub_1A622D5A4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_558();
  OUTLINED_FUNCTION_550();
  v0 = OUTLINED_FUNCTION_680();
  v1 = (_QWORD *)OUTLINED_FUNCTION_37_1(v0);
  v2 = OUTLINED_FUNCTION_117(v1);
  return OUTLINED_FUNCTION_107_0(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1A622D5E4()
{
  return objectdestroy_586Tm();
}

uint64_t objectdestroy_586Tm()
{
  OUTLINED_FUNCTION_393();
  OUTLINED_FUNCTION_772();
  OUTLINED_FUNCTION_836();
  OUTLINED_FUNCTION_994();
  OUTLINED_FUNCTION_730();
  OUTLINED_FUNCTION_747();
  return OUTLINED_FUNCTION_407();
}

uint64_t sub_1A622D61C()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_707();
  v0 = OUTLINED_FUNCTION_421();
  v1 = (_QWORD *)OUTLINED_FUNCTION_37_1(v0);
  OUTLINED_FUNCTION_148(v1);
  return OUTLINED_FUNCTION_215();
}

uint64_t sub_1A622D65C()
{
  uint64_t v0;
  _QWORD *v1;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_37_1(v0);
  OUTLINED_FUNCTION_441(v1);
  return sub_1A62035C4();
}

uint64_t sub_1A622D6A0()
{
  uint64_t v0;

  return sub_1A620386C(v0, (uint64_t (*)(_QWORD))type metadata accessor for WeatherAlert);
}

uint64_t sub_1A622D6C4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_509();
  OUTLINED_FUNCTION_460();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_489();
  return sub_1A6223700(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1A622D720(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1A622D748(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_811(a1, a2);
  OUTLINED_FUNCTION_51(v2);
  OUTLINED_FUNCTION_29_1();
}

uint64_t sub_1A622D768()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_5_13();
  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE8465F0) - 8) + 80);
  OUTLINED_FUNCTION_393();
  OUTLINED_FUNCTION_772();
  OUTLINED_FUNCTION_836();
  v2 = v0 + ((v1 + 64) & ~v1);
  v3 = (int *)OUTLINED_FUNCTION_645();
  if (!OUTLINED_FUNCTION_344(v2))
  {
    v4 = OUTLINED_FUNCTION_341();
    OUTLINED_FUNCTION_51(v4);
    if ((~*(_QWORD *)(v2 + v3[5]) & 0xF000000000000007) != 0)
      OUTLINED_FUNCTION_1036();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_29_6();
    v5 = v2 + v3[10];
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_783(v5);
    OUTLINED_FUNCTION_783(v2 + v3[11]);
    OUTLINED_FUNCTION_783(v2 + v3[12]);
    v6 = v2 + v3[13];
    if (!OUTLINED_FUNCTION_123())
      OUTLINED_FUNCTION_783(v6);
    v7 = v2 + v3[14];
    if (!OUTLINED_FUNCTION_123())
      OUTLINED_FUNCTION_783(v7);
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_737();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_29_6();
    OUTLINED_FUNCTION_737();
  }
  OUTLINED_FUNCTION_838();
  swift_release();
  OUTLINED_FUNCTION_631();
  return OUTLINED_FUNCTION_240();
}

void sub_1A622D8D8()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8465F0);
  OUTLINED_FUNCTION_915();
  v0 = OUTLINED_FUNCTION_435();
  sub_1A622B7DC(v0, v1, v2, v3, v4, v5);
}

void sub_1A622D90C(uint64_t a1)
{
  uint64_t v1;

  sub_1A6216AA0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1A622D91C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1A622AA7C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(uint64_t **)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40));
}

_QWORD *sub_1A622D928(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a1[14];
  v3 = a1[15];
  v4 = a1[16];
  v5 = a1[17];
  v9 = a1[19];
  v10 = a1[18];
  v7 = a1[21];
  v8 = a1[20];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A622D9F0(v2, v3, v4, v5, v10, v9, v8, v7);
  return a1;
}

uint64_t sub_1A622D9F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;

  if (a6 != 1)
  {
    sub_1A622DA50(a2, a3, a4, a5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1A622DA64(a8);
  }
  return result;
}

uint64_t sub_1A622DA50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1A622DA64(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_1A622DA74()
{
  unint64_t result;

  result = qword_1ED21AE30;
  if (!qword_1ED21AE30)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for AirQualityScale, &type metadata for AirQualityScale);
    atomic_store(result, (unint64_t *)&qword_1ED21AE30);
  }
  return result;
}

uint64_t sub_1A622DAB0()
{
  OUTLINED_FUNCTION_512();
  OUTLINED_FUNCTION_677();
  OUTLINED_FUNCTION_734();
  OUTLINED_FUNCTION_397();
  OUTLINED_FUNCTION_730();
  OUTLINED_FUNCTION_963();
  OUTLINED_FUNCTION_845();
  return swift_deallocObject();
}

uint64_t sub_1A622DAE8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_154();
  OUTLINED_FUNCTION_922();
  v1 = OUTLINED_FUNCTION_421();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_22_7();
  return OUTLINED_FUNCTION_23_6();
}

_QWORD *sub_1A622DB68(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a1[16];
  v3 = a1[17];
  v4 = a1[18];
  v5 = a1[19];
  v9 = a1[21];
  v10 = a1[20];
  v7 = a1[23];
  v8 = a1[22];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A622D9F0(v2, v3, v4, v5, v10, v9, v8, v7);
  return a1;
}

uint64_t sub_1A622DC38()
{
  OUTLINED_FUNCTION_393();
  OUTLINED_FUNCTION_397();
  OUTLINED_FUNCTION_511();
  OUTLINED_FUNCTION_733();
  OUTLINED_FUNCTION_952();
  OUTLINED_FUNCTION_845();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_898();
  return swift_deallocObject();
}

uint64_t sub_1A622DC6C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_335();
  OUTLINED_FUNCTION_1026();
  v0 = OUTLINED_FUNCTION_569();
  v1 = (_QWORD *)OUTLINED_FUNCTION_37_1(v0);
  v2 = OUTLINED_FUNCTION_44_1(v1);
  return OUTLINED_FUNCTION_50_2(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1A622DCB8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_92_0();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_22_7();
  OUTLINED_FUNCTION_109_0();
  return sub_1A62264C0(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1A622DD18()
{
  return objectdestroy_698Tm();
}

uint64_t sub_1A622DD20()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_291();
  v1 = OUTLINED_FUNCTION_844();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_120();
  return OUTLINED_FUNCTION_215();
}

uint64_t sub_1A622DD88()
{
  return objectdestroy_698Tm();
}

uint64_t sub_1A622DD90()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_154();
  v1 = OUTLINED_FUNCTION_842();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_40_2();
  return OUTLINED_FUNCTION_23_6();
}

uint64_t sub_1A622DE24()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_558();
  OUTLINED_FUNCTION_391();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  v3 = OUTLINED_FUNCTION_187();
  return sub_1A6223BEC(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1A622DE78()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_729();
  OUTLINED_FUNCTION_385();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_243();
  OUTLINED_FUNCTION_837();
  return sub_1A6224094(v3, v4, v5, v6, v7);
}

uint64_t sub_1A622DECC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_558();
  OUTLINED_FUNCTION_550();
  v0 = OUTLINED_FUNCTION_680();
  v1 = (_QWORD *)OUTLINED_FUNCTION_37_1(v0);
  v2 = OUTLINED_FUNCTION_117(v1);
  return OUTLINED_FUNCTION_107_0(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1A622DF0C(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 192);
  if (v1 > 1)
    return (v1 ^ 0xFF) + 1;
  else
    return 0;
}

void sub_1A622DF20(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned __int8 a25)
{
  if (a25 != 255)
    sub_1A622DFAC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23,
      a24,
      a25 & 1);
}

void sub_1A622DFAC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  if ((a25 & 1) != 0)
  {

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A622D9F0(a17, a18, a19, a20, a21, a22, a23, a24);
  }
}

uint64_t sub_1A622E098(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 192);
}

uint64_t sub_1A622E0A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char);
  char v5;

  v2 = OUTLINED_FUNCTION_1043(a1);
  v5 = *(_BYTE *)(v1 + 192);
  v3(v2, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 144),
    *(_QWORD *)(v1 + 152),
    *(_QWORD *)(v1 + 160),
    *(_QWORD *)(v1 + 168),
    *(_QWORD *)(v1 + 176),
    *(_QWORD *)(v1 + 184),
    v5);
  return v1;
}

id sub_1A622E110(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned __int8 a25)
{
  if (a25 != 255)
    return sub_1A622E19C(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25 & 1);
  return result;
}

id sub_1A622E19C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  if ((a25 & 1) != 0)
    return a1;
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A6334CDC();
  return (id)sub_1A61B7450(a17, a18, a19, a20, a21, a22, a23, a24);
}

uint64_t sub_1A622E288()
{
  return objectdestroy_698Tm();
}

uint64_t objectdestroy_698Tm()
{
  OUTLINED_FUNCTION_393();
  OUTLINED_FUNCTION_772();
  OUTLINED_FUNCTION_964();
  OUTLINED_FUNCTION_397();
  OUTLINED_FUNCTION_747();
  return OUTLINED_FUNCTION_407();
}

uint64_t sub_1A622E2BC()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_119();
  v0 = OUTLINED_FUNCTION_421();
  v1 = (_QWORD *)OUTLINED_FUNCTION_37_1(v0);
  OUTLINED_FUNCTION_148(v1);
  return OUTLINED_FUNCTION_215();
}

uint64_t sub_1A622E318()
{
  uint64_t v0;
  _QWORD *v1;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_37_1(v0);
  OUTLINED_FUNCTION_441(v1);
  return sub_1A6203468();
}

uint64_t sub_1A622E35C()
{
  return sub_1A620382C();
}

uint64_t sub_1A622E368()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_509();
  OUTLINED_FUNCTION_460();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_489();
  return sub_1A6223700(v3, v4, v5, v6, v7, v8, v9);
}

void sub_1A622E3C4(_OWORD *a1)
{
  *a1 = xmmword_1A6339180;
  bzero(a1 + 1, 0xA0uLL);
}

uint64_t sub_1A622E3D8()
{
  _QWORD *v0;

  OUTLINED_FUNCTION_393();
  OUTLINED_FUNCTION_772();
  if (v0[7] != 1)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_511();
    OUTLINED_FUNCTION_733();
    OUTLINED_FUNCTION_952();
    OUTLINED_FUNCTION_840();
    swift_bridgeObjectRelease();
    if (v0[25] != 1)
    {
      if (v0[24] != 1)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v0[27] != 1)
        swift_bridgeObjectRelease();
    }
  }
  swift_release();
  return swift_deallocObject();
}

void sub_1A622E46C(uint64_t a1)
{
  uint64_t v1;

  sub_1A622ADA4(a1, (uint64_t *)(v1 + 16), v1 + 48, *(_QWORD *)(v1 + 224), *(_QWORD *)(v1 + 232), *(_BYTE *)(v1 + 240));
}

uint64_t *sub_1A622E480(uint64_t *a1)
{
  sub_1A622E4E0(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21]);
  return a1;
}

uint64_t sub_1A622E4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t result;

  if (a2 != 1)
  {
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    return sub_1A61B7450(a15, a16, a17, a18, a19, a20, a21, a22);
  }
  return result;
}

void sub_1A622E5B0(uint64_t a1)
{
  uint64_t v1;

  sub_1A62168F0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1A622E5C0(uint64_t a1)
{
  uint64_t *v1;

  if (!OUTLINED_FUNCTION_1043(a1))
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(v1);
    OUTLINED_FUNCTION_83();
  }
  OUTLINED_FUNCTION_29_1();
}

unint64_t sub_1A622E5F0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1ED2195A0;
  if (!qword_1ED2195A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED219590);
    v2 = sub_1A622E654();
    result = MEMORY[0x1A85BEED0](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED2195A0);
  }
  return result;
}

unint64_t sub_1A622E654()
{
  unint64_t result;

  result = qword_1ED219558;
  if (!qword_1ED219558)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for DataSet, &type metadata for DataSet);
    atomic_store(result, (unint64_t *)&qword_1ED219558);
  }
  return result;
}

uint64_t sub_1A622E690()
{
  OUTLINED_FUNCTION_512();
  OUTLINED_FUNCTION_677();
  OUTLINED_FUNCTION_730();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_845();
  OUTLINED_FUNCTION_839();
  OUTLINED_FUNCTION_898();
  return swift_deallocObject();
}

uint64_t sub_1A622E6C0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_154();
  OUTLINED_FUNCTION_594();
  v1 = OUTLINED_FUNCTION_421();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_22_7();
  return OUTLINED_FUNCTION_23_6();
}

uint64_t objectdestroy_18Tm()
{
  OUTLINED_FUNCTION_393();
  OUTLINED_FUNCTION_397();
  OUTLINED_FUNCTION_511();
  OUTLINED_FUNCTION_733();
  return swift_deallocObject();
}

uint64_t sub_1A622E760()
{
  OUTLINED_FUNCTION_393();
  OUTLINED_FUNCTION_397();
  OUTLINED_FUNCTION_511();
  OUTLINED_FUNCTION_840();
  OUTLINED_FUNCTION_839();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroy_30Tm()
{
  OUTLINED_FUNCTION_512();
  OUTLINED_FUNCTION_964();
  OUTLINED_FUNCTION_994();
  OUTLINED_FUNCTION_955();
  return swift_deallocObject();
}

void sub_1A622E7C8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_154();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_855();
  OUTLINED_FUNCTION_40_2();
  OUTLINED_FUNCTION_324();
  __asm { BR              X9 }
}

uint64_t sub_1A622E854()
{
  return objectdestroy_812Tm();
}

uint64_t sub_1A622E85C()
{
  return objectdestroy_812Tm();
}

uint64_t objectdestroy_55Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_512();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 40))
    OUTLINED_FUNCTION_964();
  return swift_deallocObject();
}

uint64_t sub_1A622E89C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v20;

  OUTLINED_FUNCTION_509();
  OUTLINED_FUNCTION_391();
  v11 = swift_task_alloc();
  v12 = (_QWORD *)OUTLINED_FUNCTION_37_1(v11);
  *v12 = v10;
  v12[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_187();
  OUTLINED_FUNCTION_489();
  return v19(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10);
}

uint64_t sub_1A622E8F8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_558();
  OUTLINED_FUNCTION_385();
  v1 = OUTLINED_FUNCTION_680();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  v3 = OUTLINED_FUNCTION_243();
  return OUTLINED_FUNCTION_107_0(v3, v4, v5, v6, v7, v8);
}

uint64_t objectdestroy_62Tm()
{
  OUTLINED_FUNCTION_512();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A622E970()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_558();
  OUTLINED_FUNCTION_550();
  v0 = OUTLINED_FUNCTION_680();
  v1 = (_QWORD *)OUTLINED_FUNCTION_37_1(v0);
  v2 = OUTLINED_FUNCTION_117(v1);
  return OUTLINED_FUNCTION_107_0(v2, v3, v4, v5, v6, v7);
}

id sub_1A622E9B0(id result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255)
    return sub_1A622E9C8(result, a2, a3, a4 & 1);
  return result;
}

id sub_1A622E9C8(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    return a1;
  else
    return (id)sub_1A6334CDC();
}

uint64_t sub_1A622E9D8()
{
  return objectdestroy_812Tm();
}

uint64_t objectdestroy_812Tm()
{
  OUTLINED_FUNCTION_836();
  OUTLINED_FUNCTION_994();
  OUTLINED_FUNCTION_730();
  OUTLINED_FUNCTION_747();
  return OUTLINED_FUNCTION_407();
}

uint64_t sub_1A622EA08()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_707();
  v0 = OUTLINED_FUNCTION_421();
  v1 = (_QWORD *)OUTLINED_FUNCTION_37_1(v0);
  OUTLINED_FUNCTION_148(v1);
  return OUTLINED_FUNCTION_215();
}

uint64_t sub_1A622EA48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;

  v3 = OUTLINED_FUNCTION_421();
  v4 = (_QWORD *)OUTLINED_FUNCTION_37_1(v3);
  *v4 = v1;
  v4[1] = sub_1A61BABA8;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1EE846808 + dword_1EE846808))(a1);
}

uint64_t sub_1A622EAA8()
{
  uint64_t v0;

  return sub_1A62038A4(v0, (uint64_t *)&unk_1ED219590);
}

uint64_t objectdestroy_81Tm()
{
  OUTLINED_FUNCTION_512();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A622EAF4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  OUTLINED_FUNCTION_335();
  OUTLINED_FUNCTION_460();
  v1 = OUTLINED_FUNCTION_569();
  v2 = (_QWORD *)OUTLINED_FUNCTION_37_1(v1);
  *v2 = v0;
  v2[1] = sub_1A61BABA8;
  OUTLINED_FUNCTION_86_0();
  return OUTLINED_FUNCTION_50_2(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1A622EB4C()
{
  OUTLINED_FUNCTION_836();
  OUTLINED_FUNCTION_397();
  swift_release();
  return swift_deallocObject();
}

void sub_1A622EB78(uint64_t a1)
{
  uint64_t v1;

  sub_1A622B060(a1, (_OWORD *)(v1 + 16), (uint64_t *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_BYTE *)(v1 + 88));
}

void sub_1A622EB8C(uint64_t a1)
{
  uint64_t v1;

  sub_1A61BA760(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t objectdestroy_104Tm()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C968);
  OUTLINED_FUNCTION_565(*(_QWORD *)(v0 - 8));
  OUTLINED_FUNCTION_631();
  return swift_deallocObject();
}

void sub_1A622EBF4()
{
  void *v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C968);
  v0 = (void *)OUTLINED_FUNCTION_697();
  sub_1A61DFD88(v0);
  OUTLINED_FUNCTION_938();
}

void sub_1A622ECC4(void *a1)
{
  sub_1A61A0A38(a1);
}

void sub_1A622ECF4(uint64_t a1)
{
  sub_1A6229078(a1);
}

uint64_t OUTLINED_FUNCTION_36_2(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_37_1(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_50_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(void))
{
  return a8();
}

uint64_t OUTLINED_FUNCTION_62_0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 184) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_63_1()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 152) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_66_0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_70_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + a1), *(_QWORD *)(v1 + a1 + 24));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v5, v3, v4);
}

BOOL OUTLINED_FUNCTION_83_0(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_90()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_91_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_93_0()
{
  return sub_1A6334CDC();
}

uint64_t OUTLINED_FUNCTION_103_0()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_104()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 232) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_105_0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 96) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_107_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  return a6();
}

void OUTLINED_FUNCTION_121()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_122()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_127()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v0, v2);
}

uint64_t OUTLINED_FUNCTION_131()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[25] + 8))(v0[26], v0[24]);
}

uint64_t OUTLINED_FUNCTION_133(float a1)
{
  float *v1;

  *v1 = a1;
  return sub_1A6334CDC();
}

uint64_t OUTLINED_FUNCTION_134()
{
  return sub_1A6334EEC();
}

uint64_t OUTLINED_FUNCTION_135(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_136()
{
  return swift_beginAccess();
}

BOOL OUTLINED_FUNCTION_139(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

uint64_t OUTLINED_FUNCTION_140(float a1)
{
  uint64_t v1;
  float *v2;

  *v2 = a1;
  *(_QWORD *)(v1 + 96) = 1752392040;
  return sub_1A6335774();
}

uint64_t OUTLINED_FUNCTION_144@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 80) = a1;
  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 24);
}

uint64_t OUTLINED_FUNCTION_145()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v2 + 216);
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 8 * v3 + 32) = v4;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_146(float a1)
{
  float *v1;

  *v1 = a1;
  return sub_1A6334CDC();
}

uint64_t OUTLINED_FUNCTION_148(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  *a1 = v4;
  a1[1] = v1;
  *(_BYTE *)(v5 + 16) = v3;
  return v2;
}

uint64_t OUTLINED_FUNCTION_152()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1A61A68B8(v1, v0);
}

int8x16_t OUTLINED_FUNCTION_153(int8x16_t *a1)
{
  uint64_t v1;
  int8x16_t result;

  *(_QWORD *)(v1 + 40) = a1;
  result = vextq_s8(*(int8x16_t *)(v1 + 24), *(int8x16_t *)(v1 + 24), 8uLL);
  a1[1] = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_159(uint64_t a1)
{
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
  return sub_1A61A62D8();
}

uint64_t OUTLINED_FUNCTION_160(uint64_t a1)
{
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
  return sub_1A61A62D8();
}

uint64_t OUTLINED_FUNCTION_162()
{
  uint64_t v0;
  uint64_t v1;

  __swift_getEnumTagSinglePayload(v1, 1, v0);
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_163()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_170(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_171()
{
  return sub_1A6335774();
}

uint64_t OUTLINED_FUNCTION_172()
{
  return sub_1A6334CDC();
}

uint64_t OUTLINED_FUNCTION_175(uint64_t (*a1)(void))
{
  return a1();
}

void OUTLINED_FUNCTION_176()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v0[32];
  *(_QWORD *)(v1 - 144) = v0[33];
  *(_QWORD *)(v1 - 136) = v2;
  *(_QWORD *)(v1 - 128) = v0[28];
  *(_QWORD *)(v1 - 112) = v0[27];
  objc_autoreleasePoolPop(*(void **)(v1 - 120));
}

uint64_t OUTLINED_FUNCTION_178()
{
  return sub_1A63358E8();
}

uint64_t OUTLINED_FUNCTION_179(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 + *(int *)(a1 + 20)) = v3;
  v4 = v2 + *(int *)(a1 + 24);
  *(_QWORD *)v4 = v1;
  *(_WORD *)(v4 + 8) = 256;
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_182@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t OUTLINED_FUNCTION_183()
{
  return sub_1A6335774();
}

uint64_t OUTLINED_FUNCTION_184(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = a1;
  return sub_1A6335774();
}

uint64_t OUTLINED_FUNCTION_188()
{
  uint64_t v0;

  return sub_1A61A075C(v0);
}

void OUTLINED_FUNCTION_191()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_193()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 64) = v0;
  return swift_task_dealloc();
}

id OUTLINED_FUNCTION_199()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_201(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 256) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 56);
}

uint64_t OUTLINED_FUNCTION_203@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t (*a3)(void)@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(a2 + 16) = v3;
  *(_QWORD *)(a2 + 8 * v4 + 32) = a1;
  return a3();
}

uint64_t OUTLINED_FUNCTION_204()
{
  return sub_1A63355D0();
}

void OUTLINED_FUNCTION_205()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

id OUTLINED_FUNCTION_207()
{
  void *v0;

  return objc_msgSend(v0, sel_statusCode);
}

uint64_t OUTLINED_FUNCTION_208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t OUTLINED_FUNCTION_209()
{
  return sub_1A6335774();
}

uint64_t OUTLINED_FUNCTION_212()
{
  return sub_1A63355F4();
}

void OUTLINED_FUNCTION_213(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = v2;
  *(_BYTE *)(a2 + 24) = 2;
}

uint64_t OUTLINED_FUNCTION_215()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t OUTLINED_FUNCTION_219@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_224()
{
  return sub_1A6335924();
}

uint64_t OUTLINED_FUNCTION_230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_231()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 88) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_232()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_234()
{
  uint64_t v0;

  *(_WORD *)(v0 + 22) = 2082;
  return sub_1A6334CDC();
}

uint64_t OUTLINED_FUNCTION_236()
{
  return sub_1A6334EC8();
}

uint64_t OUTLINED_FUNCTION_241()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_242()
{
  return sub_1A6334CDC();
}

uint64_t OUTLINED_FUNCTION_244()
{
  return sub_1A6334EEC();
}

void *OUTLINED_FUNCTION_246(_OWORD *a1)
{
  _OWORD *v1;
  const void *v2;
  __int128 v3;
  __int128 v4;

  v3 = v1[2];
  a1[1] = v1[1];
  a1[2] = v3;
  v4 = v1[4];
  a1[3] = v1[3];
  a1[4] = v4;
  return memcpy(a1 + 5, v2, 0x41uLL);
}

uint64_t OUTLINED_FUNCTION_249(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 168);
}

uint64_t OUTLINED_FUNCTION_250(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 104);
}

uint64_t OUTLINED_FUNCTION_253(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;

  *(_QWORD *)(v30 + a19) = v26;
  v31 = (_QWORD *)(v30 + a18);
  *v31 = v28;
  v31[1] = v29;
  *(_QWORD *)(v30 + a14) = 0;
  *(_QWORD *)(v30 + a13) = v25;
  v32 = (_QWORD *)(v30 + a12);
  *v32 = v27;
  v32[1] = a23;
  v33 = v30 + a11;
  *(_QWORD *)v33 = a15;
  *(_BYTE *)(v33 + 8) = a25;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_254()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_265()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 232))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 120));
}

uint64_t OUTLINED_FUNCTION_267(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  unint64_t v7;
  uint64_t v8;
  va_list va;

  va_start(va, a7);
  return sub_1A61A6A1C(v8, v7, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_268()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 160) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_269(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  *a1 = v2;
  a1[1] = v1;
  result = v2[12];
  v5 = v2[4];
  *(_QWORD *)(v3 + 24) = v2[3];
  *(_QWORD *)(v3 + 32) = v5;
  *(_BYTE *)(v3 + 16) = 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_271()
{
  return sub_1A6335774();
}

uint64_t OUTLINED_FUNCTION_275()
{
  return sub_1A6332C0C();
}

uint64_t OUTLINED_FUNCTION_276()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[36] + 8))(v0[37], v0[35]);
}

void OUTLINED_FUNCTION_279(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1A61A041C(a1, a2, v10, a4, v11, a6, v12, a8, a9, a10);
}

uint64_t OUTLINED_FUNCTION_280(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = a1;
  return sub_1A6335774();
}

uint64_t OUTLINED_FUNCTION_282(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
  return sub_1A6335774();
}

id OUTLINED_FUNCTION_283(float a1)
{
  uint64_t v1;
  uint64_t v2;
  float *v3;
  uint64_t v4;

  *v3 = a1;
  *(_QWORD *)(v4 - 128) = v2;
  return objc_msgSend(*(id *)(v4 - 112), (SEL)(v1 + 1096));
}

uint64_t OUTLINED_FUNCTION_284()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return __swift_getEnumTagSinglePayload(v0 + *(int *)(v1 + 24), 1, v2);
}

uint64_t OUTLINED_FUNCTION_285(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;

  return sub_1A61A6A1C(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_286(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

void OUTLINED_FUNCTION_287(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, os_log_type_t type)
{
  uint8_t *v18;
  NSObject *v19;

  _os_log_impl(a1, v19, type, a4, v18, 0x20u);
}

uint64_t OUTLINED_FUNCTION_292()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_296(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  *a1 = v2;
  a1[1] = v1;
  result = *(_QWORD *)(v2 + 72);
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v2 + 32);
  return result;
}

uint64_t OUTLINED_FUNCTION_297()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 128) = *(_QWORD *)(v0 + 360);
  *(_QWORD *)(v1 - 120) = *(_QWORD *)(v0 + 336);
  return 0;
}

void OUTLINED_FUNCTION_298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = v1;
  *(_QWORD *)(v2 - 136) = *(_QWORD *)(v0 + 488);
  *(_QWORD *)(v2 - 144) = *(_QWORD *)(v0 + 472);
  JUMPOUT(0x1A85BEA08);
}

uint64_t OUTLINED_FUNCTION_301()
{
  uint64_t v0;

  return sub_1A61B72E8(v0);
}

uint64_t OUTLINED_FUNCTION_302()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_304@<X0>(uint64_t (*a1)(uint64_t)@<X8>)
{
  uint64_t v1;

  return a1(v1);
}

uint64_t OUTLINED_FUNCTION_305()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_306()
{
  return sub_1A63355E8();
}

uint64_t OUTLINED_FUNCTION_308()
{
  return type metadata accessor for WeatherRequest();
}

uint64_t OUTLINED_FUNCTION_311(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void *OUTLINED_FUNCTION_318()
{
  const void *v0;
  uint64_t v1;
  void *v2;

  *(_WORD *)(v1 + 12) = 2081;
  return memcpy(v2, v0, 0x41uLL);
}

uint64_t OUTLINED_FUNCTION_319()
{
  return sub_1A63355F4();
}

uint64_t OUTLINED_FUNCTION_323(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 176) = a1;
  return sub_1A6335774();
}

uint64_t OUTLINED_FUNCTION_325(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = a1;
  return sub_1A6334ED4();
}

uint64_t OUTLINED_FUNCTION_326()
{
  uint64_t v0;

  return sub_1A619F30C(v0, 0);
}

void *OUTLINED_FUNCTION_328()
{
  const void *v0;
  uint64_t v1;

  return memcpy((void *)(v1 - 152), v0, 0x41uLL);
}

uint64_t OUTLINED_FUNCTION_329()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_332()
{
  return sub_1A6335774();
}

uint64_t OUTLINED_FUNCTION_333()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v0[45];
  *(_QWORD *)(v1 - 120) = v0[44];
  *(_QWORD *)(v1 - 112) = v2;
  *(_QWORD *)(v1 - 128) = v0[42];
  return 0;
}

uint64_t OUTLINED_FUNCTION_334()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_336()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_337()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_340(uint64_t a1)
{
  unint64_t v1;

  return sub_1A61A68B8(a1, v1);
}

uint64_t OUTLINED_FUNCTION_342(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, uint64_t a13, int a14, char a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;

  *(_QWORD *)(v20 + v15) = v17;
  v22 = (_QWORD *)(v20 + v16);
  *v22 = a9;
  v22[1] = v18;
  v23 = v20 + v21;
  *(_QWORD *)v23 = a10;
  *(_BYTE *)(v23 + 8) = a12 & 1;
  v24 = v20 + v19;
  *(_QWORD *)v24 = a13;
  *(_BYTE *)(v24 + 8) = a15;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_344(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_350(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  __swift_project_value_buffer(a1, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v2, v5);
}

uint64_t OUTLINED_FUNCTION_352(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;

  return sub_1A61A6A1C(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_353(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = a1;
  return sub_1A6335774();
}

uint64_t OUTLINED_FUNCTION_363(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = result;
  return result;
}

__n128 OUTLINED_FUNCTION_364(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9)
{
  unint64_t v9;
  uint64_t v10;
  __n128 result;

  *(_QWORD *)(v10 + 48) = a1;
  result = a9;
  a1[1] = a9;
  a1[2].n128_u64[0] = v9;
  return result;
}

uint64_t OUTLINED_FUNCTION_365@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = v2;
  v1[1] = a1;
  return *(_QWORD *)(v2 + 112);
}

uint64_t OUTLINED_FUNCTION_366()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 112) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_369(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = a1;
  return sub_1A6334ED4();
}

uint64_t OUTLINED_FUNCTION_374(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_375()
{
  return sub_1A6335774();
}

uint64_t OUTLINED_FUNCTION_377(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void OUTLINED_FUNCTION_382(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t a10)
{
  uint64_t v10;

  sub_1A61A041C(a1, a2, a3, a4, a5, a6, v10, a8, a9, a10);
}

void OUTLINED_FUNCTION_392(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, unint64_t a18, uint64_t a19, uint64_t a20,void (*a21)(uint64_t, uint64_t, void *, uint64_t, _QWORD, unint64_t, _QWORD))
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  LOBYTE(a7) = v26;
  sub_1A621B1A8(a18, v29, v28, v25, *(_QWORD *)(v30 - 112), (uint64_t)a21, *(_QWORD *)(v30 - 144), a20, v24, v27, a19, v23, v22, a7, v21, a1, a10, a11, a12,
    a13,
    a14,
    a15,
    a16,
    a17,
    a18,
    a19,
    a20,
    a21);
}

uint64_t OUTLINED_FUNCTION_394(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1A61A6A1C(a1, a2, (uint64_t *)(v2 - 80));
}

uint64_t OUTLINED_FUNCTION_396()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_406(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 336) = a1;
  return sub_1A63327E0();
}

uint64_t OUTLINED_FUNCTION_407()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_408()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v0, v2);
}

id OUTLINED_FUNCTION_409()
{
  uint64_t v0;
  void *v1;

  *(_WORD *)(v0 + 12) = 2113;
  return v1;
}

uint64_t OUTLINED_FUNCTION_410()
{
  return sub_1A63355C4();
}

uint64_t OUTLINED_FUNCTION_411()
{
  return sub_1A63355C4();
}

uint64_t OUTLINED_FUNCTION_412()
{
  return swift_unexpectedError();
}

uint64_t OUTLINED_FUNCTION_415(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return a16;
}

uint64_t OUTLINED_FUNCTION_418(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_421()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_422()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_428()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(v2, v0, v3);
}

void OUTLINED_FUNCTION_429()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;

  sub_1A618D9C4(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_430()
{
  return sub_1A6335AA4();
}

id OUTLINED_FUNCTION_433()
{
  uint64_t v0;

  return *(id *)(v0 + 368);
}

uint64_t OUTLINED_FUNCTION_434()
{
  return sub_1A6334E8C();
}

void OUTLINED_FUNCTION_440(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

void OUTLINED_FUNCTION_445(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0x20u);
}

uint64_t OUTLINED_FUNCTION_450(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

__n128 OUTLINED_FUNCTION_454(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __n128 result;
  __int128 v6;

  v4 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  result = *(__n128 *)(v1 + 48);
  v6 = *(_OWORD *)(v1 + 64);
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 80) = v3;
  *(_QWORD *)(a1 + 88) = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_461()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_462(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_463()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_465@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = v2;
  v1[1] = a1;
  return *(_QWORD *)(v2 + 16);
}

uint64_t OUTLINED_FUNCTION_466()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_468(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_473()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_474(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = a1;
  return sub_1A6335774();
}

id OUTLINED_FUNCTION_475(float a1)
{
  uint64_t v1;
  float *v2;
  uint64_t v3;

  *v2 = a1;
  return objc_msgSend(*(id *)(v3 - 104), (SEL)(v1 + 1096));
}

uint64_t OUTLINED_FUNCTION_478(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  a1[2] = 0;
  a1[3] = 0;
  a1[4] = v6;
  a1[5] = v5;
  a1[6] = v4;
  a1[7] = v2;
  __swift_getEnumTagSinglePayload(v1, 1, v3);
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_486()
{
  return sub_1A63327E0();
}

uint64_t OUTLINED_FUNCTION_487(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_490()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_492(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_493()
{
  return sub_1A6335AC8();
}

uint64_t OUTLINED_FUNCTION_494()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_495(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  unint64_t v5;
  uint64_t v6;
  va_list va;

  va_start(va, a5);
  return sub_1A61A6A1C(v6, v5, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_503()
{
  uint64_t v0;

  return sub_1A61A68B8(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 360));
}

void OUTLINED_FUNCTION_504(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  sub_1A622D748(a2, a1);
}

uint64_t OUTLINED_FUNCTION_505(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  *a1 = v2;
  a1[1] = v1;
  result = *(_QWORD *)(v2 + 80);
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v2 + 56);
  return result;
}

uint64_t OUTLINED_FUNCTION_506(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 224) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_507()
{
  uint64_t v0;

  return sub_1A61A68B8(*(_QWORD *)(v0 - 120), *(_QWORD *)(v0 - 112));
}

uint64_t OUTLINED_FUNCTION_511()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_512()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_513()
{
  uint64_t v0;
  uint64_t v1;

  *(_WORD *)(v0 + 12) = 2160;
  *(_QWORD *)(v1 - 112) = 1752392040;
  return sub_1A6335774();
}

uint64_t OUTLINED_FUNCTION_514()
{
  return sub_1A6335774();
}

uint64_t OUTLINED_FUNCTION_515()
{
  return sub_1A63327B0();
}

uint64_t OUTLINED_FUNCTION_516()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_517()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 96))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_521()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_524(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_526()
{
  return type metadata accessor for WeatherInterpolationOptions();
}

uint64_t OUTLINED_FUNCTION_528()
{
  return type metadata accessor for WeatherRequestHourlyRelativeRange();
}

uint64_t OUTLINED_FUNCTION_529()
{
  return type metadata accessor for WeatherRequestDailyRelativeRange();
}

void OUTLINED_FUNCTION_534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;

  *(_QWORD *)(v30 + v25) = a18;
  v31 = (_QWORD *)(v30 + v29);
  *v31 = a17;
  v31[1] = a23;
  v32 = v30 + v28;
  *(_QWORD *)v32 = v27;
  *(_BYTE *)(v32 + 8) = a25;
  *(_QWORD *)(v30 + v26) = 0;
}

uint64_t OUTLINED_FUNCTION_536()
{
  return sub_1A63355D0();
}

uint64_t OUTLINED_FUNCTION_538()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_539()
{
  return swift_task_alloc();
}

BOOL OUTLINED_FUNCTION_551()
{
  char v0;
  char v1;

  return (!v1 & v0) != 0;
}

uint64_t OUTLINED_FUNCTION_552()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_555(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;

  return sub_1A61A68B8(a23, *(_QWORD *)(v23 - 104));
}

uint64_t OUTLINED_FUNCTION_557(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

void OUTLINED_FUNCTION_560()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 96) = v2;
  *(_QWORD *)(v0 + 104) = v1;
}

void OUTLINED_FUNCTION_566()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = v0;
  *(_QWORD *)(v2 + 104) = v1;
}

uint64_t OUTLINED_FUNCTION_570(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1A61A6A1C(a1, a2, (uint64_t *)(v2 - 96));
}

uint64_t OUTLINED_FUNCTION_571()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v2 = *(_DWORD *)(v1 - 92) & 1;
  *(_QWORD *)v0 = *(_QWORD *)(v1 - 88);
  *(_BYTE *)(v0 + 8) = v2;
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_572(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1A622D748(v2, a2);
}

uint64_t OUTLINED_FUNCTION_573(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A619F30C(*(_QWORD *)(v2 + 56), a2);
}

uint64_t OUTLINED_FUNCTION_574()
{
  return sub_1A6335774();
}

uint64_t OUTLINED_FUNCTION_578()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

__n128 OUTLINED_FUNCTION_586(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;
  __int128 v4;

  v2 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 32) = v2;
  result = *(__n128 *)(v1 + 48);
  v4 = *(_OWORD *)(v1 + 64);
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v4;
  return result;
}

uint64_t OUTLINED_FUNCTION_587(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  return sub_1A61A6A1C(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_588()
{
  return sub_1A6335348();
}

void OUTLINED_FUNCTION_591(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_592()
{
  return swift_task_dealloc();
}

__n128 OUTLINED_FUNCTION_594()
{
  __n128 *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0[1].n128_u64[0];
  return v0[7];
}

void OUTLINED_FUNCTION_595()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0 + 16;
}

uint64_t OUTLINED_FUNCTION_596()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_597()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 264) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_600()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 232) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_601()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 160) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_602()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_604()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_605()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_607@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + a1 + 24);
  v3 = *(_QWORD *)(v1 + a1 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + a1), v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
}

uint64_t OUTLINED_FUNCTION_608()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 176) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_610()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_612(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_613(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = result;
  return result;
}

id OUTLINED_FUNCTION_617(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  return a18;
}

uint64_t OUTLINED_FUNCTION_620()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v2 + 32);
  *v0 = v1;
  v0[1] = v5;
  v0[2] = v4;
  v8 = (_QWORD *)((char *)v0 + *(int *)(v3 + 28));
  *v8 = v7;
  v8[1] = v6;
  return sub_1A6334CDC();
}

uint64_t OUTLINED_FUNCTION_621(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 112) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 32);
}

uint64_t OUTLINED_FUNCTION_622(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1A61A6A1C(a1, a2, (uint64_t *)(v2 - 96));
}

uint64_t OUTLINED_FUNCTION_624()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_628(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1A61A6A1C(a1, a2, (uint64_t *)(v2 - 168));
}

uint64_t OUTLINED_FUNCTION_630()
{
  uint64_t v0;

  return sub_1A61A29C0(*(_QWORD *)(v0 + 32));
}

void OUTLINED_FUNCTION_634(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1A622D748(v2, a2);
}

uint64_t OUTLINED_FUNCTION_635(uint64_t a1, uint64_t a2)
{
  return __swift_project_value_buffer(a1, a2);
}

uint64_t OUTLINED_FUNCTION_636()
{
  return swift_bridgeObjectRelease();
}

__n128 OUTLINED_FUNCTION_637(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;
  __int128 v4;

  v2 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 32) = v2;
  result = *(__n128 *)(v1 + 48);
  v4 = *(_OWORD *)(v1 + 64);
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v4;
  return result;
}

void OUTLINED_FUNCTION_638(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_1A61A72B4(a1, v1);
}

uint64_t OUTLINED_FUNCTION_645()
{
  return type metadata accessor for WeatherAlert();
}

uint64_t OUTLINED_FUNCTION_647()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 16) = v0;
  *(_QWORD *)(v1 + 8 * v2 + 32) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_648()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_652()
{
  return swift_willThrow();
}

BOOL OUTLINED_FUNCTION_655()
{
  return NSHTTPURLResponse.isSuccess.getter();
}

__n128 *OUTLINED_FUNCTION_662(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_664(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1A61A6A1C(a1, a2, (uint64_t *)(v2 - 88));
}

uint64_t OUTLINED_FUNCTION_666()
{
  return sub_1A6332C0C();
}

uint64_t OUTLINED_FUNCTION_667()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_669()
{
  uint64_t v0;

  return sub_1A619ED30(v0);
}

uint64_t OUTLINED_FUNCTION_672()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = 1;
  return v0;
}

void *OUTLINED_FUNCTION_674(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB0uLL);
}

uint64_t OUTLINED_FUNCTION_677()
{
  return swift_release();
}

void OUTLINED_FUNCTION_678(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_1A61A72B4(a1, v1);
}

uint64_t OUTLINED_FUNCTION_682()
{
  return sub_1A6332B58();
}

uint64_t OUTLINED_FUNCTION_684@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = v2;
  v1[1] = a1;
  return *(_QWORD *)(v2 + 80);
}

uint64_t OUTLINED_FUNCTION_685()
{
  return sub_1A6332B58();
}

uint64_t OUTLINED_FUNCTION_686()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_690(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = a1;
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_691()
{
  return sub_1A6332C18();
}

id OUTLINED_FUNCTION_694()
{
  char *v0;
  uint64_t v1;

  return sub_1A6229A78(v1, v0);
}

uint64_t OUTLINED_FUNCTION_695()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_697()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_698()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_700()
{
  return type metadata accessor for TelemetryActivity();
}

uint64_t OUTLINED_FUNCTION_701()
{
  return sub_1A633569C();
}

uint64_t OUTLINED_FUNCTION_702(_OWORD *a1)
{
  uint64_t v1;
  _OWORD *v2;
  __int128 v3;
  __int128 v4;

  v3 = v2[2];
  a1[1] = v2[1];
  a1[2] = v3;
  v4 = v2[4];
  a1[3] = v2[3];
  a1[4] = v4;
  return v1;
}

uint64_t OUTLINED_FUNCTION_706(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 176) = result;
  return result;
}

void OUTLINED_FUNCTION_707()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0 + 16;
}

id OUTLINED_FUNCTION_711(id a1, SEL a2)
{
  return objc_msgSend(a1, a2);
}

uint64_t OUTLINED_FUNCTION_712()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[50] + 8))(v0[51], v0[49]);
}

void OUTLINED_FUNCTION_716(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{

}

uint64_t OUTLINED_FUNCTION_717()
{
  return swift_release();
}

void OUTLINED_FUNCTION_718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  objc_autoreleasePoolPop(a23);
}

uint64_t OUTLINED_FUNCTION_719()
{
  return swift_task_create();
}

void OUTLINED_FUNCTION_721()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_722()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_723(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_726(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_727(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_728(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 216) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_730()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_733()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_734()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_735(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = a1;
  return sub_1A6335774();
}

uint64_t OUTLINED_FUNCTION_737()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a10 = 0;
  a10[1] = 0;
  *(_QWORD *)(v10 + 32) = v12;
  *(_QWORD *)(v10 + 40) = v11;
}

uint64_t OUTLINED_FUNCTION_739()
{
  uint64_t v0;

  *(_WORD *)(v0 + 22) = 2081;
  return CLLocationCoordinate2D.id.getter();
}

uint64_t OUTLINED_FUNCTION_740(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = a1;
  return sub_1A6335774();
}

void OUTLINED_FUNCTION_744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t (*v21)(_QWORD);
  uint64_t v22;

  sub_1A618B330(v22, a1 + a21, v21);
}

uint64_t OUTLINED_FUNCTION_745()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 136);
}

uint64_t OUTLINED_FUNCTION_746()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_747()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_749()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_751(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_1A61A72B4(a1, v1);
}

void OUTLINED_FUNCTION_752(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  __swift_getEnumTagSinglePayload(v2, 1, a1);
  sub_1A622D748(v2, v1);
}

uint64_t OUTLINED_FUNCTION_753()
{
  _OWORD *v0;
  uint64_t v1;
  __int128 v2;

  v2 = v0[1];
  *(_OWORD *)(v1 - 128) = *v0;
  *(_OWORD *)(v1 - 112) = v2;
  *(_OWORD *)(v1 - 96) = v0[2];
  return sub_1A61A6F94();
}

uint64_t OUTLINED_FUNCTION_754()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_756(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 80) = a2;
}

void OUTLINED_FUNCTION_757()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_758()
{
  uint64_t v0;

  return sub_1A61A2998(v0);
}

uint64_t OUTLINED_FUNCTION_759()
{
  return sub_1A63355DC();
}

uint64_t OUTLINED_FUNCTION_760()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_761()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_762()
{
  return sub_1A6335774();
}

void OUTLINED_FUNCTION_763()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v0 + 12) = 2082;
  *(_QWORD *)(v1 + 112) = *(_QWORD *)(v2 + 8);
}

uint64_t OUTLINED_FUNCTION_764()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_765()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_766()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t OUTLINED_FUNCTION_767()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_768(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = result;
  return result;
}

void OUTLINED_FUNCTION_769()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_770()
{
  uint64_t v0;

  return sub_1A61A68B8(*(_QWORD *)(v0 - 128), *(_QWORD *)(v0 - 120));
}

uint64_t OUTLINED_FUNCTION_771()
{
  return sub_1A63355E8();
}

uint64_t OUTLINED_FUNCTION_772()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_773(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 0, 1, a1);
}

uint64_t OUTLINED_FUNCTION_774()
{
  return sub_1A63327E0();
}

uint64_t OUTLINED_FUNCTION_775()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_776()
{
  uint64_t v0;

}

void OUTLINED_FUNCTION_777()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_778()
{
  uint64_t v0;

  return sub_1A61A6148(v0);
}

uint64_t OUTLINED_FUNCTION_780()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_781()
{
  return sub_1A6334ED4();
}

uint64_t OUTLINED_FUNCTION_782()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_783(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_784()
{
  return sub_1A6334EC8();
}

uint64_t OUTLINED_FUNCTION_785@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_786()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_787()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;

  sub_1A622C70C(v0, v2, v1, v3);
}

uint64_t OUTLINED_FUNCTION_788()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_789()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  return v1(v0);
}

void OUTLINED_FUNCTION_790()
{
  unsigned __int8 v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;

  sub_1A61A0A20(v3, v2, v1, v0);

}

void OUTLINED_FUNCTION_791(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_1A61AED54(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_792()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_793()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_794()
{
  return sub_1A6335894();
}

uint64_t OUTLINED_FUNCTION_795(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1A61A6A1C(a1, a2, (uint64_t *)(v2 - 144));
}

uint64_t OUTLINED_FUNCTION_796(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1A61A6A1C(a1, a2, (uint64_t *)(v2 - 104));
}

uint64_t OUTLINED_FUNCTION_798()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_799()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_800()
{
  return sub_1A6335600();
}

uint64_t OUTLINED_FUNCTION_802()
{
  return sub_1A63327E0();
}

void OUTLINED_FUNCTION_805(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  uint64_t v6;

  _os_log_impl(a1, v4, (os_log_type_t)*(_DWORD *)(v6 - 140), a4, v5, 0x2Au);
}

void OUTLINED_FUNCTION_806()
{
  _OWORD *v0;

  sub_1A622E3C4(v0);
}

uint64_t OUTLINED_FUNCTION_807()
{
  return sub_1A6332C30();
}

uint64_t OUTLINED_FUNCTION_808()
{
  return sub_1A6332C48();
}

uint64_t OUTLINED_FUNCTION_810(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_811(uint64_t a1, uint64_t *a2)
{
  return __swift_instantiateConcreteTypeFromMangledName(a2);
}

uint64_t OUTLINED_FUNCTION_813()
{
  return sub_1A6334EC8();
}

uint64_t OUTLINED_FUNCTION_819()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 136);
}

uint64_t OUTLINED_FUNCTION_820()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_821()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_822()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_823(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{

}

uint64_t OUTLINED_FUNCTION_825()
{
  uint64_t v0;

  return sub_1A61A68B8(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 472));
}

void OUTLINED_FUNCTION_826(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_QWORD *)a1 = a2;
  *(_BYTE *)(a1 + 24) = 3;
}

uint64_t OUTLINED_FUNCTION_827(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;

  return sub_1A61A6A1C(a1, v1, (uint64_t *)(v2 - 80));
}

uint64_t OUTLINED_FUNCTION_828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  __int16 v16;

  *(_WORD *)(v15 + 22) = v16;
  return a13 + *(int *)(a15 + 24);
}

uint64_t OUTLINED_FUNCTION_831(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 80) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_832()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_833()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_834(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_835(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_836()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_839()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_840()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_841(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 80) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_842()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_843()
{
  return Double.humanReadableDescription.getter();
}

uint64_t OUTLINED_FUNCTION_844()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_845()
{
  return swift_release();
}

BOOL OUTLINED_FUNCTION_846(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_848()
{
  return sub_1A6334EEC();
}

uint64_t OUTLINED_FUNCTION_849()
{
  return sub_1A6335594();
}

void OUTLINED_FUNCTION_851(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t OUTLINED_FUNCTION_852()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1A61A6A1C(v1, v0, (uint64_t *)(v2 - 104));
}

uint64_t OUTLINED_FUNCTION_853()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1A61A6A1C(v1, v0, (uint64_t *)(v2 - 104));
}

uint64_t OUTLINED_FUNCTION_854()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_855()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_856(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_1A61A72B4(v2, a2);
}

uint64_t OUTLINED_FUNCTION_857(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(uint64_t, uint64_t))
{
  uint64_t v21;
  uint64_t v22;

  return a21(v21, v22);
}

uint64_t OUTLINED_FUNCTION_859()
{
  uint64_t v0;

  return sub_1A622D720(v0);
}

uint64_t OUTLINED_FUNCTION_860@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_861()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 160) + 8))(v0, *(_QWORD *)(v1 - 152));
}

uint64_t OUTLINED_FUNCTION_863(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = a1;
  return v1 - 104;
}

uint64_t OUTLINED_FUNCTION_864()
{
  return sub_1A6335774();
}

uint64_t OUTLINED_FUNCTION_865()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_867()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

void OUTLINED_FUNCTION_870()
{
  uint64_t v0;

  *(_WORD *)(v0 + 12) = 2081;
}

uint64_t OUTLINED_FUNCTION_871()
{
  return swift_release();
}

_QWORD *OUTLINED_FUNCTION_872()
{
  uint64_t v0;

  return sub_1A622D928((_QWORD *)(v0 + 368));
}

uint64_t OUTLINED_FUNCTION_874()
{
  return sub_1A6335594();
}

__n128 OUTLINED_FUNCTION_876(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;
  __int128 v4;

  v2 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 32) = v2;
  result = *(__n128 *)(v1 + 48);
  v4 = *(_OWORD *)(v1 + 64);
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v4;
  return result;
}

BOOL OUTLINED_FUNCTION_877()
{
  unint64_t v0;

  return v0 > 1;
}

uint64_t OUTLINED_FUNCTION_879()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_880()
{
  return sub_1A6335348();
}

uint64_t OUTLINED_FUNCTION_881(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_882(uint64_t a1)
{
  unint64_t v1;

  return sub_1A61A68B8(a1, v1);
}

uint64_t OUTLINED_FUNCTION_883()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_884()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

void OUTLINED_FUNCTION_886()
{
  uint64_t v0;

  sub_1A622CFA4(v0);
}

void OUTLINED_FUNCTION_887()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_1A618D9C4(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_888()
{
  return swift_task_create();
}

uint64_t OUTLINED_FUNCTION_889()
{
  uint64_t v0;

  return sub_1A622D720(v0);
}

uint64_t OUTLINED_FUNCTION_892()
{
  uint64_t v0;
  uint64_t v1;

  sub_1A619ED30(v1);
  return v0;
}

uint64_t OUTLINED_FUNCTION_893()
{
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t OUTLINED_FUNCTION_895()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_896()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_897()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_898()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_899()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_900()
{
  uint64_t v0;

  return sub_1A61A588C(v0);
}

uint64_t OUTLINED_FUNCTION_901()
{
  uint64_t v0;

  return sub_1A622D720(v0);
}

void OUTLINED_FUNCTION_902()
{
  uint64_t v0;

  sub_1A622CFA4(v0);
}

uint64_t OUTLINED_FUNCTION_905()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_906()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1A61E0128(*(_QWORD *)(v1 - 160), v0);
}

void OUTLINED_FUNCTION_907(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 80) = a2;
}

uint64_t OUTLINED_FUNCTION_908()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1A61E0128(v1, v0);
}

uint64_t OUTLINED_FUNCTION_909()
{
  return swift_unknownObjectRelease();
}

id OUTLINED_FUNCTION_910()
{
  uint64_t v0;

  return *(id *)(v0 + 480);
}

uint64_t OUTLINED_FUNCTION_911(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 160) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_912()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_913()
{
  return sub_1A6332C18();
}

void OUTLINED_FUNCTION_914(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_1A618D9C4(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_921()
{
  uint64_t v0;

  return sub_1A61E0128(*(_QWORD *)(v0 - 144), *(_QWORD *)(v0 - 112));
}

void OUTLINED_FUNCTION_922()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = *(_QWORD *)(v0 + 16);
}

void OUTLINED_FUNCTION_923(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = a2;
}

__n128 OUTLINED_FUNCTION_924@<Q0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 *v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  result = *(__n128 *)(a2 + 16 * v2);
  v5 = *v3;
  v6 = v3[2];
  a1[2] = v3[1];
  a1[3] = v6;
  a1[1] = v5;
  return result;
}

uint64_t OUTLINED_FUNCTION_925()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 152) + 8))(*(_QWORD *)(v0 - 112), *(_QWORD *)(v0 - 144));
}

uint64_t OUTLINED_FUNCTION_927()
{
  uint64_t v0;

  return sub_1A61A68B8(*(_QWORD *)(v0 + 2128), *(_QWORD *)(v0 + 2136));
}

void OUTLINED_FUNCTION_928()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = v1;
}

unint64_t OUTLINED_FUNCTION_929(__n128 *a1, __n128 a2)
{
  unint64_t v2;

  a1[1] = a2;
  a1[2].n128_u64[0] = v2;
  return sub_1A62292B0();
}

void OUTLINED_FUNCTION_931(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;

  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v2 & 1;
  *(_QWORD *)(a1 + 16) = v1;
}

void OUTLINED_FUNCTION_932(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v2;
  *(_BYTE *)(a1 + 24) = 1;
}

uint64_t OUTLINED_FUNCTION_933()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_1A61A2970(a10);
}

uint64_t OUTLINED_FUNCTION_935()
{
  return swift_release();
}

void OUTLINED_FUNCTION_937()
{
  sub_1A6203350();
}

uint64_t OUTLINED_FUNCTION_939()
{
  return sub_1A6332A14();
}

void OUTLINED_FUNCTION_940()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 96) = v2;
  *(_QWORD *)(v1 + 104) = v0;
}

uint64_t OUTLINED_FUNCTION_941@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  *v1 = v3;
  v1[1] = a1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_942()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_943(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + *(int *)(result + 20)) = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_944()
{
  return swift_bridgeObjectRelease();
}

__n128 *OUTLINED_FUNCTION_945(__n128 *result, __n128 a2, __n128 a3, __n128 a4)
{
  result[1] = a4;
  result[2] = a3;
  result[3] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_948()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_949()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_950()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_951()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_952()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_953()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 96) = v1;
  *(_QWORD *)(v0 + 104) = v2;
}

uint64_t OUTLINED_FUNCTION_955()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_956(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_1A61FEB94(a1, *(_QWORD *)(v2 - 88), v1);
}

uint64_t OUTLINED_FUNCTION_959(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_960()
{
  return sub_1A6334EC8();
}

uint64_t OUTLINED_FUNCTION_961()
{
  return swift_task_dealloc();
}

id OUTLINED_FUNCTION_962@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v3 = *(void **)(a1 + v1);
  *(_QWORD *)(v2 + 424) = v3;
  return v3;
}

uint64_t OUTLINED_FUNCTION_963()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_964()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_965()
{
  return sub_1A63327E0();
}

uint64_t OUTLINED_FUNCTION_966()
{
  return sub_1A63327E0();
}

void OUTLINED_FUNCTION_967(float a1)
{
  float *v1;
  uint64_t v2;
  _QWORD *v3;

  *v1 = a1;
  *(_QWORD *)(v2 + 96) = *v3;
}

uint64_t OUTLINED_FUNCTION_968()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_969(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = a1;
  return v1 - 120;
}

uint64_t OUTLINED_FUNCTION_970()
{
  uint64_t v0;
  uint64_t v1;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 - 120), v0);
  return v0;
}

uint64_t OUTLINED_FUNCTION_971()
{
  return sub_1A6335774();
}

uint64_t OUTLINED_FUNCTION_972()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_973()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

void OUTLINED_FUNCTION_974(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_1A618D9C4(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_975()
{
  return sub_1A6332B58();
}

uint64_t OUTLINED_FUNCTION_976()
{
  return sub_1A63327E0();
}

uint64_t OUTLINED_FUNCTION_978()
{
  uint64_t v0;

  return sub_1A61A6148(v0);
}

void OUTLINED_FUNCTION_979(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_1A618D9C4(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_980()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_981()
{
  return sub_1A6335774();
}

uint64_t OUTLINED_FUNCTION_982()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_983(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t *a7, uint64_t a8, uint64_t a9, char a10)
{
  return sub_1A621760C(a1, a2, a3, a4, a5, a6, a7, 0, a9, a10);
}

uint64_t OUTLINED_FUNCTION_984(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  return sub_1A61A6A1C(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_986@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

void OUTLINED_FUNCTION_987()
{
  uint64_t v0;

  *(_WORD *)(v0 + 12) = 2081;
}

uint64_t OUTLINED_FUNCTION_988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1A61A2970(a9);
}

uint64_t OUTLINED_FUNCTION_993()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_994()
{
  return swift_release();
}

_QWORD *OUTLINED_FUNCTION_995()
{
  uint64_t v0;

  return sub_1A61F3CD4((_QWORD *)(v0 + 368));
}

void OUTLINED_FUNCTION_996(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_1A61AED54(a1, v3, a3);
}

void OUTLINED_FUNCTION_997(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  sub_1A61AEF94(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_998(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

id OUTLINED_FUNCTION_999()
{
  char *v0;
  uint64_t v1;

  return sub_1A6229B58(v1, v0);
}

uint64_t OUTLINED_FUNCTION_1000()
{
  return sub_1A6335348();
}

uint64_t OUTLINED_FUNCTION_1001()
{
  uint64_t v0;

  return sub_1A61A600C(v0);
}

uint64_t OUTLINED_FUNCTION_1002()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_1003()
{
  uint64_t v0;

  return sub_1A61A2998(v0);
}

uint64_t OUTLINED_FUNCTION_1005()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_1006()
{
  uint64_t v0;

  return sub_1A622E0A0(v0);
}

uint64_t OUTLINED_FUNCTION_1007()
{
  uint64_t v0;

  return sub_1A622E0A0(v0);
}

uint64_t OUTLINED_FUNCTION_1009()
{
  uint64_t v0;

  return sub_1A61A6148(v0);
}

uint64_t OUTLINED_FUNCTION_1010()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_1011()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_1012(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  return sub_1A61A6A1C(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_1014()
{
  return sub_1A6335348();
}

uint64_t OUTLINED_FUNCTION_1015()
{
  return sub_1A6335AA4();
}

uint64_t OUTLINED_FUNCTION_1016(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 176) = v1;
  *(_QWORD *)(v2 - 168) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_1017(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 168) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_1018()
{
  return sub_1A6334ED4();
}

void OUTLINED_FUNCTION_1019(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_1A61AED54(v3, a2, a3);
}

uint64_t OUTLINED_FUNCTION_1020()
{
  uint64_t v0;

  return sub_1A619ED30(v0);
}

uint64_t OUTLINED_FUNCTION_1021()
{
  uint64_t v0;

  return sub_1A61A6148(v0);
}

uint64_t OUTLINED_FUNCTION_1022()
{
  return sub_1A6334E14();
}

uint64_t OUTLINED_FUNCTION_1023()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_1025(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1A61A6A1C(a1, a2, (uint64_t *)(v2 - 88));
}

uint64_t OUTLINED_FUNCTION_1028(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = result;
  return result;
}

void OUTLINED_FUNCTION_1029(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_1A61AEF94(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_1032()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_1033()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_1034()
{
  uint64_t v0;

  return sub_1A619ED30(v0);
}

void OUTLINED_FUNCTION_1035(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;

  sub_1A61FAAF4(a1, a2, a3, a4, a5, a6, a7, a8, v24, a9, v25, a13, a14, a15, a16, a17, a18, a19, a20,
    a21,
    a22,
    a23,
    a24);
}

uint64_t OUTLINED_FUNCTION_1036()
{
  return swift_release();
}

void OUTLINED_FUNCTION_1037()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = *(_QWORD *)(v0 + 2136);
}

uint64_t OUTLINED_FUNCTION_1038()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_1039(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return a19;
}

uint64_t OUTLINED_FUNCTION_1040(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = result;
  return result;
}

void OUTLINED_FUNCTION_1041()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_1042(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 168) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_1043(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t OUTLINED_FUNCTION_1044(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  return a2(0);
}

uint64_t CLLocationCoordinate2D.write(to:)()
{
  uint64_t v0;
  uint64_t result;

  result = sub_1A6334D78();
  if (!v0)
    return sub_1A6334D78();
  return result;
}

double static CLLocationCoordinate2D.read(from:)()
{
  uint64_t v0;
  double v1;
  double v3;

  sub_1A6334D6C();
  if (!v0)
  {
    v1 = v3;
    sub_1A6334D6C();
  }
  return v1;
}

void sub_1A62317F8(uint64_t a1@<X8>)
{
  uint64_t v1;
  double v3;
  uint64_t v4;

  v3 = static CLLocationCoordinate2D.read(from:)();
  if (!v1)
  {
    *(double *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
  }
}

uint64_t sub_1A6231820()
{
  return CLLocationCoordinate2D.write(to:)();
}

void static AvailableDataSetsDescriptor.name.getter()
{
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_53();
}

void static AvailableDataSetsDescriptor.name.setter()
{
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_1_8();
}

uint64_t (*static AvailableDataSetsDescriptor.name.modify())()
{
  OUTLINED_FUNCTION_0_11();
  return j__swift_endAccess;
}

uint64_t sub_1A62318F0()
{
  uint64_t result;

  sub_1A6334CDC();
  sub_1A63353F0();
  result = swift_bridgeObjectRelease();
  qword_1ED219540 = 0x2E312E302E30;
  *(_QWORD *)algn_1ED219548 = 0xE600000000000000;
  return result;
}

void static AvailableDataSetsDescriptor.version.getter()
{
  if (qword_1ED219550 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_53();
}

void static AvailableDataSetsDescriptor.version.setter()
{
  if (qword_1ED219550 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_1_8();
}

uint64_t (*static AvailableDataSetsDescriptor.version.modify())()
{
  if (qword_1ED219550 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  return j_j__swift_endAccess;
}

ValueMetadata *type metadata accessor for AvailableDataSetsDescriptor()
{
  return &type metadata for AvailableDataSetsDescriptor;
}

uint64_t sub_1A6231AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  if (qword_1ED21D318 != -1)
    swift_once();
  v5 = sub_1A6334F04();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED22A3C0);
  v6 = sub_1A6334EEC();
  v7 = sub_1A633569C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_DWORD *)v8 = 141558275;
    v15 = v9;
    sub_1A6335774();
    *(_WORD *)(v8 + 12) = 2081;
    v10 = CLLocationCoordinate2D.id.getter();
    sub_1A61A6A1C(v10, v11, &v15);
    sub_1A6335774();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A6185000, v6, v7, "Fetching monthly weather statistics for location: %{private,mask.hash}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_0_5();
  }

  sub_1A6231CF8(a2);
  sub_1A6231CF8(a3);
  sub_1A6334CDC();
  sub_1A61F9414();
  v13 = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1A6231CF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v4;
  uint64_t v5;

  if (*(_BYTE *)(*(_QWORD *)(v1 + 16) + qword_1ED22A388))
    return sub_1A6335AA4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D210);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1A6338890;
  v5 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v4 + 64) = v5;
  *(_QWORD *)(v4 + 32) = a1;
  return sub_1A6335324();
}

uint64_t sub_1A6231DAC()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MonthlyStatisticsService()
{
  return objc_opt_self();
}

uint64_t sub_1A6231DF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21A248);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_2();
  v5 = v4 - v3;
  type metadata accessor for Metadata();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_2();
  v9 = v8 - v7;
  sub_1A6333B84();
  v10 = sub_1A6333D70();
  result = __swift_getEnumTagSinglePayload(v5, 1, v10);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1A6270910(v9);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v5, v10);
    sub_1A6231F24();
    v13 = v12;
    sub_1A6333B6C();
    v14 = type metadata accessor for DailyWeatherStatistics();
    sub_1A6332BD0();
    result = sub_1A618D95C(v9, a1);
    *(_QWORD *)(a1 + *(int *)(v14 + 20)) = v13;
  }
  return result;
}

void sub_1A6231F24()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  char v22;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8469B0);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_11();
  v2 = sub_1A6333B90();
  if (v2 < 0)
  {
LABEL_15:
    __break(1u);
    return;
  }
  v3 = v2;
  if (v2)
  {
    v4 = 0;
    v5 = MEMORY[0x1E0DEE9D8];
    while (v3 != v4)
    {
      sub_1A6333B78();
      sub_1A62320B8(v0, (uint64_t)&v16);
      sub_1A61DB454(v0, &qword_1EE8469B0);
      if ((v22 & 1) == 0)
      {
        v14 = v16;
        v15 = v19;
        v6 = v20;
        v7 = v21;
        v8 = v17;
        v9 = v18;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_3_14();
          v5 = v12;
        }
        v10 = *(_QWORD *)(v5 + 16);
        if (v10 >= *(_QWORD *)(v5 + 24) >> 1)
        {
          OUTLINED_FUNCTION_3_14();
          v5 = v13;
        }
        *(_QWORD *)(v5 + 16) = v10 + 1;
        v11 = v5 + (v10 << 6);
        *(_OWORD *)(v11 + 32) = v14;
        *(_QWORD *)(v11 + 48) = v8;
        *(_BYTE *)(v11 + 56) = v9 & 1;
        *(_OWORD *)(v11 + 64) = v15;
        *(_QWORD *)(v11 + 80) = v6;
        *(_BYTE *)(v11 + 88) = v7 & 1;
      }
      if (v3 == ++v4)
        return;
    }
    __break(1u);
    goto LABEL_15;
  }
}

uint64_t sub_1A62320B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int EnumTagSinglePayload;
  uint64_t result;
  char v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  char v30;
  _QWORD v31[2];
  unsigned __int8 v32;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8469B8);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8469C0);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_2();
  v9 = v8 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8469B0);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_2();
  v13 = v12 - v11;
  v14 = sub_1A6333284();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_2();
  v18 = v17 - v16;
  sub_1A62322D4(a1, v13);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v13, 1, v14);
  if (EnumTagSinglePayload == 1)
  {
    result = sub_1A61DB454(v13, &qword_1EE8469B0);
    v21 = 0;
    v22 = 0uLL;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_QWORD *)(a2 + 32) = 0;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v18, v13, v14);
    v27 = (__int16)sub_1A6333260();
    sub_1A633326C();
    sub_1A6270ABC(v31, v9);
    sub_1A61DB454(v9, &qword_1EE8469C0);
    v23 = v31[0];
    v26 = v31[1];
    v24 = v32;
    sub_1A6333278();
    sub_1A6270BC0(&v28, v2);
    sub_1A61DB454(v2, &qword_1EE8469B8);
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v18, v14);
    v25 = v28;
    v22 = v29;
    v21 = v30;
    *(_QWORD *)a2 = v27;
    *(_QWORD *)(a2 + 8) = v23;
    *(_QWORD *)(a2 + 16) = v26;
    *(_QWORD *)(a2 + 24) = v24;
    *(_QWORD *)(a2 + 32) = v25;
  }
  *(_OWORD *)(a2 + 40) = v22;
  *(_BYTE *)(a2 + 56) = v21;
  *(_BYTE *)(a2 + 57) = EnumTagSinglePayload == 1;
  return result;
}

uint64_t type metadata accessor for DailyStatisticsModelFactory()
{
  return objc_opt_self();
}

uint64_t sub_1A62322D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8469B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A623231C(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 16) = (*a1 & 1) == 0;
  *(_QWORD *)(v3 + 24) = a3;
  *(_QWORD *)(v3 + 32) = a2;
  swift_retain();
  swift_retain();
  sub_1A623237C();
  OUTLINED_FUNCTION_2_6();
  swift_release();
  return v3;
}

uint64_t sub_1A623237C()
{
  uint64_t result;
  char v1;

  sub_1A6332E28();
  sub_1A6332E1C();
  if (qword_1EE845418 != -1)
    swift_once();
  sub_1A6332E10();
  result = swift_release();
  if (v1 == 1)
  {
    type metadata accessor for Settings.DaemonStore();
    swift_initStaticObject();
    sub_1A61DB4E8();
    sub_1A6332E88();
    return sub_1A6234334();
  }
  return result;
}

uint64_t sub_1A6232450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v40[3];
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;

  v5 = v4;
  v8 = *v5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846378);
  MEMORY[0x1E0C80A78](v9);
  v46 = (uint64_t)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for HourlyWeatherStatistics();
  MEMORY[0x1E0C80A78](v11);
  v44 = (uint64_t)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v43 = (uint64_t)v40 - v14;
  v15 = *(unsigned __int8 *)(a4 + 8);
  v42 = *(_QWORD *)a4;
  v48 = v42;
  v41 = v15;
  v49 = v15;
  OUTLINED_FUNCTION_0_18();
  v20 = sub_1A623287C(v16, v17, v18, v19);
  v22 = v21;
  if (qword_1EE845490 != -1)
    swift_once();
  v23 = sub_1A6334F04();
  __swift_project_value_buffer(v23, (uint64_t)qword_1EE85E410);
  swift_bridgeObjectRetain_n();
  v24 = sub_1A6334EEC();
  v25 = sub_1A633569C();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc();
    v40[2] = v8;
    v27 = v26;
    v28 = swift_slowAlloc();
    v45 = v20;
    v40[0] = v28;
    *(_DWORD *)v27 = 141558275;
    v47 = 1752392040;
    v48 = v28;
    v40[1] = a2;
    sub_1A6335774();
    *(_WORD *)(v27 + 12) = 2081;
    sub_1A6334CDC();
    v47 = sub_1A61A6A1C(v45, v22, &v48);
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v24, v25, "Attempting to read hourly statistics from cache; key=%{private,mask.hash}s",
      (uint8_t *)v27,
      0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_0_5();
  }

  swift_bridgeObjectRelease_n();
  v29 = v46;
  sub_1A6232A40(v20, v22, v46);
  if (__swift_getEnumTagSinglePayload(v29, 1, v11) == 1)
  {
    sub_1A61DB454(v29, &qword_1EE846378);
    v48 = v42;
    v49 = v41;
    OUTLINED_FUNCTION_0_18();
    sub_1A62DFD48(v30, v31, v32);
    v33 = OUTLINED_FUNCTION_3_0();
    *(_QWORD *)(v33 + 16) = v20;
    *(_QWORD *)(v33 + 24) = v22;
    sub_1A6334CDC();
    v34 = (void *)sub_1A6334DD8();
    sub_1A6334E2C();
    swift_release();
    OUTLINED_FUNCTION_2_6();

    v35 = OUTLINED_FUNCTION_3_0();
    *(_QWORD *)(v35 + 16) = v20;
    *(_QWORD *)(v35 + 24) = v22;
    v36 = (void *)sub_1A6334DD8();
    v37 = sub_1A6334E44();
    swift_release();
    OUTLINED_FUNCTION_2_6();

  }
  else
  {
    swift_bridgeObjectRelease();
    v38 = v43;
    sub_1A6234604(v29, v43);
    sub_1A6234648(v38, v44);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8462E8);
    swift_allocObject();
    v37 = sub_1A6334E5C();
    sub_1A623468C(v38);
  }
  return v37;
}

uint64_t sub_1A623287C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5;
  uint64_t v6;

  v5 = *(_BYTE *)(a4 + 8);
  sub_1A6335834();
  v6 = CLLocationCoordinate2D.cacheKey.getter();
  swift_bridgeObjectRelease();
  sub_1A63353F0();
  sub_1A6335AA4();
  sub_1A63353F0();
  swift_bridgeObjectRelease();
  sub_1A63353F0();
  sub_1A6335AA4();
  sub_1A63353F0();
  swift_bridgeObjectRelease();
  sub_1A63353F0();
  sub_1A62B1508(a1);
  sub_1A63353F0();
  swift_bridgeObjectRelease();
  sub_1A63353F0();
  if ((v5 & 1) == 0)
    sub_1A6335AA4();
  sub_1A63353F0();
  swift_bridgeObjectRelease();
  sub_1A63353F0();
  sub_1A62E0758();
  sub_1A63353F0();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1A6232A40@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  const char *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[2];
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;

  v45 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CBA0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A6334F58();
  v43 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE845490 != -1)
    swift_once();
  v11 = sub_1A6334F04();
  v12 = __swift_project_value_buffer(v11, (uint64_t)qword_1EE85E410);
  swift_bridgeObjectRetain_n();
  v13 = sub_1A6334EEC();
  v14 = sub_1A633569C();
  v15 = os_log_type_enabled(v13, v14);
  v16 = &protocol conformance descriptor for MonthlyWeatherStatisticsDescriptor;
  v44 = v10;
  if (v15)
  {
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v42 = v12;
    v19 = v18;
    v52 = v18;
    *(_DWORD *)v17 = 141558275;
    v48[0] = 1752392040;
    sub_1A6335774();
    *(_WORD *)(v17 + 12) = 2081;
    sub_1A6334CDC();
    v48[0] = sub_1A61A6A1C(v45, a2, &v52);
    v16 = (_QWORD *)&protocol conformance descriptor for MonthlyWeatherStatisticsDescriptor;
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v13, v14, "Attempting to retrieve hourly statistics from cache; key=%{private,mask.hash}s",
      (uint8_t *)v17,
      0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v19, -1, -1);
    MEMORY[0x1A85BEFA8](v17, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (*(_BYTE *)(v46 + 16) != 1)
  {
    v23 = sub_1A6334EEC();
    v24 = sub_1A6335690();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      v26 = "Hourly statistics cache is disabled - returning nil";
LABEL_13:
      _os_log_impl(&dword_1A6185000, v23, v24, v26, v25, 2u);
      MEMORY[0x1A85BEFA8](v25, -1, -1);
    }
LABEL_14:

LABEL_15:
    v27 = type metadata accessor for HourlyWeatherStatistics();
    return __swift_storeEnumTagSinglePayload(a3, 1, 1, v27);
  }
  v20 = sub_1A61D8F8C();
  if (!v20)
  {
    v23 = sub_1A6334EEC();
    v24 = sub_1A6335690();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      v26 = "Cannot retrieve cached hourly statistics due to missing store";
      goto LABEL_13;
    }
    goto LABEL_14;
  }
  v46 = v20;
  sub_1A6335000();
  v55 = (char *)MEMORY[0x1E0DEA968];
  v56 = MEMORY[0x1E0DB2EC8];
  v52 = v45;
  v53 = a2;
  sub_1A6334CDC();
  v21 = v44;
  sub_1A6334FB8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v52);
  v22 = sub_1A633506C();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v22);
  sub_1A6334FDC();
  swift_release();
  sub_1A61DB454((uint64_t)v7, &qword_1ED21CBA0);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v21, v8);
  v29 = v48[0];
  if (!v48[0])
  {
    swift_bridgeObjectRetain_n();
    v37 = sub_1A6334EEC();
    v38 = sub_1A633569C();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc();
      v40 = swift_slowAlloc();
      v52 = v40;
      *(_DWORD *)v39 = v16[22];
      v48[0] = 1752392040;
      sub_1A6335774();
      *(_WORD *)(v39 + 12) = 2081;
      sub_1A6334CDC();
      v48[0] = sub_1A61A6A1C(v45, a2, &v52);
      sub_1A6335774();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A6185000, v37, v38, "Could not find hourly statistics in cache; key=%{private,mask.hash}s",
        (uint8_t *)v39,
        0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85BEFA8](v40, -1, -1);
      MEMORY[0x1A85BEFA8](v39, -1, -1);
      swift_release();

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release();
    }
    goto LABEL_15;
  }
  v30 = v49;
  v52 = v48[0];
  v53 = v48[1];
  v54 = v49;
  v55 = v50;
  v43 = v51;
  v44 = v50;
  v56 = v51;
  swift_bridgeObjectRetain_n();
  v31 = sub_1A6334EEC();
  v32 = sub_1A633569C();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = swift_slowAlloc();
    v42 = v30;
    v34 = a2;
    v35 = v33;
    v36 = swift_slowAlloc();
    v48[0] = v36;
    *(_DWORD *)v35 = v16[22];
    v47 = 1752392040;
    sub_1A6335774();
    *(_WORD *)(v35 + 12) = 2081;
    sub_1A6334CDC();
    v47 = sub_1A61A6A1C(v45, v34, v48);
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v31, v32, "Successfully retrieved hourly statistics from cache; key=%{private,mask.hash}s",
      (uint8_t *)v35,
      0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v36, -1, -1);
    MEMORY[0x1A85BEFA8](v35, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1A62EE5EC();
  swift_release();
  return sub_1A61DB490(v29);
}

uint64_t sub_1A623339C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v8 = type metadata accessor for HourlyWeatherStatistics();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE845490 != -1)
    swift_once();
  v11 = sub_1A6334F04();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EE85E410);
  swift_bridgeObjectRetain_n();
  v12 = sub_1A6334EEC();
  v13 = sub_1A633569C();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    v20 = v4;
    v18 = v15;
    v22 = v15;
    *(_DWORD *)v14 = 141558275;
    v21 = 1752392040;
    v19 = v10;
    sub_1A6335774();
    *(_WORD *)(v14 + 12) = 2081;
    sub_1A6334CDC();
    v21 = sub_1A61A6A1C(a3, a4, &v22);
    v10 = v19;
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v12, v13, "Successfully fetched hourly statistics. key=%{private,mask.hash}s", (uint8_t *)v14, 0x16u);
    v16 = v18;
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v16, -1, -1);
    MEMORY[0x1A85BEFA8](v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1A6233610(a1, a3, a4);
  sub_1A6234648(a1, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8462E8);
  swift_allocObject();
  return sub_1A6334E5C();
}

void sub_1A6233610(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30[2];
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;

  v7 = sub_1A6332C24();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for HourlyWeatherStatistics();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v3 + 16) != 1)
  {
    if (qword_1EE845490 != -1)
      swift_once();
    v15 = sub_1A6334F04();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EE85E410);
    v29 = sub_1A6334EEC();
    v16 = sub_1A6335690();
    if (!os_log_type_enabled(v29, v16))
      goto LABEL_13;
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    v18 = "Hourly statistics cache is disabled - not caching";
    goto LABEL_12;
  }
  if (!sub_1A61D8F8C())
  {
    if (qword_1EE845490 != -1)
      swift_once();
    v19 = sub_1A6334F04();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EE85E410);
    v29 = sub_1A6334EEC();
    v16 = sub_1A6335690();
    if (!os_log_type_enabled(v29, v16))
      goto LABEL_13;
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    v18 = "Cannot cache hourly statistics due to missing store";
LABEL_12:
    _os_log_impl(&dword_1A6185000, v29, v16, v18, v17, 2u);
    MEMORY[0x1A85BEFA8](v17, -1, -1);
LABEL_13:

    return;
  }
  sub_1A6234648(a1, (uint64_t)v13);
  v14 = type metadata accessor for Metadata();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1 + *(int *)(v14 + 20), v7);
  sub_1A6334CDC();
  sub_1A62E0BE0();
  v34 = v31;
  v35 = v32;
  v36 = v33;
  sub_1A6334FF4();
  v31 = v34;
  v32 = v35;
  v33 = v36;
  sub_1A6334FD0();
  swift_release();
  if (qword_1EE845490 != -1)
    swift_once();
  v20 = sub_1A6334F04();
  __swift_project_value_buffer(v20, (uint64_t)qword_1EE85E410);
  sub_1A6334CDC();
  sub_1A61DB3F4((uint64_t)&v34);
  sub_1A6334CDC();
  sub_1A61DB3F4((uint64_t)&v34);
  v21 = sub_1A6334EEC();
  v22 = sub_1A633569C();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v30[0] = v24;
    *(_DWORD *)v23 = 141558531;
    *(_QWORD *)&v31 = 1752392040;
    sub_1A6335774();
    *(_WORD *)(v23 + 12) = 2081;
    sub_1A6334CDC();
    *(_QWORD *)&v31 = sub_1A61A6A1C(a2, a3, v30);
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v23 + 22) = 2080;
    v25 = sub_1A61DB3F4((uint64_t)&v34);
    sub_1A62E8144(&v31, v25);
    sub_1A61DB394((uint64_t)&v34);
    v26 = sub_1A62E82A8(v31, BYTE8(v31));
    *(_QWORD *)&v31 = sub_1A61A6A1C(v26, v27, v30);
    sub_1A6335774();
    swift_bridgeObjectRelease();
    sub_1A61DB394((uint64_t)&v34);
    sub_1A61DB394((uint64_t)&v34);
    _os_log_impl(&dword_1A6185000, v21, v22, "Just cached hourly statistics; key=%{private,mask.hash}s. It's valid for another %s",
      (uint8_t *)v23,
      0x20u);
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v24, -1, -1);
    MEMORY[0x1A85BEFA8](v23, -1, -1);

    sub_1A61DB394((uint64_t)&v34);
  }
  else
  {
    sub_1A61DB394((uint64_t)&v34);
    swift_bridgeObjectRelease_n();
    sub_1A61DB394((uint64_t)&v34);
    sub_1A61DB394((uint64_t)&v34);

  }
  sub_1A6233F34();
  swift_release();
}

void sub_1A6233D78(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_1EE845490 != -1)
    swift_once();
  v5 = sub_1A6334F04();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EE85E410);
  swift_bridgeObjectRetain_n();
  v6 = sub_1A6334EEC();
  v7 = sub_1A6335690();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_DWORD *)v8 = 141558275;
    v10 = v9;
    sub_1A6335774();
    *(_WORD *)(v8 + 12) = 2081;
    sub_1A6334CDC();
    sub_1A61A6A1C(a2, a3, &v10);
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v6, v7, "Failed to fetch hourly statistics. key=%{private,mask.hash}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v9, -1, -1);
    MEMORY[0x1A85BEFA8](v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_1A6233F34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v13[5];

  v0 = sub_1A6332C24();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  v4 = sub_1A6334F58();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  if (sub_1A61D8F8C())
  {
    sub_1A6335018();
    v13[3] = v0;
    v13[4] = MEMORY[0x1E0DB2918];
    __swift_allocate_boxed_opaque_existential_1(v13);
    sub_1A6332C0C();
    sub_1A6332BAC();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_1A6334FC4();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    sub_1A6335060();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (qword_1EE845490 != -1)
      swift_once();
    v8 = sub_1A6334F04();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EE85E410);
    v9 = sub_1A6334EEC();
    v10 = sub_1A633569C();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1A6185000, v9, v10, "Purged expired hourly weather statistics", v11, 2u);
      MEMORY[0x1A85BEFA8](v11, -1, -1);
      swift_release();

    }
    else
    {

      swift_release();
    }
  }
}

uint64_t sub_1A6234334()
{
  uint64_t result;

  result = sub_1A61D8F8C();
  if (result)
  {
    sub_1A6335018();
    sub_1A6335054();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for HourlyStatisticsDataManager()
{
  return objc_opt_self();
}

uint64_t sub_1A62345C0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A62345E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A623339C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_1A62345FC(uint64_t a1)
{
  uint64_t v1;

  sub_1A6233D78(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1A6234604(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HourlyWeatherStatistics();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A6234648(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HourlyWeatherStatistics();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A623468C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HourlyWeatherStatistics();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void static AirQualityUnavailableDescriptor.name.getter()
{
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_53();
}

void static AirQualityUnavailableDescriptor.name.setter()
{
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_1_8();
}

uint64_t (*static AirQualityUnavailableDescriptor.name.modify())()
{
  OUTLINED_FUNCTION_0_11();
  return j__swift_endAccess;
}

uint64_t sub_1A6234784()
{
  uint64_t result;

  sub_1A6334CDC();
  sub_1A63353F0();
  result = swift_bridgeObjectRelease();
  qword_1ED21C8D8 = 0x2E312E312E30;
  unk_1ED21C8E0 = 0xE600000000000000;
  return result;
}

void static AirQualityUnavailableDescriptor.version.getter()
{
  if (qword_1ED21C8E8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_53();
}

void static AirQualityUnavailableDescriptor.version.setter()
{
  if (qword_1ED21C8E8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_1_8();
}

uint64_t (*static AirQualityUnavailableDescriptor.version.modify())()
{
  if (qword_1ED21C8E8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  return j_j__swift_endAccess;
}

ValueMetadata *type metadata accessor for AirQualityUnavailableDescriptor()
{
  return &type metadata for AirQualityUnavailableDescriptor;
}

void static DailySummaryDescriptor.name.getter()
{
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_53();
}

void static DailySummaryDescriptor.name.setter()
{
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_1_8();
}

uint64_t (*static DailySummaryDescriptor.name.modify())()
{
  OUTLINED_FUNCTION_0_11();
  return j__swift_endAccess;
}

uint64_t sub_1A6234A00()
{
  uint64_t result;

  sub_1A6334CDC();
  sub_1A63353F0();
  result = swift_bridgeObjectRelease();
  qword_1EE846A98 = 0x2E312E302E30;
  unk_1EE846AA0 = 0xE600000000000000;
  return result;
}

void static DailySummaryDescriptor.version.getter()
{
  if (qword_1EE8453F0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_53();
}

void static DailySummaryDescriptor.version.setter()
{
  if (qword_1EE8453F0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_1_8();
}

uint64_t (*static DailySummaryDescriptor.version.modify())()
{
  if (qword_1EE8453F0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  return j_j__swift_endAccess;
}

ValueMetadata *type metadata accessor for DailySummaryDescriptor()
{
  return &type metadata for DailySummaryDescriptor;
}

uint64_t DailyForecast.metadata.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A61CD678(a1, v1);
}

uint64_t (*DailyForecast.metadata.modify())()
{
  return nullsub_1;
}

void DailyForecast.days.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_1_14() + 20);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*DailyForecast.days.modify())(_QWORD)
{
  OUTLINED_FUNCTION_1_14();
  return nullsub_1;
}

uint64_t sub_1A6234C30(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Metadata();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_1A6234C6C(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_1A6234C7C()
{
  return sub_1A6335BAC();
}

uint64_t sub_1A6234CA0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x617461646174656DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1A6335ABC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1937334628 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1A6335ABC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A6234D7C()
{
  return 2;
}

uint64_t sub_1A6234D84()
{
  sub_1A6335BA0();
  sub_1A6335BAC();
  return sub_1A6335BC4();
}

BOOL sub_1A6234DC8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A6234C6C(*a1, *a2);
}

uint64_t sub_1A6234DD4()
{
  return sub_1A6234D84();
}

uint64_t sub_1A6234DDC()
{
  return sub_1A6234C7C();
}

uint64_t sub_1A6234DE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A6234CA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A6234E08@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A6234D7C();
  *a1 = result;
  return result;
}

uint64_t sub_1A6234E2C()
{
  sub_1A6188B10();
  return sub_1A6335C18();
}

uint64_t sub_1A6234E54()
{
  sub_1A6188B10();
  return sub_1A6335C24();
}

void sub_1A6234E7C()
{
  static DailyForecast.read(from:)();
}

void sub_1A6234E90()
{
  DailyForecast.write(to:)();
}

char *initializeBufferWithCopyOfBuffer for DailyForecast(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A6332C24();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = (int *)type metadata accessor for Metadata();
    v8(&a1[v9[5]], &a2[v9[5]], v7);
    v10 = v9[6];
    v11 = &a1[v10];
    v12 = &a2[v10];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v10], 1, v7))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v8(v11, v12, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v7);
    }
    *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
    *(_QWORD *)&a1[v9[8]] = *(_QWORD *)&a2[v9[8]];
    *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
    v15 = v9[10];
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v18;
    v19 = v9[11];
    v20 = &a1[v19];
    v21 = &a2[v19];
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    v23 = v9[12];
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v26;
    a1[v9[13]] = a2[v9[13]];
    a1[v9[14]] = a2[v9[14]];
    v27 = v9[15];
    v28 = &a1[v27];
    v29 = &a2[v27];
    v30 = *((_QWORD *)v29 + 1);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *((_QWORD *)v28 + 1) = v30;
    *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
  }
  return a1;
}

char *assignWithCopy for DailyForecast(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int EnumTagSinglePayload;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;

  v6 = sub_1A6332C24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = (int *)type metadata accessor for Metadata();
  v8(&a1[v9[5]], &a2[v9[5]], v6);
  v10 = v9[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v10], 1, v6);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v14)
    {
      v8(v11, v12, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
  *(_QWORD *)&a1[v9[8]] = *(_QWORD *)&a2[v9[8]];
  *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
  v16 = v9[10];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v19 = v9[11];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v22 = v9[12];
  v23 = &a1[v22];
  v24 = &a2[v22];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  a1[v9[13]] = a2[v9[13]];
  a1[v9[14]] = a2[v9[14]];
  v25 = v9[15];
  v26 = &a1[v25];
  v27 = &a2[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for DailyForecast(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_1A6332C24();
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for Metadata();
  v7(&a1[v8[5]], &a2[v8[5]], v6);
  v9 = v8[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v9], 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v7(v10, v11, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
  }
  *(_QWORD *)&a1[v8[7]] = *(_QWORD *)&a2[v8[7]];
  *(_QWORD *)&a1[v8[8]] = *(_QWORD *)&a2[v8[8]];
  *(_QWORD *)&a1[v8[9]] = *(_QWORD *)&a2[v8[9]];
  *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
  *(_OWORD *)&a1[v8[11]] = *(_OWORD *)&a2[v8[11]];
  *(_OWORD *)&a1[v8[12]] = *(_OWORD *)&a2[v8[12]];
  a1[v8[13]] = a2[v8[13]];
  a1[v8[14]] = a2[v8[14]];
  *(_OWORD *)&a1[v8[15]] = *(_OWORD *)&a2[v8[15]];
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *assignWithTake for DailyForecast(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int EnumTagSinglePayload;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;

  v6 = sub_1A6332C24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = (int *)type metadata accessor for Metadata();
  v8(&a1[v9[5]], &a2[v9[5]], v6);
  v10 = v9[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v10], 1, v6);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v14)
    {
      v8(v11, v12, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
  *(_QWORD *)&a1[v9[8]] = *(_QWORD *)&a2[v9[8]];
  *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
  v16 = v9[10];
  v17 = &a1[v16];
  v18 = (uint64_t *)&a2[v16];
  v20 = *v18;
  v19 = v18[1];
  *(_QWORD *)v17 = v20;
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v21 = v9[11];
  v22 = &a1[v21];
  v23 = (uint64_t *)&a2[v21];
  v25 = *v23;
  v24 = v23[1];
  *(_QWORD *)v22 = v25;
  *((_QWORD *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  v26 = v9[12];
  v27 = &a1[v26];
  v28 = (uint64_t *)&a2[v26];
  v30 = *v28;
  v29 = v28[1];
  *(_QWORD *)v27 = v30;
  *((_QWORD *)v27 + 1) = v29;
  swift_bridgeObjectRelease();
  a1[v9[13]] = a2[v9[13]];
  a1[v9[14]] = a2[v9[14]];
  v31 = v9[15];
  v32 = &a1[v31];
  v33 = (uint64_t *)&a2[v31];
  v35 = *v33;
  v34 = v33[1];
  *(_QWORD *)v32 = v35;
  *((_QWORD *)v32 + 1) = v34;
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A6235614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = type metadata accessor for Metadata();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

void sub_1A623568C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = type metadata accessor for Metadata();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    OUTLINED_FUNCTION_3_1();
  }
}

unint64_t sub_1A62356FC()
{
  unint64_t result;

  result = qword_1EE846AA8;
  if (!qword_1EE846AA8)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A6339580, &type metadata for DailyForecast.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE846AA8);
  }
  return result;
}

double TemperatureRange.min.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double TemperatureRange.max.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

BOOL static TemperatureRange.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t sub_1A6235774(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 7235949 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A6335ABC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7889261 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1A6335ABC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A6235848(char a1)
{
  if ((a1 & 1) != 0)
    return 7889261;
  else
    return 7235949;
}

uint64_t sub_1A6235868()
{
  char *v0;

  return sub_1A6235848(*v0);
}

uint64_t sub_1A6235870@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A6235774(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A6235894()
{
  sub_1A62359E8();
  return sub_1A6335C18();
}

uint64_t sub_1A62358BC()
{
  sub_1A62359E8();
  return sub_1A6335C24();
}

uint64_t TemperatureRange.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846AB0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A62359E8();
  sub_1A6335BF4();
  v8[15] = 0;
  OUTLINED_FUNCTION_7_1();
  if (!v1)
  {
    v8[14] = 1;
    OUTLINED_FUNCTION_7_1();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1A62359E8()
{
  unint64_t result;

  result = qword_1EE846AB8;
  if (!qword_1EE846AB8)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A63397B4, &type metadata for TemperatureRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE846AB8);
  }
  return result;
}

uint64_t TemperatureRange.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846AC0);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A62359E8();
  sub_1A6335BDC();
  if (!v2)
  {
    OUTLINED_FUNCTION_0_20();
    v7 = v6;
    OUTLINED_FUNCTION_0_20();
    v9 = v8;
    OUTLINED_FUNCTION_2_7();
    *a2 = v7;
    a2[1] = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A6235B44@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return TemperatureRange.init(from:)(a1, a2);
}

uint64_t sub_1A6235B58(_QWORD *a1)
{
  return TemperatureRange.encode(to:)(a1);
}

void sub_1A6235B70()
{
  static TemperatureRange.read(from:)();
}

uint64_t sub_1A6235B84()
{
  return TemperatureRange.write(to:)();
}

ValueMetadata *type metadata accessor for TemperatureRange()
{
  return &type metadata for TemperatureRange;
}

uint64_t storeEnumTagSinglePayload for TemperatureRange.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A6235BF4 + 4 * byte_1A6339605[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A6235C28 + 4 * byte_1A6339600[v4]))();
}

uint64_t sub_1A6235C28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6235C30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6235C38);
  return result;
}

uint64_t sub_1A6235C44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6235C4CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A6235C50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6235C58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TemperatureRange.CodingKeys()
{
  return &type metadata for TemperatureRange.CodingKeys;
}

unint64_t sub_1A6235C78()
{
  unint64_t result;

  result = qword_1EE846AC8;
  if (!qword_1EE846AC8)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633978C, &type metadata for TemperatureRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE846AC8);
  }
  return result;
}

unint64_t sub_1A6235CB8()
{
  unint64_t result;

  result = qword_1EE846AD0;
  if (!qword_1EE846AD0)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A63396FC, &type metadata for TemperatureRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE846AD0);
  }
  return result;
}

unint64_t sub_1A6235CF8()
{
  unint64_t result;

  result = qword_1EE846AD8;
  if (!qword_1EE846AD8)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A6339724, &type metadata for TemperatureRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE846AD8);
  }
  return result;
}

_QWORD *sub_1A6235D34(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  int EnumTagSinglePayload;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  int v70;
  int v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  char *v104;
  uint64_t v105;
  int v106;
  int v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  size_t v113;
  void *v114;
  const void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  _QWORD *v126;
  uint64_t v128;
  uint64_t v129;

  *a1 = *a2;
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  v129 = a3;
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = *(_QWORD *)((char *)a2 + v6 + 8);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v9 = (int *)type metadata accessor for WeatherRequestOptions();
  v10 = v9[5];
  v11 = (char *)v7 + v10;
  v12 = &v8[v10];
  v13 = sub_1A6332DB0();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v13);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v16 = *(_QWORD *)(v13 - 8);
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v13);
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C368);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v11, v12, v13);
LABEL_7:
  *((_BYTE *)v7 + v9[6]) = v8[v9[6]];
  v18 = v9[7];
  v19 = (char *)v7 + v18;
  v20 = &v8[v18];
  v21 = sub_1A63328AC();
  v22 = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v21);
  v23 = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v24 = *(_QWORD *)(v21 - 8);
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v21);
LABEL_12:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD8);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 24))(v19, v20, v21);
LABEL_13:
  v26 = v9[8];
  v27 = (char *)v7 + v26;
  v28 = &v8[v26];
  v29 = __swift_getEnumTagSinglePayload((uint64_t)v7 + v26, 1, v21);
  v30 = __swift_getEnumTagSinglePayload((uint64_t)v28, 1, v21);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v27, v28, v21);
      __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v21);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  v31 = *(_QWORD *)(v21 - 8);
  if (v30)
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v27, v21);
LABEL_18:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD8);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 24))(v27, v28, v21);
LABEL_19:
  v33 = v9[9];
  v34 = (_QWORD *)((char *)v7 + v33);
  v35 = &v8[v33];
  v36 = type metadata accessor for WeatherRequestDailyRelativeRange();
  v37 = __swift_getEnumTagSinglePayload((uint64_t)v34, 1, v36);
  v38 = __swift_getEnumTagSinglePayload((uint64_t)v35, 1, v36);
  if (v37)
  {
    if (!v38)
    {
      *v34 = *(_QWORD *)v35;
      v34[1] = *((_QWORD *)v35 + 1);
      v39 = *(int *)(v36 + 28);
      v40 = (char *)v34 + v39;
      v41 = &v35[v39];
      v42 = sub_1A6332C24();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
      __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v36);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v38)
  {
    sub_1A61AED2C((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for WeatherRequestDailyRelativeRange);
LABEL_24:
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C0D0);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_25;
  }
  *v34 = *(_QWORD *)v35;
  v34[1] = *((_QWORD *)v35 + 1);
  v77 = *(int *)(v36 + 28);
  v78 = (char *)v34 + v77;
  v79 = &v35[v77];
  v80 = sub_1A6332C24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 24))(v78, v79, v80);
LABEL_25:
  v44 = v9[10];
  v45 = (uint64_t)v7 + v44;
  v46 = (uint64_t)&v8[v44];
  v47 = type metadata accessor for WeatherRequestHourlyRelativeRange();
  v48 = __swift_getEnumTagSinglePayload(v45, 1, v47);
  v49 = __swift_getEnumTagSinglePayload(v46, 1, v47);
  if (v48)
  {
    if (!v49)
    {
      *(_QWORD *)v45 = *(_QWORD *)v46;
      *(_QWORD *)(v45 + 8) = *(_QWORD *)(v46 + 8);
      *(_BYTE *)(v45 + 16) = *(_BYTE *)(v46 + 16);
      v50 = *(int *)(v47 + 28);
      v51 = v45 + v50;
      v52 = v46 + v50;
      v53 = sub_1A6332C24();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
      __swift_storeEnumTagSinglePayload(v45, 0, 1, v47);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v49)
  {
    sub_1A61AED2C(v45, (uint64_t (*)(_QWORD))type metadata accessor for WeatherRequestHourlyRelativeRange);
LABEL_30:
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C0F0);
    memcpy((void *)v45, (const void *)v46, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    goto LABEL_31;
  }
  *(_QWORD *)v45 = *(_QWORD *)v46;
  *(_QWORD *)(v45 + 8) = *(_QWORD *)(v46 + 8);
  *(_BYTE *)(v45 + 16) = *(_BYTE *)(v46 + 16);
  v81 = *(int *)(v47 + 28);
  v82 = v45 + v81;
  v83 = v46 + v81;
  v84 = sub_1A6332C24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 24))(v82, v83, v84);
LABEL_31:
  v55 = v9[11];
  v56 = (uint64_t)v7 + v55;
  v57 = (uint64_t)&v8[v55];
  v58 = type metadata accessor for WeatherRequestMarineHourlyRelativeRange();
  v59 = __swift_getEnumTagSinglePayload(v56, 1, v58);
  v60 = __swift_getEnumTagSinglePayload(v57, 1, v58);
  if (v59)
  {
    if (!v60)
    {
      *(_QWORD *)v56 = *(_QWORD *)v57;
      *(_QWORD *)(v56 + 8) = *(_QWORD *)(v57 + 8);
      *(_BYTE *)(v56 + 16) = *(_BYTE *)(v57 + 16);
      v61 = *(int *)(v58 + 28);
      v62 = v56 + v61;
      v63 = v57 + v61;
      v64 = sub_1A6332C24();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v62, v63, v64);
      __swift_storeEnumTagSinglePayload(v56, 0, 1, v58);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v60)
  {
    sub_1A61AED2C(v56, (uint64_t (*)(_QWORD))type metadata accessor for WeatherRequestMarineHourlyRelativeRange);
LABEL_36:
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C100);
    memcpy((void *)v56, (const void *)v57, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    goto LABEL_37;
  }
  *(_QWORD *)v56 = *(_QWORD *)v57;
  *(_QWORD *)(v56 + 8) = *(_QWORD *)(v57 + 8);
  *(_BYTE *)(v56 + 16) = *(_BYTE *)(v57 + 16);
  v85 = *(int *)(v58 + 28);
  v86 = v56 + v85;
  v87 = v57 + v85;
  v88 = sub_1A6332C24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 24))(v86, v87, v88);
LABEL_37:
  v66 = v9[12];
  v67 = (char *)v7 + v66;
  v68 = &v8[v66];
  v69 = type metadata accessor for WeatherInterpolationOptions();
  v70 = __swift_getEnumTagSinglePayload((uint64_t)v67, 1, v69);
  v71 = __swift_getEnumTagSinglePayload((uint64_t)v68, 1, v69);
  if (v70)
  {
    if (!v71)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v67, v68, v21);
        v72 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED219608) + 48);
        v73 = &v67[v72];
        v74 = &v68[v72];
        v75 = v74[8];
        *(_QWORD *)v73 = *(_QWORD *)v74;
        v73[8] = v75;
      }
      else
      {
        v93 = sub_1A6332C24();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v67, v68, v93);
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v69);
      goto LABEL_57;
    }
LABEL_43:
    v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C510);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    goto LABEL_57;
  }
  if (v71)
  {
    sub_1A61AED2C((uint64_t)v67, (uint64_t (*)(_QWORD))type metadata accessor for WeatherInterpolationOptions);
    goto LABEL_43;
  }
  if (a1 != a2)
  {
    sub_1A61AED2C((uint64_t)v67, (uint64_t (*)(_QWORD))type metadata accessor for WeatherInterpolationOptions);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v67, v68, v21);
      v89 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED219608) + 48);
      v90 = &v67[v89];
      v91 = &v68[v89];
      v92 = v91[8];
      *(_QWORD *)v90 = *(_QWORD *)v91;
      v90[8] = v92;
    }
    else
    {
      v94 = sub_1A6332C24();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(v67, v68, v94);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_57:
  v95 = v9[13];
  v96 = (_QWORD *)((char *)v7 + v95);
  v97 = &v8[v95];
  *v96 = *(_QWORD *)v97;
  v96[1] = *((_QWORD *)v97 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v98 = v9[14];
  v99 = (char *)v7 + v98;
  v100 = &v8[v98];
  v101 = *(_QWORD *)v100;
  *((_WORD *)v99 + 4) = *((_WORD *)v100 + 4);
  *(_QWORD *)v99 = v101;
  *(_QWORD *)((char *)v7 + v9[15]) = *(_QWORD *)&v8[v9[15]];
  *(_QWORD *)((char *)v7 + v9[16]) = *(_QWORD *)&v8[v9[16]];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v102 = v9[17];
  v103 = (_QWORD *)((char *)v7 + v102);
  v104 = &v8[v102];
  v105 = type metadata accessor for WDSNetworkActivity();
  v106 = __swift_getEnumTagSinglePayload((uint64_t)v103, 1, v105);
  v107 = __swift_getEnumTagSinglePayload((uint64_t)v104, 1, v105);
  if (v106)
  {
    if (!v107)
    {
      *v103 = *(_QWORD *)v104;
      v103[1] = *((_QWORD *)v104 + 1);
      v108 = *(int *)(v105 + 24);
      v109 = (char *)v103 + v108;
      v110 = &v104[v108];
      v111 = sub_1A6332C54();
      if (__swift_getEnumTagSinglePayload((uint64_t)v110, 1, v111))
      {
        v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C350);
        memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 16))(v109, v110, v111);
        __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v111);
      }
      v122 = (uint64_t)v103;
      v123 = v105;
      goto LABEL_70;
    }
    goto LABEL_63;
  }
  if (v107)
  {
    sub_1A61AED2C((uint64_t)v103, (uint64_t (*)(_QWORD))type metadata accessor for WDSNetworkActivity);
LABEL_63:
    v113 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C748) - 8) + 64);
    v114 = v103;
    v115 = v104;
    goto LABEL_64;
  }
  *v103 = *(_QWORD *)v104;
  v103[1] = *((_QWORD *)v104 + 1);
  v116 = *(int *)(v105 + 24);
  v117 = (uint64_t)v103 + v116;
  v118 = (uint64_t)&v104[v116];
  v119 = sub_1A6332C54();
  v120 = __swift_getEnumTagSinglePayload(v117, 1, v119);
  v121 = __swift_getEnumTagSinglePayload(v118, 1, v119);
  if (v120)
  {
    if (!v121)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 16))(v117, v118, v119);
      v122 = v117;
      v123 = v119;
LABEL_70:
      __swift_storeEnumTagSinglePayload(v122, 0, 1, v123);
      goto LABEL_71;
    }
  }
  else
  {
    v128 = *(_QWORD *)(v119 - 8);
    if (!v121)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v128 + 24))(v117, v118, v119);
      goto LABEL_71;
    }
    (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v117, v119);
  }
  v113 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C350) - 8) + 64);
  v114 = (void *)v117;
  v115 = (const void *)v118;
LABEL_64:
  memcpy(v114, v115, v113);
LABEL_71:
  *((_BYTE *)v7 + v9[18]) = v8[v9[18]];
  *((_BYTE *)v7 + v9[19]) = v8[v9[19]];
  *(_QWORD *)((char *)v7 + v9[20]) = *(_QWORD *)&v8[v9[20]];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v124 = *(int *)(v129 + 28);
  v125 = (_QWORD *)((char *)a1 + v124);
  v126 = (_QWORD *)((char *)a2 + v124);
  *v125 = *v126;
  v125[1] = v126[1];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A6236804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _OWORD *v63;
  _OWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  *(_OWORD *)(a1 + v5) = *(_OWORD *)(a2 + v5);
  v8 = (int *)type metadata accessor for WeatherRequestOptions();
  v9 = v8[5];
  v10 = (void *)(v6 + v9);
  v11 = (const void *)(v7 + v9);
  v12 = sub_1A6332DB0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C368);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
  }
  *(_BYTE *)(v6 + v8[6]) = *(_BYTE *)(v7 + v8[6]);
  v14 = v8[7];
  v15 = (void *)(v6 + v14);
  v16 = (const void *)(v7 + v14);
  v17 = sub_1A63328AC();
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
  }
  v19 = v8[8];
  v20 = (void *)(v6 + v19);
  v21 = (const void *)(v7 + v19);
  if (__swift_getEnumTagSinglePayload(v7 + v19, 1, v17))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD8);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v20, v21, v17);
    __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v17);
  }
  v23 = v8[9];
  v24 = (_OWORD *)(v6 + v23);
  v25 = (_OWORD *)(v7 + v23);
  v26 = type metadata accessor for WeatherRequestDailyRelativeRange();
  if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C0D0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    *v24 = *v25;
    v28 = *(int *)(v26 + 28);
    v29 = (char *)v24 + v28;
    v30 = (char *)v25 + v28;
    v31 = sub_1A6332C24();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
    __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v26);
  }
  v32 = v8[10];
  v33 = (_BYTE *)(v6 + v32);
  v34 = (_BYTE *)(v7 + v32);
  v35 = type metadata accessor for WeatherRequestHourlyRelativeRange();
  if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35))
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C0F0);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v33 = *(_OWORD *)v34;
    v33[16] = v34[16];
    v37 = *(int *)(v35 + 28);
    v38 = &v33[v37];
    v39 = &v34[v37];
    v40 = sub_1A6332C24();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
    __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v35);
  }
  v41 = v8[11];
  v42 = (_BYTE *)(v6 + v41);
  v43 = (_BYTE *)(v7 + v41);
  v44 = type metadata accessor for WeatherRequestMarineHourlyRelativeRange();
  if (__swift_getEnumTagSinglePayload((uint64_t)v43, 1, v44))
  {
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C100);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v42 = *(_OWORD *)v43;
    v42[16] = v43[16];
    v46 = *(int *)(v44 + 28);
    v47 = &v42[v46];
    v48 = &v43[v46];
    v49 = sub_1A6332C24();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
    __swift_storeEnumTagSinglePayload((uint64_t)v42, 0, 1, v44);
  }
  v50 = v8[12];
  v51 = (char *)(v6 + v50);
  v52 = (char *)(v7 + v50);
  v53 = type metadata accessor for WeatherInterpolationOptions();
  if (__swift_getEnumTagSinglePayload((uint64_t)v52, 1, v53))
  {
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C510);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v51, v52, v17);
      v55 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED219608) + 48);
      v56 = &v51[v55];
      v57 = &v52[v55];
      *(_QWORD *)v56 = *(_QWORD *)v57;
      v56[8] = v57[8];
    }
    else
    {
      v58 = sub_1A6332C24();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v51, v52, v58);
    }
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v51, 0, 1, v53);
  }
  *(_OWORD *)(v6 + v8[13]) = *(_OWORD *)(v7 + v8[13]);
  v59 = v8[14];
  v60 = v6 + v59;
  v61 = v7 + v59;
  *(_WORD *)(v60 + 8) = *(_WORD *)(v61 + 8);
  *(_QWORD *)v60 = *(_QWORD *)v61;
  *(_QWORD *)(v6 + v8[15]) = *(_QWORD *)(v7 + v8[15]);
  *(_QWORD *)(v6 + v8[16]) = *(_QWORD *)(v7 + v8[16]);
  v62 = v8[17];
  v63 = (_OWORD *)(v6 + v62);
  v64 = (_OWORD *)(v7 + v62);
  v65 = type metadata accessor for WDSNetworkActivity();
  if (__swift_getEnumTagSinglePayload((uint64_t)v64, 1, v65))
  {
    v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C748);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
  }
  else
  {
    *v63 = *v64;
    v67 = *(int *)(v65 + 24);
    v68 = (char *)v63 + v67;
    v69 = (char *)v64 + v67;
    v70 = sub_1A6332C54();
    if (__swift_getEnumTagSinglePayload((uint64_t)v69, 1, v70))
    {
      v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C350);
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v68, v69, v70);
      __swift_storeEnumTagSinglePayload((uint64_t)v68, 0, 1, v70);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v63, 0, 1, v65);
  }
  *(_BYTE *)(v6 + v8[18]) = *(_BYTE *)(v7 + v8[18]);
  *(_BYTE *)(v6 + v8[19]) = *(_BYTE *)(v7 + v8[19]);
  *(_QWORD *)(v6 + v8[20]) = *(_QWORD *)(v7 + v8[20]);
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1A6236E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  const void *v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  const void *v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  const void *v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  _OWORD *v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  _BYTE *v47;
  uint64_t v48;
  int v49;
  int v50;
  uint64_t v51;
  _BYTE *v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  _BYTE *v58;
  uint64_t v59;
  int v60;
  int v61;
  uint64_t v62;
  _BYTE *v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  int v71;
  int v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  _BYTE *v86;
  _BYTE *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  _OWORD *v103;
  _OWORD *v104;
  uint64_t v105;
  int v106;
  int v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  size_t v113;
  void *v114;
  const void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v130;
  uint64_t v131;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v131 = a3;
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)(a1 + v6);
  v8 = a2 + v6;
  v9 = *(_QWORD *)(a2 + v6 + 8);
  *v7 = *(_QWORD *)(a2 + v6);
  v7[1] = v9;
  swift_bridgeObjectRelease();
  v10 = (int *)type metadata accessor for WeatherRequestOptions();
  v11 = v10[5];
  v12 = (char *)v7 + v11;
  v13 = (const void *)(v8 + v11);
  v14 = sub_1A6332DB0();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  v16 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if (EnumTagSinglePayload)
  {
    if (!v16)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v17 = *(_QWORD *)(v14 - 8);
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v14);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C368);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, const void *, uint64_t))(v17 + 40))(v12, v13, v14);
LABEL_7:
  *((_BYTE *)v7 + v10[6]) = *(_BYTE *)(v8 + v10[6]);
  v19 = v10[7];
  v20 = (char *)v7 + v19;
  v21 = (const void *)(v8 + v19);
  v22 = sub_1A63328AC();
  v23 = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v22);
  v24 = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v25 = *(_QWORD *)(v22 - 8);
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v22);
LABEL_12:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD8);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, const void *, uint64_t))(v25 + 40))(v20, v21, v22);
LABEL_13:
  v27 = v10[8];
  v28 = (char *)v7 + v27;
  v29 = (const void *)(v8 + v27);
  v30 = __swift_getEnumTagSinglePayload((uint64_t)v7 + v27, 1, v22);
  v31 = __swift_getEnumTagSinglePayload((uint64_t)v29, 1, v22);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v28, v29, v22);
      __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v22);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  v32 = *(_QWORD *)(v22 - 8);
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v28, v22);
LABEL_18:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD8);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, const void *, uint64_t))(v32 + 40))(v28, v29, v22);
LABEL_19:
  v34 = v10[9];
  v35 = (_OWORD *)((char *)v7 + v34);
  v36 = (_OWORD *)(v8 + v34);
  v37 = type metadata accessor for WeatherRequestDailyRelativeRange();
  v38 = __swift_getEnumTagSinglePayload((uint64_t)v35, 1, v37);
  v39 = __swift_getEnumTagSinglePayload((uint64_t)v36, 1, v37);
  if (v38)
  {
    if (!v39)
    {
      *v35 = *v36;
      v40 = *(int *)(v37 + 28);
      v41 = (char *)v35 + v40;
      v42 = (char *)v36 + v40;
      v43 = sub_1A6332C24();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
      __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v37);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v39)
  {
    sub_1A61AED2C((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for WeatherRequestDailyRelativeRange);
LABEL_24:
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C0D0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_25;
  }
  *v35 = *v36;
  v77 = *(int *)(v37 + 28);
  v78 = (char *)v35 + v77;
  v79 = (char *)v36 + v77;
  v80 = sub_1A6332C24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 40))(v78, v79, v80);
LABEL_25:
  v45 = v10[10];
  v46 = (char *)v7 + v45;
  v47 = (_BYTE *)(v8 + v45);
  v48 = type metadata accessor for WeatherRequestHourlyRelativeRange();
  v49 = __swift_getEnumTagSinglePayload((uint64_t)v46, 1, v48);
  v50 = __swift_getEnumTagSinglePayload((uint64_t)v47, 1, v48);
  if (v49)
  {
    if (!v50)
    {
      *(_OWORD *)v46 = *(_OWORD *)v47;
      v46[16] = v47[16];
      v51 = *(int *)(v48 + 28);
      v52 = &v46[v51];
      v53 = &v47[v51];
      v54 = sub_1A6332C24();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
      __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v48);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v50)
  {
    sub_1A61AED2C((uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for WeatherRequestHourlyRelativeRange);
LABEL_30:
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C0F0);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    goto LABEL_31;
  }
  *(_OWORD *)v46 = *(_OWORD *)v47;
  v46[16] = v47[16];
  v81 = *(int *)(v48 + 28);
  v82 = &v46[v81];
  v83 = &v47[v81];
  v84 = sub_1A6332C24();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v84 - 8) + 40))(v82, v83, v84);
LABEL_31:
  v56 = v10[11];
  v57 = (char *)v7 + v56;
  v58 = (_BYTE *)(v8 + v56);
  v59 = type metadata accessor for WeatherRequestMarineHourlyRelativeRange();
  v60 = __swift_getEnumTagSinglePayload((uint64_t)v57, 1, v59);
  v61 = __swift_getEnumTagSinglePayload((uint64_t)v58, 1, v59);
  if (v60)
  {
    if (!v61)
    {
      *(_OWORD *)v57 = *(_OWORD *)v58;
      v57[16] = v58[16];
      v62 = *(int *)(v59 + 28);
      v63 = &v57[v62];
      v64 = &v58[v62];
      v65 = sub_1A6332C24();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v63, v64, v65);
      __swift_storeEnumTagSinglePayload((uint64_t)v57, 0, 1, v59);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v61)
  {
    sub_1A61AED2C((uint64_t)v57, (uint64_t (*)(_QWORD))type metadata accessor for WeatherRequestMarineHourlyRelativeRange);
LABEL_36:
    v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C100);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    goto LABEL_37;
  }
  *(_OWORD *)v57 = *(_OWORD *)v58;
  v57[16] = v58[16];
  v85 = *(int *)(v59 + 28);
  v86 = &v57[v85];
  v87 = &v58[v85];
  v88 = sub_1A6332C24();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v88 - 8) + 40))(v86, v87, v88);
LABEL_37:
  v67 = v10[12];
  v68 = (char *)v7 + v67;
  v69 = (char *)(v8 + v67);
  v70 = type metadata accessor for WeatherInterpolationOptions();
  v71 = __swift_getEnumTagSinglePayload((uint64_t)v68, 1, v70);
  v72 = __swift_getEnumTagSinglePayload((uint64_t)v69, 1, v70);
  if (v71)
  {
    if (!v72)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v68, v69, v22);
        v73 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED219608) + 48);
        v74 = &v68[v73];
        v75 = &v69[v73];
        *(_QWORD *)v74 = *(_QWORD *)v75;
        v74[8] = v75[8];
      }
      else
      {
        v92 = sub_1A6332C24();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v68, v69, v92);
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v68, 0, 1, v70);
      goto LABEL_57;
    }
LABEL_43:
    v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C510);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    goto LABEL_57;
  }
  if (v72)
  {
    sub_1A61AED2C((uint64_t)v68, (uint64_t (*)(_QWORD))type metadata accessor for WeatherInterpolationOptions);
    goto LABEL_43;
  }
  if (a1 != a2)
  {
    sub_1A61AED2C((uint64_t)v68, (uint64_t (*)(_QWORD))type metadata accessor for WeatherInterpolationOptions);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v68, v69, v22);
      v89 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED219608) + 48);
      v90 = &v68[v89];
      v91 = &v69[v89];
      *(_QWORD *)v90 = *(_QWORD *)v91;
      v90[8] = v91[8];
    }
    else
    {
      v93 = sub_1A6332C24();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v68, v69, v93);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_57:
  v94 = v10[13];
  v95 = (_QWORD *)((char *)v7 + v94);
  v96 = (uint64_t *)(v8 + v94);
  v98 = *v96;
  v97 = v96[1];
  *v95 = v98;
  v95[1] = v97;
  swift_bridgeObjectRelease();
  v99 = v10[14];
  v100 = (char *)v7 + v99;
  v101 = v8 + v99;
  *(_QWORD *)v100 = *(_QWORD *)v101;
  *((_WORD *)v100 + 4) = *(_WORD *)(v101 + 8);
  *(_QWORD *)((char *)v7 + v10[15]) = *(_QWORD *)(v8 + v10[15]);
  *(_QWORD *)((char *)v7 + v10[16]) = *(_QWORD *)(v8 + v10[16]);
  swift_bridgeObjectRelease();
  v102 = v10[17];
  v103 = (_OWORD *)((char *)v7 + v102);
  v104 = (_OWORD *)(v8 + v102);
  v105 = type metadata accessor for WDSNetworkActivity();
  v106 = __swift_getEnumTagSinglePayload((uint64_t)v103, 1, v105);
  v107 = __swift_getEnumTagSinglePayload((uint64_t)v104, 1, v105);
  if (v106)
  {
    if (!v107)
    {
      *v103 = *v104;
      v108 = *(int *)(v105 + 24);
      v109 = (char *)v103 + v108;
      v110 = (char *)v104 + v108;
      v111 = sub_1A6332C54();
      if (__swift_getEnumTagSinglePayload((uint64_t)v110, 1, v111))
      {
        v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C350);
        memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 32))(v109, v110, v111);
        __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v111);
      }
      v122 = (uint64_t)v103;
      v123 = v105;
      goto LABEL_70;
    }
    goto LABEL_63;
  }
  if (v107)
  {
    sub_1A61AED2C((uint64_t)v103, (uint64_t (*)(_QWORD))type metadata accessor for WDSNetworkActivity);
LABEL_63:
    v113 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C748) - 8) + 64);
    v114 = v103;
    v115 = v104;
    goto LABEL_64;
  }
  *v103 = *v104;
  v116 = *(int *)(v105 + 24);
  v117 = (uint64_t)v103 + v116;
  v118 = (uint64_t)v104 + v116;
  v119 = sub_1A6332C54();
  v120 = __swift_getEnumTagSinglePayload(v117, 1, v119);
  v121 = __swift_getEnumTagSinglePayload(v118, 1, v119);
  if (v120)
  {
    if (!v121)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 32))(v117, v118, v119);
      v122 = v117;
      v123 = v119;
LABEL_70:
      __swift_storeEnumTagSinglePayload(v122, 0, 1, v123);
      goto LABEL_71;
    }
  }
  else
  {
    v130 = *(_QWORD *)(v119 - 8);
    if (!v121)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v130 + 40))(v117, v118, v119);
      goto LABEL_71;
    }
    (*(void (**)(uint64_t, uint64_t))(v130 + 8))(v117, v119);
  }
  v113 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C350) - 8) + 64);
  v114 = (void *)v117;
  v115 = (const void *)v118;
LABEL_64:
  memcpy(v114, v115, v113);
LABEL_71:
  *((_BYTE *)v7 + v10[18]) = *(_BYTE *)(v8 + v10[18]);
  *((_BYTE *)v7 + v10[19]) = *(_BYTE *)(v8 + v10[19]);
  *(_QWORD *)((char *)v7 + v10[20]) = *(_QWORD *)(v8 + v10[20]);
  swift_bridgeObjectRelease();
  v124 = *(int *)(v131 + 28);
  v125 = (_QWORD *)(a1 + v124);
  v126 = (uint64_t *)(a2 + v124);
  v128 = *v126;
  v127 = v126[1];
  *v125 = v128;
  v125[1] = v127;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A623785C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A6237868(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_92();
    return __swift_getEnumTagSinglePayload((uint64_t)a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1A62378D8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_1A62378E4(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v7 = OUTLINED_FUNCTION_92();
    return (_QWORD *)__swift_storeEnumTagSinglePayload((uint64_t)v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_1A6237980(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  OUTLINED_FUNCTION_25(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_29_1();
}

void OUTLINED_FUNCTION_37_2()
{
  void *v0;

}

_QWORD *initializeBufferWithCopyOfBuffer for InterpolationInputProducts(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  int *HourForecast;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  void (*v85)(char *, char *, uint64_t);
  _QWORD *v86;
  char *__dsta;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v14 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_1A6332C24();
    v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
    v7(a1, a2, v6);
    v8 = (int *)type metadata accessor for Metadata();
    v7(&a1[v8[5]], &a2[v8[5]], v6);
    v9 = v8[6];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v85 = v7;
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v9], 1, v6))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v7(v10, v11, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
    }
    *(_QWORD *)&a1[v8[7]] = *(_QWORD *)&a2[v8[7]];
    *(_QWORD *)&a1[v8[8]] = *(_QWORD *)&a2[v8[8]];
    *(_QWORD *)&a1[v8[9]] = *(_QWORD *)&a2[v8[9]];
    v15 = v8[10];
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v18;
    v19 = v8[11];
    v20 = &a1[v19];
    v21 = &a2[v19];
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    v23 = v8[12];
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v26;
    a1[v8[13]] = a2[v8[13]];
    a1[v8[14]] = a2[v8[14]];
    v27 = v8[15];
    v28 = &a1[v27];
    v29 = &a2[v27];
    v30 = *((_QWORD *)v29 + 1);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *((_QWORD *)v28 + 1) = v30;
    v31 = type metadata accessor for HourlyForecast();
    *(_QWORD *)&a1[*(int *)(v31 + 20)] = *(_QWORD *)&a2[*(int *)(v31 + 20)];
    v32 = *(int *)(a3 + 20);
    v86 = a1;
    v33 = &a1[v32];
    v34 = &a2[v32];
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    v85(v33, v34, v6);
    v85(&v33[v8[5]], &v34[v8[5]], v6);
    v35 = v8[6];
    v36 = &v33[v35];
    v37 = &v34[v35];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v34[v35], 1, v6))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      v85(v36, v37, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v6);
    }
    *(_QWORD *)&v33[v8[7]] = *(_QWORD *)&v34[v8[7]];
    *(_QWORD *)&v33[v8[8]] = *(_QWORD *)&v34[v8[8]];
    *(_QWORD *)&v33[v8[9]] = *(_QWORD *)&v34[v8[9]];
    v39 = v8[10];
    v40 = &v33[v39];
    v41 = &v34[v39];
    v42 = *((_QWORD *)v41 + 1);
    *(_QWORD *)v40 = *(_QWORD *)v41;
    *((_QWORD *)v40 + 1) = v42;
    v43 = v8[11];
    v44 = &v33[v43];
    v45 = &v34[v43];
    v46 = *((_QWORD *)v45 + 1);
    *(_QWORD *)v44 = *(_QWORD *)v45;
    *((_QWORD *)v44 + 1) = v46;
    v47 = v8[12];
    v48 = &v33[v47];
    v49 = &v34[v47];
    v50 = *((_QWORD *)v49 + 1);
    *(_QWORD *)v48 = *(_QWORD *)v49;
    *((_QWORD *)v48 + 1) = v50;
    v33[v8[13]] = v34[v8[13]];
    v33[v8[14]] = v34[v8[14]];
    v51 = v8[15];
    v52 = &v33[v51];
    v53 = &v34[v51];
    v54 = *((_QWORD *)v53 + 1);
    *(_QWORD *)v52 = *(_QWORD *)v53;
    *((_QWORD *)v52 + 1) = v54;
    v55 = type metadata accessor for DailyForecast();
    *(_QWORD *)&v33[*(int *)(v55 + 20)] = *(_QWORD *)&v34[*(int *)(v55 + 20)];
    v56 = *(int *)(a3 + 24);
    v57 = (char *)v86 + v56;
    v58 = &a2[v56];
    HourForecast = (int *)type metadata accessor for NextHourForecast();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    if (__swift_getEnumTagSinglePayload((uint64_t)v58, 1, (uint64_t)HourForecast))
    {
      v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D0A0);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      return v86;
    }
    else
    {
      v85(v57, v58, v6);
      v85(&v57[v8[5]], &v58[v8[5]], v6);
      v61 = v8[6];
      v62 = &v57[v61];
      v63 = &v58[v61];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v58[v61], 1, v6))
      {
        v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        v85(v62, v63, v6);
        __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v6);
      }
      *(_QWORD *)&v57[v8[7]] = *(_QWORD *)&v58[v8[7]];
      *(_QWORD *)&v57[v8[8]] = *(_QWORD *)&v58[v8[8]];
      *(_QWORD *)&v57[v8[9]] = *(_QWORD *)&v58[v8[9]];
      v65 = v8[10];
      v66 = &v57[v65];
      v67 = &v58[v65];
      v68 = *((_QWORD *)v67 + 1);
      *(_QWORD *)v66 = *(_QWORD *)v67;
      *((_QWORD *)v66 + 1) = v68;
      v69 = v8[11];
      v70 = &v57[v69];
      v71 = &v58[v69];
      v72 = *((_QWORD *)v71 + 1);
      *(_QWORD *)v70 = *(_QWORD *)v71;
      *((_QWORD *)v70 + 1) = v72;
      v73 = v8[12];
      v74 = &v57[v73];
      v75 = &v58[v73];
      v76 = *((_QWORD *)v75 + 1);
      *(_QWORD *)v74 = *(_QWORD *)v75;
      *((_QWORD *)v74 + 1) = v76;
      v57[v8[13]] = v58[v8[13]];
      v57[v8[14]] = v58[v8[14]];
      v77 = v8[15];
      v78 = &v57[v77];
      v79 = &v58[v77];
      v80 = *((_QWORD *)v79 + 1);
      *(_QWORD *)v78 = *(_QWORD *)v79;
      *((_QWORD *)v78 + 1) = v80;
      *(_QWORD *)&v57[HourForecast[5]] = *(_QWORD *)&v58[HourForecast[5]];
      *(_QWORD *)&v57[HourForecast[6]] = *(_QWORD *)&v58[HourForecast[6]];
      v81 = HourForecast[7];
      __dsta = &v57[v81];
      v82 = &v58[v81];
      sub_1A6334CDC();
      sub_1A6334CDC();
      sub_1A6334CDC();
      sub_1A6334CDC();
      sub_1A6334CDC();
      sub_1A6334CDC();
      if (__swift_getEnumTagSinglePayload((uint64_t)v82, 1, v6))
      {
        v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
        memcpy(__dsta, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
      }
      else
      {
        v85(__dsta, v82, v6);
        __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v6);
      }
      v14 = v86;
      *(_QWORD *)&v57[HourForecast[8]] = *(_QWORD *)&v58[HourForecast[8]];
      sub_1A6334CDC();
      __swift_storeEnumTagSinglePayload((uint64_t)v57, 0, 1, (uint64_t)HourForecast);
    }
  }
  return v14;
}

uint64_t destroy for InterpolationInputProducts(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t HourForecast;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;

  v4 = sub_1A6332C24();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = type metadata accessor for Metadata();
  v5(a1 + *(int *)(v6 + 20), v4);
  v7 = a1 + *(int *)(v6 + 24);
  if (!__swift_getEnumTagSinglePayload(v7, 1, v4))
    v5(v7, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for HourlyForecast();
  swift_bridgeObjectRelease();
  v8 = a1 + *(int *)(a2 + 20);
  v5(v8, v4);
  v5(v8 + *(int *)(v6 + 20), v4);
  v9 = v8 + *(int *)(v6 + 24);
  if (!__swift_getEnumTagSinglePayload(v9, 1, v4))
    v5(v9, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for DailyForecast();
  swift_bridgeObjectRelease();
  v10 = a1 + *(int *)(a2 + 24);
  HourForecast = type metadata accessor for NextHourForecast();
  result = __swift_getEnumTagSinglePayload(v10, 1, HourForecast);
  if (!(_DWORD)result)
  {
    v5(v10, v4);
    v5(v10 + *(int *)(v6 + 20), v4);
    v13 = v10 + *(int *)(v6 + 24);
    if (!__swift_getEnumTagSinglePayload(v13, 1, v4))
      v5(v13, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = v10 + *(int *)(HourForecast + 28);
    if (!__swift_getEnumTagSinglePayload(v14, 1, v4))
      v5(v14, v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for InterpolationInputProducts(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  int *HourForecast;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  void (*v82)(uint64_t, uint64_t, uint64_t);
  char *__dsta;
  uint64_t v85;

  v5 = sub_1A6332C24();
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
  v6(a1, a2, v5);
  v7 = (int *)type metadata accessor for Metadata();
  v6(a1 + v7[5], a2 + v7[5], v5);
  v8 = v7[6];
  v85 = a1;
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v82 = v6;
  if (__swift_getEnumTagSinglePayload(a2 + v8, 1, v5))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v6((uint64_t)v9, (uint64_t)v10, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v5);
  }
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  *(_QWORD *)(a1 + v7[8]) = *(_QWORD *)(a2 + v7[8]);
  *(_QWORD *)(a1 + v7[9]) = *(_QWORD *)(a2 + v7[9]);
  v12 = v7[10];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = v7[11];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = v7[12];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  *(_BYTE *)(a1 + v7[13]) = *(_BYTE *)(a2 + v7[13]);
  *(_BYTE *)(a1 + v7[14]) = *(_BYTE *)(a2 + v7[14]);
  v24 = v7[15];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = type metadata accessor for HourlyForecast();
  *(_QWORD *)(a1 + *(int *)(v28 + 20)) = *(_QWORD *)(a2 + *(int *)(v28 + 20));
  v29 = *(int *)(a3 + 20);
  v30 = a1 + v29;
  v31 = a2 + v29;
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A6334CDC();
  v82(v30, v31, v5);
  v82(v30 + v7[5], v31 + v7[5], v5);
  v32 = v7[6];
  v33 = (void *)(v30 + v32);
  v34 = (const void *)(v31 + v32);
  if (__swift_getEnumTagSinglePayload(v31 + v32, 1, v5))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    v82((uint64_t)v33, (uint64_t)v34, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v5);
  }
  *(_QWORD *)(v30 + v7[7]) = *(_QWORD *)(v31 + v7[7]);
  *(_QWORD *)(v30 + v7[8]) = *(_QWORD *)(v31 + v7[8]);
  *(_QWORD *)(v30 + v7[9]) = *(_QWORD *)(v31 + v7[9]);
  v36 = v7[10];
  v37 = (_QWORD *)(v30 + v36);
  v38 = (_QWORD *)(v31 + v36);
  v39 = v38[1];
  *v37 = *v38;
  v37[1] = v39;
  v40 = v7[11];
  v41 = (_QWORD *)(v30 + v40);
  v42 = (_QWORD *)(v31 + v40);
  v43 = v42[1];
  *v41 = *v42;
  v41[1] = v43;
  v44 = v7[12];
  v45 = (_QWORD *)(v30 + v44);
  v46 = (_QWORD *)(v31 + v44);
  v47 = v46[1];
  *v45 = *v46;
  v45[1] = v47;
  *(_BYTE *)(v30 + v7[13]) = *(_BYTE *)(v31 + v7[13]);
  *(_BYTE *)(v30 + v7[14]) = *(_BYTE *)(v31 + v7[14]);
  v48 = v7[15];
  v49 = (_QWORD *)(v30 + v48);
  v50 = (_QWORD *)(v31 + v48);
  v51 = v50[1];
  *v49 = *v50;
  v49[1] = v51;
  v52 = type metadata accessor for DailyForecast();
  *(_QWORD *)(v30 + *(int *)(v52 + 20)) = *(_QWORD *)(v31 + *(int *)(v52 + 20));
  v53 = *(int *)(a3 + 24);
  v54 = (char *)(v85 + v53);
  v55 = (char *)(a2 + v53);
  HourForecast = (int *)type metadata accessor for NextHourForecast();
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A6334CDC();
  if (__swift_getEnumTagSinglePayload((uint64_t)v55, 1, (uint64_t)HourForecast))
  {
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D0A0);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    v82((uint64_t)v54, (uint64_t)v55, v5);
    v82((uint64_t)&v54[v7[5]], (uint64_t)&v55[v7[5]], v5);
    v58 = v7[6];
    v59 = &v54[v58];
    v60 = &v55[v58];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v55[v58], 1, v5))
    {
      v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      v82((uint64_t)v59, (uint64_t)v60, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)v59, 0, 1, v5);
    }
    *(_QWORD *)&v54[v7[7]] = *(_QWORD *)&v55[v7[7]];
    *(_QWORD *)&v54[v7[8]] = *(_QWORD *)&v55[v7[8]];
    *(_QWORD *)&v54[v7[9]] = *(_QWORD *)&v55[v7[9]];
    v62 = v7[10];
    v63 = &v54[v62];
    v64 = &v55[v62];
    v65 = *((_QWORD *)v64 + 1);
    *(_QWORD *)v63 = *(_QWORD *)v64;
    *((_QWORD *)v63 + 1) = v65;
    v66 = v7[11];
    v67 = &v54[v66];
    v68 = &v55[v66];
    v69 = *((_QWORD *)v68 + 1);
    *(_QWORD *)v67 = *(_QWORD *)v68;
    *((_QWORD *)v67 + 1) = v69;
    v70 = v7[12];
    v71 = &v54[v70];
    v72 = &v55[v70];
    v73 = *((_QWORD *)v72 + 1);
    *(_QWORD *)v71 = *(_QWORD *)v72;
    *((_QWORD *)v71 + 1) = v73;
    v54[v7[13]] = v55[v7[13]];
    v54[v7[14]] = v55[v7[14]];
    v74 = v7[15];
    v75 = &v54[v74];
    v76 = &v55[v74];
    v77 = *((_QWORD *)v76 + 1);
    *(_QWORD *)v75 = *(_QWORD *)v76;
    *((_QWORD *)v75 + 1) = v77;
    *(_QWORD *)&v54[HourForecast[5]] = *(_QWORD *)&v55[HourForecast[5]];
    *(_QWORD *)&v54[HourForecast[6]] = *(_QWORD *)&v55[HourForecast[6]];
    v78 = HourForecast[7];
    __dsta = &v54[v78];
    v79 = &v55[v78];
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    if (__swift_getEnumTagSinglePayload((uint64_t)v79, 1, v5))
    {
      v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(__dsta, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    }
    else
    {
      v82((uint64_t)__dsta, (uint64_t)v79, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v5);
    }
    *(_QWORD *)&v54[HourForecast[8]] = *(_QWORD *)&v55[HourForecast[8]];
    sub_1A6334CDC();
    __swift_storeEnumTagSinglePayload((uint64_t)v54, 0, 1, (uint64_t)HourForecast);
  }
  return v85;
}

uint64_t assignWithCopy for InterpolationInputProducts(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  _BYTE *v55;
  int *HourForecast;
  int v57;
  int v58;
  void (*v59)(char *, char *, uint64_t);
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  int v103;
  int v104;
  uint64_t v105;
  void (*__dst)(void *, const void *, uint64_t);
  char *__dsta;

  v5 = sub_1A6332C24();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v8 = (int *)type metadata accessor for Metadata();
  v7(a1 + v8[5], a2 + v8[5], v5);
  v9 = v8[6];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1 + v9, 1, v5);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v5);
  if (EnumTagSinglePayload)
  {
    if (v13)
    {
      v14 = v6;
LABEL_6:
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      goto LABEL_9;
    }
    v14 = v6;
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v10, v11, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v5);
  }
  else
  {
    if (v13)
    {
      v14 = v6;
      (*(void (**)(void *, uint64_t))(v6 + 8))(v10, v5);
      goto LABEL_6;
    }
    v14 = v6;
    v7((uint64_t)v10, (uint64_t)v11, v5);
  }
LABEL_9:
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  v16 = v8[10];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v19 = v8[11];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v22 = v8[12];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v8[13]) = *(_BYTE *)(a2 + v8[13]);
  *(_BYTE *)(a1 + v8[14]) = *(_BYTE *)(a2 + v8[14]);
  v25 = v8[15];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  *v26 = *v27;
  v26[1] = v27[1];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v28 = type metadata accessor for HourlyForecast();
  *(_QWORD *)(a1 + *(int *)(v28 + 20)) = *(_QWORD *)(a2 + *(int *)(v28 + 20));
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v29 = *(int *)(a3 + 20);
  v30 = a1 + v29;
  v31 = a2 + v29;
  v7(a1 + v29, a2 + v29, v5);
  __dst = (void (*)(void *, const void *, uint64_t))v7;
  v7(v30 + v8[5], v31 + v8[5], v5);
  v32 = v8[6];
  v33 = (void *)(v30 + v32);
  v34 = (const void *)(v31 + v32);
  v35 = __swift_getEnumTagSinglePayload(v30 + v32, 1, v5);
  v36 = __swift_getEnumTagSinglePayload((uint64_t)v34, 1, v5);
  if (v35)
  {
    if (!v36)
    {
      v38 = v14;
      (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v33, v34, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v5);
      goto LABEL_17;
    }
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    if (v36)
    {
      v38 = v14;
      (*(void (**)(void *, uint64_t))(v14 + 8))(v33, v5);
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      goto LABEL_17;
    }
    __dst(v33, v34, v5);
  }
  v38 = v14;
LABEL_17:
  *(_QWORD *)(v30 + v8[7]) = *(_QWORD *)(v31 + v8[7]);
  *(_QWORD *)(v30 + v8[8]) = *(_QWORD *)(v31 + v8[8]);
  *(_QWORD *)(v30 + v8[9]) = *(_QWORD *)(v31 + v8[9]);
  v40 = v8[10];
  v41 = (_QWORD *)(v30 + v40);
  v42 = (_QWORD *)(v31 + v40);
  *v41 = *v42;
  v41[1] = v42[1];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v43 = v8[11];
  v44 = (_QWORD *)(v30 + v43);
  v45 = (_QWORD *)(v31 + v43);
  *v44 = *v45;
  v44[1] = v45[1];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v46 = v8[12];
  v47 = (_QWORD *)(v30 + v46);
  v48 = (_QWORD *)(v31 + v46);
  *v47 = *v48;
  v47[1] = v48[1];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v30 + v8[13]) = *(_BYTE *)(v31 + v8[13]);
  *(_BYTE *)(v30 + v8[14]) = *(_BYTE *)(v31 + v8[14]);
  v49 = v8[15];
  v50 = (_QWORD *)(v30 + v49);
  v51 = (_QWORD *)(v31 + v49);
  *v50 = *v51;
  v50[1] = v51[1];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v52 = type metadata accessor for DailyForecast();
  *(_QWORD *)(v30 + *(int *)(v52 + 20)) = *(_QWORD *)(v31 + *(int *)(v52 + 20));
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v53 = *(int *)(a3 + 24);
  v54 = (_BYTE *)(a1 + v53);
  v55 = (_BYTE *)(a2 + v53);
  HourForecast = (int *)type metadata accessor for NextHourForecast();
  v57 = __swift_getEnumTagSinglePayload((uint64_t)v54, 1, (uint64_t)HourForecast);
  v58 = __swift_getEnumTagSinglePayload((uint64_t)v55, 1, (uint64_t)HourForecast);
  if (!v57)
  {
    if (v58)
    {
      sub_1A62391C8((uint64_t)v54);
      goto LABEL_23;
    }
    __dst(v54, v55, v5);
    __dst(&v54[v8[5]], &v55[v8[5]], v5);
    v65 = v8[6];
    v66 = &v54[v65];
    v67 = &v55[v65];
    v68 = __swift_getEnumTagSinglePayload((uint64_t)&v54[v65], 1, v5);
    v69 = __swift_getEnumTagSinglePayload((uint64_t)v67, 1, v5);
    if (v68)
    {
      if (!v69)
      {
        v86 = v38;
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v66, v67, v5);
        __swift_storeEnumTagSinglePayload((uint64_t)v66, 0, 1, v5);
        goto LABEL_37;
      }
      v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
    else
    {
      if (v69)
      {
        v86 = v38;
        (*(void (**)(char *, uint64_t))(v38 + 8))(v66, v5);
        v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
        memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
        goto LABEL_37;
      }
      __dst(v66, v67, v5);
    }
    v86 = v38;
LABEL_37:
    *(_QWORD *)&v54[v8[7]] = *(_QWORD *)&v55[v8[7]];
    *(_QWORD *)&v54[v8[8]] = *(_QWORD *)&v55[v8[8]];
    *(_QWORD *)&v54[v8[9]] = *(_QWORD *)&v55[v8[9]];
    v88 = v8[10];
    v89 = &v54[v88];
    v90 = &v55[v88];
    *v89 = *v90;
    v89[1] = v90[1];
    sub_1A6334CDC();
    swift_bridgeObjectRelease();
    v91 = v8[11];
    v92 = &v54[v91];
    v93 = &v55[v91];
    *v92 = *v93;
    v92[1] = v93[1];
    sub_1A6334CDC();
    swift_bridgeObjectRelease();
    v94 = v8[12];
    v95 = &v54[v94];
    v96 = &v55[v94];
    *v95 = *v96;
    v95[1] = v96[1];
    sub_1A6334CDC();
    swift_bridgeObjectRelease();
    v54[v8[13]] = v55[v8[13]];
    v54[v8[14]] = v55[v8[14]];
    v97 = v8[15];
    v98 = &v54[v97];
    v99 = &v55[v97];
    *v98 = *v99;
    v98[1] = v99[1];
    sub_1A6334CDC();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v54[HourForecast[5]] = *(_QWORD *)&v55[HourForecast[5]];
    sub_1A6334CDC();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v54[HourForecast[6]] = *(_QWORD *)&v55[HourForecast[6]];
    sub_1A6334CDC();
    swift_bridgeObjectRelease();
    v100 = HourForecast[7];
    v101 = &v54[v100];
    v102 = &v55[v100];
    v103 = __swift_getEnumTagSinglePayload((uint64_t)&v54[v100], 1, v5);
    v104 = __swift_getEnumTagSinglePayload((uint64_t)v102, 1, v5);
    if (v103)
    {
      if (!v104)
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v101, v102, v5);
        __swift_storeEnumTagSinglePayload((uint64_t)v101, 0, 1, v5);
LABEL_43:
        *(_QWORD *)&v54[HourForecast[8]] = *(_QWORD *)&v55[HourForecast[8]];
        sub_1A6334CDC();
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      if (!v104)
      {
        __dst(v101, v102, v5);
        goto LABEL_43;
      }
      (*(void (**)(char *, uint64_t))(v86 + 8))(v101, v5);
    }
    v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
    goto LABEL_43;
  }
  if (v58)
  {
LABEL_23:
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D0A0);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    return a1;
  }
  v59 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
  v59(v54, v55, v5);
  v59(&v54[v8[5]], &v55[v8[5]], v5);
  v60 = v8[6];
  v61 = &v54[v60];
  v62 = &v55[v60];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v55[v60], 1, v5))
  {
    v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
  }
  else
  {
    v59(v61, v62, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)v61, 0, 1, v5);
  }
  *(_QWORD *)&v54[v8[7]] = *(_QWORD *)&v55[v8[7]];
  *(_QWORD *)&v54[v8[8]] = *(_QWORD *)&v55[v8[8]];
  *(_QWORD *)&v54[v8[9]] = *(_QWORD *)&v55[v8[9]];
  v71 = v8[10];
  v72 = &v54[v71];
  v73 = &v55[v71];
  *v72 = *v73;
  v72[1] = v73[1];
  v74 = v8[11];
  v75 = &v54[v74];
  v76 = &v55[v74];
  *v75 = *v76;
  v75[1] = v76[1];
  v77 = v8[12];
  v78 = &v54[v77];
  v79 = &v55[v77];
  *v78 = *v79;
  v78[1] = v79[1];
  v54[v8[13]] = v55[v8[13]];
  v54[v8[14]] = v55[v8[14]];
  v80 = v8[15];
  v81 = &v54[v80];
  v82 = &v55[v80];
  *v81 = *v82;
  v81[1] = v82[1];
  *(_QWORD *)&v54[HourForecast[5]] = *(_QWORD *)&v55[HourForecast[5]];
  *(_QWORD *)&v54[HourForecast[6]] = *(_QWORD *)&v55[HourForecast[6]];
  v83 = HourForecast[7];
  __dsta = &v54[v83];
  v84 = &v55[v83];
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A6334CDC();
  if (__swift_getEnumTagSinglePayload((uint64_t)v84, 1, v5))
  {
    v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(__dsta, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
  }
  else
  {
    v59(__dsta, v84, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v5);
  }
  *(_QWORD *)&v54[HourForecast[8]] = *(_QWORD *)&v55[HourForecast[8]];
  sub_1A6334CDC();
  __swift_storeEnumTagSinglePayload((uint64_t)v54, 0, 1, (uint64_t)HourForecast);
  return a1;
}

uint64_t sub_1A62391C8(uint64_t a1)
{
  uint64_t HourForecast;

  HourForecast = type metadata accessor for NextHourForecast();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(HourForecast - 8) + 8))(a1, HourForecast);
  return a1;
}

uint64_t initializeWithTake for InterpolationInputProducts(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  int *HourForecast;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;

  v6 = sub_1A6332C24();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for Metadata();
  v7(a1 + v8[5], a2 + v8[5], v6);
  v9 = v8[6];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  if (__swift_getEnumTagSinglePayload(a2 + v9, 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v10, (uint64_t)v11, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
  }
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  *(_OWORD *)(a1 + v8[10]) = *(_OWORD *)(a2 + v8[10]);
  *(_OWORD *)(a1 + v8[11]) = *(_OWORD *)(a2 + v8[11]);
  *(_OWORD *)(a1 + v8[12]) = *(_OWORD *)(a2 + v8[12]);
  *(_BYTE *)(a1 + v8[13]) = *(_BYTE *)(a2 + v8[13]);
  *(_BYTE *)(a1 + v8[14]) = *(_BYTE *)(a2 + v8[14]);
  *(_OWORD *)(a1 + v8[15]) = *(_OWORD *)(a2 + v8[15]);
  v13 = type metadata accessor for HourlyForecast();
  *(_QWORD *)(a1 + *(int *)(v13 + 20)) = *(_QWORD *)(a2 + *(int *)(v13 + 20));
  v14 = *(int *)(a3 + 20);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v7(a1 + v14, a2 + v14, v6);
  v7(v15 + v8[5], v16 + v8[5], v6);
  v17 = v8[6];
  v18 = (void *)(v15 + v17);
  v19 = (const void *)(v16 + v17);
  if (__swift_getEnumTagSinglePayload(v16 + v17, 1, v6))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v18, (uint64_t)v19, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v6);
  }
  *(_QWORD *)(v15 + v8[7]) = *(_QWORD *)(v16 + v8[7]);
  *(_QWORD *)(v15 + v8[8]) = *(_QWORD *)(v16 + v8[8]);
  *(_QWORD *)(v15 + v8[9]) = *(_QWORD *)(v16 + v8[9]);
  *(_OWORD *)(v15 + v8[10]) = *(_OWORD *)(v16 + v8[10]);
  *(_OWORD *)(v15 + v8[11]) = *(_OWORD *)(v16 + v8[11]);
  *(_OWORD *)(v15 + v8[12]) = *(_OWORD *)(v16 + v8[12]);
  *(_BYTE *)(v15 + v8[13]) = *(_BYTE *)(v16 + v8[13]);
  *(_BYTE *)(v15 + v8[14]) = *(_BYTE *)(v16 + v8[14]);
  *(_OWORD *)(v15 + v8[15]) = *(_OWORD *)(v16 + v8[15]);
  v21 = type metadata accessor for DailyForecast();
  *(_QWORD *)(v15 + *(int *)(v21 + 20)) = *(_QWORD *)(v16 + *(int *)(v21 + 20));
  v22 = *(int *)(a3 + 24);
  v23 = (char *)(a1 + v22);
  v24 = (char *)(a2 + v22);
  HourForecast = (int *)type metadata accessor for NextHourForecast();
  if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, (uint64_t)HourForecast))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D0A0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v23, (uint64_t)v24, v6);
    v7((uint64_t)&v23[v8[5]], (uint64_t)&v24[v8[5]], v6);
    v27 = v8[6];
    v28 = &v23[v27];
    v29 = &v24[v27];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v24[v27], 1, v6))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v7((uint64_t)v28, (uint64_t)v29, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v6);
    }
    *(_QWORD *)&v23[v8[7]] = *(_QWORD *)&v24[v8[7]];
    *(_QWORD *)&v23[v8[8]] = *(_QWORD *)&v24[v8[8]];
    *(_QWORD *)&v23[v8[9]] = *(_QWORD *)&v24[v8[9]];
    *(_OWORD *)&v23[v8[10]] = *(_OWORD *)&v24[v8[10]];
    *(_OWORD *)&v23[v8[11]] = *(_OWORD *)&v24[v8[11]];
    *(_OWORD *)&v23[v8[12]] = *(_OWORD *)&v24[v8[12]];
    v23[v8[13]] = v24[v8[13]];
    v23[v8[14]] = v24[v8[14]];
    *(_OWORD *)&v23[v8[15]] = *(_OWORD *)&v24[v8[15]];
    *(_QWORD *)&v23[HourForecast[5]] = *(_QWORD *)&v24[HourForecast[5]];
    *(_QWORD *)&v23[HourForecast[6]] = *(_QWORD *)&v24[HourForecast[6]];
    v31 = HourForecast[7];
    v32 = &v23[v31];
    v33 = &v24[v31];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v24[v31], 1, v6))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      v7((uint64_t)v32, (uint64_t)v33, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v6);
    }
    *(_QWORD *)&v23[HourForecast[8]] = *(_QWORD *)&v24[HourForecast[8]];
    __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, (uint64_t)HourForecast);
  }
  return a1;
}

uint64_t assignWithTake for InterpolationInputProducts(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  const void *v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  _BYTE *v71;
  int *HourForecast;
  int v73;
  int v74;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  int v84;
  int v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  int v114;
  int v115;
  uint64_t v116;
  void (*v118)(void *, const void *, uint64_t);

  v5 = sub_1A6332C24();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v8 = (int *)type metadata accessor for Metadata();
  v7(a1 + v8[5], a2 + v8[5], v5);
  v9 = v8[6];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1 + v9, 1, v5);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v5);
  if (EnumTagSinglePayload)
  {
    if (v13)
    {
      v14 = v6;
LABEL_6:
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      goto LABEL_9;
    }
    v14 = v6;
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v10, v11, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v5);
  }
  else
  {
    if (v13)
    {
      v14 = v6;
      (*(void (**)(void *, uint64_t))(v6 + 8))(v10, v5);
      goto LABEL_6;
    }
    v14 = v6;
    v7((uint64_t)v10, (uint64_t)v11, v5);
  }
LABEL_9:
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  v16 = v8[10];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = v8[11];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  v26 = v8[12];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (uint64_t *)(a2 + v26);
  v30 = *v28;
  v29 = v28[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v8[13]) = *(_BYTE *)(a2 + v8[13]);
  *(_BYTE *)(a1 + v8[14]) = *(_BYTE *)(a2 + v8[14]);
  v31 = v8[15];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (uint64_t *)(a2 + v31);
  v35 = *v33;
  v34 = v33[1];
  *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  v36 = type metadata accessor for HourlyForecast();
  *(_QWORD *)(a1 + *(int *)(v36 + 20)) = *(_QWORD *)(a2 + *(int *)(v36 + 20));
  swift_bridgeObjectRelease();
  v37 = *(int *)(a3 + 20);
  v38 = a1 + v37;
  v39 = a2 + v37;
  v7(a1 + v37, a2 + v37, v5);
  v118 = (void (*)(void *, const void *, uint64_t))v7;
  v7(v38 + v8[5], v39 + v8[5], v5);
  v40 = v8[6];
  v41 = (void *)(v38 + v40);
  v42 = (const void *)(v39 + v40);
  v43 = __swift_getEnumTagSinglePayload(v38 + v40, 1, v5);
  v44 = __swift_getEnumTagSinglePayload((uint64_t)v42, 1, v5);
  if (v43)
  {
    if (!v44)
    {
      v46 = v14;
      (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v41, v42, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, v5);
      goto LABEL_17;
    }
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    if (v44)
    {
      v46 = v14;
      (*(void (**)(void *, uint64_t))(v14 + 8))(v41, v5);
      v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      goto LABEL_17;
    }
    v118(v41, v42, v5);
  }
  v46 = v14;
LABEL_17:
  *(_QWORD *)(v38 + v8[7]) = *(_QWORD *)(v39 + v8[7]);
  *(_QWORD *)(v38 + v8[8]) = *(_QWORD *)(v39 + v8[8]);
  *(_QWORD *)(v38 + v8[9]) = *(_QWORD *)(v39 + v8[9]);
  v48 = v8[10];
  v49 = (_QWORD *)(v38 + v48);
  v50 = (uint64_t *)(v39 + v48);
  v52 = *v50;
  v51 = v50[1];
  *v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease();
  v53 = v8[11];
  v54 = (_QWORD *)(v38 + v53);
  v55 = (uint64_t *)(v39 + v53);
  v57 = *v55;
  v56 = v55[1];
  *v54 = v57;
  v54[1] = v56;
  swift_bridgeObjectRelease();
  v58 = v8[12];
  v59 = (_QWORD *)(v38 + v58);
  v60 = (uint64_t *)(v39 + v58);
  v62 = *v60;
  v61 = v60[1];
  *v59 = v62;
  v59[1] = v61;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v38 + v8[13]) = *(_BYTE *)(v39 + v8[13]);
  *(_BYTE *)(v38 + v8[14]) = *(_BYTE *)(v39 + v8[14]);
  v63 = v8[15];
  v64 = (_QWORD *)(v38 + v63);
  v65 = (uint64_t *)(v39 + v63);
  v67 = *v65;
  v66 = v65[1];
  *v64 = v67;
  v64[1] = v66;
  swift_bridgeObjectRelease();
  v68 = type metadata accessor for DailyForecast();
  *(_QWORD *)(v38 + *(int *)(v68 + 20)) = *(_QWORD *)(v39 + *(int *)(v68 + 20));
  swift_bridgeObjectRelease();
  v69 = *(int *)(a3 + 24);
  v70 = (_BYTE *)(a1 + v69);
  v71 = (_BYTE *)(a2 + v69);
  HourForecast = (int *)type metadata accessor for NextHourForecast();
  v73 = __swift_getEnumTagSinglePayload((uint64_t)v70, 1, (uint64_t)HourForecast);
  v74 = __swift_getEnumTagSinglePayload((uint64_t)v71, 1, (uint64_t)HourForecast);
  if (!v73)
  {
    if (v74)
    {
      sub_1A62391C8((uint64_t)v70);
      goto LABEL_23;
    }
    v118(v70, v71, v5);
    v118(&v70[v8[5]], &v71[v8[5]], v5);
    v81 = v8[6];
    v82 = &v70[v81];
    v83 = &v71[v81];
    v84 = __swift_getEnumTagSinglePayload((uint64_t)&v70[v81], 1, v5);
    v85 = __swift_getEnumTagSinglePayload((uint64_t)v83, 1, v5);
    if (v84)
    {
      if (!v85)
      {
        (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v82, v83, v5);
        __swift_storeEnumTagSinglePayload((uint64_t)v82, 0, 1, v5);
        goto LABEL_35;
      }
    }
    else
    {
      if (!v85)
      {
        v118(v82, v83, v5);
LABEL_35:
        *(_QWORD *)&v70[v8[7]] = *(_QWORD *)&v71[v8[7]];
        *(_QWORD *)&v70[v8[8]] = *(_QWORD *)&v71[v8[8]];
        *(_QWORD *)&v70[v8[9]] = *(_QWORD *)&v71[v8[9]];
        v91 = v8[10];
        v92 = &v70[v91];
        v93 = (uint64_t *)&v71[v91];
        v95 = *v93;
        v94 = v93[1];
        *v92 = v95;
        v92[1] = v94;
        swift_bridgeObjectRelease();
        v96 = v8[11];
        v97 = &v70[v96];
        v98 = (uint64_t *)&v71[v96];
        v100 = *v98;
        v99 = v98[1];
        *v97 = v100;
        v97[1] = v99;
        swift_bridgeObjectRelease();
        v101 = v8[12];
        v102 = &v70[v101];
        v103 = (uint64_t *)&v71[v101];
        v105 = *v103;
        v104 = v103[1];
        *v102 = v105;
        v102[1] = v104;
        swift_bridgeObjectRelease();
        v70[v8[13]] = v71[v8[13]];
        v70[v8[14]] = v71[v8[14]];
        v106 = v8[15];
        v107 = &v70[v106];
        v108 = (uint64_t *)&v71[v106];
        v110 = *v108;
        v109 = v108[1];
        *v107 = v110;
        v107[1] = v109;
        swift_bridgeObjectRelease();
        *(_QWORD *)&v70[HourForecast[5]] = *(_QWORD *)&v71[HourForecast[5]];
        swift_bridgeObjectRelease();
        *(_QWORD *)&v70[HourForecast[6]] = *(_QWORD *)&v71[HourForecast[6]];
        swift_bridgeObjectRelease();
        v111 = HourForecast[7];
        v112 = &v70[v111];
        v113 = &v71[v111];
        v114 = __swift_getEnumTagSinglePayload((uint64_t)&v70[v111], 1, v5);
        v115 = __swift_getEnumTagSinglePayload((uint64_t)v113, 1, v5);
        if (v114)
        {
          if (!v115)
          {
            (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v112, v113, v5);
            __swift_storeEnumTagSinglePayload((uint64_t)v112, 0, 1, v5);
LABEL_41:
            *(_QWORD *)&v70[HourForecast[8]] = *(_QWORD *)&v71[HourForecast[8]];
            swift_bridgeObjectRelease();
            return a1;
          }
        }
        else
        {
          if (!v115)
          {
            v118(v112, v113, v5);
            goto LABEL_41;
          }
          (*(void (**)(char *, uint64_t))(v46 + 8))(v112, v5);
        }
        v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
        memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
        goto LABEL_41;
      }
      (*(void (**)(char *, uint64_t))(v46 + 8))(v82, v5);
    }
    v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
    goto LABEL_35;
  }
  if (v74)
  {
LABEL_23:
    v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D0A0);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    return a1;
  }
  v75 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
  v75(v70, v71, v5);
  v75(&v70[v8[5]], &v71[v8[5]], v5);
  v76 = v8[6];
  v77 = &v70[v76];
  v78 = &v71[v76];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v71[v76], 1, v5))
  {
    v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
  }
  else
  {
    v75(v77, v78, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)v77, 0, 1, v5);
  }
  *(_QWORD *)&v70[v8[7]] = *(_QWORD *)&v71[v8[7]];
  *(_QWORD *)&v70[v8[8]] = *(_QWORD *)&v71[v8[8]];
  *(_QWORD *)&v70[v8[9]] = *(_QWORD *)&v71[v8[9]];
  *(_OWORD *)&v70[v8[10]] = *(_OWORD *)&v71[v8[10]];
  *(_OWORD *)&v70[v8[11]] = *(_OWORD *)&v71[v8[11]];
  *(_OWORD *)&v70[v8[12]] = *(_OWORD *)&v71[v8[12]];
  v70[v8[13]] = v71[v8[13]];
  v70[v8[14]] = v71[v8[14]];
  *(_OWORD *)&v70[v8[15]] = *(_OWORD *)&v71[v8[15]];
  *(_QWORD *)&v70[HourForecast[5]] = *(_QWORD *)&v71[HourForecast[5]];
  *(_QWORD *)&v70[HourForecast[6]] = *(_QWORD *)&v71[HourForecast[6]];
  v86 = HourForecast[7];
  v87 = &v70[v86];
  v88 = &v71[v86];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v71[v86], 1, v5))
  {
    v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
  }
  else
  {
    v75(v87, v88, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)v87, 0, 1, v5);
  }
  *(_QWORD *)&v70[HourForecast[8]] = *(_QWORD *)&v71[HourForecast[8]];
  __swift_storeEnumTagSinglePayload((uint64_t)v70, 0, 1, (uint64_t)HourForecast);
  return a1;
}

uint64_t getEnumTagSinglePayload for InterpolationInputProducts()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A6239F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = OUTLINED_FUNCTION_0_22();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    v9 = type metadata accessor for DailyForecast();
    if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)v3)
    {
      v7 = v9;
      v10 = *(int *)(a3 + 20);
    }
    else
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D0A0);
      v10 = *(int *)(a3 + 24);
    }
    v8 = v4 + v10;
  }
  return __swift_getEnumTagSinglePayload(v8, v3, v7);
}

uint64_t storeEnumTagSinglePayload for InterpolationInputProducts()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A6239F98(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = OUTLINED_FUNCTION_0_22();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    v11 = type metadata accessor for DailyForecast();
    if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
    {
      v9 = v11;
      v12 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D0A0);
      v12 = *(int *)(a4 + 24);
    }
    v10 = v5 + v12;
  }
  return __swift_storeEnumTagSinglePayload(v10, v4, v4, v9);
}

uint64_t type metadata accessor for InterpolationInputProducts()
{
  uint64_t result;

  result = qword_1ED21C828;
  if (!qword_1ED21C828)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1A623A05C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for HourlyForecast();
  if (v0 <= 0x3F)
  {
    type metadata accessor for DailyForecast();
    if (v1 <= 0x3F)
    {
      sub_1A623A0FC();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_1A623A0FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED21E0B0)
  {
    type metadata accessor for NextHourForecast();
    v0 = sub_1A633575C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED21E0B0);
  }
}

uint64_t AirQualityScaleGradientStop.location.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)v1 = result;
  *(_BYTE *)(v1 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t (*AirQualityScaleGradientStop.location.modify())()
{
  return nullsub_1;
}

uint64_t AirQualityScaleGradientStop.color.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*AirQualityScaleGradientStop.color.modify())()
{
  return nullsub_1;
}

void __swiftcall AirQualityScaleGradientStop.init(location:color:)(WeatherDaemon::AirQualityScaleGradientStop *__return_ptr retstr, Swift::Float_optional *location, Swift::String_optional color)
{
  LODWORD(retstr->location.value) = (_DWORD)location;
  retstr->location.is_nil = BYTE4(location) & 1;
  retstr->color = color;
}

uint64_t sub_1A623A1C8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1A6335ABC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1A6335ABC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A623A2AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A623A1C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A623A2D0()
{
  sub_1A61B882C();
  return sub_1A6335C18();
}

uint64_t sub_1A623A2F8()
{
  sub_1A61B882C();
  return sub_1A6335C24();
}

void AirQualityScaleGradientStop.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  char v11;
  char v12;
  char v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21A170);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_BYTE *)(v1 + 4);
  v8 = *(_QWORD *)(v1 + 8);
  v10[1] = *(_QWORD *)(v1 + 16);
  v10[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A61B882C();
  sub_1A6335BF4();
  v13 = 0;
  v11 = v7;
  v9 = v10[3];
  sub_1A6335A2C();
  if (!v9)
  {
    v12 = 1;
    sub_1A6335A08();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  OUTLINED_FUNCTION_1();
}

void sub_1A623A440(_QWORD *a1)
{
  AirQualityScaleGradientStop.encode(to:)(a1);
}

uint64_t assignWithCopy for AirQualityScaleGradientStop(uint64_t a1, int *a2)
{
  int v3;

  v3 = *a2;
  *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AirQualityScaleGradientStop(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t storeEnumTagSinglePayload for AirQualityScaleGradientStop.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A623A530 + 4 * byte_1A6339885[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A623A564 + 4 * asc_1A6339880[v4]))();
}

uint64_t sub_1A623A564(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A623A56C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A623A574);
  return result;
}

uint64_t sub_1A623A580(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A623A588);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A623A58C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A623A594(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1A623A5A4()
{
  unint64_t result;

  result = qword_1EE846AE0;
  if (!qword_1EE846AE0)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A63399A8, &type metadata for AirQualityScaleGradientStop.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE846AE0);
  }
  return result;
}

void static NewsUnavailableDescriptor.name.getter()
{
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_53();
}

void static NewsUnavailableDescriptor.name.setter()
{
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_1_8();
}

uint64_t (*static NewsUnavailableDescriptor.name.modify())()
{
  OUTLINED_FUNCTION_0_11();
  return j__swift_endAccess;
}

uint64_t sub_1A623A698()
{
  uint64_t result;

  sub_1A6334CDC();
  sub_1A63353F0();
  result = swift_bridgeObjectRelease();
  qword_1ED21C810 = 0x2E312E312E30;
  *(_QWORD *)algn_1ED21C818 = 0xE600000000000000;
  return result;
}

void static NewsUnavailableDescriptor.version.getter()
{
  if (qword_1ED21C820 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_53();
}

void static NewsUnavailableDescriptor.version.setter()
{
  if (qword_1ED21C820 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_1_8();
}

uint64_t (*static NewsUnavailableDescriptor.version.modify())()
{
  if (qword_1ED21C820 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  return j_j__swift_endAccess;
}

ValueMetadata *type metadata accessor for NewsUnavailableDescriptor()
{
  return &type metadata for NewsUnavailableDescriptor;
}

uint64_t WeatherChange.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A618DAAC(v1, a1);
}

uint64_t WeatherChange.metadata.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A61CD678(a1, v1);
}

uint64_t (*WeatherChange.metadata.modify())()
{
  return nullsub_1;
}

uint64_t WeatherChange.forecastStart.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_0_23();
  return OUTLINED_FUNCTION_5_1(v1 + *(int *)(v3 + 20), a1);
}

uint64_t WeatherChange.forecastStart.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_0_23();
  return OUTLINED_FUNCTION_4_3(a1, v1 + *(int *)(v3 + 20));
}

uint64_t (*WeatherChange.forecastStart.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_23();
  return nullsub_1;
}

uint64_t WeatherChange.forecastEnd.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_0_23();
  return OUTLINED_FUNCTION_5_1(v1 + *(int *)(v3 + 24), a1);
}

uint64_t WeatherChange.forecastEnd.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_0_23();
  return OUTLINED_FUNCTION_4_3(a1, v1 + *(int *)(v3 + 24));
}

uint64_t (*WeatherChange.forecastEnd.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_23();
  return nullsub_1;
}

uint64_t WeatherChange.changes.getter()
{
  OUTLINED_FUNCTION_0_23();
  return sub_1A6334CDC();
}

void WeatherChange.changes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_0_23() + 28);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*WeatherChange.changes.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_23();
  return nullsub_1;
}

uint64_t WeatherChange.init(metadata:forecastStart:forecastEnd:changes:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v10 = (int *)OUTLINED_FUNCTION_0_23();
  v11 = a5 + v10[5];
  sub_1A6332C24();
  OUTLINED_FUNCTION_9_11(v11);
  v12 = a5 + v10[6];
  OUTLINED_FUNCTION_9_11(v12);
  sub_1A618B35C(a1, a5, (uint64_t (*)(_QWORD))type metadata accessor for Metadata);
  sub_1A618D2C8(a2, v11);
  result = sub_1A618D2C8(a3, v12);
  *(_QWORD *)(a5 + v10[7]) = a4;
  return result;
}

uint64_t sub_1A623AA8C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x617461646174656DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1A6335ABC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7473616365726F66 && a2 == 0xED00007472617453;
    if (v6 || (sub_1A6335ABC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x7473616365726F66 && a2 == 0xEB00000000646E45;
      if (v7 || (sub_1A6335ABC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x7365676E616863 && a2 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_1A6335ABC();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_1A623AC6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A623AA8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A623AC90()
{
  sub_1A618B414();
  return sub_1A6335C18();
}

uint64_t sub_1A623ACB8()
{
  sub_1A618B414();
  return sub_1A6335C24();
}

#error "1A623ACE8: call analysis failed (funcsize=5)"

void sub_1A623ACF4()
{
  WeatherChange.write(to:)();
}

char *initializeBufferWithCopyOfBuffer for WeatherChange(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A6332C24();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = (int *)type metadata accessor for Metadata();
    v8(&a1[v9[5]], &a2[v9[5]], v7);
    v10 = v9[6];
    v11 = &a1[v10];
    v12 = &a2[v10];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v10], 1, v7))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v8(v11, v12, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v7);
    }
    *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
    *(_QWORD *)&a1[v9[8]] = *(_QWORD *)&a2[v9[8]];
    *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
    v15 = v9[10];
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v18;
    v19 = v9[11];
    v20 = &a1[v19];
    v21 = &a2[v19];
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    v23 = v9[12];
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v26;
    a1[v9[13]] = a2[v9[13]];
    a1[v9[14]] = a2[v9[14]];
    v27 = v9[15];
    v28 = &a1[v27];
    v29 = &a2[v27];
    v30 = *((_QWORD *)v29 + 1);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *((_QWORD *)v28 + 1) = v30;
    v31 = a3[5];
    v32 = &a1[v31];
    v33 = &a2[v31];
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v7))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      v8(v32, v33, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v7);
    }
    v35 = a3[6];
    v36 = &a1[v35];
    v37 = &a2[v35];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v35], 1, v7))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      v8(v36, v37, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v7);
    }
    *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
    sub_1A6334CDC();
  }
  return a1;
}

char *assignWithCopy for WeatherChange(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int EnumTagSinglePayload;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  int v37;
  int v38;
  uint64_t v39;

  v6 = sub_1A6332C24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = (int *)type metadata accessor for Metadata();
  v8(&a1[v9[5]], &a2[v9[5]], v6);
  v10 = v9[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v10], 1, v6);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v8(v11, v12, v6);
LABEL_7:
  *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
  *(_QWORD *)&a1[v9[8]] = *(_QWORD *)&a2[v9[8]];
  *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
  v16 = v9[10];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v19 = v9[11];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v22 = v9[12];
  v23 = &a1[v22];
  v24 = &a2[v22];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  a1[v9[13]] = a2[v9[13]];
  a1[v9[14]] = a2[v9[14]];
  v25 = v9[15];
  v26 = &a1[v25];
  v27 = &a2[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v28 = a3[5];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v28], 1, v6);
  v32 = __swift_getEnumTagSinglePayload((uint64_t)v30, 1, v6);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v29, v30, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v29, v6);
LABEL_12:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_13;
  }
  v8(v29, v30, v6);
LABEL_13:
  v34 = a3[6];
  v35 = &a1[v34];
  v36 = &a2[v34];
  v37 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v34], 1, v6);
  v38 = __swift_getEnumTagSinglePayload((uint64_t)v36, 1, v6);
  if (!v37)
  {
    if (!v38)
    {
      v8(v35, v36, v6);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v35, v6);
    goto LABEL_18;
  }
  if (v38)
  {
LABEL_18:
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v35, v36, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v6);
LABEL_19:
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for WeatherChange(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = sub_1A6332C24();
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for Metadata();
  v7(&a1[v8[5]], &a2[v8[5]], v6);
  v9 = v8[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v9], 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v7(v10, v11, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
  }
  *(_QWORD *)&a1[v8[7]] = *(_QWORD *)&a2[v8[7]];
  *(_QWORD *)&a1[v8[8]] = *(_QWORD *)&a2[v8[8]];
  *(_QWORD *)&a1[v8[9]] = *(_QWORD *)&a2[v8[9]];
  *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
  *(_OWORD *)&a1[v8[11]] = *(_OWORD *)&a2[v8[11]];
  *(_OWORD *)&a1[v8[12]] = *(_OWORD *)&a2[v8[12]];
  a1[v8[13]] = a2[v8[13]];
  a1[v8[14]] = a2[v8[14]];
  *(_OWORD *)&a1[v8[15]] = *(_OWORD *)&a2[v8[15]];
  v13 = a3[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v13], 1, v6))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v7(v14, v15, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v6);
  }
  v17 = a3[6];
  v18 = &a1[v17];
  v19 = &a2[v17];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v17], 1, v6))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v7(v18, v19, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v6);
  }
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  return a1;
}

char *assignWithTake for WeatherChange(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int EnumTagSinglePayload;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  int v45;
  int v46;
  uint64_t v47;

  v6 = sub_1A6332C24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = (int *)type metadata accessor for Metadata();
  v8(&a1[v9[5]], &a2[v9[5]], v6);
  v10 = v9[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v10], 1, v6);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v8(v11, v12, v6);
LABEL_7:
  *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
  *(_QWORD *)&a1[v9[8]] = *(_QWORD *)&a2[v9[8]];
  *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
  v16 = v9[10];
  v17 = &a1[v16];
  v18 = (uint64_t *)&a2[v16];
  v20 = *v18;
  v19 = v18[1];
  *(_QWORD *)v17 = v20;
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v21 = v9[11];
  v22 = &a1[v21];
  v23 = (uint64_t *)&a2[v21];
  v25 = *v23;
  v24 = v23[1];
  *(_QWORD *)v22 = v25;
  *((_QWORD *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  v26 = v9[12];
  v27 = &a1[v26];
  v28 = (uint64_t *)&a2[v26];
  v30 = *v28;
  v29 = v28[1];
  *(_QWORD *)v27 = v30;
  *((_QWORD *)v27 + 1) = v29;
  swift_bridgeObjectRelease();
  a1[v9[13]] = a2[v9[13]];
  a1[v9[14]] = a2[v9[14]];
  v31 = v9[15];
  v32 = &a1[v31];
  v33 = (uint64_t *)&a2[v31];
  v35 = *v33;
  v34 = v33[1];
  *(_QWORD *)v32 = v35;
  *((_QWORD *)v32 + 1) = v34;
  swift_bridgeObjectRelease();
  v36 = a3[5];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v36], 1, v6);
  v40 = __swift_getEnumTagSinglePayload((uint64_t)v38, 1, v6);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v37, v38, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v37, v6);
LABEL_12:
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_13;
  }
  v8(v37, v38, v6);
LABEL_13:
  v42 = a3[6];
  v43 = &a1[v42];
  v44 = &a2[v42];
  v45 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v42], 1, v6);
  v46 = __swift_getEnumTagSinglePayload((uint64_t)v44, 1, v6);
  if (!v45)
  {
    if (!v46)
    {
      v8(v43, v44, v6);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v43, v6);
    goto LABEL_18;
  }
  if (v46)
  {
LABEL_18:
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v43, v44, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v43, 0, 1, v6);
LABEL_19:
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A623B8CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v11;

  v6 = OUTLINED_FUNCTION_8_1();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
    return __swift_getEnumTagSinglePayload(v8, v3, v7);
  }
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v9;
    v8 = v4 + *(int *)(a3 + 20);
    return __swift_getEnumTagSinglePayload(v8, v3, v7);
  }
  v11 = *(_QWORD *)(v4 + *(int *)(a3 + 28));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

void sub_1A623B964(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = OUTLINED_FUNCTION_8_1();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
LABEL_5:
    __swift_storeEnumTagSinglePayload(v10, v4, v4, v9);
    return;
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
  {
    v9 = v11;
    v10 = v5 + *(int *)(a4 + 20);
    goto LABEL_5;
  }
  *(_QWORD *)(v5 + *(int *)(a4 + 28)) = (v4 - 1);
  OUTLINED_FUNCTION_3_1();
}

unint64_t sub_1A623B9F4()
{
  unint64_t result;

  result = qword_1EE846AF8;
  if (!qword_1EE846AF8)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A6339BE8, &type metadata for WeatherChange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE846AF8);
  }
  return result;
}

void static XPCActivity.Notifications.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0xD000000000000020;
  *(_QWORD *)(a1 + 8) = 0x80000001A634A5B0;
  *(_QWORD *)(a1 + 16) = 0x408C200000000000;
  *(_WORD *)(a1 + 24) = 256;
}

uint64_t sub_1A623BA64(double a1, double a2)
{
  uint64_t *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t v7;

  v3 = *v2;
  if (*v2)
  {
    if (*(_QWORD *)(v3 + 16) != 4)
      return 0;
    v4 = *(double *)(v3 + 32) > a2 || *(double *)(v3 + 48) < a2;
    v5 = v4 || *(double *)(v3 + 40) > a1;
    if (v5 || *(double *)(v3 + 56) < a1)
      return 0;
  }
  v7 = v2[1];
  if (!v7)
    return 0;
  else
    return Array<A>.contains(_:)(v7);
}

BOOL static GeoJSON.MultiPolygon.== infix(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  _BYTE *v32;
  void (*v33)(_BYTE *, uint64_t);
  _BYTE v35[12];
  int v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v42 = a4;
  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v39 = &v35[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A633575C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v40 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v41 = TupleTypeMetadata2;
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v11 = &v35[-v10];
  MEMORY[0x1E0C80A78](v12);
  v14 = &v35[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v15);
  v17 = &v35[-v16];
  MEMORY[0x1E0C80A78](v18);
  v21 = &v35[-v20];
  v22 = *a2;
  if (*a1)
  {
    if (!v22 || !sub_1A61CD7E0(*a1, v22))
      return 0;
  }
  else if (v22)
  {
    return 0;
  }
  v37 = v7;
  v38 = v11;
  v23 = a2[1];
  if (a1[1])
  {
    if (!v23)
      return 0;
    sub_1A6334CDC();
    v24 = sub_1A6334CDC();
    sub_1A61CD9BC(v24, v23);
    v36 = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v36 & 1) == 0)
      return 0;
  }
  else if (v23)
  {
    return 0;
  }
  v26 = type metadata accessor for GeoJSON.MultiPolygon(0, a3, v42, v19);
  OUTLINED_FUNCTION_4_19((uint64_t)v21, (uint64_t)a1 + *(int *)(v26 + 40));
  OUTLINED_FUNCTION_4_19((uint64_t)v17, (uint64_t)a2 + *(int *)(v26 + 40));
  v27 = v41;
  v28 = (uint64_t)v38;
  v29 = (uint64_t)&v38[*(int *)(v41 + 48)];
  OUTLINED_FUNCTION_4_19((uint64_t)v38, (uint64_t)v21);
  OUTLINED_FUNCTION_4_19(v29, (uint64_t)v17);
  OUTLINED_FUNCTION_5_15(v28);
  if (v30)
  {
    OUTLINED_FUNCTION_0_24((uint64_t)v17);
    OUTLINED_FUNCTION_0_24((uint64_t)v21);
    OUTLINED_FUNCTION_5_15(v29);
    if (v30)
    {
      OUTLINED_FUNCTION_0_24(v28);
      return 1;
    }
    goto LABEL_19;
  }
  OUTLINED_FUNCTION_4_19((uint64_t)v14, v28);
  OUTLINED_FUNCTION_5_15(v29);
  if (v30)
  {
    OUTLINED_FUNCTION_0_24((uint64_t)v17);
    OUTLINED_FUNCTION_0_24((uint64_t)v21);
    (*(void (**)(_BYTE *, uint64_t))(v37 + 8))(v14, a3);
LABEL_19:
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v28, v27);
    return 0;
  }
  v31 = v37;
  v32 = v39;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v37 + 32))(v39, v29, a3);
  LODWORD(v42) = sub_1A63352DC();
  v33 = *(void (**)(_BYTE *, uint64_t))(v31 + 8);
  v33(v32, a3);
  OUTLINED_FUNCTION_0_24((uint64_t)v17);
  OUTLINED_FUNCTION_0_24((uint64_t)v21);
  v33(v14, a3);
  OUTLINED_FUNCTION_0_24(v28);
  return (v42 & 1) != 0;
}

uint64_t type metadata accessor for GeoJSON.MultiPolygon(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for GeoJSON.MultiPolygon);
}

uint64_t GeoJSON.MultiPolygon.boundingBox.getter()
{
  return sub_1A6334CDC();
}

uint64_t GeoJSON.MultiPolygon.coordinates.getter()
{
  return sub_1A6334CDC();
}

uint64_t GeoJSON.MultiPolygon.properties.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 40);
  v5 = sub_1A633575C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t GeoJSON.MultiPolygon.init(boundingBox:coordinates:properties:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  char *v7;
  uint64_t v8;

  *a6 = a1;
  a6[1] = a2;
  v7 = (char *)a6 + *(int *)(type metadata accessor for GeoJSON.MultiPolygon(0, a4, a5, a4) + 40);
  v8 = sub_1A633575C();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a3, v8);
}

uint64_t sub_1A623BE8C()
{
  unint64_t v0;

  v0 = sub_1A6335918();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_1A623BED8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A623BF04 + 4 * byte_1A6339C60[a1]))(1701869940, 0xE400000000000000);
}

uint64_t sub_1A623BF04()
{
  return 2020565602;
}

uint64_t sub_1A623BF10()
{
  return 0x616E6964726F6F63;
}

uint64_t sub_1A623BF30()
{
  return 0x69747265706F7270;
}

uint64_t sub_1A623BF50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85BEED0](&unk_1A6339DB0, a3);
  return sub_1A6335B10();
}

uint64_t sub_1A623BFA4(uint64_t a1)
{
  MEMORY[0x1A85BEED0](&unk_1A6339DB0, a1);
  return sub_1A63354D4();
}

uint64_t sub_1A623BFF0()
{
  MEMORY[0x1A85BEED0](&unk_1A6339DB0);
  return sub_1A63354EC();
}

uint64_t sub_1A623C040()
{
  MEMORY[0x1A85BEED0](&unk_1A6339DB0);
  return sub_1A63354E0();
}

uint64_t sub_1A623C090@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A623BE8C();
  *a1 = result;
  return result;
}

uint64_t sub_1A623C0C4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1A623BED8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A623C0F0(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1A623BF4C(*v1, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t sub_1A623C0FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t result;

  result = sub_1A623BED4(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
  *a4 = result;
  return result;
}

uint64_t sub_1A623C128()
{
  return sub_1A61C6300();
}

uint64_t sub_1A623C148@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A61C62B4();
  *a1 = result;
  return result;
}

uint64_t sub_1A623C174(uint64_t a1)
{
  MEMORY[0x1A85BEED0](&unk_1A6339E50, a1);
  return sub_1A6335C18();
}

uint64_t sub_1A623C1A8(uint64_t a1)
{
  MEMORY[0x1A85BEED0](&unk_1A6339E50, a1);
  return sub_1A6335C24();
}

void GeoJSON.MultiPolygon.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;

  v30 = a4;
  v7 = sub_1A633575C();
  v8 = *(_QWORD *)(v7 - 8);
  v28 = v7;
  v29 = v8;
  MEMORY[0x1E0C80A78](v7);
  v27 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26 - v11;
  v31 = a3;
  v14 = _s12MultiPolygonV10CodingKeysOMa(255, a2, a3, v13);
  MEMORY[0x1A85BEED0](&unk_1A6339E50, v14);
  v32 = sub_1A63359F0();
  MEMORY[0x1E0C80A78](v32);
  v16 = (char *)&v26 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v33 = v16;
  v17 = (uint64_t)a1;
  v18 = v34;
  sub_1A6335BDC();
  if (!v18)
  {
    v19 = a2;
    v20 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846B00);
    v37 = 1;
    sub_1A623C6D0(&qword_1EE846B08, MEMORY[0x1E0DEB0A8], MEMORY[0x1E0DEAF40]);
    OUTLINED_FUNCTION_7_10();
    OUTLINED_FUNCTION_3_16();
    v34 = a1;
    v21 = v38;
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846B10);
    v37 = 2;
    v23 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE846B18);
    v24 = MEMORY[0x1E0DEAF40];
    v36 = sub_1A623C818(&qword_1EE846B20, &qword_1EE846B08, MEMORY[0x1E0DEB0A8], MEMORY[0x1E0DEAF40]);
    v35 = MEMORY[0x1A85BEED0](v24, v23, &v36);
    MEMORY[0x1A85BEED0](v24, v22, &v35);
    OUTLINED_FUNCTION_7_10();
    OUTLINED_FUNCTION_3_16();
    v26 = v38;
    LOBYTE(v38) = 3;
    OUTLINED_FUNCTION_3_16();
    v17 = (uint64_t)v34;
    OUTLINED_FUNCTION_6_12();
    v25 = (uint64_t)v27;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v27, v12, v28);
    GeoJSON.MultiPolygon.init(boundingBox:coordinates:properties:)(v21, v26, v25, v19, v20, v30);
  }
  __swift_destroy_boxed_opaque_existential_1(v17);
  OUTLINED_FUNCTION_1();
}

uint64_t _s12MultiPolygonV10CodingKeysOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s12MultiPolygonV10CodingKeysOMn);
}

void GeoJSON.MultiPolygon.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v6 = *(_QWORD *)(a2 + 16);
  v15 = *(_QWORD *)(a2 + 24);
  v16 = v6;
  v7 = _s12MultiPolygonV10CodingKeysOMa(255, v6, v15, a4);
  MEMORY[0x1A85BEED0](&unk_1A6339E50, v7);
  v8 = sub_1A6335A8C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v14 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6335BF4();
  LOBYTE(v20) = 0;
  v12 = v18;
  sub_1A6335A50();
  if (!v12)
  {
    v13 = v17;
    v20 = *v17;
    v19 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846B00);
    sub_1A623C6D0(&qword_1EE846B30, MEMORY[0x1E0DEB080], MEMORY[0x1E0DEAF10]);
    OUTLINED_FUNCTION_1_15();
    v20 = v13[1];
    v19 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846B10);
    sub_1A623C730();
    OUTLINED_FUNCTION_1_15();
    LOBYTE(v20) = 3;
    sub_1A6335A44();
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A623C6D0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE846B00);
    v8 = a2;
    result = MEMORY[0x1A85BEED0](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A623C730()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EE846B38;
  if (!qword_1EE846B38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE846B10);
    v2 = sub_1A623C794();
    result = MEMORY[0x1A85BEED0](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE846B38);
  }
  return result;
}

unint64_t sub_1A623C794()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EE846B40;
  if (!qword_1EE846B40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE846B18);
    v2 = MEMORY[0x1E0DEAF10];
    v3 = sub_1A623C818(qword_1EE846B48, &qword_1EE846B30, MEMORY[0x1E0DEB080], MEMORY[0x1E0DEAF10]);
    result = MEMORY[0x1A85BEED0](v2, v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1EE846B40);
  }
  return result;
}

uint64_t sub_1A623C818(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE846B28);
    v10 = sub_1A623C6D0(a2, a3, a4);
    result = MEMORY[0x1A85BEED0](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1A623C898(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  GeoJSON.MultiPolygon.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

void sub_1A623C8B4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  GeoJSON.MultiPolygon.encode(to:)(a1, a2, a3, a4);
}

BOOL sub_1A623C8C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return static GeoJSON.MultiPolygon.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_1A623C8D4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A633575C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A623C94C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  size_t v8;
  int v9;
  uint64_t v10;
  _QWORD *v13;
  _QWORD *v14;
  void *v15;
  const void *v16;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  if (*(_DWORD *)(v5 + 84))
    v8 = *(_QWORD *)(v5 + 64);
  else
    v8 = *(_QWORD *)(v5 + 64) + 1;
  v9 = v6 & 0x100000;
  v10 = *a2;
  *a1 = *a2;
  if (v7 > 7 || v9 != 0 || ((v7 + 16) & ~v7) + v8 > 0x18)
  {
    a1 = (uint64_t *)(v10 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    v13 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    v14 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v13 = *v14;
    v15 = (void *)(((unint64_t)v13 + v7 + 8) & ~v7);
    v16 = (const void *)(((unint64_t)v14 + v7 + 8) & ~v7);
    sub_1A6334CDC();
    sub_1A6334CDC();
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v4))
    {
      memcpy(v15, v16, v8);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v15, v16, v4);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v4);
    }
  }
  return a1;
}

uint64_t sub_1A623CA70(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;

  v3 = a1 + 15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = ((v3 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  result = __swift_getEnumTagSinglePayload(v6, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v5 + 8))(v6, v4);
  return result;
}

_QWORD *sub_1A623CAF4(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  size_t v12;

  v5 = *a2;
  v4 = (unint64_t)a2 + 15;
  *a1 = v5;
  v6 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF8);
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)(((unint64_t)v6 + v9 + 8) & ~v9);
  v11 = (const void *)((v9 + 8 + (v4 & 0xFFFFFFFFFFFFFFF8)) & ~v9);
  sub_1A6334CDC();
  sub_1A6334CDC();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v7))
  {
    if (*(_DWORD *)(v8 + 84))
      v12 = *(_QWORD *)(v8 + 64);
    else
      v12 = *(_QWORD *)(v8 + 64) + 1;
    memcpy(v10, v11, v12);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v7);
  }
  return a1;
}

_QWORD *sub_1A623CBC8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  int EnumTagSinglePayload;
  size_t v14;

  v5 = (unint64_t)a2 + 15;
  *a1 = *a2;
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v7 = v5 & 0xFFFFFFFFFFFFFFF8;
  *v6 = *(_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF8);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (void *)(((unint64_t)v6 + v10 + 8) & ~v10);
  v12 = (const void *)((v10 + 8 + v7) & ~v10);
  LODWORD(v7) = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v8);
  if ((_DWORD)v7)
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v11, v12, v8);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v8);
      return a1;
    }
  }
  else
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(v11, v12, v8);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  }
  if (*(_DWORD *)(v9 + 84))
    v14 = *(_QWORD *)(v9 + 64);
  else
    v14 = *(_QWORD *)(v9 + 64) + 1;
  memcpy(v11, v12, v14);
  return a1;
}

_QWORD *sub_1A623CCFC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  size_t v11;

  *a1 = *a2;
  v4 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (void *)(((unint64_t)v4 + v8 + 8) & ~v8);
  v10 = (const void *)(((unint64_t)v5 + v8 + 8) & ~v8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v6))
  {
    if (*(_DWORD *)(v7 + 84))
      v11 = *(_QWORD *)(v7 + 64);
    else
      v11 = *(_QWORD *)(v7 + 64) + 1;
    memcpy(v9, v10, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  return a1;
}

_QWORD *sub_1A623CDC4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  int EnumTagSinglePayload;
  size_t v14;

  v5 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v7 = v5 & 0xFFFFFFFFFFFFFFF8;
  *v6 = *(_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (void *)(((unint64_t)v6 + v10 + 8) & ~v10);
  v12 = (const void *)((v10 + 8 + v7) & ~v10);
  LODWORD(v7) = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v8);
  if ((_DWORD)v7)
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v11, v12, v8);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v8);
      return a1;
    }
  }
  else
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(v11, v12, v8);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  }
  if (*(_DWORD *)(v9 + 84))
    v14 = *(_QWORD *)(v9 + 64);
  else
    v14 = *(_QWORD *)(v9 + 64) + 1;
  memcpy(v11, v12, v14);
  return a1;
}

uint64_t sub_1A623CEE8(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v16;
  int v17;
  uint64_t v18;
  unsigned int EnumTagSinglePayload;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if ((_DWORD)v6)
    v7 = v6 - 1;
  else
    v7 = 0;
  if (v7 <= 0x7FFFFFFE)
    v8 = 2147483646;
  else
    v8 = v7;
  v9 = *(_QWORD *)(v5 + 64);
  if (!(_DWORD)v6)
    ++v9;
  if (!a2)
    return 0;
  v10 = *(unsigned __int8 *)(v5 + 80);
  v11 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_27;
  v12 = v9 + ((v10 + 16) & ~v10);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v16 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v16))
    {
      v14 = *(_DWORD *)((char *)a1 + v12);
      if (!v14)
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v16 > 0xFF)
    {
      v14 = *(unsigned __int16 *)((char *)a1 + v12);
      if (!*(_WORD *)((char *)a1 + v12))
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v16 < 2)
    {
LABEL_27:
      if (v7 > 0x7FFFFFFE)
      {
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload(((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v10 + 8) & ~v10, v6, v4);
        if (EnumTagSinglePayload >= 2)
          return EnumTagSinglePayload - 1;
        else
          return 0;
      }
      else
      {
        v18 = *a1;
        if (*a1 >= 0xFFFFFFFFuLL)
          LODWORD(v18) = -1;
        if ((v18 + 1) >= 2)
          return v18;
        else
          return 0;
      }
    }
  }
  v14 = *((unsigned __int8 *)a1 + v12);
  if (!*((_BYTE *)a1 + v12))
    goto LABEL_27;
LABEL_20:
  v17 = (v14 - 1) << v13;
  if (v12 > 3)
    v17 = 0;
  if ((_DWORD)v12)
  {
    if (v12 > 3)
      LODWORD(v12) = 4;
    __asm { BR              X12 }
  }
  return v8 + v17 + 1;
}

void sub_1A623D06C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  size_t v13;
  char v14;
  BOOL v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  int v19;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  if (v9 <= 0x7FFFFFFE)
    v10 = 2147483646;
  else
    v10 = v9;
  v11 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v12 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v12;
  v13 = v11 + v12;
  v14 = 8 * (v11 + v12);
  v15 = a3 >= v10;
  v16 = a3 - v10;
  if (v16 != 0 && v15)
  {
    if (v13 <= 3)
    {
      v17 = ((v16 + ~(-1 << v14)) >> v14) + 1;
      if (HIWORD(v17))
      {
        v6 = 4u;
      }
      else if (v17 >= 0x100)
      {
        v6 = 2;
      }
      else
      {
        v6 = v17 > 1;
      }
    }
    else
    {
      v6 = 1u;
    }
  }
  if (v10 < a2)
  {
    v18 = ~v10 + a2;
    if (v13 < 4)
    {
      if ((_DWORD)v13)
      {
        v19 = v18 & ~(-1 << v14);
        bzero(a1, v13);
        if ((_DWORD)v13 == 3)
        {
          *a1 = v19;
          *((_BYTE *)a1 + 2) = BYTE2(v19);
        }
        else if ((_DWORD)v13 == 2)
        {
          *a1 = v19;
        }
        else
        {
          *(_BYTE *)a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v13);
      *(_DWORD *)a1 = v18;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void sub_1A623D2C8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1A623D2D0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_1A623D2F0()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1A623D300()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1A623D308()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_1A623D314(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A623D360 + 4 * byte_1A6339C7B[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A623D394 + 4 * byte_1A6339C76[v4]))();
}

uint64_t sub_1A623D394(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A623D39C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A623D3A4);
  return result;
}

uint64_t sub_1A623D3B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A623D3B8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A623D3BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A623D3C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1A623D3D0()
{
  JUMPOUT(0x1A85BEED0);
}

void sub_1A623D3E0()
{
  JUMPOUT(0x1A85BEED0);
}

void sub_1A623D3F0()
{
  JUMPOUT(0x1A85BEED0);
}

uint64_t ForecastSummary.startTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_6();
  return OUTLINED_FUNCTION_4(a1, v1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 16));
}

uint64_t ForecastSummary.startTime.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_6();
  return OUTLINED_FUNCTION_4(v1, a1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 40));
}

uint64_t (*ForecastSummary.startTime.modify())()
{
  return nullsub_1;
}

uint64_t ForecastSummary.endTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_0_25() + 20);
  return sub_1A618752C(v3, a1);
}

uint64_t ForecastSummary.endTime.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_0_25() + 20);
  return sub_1A618D2C8(a1, v3);
}

uint64_t (*ForecastSummary.endTime.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_25();
  return nullsub_1;
}

void ForecastSummary.condition.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_0_25() + 24));
  OUTLINED_FUNCTION_29_1();
}

void ForecastSummary.condition.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_0_25() + 24)) = v2;
  OUTLINED_FUNCTION_29_1();
}

uint64_t (*ForecastSummary.condition.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_25();
  return nullsub_1;
}

uint64_t ForecastSummary.precipitationChance.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_0_25();
  return OUTLINED_FUNCTION_17_0(v0 + *(int *)(v1 + 28));
}

void ForecastSummary.precipitationChance.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_0_25();
  OUTLINED_FUNCTION_18(*(int *)(v0 + 28));
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*ForecastSummary.precipitationChance.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_25();
  return nullsub_1;
}

uint64_t ForecastSummary.precipitationIntensity.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_0_25();
  return OUTLINED_FUNCTION_17_0(v0 + *(int *)(v1 + 32));
}

void ForecastSummary.precipitationIntensity.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_0_25();
  OUTLINED_FUNCTION_18(*(int *)(v0 + 32));
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*ForecastSummary.precipitationIntensity.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_25();
  return nullsub_1;
}

uint64_t ForecastSummary.init(startTime:endTime:condition:precipitationChance:precipitationIntensity:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  char v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  v11 = *a3;
  v12 = (int *)OUTLINED_FUNCTION_0_25();
  v13 = a8 + v12[5];
  v14 = OUTLINED_FUNCTION_6();
  __swift_storeEnumTagSinglePayload(v13, 1, 1, v14);
  v15 = a8 + v12[7];
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 8) = 1;
  v16 = a8 + v12[8];
  *(_QWORD *)v16 = 0;
  *(_BYTE *)(v16 + 8) = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a8, a1, v14);
  result = sub_1A618D2C8(a2, v13);
  *(_BYTE *)(a8 + v12[6]) = v11;
  *(_QWORD *)v15 = a4;
  *(_BYTE *)(v15 + 8) = a5 & 1;
  *(_QWORD *)v16 = a6;
  *(_BYTE *)(v16 + 8) = a7 & 1;
  return result;
}

WeatherDaemon::ForecastSummary::Intensity __swiftcall ForecastSummary.Intensity.init(intensity:)(Swift::Double intensity)
{
  char *v1;
  char v3;
  WeatherDaemon::ForecastSummary::Intensity result;

  if (intensity >= 2.0 || intensity < 1.0)
    v3 = 2;
  else
    v3 = 1;
  if (intensity < 1.0 && intensity >= 0.0)
    v3 = 0;
  *v1 = v3;
  return result;
}

double ForecastSummary.Intensity.range.getter()
{
  char *v0;

  return dbl_1A633A248[*v0];
}

WeatherDaemon::ForecastSummary::Intensity_optional __swiftcall ForecastSummary.Intensity.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  char v4;
  WeatherDaemon::ForecastSummary::Intensity_optional result;

  v2 = v1;
  v3 = sub_1A6335918();
  swift_bridgeObjectRelease();
  v4 = 3;
  if (v3 < 3)
    v4 = v3;
  *v2 = v4;
  OUTLINED_FUNCTION_3_1();
  return result;
}

uint64_t ForecastSummary.Intensity.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6D756964656DLL;
  if (*v0 != 1)
    v1 = 0x7976616568;
  if (*v0)
    return v1;
  else
    return 0x746867696CLL;
}

void sub_1A623D830(char *a1, char *a2)
{
  sub_1A6243F9C(*a1, *a2);
}

void sub_1A623D83C()
{
  sub_1A62DE210();
}

uint64_t sub_1A623D844(uint64_t a1)
{
  char *v1;

  return sub_1A61F4AF0(a1, *v1);
}

void sub_1A623D84C()
{
  sub_1A61F5A9C();
}

WeatherDaemon::ForecastSummary::Intensity_optional sub_1A623D854(Swift::String *a1)
{
  return ForecastSummary.Intensity.init(rawValue:)(*a1);
}

void sub_1A623D860(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = ForecastSummary.Intensity.rawValue.getter();
  a1[1] = v2;
  OUTLINED_FUNCTION_29_1();
}

uint64_t sub_1A623D880()
{
  sub_1A623F2C4();
  return sub_1A63354F8();
}

uint64_t sub_1A623D8DC()
{
  sub_1A623F2C4();
  return sub_1A63354BC();
}

void ForecastSummary.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  char v28;

  v20 = (int *)type metadata accessor for ForecastSummary();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_2();
  v18 = v5 - v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_2();
  v9 = v8 - v7;
  v22 = sub_1A6332C24();
  v10 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_2();
  v13 = v12 - v11;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21AE08);
  v14 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_2();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A623DC7C();
  sub_1A6335BDC();
  if (!v23)
  {
    sub_1A6189BFC(&qword_1ED21B8A0, MEMORY[0x1E0CB08C0]);
    sub_1A63359D8();
    sub_1A6335954();
    LOBYTE(v26) = 2;
    sub_1A618CE04();
    sub_1A63359D8();
    LOBYTE(v24) = 3;
    OUTLINED_FUNCTION_7_11();
    OUTLINED_FUNCTION_7_11();
    v17 = v18 + v20[5];
    __swift_storeEnumTagSinglePayload(v17, 1, 1, v22);
    v15 = v18 + v20[7];
    *(_QWORD *)v15 = 0;
    *(_BYTE *)(v15 + 8) = 1;
    v16 = v18 + v20[8];
    *(_QWORD *)v16 = 0;
    *(_BYTE *)(v16 + 8) = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v18, v13, v22);
    sub_1A618D2C8(v9, v17);
    *(_BYTE *)(v18 + v20[6]) = v28;
    *(_QWORD *)v15 = v26;
    *(_BYTE *)(v15 + 8) = v27;
    *(_QWORD *)v16 = v24;
    *(_BYTE *)(v16 + 8) = v25;
    sub_1A623DCB8(v18, a2);
    OUTLINED_FUNCTION_19_9(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  OUTLINED_FUNCTION_1();
}

unint64_t sub_1A623DC7C()
{
  unint64_t result;

  result = qword_1ED21ADF0;
  if (!qword_1ED21ADF0)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633A1F4, &type metadata for ForecastSummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED21ADF0);
  }
  return result;
}

uint64_t sub_1A623DCB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ForecastSummary();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A623DCFC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v8;

  v2 = a1 == 0x6D69547472617473 && a2 == 0xE900000000000065;
  if (v2 || (sub_1A6335ABC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656D6954646E65 && a2 == 0xE700000000000000;
    if (v6 || (sub_1A6335ABC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6F697469646E6F63 && a2 == 0xE90000000000006ELL;
      if (v7 || (sub_1A6335ABC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000013 && a2 == 0x80000001A634A5E0 || (sub_1A6335ABC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000016 && a2 == 0x80000001A634A600)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v8 = sub_1A6335ABC();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 4;
        else
          return 5;
      }
    }
  }
}

uint64_t sub_1A623DF0C()
{
  return 5;
}

uint64_t sub_1A623DF14(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A623DF4C + 4 * byte_1A6339EA0[a1]))(0x6D69547472617473, 0xE900000000000065);
}

uint64_t sub_1A623DF4C()
{
  return 0x656D6954646E65;
}

uint64_t sub_1A623DF64()
{
  return 0x6F697469646E6F63;
}

unint64_t sub_1A623DF7C()
{
  return 0xD000000000000013;
}

unint64_t sub_1A623DF98()
{
  return 0xD000000000000016;
}

uint64_t sub_1A623DFB8()
{
  unsigned __int8 *v0;

  return sub_1A623DF14(*v0);
}

uint64_t sub_1A623DFC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A623DCFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A623DFE4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A623DF0C();
  *a1 = result;
  return result;
}

uint64_t sub_1A623E008()
{
  sub_1A623DC7C();
  return sub_1A6335C18();
}

uint64_t sub_1A623E030()
{
  sub_1A623DC7C();
  return sub_1A6335C24();
}

void ForecastSummary.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = v1;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED21AE10);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_11();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A623DC7C();
  sub_1A6335BF4();
  sub_1A6332C24();
  sub_1A6189BFC(&qword_1ED21B898, MEMORY[0x1E0CB0890]);
  OUTLINED_FUNCTION_7_2();
  sub_1A6335A80();
  if (!v2)
  {
    v8 = type metadata accessor for ForecastSummary();
    OUTLINED_FUNCTION_7_2();
    sub_1A6335A44();
    sub_1A61893C8();
    sub_1A6335A80();
    OUTLINED_FUNCTION_17_0(v4 + *(int *)(v8 + 28));
    OUTLINED_FUNCTION_11_11();
    OUTLINED_FUNCTION_17_0(v4 + *(int *)(v8 + 32));
    OUTLINED_FUNCTION_11_11();
  }
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v6);
  OUTLINED_FUNCTION_1();
}

void sub_1A623E1FC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  ForecastSummary.init(from:)(a1, a2);
}

void sub_1A623E210(_QWORD *a1)
{
  ForecastSummary.encode(to:)(a1);
}

uint64_t static ForecastSummary.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  int v32;
  char v33;
  uint64_t v34;
  char v35;
  char v36;
  char v38;
  uint64_t v39;
  uint64_t v40;

  v6 = OUTLINED_FUNCTION_6();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_36();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846C50);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_11();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v39 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v39 - v17;
  if ((sub_1A6332BE8() & 1) == 0)
    return 0;
  v19 = OUTLINED_FUNCTION_0_25();
  v40 = a2;
  v20 = v19;
  sub_1A618752C(a1 + *(int *)(v19 + 20), (uint64_t)v18);
  v39 = v20;
  v21 = *(int *)(v20 + 20);
  v22 = v40;
  sub_1A618752C(v40 + v21, (uint64_t)v15);
  v23 = v2 + *(int *)(v8 + 48);
  sub_1A618752C((uint64_t)v18, v2);
  sub_1A618752C((uint64_t)v15, v23);
  OUTLINED_FUNCTION_5_15(v2);
  if (v24)
  {
    OUTLINED_FUNCTION_6_13((uint64_t)v15);
    OUTLINED_FUNCTION_6_13((uint64_t)v18);
    OUTLINED_FUNCTION_5_15(v23);
    if (v24)
    {
      sub_1A61DB454(v2, &qword_1ED21D330);
      goto LABEL_12;
    }
LABEL_10:
    sub_1A61DB454(v2, &qword_1EE846C50);
    return 0;
  }
  sub_1A618752C(v2, (uint64_t)v12);
  OUTLINED_FUNCTION_5_15(v23);
  if (v24)
  {
    sub_1A61DB454((uint64_t)v15, &qword_1ED21D330);
    sub_1A61DB454((uint64_t)v18, &qword_1ED21D330);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    goto LABEL_10;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v3, v23, v6);
  sub_1A6189BFC(&qword_1EE846C58, MEMORY[0x1E0CB08B8]);
  v25 = sub_1A63352DC();
  v26 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v26(v3, v6);
  OUTLINED_FUNCTION_6_13((uint64_t)v15);
  OUTLINED_FUNCTION_6_13((uint64_t)v18);
  v26((uint64_t)v12, v6);
  OUTLINED_FUNCTION_6_13(v2);
  if ((v25 & 1) == 0)
    return 0;
LABEL_12:
  v27 = v22;
  v28 = v39;
  sub_1A6243C58(*(_BYTE *)(a1 + *(int *)(v39 + 24)));
  if ((v29 & 1) == 0)
    return 0;
  v30 = *(int *)(v28 + 28);
  v31 = *(_BYTE *)(a1 + v30 + 8);
  v32 = *(unsigned __int8 *)(v27 + v30 + 8);
  if ((v31 & 1) == 0)
  {
    OUTLINED_FUNCTION_15_13();
    if ((v33 & 1) == 0)
      goto LABEL_17;
    return 0;
  }
  if (!v32)
    return 0;
LABEL_17:
  v34 = *(int *)(v28 + 32);
  v35 = *(_BYTE *)(a1 + v34 + 8);
  v36 = *(_BYTE *)(v40 + v34 + 8);
  if ((v35 & 1) != 0)
  {
    if ((v36 & 1) == 0)
      return 0;
  }
  else
  {
    OUTLINED_FUNCTION_15_13();
    if ((v38 & 1) != 0)
      return 0;
  }
  return 1;
}

void ForecastSummary.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_36();
  v2 = OUTLINED_FUNCTION_6();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_2();
  sub_1A6335834();
  sub_1A63353F0();
  v3 = (char *)sub_1A623E604 + 4 * byte_1A6339EA5[*(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_0_25() + 24))];
  __asm { BR              X10 }
}

uint64_t sub_1A623E604()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1A63353F0();
  swift_bridgeObjectRelease();
  sub_1A63353F0();
  sub_1A6189BFC((unint64_t *)&qword_1ED21B780, MEMORY[0x1E0CB08F0]);
  OUTLINED_FUNCTION_20_12();
  sub_1A63353F0();
  swift_bridgeObjectRelease();
  sub_1A63353F0();
  sub_1A618752C(v0 + v2[5], v4);
  if (__swift_getEnumTagSinglePayload(v4, 1, v1) == 1)
  {
    sub_1A6332B4C();
    sub_1A61DB454(v4, &qword_1ED21D330);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v3, v4, v1);
  }
  OUTLINED_FUNCTION_20_12();
  sub_1A63353F0();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v1);
  sub_1A63353F0();
  OUTLINED_FUNCTION_16_13(v2[7]);
  OUTLINED_FUNCTION_14_10();
  sub_1A63353F0();
  OUTLINED_FUNCTION_16_13(v2[8]);
  OUTLINED_FUNCTION_14_10();
  return *(_QWORD *)(v6 - 112);
}

unint64_t sub_1A623E840()
{
  unint64_t result;

  result = qword_1EE846C60;
  if (!qword_1EE846C60)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for ForecastSummary.Intensity, &type metadata for ForecastSummary.Intensity);
    atomic_store(result, (unint64_t *)&qword_1EE846C60);
  }
  return result;
}

void sub_1A623E880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  static ForecastSummary.read(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), HIBYTE(vars8));
}

void sub_1A623E894()
{
  ForecastSummary.write(to:)();
}

char *initializeBufferWithCopyOfBuffer for ForecastSummary(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A6332C24();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v9], 1, v7))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v7);
    }
    v14 = a3[7];
    a1[a3[6]] = a2[a3[6]];
    v15 = &a1[v14];
    v16 = &a2[v14];
    *(_QWORD *)v15 = *(_QWORD *)v16;
    v15[8] = v16[8];
    v17 = a3[8];
    v18 = &a1[v17];
    v19 = &a2[v17];
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v18[8] = v19[8];
  }
  return a1;
}

uint64_t destroy for ForecastSummary(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t (*v7)(uint64_t, uint64_t);

  v4 = sub_1A6332C24();
  v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v7(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  result = __swift_getEnumTagSinglePayload(v5, 1, v4);
  if (!(_DWORD)result)
    return v7(v5, v4);
  return result;
}

char *initializeWithCopy for ForecastSummary(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;

  v6 = sub_1A6332C24();
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v8], 1, v6))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  v12 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  v15 = a3[8];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  return a1;
}

char *assignWithCopy for ForecastSummary(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = sub_1A6332C24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v9], 1, v6);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
LABEL_7:
  a1[a3[6]] = a2[a3[6]];
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = *(_QWORD *)v17;
  v16[8] = v17[8];
  *(_QWORD *)v16 = v18;
  v19 = a3[8];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = *(_QWORD *)v21;
  v20[8] = v21[8];
  *(_QWORD *)v20 = v22;
  return a1;
}

char *initializeWithTake for ForecastSummary(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;

  v6 = sub_1A6332C24();
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v8], 1, v6))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  v12 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  v15 = a3[8];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  return a1;
}

char *assignWithTake for ForecastSummary(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;

  v6 = sub_1A6332C24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v9], 1, v6);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
LABEL_7:
  v15 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  v18 = a3[8];
  v19 = &a1[v18];
  v20 = &a2[v18];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  v19[8] = v20[8];
  return a1;
}

uint64_t sub_1A623EF3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v11;

  v6 = OUTLINED_FUNCTION_6();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v9;
    v8 = a1 + *(int *)(a3 + 20);
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  v11 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v11 >= 8)
    return v11 - 7;
  else
    return 0;
}

void sub_1A623EFD8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = OUTLINED_FUNCTION_6();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
LABEL_5:
    __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
    return;
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
  {
    v9 = v11;
    v10 = a1 + *(int *)(a4 + 20);
    goto LABEL_5;
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 7;
  OUTLINED_FUNCTION_3_1();
}

uint64_t storeEnumTagSinglePayload for ForecastSummary.Intensity(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A623F0B8 + 4 * byte_1A6339EB2[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A623F0EC + 4 * byte_1A6339EAD[v4]))();
}

uint64_t sub_1A623F0EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A623F0F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A623F0FCLL);
  return result;
}

uint64_t sub_1A623F108(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A623F110);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A623F114(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A623F11C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ForecastSummary.Intensity()
{
  return &type metadata for ForecastSummary.Intensity;
}

uint64_t storeEnumTagSinglePayload for ForecastSummary.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A623F184 + 4 * byte_1A6339EBC[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A623F1B8 + 4 * byte_1A6339EB7[v4]))();
}

uint64_t sub_1A623F1B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A623F1C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A623F1C8);
  return result;
}

uint64_t sub_1A623F1D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A623F1DCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A623F1E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A623F1E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ForecastSummary.CodingKeys()
{
  return &type metadata for ForecastSummary.CodingKeys;
}

unint64_t sub_1A623F208()
{
  unint64_t result;

  result = qword_1EE846C68;
  if (!qword_1EE846C68)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633A1CC, &type metadata for ForecastSummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE846C68);
  }
  return result;
}

unint64_t sub_1A623F248()
{
  unint64_t result;

  result = qword_1ED21AE00;
  if (!qword_1ED21AE00)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633A13C, &type metadata for ForecastSummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED21AE00);
  }
  return result;
}

unint64_t sub_1A623F288()
{
  unint64_t result;

  result = qword_1ED21ADF8;
  if (!qword_1ED21ADF8)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633A164, &type metadata for ForecastSummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED21ADF8);
  }
  return result;
}

unint64_t sub_1A623F2C4()
{
  unint64_t result;

  result = qword_1EE846C70;
  if (!qword_1EE846C70)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for ForecastSummary.Intensity, &type metadata for ForecastSummary.Intensity);
    atomic_store(result, (unint64_t *)&qword_1EE846C70);
  }
  return result;
}

ValueMetadata *type metadata accessor for RetriedError()
{
  return &type metadata for RetriedError;
}

uint64_t sub_1A623F310()
{
  return sub_1A6335BAC();
}

uint64_t sub_1A623F334()
{
  sub_1A6335BA0();
  sub_1A6335BAC();
  return sub_1A6335BC4();
}

uint64_t sub_1A623F37C()
{
  sub_1A6335BA0();
  sub_1A6335BAC();
  return sub_1A6335BC4();
}

uint64_t storeEnumTagSinglePayload for TaskError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A623F3F8 + 4 * byte_1A633A278[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A623F418 + 4 * byte_1A633A27D[v4]))();
}

_BYTE *sub_1A623F3F8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A623F418(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A623F420(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A623F428(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A623F430(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A623F438(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TaskError()
{
  return &type metadata for TaskError;
}

unint64_t sub_1A623F458()
{
  unint64_t result;

  result = qword_1EE846C78;
  if (!qword_1EE846C78)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633A320, &type metadata for TaskError);
    atomic_store(result, (unint64_t *)&qword_1EE846C78);
  }
  return result;
}

uint64_t dispatch thunk of InterpolationReducerType.reduce(accumulator:a:b:c:d:time1:time2:useMonotone:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(void))(a10 + 16))();
}

void sub_1A623F4A4(uint64_t a1)
{
  OUTLINED_FUNCTION_2_21(a1, qword_1ED21A368);
}

void sub_1A623F4CC()
{
  sub_1A623F8E8((id *)&protocolRef__TtP13WeatherDaemon27WeatherDataServiceProxyType_);
}

uint64_t sub_1A623F4E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void (*v15)(unint64_t, char *, uint64_t);
  uint64_t v16;
  uint64_t v18;

  v0 = sub_1A6334BB0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v18 - v5;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v18 - v8;
  sub_1A6334BBC();
  sub_1A6334BA4();
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v6, v0);
  sub_1A6334BBC();
  sub_1A6334BA4();
  v10(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B768);
  v11 = *(_QWORD *)(v1 + 72);
  v12 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1A6338E30;
  v14 = v13 + v12;
  v15 = *(void (**)(unint64_t, char *, uint64_t))(v1 + 16);
  v15(v14, v9, v0);
  v15(v14 + v11, v6, v0);
  v16 = sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v10(v6, v0);
  v10(v9, v0);
  return v16;
}

void sub_1A623F6C8()
{
  sub_1A623FAD0(0x64616F6C796170, 0xE700000000000000);
}

void sub_1A623F6E8()
{
  sub_1A623F714((void (*)(_QWORD, __n128))type metadata accessor for WeatherDataProxyRequest);
}

void sub_1A623F6F4()
{
  sub_1A623FAD0(0, 0);
}

void sub_1A623F708()
{
  sub_1A623F714((void (*)(_QWORD, __n128))type metadata accessor for WeatherDataProxyResponse);
}

void sub_1A623F714(void (*a1)(_QWORD, __n128))
{
  uint64_t v1;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1A6334EB0();
  OUTLINED_FUNCTION_7_12();
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(0, v4);
  sub_1A6334EBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B770);
  v7 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1A6338890;
  OUTLINED_FUNCTION_63(v8 + v7, (uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  sub_1A6334CB8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_86((uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_13();
}

void sub_1A623F7E0()
{
  sub_1A623FAD0(0x64616F6C796170, 0xE700000000000000);
}

void sub_1A623F800()
{
  sub_1A623F714((void (*)(_QWORD, __n128))type metadata accessor for AirQualityScaleProxyRequest);
}

void sub_1A623F80C()
{
  sub_1A623FAD0(0, 0);
}

void sub_1A623F820()
{
  sub_1A623F714((void (*)(_QWORD, __n128))type metadata accessor for AirQualityScaleProxyResponse);
}

uint64_t static MachServices.WeatherKit.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A623FDE8(&qword_1ED21A380, (uint64_t)qword_1ED21A368, a1);
}

void sub_1A623F848(uint64_t a1)
{
  OUTLINED_FUNCTION_2_21(a1, qword_1ED21A0B0);
}

void sub_1A623F870(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1A6334B74();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  sub_1A6334B80();
  OUTLINED_FUNCTION_13();
}

void sub_1A623F8D4()
{
  sub_1A623F8E8((id *)&protocolRef__TtP13WeatherDaemon38WDSJWTAuthenticatorServiceListenerType_);
}

void sub_1A623F8E8(id *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v3 = sub_1A6334C10();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_2_3();
  v5 = *a1;
  sub_1A6334C1C();
  sub_1A6334D00();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  OUTLINED_FUNCTION_13();
}

uint64_t sub_1A623F970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t);
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v0 = sub_1A6334BB0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - v5;
  sub_1A6334BBC();
  sub_1A6334BA4();
  v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B768);
  v8 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1A6338890;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 16))(v9 + v8, v6, v0);
  v10 = sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v7(v6, v0);
  return v10;
}

void sub_1A623FAB8()
{
  sub_1A623FAD0(7107189, 0xE300000000000000);
}

void sub_1A623FAD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1A6334B8C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_2_3();
  sub_1A6334B98();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B760);
  v6 = OUTLINED_FUNCTION_1_16();
  *(_OWORD *)(v6 + 16) = xmmword_1A6338890;
  OUTLINED_FUNCTION_63(v6 + a2, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  sub_1A6334CDC();
  OUTLINED_FUNCTION_6_14();
  OUTLINED_FUNCTION_86(v2, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_13();
}

void sub_1A623FB90()
{
  sub_1A623FBA4(&qword_1ED21AE20);
}

void sub_1A623FBA4(unint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  sub_1A6334EB0();
  OUTLINED_FUNCTION_7_12();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A619FE44(0, a1);
  sub_1A6334EBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B770);
  v6 = OUTLINED_FUNCTION_1_16();
  *(_OWORD *)(v6 + 16) = xmmword_1A6338890;
  OUTLINED_FUNCTION_63((uint64_t)a1 + v6, (uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  sub_1A6334CB8();
  OUTLINED_FUNCTION_6_14();
  OUTLINED_FUNCTION_86((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_13();
}

uint64_t sub_1A623FC64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void (*v11)(unint64_t, char *, uint64_t);
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v0 = sub_1A6334B8C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - v5;
  sub_1A6334B98();
  sub_1A6334B98();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B760);
  v7 = *(_QWORD *)(v1 + 72);
  v8 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1A6338E30;
  v10 = v9 + v8;
  v11 = *(void (**)(unint64_t, char *, uint64_t))(v1 + 16);
  v11(v10, v6, v0);
  v11(v10 + v7, v3, v0);
  v12 = sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v13 = *(void (**)(char *, uint64_t))(v1 + 8);
  v13(v3, v0);
  v13(v6, v0);
  return v12;
}

void sub_1A623FDB8()
{
  sub_1A623FBA4((unint64_t *)&qword_1ED21B788);
}

uint64_t static MachServices.AuthService.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A623FDE8(&qword_1ED21A0C8, (uint64_t)qword_1ED21A0B0, a1);
}

uint64_t sub_1A623FDE8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1A6334B74();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

ValueMetadata *type metadata accessor for MachServices()
{
  return &type metadata for MachServices;
}

void NextHourForecast.metadata.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1A618D9C4(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for Metadata);
}

uint64_t NextHourForecast.metadata.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A61CD678(a1, v1);
}

uint64_t (*NextHourForecast.metadata.modify())()
{
  return nullsub_1;
}

void NextHourForecast.condition.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_0_26() + 20);
  OUTLINED_FUNCTION_10_10();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*NextHourForecast.condition.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_26();
  return nullsub_1;
}

void NextHourForecast.summary.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_0_26() + 24);
  OUTLINED_FUNCTION_10_10();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*NextHourForecast.summary.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_26();
  return nullsub_1;
}

uint64_t NextHourForecast.forecastStart.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_0_26() + 28);
  return sub_1A618D2C8(a1, v3);
}

uint64_t (*NextHourForecast.forecastStart.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_26();
  return nullsub_1;
}

void NextHourForecast.minutes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_0_26() + 32);
  OUTLINED_FUNCTION_10_10();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*NextHourForecast.minutes.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_26();
  return nullsub_1;
}

void NextHourForecast.minutes(for:)()
{
  OUTLINED_FUNCTION_0_26();
  sub_1A6334CDC();
  sub_1A61C7260();
}

uint64_t sub_1A6240038(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char v19;
  void (*v21)(char *, uint64_t);
  _QWORD v22[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v22 - v8;
  v10 = sub_1A6332C24();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v22 - v15;
  sub_1A618752C(a1, (uint64_t)v9);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
  {
    sub_1A6187574((uint64_t)v9);
LABEL_7:
    v19 = 0;
    return v19 & 1;
  }
  v17 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v17(v16, v9, v10);
  if ((sub_1A6332B88() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    goto LABEL_7;
  }
  v18 = type metadata accessor for ForecastSummary();
  sub_1A618752C(a2 + *(int *)(v18 + 20), (uint64_t)v6);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v10) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    sub_1A6187574((uint64_t)v6);
    v19 = 1;
  }
  else
  {
    v17(v13, v6, v10);
    v19 = sub_1A6332B88();
    v21 = *(void (**)(char *, uint64_t))(v11 + 8);
    v21(v13, v10);
    v21(v16, v10);
  }
  return v19 & 1;
}

uint64_t sub_1A6240228(uint64_t a1)
{
  uint64_t v1;

  return sub_1A6240038(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t NextHourForecast.isAllClear.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  _BOOL8 v13;
  BOOL v15;

  v1 = type metadata accessor for ForecastSummary();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_2();
  v5 = v4 - v3;
  v6 = *(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_0_26() + 24));
  v7 = *(_QWORD *)(v6 + 16);
  if (!v7)
    return 1;
  v8 = v6 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v9 = *(_QWORD *)(v2 + 72);
  sub_1A6334CDC();
  v10 = v7 - 1;
  do
  {
    sub_1A618D9C4(v8, v5, (uint64_t (*)(_QWORD))type metadata accessor for ForecastSummary);
    v11 = *(int *)(v1 + 24);
    v12 = *(unsigned __int8 *)(v5 + v11);
    v13 = *(_BYTE *)(v5 + v11) == 0;
    sub_1A618DF54(v5, (uint64_t (*)(_QWORD))type metadata accessor for ForecastSummary);
    v15 = v10-- != 0;
    if (v12)
      break;
    v8 += v9;
  }
  while (v15);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1A6240340(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 0x617461646174656DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1A6335ABC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6F697469646E6F63 && a2 == 0xE90000000000006ELL;
    if (v6 || (sub_1A6335ABC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x7972616D6D7573 && a2 == 0xE700000000000000;
      if (v7 || (sub_1A6335ABC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x7473616365726F66 && a2 == 0xED00007472617453;
        if (v8 || (sub_1A6335ABC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x736574756E696DLL && a2 == 0xE700000000000000)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v10 = sub_1A6335ABC();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_1A624057C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A6240340(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A62405A0()
{
  sub_1A618B3A0();
  return sub_1A6335C18();
}

uint64_t sub_1A62405C8()
{
  sub_1A618B3A0();
  return sub_1A6335C24();
}

#error "1A62405F8: call analysis failed (funcsize=5)"

void sub_1A6240604()
{
  NextHourForecast.write(to:)();
}

char *initializeBufferWithCopyOfBuffer for NextHourForecast(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (*v36)(char *, char *, uint64_t);
  char *__dst;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A6332C24();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = (int *)type metadata accessor for Metadata();
    v8(&a1[v9[5]], &a2[v9[5]], v7);
    v10 = v9[6];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v36 = v8;
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v10], 1, v7))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v8(v11, v12, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v7);
    }
    *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
    *(_QWORD *)&a1[v9[8]] = *(_QWORD *)&a2[v9[8]];
    *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
    v15 = v9[10];
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v18;
    v19 = v9[11];
    v20 = &a1[v19];
    v21 = &a2[v19];
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    v23 = v9[12];
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v26;
    a1[v9[13]] = a2[v9[13]];
    a1[v9[14]] = a2[v9[14]];
    v27 = v9[15];
    v28 = &a1[v27];
    v29 = &a2[v27];
    v30 = *((_QWORD *)v29 + 1);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *((_QWORD *)v28 + 1) = v30;
    v31 = a3[6];
    *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
    *(_QWORD *)&a1[v31] = *(_QWORD *)&a2[v31];
    v32 = a3[7];
    __dst = &a1[v32];
    v33 = &a2[v32];
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v7))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(__dst, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      v36(__dst, v33, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v7);
    }
    *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
    sub_1A6334CDC();
  }
  return a1;
}

char *assignWithCopy for NextHourForecast(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int EnumTagSinglePayload;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int v31;
  int v32;
  uint64_t v33;

  v6 = sub_1A6332C24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = (int *)type metadata accessor for Metadata();
  v8(&a1[v9[5]], &a2[v9[5]], v6);
  v10 = v9[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v10], 1, v6);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v8(v11, v12, v6);
LABEL_7:
  *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
  *(_QWORD *)&a1[v9[8]] = *(_QWORD *)&a2[v9[8]];
  *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
  v16 = v9[10];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v19 = v9[11];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v22 = v9[12];
  v23 = &a1[v22];
  v24 = &a2[v22];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  a1[v9[13]] = a2[v9[13]];
  a1[v9[14]] = a2[v9[14]];
  v25 = v9[15];
  v26 = &a1[v25];
  v27 = &a2[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v28 = a3[7];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v28], 1, v6);
  v32 = __swift_getEnumTagSinglePayload((uint64_t)v30, 1, v6);
  if (!v31)
  {
    if (!v32)
    {
      v8(v29, v30, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v29, v6);
    goto LABEL_12;
  }
  if (v32)
  {
LABEL_12:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v29, v30, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v6);
LABEL_13:
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for NextHourForecast(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = sub_1A6332C24();
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for Metadata();
  v7(&a1[v8[5]], &a2[v8[5]], v6);
  v9 = v8[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v9], 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v7(v10, v11, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
  }
  *(_QWORD *)&a1[v8[7]] = *(_QWORD *)&a2[v8[7]];
  *(_QWORD *)&a1[v8[8]] = *(_QWORD *)&a2[v8[8]];
  *(_QWORD *)&a1[v8[9]] = *(_QWORD *)&a2[v8[9]];
  *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
  *(_OWORD *)&a1[v8[11]] = *(_OWORD *)&a2[v8[11]];
  *(_OWORD *)&a1[v8[12]] = *(_OWORD *)&a2[v8[12]];
  a1[v8[13]] = a2[v8[13]];
  a1[v8[14]] = a2[v8[14]];
  *(_OWORD *)&a1[v8[15]] = *(_OWORD *)&a2[v8[15]];
  v13 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
  v14 = a3[7];
  v15 = &a1[v14];
  v16 = &a2[v14];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v14], 1, v6))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v7(v15, v16, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v6);
  }
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  return a1;
}

char *assignWithTake for NextHourForecast(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int EnumTagSinglePayload;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  int v39;
  int v40;
  uint64_t v41;

  v6 = sub_1A6332C24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = (int *)type metadata accessor for Metadata();
  v8(&a1[v9[5]], &a2[v9[5]], v6);
  v10 = v9[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v10], 1, v6);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v8(v11, v12, v6);
LABEL_7:
  *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
  *(_QWORD *)&a1[v9[8]] = *(_QWORD *)&a2[v9[8]];
  *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
  v16 = v9[10];
  v17 = &a1[v16];
  v18 = (uint64_t *)&a2[v16];
  v20 = *v18;
  v19 = v18[1];
  *(_QWORD *)v17 = v20;
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v21 = v9[11];
  v22 = &a1[v21];
  v23 = (uint64_t *)&a2[v21];
  v25 = *v23;
  v24 = v23[1];
  *(_QWORD *)v22 = v25;
  *((_QWORD *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  v26 = v9[12];
  v27 = &a1[v26];
  v28 = (uint64_t *)&a2[v26];
  v30 = *v28;
  v29 = v28[1];
  *(_QWORD *)v27 = v30;
  *((_QWORD *)v27 + 1) = v29;
  swift_bridgeObjectRelease();
  a1[v9[13]] = a2[v9[13]];
  a1[v9[14]] = a2[v9[14]];
  v31 = v9[15];
  v32 = &a1[v31];
  v33 = (uint64_t *)&a2[v31];
  v35 = *v33;
  v34 = v33[1];
  *(_QWORD *)v32 = v35;
  *((_QWORD *)v32 + 1) = v34;
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  v36 = a3[7];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v36], 1, v6);
  v40 = __swift_getEnumTagSinglePayload((uint64_t)v38, 1, v6);
  if (!v39)
  {
    if (!v40)
    {
      v8(v37, v38, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v37, v6);
    goto LABEL_12;
  }
  if (v40)
  {
LABEL_12:
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v37, v38, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v6);
LABEL_13:
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A6241060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v6 = OUTLINED_FUNCTION_8_1();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
    return __swift_getEnumTagSinglePayload(v8, v3, v7);
  }
  if ((_DWORD)v3 != 0x7FFFFFFF)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    v8 = v4 + *(int *)(a3 + 28);
    return __swift_getEnumTagSinglePayload(v8, v3, v7);
  }
  v9 = *(_QWORD *)(v4 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

void sub_1A62410F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = OUTLINED_FUNCTION_8_1();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(v5 + *(int *)(a4 + 20)) = (v4 - 1);
      OUTLINED_FUNCTION_3_1();
      return;
    }
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    v10 = v5 + *(int *)(a4 + 28);
  }
  __swift_storeEnumTagSinglePayload(v10, v4, v4, v9);
}

unint64_t sub_1A6241180()
{
  unint64_t result;

  result = qword_1EE846C80;
  if (!qword_1EE846C80)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633A55C, &type metadata for NextHourForecast.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE846C80);
  }
  return result;
}

uint64_t DemoDataProvider.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t DemoDataProvider.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t DemoDataProvider.demoData(named:subdirectory:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21DA40);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A6332A98();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v22 - v13;
  if (qword_1EE845450 != -1)
    swift_once();
  swift_beginAccess();
  if (!qword_1EE8482C0)
    return 0;
  v15 = (id)qword_1EE8482C0;
  v16 = (void *)sub_1A63352E8();
  v17 = (void *)sub_1A63352E8();
  if (a4)
    a4 = (void *)sub_1A63352E8();
  v18 = objc_msgSend(v15, sel_URLForResource_withExtension_subdirectory_, v16, v17, a4);

  if (!v18)
  {
    OUTLINED_FUNCTION_0_27((uint64_t)v7, 1);
    goto LABEL_10;
  }
  sub_1A6332A5C();

  v19 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v19(v7, v11, v8);
  OUTLINED_FUNCTION_0_27((uint64_t)v7, 0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8) == 1)
  {
LABEL_10:

    sub_1A61DB454((uint64_t)v7, &qword_1ED21DA40);
    return 0;
  }
  v19(v14, v7, v8);
  v20 = sub_1A6241424();

  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  return v20;
}

uint64_t sub_1A6241424()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v0 = sub_1A6334A84();
  v57 = *(_QWORD *)(v0 - 8);
  v58 = v0;
  MEMORY[0x1E0C80A78](v0);
  v51 = (char *)&v49 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v55 = (char *)&v49 - v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846D20);
  MEMORY[0x1E0C80A78](v4);
  v56 = (uint64_t)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A6334A6C();
  v53 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v52 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v54 = (char *)&v49 - v9;
  v10 = sub_1A6334A60();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1A63350F0();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A6334A54();
  sub_1A6332A74();
  sub_1A63350FC();
  v18 = sub_1A6334A3C();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if (!v18)
  {
    if (qword_1EE845468 != -1)
      swift_once();
    v23 = sub_1A6334F04();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EE85E398);
    v24 = sub_1A6334EEC();
    v25 = sub_1A633569C();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_1A6185000, v24, v25, "can't create reading file stream", v26, 2u);
      MEMORY[0x1A85BEFA8](v26, -1, -1);
    }

    return 0;
  }
  v50 = v6;
  v59 = MEMORY[0x1E0DEE9D8];
  sub_1A6241C90();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846D30);
  sub_1A6241CD0();
  sub_1A63357D4();
  v19 = sub_1A6334A30();
  v20 = *(void (**)(char *, uint64_t))(v11 + 8);
  v20(v13, v10);
  if (!v19)
    goto LABEL_13;
  sub_1A6334ACC();
  v59 = MEMORY[0x1E0DEE9D8];
  sub_1A63357D4();
  v21 = sub_1A6334A9C();
  v20(v13, v10);
  if (!v21)
  {
    sub_1A6334A48();
    swift_release();
LABEL_13:
    sub_1A6334A48();
    goto LABEL_14;
  }
  v22 = sub_1A6334AA8();
  v29 = v22;
  if (!v22)
    goto LABEL_5;
  v30 = v55;
  sub_1A6334A90();
  v31 = v56;
  sub_1A6334A78();
  v32 = v58;
  v33 = *(void (**)(char *, uint64_t))(v57 + 8);
  v33(v30, v58);
  v34 = v50;
  if (__swift_getEnumTagSinglePayload(v31, 1, v50) == 1)
  {
    swift_release();
    sub_1A61DB454(v31, &qword_1EE846D20);
LABEL_5:
    sub_1A6334AB4();
    swift_release();
    sub_1A6334A48();
    swift_release();
    sub_1A6334A48();
LABEL_14:
    swift_release();
    return 0;
  }
  v57 = v29;
  v35 = v53;
  v36 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v54, v31, v34);
  v37 = v52;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v52, v36, v34);
  if ((*(unsigned int (**)(char *, uint64_t))(v35 + 88))(v37, v34) != *MEMORY[0x1E0DE9B90])
  {
    swift_release();
    v47 = *(void (**)(char *, uint64_t))(v35 + 8);
    v47(v37, v34);
LABEL_29:
    v47(v36, v34);
    goto LABEL_5;
  }
  (*(void (**)(char *, uint64_t))(v35 + 96))(v37, v34);
  v38 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE846D40) + 48);
  v39 = v37;
  v40 = *(_QWORD *)&v37[v38];
  v33(v39, v32);
  if (!v40)
  {
    swift_release();
    v47 = *(void (**)(char *, uint64_t))(v35 + 8);
    goto LABEL_29;
  }
  if (v40 < 0)
  {
    __break(1u);
    swift_once();
    v43 = sub_1A6334F04();
    __swift_project_value_buffer(v43, (uint64_t)qword_1EE85E398);
    v44 = sub_1A6334EEC();
    v45 = sub_1A633569C();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v46 = 0;
      MEMORY[0x1A85BEFA8](v46, -1, -1);
    }

  }
  else
  {
    v41 = swift_slowAlloc();
    v42 = v51;
    sub_1A6334A90();
    v56 = v41;
    sub_1A6334AC0();
    v49 = v21;
    v33(v42, v58);
  }
  v48 = v56;
  v27 = sub_1A6241B9C(v56, v40);
  MEMORY[0x1A85BEFA8](v48, -1, -1);
  swift_release();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v34);
  sub_1A6334AB4();
  swift_release();
  sub_1A6334A48();
  swift_release();
  sub_1A6334A48();
  swift_release();
  return v27;
}

uint64_t DemoDataProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DemoDataProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1A6241B9C(uint64_t result, uint64_t a2)
{
  if (result)
  {
    if (a2)
    {
      if (a2 <= 14)
      {
        return sub_1A6332AA4();
      }
      else
      {
        sub_1A633299C();
        swift_allocObject();
        sub_1A633296C();
        if ((unint64_t)a2 >= 0x7FFFFFFF)
        {
          sub_1A6332AE0();
          result = swift_allocObject();
          *(_QWORD *)(result + 16) = 0;
          *(_QWORD *)(result + 24) = a2;
        }
        else
        {
          return a2 << 32;
        }
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t dispatch thunk of DemoDataProviderType.demoData(named:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t type metadata accessor for DemoDataProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for DemoDataProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DemoDataProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

unint64_t sub_1A6241C90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE846D28;
  if (!qword_1EE846D28)
  {
    v1 = sub_1A6334A60();
    result = MEMORY[0x1A85BEED0](MEMORY[0x1E0DE9B88], v1);
    atomic_store(result, (unint64_t *)&qword_1EE846D28);
  }
  return result;
}

unint64_t sub_1A6241CD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE846D38;
  if (!qword_1EE846D38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE846D30);
    result = MEMORY[0x1A85BEED0](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EE846D38);
  }
  return result;
}

uint64_t ResponseType.init(from:)@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  void *v7;
  Swift::String v8;
  char v9;
  _QWORD v11[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_0_28();
  sub_1A6335BD0();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    OUTLINED_FUNCTION_0_28();
    v5 = sub_1A6335AD4();
    v7 = v6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    v8._countAndFlagsBits = v5;
    v8._object = v7;
    ResponseType.init(rawValue:)(v8);
    v9 = v11[0];
    if (LOBYTE(v11[0]) == 9)
      v9 = 8;
    *a2 = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

WeatherDaemon::ResponseType_optional __swiftcall ResponseType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  WeatherDaemon::ResponseType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A6335918();
  result.value = swift_bridgeObjectRelease();
  v5 = 9;
  if (v3 < 9)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ResponseType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A6241E64 + 4 * byte_1A633A628[*v0]))(0x7265746C656873, 0xE700000000000000);
}

uint64_t sub_1A6241E64()
{
  return 0x6574617563617665;
}

uint64_t sub_1A6241E7C()
{
  return 0x65726170657270;
}

uint64_t sub_1A6241EA0()
{
  return 0x64696F7661;
}

uint64_t sub_1A6241EB4()
{
  return 0x726F74696E6F6DLL;
}

uint64_t sub_1A6241EC8()
{
  return 0x737365737361;
}

uint64_t sub_1A6241EDC()
{
  return 0x7261656C436C6C61;
}

uint64_t sub_1A6241EF4()
{
  return 1701736302;
}

void sub_1A6241F04(char *a1)
{
  sub_1A62444F4(*a1);
}

unint64_t sub_1A6241F14()
{
  unint64_t result;

  result = qword_1EE846D48;
  if (!qword_1EE846D48)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for ResponseType, &type metadata for ResponseType);
    atomic_store(result, (unint64_t *)&qword_1EE846D48);
  }
  return result;
}

void sub_1A6241F50()
{
  unsigned __int8 *v0;

  sub_1A62DE21C(*v0);
}

void sub_1A6241F58(uint64_t a1)
{
  char *v1;

  sub_1A61F4D8C(a1, *v1);
}

void sub_1A6241F60(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1A61F5870(a1, *v1);
}

WeatherDaemon::ResponseType_optional sub_1A6241F68(Swift::String *a1)
{
  return ResponseType.init(rawValue:)(*a1);
}

uint64_t sub_1A6241F74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ResponseType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A6241F98@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return ResponseType.init(from:)(a1, a2);
}

uint64_t sub_1A6241FAC()
{
  sub_1A6242174();
  return sub_1A63354BC();
}

void sub_1A6241FF8(_BYTE *a1@<X8>)
{
  static ResponseType.read(from:)(a1);
}

void sub_1A624200C()
{
  ResponseType.write(to:)();
}

uint64_t getEnumTagSinglePayload for ResponseType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 8) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v5 = v6 - 9;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1A62420F4 + 4 * byte_1A633A636[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1A6242128 + 4 * byte_1A633A631[v4]))();
}

uint64_t sub_1A6242128(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6242130(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6242138);
  return result;
}

uint64_t sub_1A6242144(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A624214CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1A6242150(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6242158(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ResponseType()
{
  return &type metadata for ResponseType;
}

unint64_t sub_1A6242174()
{
  unint64_t result;

  result = qword_1EE846D50;
  if (!qword_1EE846D50)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for ResponseType, &type metadata for ResponseType);
    atomic_store(result, (unint64_t *)&qword_1EE846D50);
  }
  return result;
}

uint64_t HourlyForecast.metadata.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A61CD678(a1, v1);
}

uint64_t (*HourlyForecast.metadata.modify())()
{
  return nullsub_1;
}

void HourlyForecast.hours.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_1_18() + 20);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*HourlyForecast.hours.modify())(_QWORD)
{
  OUTLINED_FUNCTION_1_18();
  return nullsub_1;
}

uint64_t sub_1A624221C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x617461646174656DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1A6335ABC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7372756F68 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1A6335ABC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A6242300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A624221C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A6242324()
{
  sub_1A6189E34();
  return sub_1A6335C18();
}

uint64_t sub_1A624234C()
{
  sub_1A6189E34();
  return sub_1A6335C24();
}

void sub_1A6242374()
{
  static HourlyForecast.read(from:)();
}

void sub_1A6242388()
{
  HourlyForecast.write(to:)();
}

uint64_t sub_1A624239C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = type metadata accessor for Metadata();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

void sub_1A6242414(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = type metadata accessor for Metadata();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    OUTLINED_FUNCTION_3_1();
  }
}

unint64_t sub_1A6242484()
{
  unint64_t result;

  result = qword_1EE846D58;
  if (!qword_1EE846D58)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633A91C, &type metadata for HourlyForecast.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE846D58);
  }
  return result;
}

uint64_t dispatch thunk of ChannelMapServiceType.channelMap(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t type metadata accessor for ChannelMapService()
{
  return objc_opt_self();
}

uint64_t sub_1A62424E8()
{
  void *v0;
  uint64_t v1;

  sub_1A6334CDC();
  sub_1A6334D24();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE845EA0);
  sub_1A6334EA4();
  swift_bridgeObjectRelease();
  swift_retain();
  v0 = (void *)sub_1A6334DD8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846D60);
  v1 = sub_1A6334E20();
  swift_release();
  swift_release();
  swift_release();

  return v1;
}

uint64_t sub_1A62425C8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  sub_1A6334D18();
  a2[3] = &type metadata for CloudChannelMap;
  a2[4] = &off_1E5005760;
  *a2 = v3;
  return swift_retain();
}

uint64_t sub_1A6242620()
{
  return sub_1A62424E8();
}

void sub_1A6242640()
{
  sub_1A61F9C00();
}

uint64_t sub_1A6242670@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1A62425C8(a1, a2);
}

uint64_t initializeBufferWithCopyOfBuffer for WDSFlatbufferUnsupported(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t destroy for WDSFlatbufferUnsupported()
{
  return swift_release();
}

_QWORD *assignWithCopy for WDSFlatbufferUnsupported(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for WDSFlatbufferUnsupported(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for WDSFlatbufferUnsupported(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 24))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WDSFlatbufferUnsupported(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for WDSFlatbufferUnsupported()
{
  return &type metadata for WDSFlatbufferUnsupported;
}

uint64_t sub_1A624280C()
{
  return swift_retain();
}

uint64_t sub_1A6242838@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = nullsub_1();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

unint64_t sub_1A6242864()
{
  unint64_t result;

  result = qword_1EE846D68;
  if (!qword_1EE846D68)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633AA0C, &type metadata for WDSFlatbufferUnsupported);
    atomic_store(result, (unint64_t *)&qword_1EE846D68);
  }
  return result;
}

ValueMetadata *type metadata accessor for WDSFlatbufferUnsupported.Errors()
{
  return &type metadata for WDSFlatbufferUnsupported.Errors;
}

WeatherDaemon::WeatherProduct_optional __swiftcall WeatherProduct.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  WeatherDaemon::WeatherProduct_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A6335918();
  result.value = swift_bridgeObjectRelease();
  v5 = 13;
  if (v3 < 0xD)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_1A624290C()
{
  unsigned __int8 *v0;

  sub_1A62DE228(*v0);
}

uint64_t sub_1A6242914(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1A61F5010(a1, *v1);
}

WeatherDaemon::WeatherProduct_optional sub_1A624291C(Swift::String *a1)
{
  return WeatherProduct.init(rawValue:)(*a1);
}

uint64_t sub_1A6242928@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = WeatherProduct.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A624294C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  if (qword_1ED21D318 != -1)
    swift_once();
  v8 = sub_1A6334F04();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED22A3C0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v9 = sub_1A6334EEC();
  v10 = sub_1A633569C();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    *(_DWORD *)v11 = 136446466;
    sub_1A6334CDC();
    sub_1A61A6A1C(a1, a2, &v15);
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2082;
    sub_1A6334CDC();
    sub_1A61A6A1C(a3, a4, &v15);
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v9, v10, "Fetching AQI scale for name: %{public}s with language: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_0_5();
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A61F8560();
  v13 = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

void static NextHourForecastDescriptor.name.getter()
{
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_53();
}

void static NextHourForecastDescriptor.name.setter()
{
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_1_8();
}

uint64_t (*static NextHourForecastDescriptor.name.modify())()
{
  OUTLINED_FUNCTION_0_11();
  return j__swift_endAccess;
}

uint64_t sub_1A6242C4C()
{
  uint64_t result;

  sub_1A6334CDC();
  sub_1A63353F0();
  result = swift_bridgeObjectRelease();
  qword_1ED21C8C0 = 0x2E312E312E30;
  *(_QWORD *)algn_1ED21C8C8 = 0xE600000000000000;
  return result;
}

void static NextHourForecastDescriptor.version.getter()
{
  if (qword_1ED21C8D0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_53();
}

void static NextHourForecastDescriptor.version.setter()
{
  if (qword_1ED21C8D0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_1_8();
}

uint64_t (*static NextHourForecastDescriptor.version.modify())()
{
  if (qword_1ED21C8D0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  return j_j__swift_endAccess;
}

ValueMetadata *type metadata accessor for NextHourForecastDescriptor()
{
  return &type metadata for NextHourForecastDescriptor;
}

void sub_1A6242E10(unsigned __int8 *a1, char *a2)
{
  sub_1A6244410(*a1, *a2);
}

unint64_t sub_1A6242E20()
{
  unint64_t result;

  result = qword_1EE846D80;
  if (!qword_1EE846D80)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for PressureTrend, &type metadata for PressureTrend);
    atomic_store(result, (unint64_t *)&qword_1EE846D80);
  }
  return result;
}

void sub_1A6242E5C()
{
  sub_1A62DE234();
}

uint64_t sub_1A6242E64(uint64_t a1)
{
  char *v1;

  return sub_1A61F4D24(a1, *v1);
}

void sub_1A6242E6C()
{
  sub_1A61F5888();
}

WeatherDaemon::PressureTrend_optional sub_1A6242E74(Swift::String *a1)
{
  return PressureTrend.init(rawValue:)(*a1);
}

void sub_1A6242E80(_BYTE *a1@<X8>)
{
  static PressureTrend.read(from:)(a1);
}

void sub_1A6242E94()
{
  PressureTrend.write(to:)();
}

uint64_t dispatch thunk of InterpolationFinalizerType.finalize(accumulator:a:b:c:d:endDate:clampRange:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(void))(a11 + 24))();
}

uint64_t sub_1A6242EC4()
{
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1A6242EE0()
{
  return 0;
}

uint64_t sub_1A6242EF0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A6242EC4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1A6242F18()
{
  return sub_1A61C6300();
}

uint64_t sub_1A6242F30@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A61DC900();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1A6242F58()
{
  sub_1A624306C();
  return sub_1A6335C18();
}

uint64_t sub_1A6242F80()
{
  sub_1A624306C();
  return sub_1A6335C24();
}

uint64_t DataUnavailable.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED219F28);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A624306C();
  sub_1A6335BF4();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1A624306C()
{
  unint64_t result;

  result = qword_1ED219EC0;
  if (!qword_1ED219EC0)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633AF44, &type metadata for DataUnavailable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED219EC0);
  }
  return result;
}

uint64_t DataUnavailable.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_1A62430CC(uint64_t a1)
{
  return DataUnavailable.init(from:)(a1);
}

uint64_t sub_1A62430E0(_QWORD *a1)
{
  return DataUnavailable.encode(to:)(a1);
}

uint64_t sub_1A62430F4()
{
  return static DataUnavailable.read(from:)();
}

uint64_t sub_1A6243108()
{
  return DataUnavailable.write(to:)();
}

ValueMetadata *type metadata accessor for DataUnavailable()
{
  return &type metadata for DataUnavailable;
}

ValueMetadata *type metadata accessor for DataUnavailable.CodingKeys()
{
  return &type metadata for DataUnavailable.CodingKeys;
}

unint64_t sub_1A6243140()
{
  unint64_t result;

  result = qword_1ED219ED0;
  if (!qword_1ED219ED0)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633AEF4, &type metadata for DataUnavailable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED219ED0);
  }
  return result;
}

unint64_t sub_1A6243180()
{
  unint64_t result;

  result = qword_1ED219EC8;
  if (!qword_1ED219EC8)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633AF1C, &type metadata for DataUnavailable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED219EC8);
  }
  return result;
}

void sub_1A62431BC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x64757469676E6F6CLL;
  else
    v3 = 0x656475746974616CLL;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xE900000000000065;
  if ((a2 & 1) != 0)
    v5 = 0x64757469676E6F6CLL;
  else
    v5 = 0x656475746974616CLL;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000065;
  else
    v6 = 0xE800000000000000;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_6_15();
  else
    OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_3_1();
}

void sub_1A6243244(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1751607656;
  else
    v3 = 7827308;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1751607656;
  else
    v5 = 7827308;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_6_15();
  else
    OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_3_1();
}

void sub_1A62432B4(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6E656D6563616C70;
  else
    v3 = 0x73656C6369747261;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xE900000000000074;
  if ((a2 & 1) != 0)
    v5 = 0x6E656D6563616C70;
  else
    v5 = 0x73656C6369747261;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000074;
  else
    v6 = 0xE800000000000000;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_6_15();
  else
    OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_3_1();
}

void sub_1A6243338(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A6243378()
{
  uint64_t v0;
  unsigned __int8 v1;

  OUTLINED_FUNCTION_46_3();
  return ((uint64_t (*)(uint64_t))((char *)sub_1A6243434 + 4 * byte_1A633AFA0[v1]))(v0 + 655360);
}

void sub_1A6243434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_46_3();
  if (v2 == v1 + 655360 && v0 == 0xEE00746E65637365)
    OUTLINED_FUNCTION_6_15();
  else
    OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_3_1();
}

void sub_1A6243500(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A624355C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A62435CC + 4 * byte_1A633AFAD[a2]))(0x726568676968);
}

void sub_1A62435CC(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x726568676968 && v1 == 0xE600000000000000)
    OUTLINED_FUNCTION_37_3();
  else
    OUTLINED_FUNCTION_2_22();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_3_1();
}

void sub_1A6243658(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A62436A8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A624370C + 4 * byte_1A633AFB7[a2]))(0x796C656B696CLL);
}

void sub_1A624370C(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x796C656B696CLL && v1 == 0xE600000000000000)
    OUTLINED_FUNCTION_6_15();
  else
    OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_3_1();
}

void sub_1A6243780(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A62437D0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A6243834 + 4 * byte_1A633AFC1[a2]))(0x657265766573);
}

void sub_1A6243834(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x657265766573 && v1 == 0xE600000000000000)
    OUTLINED_FUNCTION_6_15();
  else
    OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_3_1();
}

void sub_1A62438A8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A6243904(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A6243964 + 4 * byte_1A633AFCB[a2]))(0x6465746365707865);
}

void sub_1A6243964(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x6465746365707865 && v1 == 0xE800000000000000)
    OUTLINED_FUNCTION_37_3();
  else
    OUTLINED_FUNCTION_2_22();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_3_1();
}

uint64_t sub_1A62439E0(uint64_t a1, uint64_t a2)
{
  return sub_1A618F958(a1, a2, DataSet.rawValue.getter);
}

void sub_1A62439EC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_48_2();
  if (v0 != v1)
    OUTLINED_FUNCTION_2_22();
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_29_1();
}

void sub_1A6243A40()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_48_2();
  if (v0 != v1)
    OUTLINED_FUNCTION_2_22();
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_29_1();
}

void sub_1A6243AAC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_48_2();
  if (v0 != v1)
    OUTLINED_FUNCTION_2_22();
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_29_1();
}

void sub_1A6243B10(char a1, char a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v2 = 1702125924;
  if (a1)
  {
    OUTLINED_FUNCTION_22_8();
    if (v4 == 1)
      v7 = v5;
    else
      v7 = 0xD000000000000010;
    if (v4 == 1)
      v8 = v6;
    else
      v8 = (v3 - 32) | 0x8000000000000000;
  }
  else
  {
    v8 = 0xE400000000000000;
    v7 = 1702125924;
  }
  if (a2)
  {
    OUTLINED_FUNCTION_22_8();
    OUTLINED_FUNCTION_30_5();
    if (v10 == 1)
      v2 = v11;
    else
      v2 = 0xD000000000000010;
    if (v10 == 1)
      v13 = v12;
    else
      v13 = v9;
  }
  else
  {
    v13 = 0xE400000000000000;
  }
  if (v7 == v2 && v8 == v13)
    OUTLINED_FUNCTION_6_15();
  else
    OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_3_1();
}

void sub_1A6243BC4(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x74617265706D6574;
  else
    v3 = 0x7469706963657270;
  if (v2)
    v4 = 0xED00006E6F697461;
  else
    v4 = 0xEB00000000657275;
  if ((a2 & 1) != 0)
    v5 = 0x74617265706D6574;
  else
    v5 = 0x7469706963657270;
  if ((a2 & 1) != 0)
    v6 = 0xEB00000000657275;
  else
    v6 = 0xED00006E6F697461;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_6_15();
  else
    OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_3_1();
}

void sub_1A6243C58(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A6243CA0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A6243D24 + 4 * byte_1A633AFD8[a2]))(0x646578696DLL);
}

void sub_1A6243D24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 == 0x646578696DLL && v1 == v2)
    OUTLINED_FUNCTION_6_15();
  else
    OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_3_1();
}

uint64_t sub_1A6243DB8(uint64_t a1, uint64_t a2)
{
  return sub_1A618F958(a1, a2, PlacementLocation.rawValue.getter);
}

uint64_t sub_1A6243DC4(uint64_t a1, uint64_t a2)
{
  return sub_1A618F958(a1, a2, EventSignificance.rawValue.getter);
}

void sub_1A6243DD0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A6243E08(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A6243E70 + 4 * byte_1A633AFE8[a2]))(17742);
}

void sub_1A6243E70(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 17742 && v1 == 0xE200000000000000)
    OUTLINED_FUNCTION_6_15();
  else
    OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_3_1();
}

void sub_1A6243EE4(char a1, char a2)
{
  uint64_t v2;
  char v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  unint64_t v9;

  v2 = 0x31762F697061;
  if (a1)
  {
    OUTLINED_FUNCTION_63_0();
    if (v3)
      v5 = 0x32762F697061;
    else
      v5 = 13174;
    if (v3)
      v6 = v4;
    else
      v6 = 0xE200000000000000;
  }
  else
  {
    v6 = 0xE600000000000000;
    v5 = 0x31762F697061;
  }
  if (a2)
  {
    OUTLINED_FUNCTION_63_0();
    if (v7)
      v2 = 0x32762F697061;
    else
      v2 = 13174;
    if (v7)
      v9 = v8;
    else
      v9 = 0xE200000000000000;
  }
  else
  {
    v9 = 0xE600000000000000;
  }
  if (v5 == v2 && v6 == v9)
    OUTLINED_FUNCTION_6_15();
  else
    OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_3_1();
}

void sub_1A6243F9C(char a1, char a2)
{
  uint64_t v2;
  char v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  unint64_t v9;

  v2 = 0x746867696CLL;
  if (a1)
  {
    OUTLINED_FUNCTION_63_0();
    if (v3)
      v5 = 0x6D756964656DLL;
    else
      v5 = 0x7976616568;
    if (v3)
      v6 = v4;
    else
      v6 = 0xE500000000000000;
  }
  else
  {
    v6 = 0xE500000000000000;
    v5 = 0x746867696CLL;
  }
  if (a2)
  {
    OUTLINED_FUNCTION_63_0();
    if (v7)
      v2 = 0x6D756964656DLL;
    else
      v2 = 0x7976616568;
    if (v7)
      v9 = v8;
    else
      v9 = 0xE500000000000000;
  }
  else
  {
    v9 = 0xE500000000000000;
  }
  if (v5 == v2 && v6 == v9)
    OUTLINED_FUNCTION_6_15();
  else
    OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_3_1();
}

void sub_1A6244064(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A62440B4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A6244108 + 4 * byte_1A633AFF4[a2]))(6516329);
}

void sub_1A6244108(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 6516329 && v1 == 0xE300000000000000)
    OUTLINED_FUNCTION_6_15();
  else
    OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_3_1();
}

void sub_1A624416C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6172676F7263696DLL;
  else
    v3 = 6451312;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xEF334D726550736DLL;
  if ((a2 & 1) != 0)
    v5 = 0x6172676F7263696DLL;
  else
    v5 = 6451312;
  if ((a2 & 1) != 0)
    v6 = 0xEF334D726550736DLL;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_6_15();
  else
    OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_3_1();
}

void sub_1A62441F0(char a1, char a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v2 = 0x7372756F68;
  if (a1)
  {
    OUTLINED_FUNCTION_33_3();
    if (v4 == 1)
      v7 = v6;
    else
      v7 = 0xD000000000000014;
    if (v4 == 1)
      v8 = v5;
    else
      v8 = (v3 - 32) | 0x8000000000000000;
  }
  else
  {
    v8 = 0xE500000000000000;
    v7 = 0x7372756F68;
  }
  if (a2)
  {
    OUTLINED_FUNCTION_33_3();
    OUTLINED_FUNCTION_30_5();
    if (v10 == 1)
      v2 = v12;
    else
      v2 = 0xD000000000000014;
    if (v10 == 1)
      v13 = v11;
    else
      v13 = v9;
  }
  else
  {
    v13 = 0xE500000000000000;
  }
  if (v7 == v2 && v8 == v13)
    OUTLINED_FUNCTION_6_15();
  else
    OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_3_1();
}

void sub_1A62442AC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7469706963657270;
  else
    v3 = 0x74617265706D6574;
  if (v2)
    v4 = 0xEB00000000657275;
  else
    v4 = 0xED00006E6F697461;
  if ((a2 & 1) != 0)
    v5 = 0x7469706963657270;
  else
    v5 = 0x74617265706D6574;
  if ((a2 & 1) != 0)
    v6 = 0xED00006E6F697461;
  else
    v6 = 0xEB00000000657275;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_6_15();
  else
    OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_3_1();
}

void sub_1A6244340(unsigned __int8 a1, char a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = 0x7961646F74;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x68746E6F6DLL;
    else
      v4 = 0x6B6165727473;
    if (v3 == 1)
      v5 = 0xE500000000000000;
    else
      v5 = 0xE600000000000000;
  }
  else
  {
    v5 = 0xE500000000000000;
    v4 = 0x7961646F74;
  }
  if (a2)
  {
    if (a2 == 1)
      v2 = 0x68746E6F6DLL;
    else
      v2 = 0x6B6165727473;
    if (a2 == 1)
      v6 = 0xE500000000000000;
    else
      v6 = 0xE600000000000000;
  }
  else
  {
    v6 = 0xE500000000000000;
  }
  if (v4 == v2 && v5 == v6)
    OUTLINED_FUNCTION_6_15();
  else
    OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_3_1();
}

void sub_1A6244410(unsigned __int8 a1, char a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = 0x676E69736972;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x676E696C6C6166;
    else
      v4 = 0x796461657473;
    if (v3 == 1)
      v5 = 0xE700000000000000;
    else
      v5 = 0xE600000000000000;
  }
  else
  {
    v5 = 0xE600000000000000;
    v4 = 0x676E69736972;
  }
  if (a2)
  {
    if (a2 == 1)
      v2 = 0x676E696C6C6166;
    else
      v2 = 0x796461657473;
    if (a2 == 1)
      v6 = 0xE700000000000000;
    else
      v6 = 0xE600000000000000;
  }
  else
  {
    v6 = 0xE600000000000000;
  }
  if (v4 == v2 && v5 == v6)
    OUTLINED_FUNCTION_6_15();
  else
    OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_3_1();
}

uint64_t sub_1A62444E8(uint64_t a1, uint64_t a2)
{
  return sub_1A618F958(a1, a2, ConditionCode.rawValue.getter);
}

void sub_1A62444F4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A6244544(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A6244600 + 4 * byte_1A633B001[a2]))(0x6574617563617665);
}

void sub_1A6244600(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x6574617563617665 && v1 == 0xE800000000000000)
    OUTLINED_FUNCTION_6_15();
  else
    OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_3_1();
}

void sub_1A62446CC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6867696E7265766FLL;
  else
    v3 = 0x656D6974796164;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE900000000000074;
  if ((a2 & 1) != 0)
    v5 = 0x6867696E7265766FLL;
  else
    v5 = 0x656D6974796164;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000074;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_6_15();
  else
    OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_3_1();
}

void sub_1A6244750(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A6244790(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A62447DC + 4 * byte_1A633B00E[a2]))(7827308);
}

void sub_1A62447DC(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 7827308 && v1 == 0xE300000000000000)
    OUTLINED_FUNCTION_6_15();
  else
    OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_3_1();
}

void sub_1A6244838(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A6244888(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A62448EC + 4 * byte_1A633B016[a2]))(0x6E6F6974617473);
}

void sub_1A62448EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 == 0x6E6F6974617473 && v1 == v2)
    OUTLINED_FUNCTION_6_15();
  else
    OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_3_1();
}

void sub_1A6244964(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  if ((a1 & 1) != 0)
    v2 = 7827310;
  else
    v2 = 7954788;
  if ((a2 & 1) != 0)
    v3 = 7827310;
  else
    v3 = 7954788;
  if (v2 != v3)
    OUTLINED_FUNCTION_2_22();
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_29_1();
}

void sub_1A62449C4(char a1, char a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  unint64_t v13;

  v2 = 0xEF73636974736974;
  v3 = 0x617453796C696164;
  if (a1)
  {
    OUTLINED_FUNCTION_15_14();
    if (v5 == 1)
      v8 = v6;
    else
      v8 = 0xD000000000000011;
    if (v5 == 1)
      v9 = v7;
    else
      v9 = (v4 - 32) | 0x8000000000000000;
  }
  else
  {
    v8 = 0x617453796C696164;
    v9 = 0xEF73636974736974;
  }
  if (a2)
  {
    OUTLINED_FUNCTION_15_14();
    OUTLINED_FUNCTION_30_5();
    if (v11 == 1)
      v3 = v12;
    else
      v3 = 0xD000000000000011;
    if (v11 == 1)
      v2 = v13;
    else
      v2 = v10;
  }
  if (v8 == v3 && v9 == v2)
    OUTLINED_FUNCTION_37_3();
  else
    OUTLINED_FUNCTION_2_22();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_3_1();
}

void sub_1A6244AA4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_48_2();
  if (v0 != v1)
    OUTLINED_FUNCTION_2_22();
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_29_1();
}

void sub_1A6244B00(uint64_t a1, uint64_t a2)
{
  sub_1A6244B18(a1, a2, (uint64_t (*)(void))sub_1A62C470C);
}

void sub_1A6244B0C(uint64_t a1, uint64_t a2)
{
  sub_1A6244B18(a1, a2, (uint64_t (*)(void))WeatherDataRequest.rawValue.getter);
}

void sub_1A6244B18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = a3();
  v7 = v6;
  if (v5 == ((uint64_t (*)(uint64_t))a3)(a2) && v7 == v8)
    OUTLINED_FUNCTION_6_15();
  else
    OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_3_1();
}

BOOL sub_1A6244B80(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

void sub_1A6244B8C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A6244BF8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(void))((char *)sub_1A6244C40 + 4 * byte_1A633B01E[a2]))();
}

void sub_1A6244C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  if (a1 == a3 && v3 == 0xEF78616D5F657275)
    OUTLINED_FUNCTION_37_3();
  else
    OUTLINED_FUNCTION_2_22();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_3_1();
}

uint64_t sub_1A6244CA4(uint64_t a1, uint64_t a2)
{
  return sub_1A618F958(a1, a2, Weather.CodingKeys.rawValue.getter);
}

void sub_1A6244CB4(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x74617265706D6574;
  else
    v3 = 1920298856;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xEB00000000657275;
  if ((a2 & 1) != 0)
    v5 = 0x74617265706D6574;
  else
    v5 = 1920298856;
  if ((a2 & 1) != 0)
    v6 = 0xEB00000000657275;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_6_15();
  else
    OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_3_1();
}

void sub_1A6244D34(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x68746E6F6DLL;
  else
    v3 = 0x6E6F4D664F796164;
  if (v2)
    v4 = 0xEA00000000006874;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x68746E6F6DLL;
  else
    v5 = 0x6E6F4D664F796164;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xEA00000000006874;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_6_15();
  else
    OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_3_1();
}

void sub_1A6244DB4(unsigned __int8 a1, char a2)
{
  unint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  unint64_t v8;

  v2 = 7954788;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0xD000000000000010;
    else
      v4 = 0x7469706963657270;
    if (v3 == 1)
      v5 = 0x80000001A6348D90;
    else
      v5 = 0xED00006E6F697461;
  }
  else
  {
    v5 = 0xE300000000000000;
    v4 = 7954788;
  }
  if (a2)
  {
    OUTLINED_FUNCTION_30_5();
    if (v7 == 1)
      v2 = 0xD000000000000010;
    else
      v2 = 0x7469706963657270;
    if (v7 == 1)
      v8 = v6;
    else
      v8 = 0xED00006E6F697461;
  }
  else
  {
    v8 = 0xE300000000000000;
  }
  if (v4 == v2 && v5 == v8)
    OUTLINED_FUNCTION_6_15();
  else
    OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_3_1();
}

void sub_1A6244EA0(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1A6244F00@<X0>(unsigned __int8 a1@<W1>, uint64_t a2@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A6244F4C + 4 * byte_1A633B026[a1]))(a2 + 6);
}

void sub_1A6244F4C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (a1 == a2 + 6 && v3 == ((v2 - 32) | 0x8000000000000000))
    OUTLINED_FUNCTION_6_15();
  else
    OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_3_1();
}

void sub_1A6244FA8(unsigned __int8 a1, char a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int v8;

  v2 = 0xEF72656469766F72;
  v3 = 0x50746C7561666564;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000013;
    else
      v5 = 0;
    if (v4 == 1)
      v6 = 0x80000001A6348910;
    else
      v6 = 0xE000000000000000;
  }
  else
  {
    v5 = 0x50746C7561666564;
    v6 = 0xEF72656469766F72;
  }
  if (a2)
  {
    OUTLINED_FUNCTION_30_5();
    if (v8 == 1)
      v3 = 0xD000000000000013;
    else
      v3 = 0;
    if (v8 == 1)
      v2 = v7;
    else
      v2 = 0xE000000000000000;
  }
  if (v5 == v3 && v6 == v2)
    OUTLINED_FUNCTION_37_3();
  else
    OUTLINED_FUNCTION_2_22();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_3_1();
}

void sub_1A6245088(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A62450D8()
{
  unsigned __int8 v0;

  OUTLINED_FUNCTION_21_8();
  return ((uint64_t (*)(void))((char *)sub_1A6245164 + 4 * byte_1A633B02F[v0]))();
}

void sub_1A6245164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_18_9();
  if (v2 == v3 && v0 == v1)
    OUTLINED_FUNCTION_6_15();
  else
    OUTLINED_FUNCTION_0_29();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_399();
  OUTLINED_FUNCTION_3_1();
}

BOOL static Metadata.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  char v39;
  _BOOL8 result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  char v54;
  uint64_t v55;
  int v56;
  int v57;
  _BOOL4 v58;
  uint64_t v59;
  char v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  int *v70;
  uint64_t v71;

  v5 = OUTLINED_FUNCTION_6();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_36();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846C50);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_2();
  v11 = v10 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v68 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v68 - v19;
  if ((sub_1A6332BE8() & 1) == 0)
    return 0;
  v71 = v6;
  v21 = a2;
  v22 = OUTLINED_FUNCTION_402();
  if ((sub_1A6332BE8() & 1) == 0)
    return 0;
  v23 = *(int *)(v22 + 24);
  v69 = a1;
  sub_1A618752C(a1 + v23, (uint64_t)v20);
  v70 = (int *)v22;
  sub_1A618752C(v21 + *(int *)(v22 + 24), (uint64_t)v17);
  v24 = v11 + *(int *)(v7 + 48);
  sub_1A618752C((uint64_t)v20, v11);
  sub_1A618752C((uint64_t)v17, v24);
  OUTLINED_FUNCTION_5_15(v11);
  v25 = v21;
  if (v26)
  {
    OUTLINED_FUNCTION_6_13((uint64_t)v17);
    OUTLINED_FUNCTION_6_13((uint64_t)v20);
    OUTLINED_FUNCTION_5_15(v24);
    if (v26)
    {
      sub_1A61DB454(v11, &qword_1ED21D330);
      goto LABEL_13;
    }
LABEL_11:
    sub_1A61DB454(v11, &qword_1EE846C50);
    return 0;
  }
  sub_1A618752C(v11, (uint64_t)v14);
  OUTLINED_FUNCTION_5_15(v24);
  if (v26)
  {
    sub_1A61DB454((uint64_t)v17, &qword_1ED21D330);
    sub_1A61DB454((uint64_t)v20, &qword_1ED21D330);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v14, v5);
    goto LABEL_11;
  }
  v27 = v71;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 32))(v2, v24, v5);
  sub_1A6189BFC(&qword_1EE846C58, MEMORY[0x1E0CB08B8]);
  v28 = sub_1A63352DC();
  v29 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
  v29(v2, v5);
  OUTLINED_FUNCTION_6_13((uint64_t)v17);
  OUTLINED_FUNCTION_6_13((uint64_t)v20);
  v29((uint64_t)v14, v5);
  OUTLINED_FUNCTION_6_13(v11);
  if ((v28 & 1) == 0)
    return 0;
LABEL_13:
  v30 = v25;
  v32 = v69;
  v31 = v70;
  if (*(_QWORD *)(v69 + v70[7]) != *(_QWORD *)(v30 + v70[7])
    || *(double *)(v69 + v70[8]) != *(double *)(v30 + v70[8])
    || *(double *)(v69 + v70[9]) != *(double *)(v30 + v70[9]))
  {
    return 0;
  }
  v33 = v70[10];
  v34 = v30;
  v35 = *(_QWORD *)(v30 + v33 + 8);
  if (!*(_QWORD *)(v69 + v33 + 8))
  {
    if (v35)
      return 0;
LABEL_25:
    OUTLINED_FUNCTION_20_13();
    if (v43)
    {
      if (!v41)
        return 0;
      OUTLINED_FUNCTION_19_10(v42);
      if (v26)
        v46 = v44 == v45;
      else
        v46 = 0;
      if (!v46)
      {
        v47 = OUTLINED_FUNCTION_2_22();
        result = 0;
        if ((v47 & 1) == 0)
          return result;
      }
    }
    else if (v41)
    {
      return 0;
    }
    OUTLINED_FUNCTION_20_13();
    if (v50)
    {
      if (!v48)
        return 0;
      OUTLINED_FUNCTION_19_10(v49);
      if (v26)
        v53 = v51 == v52;
      else
        v53 = 0;
      if (!v53)
      {
        v54 = OUTLINED_FUNCTION_2_22();
        result = 0;
        if ((v54 & 1) == 0)
          return result;
      }
    }
    else if (v48)
    {
      return 0;
    }
    v55 = v31[13];
    v56 = *(unsigned __int8 *)(v32 + v55);
    v57 = *(unsigned __int8 *)(v34 + v55);
    if (v56 == 2)
    {
      if (v57 != 2)
        return 0;
    }
    else
    {
      result = 0;
      v58 = (v56 & 1) == 0;
      if (v57 == 2 || ((v58 ^ v57) & 1) == 0)
        return result;
    }
    v59 = v31[14];
    v60 = *(_BYTE *)(v32 + v59);
    v61 = *(unsigned __int8 *)(v34 + v59);
    if ((v60 & 1) != 0)
    {
      if (!v61)
        return 0;
    }
    else if ((v61 & 1) != 0)
    {
      return 0;
    }
    OUTLINED_FUNCTION_20_13();
    if (v64)
    {
      if (!v62)
        return 0;
      OUTLINED_FUNCTION_19_10(v63);
      v67 = v26 && v65 == v66;
      return v67 || (OUTLINED_FUNCTION_2_22() & 1) != 0;
    }
    return !v62;
  }
  if (!v35)
    return 0;
  OUTLINED_FUNCTION_19_10(v69 + v33);
  if (v26)
    v38 = v36 == v37;
  else
    v38 = 0;
  if (v38)
    goto LABEL_25;
  v39 = OUTLINED_FUNCTION_2_22();
  result = 0;
  if ((v39 & 1) != 0)
    goto LABEL_25;
  return result;
}

uint64_t Metadata.Units.rawValue.getter()
{
  return 109;
}

uint64_t Metadata.readTime.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_6();
  v0 = OUTLINED_FUNCTION_29_2();
  return OUTLINED_FUNCTION_4(v0, v1, v2, v3);
}

uint64_t (*Metadata.readTime.modify())(void)
{
  return nullsub_1;
}

uint64_t Metadata.expireTime.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_402();
  OUTLINED_FUNCTION_6();
  v0 = OUTLINED_FUNCTION_29_2();
  return OUTLINED_FUNCTION_4(v0, v1, v2, v3);
}

uint64_t (*Metadata.expireTime.modify())(_QWORD)
{
  OUTLINED_FUNCTION_402();
  return nullsub_1;
}

uint64_t Metadata.reportedTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_402() + 24);
  return sub_1A618752C(v3, a1);
}

uint64_t Metadata.reportedTime.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_402() + 24);
  return sub_1A618D2C8(a1, v3);
}

uint64_t (*Metadata.reportedTime.modify())(_QWORD)
{
  OUTLINED_FUNCTION_402();
  return nullsub_1;
}

uint64_t Metadata.version.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_402() + 28));
}

void Metadata.version.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + *(int *)(OUTLINED_FUNCTION_402() + 28)) = a1;
  OUTLINED_FUNCTION_29_1();
}

uint64_t (*Metadata.version.modify())(_QWORD)
{
  OUTLINED_FUNCTION_402();
  return nullsub_1;
}

uint64_t Metadata.latitude.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = OUTLINED_FUNCTION_402();
  *(double *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*Metadata.latitude.modify())(_QWORD)
{
  OUTLINED_FUNCTION_402();
  return nullsub_1;
}

uint64_t Metadata.longitude.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = OUTLINED_FUNCTION_402();
  *(double *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*Metadata.longitude.modify())(_QWORD)
{
  OUTLINED_FUNCTION_402();
  return nullsub_1;
}

void Metadata.language.getter()
{
  OUTLINED_FUNCTION_402();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_8_3();
  OUTLINED_FUNCTION_29_1();
}

void Metadata.language.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  OUTLINED_FUNCTION_402();
  OUTLINED_FUNCTION_16();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*Metadata.language.modify())(_QWORD)
{
  OUTLINED_FUNCTION_402();
  return nullsub_1;
}

void Metadata.providerName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  OUTLINED_FUNCTION_402();
  OUTLINED_FUNCTION_16();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*Metadata.providerName.modify())(_QWORD)
{
  OUTLINED_FUNCTION_402();
  return nullsub_1;
}

void Metadata.providerLogo.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  OUTLINED_FUNCTION_402();
  OUTLINED_FUNCTION_16();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*Metadata.providerLogo.modify())(_QWORD)
{
  OUTLINED_FUNCTION_402();
  return nullsub_1;
}

void Metadata.temporarilyUnavailable.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_402() + 52)) = a1;
  OUTLINED_FUNCTION_29_1();
}

uint64_t (*Metadata.temporarilyUnavailable.modify())(_QWORD)
{
  OUTLINED_FUNCTION_402();
  return nullsub_1;
}

void Metadata.units.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_402() + 56));
  OUTLINED_FUNCTION_29_1();
}

void Metadata.units.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_402() + 56)) = v2;
  OUTLINED_FUNCTION_29_1();
}

uint64_t (*Metadata.units.modify())(_QWORD)
{
  OUTLINED_FUNCTION_402();
  return nullsub_1;
}

void Metadata.attributionURL.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  OUTLINED_FUNCTION_402();
  OUTLINED_FUNCTION_16();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*Metadata.attributionURL.modify())(_QWORD)
{
  OUTLINED_FUNCTION_402();
  return nullsub_1;
}

uint64_t sub_1A6245A60(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  char v16;

  v2 = a1 == 0x656D695464616572 && a2 == 0xE800000000000000;
  if (v2 || (sub_1A6335ABC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6954657269707865 && a2 == 0xEA0000000000656DLL;
    if (v6 || (sub_1A6335ABC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x646574726F706572 && a2 == 0xEC000000656D6954;
      if (v7 || (sub_1A6335ABC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
        if (v8 || (sub_1A6335ABC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x656475746974616CLL && a2 == 0xE800000000000000;
          if (v9 || (sub_1A6335ABC() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065;
            if (v10 || (sub_1A6335ABC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x65676175676E616CLL && a2 == 0xE800000000000000;
              if (v11 || (sub_1A6335ABC() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                v12 = a1 == 0x72656469766F7270 && a2 == 0xEC000000656D614ELL;
                if (v12 || (sub_1A6335ABC() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else
                {
                  v13 = a1 == 0x72656469766F7270 && a2 == 0xEC0000006F676F4CLL;
                  if (v13 || (sub_1A6335ABC() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 8;
                  }
                  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A634A720 || (sub_1A6335ABC() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 9;
                  }
                  else
                  {
                    v14 = a1 == 0x7374696E75 && a2 == 0xE500000000000000;
                    if (v14 || (sub_1A6335ABC() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 10;
                    }
                    else if (a1 == 0x7475626972747461 && a2 == 0xEE004C52556E6F69)
                    {
                      swift_bridgeObjectRelease();
                      return 11;
                    }
                    else
                    {
                      v16 = sub_1A6335ABC();
                      swift_bridgeObjectRelease();
                      if ((v16 & 1) != 0)
                        return 11;
                      else
                        return 12;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1A6245F60()
{
  return 12;
}

uint64_t sub_1A6245F68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A6245A60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A6245F8C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A6245F60();
  *a1 = result;
  return result;
}

uint64_t sub_1A6245FB0()
{
  sub_1A6189BC0();
  return sub_1A6335C18();
}

uint64_t sub_1A6245FD8()
{
  sub_1A6189BC0();
  return sub_1A6335C24();
}

unint64_t sub_1A6246004()
{
  unint64_t result;

  result = qword_1EE846D88;
  if (!qword_1EE846D88)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for Metadata.Units, &type metadata for Metadata.Units);
    atomic_store(result, (unint64_t *)&qword_1EE846D88);
  }
  return result;
}

void sub_1A6246044(uint64_t a1@<X8>)
{
  static Metadata.read(from:)(a1);
}

void sub_1A6246058()
{
  Metadata.write(to:)();
}

uint64_t sub_1A624606C()
{
  return static Metadata.Units.read(from:)();
}

void sub_1A6246080()
{
  Metadata.Units.write(to:)();
}

char *initializeBufferWithCopyOfBuffer for Metadata(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A6332C24();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8(&a1[a3[5]], &a2[a3[5]], v7);
    v9 = a3[6];
    v10 = &a1[v9];
    v11 = &a2[v9];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v9], 1, v7))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v7);
    }
    v14 = a3[8];
    *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
    *(_QWORD *)&a1[v14] = *(_QWORD *)&a2[v14];
    v15 = a3[10];
    *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v18;
    v19 = a3[11];
    v20 = a3[12];
    v21 = &a1[v19];
    v22 = &a2[v19];
    v23 = *((_QWORD *)v22 + 1);
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *((_QWORD *)v21 + 1) = v23;
    v24 = &a1[v20];
    v25 = &a2[v20];
    v26 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v26;
    v27 = a3[14];
    a1[a3[13]] = a2[a3[13]];
    a1[v27] = a2[v27];
    v28 = a3[15];
    v29 = &a1[v28];
    v30 = &a2[v28];
    v31 = *((_QWORD *)v30 + 1);
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *((_QWORD *)v29 + 1) = v31;
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
  }
  return a1;
}

char *assignWithCopy for Metadata(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;

  v6 = sub_1A6332C24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  v9 = a3[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v9], 1, v6);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  v15 = a3[10];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v18 = a3[11];
  v19 = &a1[v18];
  v20 = &a2[v18];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v21 = a3[12];
  v22 = &a1[v21];
  v23 = &a2[v21];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  a1[a3[13]] = a2[a3[13]];
  a1[a3[14]] = a2[a3[14]];
  v24 = a3[15];
  v25 = &a1[v24];
  v26 = &a2[v24];
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for Metadata(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1A6332C24();
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(&a1[a3[5]], &a2[a3[5]], v6);
  v8 = a3[6];
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v8], 1, v6))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  v12 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];
  v13 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  v14 = a3[12];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  *(_OWORD *)&a1[v14] = *(_OWORD *)&a2[v14];
  v15 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  a1[v15] = a2[v15];
  *(_OWORD *)&a1[a3[15]] = *(_OWORD *)&a2[a3[15]];
  return a1;
}

char *assignWithTake for Metadata(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;

  v6 = sub_1A6332C24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  v9 = a3[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v9], 1, v6);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
LABEL_7:
  v15 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  *(_QWORD *)&a1[v15] = *(_QWORD *)&a2[v15];
  v16 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  v17 = &a1[v16];
  v18 = (uint64_t *)&a2[v16];
  v20 = *v18;
  v19 = v18[1];
  *(_QWORD *)v17 = v20;
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v21 = a3[11];
  v22 = &a1[v21];
  v23 = (uint64_t *)&a2[v21];
  v25 = *v23;
  v24 = v23[1];
  *(_QWORD *)v22 = v25;
  *((_QWORD *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  v26 = a3[12];
  v27 = &a1[v26];
  v28 = (uint64_t *)&a2[v26];
  v30 = *v28;
  v29 = v28[1];
  *(_QWORD *)v27 = v30;
  *((_QWORD *)v27 + 1) = v29;
  swift_bridgeObjectRelease();
  v31 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  a1[v31] = a2[v31];
  v32 = a3[15];
  v33 = &a1[v32];
  v34 = (uint64_t *)&a2[v32];
  v36 = *v34;
  v35 = v34[1];
  *(_QWORD *)v33 = v36;
  *((_QWORD *)v33 + 1) = v35;
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1A6246758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = OUTLINED_FUNCTION_6();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
LABEL_5:
    __swift_getEnumTagSinglePayload(v8, a2, v7);
    return;
  }
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v9;
    v8 = a1 + *(int *)(a3 + 24);
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_3_1();
}

void sub_1A6246800(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = OUTLINED_FUNCTION_6();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
LABEL_5:
    __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
    return;
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
  {
    v9 = v11;
    v10 = a1 + *(int *)(a4 + 24);
    goto LABEL_5;
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 40) + 8) = a2;
  OUTLINED_FUNCTION_3_1();
}

unint64_t sub_1A624689C()
{
  unint64_t result;

  result = qword_1EE846D90;
  if (!qword_1EE846D90)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633B3A8, &type metadata for Metadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE846D90);
  }
  return result;
}

void WeatherDataRequestOptions.timeZone.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_1_19();
  OUTLINED_FUNCTION_12_3(v0 + *(int *)(v1 + 20), v2, &qword_1ED21C368);
  OUTLINED_FUNCTION_29_1();
}

void WeatherDataRequestOptions.units.getter()
{
  _BYTE *v0;
  uint64_t v1;

  *v0 = *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_1_19() + 24));
  OUTLINED_FUNCTION_29_1();
}

void WeatherDataRequestOptions.countryCode.getter()
{
  OUTLINED_FUNCTION_3_17();
  sub_1A6334CDC();
  OUTLINED_FUNCTION_29_1();
}

void WeatherDataRequestOptions.locationOptions.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(int *)(OUTLINED_FUNCTION_1_19() + 32));
  v3 = *v2;
  LOWORD(v2) = *((_WORD *)v2 + 4);
  *(_QWORD *)v0 = v3;
  *(_WORD *)(v0 + 8) = (_WORD)v2;
  OUTLINED_FUNCTION_29_1();
}

void WeatherDataRequestOptions.cachingOptions.getter()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = *(_QWORD *)(v1 + *(int *)(OUTLINED_FUNCTION_1_19() + 36));
  OUTLINED_FUNCTION_29_1();
}

uint64_t WeatherDataRequestOptions.treatmentIdentifiers.getter()
{
  OUTLINED_FUNCTION_3_17();
  return sub_1A6334CDC();
}

void WeatherDataRequestOptions.dailyDateInterval.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_1_19();
  OUTLINED_FUNCTION_12_3(v0 + *(int *)(v1 + 44), v2, &qword_1ED21CAD8);
  OUTLINED_FUNCTION_29_1();
}

void WeatherDataRequestOptions.hourlyDateInterval.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_1_19();
  OUTLINED_FUNCTION_12_3(v0 + *(int *)(v1 + 48), v2, &qword_1ED21CAD8);
  OUTLINED_FUNCTION_29_1();
}

void WeatherDataRequestOptions.dailyRelativeRange.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_1_19();
  OUTLINED_FUNCTION_12_3(v0 + *(int *)(v1 + 52), v2, &qword_1ED21C0D0);
  OUTLINED_FUNCTION_29_1();
}

void WeatherDataRequestOptions.hourlyRelativeRange.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_1_19();
  OUTLINED_FUNCTION_12_3(v0 + *(int *)(v1 + 56), v2, &qword_1ED21C0F0);
  OUTLINED_FUNCTION_29_1();
}

void WeatherDataRequestOptions.marineHourlyRelativeRange.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_1_19();
  OUTLINED_FUNCTION_12_3(v0 + *(int *)(v1 + 60), v2, &qword_1ED21C100);
  OUTLINED_FUNCTION_29_1();
}

void WeatherDataRequestOptions.networkActivity.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_1_19();
  OUTLINED_FUNCTION_12_3(v0 + *(int *)(v1 + 64), v2, &qword_1ED21C748);
  OUTLINED_FUNCTION_29_1();
}

uint64_t WeatherDataRequestOptions.needsMarineData.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_3_17() + 68));
}

uint64_t WeatherDataRequestOptions.needsTwilightData.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_3_17() + 72));
}

uint64_t WeatherDataRequestOptions.preferredLanguages.getter()
{
  OUTLINED_FUNCTION_3_17();
  return sub_1A6334CDC();
}

void WeatherDataRequestOptions.init(language:timeZone:units:countryCode:locationOptions:cachingOptions:treatmentIdentifiers:dailyDateInterval:hourlyDateInterval:dailyRelativeRange:hourlyRelativeRange:marineHourlyRelativeRange:networkActivity:needsMarineData:needsTwilightData:preferredLanguages:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, char a18, uint64_t a19)
{
  char v22;
  uint64_t v23;
  __int16 v24;
  uint64_t v25;
  int *v26;
  _QWORD *v27;
  char *v28;

  v22 = *a4;
  v23 = *a7;
  v24 = *((_WORD *)a7 + 4);
  v25 = *a8;
  *a9 = a1;
  a9[1] = a2;
  v26 = (int *)OUTLINED_FUNCTION_3_17();
  sub_1A61AED54(a3, (uint64_t)a9 + v26[5], &qword_1ED21C368);
  *((_BYTE *)a9 + v26[6]) = v22;
  v27 = (_QWORD *)((char *)a9 + v26[7]);
  *v27 = a5;
  v27[1] = a6;
  v28 = (char *)a9 + v26[8];
  *(_QWORD *)v28 = v23;
  *((_WORD *)v28 + 4) = v24;
  *(_QWORD *)((char *)a9 + v26[9]) = v25;
  *(_QWORD *)((char *)a9 + v26[10]) = a10;
  sub_1A61AED54(a11, (uint64_t)a9 + v26[11], &qword_1ED21CAD8);
  sub_1A61AED54(a12, (uint64_t)a9 + v26[12], &qword_1ED21CAD8);
  sub_1A61AED54(a15, (uint64_t)a9 + v26[15], &qword_1ED21C100);
  sub_1A61AED54(a13, (uint64_t)a9 + v26[13], &qword_1ED21C0D0);
  sub_1A61AED54(a14, (uint64_t)a9 + v26[14], &qword_1ED21C0F0);
  sub_1A61AED54(a16, (uint64_t)a9 + v26[16], &qword_1ED21C748);
  *((_BYTE *)a9 + v26[17]) = a17;
  *((_BYTE *)a9 + v26[18]) = a18;
  *(_QWORD *)((char *)a9 + v26[19]) = a19;
}

uint64_t sub_1A6246CE8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  char v13;

  v2 = a1 == 0x65676175676E616CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1A6335ABC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656E6F5A656D6974 && a2 == 0xE800000000000000;
    if (v6 || (sub_1A6335ABC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x7374696E75 && a2 == 0xE500000000000000;
      if (v7 || (sub_1A6335ABC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x437972746E756F63 && a2 == 0xEB0000000065646FLL;
        if (v8 || (sub_1A6335ABC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x6E6F697461636F6CLL && a2 == 0xEF736E6F6974704FLL;
          if (v9 || (sub_1A6335ABC() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x4F676E6968636163 && a2 == 0xEE00736E6F697470;
            if (v10 || (sub_1A6335ABC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0xD000000000000014 && a2 == 0x80000001A634A490 || (sub_1A6335ABC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else if (a1 == 0xD000000000000011 && a2 == 0x80000001A634A740 || (sub_1A6335ABC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else if (a1 == 0xD000000000000012 && a2 == 0x80000001A634A760 || (sub_1A6335ABC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 8;
            }
            else if (a1 == 0xD000000000000012 && a2 == 0x80000001A634A780 || (sub_1A6335ABC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 9;
            }
            else if (a1 == 0xD000000000000013 && a2 == 0x80000001A634A7A0 || (sub_1A6335ABC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 10;
            }
            else if (a1 == 0xD000000000000019 && a2 == 0x80000001A634A7C0 || (sub_1A6335ABC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 11;
            }
            else
            {
              v11 = a1 == 0x416B726F7774656ELL && a2 == 0xEF79746976697463;
              if (v11 || (sub_1A6335ABC() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 12;
              }
              else
              {
                v12 = a1 == 0x72614D736465656ELL && a2 == 0xEF61746144656E69;
                if (v12 || (sub_1A6335ABC() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 13;
                }
                else if (a1 == 0xD000000000000011 && a2 == 0x80000001A634A7E0 || (sub_1A6335ABC() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 14;
                }
                else if (a1 == 0xD000000000000012 && a2 == 0x80000001A634A800)
                {
                  swift_bridgeObjectRelease();
                  return 15;
                }
                else
                {
                  v13 = sub_1A6335ABC();
                  swift_bridgeObjectRelease();
                  if ((v13 & 1) != 0)
                    return 15;
                  else
                    return 16;
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1A62473A0()
{
  return 16;
}

uint64_t sub_1A62473A8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A62473DC + 4 * byte_1A633B420[a1]))(0x65676175676E616CLL, 0xE800000000000000);
}

uint64_t sub_1A62473DC()
{
  return 0x656E6F5A656D6974;
}

uint64_t sub_1A62473F0()
{
  return 0x7374696E75;
}

uint64_t sub_1A6247404()
{
  return 0x437972746E756F63;
}

uint64_t sub_1A6247424()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_1A6247448()
{
  return 0x4F676E6968636163;
}

unint64_t sub_1A624746C()
{
  return 0xD000000000000014;
}

uint64_t sub_1A6247568()
{
  unsigned __int8 *v0;

  return sub_1A62473A8(*v0);
}

uint64_t sub_1A6247570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A6246CE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A6247594@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A62473A0();
  *a1 = result;
  return result;
}

uint64_t sub_1A62475B8()
{
  sub_1A6247A60();
  return sub_1A6335C18();
}

uint64_t sub_1A62475E0()
{
  sub_1A6247A60();
  return sub_1A6335C24();
}

void WeatherDataRequestOptions.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846D98);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_2();
  v7 = v6 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6247A60();
  sub_1A6335BF4();
  OUTLINED_FUNCTION_27_4();
  sub_1A6335A50();
  if (!v1)
  {
    type metadata accessor for WeatherDataRequestOptions();
    OUTLINED_FUNCTION_19_11(1);
    sub_1A6332DB0();
    sub_1A618B2B4(&qword_1EE846DA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB1488]);
    OUTLINED_FUNCTION_0_30();
    sub_1A6247A9C();
    OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_27_4();
    sub_1A6335A08();
    sub_1A6247AD8();
    OUTLINED_FUNCTION_4_20();
    sub_1A6247B14();
    OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_28_6(&qword_1EE846DD0, v8, MEMORY[0x1E0DEDC68], MEMORY[0x1E0DEAF10]);
    OUTLINED_FUNCTION_24_8();
    OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_19_11(7);
    sub_1A63328AC();
    sub_1A618B2B4(&qword_1EE846DD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], MEMORY[0x1E0CAE5E8]);
    OUTLINED_FUNCTION_4_20();
    OUTLINED_FUNCTION_4_20();
    OUTLINED_FUNCTION_19_11(9);
    type metadata accessor for WeatherRequestDailyRelativeRange();
    sub_1A618B2B4(&qword_1EE846DE0, (uint64_t (*)(uint64_t))type metadata accessor for WeatherRequestDailyRelativeRange, (uint64_t)&protocol conformance descriptor for WeatherRequestDailyRelativeRange);
    OUTLINED_FUNCTION_0_30();
    OUTLINED_FUNCTION_19_11(10);
    type metadata accessor for WeatherRequestHourlyRelativeRange();
    sub_1A618B2B4(&qword_1EE846DE8, (uint64_t (*)(uint64_t))type metadata accessor for WeatherRequestHourlyRelativeRange, (uint64_t)&protocol conformance descriptor for WeatherRequestHourlyRelativeRange);
    OUTLINED_FUNCTION_0_30();
    OUTLINED_FUNCTION_19_11(11);
    type metadata accessor for WeatherRequestMarineHourlyRelativeRange();
    sub_1A618B2B4(&qword_1EE846DF0, (uint64_t (*)(uint64_t))type metadata accessor for WeatherRequestMarineHourlyRelativeRange, (uint64_t)&protocol conformance descriptor for WeatherRequestMarineHourlyRelativeRange);
    OUTLINED_FUNCTION_0_30();
    OUTLINED_FUNCTION_19_11(12);
    type metadata accessor for WDSNetworkActivity();
    sub_1A618B2B4(&qword_1EE846DF8, (uint64_t (*)(uint64_t))type metadata accessor for WDSNetworkActivity, (uint64_t)&protocol conformance descriptor for WDSNetworkActivity);
    OUTLINED_FUNCTION_0_30();
    OUTLINED_FUNCTION_18_10(13);
    OUTLINED_FUNCTION_18_10(14);
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_28_6((unint64_t *)&qword_1ED2199A0, v9, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    OUTLINED_FUNCTION_24_8();
    OUTLINED_FUNCTION_12_2();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  OUTLINED_FUNCTION_1();
}

unint64_t sub_1A6247A60()
{
  unint64_t result;

  result = qword_1EE846DA0;
  if (!qword_1EE846DA0)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633B654, &type metadata for WeatherDataRequestOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE846DA0);
  }
  return result;
}

unint64_t sub_1A6247A9C()
{
  unint64_t result;

  result = qword_1EE846DB0;
  if (!qword_1EE846DB0)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for Units, &type metadata for Units);
    atomic_store(result, (unint64_t *)&qword_1EE846DB0);
  }
  return result;
}

unint64_t sub_1A6247AD8()
{
  unint64_t result;

  result = qword_1EE846DB8;
  if (!qword_1EE846DB8)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for WeatherRequestLocationOptions, &type metadata for WeatherRequestLocationOptions);
    atomic_store(result, (unint64_t *)&qword_1EE846DB8);
  }
  return result;
}

unint64_t sub_1A6247B14()
{
  unint64_t result;

  result = qword_1EE846DC0;
  if (!qword_1EE846DC0)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for WeatherDataCaching.Options, &type metadata for WeatherDataCaching.Options);
    atomic_store(result, (unint64_t *)&qword_1EE846DC0);
  }
  return result;
}

void WeatherDataRequestOptions.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t *v33;
  int *v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  uint64_t *v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  __int16 v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char v52;
  char v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57[2];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t *v66;
  int *v67;
  uint64_t v68;
  __int16 v69;
  char v70;

  v58 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C748);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_1_0();
  v59 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C100);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_1_0();
  v60 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C0F0);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_1_0();
  v64 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C0D0);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_2();
  v12 = v11 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD8);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v57 - v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C368);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_2();
  v22 = v21 - v20;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846E00);
  v23 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  OUTLINED_FUNCTION_2();
  v26 = v25 - v24;
  v67 = (int *)type metadata accessor for WeatherDataRequestOptions();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_1_0();
  v66 = v28;
  v29 = a1[3];
  v62 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v29);
  sub_1A6247A60();
  v61 = v26;
  v30 = v65;
  sub_1A6335BDC();
  if (v30)
  {
    v65 = v30;
    LODWORD(v63) = 0;
    v32 = 0;
  }
  else
  {
    v65 = v15;
    v57[0] = v12;
    v57[1] = v23;
    LOBYTE(v68) = 0;
    v31 = sub_1A63359A8();
    v42 = v66;
    *v66 = v31;
    v42[1] = v43;
    sub_1A6332DB0();
    LOBYTE(v68) = 1;
    sub_1A618B2B4(&qword_1EE846E08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB14A0]);
    OUTLINED_FUNCTION_25_0();
    sub_1A633599C();
    v44 = v67;
    sub_1A61AED54(v22, (uint64_t)v42 + v67[5], &qword_1ED21C368);
    v70 = 2;
    sub_1A624850C();
    OUTLINED_FUNCTION_16_14();
    *((_BYTE *)v42 + v44[6]) = v68;
    LOBYTE(v68) = 3;
    v45 = sub_1A633596C();
    v46 = (uint64_t *)((char *)v42 + v44[7]);
    *v46 = v45;
    v46[1] = v47;
    v70 = 4;
    sub_1A6248548();
    sub_1A633599C();
    v48 = v69;
    v49 = (char *)v42 + v44[8];
    *(_QWORD *)v49 = v68;
    *((_WORD *)v49 + 4) = v48;
    v70 = 5;
    sub_1A6248584();
    OUTLINED_FUNCTION_16_14();
    *(uint64_t *)((char *)v42 + v44[9]) = v68;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846DC8);
    v70 = 6;
    sub_1A62485C0(&qword_1EE846E28, &qword_1EE846DC8, MEMORY[0x1E0DEDC90], MEMORY[0x1E0DEAF40]);
    sub_1A63359D8();
    *(uint64_t *)((char *)v42 + v44[10]) = v68;
    sub_1A63328AC();
    LOBYTE(v68) = 7;
    sub_1A618B2B4(&qword_1EE846E30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], MEMORY[0x1E0CAE600]);
    OUTLINED_FUNCTION_13_12();
    sub_1A61AED54((uint64_t)v18, v44[11], &qword_1ED21CAD8);
    LOBYTE(v68) = 8;
    v50 = (uint64_t)v65;
    OUTLINED_FUNCTION_13_12();
    sub_1A61AED54(v50, v44[12], &qword_1ED21CAD8);
    type metadata accessor for WeatherRequestDailyRelativeRange();
    LOBYTE(v68) = 9;
    sub_1A618B2B4(&qword_1EE846E38, (uint64_t (*)(uint64_t))type metadata accessor for WeatherRequestDailyRelativeRange, (uint64_t)&protocol conformance descriptor for WeatherRequestDailyRelativeRange);
    OUTLINED_FUNCTION_25_0();
    sub_1A633599C();
    v65 = 0;
    sub_1A61AED54(v57[0], (uint64_t)v66 + v67[13], &qword_1ED21C0D0);
    type metadata accessor for WeatherRequestHourlyRelativeRange();
    LOBYTE(v68) = 10;
    sub_1A618B2B4(&qword_1EE846E40, (uint64_t (*)(uint64_t))type metadata accessor for WeatherRequestHourlyRelativeRange, (uint64_t)&protocol conformance descriptor for WeatherRequestHourlyRelativeRange);
    OUTLINED_FUNCTION_25_0();
    OUTLINED_FUNCTION_23_9();
    v65 = 0;
    sub_1A61AED54(v64, (uint64_t)v66 + v67[14], &qword_1ED21C0F0);
    type metadata accessor for WeatherRequestMarineHourlyRelativeRange();
    LOBYTE(v68) = 11;
    sub_1A618B2B4(&qword_1EE846E48, (uint64_t (*)(uint64_t))type metadata accessor for WeatherRequestMarineHourlyRelativeRange, (uint64_t)&protocol conformance descriptor for WeatherRequestMarineHourlyRelativeRange);
    v51 = v65;
    sub_1A633599C();
    v65 = v51;
    if (!v51)
    {
      sub_1A61AED54(v60, (uint64_t)v66 + v67[15], &qword_1ED21C100);
      type metadata accessor for WDSNetworkActivity();
      LOBYTE(v68) = 12;
      sub_1A618B2B4(&qword_1EE846E50, (uint64_t (*)(uint64_t))type metadata accessor for WDSNetworkActivity, (uint64_t)&protocol conformance descriptor for WDSNetworkActivity);
      OUTLINED_FUNCTION_25_0();
      OUTLINED_FUNCTION_23_9();
      LODWORD(v64) = 1;
      v65 = 0;
      sub_1A61AED54(v59, (uint64_t)v66 + v67[16], &qword_1ED21C748);
      v52 = OUTLINED_FUNCTION_17_10(13);
      v65 = 0;
      *((_BYTE *)v66 + v67[17]) = v52 & 1;
      v53 = OUTLINED_FUNCTION_17_10(14);
      v65 = 0;
      *((_BYTE *)v66 + v67[18]) = v53 & 1;
      OUTLINED_FUNCTION_81();
      v70 = 15;
      OUTLINED_FUNCTION_28_6(&qword_1EE846E58, v54, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
      v55 = v65;
      sub_1A63359D8();
      v65 = v55;
      if (!v55)
      {
        OUTLINED_FUNCTION_2_23();
        v56 = (uint64_t)v66;
        *(uint64_t *)((char *)v66 + v67[19]) = v68;
        sub_1A624861C(v56, v58);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
        sub_1A61AED2C(v56, (uint64_t (*)(_QWORD))type metadata accessor for WeatherDataRequestOptions);
        goto LABEL_26;
      }
      OUTLINED_FUNCTION_2_23();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
      LOBYTE(v41) = 1;
      v35 = 1;
      v36 = 1;
      v37 = 1;
      v38 = 1;
      v39 = 1;
      LODWORD(v63) = 1;
      v40 = 1;
      v33 = v66;
      v34 = v67;
      goto LABEL_16;
    }
    OUTLINED_FUNCTION_2_23();
    v32 = 1995;
    LODWORD(v63) = 1;
  }
  v33 = v66;
  v34 = v67;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
  v35 = (v32 >> 3) & 1;
  v36 = (v32 >> 6) & 1;
  v37 = (v32 >> 7) & 1;
  v38 = (v32 >> 8) & 1;
  v39 = (v32 >> 9) & 1;
  if ((v32 & 1) == 0)
  {
    LODWORD(v64) = 0;
    v40 = 0;
    if ((v32 & 2) == 0)
      goto LABEL_6;
    goto LABEL_17;
  }
  v40 = 0;
  LODWORD(v64) = 0;
  v41 = (v32 >> 1) & 1;
LABEL_16:
  swift_bridgeObjectRelease();
  if ((v41 & 1) == 0)
  {
LABEL_6:
    if (v35)
      goto LABEL_7;
    goto LABEL_18;
  }
LABEL_17:
  sub_1A61AEA1C((uint64_t)v33 + v34[5], &qword_1ED21C368);
  if ((v35 & 1) != 0)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    if ((v36 & 1) == 0)
      goto LABEL_8;
    goto LABEL_19;
  }
LABEL_18:
  if (!v36)
  {
LABEL_8:
    if (v37)
      goto LABEL_9;
    goto LABEL_20;
  }
LABEL_19:
  swift_bridgeObjectRelease();
  if ((v37 & 1) != 0)
  {
LABEL_9:
    sub_1A61AEA1C((uint64_t)v33 + v34[11], &qword_1ED21CAD8);
    if ((v38 & 1) == 0)
      goto LABEL_10;
    goto LABEL_21;
  }
LABEL_20:
  if (!v38)
  {
LABEL_10:
    if (v39)
      goto LABEL_11;
    goto LABEL_22;
  }
LABEL_21:
  sub_1A61AEA1C((uint64_t)v33 + v34[12], &qword_1ED21CAD8);
  if ((v39 & 1) != 0)
  {
LABEL_11:
    sub_1A61AEA1C((uint64_t)v33 + v34[13], &qword_1ED21C0D0);
    if ((v63 & 1) == 0)
      goto LABEL_12;
    goto LABEL_23;
  }
LABEL_22:
  if (!(_DWORD)v63)
  {
LABEL_12:
    if (v40)
      goto LABEL_13;
    goto LABEL_24;
  }
LABEL_23:
  sub_1A61AEA1C((uint64_t)v33 + v34[14], &qword_1ED21C0F0);
  if ((v40 & 1) != 0)
  {
LABEL_13:
    sub_1A61AEA1C((uint64_t)v33 + v34[15], &qword_1ED21C100);
    if ((v64 & 1) == 0)
      goto LABEL_26;
    goto LABEL_25;
  }
LABEL_24:
  if ((_DWORD)v64)
LABEL_25:
    sub_1A61AEA1C((uint64_t)v33 + v34[16], &qword_1ED21C748);
LABEL_26:
  OUTLINED_FUNCTION_1();
}

unint64_t sub_1A624850C()
{
  unint64_t result;

  result = qword_1EE846E10;
  if (!qword_1EE846E10)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for Units, &type metadata for Units);
    atomic_store(result, (unint64_t *)&qword_1EE846E10);
  }
  return result;
}

unint64_t sub_1A6248548()
{
  unint64_t result;

  result = qword_1EE846E18;
  if (!qword_1EE846E18)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for WeatherRequestLocationOptions, &type metadata for WeatherRequestLocationOptions);
    atomic_store(result, (unint64_t *)&qword_1EE846E18);
  }
  return result;
}

unint64_t sub_1A6248584()
{
  unint64_t result;

  result = qword_1EE846E20;
  if (!qword_1EE846E20)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for WeatherDataCaching.Options, &type metadata for WeatherDataCaching.Options);
    atomic_store(result, (unint64_t *)&qword_1EE846E20);
  }
  return result;
}

uint64_t sub_1A62485C0(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3;
    result = MEMORY[0x1A85BEED0](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A624861C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WeatherDataRequestOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1A6248660(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  WeatherDataRequestOptions.init(from:)(a1, a2);
}

void sub_1A6248674(_QWORD *a1)
{
  WeatherDataRequestOptions.encode(to:)(a1);
}

_QWORD *initializeBufferWithCopyOfBuffer for WeatherDataRequestOptions(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  _OWORD *v59;
  _OWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1A6332DB0();
    sub_1A6334CDC();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C368);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
    v14 = a3[7];
    *((_BYTE *)v4 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v15 = (_QWORD *)((char *)v4 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = a3[8];
    v19 = a3[9];
    v20 = (char *)v4 + v18;
    v21 = (char *)a2 + v18;
    *((_WORD *)v20 + 4) = *((_WORD *)v21 + 4);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *(_QWORD *)((char *)v4 + v19) = *(_QWORD *)((char *)a2 + v19);
    v22 = a3[11];
    *(_QWORD *)((char *)v4 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
    v23 = (char *)v4 + v22;
    v24 = (char *)a2 + v22;
    v25 = sub_1A63328AC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD8);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
      __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v25);
    }
    v27 = a3[12];
    v28 = (char *)v4 + v27;
    v29 = (char *)a2 + v27;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v27, 1, v25))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD8);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v28, v29, v25);
      __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v25);
    }
    v31 = a3[13];
    v32 = (_OWORD *)((char *)v4 + v31);
    v33 = (_OWORD *)((char *)a2 + v31);
    v34 = type metadata accessor for WeatherRequestDailyRelativeRange();
    if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v34))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C0D0);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      *v32 = *v33;
      v36 = *(int *)(v34 + 28);
      v37 = (char *)v32 + v36;
      v38 = (char *)v33 + v36;
      v39 = sub_1A6332C24();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
      __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v34);
    }
    v40 = a3[14];
    v41 = (char *)v4 + v40;
    v42 = (char *)a2 + v40;
    v43 = type metadata accessor for WeatherRequestHourlyRelativeRange();
    if (__swift_getEnumTagSinglePayload((uint64_t)v42, 1, v43))
    {
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C0F0);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v41 = *(_OWORD *)v42;
      v41[16] = v42[16];
      v45 = *(int *)(v43 + 28);
      v46 = &v41[v45];
      v47 = &v42[v45];
      v48 = sub_1A6332C24();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
      __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, v43);
    }
    v49 = a3[15];
    v50 = (char *)v4 + v49;
    v51 = (char *)a2 + v49;
    v52 = type metadata accessor for WeatherRequestMarineHourlyRelativeRange();
    if (__swift_getEnumTagSinglePayload((uint64_t)v51, 1, v52))
    {
      v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C100);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v50 = *(_OWORD *)v51;
      v50[16] = v51[16];
      v54 = *(int *)(v52 + 28);
      v55 = &v50[v54];
      v56 = &v51[v54];
      v57 = sub_1A6332C24();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
      __swift_storeEnumTagSinglePayload((uint64_t)v50, 0, 1, v52);
    }
    v58 = a3[16];
    v59 = (_OWORD *)((char *)v4 + v58);
    v60 = (_OWORD *)((char *)a2 + v58);
    v61 = type metadata accessor for WDSNetworkActivity();
    if (__swift_getEnumTagSinglePayload((uint64_t)v60, 1, v61))
    {
      v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C748);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      *v59 = *v60;
      v63 = *(int *)(v61 + 24);
      v64 = (char *)v59 + v63;
      v65 = (char *)v60 + v63;
      v66 = sub_1A6332C54();
      if (__swift_getEnumTagSinglePayload((uint64_t)v65, 1, v66))
      {
        v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C350);
        memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v64, v65, v66);
        __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v66);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v59, 0, 1, v61);
    }
    v68 = a3[18];
    *((_BYTE *)v4 + a3[17]) = *((_BYTE *)a2 + a3[17]);
    *((_BYTE *)v4 + v68) = *((_BYTE *)a2 + v68);
    *(_QWORD *)((char *)v4 + a3[19]) = *(_QWORD *)((char *)a2 + a3[19]);
    sub_1A6334CDC();
  }
  return v4;
}

_QWORD *assignWithCopy for WeatherDataRequestOptions(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  int v73;
  int v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  size_t v80;
  void *v81;
  const void *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v104;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A6332DB0();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C368);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v14 = a3[7];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = *(_QWORD *)v19;
  *((_WORD *)v18 + 4) = *((_WORD *)v19 + 4);
  *(_QWORD *)v18 = v20;
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v21 = a3[11];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = sub_1A63328AC();
  v25 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v24);
  v26 = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
      __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v27 = *(_QWORD *)(v24 - 8);
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v22, v24);
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD8);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 24))(v22, v23, v24);
LABEL_13:
  v29 = a3[12];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v29, 1, v24);
  v33 = __swift_getEnumTagSinglePayload((uint64_t)v31, 1, v24);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v30, v31, v24);
      __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v24);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  v34 = *(_QWORD *)(v24 - 8);
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v30, v24);
LABEL_18:
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD8);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 24))(v30, v31, v24);
LABEL_19:
  v36 = a3[13];
  v37 = (_QWORD *)((char *)a1 + v36);
  v38 = (_QWORD *)((char *)a2 + v36);
  v39 = type metadata accessor for WeatherRequestDailyRelativeRange();
  v40 = __swift_getEnumTagSinglePayload((uint64_t)v37, 1, v39);
  v41 = __swift_getEnumTagSinglePayload((uint64_t)v38, 1, v39);
  if (v40)
  {
    if (!v41)
    {
      *v37 = *v38;
      v37[1] = v38[1];
      v42 = *(int *)(v39 + 28);
      v43 = (char *)v37 + v42;
      v44 = (char *)v38 + v42;
      v45 = sub_1A6332C24();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
      __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v39);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v41)
  {
    sub_1A61AED2C((uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for WeatherRequestDailyRelativeRange);
LABEL_24:
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C0D0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_25;
  }
  *v37 = *v38;
  v37[1] = v38[1];
  v83 = *(int *)(v39 + 28);
  v84 = (char *)v37 + v83;
  v85 = (char *)v38 + v83;
  v86 = sub_1A6332C24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 24))(v84, v85, v86);
LABEL_25:
  v47 = a3[14];
  v48 = (uint64_t)a1 + v47;
  v49 = (uint64_t)a2 + v47;
  v50 = type metadata accessor for WeatherRequestHourlyRelativeRange();
  v51 = __swift_getEnumTagSinglePayload(v48, 1, v50);
  v52 = __swift_getEnumTagSinglePayload(v49, 1, v50);
  if (v51)
  {
    if (!v52)
    {
      *(_QWORD *)v48 = *(_QWORD *)v49;
      *(_QWORD *)(v48 + 8) = *(_QWORD *)(v49 + 8);
      *(_BYTE *)(v48 + 16) = *(_BYTE *)(v49 + 16);
      v53 = *(int *)(v50 + 28);
      v54 = v48 + v53;
      v55 = v49 + v53;
      v56 = sub_1A6332C24();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v54, v55, v56);
      __swift_storeEnumTagSinglePayload(v48, 0, 1, v50);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v52)
  {
    sub_1A61AED2C(v48, (uint64_t (*)(_QWORD))type metadata accessor for WeatherRequestHourlyRelativeRange);
LABEL_30:
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C0F0);
    memcpy((void *)v48, (const void *)v49, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_31;
  }
  *(_QWORD *)v48 = *(_QWORD *)v49;
  *(_QWORD *)(v48 + 8) = *(_QWORD *)(v49 + 8);
  *(_BYTE *)(v48 + 16) = *(_BYTE *)(v49 + 16);
  v87 = *(int *)(v50 + 28);
  v88 = v48 + v87;
  v89 = v49 + v87;
  v90 = sub_1A6332C24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 24))(v88, v89, v90);
LABEL_31:
  v58 = a3[15];
  v59 = (uint64_t)a1 + v58;
  v60 = (uint64_t)a2 + v58;
  v61 = type metadata accessor for WeatherRequestMarineHourlyRelativeRange();
  v62 = __swift_getEnumTagSinglePayload(v59, 1, v61);
  v63 = __swift_getEnumTagSinglePayload(v60, 1, v61);
  if (v62)
  {
    if (!v63)
    {
      *(_QWORD *)v59 = *(_QWORD *)v60;
      *(_QWORD *)(v59 + 8) = *(_QWORD *)(v60 + 8);
      *(_BYTE *)(v59 + 16) = *(_BYTE *)(v60 + 16);
      v64 = *(int *)(v61 + 28);
      v65 = v59 + v64;
      v66 = v60 + v64;
      v67 = sub_1A6332C24();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
      __swift_storeEnumTagSinglePayload(v59, 0, 1, v61);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v63)
  {
    sub_1A61AED2C(v59, (uint64_t (*)(_QWORD))type metadata accessor for WeatherRequestMarineHourlyRelativeRange);
LABEL_36:
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C100);
    memcpy((void *)v59, (const void *)v60, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    goto LABEL_37;
  }
  *(_QWORD *)v59 = *(_QWORD *)v60;
  *(_QWORD *)(v59 + 8) = *(_QWORD *)(v60 + 8);
  *(_BYTE *)(v59 + 16) = *(_BYTE *)(v60 + 16);
  v91 = *(int *)(v61 + 28);
  v92 = v59 + v91;
  v93 = v60 + v91;
  v94 = sub_1A6332C24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 24))(v92, v93, v94);
LABEL_37:
  v69 = a3[16];
  v70 = (_QWORD *)((char *)a1 + v69);
  v71 = (_QWORD *)((char *)a2 + v69);
  v72 = type metadata accessor for WDSNetworkActivity();
  v73 = __swift_getEnumTagSinglePayload((uint64_t)v70, 1, v72);
  v74 = __swift_getEnumTagSinglePayload((uint64_t)v71, 1, v72);
  if (v73)
  {
    if (!v74)
    {
      *v70 = *v71;
      v70[1] = v71[1];
      v75 = *(int *)(v72 + 24);
      v76 = (char *)v70 + v75;
      v77 = (char *)v71 + v75;
      v78 = sub_1A6332C54();
      if (__swift_getEnumTagSinglePayload((uint64_t)v77, 1, v78))
      {
        v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C350);
        memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v76, v77, v78);
        __swift_storeEnumTagSinglePayload((uint64_t)v76, 0, 1, v78);
      }
      v101 = (uint64_t)v70;
      v102 = v72;
      goto LABEL_56;
    }
    goto LABEL_43;
  }
  if (v74)
  {
    sub_1A61AED2C((uint64_t)v70, (uint64_t (*)(_QWORD))type metadata accessor for WDSNetworkActivity);
LABEL_43:
    v80 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C748) - 8) + 64);
    v81 = v70;
    v82 = v71;
    goto LABEL_44;
  }
  *v70 = *v71;
  v70[1] = v71[1];
  v95 = *(int *)(v72 + 24);
  v96 = (uint64_t)v70 + v95;
  v97 = (uint64_t)v71 + v95;
  v98 = sub_1A6332C54();
  v99 = __swift_getEnumTagSinglePayload(v96, 1, v98);
  v100 = __swift_getEnumTagSinglePayload(v97, 1, v98);
  if (v99)
  {
    if (!v100)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v96, v97, v98);
      v101 = v96;
      v102 = v98;
LABEL_56:
      __swift_storeEnumTagSinglePayload(v101, 0, 1, v102);
      goto LABEL_57;
    }
  }
  else
  {
    v104 = *(_QWORD *)(v98 - 8);
    if (!v100)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v104 + 24))(v96, v97, v98);
      goto LABEL_57;
    }
    (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v96, v98);
  }
  v80 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C350) - 8) + 64);
  v81 = (void *)v96;
  v82 = (const void *)v97;
LABEL_44:
  memcpy(v81, v82, v80);
LABEL_57:
  *((_BYTE *)a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
  *((_BYTE *)a1 + a3[18]) = *((_BYTE *)a2 + a3[18]);
  *(_QWORD *)((char *)a1 + a3[19]) = *(_QWORD *)((char *)a2 + a3[19]);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for WeatherDataRequestOptions(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD *v53;
  _OWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A6332DB0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C368);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v11 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  v12 = a3[8];
  v13 = a3[9];
  v14 = (char *)a1 + v12;
  v15 = (char *)a2 + v12;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_WORD *)v14 + 4) = *((_WORD *)v15 + 4);
  *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);
  v16 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_1A63328AC();
  if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD8);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
  }
  v21 = a3[12];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v21, 1, v19))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD8);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v22, v23, v19);
    __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v19);
  }
  v25 = a3[13];
  v26 = (_OWORD *)((char *)a1 + v25);
  v27 = (_OWORD *)((char *)a2 + v25);
  v28 = type metadata accessor for WeatherRequestDailyRelativeRange();
  if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v28))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C0D0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    *v26 = *v27;
    v30 = *(int *)(v28 + 28);
    v31 = (char *)v26 + v30;
    v32 = (char *)v27 + v30;
    v33 = sub_1A6332C24();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
    __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v28);
  }
  v34 = a3[14];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = type metadata accessor for WeatherRequestHourlyRelativeRange();
  if (__swift_getEnumTagSinglePayload((uint64_t)v36, 1, v37))
  {
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C0F0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v35 = *(_OWORD *)v36;
    v35[16] = v36[16];
    v39 = *(int *)(v37 + 28);
    v40 = &v35[v39];
    v41 = &v36[v39];
    v42 = sub_1A6332C24();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
    __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v37);
  }
  v43 = a3[15];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v46 = type metadata accessor for WeatherRequestMarineHourlyRelativeRange();
  if (__swift_getEnumTagSinglePayload((uint64_t)v45, 1, v46))
  {
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C100);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v44 = *(_OWORD *)v45;
    v44[16] = v45[16];
    v48 = *(int *)(v46 + 28);
    v49 = &v44[v48];
    v50 = &v45[v48];
    v51 = sub_1A6332C24();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
    __swift_storeEnumTagSinglePayload((uint64_t)v44, 0, 1, v46);
  }
  v52 = a3[16];
  v53 = (_OWORD *)((char *)a1 + v52);
  v54 = (_OWORD *)((char *)a2 + v52);
  v55 = type metadata accessor for WDSNetworkActivity();
  if (__swift_getEnumTagSinglePayload((uint64_t)v54, 1, v55))
  {
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C748);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    *v53 = *v54;
    v57 = *(int *)(v55 + 24);
    v58 = (char *)v53 + v57;
    v59 = (char *)v54 + v57;
    v60 = sub_1A6332C54();
    if (__swift_getEnumTagSinglePayload((uint64_t)v59, 1, v60))
    {
      v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C350);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v58, v59, v60);
      __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v60);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v53, 0, 1, v55);
  }
  v62 = a3[18];
  *((_BYTE *)a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
  *((_BYTE *)a1 + v62) = *((_BYTE *)a2 + v62);
  *(_QWORD *)((char *)a1 + a3[19]) = *(_QWORD *)((char *)a2 + a3[19]);
  return a1;
}

_QWORD *assignWithTake for WeatherDataRequestOptions(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  _OWORD *v41;
  uint64_t v42;
  int v43;
  int v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  _BYTE *v52;
  uint64_t v53;
  int v54;
  int v55;
  uint64_t v56;
  _BYTE *v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  _BYTE *v63;
  uint64_t v64;
  int v65;
  int v66;
  uint64_t v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _OWORD *v73;
  _OWORD *v74;
  uint64_t v75;
  int v76;
  int v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  size_t v83;
  void *v84;
  const void *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  _BYTE *v91;
  _BYTE *v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  _BYTE *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v108;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1A6332DB0();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v13 = *(_QWORD *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C368);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  v15 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v20 = a3[8];
  v21 = a3[9];
  v22 = (char *)a1 + v20;
  v23 = (char *)a2 + v20;
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_WORD *)v22 + 4) = *((_WORD *)v23 + 4);
  *(_QWORD *)((char *)a1 + v21) = *(_QWORD *)((char *)a2 + v21);
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  v24 = a3[11];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = sub_1A63328AC();
  v28 = __swift_getEnumTagSinglePayload((uint64_t)v25, 1, v27);
  v29 = __swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
      __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v27);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v30 = *(_QWORD *)(v27 - 8);
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v25, v27);
LABEL_12:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD8);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 40))(v25, v26, v27);
LABEL_13:
  v32 = a3[12];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v32, 1, v27);
  v36 = __swift_getEnumTagSinglePayload((uint64_t)v34, 1, v27);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v33, v34, v27);
      __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v27);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  v37 = *(_QWORD *)(v27 - 8);
  if (v36)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v33, v27);
LABEL_18:
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD8);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v37 + 40))(v33, v34, v27);
LABEL_19:
  v39 = a3[13];
  v40 = (_OWORD *)((char *)a1 + v39);
  v41 = (_OWORD *)((char *)a2 + v39);
  v42 = type metadata accessor for WeatherRequestDailyRelativeRange();
  v43 = __swift_getEnumTagSinglePayload((uint64_t)v40, 1, v42);
  v44 = __swift_getEnumTagSinglePayload((uint64_t)v41, 1, v42);
  if (v43)
  {
    if (!v44)
    {
      *v40 = *v41;
      v45 = *(int *)(v42 + 28);
      v46 = (char *)v40 + v45;
      v47 = (char *)v41 + v45;
      v48 = sub_1A6332C24();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
      __swift_storeEnumTagSinglePayload((uint64_t)v40, 0, 1, v42);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v44)
  {
    sub_1A61AED2C((uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for WeatherRequestDailyRelativeRange);
LABEL_24:
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C0D0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    goto LABEL_25;
  }
  *v40 = *v41;
  v86 = *(int *)(v42 + 28);
  v87 = (char *)v40 + v86;
  v88 = (char *)v41 + v86;
  v89 = sub_1A6332C24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 40))(v87, v88, v89);
LABEL_25:
  v50 = a3[14];
  v51 = (char *)a1 + v50;
  v52 = (char *)a2 + v50;
  v53 = type metadata accessor for WeatherRequestHourlyRelativeRange();
  v54 = __swift_getEnumTagSinglePayload((uint64_t)v51, 1, v53);
  v55 = __swift_getEnumTagSinglePayload((uint64_t)v52, 1, v53);
  if (v54)
  {
    if (!v55)
    {
      *(_OWORD *)v51 = *(_OWORD *)v52;
      v51[16] = v52[16];
      v56 = *(int *)(v53 + 28);
      v57 = &v51[v56];
      v58 = &v52[v56];
      v59 = sub_1A6332C24();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v57, v58, v59);
      __swift_storeEnumTagSinglePayload((uint64_t)v51, 0, 1, v53);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v55)
  {
    sub_1A61AED2C((uint64_t)v51, (uint64_t (*)(_QWORD))type metadata accessor for WeatherRequestHourlyRelativeRange);
LABEL_30:
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C0F0);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_31;
  }
  *(_OWORD *)v51 = *(_OWORD *)v52;
  v51[16] = v52[16];
  v90 = *(int *)(v53 + 28);
  v91 = &v51[v90];
  v92 = &v52[v90];
  v93 = sub_1A6332C24();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v93 - 8) + 40))(v91, v92, v93);
LABEL_31:
  v61 = a3[15];
  v62 = (char *)a1 + v61;
  v63 = (char *)a2 + v61;
  v64 = type metadata accessor for WeatherRequestMarineHourlyRelativeRange();
  v65 = __swift_getEnumTagSinglePayload((uint64_t)v62, 1, v64);
  v66 = __swift_getEnumTagSinglePayload((uint64_t)v63, 1, v64);
  if (v65)
  {
    if (!v66)
    {
      *(_OWORD *)v62 = *(_OWORD *)v63;
      v62[16] = v63[16];
      v67 = *(int *)(v64 + 28);
      v68 = &v62[v67];
      v69 = &v63[v67];
      v70 = sub_1A6332C24();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v68, v69, v70);
      __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v64);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v66)
  {
    sub_1A61AED2C((uint64_t)v62, (uint64_t (*)(_QWORD))type metadata accessor for WeatherRequestMarineHourlyRelativeRange);
LABEL_36:
    v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C100);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    goto LABEL_37;
  }
  *(_OWORD *)v62 = *(_OWORD *)v63;
  v62[16] = v63[16];
  v94 = *(int *)(v64 + 28);
  v95 = &v62[v94];
  v96 = &v63[v94];
  v97 = sub_1A6332C24();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v97 - 8) + 40))(v95, v96, v97);
LABEL_37:
  v72 = a3[16];
  v73 = (_OWORD *)((char *)a1 + v72);
  v74 = (_OWORD *)((char *)a2 + v72);
  v75 = type metadata accessor for WDSNetworkActivity();
  v76 = __swift_getEnumTagSinglePayload((uint64_t)v73, 1, v75);
  v77 = __swift_getEnumTagSinglePayload((uint64_t)v74, 1, v75);
  if (v76)
  {
    if (!v77)
    {
      *v73 = *v74;
      v78 = *(int *)(v75 + 24);
      v79 = (char *)v73 + v78;
      v80 = (char *)v74 + v78;
      v81 = sub_1A6332C54();
      if (__swift_getEnumTagSinglePayload((uint64_t)v80, 1, v81))
      {
        v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C350);
        memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v79, v80, v81);
        __swift_storeEnumTagSinglePayload((uint64_t)v79, 0, 1, v81);
      }
      v104 = (uint64_t)v73;
      v105 = v75;
      goto LABEL_56;
    }
    goto LABEL_43;
  }
  if (v77)
  {
    sub_1A61AED2C((uint64_t)v73, (uint64_t (*)(_QWORD))type metadata accessor for WDSNetworkActivity);
LABEL_43:
    v83 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C748) - 8) + 64);
    v84 = v73;
    v85 = v74;
    goto LABEL_44;
  }
  *v73 = *v74;
  v98 = *(int *)(v75 + 24);
  v99 = (uint64_t)v73 + v98;
  v100 = (uint64_t)v74 + v98;
  v101 = sub_1A6332C54();
  v102 = __swift_getEnumTagSinglePayload(v99, 1, v101);
  v103 = __swift_getEnumTagSinglePayload(v100, 1, v101);
  if (v102)
  {
    if (!v103)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v99, v100, v101);
      v104 = v99;
      v105 = v101;
LABEL_56:
      __swift_storeEnumTagSinglePayload(v104, 0, 1, v105);
      goto LABEL_57;
    }
  }
  else
  {
    v108 = *(_QWORD *)(v101 - 8);
    if (!v103)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 40))(v99, v100, v101);
      goto LABEL_57;
    }
    (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v99, v101);
  }
  v83 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C350) - 8) + 64);
  v84 = (void *)v99;
  v85 = (const void *)v100;
LABEL_44:
  memcpy(v84, v85, v83);
LABEL_57:
  v106 = a3[18];
  *((_BYTE *)a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
  *((_BYTE *)a1 + v106) = *((_BYTE *)a2 + v106);
  *(_QWORD *)((char *)a1 + a3[19]) = *(_QWORD *)((char *)a2 + a3[19]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WeatherDataRequestOptions()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A624A108(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C368);
    OUTLINED_FUNCTION_9();
    if (v11)
    {
      v9 = v8;
      v10 = a3[5];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD8);
      OUTLINED_FUNCTION_9();
      if (v11)
      {
        v9 = v12;
        v10 = a3[11];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C0D0);
        OUTLINED_FUNCTION_9();
        if (v13)
        {
          v9 = v14;
          v10 = a3[13];
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C0F0);
          OUTLINED_FUNCTION_9();
          if (v15)
          {
            v9 = v16;
            v10 = a3[14];
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C100);
            OUTLINED_FUNCTION_9();
            if (v17)
            {
              v9 = v18;
              v10 = a3[15];
            }
            else
            {
              v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C748);
              v10 = a3[16];
            }
          }
        }
      }
    }
    return __swift_getEnumTagSinglePayload(a1 + v10, a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for WeatherDataRequestOptions()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A624A22C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C368);
    OUTLINED_FUNCTION_8_2();
    if (v10)
    {
      v8 = v7;
      v9 = a4[5];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD8);
      OUTLINED_FUNCTION_8_2();
      if (v10)
      {
        v8 = v11;
        v9 = a4[11];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C0D0);
        OUTLINED_FUNCTION_8_2();
        if (v12)
        {
          v8 = v13;
          v9 = a4[13];
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C0F0);
          OUTLINED_FUNCTION_8_2();
          if (v14)
          {
            v8 = v15;
            v9 = a4[14];
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C100);
            OUTLINED_FUNCTION_8_2();
            if (v16)
            {
              v8 = v17;
              v9 = a4[15];
            }
            else
            {
              v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C748);
              v9 = a4[16];
            }
          }
        }
      }
    }
    return __swift_storeEnumTagSinglePayload(v5 + v9, a2, a2, v8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WeatherDataRequestOptions.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF1)
  {
    if (a2 + 15 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 15) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 16;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v5 = v6 - 16;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for WeatherDataRequestOptions.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_1A624A414 + 4 * byte_1A633B435[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_1A624A448 + 4 * byte_1A633B430[v4]))();
}

uint64_t sub_1A624A448(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A624A450(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A624A458);
  return result;
}

uint64_t sub_1A624A464(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A624A46CLL);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_1A624A470(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A624A478(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WeatherDataRequestOptions.CodingKeys()
{
  return &type metadata for WeatherDataRequestOptions.CodingKeys;
}

unint64_t sub_1A624A498()
{
  unint64_t result;

  result = qword_1EE846E60;
  if (!qword_1EE846E60)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633B62C, &type metadata for WeatherDataRequestOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE846E60);
  }
  return result;
}

unint64_t sub_1A624A4D8()
{
  unint64_t result;

  result = qword_1EE846E68;
  if (!qword_1EE846E68)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633B59C, &type metadata for WeatherDataRequestOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE846E68);
  }
  return result;
}

unint64_t sub_1A624A518()
{
  unint64_t result;

  result = qword_1EE846E70;
  if (!qword_1EE846E70)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633B5C4, &type metadata for WeatherDataRequestOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE846E70);
  }
  return result;
}

_QWORD *sub_1A624A554()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;

  type metadata accessor for ExtremaInitializer();
  v0 = swift_allocObject();
  type metadata accessor for ExtremaReducer();
  v1 = swift_allocObject();
  type metadata accessor for ExtremaFinalizer();
  v2 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21A798);
  result = (_QWORD *)swift_allocObject();
  result[2] = sub_1A624A6C8;
  result[3] = v0;
  result[4] = sub_1A624A6F0;
  result[5] = v1;
  result[6] = sub_1A624A714;
  result[7] = v2;
  return result;
}

uint64_t sub_1A624A5F8()
{
  return ExtremaInitializer.initialize(a:b:c:d:startDate:)();
}

uint64_t sub_1A624A618(uint64_t a1, uint64_t a2, double *a3, double *a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return ExtremaReducer.reduce(accumulator:a:b:c:d:time1:time2:useMonotone:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1A624A638@<X0>(uint64_t a1@<X0>, double a2@<X6>, double a3@<X7>, double *a4@<X8>, char a5)
{
  return ExtremaFinalizer.finalize(accumulator:a:b:c:d:endDate:clampRange:)(a1, a2, a3, a4, a5 & 1);
}

uint64_t sub_1A624A66C@<X0>(uint64_t *a1@<X0>, double a2@<X6>, double a3@<X7>, double *a4@<X8>, char a5)
{
  return sub_1A624A638(*a1, a2, a3, a4, a5 & 1);
}

uint64_t sub_1A624A68C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, double *a3@<X2>, double *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t *a9@<X8>)
{
  uint64_t result;

  result = sub_1A624A618(*a1, a2, a3, a4, a5, a6, a7, a8);
  *a9 = result;
  return result;
}

uint64_t sub_1A624A6C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1A624A5F8();
  *a1 = result;
  return result;
}

uint64_t sub_1A624A6F0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, double *a3@<X2>, double *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t *a9@<X8>)
{
  return sub_1A624A68C(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1A624A714@<X0>(uint64_t *a1@<X0>, double a2@<X6>, double a3@<X7>, double *a4@<X8>, char a5)
{
  return sub_1A624A66C(a1, a2, a3, a4, a5 & 1);
}

uint64_t WeatherInterpolator.__allocating_init<A, B, C>(initializer:reducer:finalizer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17;

  v17 = swift_allocObject();
  WeatherInterpolator.init<A, B, C>(initializer:reducer:finalizer:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  return v17;
}

_QWORD *WeatherInterpolator.init<A, B, C>(initializer:reducer:finalizer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v13;
  uint64_t (*v16)();
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v28;

  v28 = *(_QWORD *)(*v9 + 80);
  v13 = *(_QWORD *)(*v9 + 88);
  v16 = sub_1A624A934(a1, v28, v13, a4, a5, a6, a7, a8, a9);
  v18 = v17;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 8))(a1, a4);
  v9[2] = v16;
  v9[3] = v18;
  v19 = a7;
  v20 = sub_1A624AA2C(a2, v28, v13, a4, a5, a6, a7, a8, a9);
  v22 = v21;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 8))(a2, a5);
  v9[4] = v20;
  v9[5] = v22;
  v23 = sub_1A624AB24(a3, v28, v13, a4, a5, a6, v19, a8, a9);
  v25 = v24;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 8))(a3, a6);
  v9[6] = v23;
  v9[7] = v25;
  return v9;
}

uint64_t (*sub_1A624A934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9))()
{
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  char *v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v22 = a7;
  v23 = a8;
  v14 = *(_QWORD *)(a4 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = MEMORY[0x1E0C80A78](a1);
  v17 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v14 + 16))(v17, v16);
  v18 = (*(unsigned __int8 *)(v14 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v19 = (char *)swift_allocObject();
  *((_QWORD *)v19 + 2) = a2;
  *((_QWORD *)v19 + 3) = a3;
  *((_QWORD *)v19 + 4) = a4;
  *((_QWORD *)v19 + 5) = a5;
  v20 = v22;
  *((_QWORD *)v19 + 6) = a6;
  *((_QWORD *)v19 + 7) = v20;
  *((_QWORD *)v19 + 8) = v23;
  *((_QWORD *)v19 + 9) = a9;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v19[v18], v17, a4);
  return sub_1A624C310;
}

uint64_t (*sub_1A624AA2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9))(uint64_t a1, uint64_t a2)
{
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  char *v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v22 = a7;
  v23 = a8;
  v14 = *(_QWORD *)(a5 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = MEMORY[0x1E0C80A78](a1);
  v17 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v14 + 16))(v17, v16);
  v18 = (*(unsigned __int8 *)(v14 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v19 = (char *)swift_allocObject();
  *((_QWORD *)v19 + 2) = a2;
  *((_QWORD *)v19 + 3) = a3;
  *((_QWORD *)v19 + 4) = a4;
  *((_QWORD *)v19 + 5) = a5;
  v20 = v22;
  *((_QWORD *)v19 + 6) = a6;
  *((_QWORD *)v19 + 7) = v20;
  *((_QWORD *)v19 + 8) = v23;
  *((_QWORD *)v19 + 9) = a9;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v19[v18], v17, a5);
  return sub_1A624C2A4;
}

uint64_t (*sub_1A624AB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9))(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  char *v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v22 = a7;
  v23 = a8;
  v14 = *(_QWORD *)(a6 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = MEMORY[0x1E0C80A78](a1);
  v17 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v14 + 16))(v17, v16);
  v18 = (*(unsigned __int8 *)(v14 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v19 = (char *)swift_allocObject();
  *((_QWORD *)v19 + 2) = a2;
  *((_QWORD *)v19 + 3) = a3;
  *((_QWORD *)v19 + 4) = a4;
  *((_QWORD *)v19 + 5) = a5;
  v20 = v22;
  *((_QWORD *)v19 + 6) = a6;
  *((_QWORD *)v19 + 7) = v20;
  *((_QWORD *)v19 + 8) = v23;
  *((_QWORD *)v19 + 9) = a9;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v19[v18], v17, a6);
  return sub_1A624C22C;
}

void WeatherInterpolator.reduce(_:from:to:clampRange:useMonotone:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, int a7@<W6>, unint64_t a8@<X8>)
{
  uint64_t *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD, _QWORD, _QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(unint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  os_log_type_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(_QWORD, _QWORD, _QWORD);
  NSObject *v86;
  os_log_type_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  void (*v92)(_QWORD, _QWORD);
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(unint64_t, uint64_t);
  uint64_t v101;
  NSObject *v102;
  os_log_type_t v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  void (*v117)(unint64_t, uint64_t);
  unint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _BYTE *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(uint64_t, uint64_t);
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  os_log_t v146;
  uint64_t v147;
  uint64_t v148;
  void (*v149)(uint64_t, uint64_t);
  unint64_t v150;
  char v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  BOOL v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _BYTE *v161;
  _BYTE v162[4];
  int v163;
  unint64_t v164;
  _BYTE *v165;
  uint64_t v166;
  uint64_t v167;
  _BYTE *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  int v172;
  _BYTE *v173;
  void (*v174)(uint64_t, uint64_t, uint64_t, os_log_t, uint64_t, uint64_t, uint64_t, _QWORD);
  uint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  uint64_t v178;
  void (*v179)(unint64_t, uint64_t);
  uint64_t v180;
  void (*v181)(_QWORD, _QWORD, _QWORD);
  uint64_t v182;
  unint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  _BYTE *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  os_log_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;

  v172 = a7;
  LODWORD(v174) = a6;
  v171 = a5;
  v170 = a4;
  v203 = a3;
  v201 = a2;
  v9 = a1;
  v202 = *v8;
  v196 = *(_QWORD *)(v202 + 80);
  v194 = *(_QWORD *)(v196 - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_27();
  v193 = v11;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_16_0();
  v199 = v13;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v14);
  v195 = &v162[-v15];
  v16 = sub_1A6332C24();
  v186 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_27();
  v184 = v17;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_16_0();
  v181 = v19;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_16_0();
  v180 = v21;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_16_0();
  v179 = v23;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_16_0();
  v190 = v25;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_16_0();
  v198 = v27;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v28);
  v173 = &v162[-v29];
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED219708);
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_27();
  v197 = v31;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_16_0();
  v192 = v33;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v34);
  OUTLINED_FUNCTION_16_0();
  v175 = v35;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v36);
  OUTLINED_FUNCTION_16_0();
  v178 = v37;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v38);
  v40 = &v162[-v39];
  MEMORY[0x1E0C80A78](v41);
  v43 = &v162[-v42];
  v44 = type metadata accessor for InterpolationElement();
  v45 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  OUTLINED_FUNCTION_27();
  v183 = v46;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v47);
  OUTLINED_FUNCTION_16_0();
  v182 = v48;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v49);
  OUTLINED_FUNCTION_16_0();
  v189 = v50;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v51);
  OUTLINED_FUNCTION_16_0();
  v188 = v52;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v53);
  OUTLINED_FUNCTION_16_0();
  v200 = v54;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v55);
  OUTLINED_FUNCTION_16_0();
  v191 = v56;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v57);
  OUTLINED_FUNCTION_16_0();
  v176 = v58;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v59);
  OUTLINED_FUNCTION_16_0();
  v187 = v60;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v61);
  v63 = &v162[-v62];
  v65 = MEMORY[0x1E0C80A78](v64);
  v67 = &v162[-v66];
  v68 = MEMORY[0x1A85BE27C](v9, v44, v65);
  if (v68 < 2)
    goto LABEL_7;
  v69 = v68;
  v185 = v16;
  v70 = a8;
  v168 = v63;
  v205 = v9;
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846E78);
  v169 = MEMORY[0x1A85BEED0](MEMORY[0x1E0DEAF50], v71);
  sub_1A6335648();
  if (__swift_getEnumTagSinglePayload((uint64_t)v43, 1, v44) == 1)
  {
    v40 = v43;
LABEL_6:
    a8 = v70;
    sub_1A624C0E8((uint64_t)v40);
LABEL_7:
    if (qword_1EE845460 != -1)
      swift_once();
    v72 = OUTLINED_FUNCTION_30();
    v73 = __swift_project_value_buffer(v72, (uint64_t)qword_1EE85E380);
    sub_1A6334CDC();
    v74 = sub_1A6334EEC();
    v75 = sub_1A6335690();
    if (OUTLINED_FUNCTION_665(v75))
    {
      v76 = (uint8_t *)OUTLINED_FUNCTION_2_4();
      *(_DWORD *)v76 = 134217984;
      v205 = *(_QWORD *)(v9 + 16);
      sub_1A6335774();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A6185000, v74, v73, "Failed to reduce data points because there are not enough data points; count=%ld",
        v76,
        0xCu);
      OUTLINED_FUNCTION_0_5();
    }

    swift_bridgeObjectRelease();
LABEL_12:
    v77 = *(_QWORD *)(v202 + 88);
    v78 = a8;
LABEL_13:
    __swift_storeEnumTagSinglePayload(v78, 1, 1, v77);
    return;
  }
  sub_1A624C128((uint64_t)v43, (uint64_t)v67);
  v205 = v9;
  MEMORY[0x1A85BEED0](MEMORY[0x1E0DEAF20], v71);
  sub_1A63352AC();
  if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v44) == 1)
  {
    sub_1A624C16C((uint64_t)v67);
    goto LABEL_6;
  }
  v166 = v71;
  sub_1A624C128((uint64_t)v40, (uint64_t)v168);
  v79 = sub_1A6189BFC((unint64_t *)&unk_1ED21B7A0, MEMORY[0x1E0CB08B0]);
  v80 = v185;
  if ((OUTLINED_FUNCTION_23_10() & 1) != 0)
  {
    v165 = v67;
    a8 = v70;
    if (qword_1EE845460 != -1)
LABEL_48:
      swift_once();
    v81 = OUTLINED_FUNCTION_30();
    v82 = __swift_project_value_buffer(v81, (uint64_t)qword_1EE85E380);
    v83 = v185;
    v84 = v186;
    v85 = v181;
    OUTLINED_FUNCTION_22_9((uint64_t)v181);
    OUTLINED_FUNCTION_15_15((uint64_t)&v207);
    v86 = sub_1A6334EEC();
    v87 = sub_1A6335690();
    if (OUTLINED_FUNCTION_665(v87))
    {
      v88 = OUTLINED_FUNCTION_2_4();
      v164 = a8;
      v89 = v88;
      v203 = OUTLINED_FUNCTION_2_4();
      v205 = v203;
      *(_DWORD *)v89 = 136315394;
      sub_1A6189BFC((unint64_t *)&qword_1ED21B780, MEMORY[0x1E0CB08F0]);
      LODWORD(v201) = v82;
      v90 = OUTLINED_FUNCTION_24_9();
      v204 = OUTLINED_FUNCTION_4_21(v90, v91);
      OUTLINED_FUNCTION_19_12();
      OUTLINED_FUNCTION_399();
      v92 = *(void (**)(_QWORD, _QWORD))(v84 + 8);
      v92(v85, v83);
      *(_WORD *)(v89 + 12) = 2080;
      v93 = v184;
      v94 = OUTLINED_FUNCTION_24_9();
      v204 = OUTLINED_FUNCTION_4_21(v94, v95);
      OUTLINED_FUNCTION_19_12();
      OUTLINED_FUNCTION_399();
      v92(v93, v83);
      _os_log_impl(&dword_1A6185000, v86, (os_log_type_t)v201, "Failed to reduce data points because requested time range is degenerate; startDate=%s, endDate=%s",
        (uint8_t *)v89,
        0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_0_5();
    }

    OUTLINED_FUNCTION_32_1(v9);
    OUTLINED_FUNCTION_32_1((uint64_t)v85);
    OUTLINED_FUNCTION_10_11((uint64_t)&v200);
    OUTLINED_FUNCTION_10_11((uint64_t)&v197);
    goto LABEL_12;
  }
  v96 = OUTLINED_FUNCTION_23_10();
  v97 = v70;
  v98 = v80;
  v164 = v97;
  if ((v96 & 1) != 0 || (OUTLINED_FUNCTION_23_10() & 1) != 0)
  {
    if (qword_1EE845460 != -1)
      swift_once();
    v99 = OUTLINED_FUNCTION_30();
    __swift_project_value_buffer(v99, (uint64_t)qword_1EE85E380);
    v100 = v179;
    OUTLINED_FUNCTION_22_9((uint64_t)v179);
    OUTLINED_FUNCTION_15_15((uint64_t)&v206);
    sub_1A624C1A8((uint64_t)v67, v182);
    v101 = (uint64_t)v168;
    sub_1A624C1A8((uint64_t)v168, v183);
    v102 = sub_1A6334EEC();
    v103 = sub_1A6335690();
    v104 = v103;
    if (os_log_type_enabled(v102, v103))
    {
      v105 = OUTLINED_FUNCTION_2_4();
      v203 = OUTLINED_FUNCTION_2_4();
      v205 = v203;
      *(_DWORD *)v105 = 136315906;
      LODWORD(v201) = v104;
      sub_1A6189BFC((unint64_t *)&qword_1ED21B780, MEMORY[0x1E0CB08F0]);
      v165 = v67;
      v200 = v102;
      v106 = OUTLINED_FUNCTION_9_13();
      v204 = OUTLINED_FUNCTION_4_21(v106, v107);
      OUTLINED_FUNCTION_5_16();
      OUTLINED_FUNCTION_399();
      OUTLINED_FUNCTION_32_1((uint64_t)v100);
      *(_WORD *)(v105 + 12) = 2080;
      v108 = OUTLINED_FUNCTION_9_13();
      v204 = OUTLINED_FUNCTION_4_21(v108, v109);
      OUTLINED_FUNCTION_5_16();
      OUTLINED_FUNCTION_399();
      OUTLINED_FUNCTION_32_1(v9);
      *(_WORD *)(v105 + 22) = 2080;
      v110 = OUTLINED_FUNCTION_9_13();
      v204 = OUTLINED_FUNCTION_4_21(v110, v111);
      OUTLINED_FUNCTION_5_16();
      OUTLINED_FUNCTION_399();
      OUTLINED_FUNCTION_16_15();
      *(_WORD *)(v105 + 32) = 2080;
      v112 = OUTLINED_FUNCTION_9_13();
      v204 = OUTLINED_FUNCTION_4_21(v112, v113);
      OUTLINED_FUNCTION_5_16();
      OUTLINED_FUNCTION_399();
      OUTLINED_FUNCTION_16_15();
      _os_log_impl(&dword_1A6185000, v200, (os_log_type_t)v201, "Failed to reduce data points because the requested time range is outside the range of the data points; startDate"
        "=%s, endDate=%s, dataPointsStartDate=%s, dataPointsEndDate=%s",
        (uint8_t *)v105,
        0x2Au);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_0_5();
    }

    OUTLINED_FUNCTION_17_11();
    OUTLINED_FUNCTION_16_15();
    OUTLINED_FUNCTION_32_1(v9);
    OUTLINED_FUNCTION_32_1((uint64_t)v100);
    sub_1A624C16C(v101);
    sub_1A624C16C((uint64_t)v67);
    v77 = *(_QWORD *)(v202 + 88);
    v78 = v164;
    goto LABEL_13;
  }
  v167 = v44;
  v182 = v79;
  v165 = v67;
  v163 = v174 & 1;
  v114 = v186;
  v202 = *(_QWORD *)(v186 + 16);
  v184 = v69 - 1;
  v115 = 1;
  a8 = (unint64_t)v173;
  while (1)
  {
    ((void (*)(unint64_t, uint64_t, uint64_t))v202)(a8, v201, v98);
    if (v69 == v115)
      break;
    if (v115 >= *(_QWORD *)(v9 + 16))
    {
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    sub_1A624C1A8(v9+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v115, v187);
    v116 = sub_1A63352C4();
    v117 = *(void (**)(unint64_t, uint64_t))(v114 + 8);
    v117(a8, v98);
    OUTLINED_FUNCTION_8_15();
    ++v115;
    if ((v116 & 1) != 0)
    {
      v179 = v117;
      v118 = v115 - 2;
      goto LABEL_32;
    }
  }
  v179 = *(void (**)(unint64_t, uint64_t))(v114 + 8);
  v179(a8, v98);
  v118 = v184;
LABEL_32:
  v184 = v118;
  v119 = v177;
  v186 = v177[2];
  v183 = v177[3];
  OUTLINED_FUNCTION_26_6(v118 - 1);
  sub_1A624BC70(*(_QWORD *)(v120 - 256));
  v121 = v187;
  OUTLINED_FUNCTION_27_5();
  v122 = v176;
  OUTLINED_FUNCTION_27_5();
  v204 = v118 + 2;
  v205 = v9;
  v123 = v175;
  sub_1A624BC70(v175);
  v124 = v195;
  v125 = v178;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v186)(v178, v121, v122, v123, v201);
  v126 = v123;
  v127 = v184;
  sub_1A624C0E8(v126);
  OUTLINED_FUNCTION_16_15();
  OUTLINED_FUNCTION_17_11();
  sub_1A624C0E8(v125);
  v174 = (void (*)(uint64_t, uint64_t, uint64_t, os_log_t, uint64_t, uint64_t, uint64_t, _QWORD))v119[4];
  v173 = (_BYTE *)v119[5];
  LODWORD(v186) = v172 & 1;
  v181 = *(void (**)(_QWORD, _QWORD, _QWORD))(v194 + 16);
  v128 = v196;
  v129 = v193;
  v180 = v9;
  v130 = v192;
  do
  {
    v181(v129, v124, v128);
    v204 = v127 - 1;
    v205 = v9;
    sub_1A624BC70(v130);
    v131 = v167;
    sub_1A6335588();
    a8 = v127 + 1;
    if (__OFADD__(v127, 1))
    {
      __break(1u);
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    OUTLINED_FUNCTION_13_13();
    if (__OFADD__(v127, 2))
      goto LABEL_46;
    v204 = v127 + 2;
    v205 = v9;
    sub_1A624BC70(v197);
    v132 = v188;
    v184 = v127;
    OUTLINED_FUNCTION_13_13();
    v133 = v132 + *(int *)(v131 + 20);
    v134 = v201;
    v135 = v185;
    if ((sub_1A63352D0() & 1) != 0)
    {
      v136 = v198;
      v137 = v134;
    }
    else
    {
      v136 = v198;
      v137 = v133;
    }
    OUTLINED_FUNCTION_21_9(v136, v137);
    v138 = (void (*)(uint64_t, uint64_t))v179;
    OUTLINED_FUNCTION_8_15();
    v139 = v189;
    OUTLINED_FUNCTION_13_13();
    v140 = v139 + *(int *)(v131 + 20);
    v141 = v203;
    v142 = sub_1A63352C4();
    v183 = a8;
    v143 = v190;
    if ((v142 & 1) != 0)
    {
      v144 = v190;
      v145 = v141;
    }
    else
    {
      v144 = v190;
      v145 = v140;
    }
    OUTLINED_FUNCTION_21_9(v144, v145);
    OUTLINED_FUNCTION_8_15();
    v146 = v200;
    v130 = v192;
    v129 = v193;
    v147 = v197;
    v174(v193, v192, v191, v200, v197, v198, v143, v186);
    v138(v143, v135);
    OUTLINED_FUNCTION_8_15();
    sub_1A624C0E8(v147);
    sub_1A624C16C((uint64_t)v146);
    OUTLINED_FUNCTION_17_11();
    sub_1A624C0E8(v130);
    v148 = v194;
    v149 = *(void (**)(uint64_t, uint64_t))(v194 + 8);
    v128 = v196;
    v149(v129, v196);
    v124 = v195;
    v149((uint64_t)v195, v128);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v148 + 32))(v124, v199, v128);
    v150 = v183;
    v9 = v180;
    sub_1A624BE5C(v186, v183, v180, v203);
    v127 = v184 + 1;
  }
  while ((v151 & 1) != 0);
  if (__OFSUB__(v150, 2))
  {
    __break(1u);
  }
  else
  {
    v152 = v150;
    v202 = v177[6];
    OUTLINED_FUNCTION_26_6(v150 - 2);
    v154 = *(_QWORD *)(v153 - 256);
    sub_1A624BC70(v154);
    v155 = v187;
    sub_1A6335588();
    v156 = v176;
    sub_1A6335588();
    v157 = __OFADD__(v152, 1);
    v158 = v152 + 1;
    v159 = v203;
    if (!v157)
    {
      v204 = v158;
      v205 = v9;
      v160 = v175;
      sub_1A624BC70(v175);
      v161 = v195;
      ((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _BYTE))v202)(v195, v154, v155, v156, v160, v159, v170, v171, v163);
      sub_1A624C0E8(v160);
      OUTLINED_FUNCTION_17_11();
      sub_1A624C16C(v155);
      sub_1A624C0E8(v154);
      v149((uint64_t)v161, v196);
      OUTLINED_FUNCTION_10_11((uint64_t)&v200);
      OUTLINED_FUNCTION_10_11((uint64_t)&v197);
      return;
    }
  }
  __break(1u);
}

uint64_t sub_1A624BC70@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  char v6;
  void (*v7)(_BYTE *, _QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[32];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v5 = &v15[-v4];
  sub_1A633563C();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v6 = sub_1A6335480();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, AssociatedTypeWitness);
  if ((v6 & 1) != 0)
  {
    v7 = (void (*)(_BYTE *, _QWORD))sub_1A6335654();
    v9 = v8;
    v10 = swift_getAssociatedTypeWitness();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, v9, v10);
    v7(v15, 0);
    v11 = a1;
    v12 = 0;
    v13 = v10;
  }
  else
  {
    v13 = swift_getAssociatedTypeWitness();
    v11 = a1;
    v12 = 1;
  }
  return __swift_storeEnumTagSinglePayload(v11, v12, 1, v13);
}

void sub_1A624BE5C(char a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = a4;
  v7 = type metadata accessor for InterpolationElement();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A6332C24();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v23 - v17;
  if ((a1 & 1) != 0)
  {
    if (!__OFADD__(a2, 2))
    {
      v19 = MEMORY[0x1A85BE27C](a3, v7, v16);
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v18, v24, v11);
      if ((uint64_t)(a2 + 2) >= v19)
      {
        (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
        return;
      }
      if ((a2 & 0x8000000000000000) == 0)
      {
        if (*(_QWORD *)(a3 + 16) > a2)
        {
          sub_1A624C1A8(a3+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * a2, (uint64_t)v10);
          v20 = &v10[*(int *)(v7 + 20)];
          sub_1A6332B88();
          v21 = *(void (**)(char *, uint64_t))(v12 + 8);
          v21(v18, v11);
LABEL_12:
          v21(v20, v11);
          return;
        }
        goto LABEL_18;
      }
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (__OFADD__(a2, 1))
    goto LABEL_16;
  v22 = MEMORY[0x1A85BE27C](a3, v7, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v24, v11);
  if ((uint64_t)(a2 + 1) >= v22)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return;
  }
  if ((a2 & 0x8000000000000000) == 0)
  {
    if (*(_QWORD *)(a3 + 16) > a2)
    {
      sub_1A624C1A8(a3+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * a2, (uint64_t)v10);
      v20 = &v10[*(int *)(v7 + 20)];
      sub_1A6332B88();
      v21 = *(void (**)(char *, uint64_t))(v12 + 8);
      v21(v14, v11);
      goto LABEL_12;
    }
    goto LABEL_20;
  }
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
}

uint64_t WeatherInterpolator.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t WeatherInterpolator.__deallocating_deinit()
{
  WeatherInterpolator.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1A624C0E8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED219708);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A624C128(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for InterpolationElement();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A624C16C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for InterpolationElement();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A624C1A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for InterpolationElement();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t method lookup function for WeatherInterpolator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WeatherInterpolator.__allocating_init<A, B, C>(initializer:reducer:finalizer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1A624C208(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_1_20(a1, *(_QWORD *)(v1 + 48));
  OUTLINED_FUNCTION_631();
  return OUTLINED_FUNCTION_3_18();
}

uint64_t sub_1A624C22C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 + 72) + 24))(a1, a2, a3);
}

uint64_t sub_1A624C280(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_1_20(a1, *(_QWORD *)(v1 + 40));
  OUTLINED_FUNCTION_631();
  return OUTLINED_FUNCTION_3_18();
}

uint64_t sub_1A624C2A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 + 64) + 16))(a1, a2);
}

uint64_t sub_1A624C2EC(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_1_20(a1, *(_QWORD *)(v1 + 32));
  OUTLINED_FUNCTION_631();
  return OUTLINED_FUNCTION_3_18();
}

uint64_t sub_1A624C310()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 56) + 16))();
}

WeatherDaemon::CardinalDirection_optional __swiftcall CardinalDirection.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  WeatherDaemon::CardinalDirection_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A6335918();
  result.value = swift_bridgeObjectRelease();
  v5 = 8;
  if (v3 < 8)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t CardinalDirection.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A624C3C8 + 4 * byte_1A633B760[*v0]))(78, 0xE100000000000000);
}

uint64_t sub_1A624C3C8()
{
  return 17742;
}

uint64_t sub_1A624C3D4()
{
  return 69;
}

uint64_t sub_1A624C3DC()
{
  return 17747;
}

uint64_t sub_1A624C3E8()
{
  return 83;
}

uint64_t sub_1A624C3F0()
{
  return 22355;
}

uint64_t sub_1A624C3FC()
{
  return 87;
}

uint64_t sub_1A624C404()
{
  return 22350;
}

void sub_1A624C410(char *a1)
{
  sub_1A6243DD0(*a1);
}

unint64_t sub_1A624C420()
{
  unint64_t result;

  result = qword_1EE846E80;
  if (!qword_1EE846E80)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for CardinalDirection, &type metadata for CardinalDirection);
    atomic_store(result, (unint64_t *)&qword_1EE846E80);
  }
  return result;
}

void sub_1A624C45C()
{
  unsigned __int8 *v0;

  sub_1A62DE24C(*v0);
}

void sub_1A624C464(uint64_t a1)
{
  char *v1;

  sub_1A61F4A68(a1, *v1);
}

void sub_1A624C46C(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1A61F5B00(a1, *v1);
}

WeatherDaemon::CardinalDirection_optional sub_1A624C474(Swift::String *a1)
{
  return CardinalDirection.init(rawValue:)(*a1);
}

uint64_t sub_1A624C480@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CardinalDirection.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A624C4A4()
{
  sub_1A624C640();
  return sub_1A63354F8();
}

uint64_t sub_1A624C500()
{
  sub_1A624C640();
  return sub_1A63354BC();
}

void sub_1A624C54C(_BYTE *a1@<X8>)
{
  static CardinalDirection.read(from:)(a1);
}

void sub_1A624C560()
{
  CardinalDirection.write(to:)();
}

uint64_t storeEnumTagSinglePayload for CardinalDirection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1A624C5C0 + 4 * byte_1A633B76D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1A624C5F4 + 4 * byte_1A633B768[v4]))();
}

uint64_t sub_1A624C5F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A624C5FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A624C604);
  return result;
}

uint64_t sub_1A624C610(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A624C618);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1A624C61C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A624C624(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CardinalDirection()
{
  return &type metadata for CardinalDirection;
}

unint64_t sub_1A624C640()
{
  unint64_t result;

  result = qword_1ED219B68;
  if (!qword_1ED219B68)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for CardinalDirection, &type metadata for CardinalDirection);
    atomic_store(result, (unint64_t *)&qword_1ED219B68);
  }
  return result;
}

double CubicInterpolationResult.maxT.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double CubicInterpolationResult.maxTimeInterval.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double CubicInterpolationResult.maxValue.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double CubicInterpolationResult.minT.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

double CubicInterpolationResult.minTimeInterval.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double CubicInterpolationResult.minValue.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for PrecipitationAmountRange(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PrecipitationAmountRange(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CubicInterpolationResult()
{
  return &type metadata for CubicInterpolationResult;
}

void static WeatherComparisonsDescriptor.name.getter()
{
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_53();
}

void static WeatherComparisonsDescriptor.name.setter()
{
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_1_8();
}

uint64_t (*static WeatherComparisonsDescriptor.name.modify())()
{
  OUTLINED_FUNCTION_0_11();
  return j__swift_endAccess;
}

uint64_t sub_1A624C7E0()
{
  uint64_t result;

  sub_1A6334CDC();
  sub_1A63353F0();
  result = swift_bridgeObjectRelease();
  qword_1ED21C590 = 0x2E312E302E30;
  *(_QWORD *)algn_1ED21C598 = 0xE600000000000000;
  return result;
}

void static WeatherComparisonsDescriptor.version.getter()
{
  if (qword_1ED21C5A0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_53();
}

void static WeatherComparisonsDescriptor.version.setter()
{
  if (qword_1ED21C5A0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_1_8();
}

uint64_t (*static WeatherComparisonsDescriptor.version.modify())()
{
  if (qword_1ED21C5A0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  return j_j__swift_endAccess;
}

ValueMetadata *type metadata accessor for WeatherComparisonsDescriptor()
{
  return &type metadata for WeatherComparisonsDescriptor;
}

uint64_t sub_1A624C9A4(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 16) = (*a1 & 1) == 0;
  *(_QWORD *)(v3 + 24) = a3;
  *(_QWORD *)(v3 + 32) = a2;
  swift_retain();
  swift_retain();
  sub_1A624CA04();
  OUTLINED_FUNCTION_2_6();
  swift_release();
  return v3;
}

uint64_t sub_1A624CA04()
{
  uint64_t result;
  char v1;

  sub_1A6332E28();
  sub_1A6332E1C();
  if (qword_1EE845420 != -1)
    swift_once();
  sub_1A6332E10();
  result = swift_release();
  if (v1 == 1)
  {
    type metadata accessor for Settings.DaemonStore();
    swift_initStaticObject();
    sub_1A61DB4E8();
    sub_1A6332E88();
    return sub_1A624E7F8();
  }
  return result;
}

uint64_t sub_1A624CAD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v40[3];
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;

  v5 = v4;
  v8 = *v5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8462D8);
  MEMORY[0x1E0C80A78](v9);
  v46 = (uint64_t)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MonthlyWeatherStatistics();
  MEMORY[0x1E0C80A78](v11);
  v44 = (uint64_t)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v43 = (uint64_t)v40 - v14;
  v15 = *(unsigned __int8 *)(a4 + 8);
  v42 = *(_QWORD *)a4;
  v48 = v42;
  v41 = v15;
  v49 = v15;
  OUTLINED_FUNCTION_0_18();
  v20 = sub_1A623287C(v16, v17, v18, v19);
  v22 = v21;
  if (qword_1EE845498 != -1)
    swift_once();
  v23 = sub_1A6334F04();
  __swift_project_value_buffer(v23, (uint64_t)qword_1EE85E428);
  swift_bridgeObjectRetain_n();
  v24 = sub_1A6334EEC();
  v25 = sub_1A633569C();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc();
    v40[2] = v8;
    v27 = v26;
    v28 = swift_slowAlloc();
    v45 = v20;
    v40[0] = v28;
    *(_DWORD *)v27 = 141558275;
    v47 = 1752392040;
    v48 = v28;
    v40[1] = a2;
    sub_1A6335774();
    *(_WORD *)(v27 + 12) = 2081;
    sub_1A6334CDC();
    v47 = sub_1A61A6A1C(v45, v22, &v48);
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v24, v25, "Attempting to read monthly statistics from cache; key=%{private,mask.hash}s",
      (uint8_t *)v27,
      0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_0_5();
  }

  swift_bridgeObjectRelease_n();
  v29 = v46;
  sub_1A624CF04(v20, v22, v46);
  if (__swift_getEnumTagSinglePayload(v29, 1, v11) == 1)
  {
    sub_1A61DB454(v29, &qword_1EE8462D8);
    v48 = v42;
    v49 = v41;
    OUTLINED_FUNCTION_0_18();
    sub_1A6231AB4(v30, v31, v32);
    v33 = OUTLINED_FUNCTION_3_0();
    *(_QWORD *)(v33 + 16) = v20;
    *(_QWORD *)(v33 + 24) = v22;
    sub_1A6334CDC();
    v34 = (void *)sub_1A6334DD8();
    sub_1A6334E2C();
    swift_release();
    OUTLINED_FUNCTION_2_6();

    v35 = OUTLINED_FUNCTION_3_0();
    *(_QWORD *)(v35 + 16) = v20;
    *(_QWORD *)(v35 + 24) = v22;
    v36 = (void *)sub_1A6334DD8();
    v37 = sub_1A6334E44();
    swift_release();
    OUTLINED_FUNCTION_2_6();

  }
  else
  {
    swift_bridgeObjectRelease();
    v38 = v43;
    sub_1A624EAC8(v29, v43);
    sub_1A624EB0C(v38, v44);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846248);
    swift_allocObject();
    v37 = sub_1A6334E5C();
    sub_1A624EB50(v38);
  }
  return v37;
}

uint64_t sub_1A624CF04@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  const char *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[2];
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;

  v45 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CBA0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A6334F58();
  v43 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE845498 != -1)
    swift_once();
  v11 = sub_1A6334F04();
  v12 = __swift_project_value_buffer(v11, (uint64_t)qword_1EE85E428);
  swift_bridgeObjectRetain_n();
  v13 = sub_1A6334EEC();
  v14 = sub_1A633569C();
  v15 = os_log_type_enabled(v13, v14);
  v16 = &protocol conformance descriptor for MonthlyWeatherStatisticsDescriptor;
  v44 = v10;
  if (v15)
  {
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v42 = v12;
    v19 = v18;
    v52 = v18;
    *(_DWORD *)v17 = 141558275;
    v48[0] = 1752392040;
    sub_1A6335774();
    *(_WORD *)(v17 + 12) = 2081;
    sub_1A6334CDC();
    v48[0] = sub_1A61A6A1C(v45, a2, &v52);
    v16 = (_QWORD *)&protocol conformance descriptor for MonthlyWeatherStatisticsDescriptor;
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v13, v14, "Attempting to retrieve monthly statistics from cache; key=%{private,mask.hash}s",
      (uint8_t *)v17,
      0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v19, -1, -1);
    MEMORY[0x1A85BEFA8](v17, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (*(_BYTE *)(v46 + 16) != 1)
  {
    v23 = sub_1A6334EEC();
    v24 = sub_1A6335690();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      v26 = "Monthly statistics cache is disabled - returning nil";
LABEL_13:
      _os_log_impl(&dword_1A6185000, v23, v24, v26, v25, 2u);
      MEMORY[0x1A85BEFA8](v25, -1, -1);
    }
LABEL_14:

LABEL_15:
    v27 = type metadata accessor for MonthlyWeatherStatistics();
    return __swift_storeEnumTagSinglePayload(a3, 1, 1, v27);
  }
  v20 = sub_1A61D8F8C();
  if (!v20)
  {
    v23 = sub_1A6334EEC();
    v24 = sub_1A6335690();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      v26 = "Cannot retrieve cached monthly statistics due to missing store";
      goto LABEL_13;
    }
    goto LABEL_14;
  }
  v46 = v20;
  sub_1A6335000();
  v55 = (char *)MEMORY[0x1E0DEA968];
  v56 = MEMORY[0x1E0DB2EC8];
  v52 = v45;
  v53 = a2;
  sub_1A6334CDC();
  v21 = v44;
  sub_1A6334FB8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v52);
  v22 = sub_1A633506C();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v22);
  sub_1A6334FDC();
  swift_release();
  sub_1A61DB454((uint64_t)v7, &qword_1ED21CBA0);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v21, v8);
  v29 = v48[0];
  if (!v48[0])
  {
    swift_bridgeObjectRetain_n();
    v37 = sub_1A6334EEC();
    v38 = sub_1A633569C();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc();
      v40 = swift_slowAlloc();
      v52 = v40;
      *(_DWORD *)v39 = v16[22];
      v48[0] = 1752392040;
      sub_1A6335774();
      *(_WORD *)(v39 + 12) = 2081;
      sub_1A6334CDC();
      v48[0] = sub_1A61A6A1C(v45, a2, &v52);
      sub_1A6335774();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A6185000, v37, v38, "Could not find monthly statistics in cache; key=%{private,mask.hash}s",
        (uint8_t *)v39,
        0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85BEFA8](v40, -1, -1);
      MEMORY[0x1A85BEFA8](v39, -1, -1);
      swift_release();

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release();
    }
    goto LABEL_15;
  }
  v30 = v49;
  v52 = v48[0];
  v53 = v48[1];
  v54 = v49;
  v55 = v50;
  v43 = v51;
  v44 = v50;
  v56 = v51;
  swift_bridgeObjectRetain_n();
  v31 = sub_1A6334EEC();
  v32 = sub_1A633569C();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = swift_slowAlloc();
    v42 = v30;
    v34 = a2;
    v35 = v33;
    v36 = swift_slowAlloc();
    v48[0] = v36;
    *(_DWORD *)v35 = v16[22];
    v47 = 1752392040;
    sub_1A6335774();
    *(_WORD *)(v35 + 12) = 2081;
    sub_1A6334CDC();
    v47 = sub_1A61A6A1C(v45, v34, v48);
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v31, v32, "Successfully retrieved monthly statistics from cache; key=%{private,mask.hash}s",
      (uint8_t *)v35,
      0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v36, -1, -1);
    MEMORY[0x1A85BEFA8](v35, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1A62EEAA4();
  swift_release();
  return sub_1A61DB490(v29);
}

uint64_t sub_1A624D860(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v8 = type metadata accessor for MonthlyWeatherStatistics();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE845498 != -1)
    swift_once();
  v11 = sub_1A6334F04();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EE85E428);
  swift_bridgeObjectRetain_n();
  v12 = sub_1A6334EEC();
  v13 = sub_1A633569C();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    v20 = v4;
    v18 = v15;
    v22 = v15;
    *(_DWORD *)v14 = 141558275;
    v21 = 1752392040;
    v19 = v10;
    sub_1A6335774();
    *(_WORD *)(v14 + 12) = 2081;
    sub_1A6334CDC();
    v21 = sub_1A61A6A1C(a3, a4, &v22);
    v10 = v19;
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v12, v13, "Successfully fetched monthly statistics. key=%{private,mask.hash}s", (uint8_t *)v14, 0x16u);
    v16 = v18;
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v16, -1, -1);
    MEMORY[0x1A85BEFA8](v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1A624DAD4(a1, a3, a4);
  sub_1A624EB0C(a1, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846248);
  swift_allocObject();
  return sub_1A6334E5C();
}

void sub_1A624DAD4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30[2];
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;

  v7 = sub_1A6332C24();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MonthlyWeatherStatistics();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v3 + 16) != 1)
  {
    if (qword_1EE845498 != -1)
      swift_once();
    v15 = sub_1A6334F04();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EE85E428);
    v29 = sub_1A6334EEC();
    v16 = sub_1A6335690();
    if (!os_log_type_enabled(v29, v16))
      goto LABEL_13;
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    v18 = "Monthly statistics cache is disabled - not caching";
    goto LABEL_12;
  }
  if (!sub_1A61D8F8C())
  {
    if (qword_1EE845498 != -1)
      swift_once();
    v19 = sub_1A6334F04();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EE85E428);
    v29 = sub_1A6334EEC();
    v16 = sub_1A6335690();
    if (!os_log_type_enabled(v29, v16))
      goto LABEL_13;
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    v18 = "Cannot cache monthly statistics due to missing store";
LABEL_12:
    _os_log_impl(&dword_1A6185000, v29, v16, v18, v17, 2u);
    MEMORY[0x1A85BEFA8](v17, -1, -1);
LABEL_13:

    return;
  }
  sub_1A624EB0C(a1, (uint64_t)v13);
  v14 = type metadata accessor for Metadata();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1 + *(int *)(v14 + 20), v7);
  sub_1A6334CDC();
  sub_1A62E0F5C();
  v34 = v31;
  v35 = v32;
  v36 = v33;
  sub_1A6334FF4();
  v31 = v34;
  v32 = v35;
  v33 = v36;
  sub_1A6334FD0();
  swift_release();
  if (qword_1EE845498 != -1)
    swift_once();
  v20 = sub_1A6334F04();
  __swift_project_value_buffer(v20, (uint64_t)qword_1EE85E428);
  sub_1A6334CDC();
  sub_1A61DB3F4((uint64_t)&v34);
  sub_1A6334CDC();
  sub_1A61DB3F4((uint64_t)&v34);
  v21 = sub_1A6334EEC();
  v22 = sub_1A633569C();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v30[0] = v24;
    *(_DWORD *)v23 = 141558531;
    *(_QWORD *)&v31 = 1752392040;
    sub_1A6335774();
    *(_WORD *)(v23 + 12) = 2081;
    sub_1A6334CDC();
    *(_QWORD *)&v31 = sub_1A61A6A1C(a2, a3, v30);
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v23 + 22) = 2080;
    v25 = sub_1A61DB3F4((uint64_t)&v34);
    sub_1A62E8144(&v31, v25);
    sub_1A61DB394((uint64_t)&v34);
    v26 = sub_1A62E82A8(v31, BYTE8(v31));
    *(_QWORD *)&v31 = sub_1A61A6A1C(v26, v27, v30);
    sub_1A6335774();
    swift_bridgeObjectRelease();
    sub_1A61DB394((uint64_t)&v34);
    sub_1A61DB394((uint64_t)&v34);
    _os_log_impl(&dword_1A6185000, v21, v22, "Just cached monthly statistics; key=%{private,mask.hash}s. It's valid for another %s",
      (uint8_t *)v23,
      0x20u);
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v24, -1, -1);
    MEMORY[0x1A85BEFA8](v23, -1, -1);

    sub_1A61DB394((uint64_t)&v34);
  }
  else
  {
    sub_1A61DB394((uint64_t)&v34);
    swift_bridgeObjectRelease_n();
    sub_1A61DB394((uint64_t)&v34);
    sub_1A61DB394((uint64_t)&v34);

  }
  sub_1A624E3F8();
  swift_release();
}

void sub_1A624E23C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_1EE845498 != -1)
    swift_once();
  v5 = sub_1A6334F04();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EE85E428);
  swift_bridgeObjectRetain_n();
  v6 = sub_1A6334EEC();
  v7 = sub_1A6335690();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_DWORD *)v8 = 141558275;
    v10 = v9;
    sub_1A6335774();
    *(_WORD *)(v8 + 12) = 2081;
    sub_1A6334CDC();
    sub_1A61A6A1C(a2, a3, &v10);
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v6, v7, "Failed to fetch monthly statistics. key=%{private,mask.hash}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v9, -1, -1);
    MEMORY[0x1A85BEFA8](v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_1A624E3F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v13[5];

  v0 = sub_1A6332C24();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  v4 = sub_1A6334F58();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  if (sub_1A61D8F8C())
  {
    sub_1A6335018();
    v13[3] = v0;
    v13[4] = MEMORY[0x1E0DB2918];
    __swift_allocate_boxed_opaque_existential_1(v13);
    sub_1A6332C0C();
    sub_1A6332BAC();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_1A6334FC4();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    sub_1A6335060();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (qword_1EE845498 != -1)
      swift_once();
    v8 = sub_1A6334F04();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EE85E428);
    v9 = sub_1A6334EEC();
    v10 = sub_1A633569C();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1A6185000, v9, v10, "Purged expired monthly weather statistics", v11, 2u);
      MEMORY[0x1A85BEFA8](v11, -1, -1);
      swift_release();

    }
    else
    {

      swift_release();
    }
  }
}

uint64_t sub_1A624E7F8()
{
  uint64_t result;

  result = sub_1A61D8F8C();
  if (result)
  {
    sub_1A6335018();
    sub_1A6335054();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for MonthlyStatisticsDataManager()
{
  return objc_opt_self();
}

uint64_t sub_1A624EA84()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A624EAA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A624D860(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_1A624EAC0(uint64_t a1)
{
  uint64_t v1;

  sub_1A624E23C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1A624EAC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MonthlyWeatherStatistics();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A624EB0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MonthlyWeatherStatistics();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A624EB50(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MonthlyWeatherStatistics();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1A624EB90(char *a1)
{
  sub_1A6244838(*a1);
}

void sub_1A624EB9C()
{
  unsigned __int8 *v0;

  sub_1A62DE258(*v0);
}

void sub_1A624EBA4(uint64_t a1)
{
  char *v1;

  sub_1A61F4F7C(a1, *v1);
}

void sub_1A624EBAC(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1A61F5798(a1, *v1);
}

WeatherDaemon::AirQuality::SourceType_optional sub_1A624EBB4(Swift::String *a1)
{
  return AirQuality.SourceType.init(rawValue:)(*a1);
}

uint64_t AirQuality.metadata.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A61CD678(a1, v1);
}

uint64_t (*AirQuality.metadata.modify())(void)
{
  return nullsub_1;
}

void AirQuality.source.getter()
{
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_8_3();
  OUTLINED_FUNCTION_29_1();
}

void AirQuality.source.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_16();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*AirQuality.source.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_31();
  return nullsub_1;
}

void AirQuality.sourceType.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_0_31() + 24)) = v2;
  OUTLINED_FUNCTION_29_1();
}

uint64_t (*AirQuality.sourceType.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_31();
  return nullsub_1;
}

void AirQuality.learnMoreURL.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_16();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*AirQuality.learnMoreURL.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_31();
  return nullsub_1;
}

void AirQuality.index.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_18(*(int *)(v0 + 32));
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*AirQuality.index.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_31();
  return nullsub_1;
}

void AirQuality.categoryIndex.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_18(*(int *)(v0 + 36));
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*AirQuality.categoryIndex.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_31();
  return nullsub_1;
}

void AirQuality.isSignificant.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_0_31() + 40)) = a1;
  OUTLINED_FUNCTION_29_1();
}

uint64_t (*AirQuality.isSignificant.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_31();
  return nullsub_1;
}

void AirQuality.scale.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_16();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*AirQuality.scale.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_31();
  return nullsub_1;
}

void AirQuality.primaryPollutant.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_16();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*AirQuality.primaryPollutant.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_31();
  return nullsub_1;
}

void AirQuality.pollutants.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_0_31() + 52);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*AirQuality.pollutants.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_31();
  return nullsub_1;
}

void AirQuality.previousDayComparison.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_16();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*AirQuality.previousDayComparison.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_31();
  return nullsub_1;
}

uint64_t sub_1A624EF24(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  char v14;

  v2 = a1 == 0x617461646174656DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1A6335ABC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656372756F73 && a2 == 0xE600000000000000;
    if (v6 || (sub_1A6335ABC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x7954656372756F73 && a2 == 0xEA00000000006570;
      if (v7 || (sub_1A6335ABC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x726F4D6E7261656CLL && a2 == 0xEC0000004C525565;
        if (v8 || (sub_1A6335ABC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x7865646E69 && a2 == 0xE500000000000000;
          if (v9 || (sub_1A6335ABC() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x79726F6765746163 && a2 == 0xED00007865646E49;
            if (v10 || (sub_1A6335ABC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x66696E6769537369 && a2 == 0xED0000746E616369;
              if (v11 || (sub_1A6335ABC() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                v12 = a1 == 0x656C616373 && a2 == 0xE500000000000000;
                if (v12 || (sub_1A6335ABC() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else if (a1 == 0xD000000000000010 && a2 == 0x80000001A634A8E0 || (sub_1A6335ABC() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else
                {
                  v13 = a1 == 0x6E6174756C6C6F70 && a2 == 0xEA00000000007374;
                  if (v13 || (sub_1A6335ABC() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 9;
                  }
                  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A634A900)
                  {
                    swift_bridgeObjectRelease();
                    return 10;
                  }
                  else
                  {
                    v14 = sub_1A6335ABC();
                    swift_bridgeObjectRelease();
                    if ((v14 & 1) != 0)
                      return 10;
                    else
                      return 11;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1A624F3BC()
{
  return 11;
}

uint64_t sub_1A624F3C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A624EF24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A624F3E8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A624F3BC();
  *a1 = result;
  return result;
}

uint64_t sub_1A624F40C()
{
  sub_1A618E130();
  return sub_1A6335C18();
}

uint64_t sub_1A624F434()
{
  sub_1A618E130();
  return sub_1A6335C24();
}

uint64_t AirQuality.temporarilyUnavailable.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(OUTLINED_FUNCTION_402() + 52)) & 1;
}

unint64_t sub_1A624F480()
{
  unint64_t result;

  result = qword_1EE846F48;
  if (!qword_1EE846F48)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for AirQuality.SourceType, &type metadata for AirQuality.SourceType);
    atomic_store(result, (unint64_t *)&qword_1EE846F48);
  }
  return result;
}

void sub_1A624F4BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  static AirQuality.read(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_1A624F4D0()
{
  AirQuality.write(to:)();
}

void sub_1A624F4E4(_BYTE *a1@<X8>)
{
  static AirQuality.SourceType.read(from:)(a1);
}

void sub_1A624F4F8()
{
  AirQuality.SourceType.write(to:)();
}

char *initializeBufferWithCopyOfBuffer for AirQuality(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A6332C24();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = (int *)type metadata accessor for Metadata();
    v8(&a1[v9[5]], &a2[v9[5]], v7);
    v10 = v9[6];
    v11 = &a1[v10];
    v12 = &a2[v10];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v10], 1, v7))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v8(v11, v12, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v7);
    }
    *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
    *(_QWORD *)&a1[v9[8]] = *(_QWORD *)&a2[v9[8]];
    *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
    v15 = v9[10];
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v18;
    v19 = v9[11];
    v20 = &a1[v19];
    v21 = &a2[v19];
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    v23 = v9[12];
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v26;
    a1[v9[13]] = a2[v9[13]];
    a1[v9[14]] = a2[v9[14]];
    v27 = v9[15];
    v28 = &a1[v27];
    v29 = &a2[v27];
    v30 = *((_QWORD *)v29 + 1);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *((_QWORD *)v28 + 1) = v30;
    v31 = a3[5];
    v32 = a3[6];
    v33 = &a1[v31];
    v34 = &a2[v31];
    v35 = *((_QWORD *)v34 + 1);
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *((_QWORD *)v33 + 1) = v35;
    a1[v32] = a2[v32];
    v36 = a3[7];
    v37 = a3[8];
    v38 = &a1[v36];
    v39 = &a2[v36];
    v40 = *((_QWORD *)v39 + 1);
    *(_QWORD *)v38 = *(_QWORD *)v39;
    *((_QWORD *)v38 + 1) = v40;
    v41 = &a1[v37];
    v42 = &a2[v37];
    *(_QWORD *)v41 = *(_QWORD *)v42;
    v41[8] = v42[8];
    v43 = a3[9];
    v44 = a3[10];
    v45 = &a1[v43];
    v46 = &a2[v43];
    *(_QWORD *)v45 = *(_QWORD *)v46;
    v45[8] = v46[8];
    a1[v44] = a2[v44];
    v47 = a3[11];
    v48 = a3[12];
    v49 = &a1[v47];
    v50 = &a2[v47];
    v51 = *((_QWORD *)v50 + 1);
    *(_QWORD *)v49 = *(_QWORD *)v50;
    *((_QWORD *)v49 + 1) = v51;
    v52 = &a1[v48];
    v53 = &a2[v48];
    v54 = *((_QWORD *)v53 + 1);
    *(_QWORD *)v52 = *(_QWORD *)v53;
    *((_QWORD *)v52 + 1) = v54;
    v55 = a3[14];
    *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
    v56 = &a1[v55];
    v57 = &a2[v55];
    v58 = *((_QWORD *)v57 + 1);
    *(_QWORD *)v56 = *(_QWORD *)v57;
    *((_QWORD *)v56 + 1) = v58;
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
  }
  return a1;
}

char *assignWithCopy for AirQuality(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int EnumTagSinglePayload;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;

  v6 = sub_1A6332C24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = (int *)type metadata accessor for Metadata();
  v8(&a1[v9[5]], &a2[v9[5]], v6);
  v10 = v9[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v10], 1, v6);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v14)
    {
      v8(v11, v12, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
  *(_QWORD *)&a1[v9[8]] = *(_QWORD *)&a2[v9[8]];
  *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
  v16 = v9[10];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v19 = v9[11];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v22 = v9[12];
  v23 = &a1[v22];
  v24 = &a2[v22];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  a1[v9[13]] = a2[v9[13]];
  a1[v9[14]] = a2[v9[14]];
  v25 = v9[15];
  v26 = &a1[v25];
  v27 = &a2[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v28 = a3[5];
  v29 = &a1[v28];
  v30 = &a2[v28];
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  a1[a3[6]] = a2[a3[6]];
  v31 = a3[7];
  v32 = &a1[v31];
  v33 = &a2[v31];
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *((_QWORD *)v32 + 1) = *((_QWORD *)v33 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v34 = a3[8];
  v35 = &a1[v34];
  v36 = &a2[v34];
  v37 = *(_QWORD *)v36;
  v35[8] = v36[8];
  *(_QWORD *)v35 = v37;
  v38 = a3[9];
  v39 = &a1[v38];
  v40 = &a2[v38];
  v41 = *(_QWORD *)v40;
  v39[8] = v40[8];
  *(_QWORD *)v39 = v41;
  a1[a3[10]] = a2[a3[10]];
  v42 = a3[11];
  v43 = &a1[v42];
  v44 = &a2[v42];
  *(_QWORD *)v43 = *(_QWORD *)v44;
  *((_QWORD *)v43 + 1) = *((_QWORD *)v44 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v45 = a3[12];
  v46 = &a1[v45];
  v47 = &a2[v45];
  *(_QWORD *)v46 = *(_QWORD *)v47;
  *((_QWORD *)v46 + 1) = *((_QWORD *)v47 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v48 = a3[14];
  v49 = &a1[v48];
  v50 = &a2[v48];
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *((_QWORD *)v49 + 1) = *((_QWORD *)v50 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for AirQuality(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_1A6332C24();
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for Metadata();
  v7(&a1[v8[5]], &a2[v8[5]], v6);
  v9 = v8[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v9], 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v7(v10, v11, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
  }
  *(_QWORD *)&a1[v8[7]] = *(_QWORD *)&a2[v8[7]];
  *(_QWORD *)&a1[v8[8]] = *(_QWORD *)&a2[v8[8]];
  *(_QWORD *)&a1[v8[9]] = *(_QWORD *)&a2[v8[9]];
  *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
  *(_OWORD *)&a1[v8[11]] = *(_OWORD *)&a2[v8[11]];
  *(_OWORD *)&a1[v8[12]] = *(_OWORD *)&a2[v8[12]];
  a1[v8[13]] = a2[v8[13]];
  a1[v8[14]] = a2[v8[14]];
  *(_OWORD *)&a1[v8[15]] = *(_OWORD *)&a2[v8[15]];
  v13 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  a1[v13] = a2[v13];
  v14 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  v15 = &a1[v14];
  v16 = &a2[v14];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v15[8] = v16[8];
  v17 = a3[9];
  v18 = a3[10];
  v19 = &a1[v17];
  v20 = &a2[v17];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  v19[8] = v20[8];
  a1[v18] = a2[v18];
  v21 = a3[12];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  *(_OWORD *)&a1[v21] = *(_OWORD *)&a2[v21];
  v22 = a3[14];
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  *(_OWORD *)&a1[v22] = *(_OWORD *)&a2[v22];
  return a1;
}

char *assignWithTake for AirQuality(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int EnumTagSinglePayload;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;

  v6 = sub_1A6332C24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = (int *)type metadata accessor for Metadata();
  v8(&a1[v9[5]], &a2[v9[5]], v6);
  v10 = v9[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v10], 1, v6);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v14)
    {
      v8(v11, v12, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
  *(_QWORD *)&a1[v9[8]] = *(_QWORD *)&a2[v9[8]];
  *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
  v16 = v9[10];
  v17 = &a1[v16];
  v18 = (uint64_t *)&a2[v16];
  v20 = *v18;
  v19 = v18[1];
  *(_QWORD *)v17 = v20;
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v21 = v9[11];
  v22 = &a1[v21];
  v23 = (uint64_t *)&a2[v21];
  v25 = *v23;
  v24 = v23[1];
  *(_QWORD *)v22 = v25;
  *((_QWORD *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  v26 = v9[12];
  v27 = &a1[v26];
  v28 = (uint64_t *)&a2[v26];
  v30 = *v28;
  v29 = v28[1];
  *(_QWORD *)v27 = v30;
  *((_QWORD *)v27 + 1) = v29;
  swift_bridgeObjectRelease();
  a1[v9[13]] = a2[v9[13]];
  a1[v9[14]] = a2[v9[14]];
  v31 = v9[15];
  v32 = &a1[v31];
  v33 = (uint64_t *)&a2[v31];
  v35 = *v33;
  v34 = v33[1];
  *(_QWORD *)v32 = v35;
  *((_QWORD *)v32 + 1) = v34;
  swift_bridgeObjectRelease();
  v36 = a3[5];
  v37 = &a1[v36];
  v38 = (uint64_t *)&a2[v36];
  v40 = *v38;
  v39 = v38[1];
  *(_QWORD *)v37 = v40;
  *((_QWORD *)v37 + 1) = v39;
  swift_bridgeObjectRelease();
  v41 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  v42 = &a1[v41];
  v43 = (uint64_t *)&a2[v41];
  v45 = *v43;
  v44 = v43[1];
  *(_QWORD *)v42 = v45;
  *((_QWORD *)v42 + 1) = v44;
  swift_bridgeObjectRelease();
  v46 = a3[8];
  v47 = a3[9];
  v48 = &a1[v46];
  v49 = &a2[v46];
  v48[8] = v49[8];
  *(_QWORD *)v48 = *(_QWORD *)v49;
  v50 = &a1[v47];
  v51 = &a2[v47];
  v50[8] = v51[8];
  *(_QWORD *)v50 = *(_QWORD *)v51;
  v52 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  v53 = &a1[v52];
  v54 = (uint64_t *)&a2[v52];
  v56 = *v54;
  v55 = v54[1];
  *(_QWORD *)v53 = v56;
  *((_QWORD *)v53 + 1) = v55;
  swift_bridgeObjectRelease();
  v57 = a3[12];
  v58 = &a1[v57];
  v59 = (uint64_t *)&a2[v57];
  v61 = *v59;
  v60 = v59[1];
  *(_QWORD *)v58 = v61;
  *((_QWORD *)v58 + 1) = v60;
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  swift_bridgeObjectRelease();
  v62 = a3[14];
  v63 = &a1[v62];
  v64 = (uint64_t *)&a2[v62];
  v66 = *v64;
  v65 = v64[1];
  *(_QWORD *)v63 = v66;
  *((_QWORD *)v63 + 1) = v65;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A624FFC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;
  int v9;

  v6 = OUTLINED_FUNCTION_402();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  v9 = v8 - 1;
  if (v9 < 0)
    v9 = -1;
  return (v9 + 1);
}

void sub_1A6250044(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_402();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
    OUTLINED_FUNCTION_3_1();
  }
}

unint64_t sub_1A62500B4()
{
  unint64_t result;

  result = qword_1EE846F50;
  if (!qword_1EE846F50)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633BDA8, &type metadata for AirQuality.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE846F50);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for NetworkTelemetry(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  id v11;
  char v12;
  unsigned __int8 v13;
  uint64_t v14;
  char *v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      type metadata accessor for TelemetryActivity();
      v15 = (char *)&loc_1A6250208 + 4 * word_1A633BE20[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v6 = sub_1A6332C24();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = type metadata accessor for NetworkOperationTelemetry();
    *(uint64_t *)((char *)a1 + *(int *)(v7 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 20));
    v8 = *(int *)(v7 + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(id *)v10;
    v12 = v10[9];
    v13 = v10[8];
    sub_1A61AA49C(*(id *)v10, v13, v12);
    *(_QWORD *)v9 = v11;
    v9[8] = v13;
    v9[9] = v12;
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t assignWithCopy for NetworkTelemetry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  char v10;
  unsigned __int8 v11;
  char *v12;

  if (a1 != a2)
  {
    sub_1A6254A28(a1);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      type metadata accessor for TelemetryActivity();
      v12 = (char *)&loc_1A6252598 + 4 * word_1A633BE8A[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v4 = sub_1A6332C24();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    v5 = type metadata accessor for NetworkOperationTelemetry();
    *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
    v6 = *(int *)(v5 + 24);
    v7 = a1 + v6;
    v8 = a2 + v6;
    v9 = *(id *)v8;
    v10 = *(_BYTE *)(v8 + 9);
    v11 = *(_BYTE *)(v8 + 8);
    sub_1A61AA49C(*(id *)v8, v11, v10);
    *(_QWORD *)v7 = v9;
    *(_BYTE *)(v7 + 8) = v11;
    *(_BYTE *)(v7 + 9) = v10;
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1A6254A28(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NetworkTelemetry();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for NetworkTelemetry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;

  if (swift_getEnumCaseMultiPayload() != 1)
  {
    type metadata accessor for TelemetryActivity();
    v9 = (char *)&loc_1A6254B30 + 4 * word_1A633BEB4[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v4 = sub_1A6332C24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = type metadata accessor for NetworkOperationTelemetry();
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  v6 = *(int *)(v5 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_WORD *)(v7 + 8) = *(_WORD *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for NetworkTelemetry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;

  if (a1 != a2)
  {
    sub_1A6254A28(a1);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      type metadata accessor for TelemetryActivity();
      v9 = (char *)&loc_1A62569F0 + 4 * word_1A633BEDE[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v4 = sub_1A6332C24();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
    v5 = type metadata accessor for NetworkOperationTelemetry();
    *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
    v6 = *(int *)(v5 + 24);
    v7 = a1 + v6;
    v8 = a2 + v6;
    *(_WORD *)(v7 + 8) = *(_WORD *)(v8 + 8);
    *(_QWORD *)v7 = *(_QWORD *)v8;
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1A62587E0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t static ForecastSummary.clear(starting:until:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t result;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_2_24();
  OUTLINED_FUNCTION_6_18();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_1_22(v8, v11);
  OUTLINED_FUNCTION_8_17();
  v9 = (int *)OUTLINED_FUNCTION_0_25();
  OUTLINED_FUNCTION_0_32(v9);
  result = OUTLINED_FUNCTION_7_13();
  *(_BYTE *)(a2 + *(int *)(a1 + 24)) = 0;
  *(_QWORD *)v2 = 0;
  *(_BYTE *)(v2 + 8) = 0;
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 0;
  return result;
}

#error "1A62588DC: call analysis failed (funcsize=27)"

#error "1A625894C: call analysis failed (funcsize=27)"

#error "1A62589BC: call analysis failed (funcsize=27)"

#error "1A6258A2C: call analysis failed (funcsize=27)"

void HourlyWeatherStatistics.metadata.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1A618DA30(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for Metadata);
}

uint64_t HourlyWeatherStatistics.hours.getter()
{
  OUTLINED_FUNCTION_6_19();
  return sub_1A6334CDC();
}

uint64_t HourlyWeatherStatistics.baselineStartDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_6_19() + 24);
  v4 = OUTLINED_FUNCTION_6();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void HourlyWeatherStatistics.filteringOutLeapDay(_:)(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;

  v4 = v2;
  type metadata accessor for Metadata();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_11();
  if ((a1 & 1) != 0)
  {
    sub_1A618DA30(v4, v3, (uint64_t (*)(_QWORD))type metadata accessor for Metadata);
    v8 = OUTLINED_FUNCTION_6_19();
    v9 = *(_QWORD *)(*(_QWORD *)(v4 + *(int *)(v8 + 20)) + 16);
    if (v9)
    {
      v20 = a2;
      v10 = (_BYTE *)(sub_1A6334CDC() + 64);
      v11 = MEMORY[0x1E0DEE9D8];
      do
      {
        if (*((uint64_t *)v10 - 4) <= 8760)
        {
          v22 = *((_OWORD *)v10 - 2);
          v21 = *((_OWORD *)v10 - 1);
          v12 = *v10;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_1A61DF61C();
          v13 = *(_QWORD *)(v11 + 16);
          v14 = v22;
          if (v13 >= *(_QWORD *)(v11 + 24) >> 1)
          {
            sub_1A61DF61C();
            v14 = v22;
          }
          *(_QWORD *)(v11 + 16) = v13 + 1;
          v15 = v11 + 40 * v13;
          *(_OWORD *)(v15 + 32) = v14;
          *(_OWORD *)(v15 + 48) = v21;
          *(_BYTE *)(v15 + 64) = v12;
        }
        v10 += 40;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease();
      a2 = v20;
    }
    else
    {
      v11 = MEMORY[0x1E0DEE9D8];
    }
    v16 = *(int *)(v8 + 24);
    v17 = v4 + v16;
    v18 = a2 + v16;
    v19 = OUTLINED_FUNCTION_6();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v18, v17, v19);
    sub_1A618D95C(v3, a2);
    *(_QWORD *)(a2 + *(int *)(v8 + 20)) = v11;
  }
  else
  {
    sub_1A618DA30(v4, a2, (uint64_t (*)(_QWORD))type metadata accessor for HourlyWeatherStatistics);
  }
}

void static HourlyWeatherStatistics.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (static Metadata.== infix(_:_:)(a1, a2)
    && (v4 = OUTLINED_FUNCTION_6_19(),
        (sub_1A61CE2F0(*(_QWORD *)(a1 + *(int *)(v4 + 20)), *(_QWORD *)(a2 + *(int *)(v4 + 20))) & 1) != 0))
  {
    sub_1A6332BE8();
  }
  else
  {
    OUTLINED_FUNCTION_3_1();
  }
}

uint64_t sub_1A6258D08(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v7;

  v2 = a1 == 0x617461646174656DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1A6335ABC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7372756F68 && a2 == 0xE500000000000000;
    if (v6 || (sub_1A6335ABC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x80000001A6349830)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = sub_1A6335ABC();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1A6258E4C(char a1)
{
  if (!a1)
    return 0x617461646174656DLL;
  if (a1 == 1)
    return 0x7372756F68;
  return 0xD000000000000011;
}

uint64_t sub_1A6258EA4()
{
  char *v0;

  return sub_1A6258E4C(*v0);
}

uint64_t sub_1A6258EAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A6258D08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A6258ED0()
{
  sub_1A6259450();
  return sub_1A6335C18();
}

uint64_t sub_1A6258EF8()
{
  sub_1A6259450();
  return sub_1A6335C24();
}

uint64_t HourlyWeatherStatistics.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846F58);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6259450();
  sub_1A6335BF4();
  type metadata accessor for Metadata();
  sub_1A618B2B4(&qword_1ED21B9E0, (uint64_t (*)(uint64_t))type metadata accessor for Metadata, (uint64_t)&protocol conformance descriptor for Metadata);
  OUTLINED_FUNCTION_0_19();
  if (!v1)
  {
    type metadata accessor for HourlyWeatherStatistics();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846F68);
    sub_1A62594C8(&qword_1EE846F70, (uint64_t (*)(void))sub_1A625948C, MEMORY[0x1E0DEAF10]);
    OUTLINED_FUNCTION_0_19();
    sub_1A6332C24();
    sub_1A618B2B4(&qword_1ED21B898, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1A6335A80();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

void HourlyWeatherStatistics.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v16 = sub_1A6332C24();
  v14 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_2();
  v5 = v4 - v3;
  type metadata accessor for Metadata();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_2();
  v17 = v8 - v7;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846F80);
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_11();
  v9 = type metadata accessor for HourlyWeatherStatistics();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_2();
  v13 = v12 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6259450();
  sub_1A6335BDC();
  if (v19)
  {
    OUTLINED_FUNCTION_17();
  }
  else
  {
    sub_1A618B2B4(&qword_1ED21B9E8, (uint64_t (*)(uint64_t))type metadata accessor for Metadata, (uint64_t)&protocol conformance descriptor for Metadata);
    sub_1A63359D8();
    sub_1A618D95C(v17, v13);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846F68);
    sub_1A62594C8(&qword_1EE846F88, (uint64_t (*)(void))sub_1A6259530, MEMORY[0x1E0DEAF40]);
    sub_1A63359D8();
    *(_QWORD *)(v13 + *(int *)(v9 + 20)) = v20;
    sub_1A618B2B4(&qword_1ED21B8A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    sub_1A63359D8();
    OUTLINED_FUNCTION_15_1();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v13 + *(int *)(v9 + 24), v5, v16);
    sub_1A618DA30(v13, a2, (uint64_t (*)(_QWORD))type metadata accessor for HourlyWeatherStatistics);
    OUTLINED_FUNCTION_17();
    sub_1A618DF54(v13, (uint64_t (*)(_QWORD))type metadata accessor for HourlyWeatherStatistics);
  }
}

void sub_1A6259400(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  HourlyWeatherStatistics.init(from:)(a1, a2);
}

uint64_t sub_1A6259414(_QWORD *a1)
{
  return HourlyWeatherStatistics.encode(to:)(a1);
}

void sub_1A6259428()
{
  static HourlyWeatherStatistics.read(from:)();
}

void sub_1A625943C(uint64_t a1)
{
  HourlyWeatherStatistics.write(to:)(a1);
}

unint64_t sub_1A6259450()
{
  unint64_t result;

  result = qword_1EE846F60;
  if (!qword_1EE846F60)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633C12C, &type metadata for HourlyWeatherStatistics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE846F60);
  }
  return result;
}

unint64_t sub_1A625948C()
{
  unint64_t result;

  result = qword_1EE846F78;
  if (!qword_1EE846F78)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for HourWeatherStatistics, &type metadata for HourWeatherStatistics);
    atomic_store(result, (unint64_t *)&qword_1EE846F78);
  }
  return result;
}

uint64_t sub_1A62594C8(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE846F68);
    v8 = a2();
    result = MEMORY[0x1A85BEED0](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A6259530()
{
  unint64_t result;

  result = qword_1EE846F90;
  if (!qword_1EE846F90)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for HourWeatherStatistics, &type metadata for HourWeatherStatistics);
    atomic_store(result, (unint64_t *)&qword_1EE846F90);
  }
  return result;
}

uint64_t sub_1A625956C()
{
  return MEMORY[0x1E0DCAC98];
}

uint64_t sub_1A6259578()
{
  return MEMORY[0x1E0DCAC90];
}

void sub_1A6259584(uint64_t a1)
{
  uint64_t v2;

  sub_1A618B2B4(&qword_1EE846300, (uint64_t (*)(uint64_t))type metadata accessor for HourlyWeatherStatistics, (uint64_t)&protocol conformance descriptor for HourlyWeatherStatistics);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t getEnumTagSinglePayload for HourlyWeatherStatistics()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1A62595CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = OUTLINED_FUNCTION_8_1();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    if ((_DWORD)v3 == 0x7FFFFFFF)
    {
      OUTLINED_FUNCTION_3_1();
      return;
    }
    v7 = OUTLINED_FUNCTION_6();
    v8 = v4 + *(int *)(a3 + 24);
  }
  __swift_getEnumTagSinglePayload(v8, v3, v7);
}

uint64_t storeEnumTagSinglePayload for HourlyWeatherStatistics()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A625965C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = OUTLINED_FUNCTION_8_1();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = v5;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(v5 + *(int *)(a4 + 20)) = (v4 - 1);
      return result;
    }
    v9 = OUTLINED_FUNCTION_6();
    v10 = v5 + *(int *)(a4 + 24);
  }
  return __swift_storeEnumTagSinglePayload(v10, v4, v4, v9);
}

uint64_t storeEnumTagSinglePayload for HourlyWeatherStatistics.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A6259730 + 4 * byte_1A633BF45[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A6259764 + 4 * byte_1A633BF40[v4]))();
}

uint64_t sub_1A6259764(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A625976C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6259774);
  return result;
}

uint64_t sub_1A6259780(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6259788);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A625978C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6259794(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HourlyWeatherStatistics.CodingKeys()
{
  return &type metadata for HourlyWeatherStatistics.CodingKeys;
}

unint64_t sub_1A62597B4()
{
  unint64_t result;

  result = qword_1EE846FC8;
  if (!qword_1EE846FC8)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633C104, &type metadata for HourlyWeatherStatistics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE846FC8);
  }
  return result;
}

unint64_t sub_1A62597F4()
{
  unint64_t result;

  result = qword_1EE846FD0;
  if (!qword_1EE846FD0)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633C074, &type metadata for HourlyWeatherStatistics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE846FD0);
  }
  return result;
}

unint64_t sub_1A6259834()
{
  unint64_t result;

  result = qword_1EE846FD8;
  if (!qword_1EE846FD8)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633C09C, &type metadata for HourlyWeatherStatistics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE846FD8);
  }
  return result;
}

void static HistoricalFactsDescriptor.name.getter()
{
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_53();
}

void static HistoricalFactsDescriptor.name.setter()
{
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_1_8();
}

uint64_t (*static HistoricalFactsDescriptor.name.modify())()
{
  OUTLINED_FUNCTION_0_11();
  return j__swift_endAccess;
}

uint64_t sub_1A6259928()
{
  uint64_t result;

  sub_1A6334CDC();
  sub_1A63353F0();
  result = swift_bridgeObjectRelease();
  qword_1ED21C2B8 = 0x2E312E302E30;
  unk_1ED21C2C0 = 0xE600000000000000;
  return result;
}

void static HistoricalFactsDescriptor.version.getter()
{
  if (qword_1ED21C2C8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_53();
}

void static HistoricalFactsDescriptor.version.setter()
{
  if (qword_1ED21C2C8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_1_8();
}

uint64_t (*static HistoricalFactsDescriptor.version.modify())()
{
  if (qword_1ED21C2C8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  return j_j__swift_endAccess;
}

ValueMetadata *type metadata accessor for HistoricalFactsDescriptor()
{
  return &type metadata for HistoricalFactsDescriptor;
}

void sub_1A6259AEC()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1A6259B24()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A6259B58(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C340);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for AirQualityScaleResource()
{
  return &type metadata for AirQualityScaleResource;
}

_UNKNOWN **sub_1A6259BA8()
{
  return &off_1E5005190;
}

unint64_t sub_1A6259BB8()
{
  unint64_t result;

  result = qword_1EE8470E0;
  if (!qword_1EE8470E0)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A63458DC, &type metadata for AirQualityScale);
    atomic_store(result, (unint64_t *)&qword_1EE8470E0);
  }
  return result;
}

double Quantiles.p10.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double Quantiles.median.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double Quantiles.p90.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

BOOL static Quantiles.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t sub_1A6259C3C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 3158384 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A6335ABC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6E616964656DLL && a2 == 0xE600000000000000;
    if (v6 || (sub_1A6335ABC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 3160432 && a2 == 0xE300000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1A6335ABC();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1A6259D5C(char a1)
{
  uint64_t result;

  result = 3158384;
  if (a1)
  {
    if (a1 == 1)
      return 0x6E616964656DLL;
    else
      return 3160432;
  }
  return result;
}

uint64_t sub_1A6259DA0()
{
  char *v0;

  return sub_1A6259D5C(*v0);
}

uint64_t sub_1A6259DA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A6259C3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A6259DCC()
{
  sub_1A6259F44();
  return sub_1A6335C18();
}

uint64_t sub_1A6259DF4()
{
  sub_1A6259F44();
  return sub_1A6335C24();
}

uint64_t Quantiles.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847128);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6259F44();
  sub_1A6335BF4();
  v11 = 0;
  OUTLINED_FUNCTION_7_1();
  if (!v1)
  {
    v10 = 1;
    OUTLINED_FUNCTION_7_1();
    v9 = 2;
    OUTLINED_FUNCTION_7_1();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1A6259F44()
{
  unint64_t result;

  result = qword_1EE847130;
  if (!qword_1EE847130)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633C3E4, &type metadata for Quantiles.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847130);
  }
  return result;
}

uint64_t Quantiles.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847138);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6259F44();
  sub_1A6335BDC();
  if (!v2)
  {
    OUTLINED_FUNCTION_0_33();
    v7 = v6;
    OUTLINED_FUNCTION_0_33();
    v10 = v9;
    OUTLINED_FUNCTION_0_33();
    v12 = v11;
    OUTLINED_FUNCTION_2_0();
    *a2 = v7;
    a2[1] = v10;
    a2[2] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A625A0CC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return Quantiles.init(from:)(a1, a2);
}

uint64_t sub_1A625A0E0(_QWORD *a1)
{
  return Quantiles.encode(to:)(a1);
}

uint64_t sub_1A625A0F8()
{
  return static Quantiles.read(from:)();
}

uint64_t sub_1A625A10C()
{
  return Quantiles.write(to:)();
}

uint64_t getEnumTagSinglePayload for PrecipitationAmount(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PrecipitationAmount(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Quantiles()
{
  return &type metadata for Quantiles;
}

uint64_t storeEnumTagSinglePayload for Quantiles.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A625A1C8 + 4 * byte_1A633C239[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A625A1FC + 4 * byte_1A633C234[v4]))();
}

uint64_t sub_1A625A1FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A625A204(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A625A20CLL);
  return result;
}

uint64_t sub_1A625A218(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A625A220);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A625A224(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A625A22C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Quantiles.CodingKeys()
{
  return &type metadata for Quantiles.CodingKeys;
}

unint64_t sub_1A625A24C()
{
  unint64_t result;

  result = qword_1EE847140;
  if (!qword_1EE847140)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633C3BC, &type metadata for Quantiles.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847140);
  }
  return result;
}

unint64_t sub_1A625A28C()
{
  unint64_t result;

  result = qword_1EE847148;
  if (!qword_1EE847148)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633C32C, &type metadata for Quantiles.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847148);
  }
  return result;
}

unint64_t sub_1A625A2CC()
{
  unint64_t result;

  result = qword_1EE847150;
  if (!qword_1EE847150)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633C354, &type metadata for Quantiles.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847150);
  }
  return result;
}

void sub_1A625A308(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  id v5;

  v3 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  if (a2)
  {
    v4 = sub_1A63352E8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  v5 = (id)sub_1A63352E8();
  objc_msgSend(v3, sel_setObject_forKey_, v4, v5);

  swift_unknownObjectRelease();
}

uint64_t sub_1A625A3CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;

  v1 = sub_1A6332C24();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_2();
  v5 = v4 - v3;
  sub_1A6334B08();
  sub_1A6332C18();
  sub_1A6332B1C();
  v7 = v6;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v1);
  if (*(double *)(v0 + 72) < v7 - *(double *)(v0 + 64))
    sub_1A625A308(0, 0);
  return sub_1A6334B14();
}

uint64_t sub_1A625A48C()
{
  sub_1A6334B44();
  swift_retain();
  sub_1A6334D9C();
  return swift_release();
}

void sub_1A625A508(uint64_t a1)
{
  *(_QWORD *)(a1 + 64) = 0;
  sub_1A625A308(0, 0);
}

void sub_1A625A534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1A61B551C();
  if (v0)
  {
    sub_1A6335450();
    sub_1A625A5E4(1);
    v1 = sub_1A6273AB8();
    v3 = v2;
    swift_bridgeObjectRelease();
    sub_1A625A308(v1, v3);
  }
}

uint64_t sub_1A625A5E4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v1 = result;
    result = sub_1A63353CC();
    if (!__OFSUB__(result, v1))
    {
      sub_1A63353D8();
      v2 = sub_1A6335468();
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A625A6D0()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  if (qword_1ED21D318 != -1)
    swift_once();
  v0 = sub_1A6334F04();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED22A3C0);
  v1 = sub_1A6334EEC();
  v2 = sub_1A633569C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1A6185000, v1, v2, "Generate new JWT token.", v3, 2u);
    MEMORY[0x1A85BEFA8](v3, -1, -1);
  }

  v4 = sub_1A625A858();
  MEMORY[0x1E0C80A78](v4);
  sub_1A6334EA4();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_1A6334DD8();
  v6 = sub_1A6334E38();
  swift_release();

  return v6;
}

uint64_t sub_1A625A858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v20)(char *, uint64_t);
  _QWORD v21[2];

  v0 = sub_1A6332960();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21DA40);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v21 - v8;
  v10 = sub_1A6332A98();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A63327E0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    v16 = sub_1A6332A68();
    if (v17)
    {
      v21[1] = v16;
      sub_1A6332A80();
      if (v18)
      {
        sub_1A6332954();
        sub_1A633293C();
        sub_1A633290C();
        sub_1A6332900();
        if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v10) != 1)
        {
          v14 = sub_1A6332A14();
          (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
          v20 = *(void (**)(char *, uint64_t))(v11 + 8);
          v20(v13, v10);
          v20(v6, v10);
          return v14;
        }
        v14 = 0xD00000000000001CLL;
        (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        v15 = (uint64_t)v6;
        goto LABEL_3;
      }
      v14 = 0xD00000000000001CLL;
      swift_bridgeObjectRelease();
    }
    else
    {
      v14 = 0xD00000000000001CLL;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return v14;
  }
  v14 = 0xD00000000000001CLL;
  v15 = (uint64_t)v9;
LABEL_3:
  sub_1A625AE94(v15);
  return v14;
}

uint64_t sub_1A625AAC8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;

  v7 = a1[6];
  v8 = a1[7];
  __swift_project_boxed_opaque_existential_1(a1 + 3, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8))(a2, a3, a4, v7, v8);
}

uint64_t sub_1A625AB3C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint8_t *v25;
  uint64_t *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v30 = a3;
  v5 = sub_1A6332C24();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v10 = a1[1];
  if (qword_1ED21D318 != -1)
    swift_once();
  v11 = sub_1A6334F04();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED22A3C0);
  v12 = sub_1A6334EEC();
  v13 = sub_1A633569C();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v29 = v6;
    v15 = v5;
    v16 = v9;
    v17 = v14;
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_1A6185000, v12, v13, "Received new JWT token.", v14, 2u);
    v18 = v17;
    v9 = v16;
    v5 = v15;
    v6 = v29;
    MEMORY[0x1A85BEFA8](v18, -1, -1);
  }

  sub_1A6334B08();
  sub_1A6334CDC();
  sub_1A625A308(v9, v10);
  sub_1A6332C18();
  sub_1A6332B1C();
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(_QWORD *)(a2 + 64) = v20;
  sub_1A6334B14();
  v21 = sub_1A6334EEC();
  v22 = sub_1A633569C();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = v9;
    v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v24 = 0;
    _os_log_impl(&dword_1A6185000, v21, v22, "Stored new JWT token.", v24, 2u);
    v25 = v24;
    v9 = v23;
    MEMORY[0x1A85BEFA8](v25, -1, -1);
  }

  v26 = v30;
  *v30 = v9;
  v26[1] = v10;
  return sub_1A6334CDC();
}

uint64_t sub_1A625AD74()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1A625ADB0()
{
  sub_1A625AD74();
  return swift_deallocClassInstance();
}

uint64_t sub_1A625ADD0()
{
  return sub_1A625A3CC();
}

uint64_t sub_1A625ADF0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1A6332810();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1A625AE50()
{
  return sub_1A625A6D0();
}

uint64_t sub_1A625AE78()
{
  uint64_t v0;

  return sub_1A625AAC8(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1A625AE94(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21DA40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1A625AED4()
{
  uint64_t v0;

  sub_1A625A508(v0);
}

void sub_1A625AEDC()
{
  sub_1A625A534();
}

BOOL static NSURLSessionConfiguration.ServiceType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t NSURLSessionConfiguration.ServiceType.hash(into:)()
{
  return sub_1A6335BAC();
}

uint64_t NSURLSessionConfiguration.ServiceType.hashValue.getter()
{
  sub_1A6335BA0();
  sub_1A6335BAC();
  return sub_1A6335BC4();
}

uint64_t sub_1A625AF70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v14[1] = a3;
  v14[2] = a4;
  v15 = sub_1A6332888();
  v6 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3898]), sel_init);
  v10 = objc_msgSend(v9, sel_processName);
  sub_1A6335300();

  v11 = WDOSPlatform();
  sub_1A6335300();

  v16 = a1;
  v17 = a2;
  sub_1A6334CDC();
  sub_1A63353F0();
  swift_bridgeObjectRelease();
  sub_1A63353F0();
  sub_1A63353F0();
  swift_bridgeObjectRelease();
  sub_1A63353F0();
  sub_1A63353F0();
  sub_1A633287C();
  sub_1A61BB940();
  v12 = sub_1A6335798();

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v15);
  swift_bridgeObjectRelease();
  return v12;
}

unint64_t sub_1A625B104()
{
  unint64_t result;

  result = qword_1ED21B6A0;
  if (!qword_1ED21B6A0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED21B6A0);
  }
  return result;
}

uint64_t sub_1A625B140(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_wd_bundleIdentifier);

  if (!v2)
    return 0;
  v3 = sub_1A6335300();

  return v3;
}

void sub_1A625B1AC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_1A63352E8();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_wd_setSourceApplicationBundleIdentifier_, v4);

}

unint64_t sub_1A625B200()
{
  unint64_t result;

  result = qword_1EE847158;
  if (!qword_1EE847158)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for NSURLSessionConfiguration.ServiceType, &type metadata for NSURLSessionConfiguration.ServiceType);
    atomic_store(result, (unint64_t *)&qword_1EE847158);
  }
  return result;
}

uint64_t _s11ServiceTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A625B288 + 4 * byte_1A633C479[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A625B2BC + 4 * byte_1A633C474[v4]))();
}

uint64_t sub_1A625B2BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A625B2C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A625B2CCLL);
  return result;
}

uint64_t sub_1A625B2D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A625B2E0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A625B2E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A625B2EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NSURLSessionConfiguration.ServiceType()
{
  return &type metadata for NSURLSessionConfiguration.ServiceType;
}

void sub_1A625B308(uint64_t a1)
{
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
    v2 = *(id *)(a1 + 8 * v1 + 24);
  OUTLINED_FUNCTION_29_1();
}

uint64_t sub_1A625B340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v5 = v3 - 1;
    v6 = type metadata accessor for HourForecast();
    sub_1A618D9C4(a1+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * v5, a2, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
    v7 = a2;
    v8 = 0;
    v9 = v6;
  }
  else
  {
    v9 = type metadata accessor for HourForecast();
    v7 = a2;
    v8 = 1;
  }
  return __swift_storeEnumTagSinglePayload(v7, v8, 1, v9);
}

void WeatherDataInterpolator.interpolatedCurrentWeather(from:location:date:timeZone:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, uint64_t a6@<D1>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  uint64_t v54;
  os_log_type_t v55;
  _DWORD *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  double v69;
  uint64_t v70;
  char v71;
  double v72;
  uint64_t v73;
  char v74;
  double v75;
  uint64_t v76;
  char v77;
  double v78;
  char v79;
  char v80;
  char v81;
  char v82;
  char v83;
  char v84;
  char v85;
  char v86;
  unsigned __int8 v87;
  uint64_t v88;
  char v89;
  unsigned __int8 v90;
  unsigned __int8 v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  char v95;
  char v96;
  char v97;
  uint64_t v98;
  double v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  double v116;
  double v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  os_log_type_t v123;
  _DWORD *v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  os_log_type_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  NSObject *v145;
  os_log_type_t v146;
  int v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  double v166;
  double v167;
  double v168;
  double v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  double v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193[2];
  uint64_t v194;

  v176 = a3;
  v191 = a2;
  v186 = sub_1A6332C24();
  v189 = *(_QWORD *)(v186 - 8);
  MEMORY[0x1E0C80A78](v186);
  OUTLINED_FUNCTION_1_0();
  v188 = v10;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED219BB8);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v162 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v162 - v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_27();
  v180 = v18;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_16_0();
  v179 = v20;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v21);
  v182 = (uint64_t)&v162 - v22;
  type metadata accessor for Metadata();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_27();
  v181 = v24;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v25);
  v183 = (uint64_t)&v162 - v26;
  v190 = OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_27();
  v185 = v28;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_16_0();
  v184 = v30;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_16_0();
  v187 = v32;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_16_0();
  v35 = v34;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v36);
  v178 = (uint64_t)&v162 - v37;
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED219660);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)&v162 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for WeatherDataInterpolator.CubicBoundingBox();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v42);
  OUTLINED_FUNCTION_1_0();
  v192 = v43;
  v44 = type metadata accessor for HourlyForecast();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v45);
  v47 = (char *)&v162 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1A625C324() & 1) == 0)
  {
    if (qword_1ED21D318 != -1)
      swift_once();
    v54 = OUTLINED_FUNCTION_30();
    __swift_project_value_buffer(v54, (uint64_t)qword_1ED22A3C0);
    sub_1A6334EEC();
    v55 = OUTLINED_FUNCTION_32_0();
    if (OUTLINED_FUNCTION_10_13(v55))
    {
      v56 = (_DWORD *)OUTLINED_FUNCTION_2_4();
      v194 = OUTLINED_FUNCTION_2_4();
      *v56 = 141558275;
      OUTLINED_FUNCTION_2_26();
      OUTLINED_FUNCTION_5_19();
      v57 = OUTLINED_FUNCTION_9_15();
      v59 = OUTLINED_FUNCTION_7_15(v57, v58);
      OUTLINED_FUNCTION_12_13(v59);
      OUTLINED_FUNCTION_24_1();
      OUTLINED_FUNCTION_20_15(&dword_1A6185000, v60, v61, "Can't interpolate: there is some precipitation; location=%{private,mask.hash}s");
      OUTLINED_FUNCTION_11_12();
      OUTLINED_FUNCTION_0_5();
    }

    v62 = OUTLINED_FUNCTION_30_6();
    v63 = a4;
    goto LABEL_50;
  }
  v175 = a4;
  v48 = a1;
  sub_1A618D9C4(a1, (uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for HourlyForecast);
  v49 = *(int *)(v44 + 20);
  v177 = v47;
  v50 = *(_QWORD *)&v47[v49];
  v193[0] = v50;
  swift_bridgeObjectRetain_n();
  sub_1A625D140(v193);
  v51 = v193[0];
  v52 = v191;
  sub_1A625C500((uint64_t)v40);
  if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v41) == 1)
  {
    sub_1A61AEA1C((uint64_t)v40, qword_1ED219660);
    sub_1A61CA01C(v51, (uint64_t)v16);
    v53 = v190;
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v190) == 1)
    {
      OUTLINED_FUNCTION_345();
    }
    else
    {
      v131 = v35;
      sub_1A618B330((uint64_t)v16, v35, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
      sub_1A625B340(v51, (uint64_t)v13);
      OUTLINED_FUNCTION_345();
      if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, (uint64_t)v53) != 1)
      {
        v138 = v187;
        sub_1A618B330((uint64_t)v13, v187, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
        if (qword_1ED21D318 != -1)
          swift_once();
        v139 = OUTLINED_FUNCTION_30();
        __swift_project_value_buffer(v139, (uint64_t)qword_1ED22A3C0);
        v140 = v184;
        sub_1A618D9C4(v35, v184, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
        v141 = v185;
        sub_1A618D9C4(v138, v185, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
        v143 = v188;
        v142 = v189;
        v144 = v186;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v189 + 16))(v188, v52, v186);
        sub_1A6334CDC();
        v145 = sub_1A6334EEC();
        v146 = sub_1A633569C();
        v147 = v146;
        if (os_log_type_enabled(v145, v146))
        {
          v148 = OUTLINED_FUNCTION_2_4();
          v192 = OUTLINED_FUNCTION_2_4();
          v194 = v192;
          *(_DWORD *)v148 = 141559299;
          OUTLINED_FUNCTION_2_26();
          *(_WORD *)(v148 + 12) = 2081;
          *(double *)v193 = a5;
          v193[1] = a6;
          type metadata accessor for CLLocationCoordinate2D(0);
          v149 = sub_1A6335348();
          LODWORD(v191) = v147;
          v193[0] = OUTLINED_FUNCTION_7_15(v149, v150);
          OUTLINED_FUNCTION_23_12();
          OUTLINED_FUNCTION_399();
          *(_WORD *)(v148 + 22) = 2048;
          v151 = *(_QWORD *)(v50 + 16);
          OUTLINED_FUNCTION_327();
          v193[0] = v151;
          OUTLINED_FUNCTION_23_12();
          OUTLINED_FUNCTION_327();
          *(_WORD *)(v148 + 32) = 2080;
          sub_1A625D1C0();
          v152 = OUTLINED_FUNCTION_15_17();
          v154 = OUTLINED_FUNCTION_7_15(v152, v153);
          OUTLINED_FUNCTION_16_16(v154);
          OUTLINED_FUNCTION_399();
          sub_1A61AED2C(v140, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
          *(_WORD *)(v148 + 42) = 2080;
          v155 = OUTLINED_FUNCTION_15_17();
          v157 = OUTLINED_FUNCTION_7_15(v155, v156);
          OUTLINED_FUNCTION_16_16(v157);
          OUTLINED_FUNCTION_399();
          sub_1A61AED2C(v141, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
          *(_WORD *)(v148 + 52) = 2080;
          v158 = v188;
          v159 = OUTLINED_FUNCTION_15_17();
          v193[0] = OUTLINED_FUNCTION_7_15(v159, v160);
          sub_1A6335774();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v189 + 8))(v158, v144);
          _os_log_impl(&dword_1A6185000, v145, (os_log_type_t)v191, "Can't interpolate: not enough data points; location=%{private,mask.hash}s, hours.count=%ld, firstHour.date=%"
            "s, lastHour.date=%s, referenceDate=%s",
            (uint8_t *)v148,
            0x3Eu);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_0_5();
        }

        OUTLINED_FUNCTION_327();
        (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v143, v144);
        OUTLINED_FUNCTION_35_4(v141);
        OUTLINED_FUNCTION_35_4(v140);
        OUTLINED_FUNCTION_327();
        OUTLINED_FUNCTION_35_4(v138);
        sub_1A61AED2C(v131, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
        OUTLINED_FUNCTION_33_4(v161, (uint64_t (*)(_QWORD))type metadata accessor for HourlyForecast);
        v121 = v175;
        goto LABEL_49;
      }
      sub_1A61AED2C(v35, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
      v16 = v13;
    }
    v121 = v175;
    sub_1A61AEA1C((uint64_t)v16, (uint64_t *)&unk_1ED219BB8);
    if (qword_1ED21D318 != -1)
      swift_once();
    v132 = OUTLINED_FUNCTION_30();
    __swift_project_value_buffer(v132, (uint64_t)qword_1ED22A3C0);
    sub_1A6334CDC();
    sub_1A6334EEC();
    v133 = OUTLINED_FUNCTION_32_0();
    if (OUTLINED_FUNCTION_10_13(v133))
    {
      v134 = OUTLINED_FUNCTION_2_4();
      v194 = OUTLINED_FUNCTION_2_4();
      *(_DWORD *)v134 = 141558531;
      OUTLINED_FUNCTION_2_26();
      OUTLINED_FUNCTION_5_19();
      v135 = OUTLINED_FUNCTION_9_15();
      v193[0] = OUTLINED_FUNCTION_7_15(v135, v136);
      OUTLINED_FUNCTION_22_10();
      OUTLINED_FUNCTION_24_1();
      *(_WORD *)(v134 + 22) = 2048;
      v137 = *(_QWORD *)(v50 + 16);
      OUTLINED_FUNCTION_327();
      v193[0] = v137;
      OUTLINED_FUNCTION_22_10();
      OUTLINED_FUNCTION_327();
      _os_log_impl(&dword_1A6185000, v53, (os_log_type_t)v52, "Can't interpolate: not enough data points; location=%{private,mask.hash}s, hours.count=%ld",
        (uint8_t *)v134,
        0x20u);
      OUTLINED_FUNCTION_11_12();
      OUTLINED_FUNCTION_0_5();
    }

    swift_bridgeObjectRelease_n();
    v130 = (uint64_t)v177;
LABEL_48:
    sub_1A61AED2C(v130, (uint64_t (*)(_QWORD))type metadata accessor for HourlyForecast);
LABEL_49:
    v62 = OUTLINED_FUNCTION_30_6();
    v63 = v121;
LABEL_50:
    __swift_storeEnumTagSinglePayload(v63, 1, 1, v62);
    return;
  }
  OUTLINED_FUNCTION_327();
  v64 = v52;
  sub_1A618B330((uint64_t)v40, v192, (uint64_t (*)(_QWORD))type metadata accessor for WeatherDataInterpolator.CubicBoundingBox);
  v65 = OUTLINED_FUNCTION_0_34(0);
  if ((v66 & 1) != 0)
    goto LABEL_35;
  v40 = (char *)v65;
  *(double *)&v67 = COERCE_DOUBLE(OUTLINED_FUNCTION_0_34(1));
  if ((v68 & 1) != 0)
    goto LABEL_35;
  v69 = *(double *)&v67;
  *(double *)&v70 = COERCE_DOUBLE(OUTLINED_FUNCTION_0_34(2));
  if ((v71 & 1) != 0)
    goto LABEL_35;
  v72 = *(double *)&v70;
  *(double *)&v73 = COERCE_DOUBLE(OUTLINED_FUNCTION_0_34(3));
  if ((v74 & 1) != 0)
    goto LABEL_35;
  v75 = *(double *)&v73;
  *(double *)&v76 = COERCE_DOUBLE(OUTLINED_FUNCTION_0_34(4));
  if ((v77 & 1) != 0)
    goto LABEL_35;
  v78 = *(double *)&v76;
  v188 = OUTLINED_FUNCTION_0_34(5);
  if ((v79 & 1) != 0)
    goto LABEL_35;
  v187 = OUTLINED_FUNCTION_0_34(6);
  if ((v80 & 1) != 0)
    goto LABEL_35;
  v185 = OUTLINED_FUNCTION_0_34(7);
  if ((v81 & 1) != 0)
    goto LABEL_35;
  v184 = OUTLINED_FUNCTION_0_34(8);
  if ((v82 & 1) != 0)
    goto LABEL_35;
  v174 = OUTLINED_FUNCTION_0_34(9);
  if ((v83 & 1) != 0)
    goto LABEL_35;
  v173 = COERCE_DOUBLE(OUTLINED_FUNCTION_0_34(10));
  if ((v84 & 1) != 0)
    goto LABEL_35;
  v172 = OUTLINED_FUNCTION_0_34(11);
  if ((v85 & 1) != 0)
    goto LABEL_35;
  v171 = OUTLINED_FUNCTION_0_34(12);
  v87 = v86 & 1;
  v88 = sub_1A625C6A8(13, v51, v192, v64);
  v90 = v89 & 1;
  v91 = v87;
  v92 = v192;
  sub_1A625CB78(v171, v91, v88, v90);
  v171 = v93;
  if ((v94 & 1) != 0 || (v170 = OUTLINED_FUNCTION_0_34(14), (v95 & 1) != 0))
  {
LABEL_35:
    OUTLINED_FUNCTION_345();
    v98 = (uint64_t)v177;
    goto LABEL_36;
  }
  v169 = v78;
  v168 = v75;
  v167 = v72;
  v166 = v69;
  v165 = OUTLINED_FUNCTION_0_34(15);
  v97 = v96;
  OUTLINED_FUNCTION_345();
  v98 = (uint64_t)v177;
  if ((v97 & 1) != 0)
  {
LABEL_36:
    v121 = v175;
    if (qword_1ED21D318 != -1)
      swift_once();
    v122 = OUTLINED_FUNCTION_30();
    __swift_project_value_buffer(v122, (uint64_t)qword_1ED22A3C0);
    sub_1A6334EEC();
    v123 = OUTLINED_FUNCTION_32_0();
    if (OUTLINED_FUNCTION_10_13(v123))
    {
      v124 = (_DWORD *)OUTLINED_FUNCTION_2_4();
      v194 = OUTLINED_FUNCTION_2_4();
      *v124 = 141558275;
      OUTLINED_FUNCTION_2_26();
      OUTLINED_FUNCTION_5_19();
      v125 = OUTLINED_FUNCTION_9_15();
      v127 = OUTLINED_FUNCTION_7_15(v125, v126);
      OUTLINED_FUNCTION_12_13(v127);
      OUTLINED_FUNCTION_24_1();
      OUTLINED_FUNCTION_20_15(&dword_1A6185000, v128, v129, "Can't interpolate: could not interplate all data points; location=%{private,mask.hash}s");
      OUTLINED_FUNCTION_11_12();
      OUTLINED_FUNCTION_0_5();
    }

    sub_1A61AED2C(v192, (uint64_t (*)(_QWORD))type metadata accessor for WeatherDataInterpolator.CubicBoundingBox);
    v130 = v98;
    goto LABEL_48;
  }
  v99 = v173;
  v100 = v178;
  sub_1A618D9C4(v92 + *(int *)(v41 + 24), v178, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
  v101 = v183;
  sub_1A618D9C4(v98, v183, (uint64_t (*)(_QWORD))type metadata accessor for Metadata);
  v102 = v189;
  v103 = v191;
  v104 = v186;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v189 + 24))(v101, v191, v186);
  v105 = type metadata accessor for InterpolationInputProducts();
  v176 = sub_1A625CC24(v48 + *(int *)(v105 + 20), v103, v176);
  v107 = v106;
  v109 = v108;
  sub_1A618D9C4(v101, v181, (uint64_t (*)(_QWORD))type metadata accessor for Metadata);
  v110 = v182;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 16))(v182, v103, v104);
  OUTLINED_FUNCTION_957(v110, 0);
  v111 = v190;
  v112 = *(int *)(v190 + 40);
  LOBYTE(v193[0]) = *(_BYTE *)(v100 + *(int *)(v190 + 36));
  LODWORD(v191) = *(unsigned __int8 *)(v100 + v112);
  v189 = OUTLINED_FUNCTION_1_24();
  v173 = COERCE_DOUBLE(OUTLINED_FUNCTION_1_24());
  v164 = OUTLINED_FUNCTION_1_24();
  v163 = OUTLINED_FUNCTION_1_24();
  v162 = OUTLINED_FUNCTION_1_24();
  v113 = OUTLINED_FUNCTION_1_24();
  LOBYTE(v194) = *(_BYTE *)(v100 + *(int *)(v111 + 68));
  OUTLINED_FUNCTION_957(v179, 1);
  OUTLINED_FUNCTION_957(v180, 1);
  if ((v109 & 1) != 0)
    v114 = 0;
  else
    v114 = v176;
  if ((v109 & 1) != 0)
    v115 = 0;
  else
    v115 = v107;
  v116 = round(v99);
  if ((~*(_QWORD *)&v116 & 0x7FF0000000000000) != 0)
  {
    if (v116 > -9.22337204e18)
    {
      if (v116 < 9.22337204e18)
      {
        v117 = *(double *)&v40;
        v118 = v175;
        CurrentWeather.init(metadata:asOf:cloudCover:cloudCoverLowAltPct:cloudCoverMidAltPct:cloudCoverHighAltPct:conditionCode:daylight:humidity:precipitationAmount1h:precipitationAmount6h:precipitationAmount24h:precipitationAmountNext1h:precipitationAmountNext6h:precipitationAmountNext24h:precipitationAmountPrevious1hByType:precipitationAmountPrevious6hByType:precipitationAmountPrevious24hByType:precipitationAmountNext1hByType:precipitationAmountNext6hByType:precipitationAmountNext24hByType:precipitationIntensity:perceivedPrecipitationIntensity:pressure:pressureTrend:snowfallAmount1h:snowfallAmount6h:snowfallAmount24h:snowfallAmountNext1h:snowfallAmountNext6h:snowfallAmountNext24h:sunrise:sunset:temperature:temperatureApparent:temperatureDewPoint:temperatureTodayMax:temperatureTodayMin:uvIndex:visibility:windDirection:windGust:windSpeed:)(v181, v182, (char *)v193, v191, v189, *(uint64_t *)&v173, v164, v163, v175, v117, v166, v167, v168, v169, 0.0, 0.0, 0.0, 0, 0,
          0,
          v162,
          v113,
          v188,
          0,
          v187,
          0,
          (char *)&v194,
          0,
          0,
          0,
          0,
          0,
          0,
          v179,
          v180,
          v185,
          v184,
          0,
          v174,
          0,
          v115,
          v109 & 1,
          v114,
          v109 & 1,
          (uint64_t)v116,
          v172,
          v171,
          0,
          v170,
          0,
          *(double *)&v165);
        sub_1A61AED2C(v178, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
        sub_1A61AED2C(v192, (uint64_t (*)(_QWORD))type metadata accessor for WeatherDataInterpolator.CubicBoundingBox);
        OUTLINED_FUNCTION_33_4(v119, (uint64_t (*)(_QWORD))type metadata accessor for HourlyForecast);
        v120 = OUTLINED_FUNCTION_30_6();
        __swift_storeEnumTagSinglePayload(v118, 0, 1, v120);
        sub_1A61AED2C(v183, (uint64_t (*)(_QWORD))type metadata accessor for Metadata);
        return;
      }
      goto LABEL_58;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_58:
  __break(1u);
  OUTLINED_FUNCTION_345();
  __break(1u);
}

uint64_t type metadata accessor for WeatherDataInterpolator.CubicBoundingBox()
{
  uint64_t result;

  result = qword_1ED219650;
  if (!qword_1ED219650)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A625C324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t HourForecast;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  BOOL v21;
  uint64_t v23;

  v1 = type metadata accessor for ForecastSummary();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D0A0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  HourForecast = type metadata accessor for NextHourForecast();
  MEMORY[0x1E0C80A78](HourForecast);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for InterpolationInputProducts();
  sub_1A6260604(v0 + *(int *)(v11 + 24), (uint64_t)v7);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, HourForecast) == 1)
  {
    sub_1A61AEA1C((uint64_t)v7, &qword_1ED21D0A0);
    return 1;
  }
  else
  {
    sub_1A618B330((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for NextHourForecast);
    v13 = *(_QWORD *)&v10[*(int *)(HourForecast + 24)];
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = v13 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
      v16 = *(_QWORD *)(v2 + 72);
      sub_1A6334CDC();
      v17 = v14 - 1;
      do
      {
        sub_1A618D9C4(v15, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ForecastSummary);
        v18 = *(int *)(v1 + 24);
        v19 = v4[v18];
        v12 = v4[v18] == 0;
        sub_1A61AED2C((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ForecastSummary);
        v21 = v17-- != 0;
        if (v19)
          break;
        v15 += v16;
      }
      while (v21);
      swift_bridgeObjectRelease();
    }
    else
    {
      v12 = 1;
    }
    sub_1A61AED2C((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for NextHourForecast);
  }
  return v12;
}

uint64_t sub_1A625C500@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v21;

  sub_1A6334CDC();
  sub_1A61C7060();
  sub_1A61C7284(2, v2);
  sub_1A61C7304(v3, v4, v5, v6);
  v8 = v7;
  sub_1A6334CDC();
  sub_1A61C7060();
  sub_1A61C7458(2, v9);
  sub_1A61C7304(v10, v11, v12, v13);
  v15 = v14;
  if (*(_QWORD *)(v8 + 16) == 2 && *(_QWORD *)(v14 + 16) == 2)
  {
    v16 = *(_QWORD *)(type metadata accessor for HourForecast() - 8);
    v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    sub_1A618D9C4(v8 + v17, a1, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
    v18 = (int *)type metadata accessor for WeatherDataInterpolator.CubicBoundingBox();
    v19 = *(_QWORD *)(v16 + 72);
    sub_1A618D9C4(v8 + v17 + v19, a1 + v18[5], (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
    sub_1A618D9C4(v15 + v17, a1 + v18[6], (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
    sub_1A618D9C4(v15 + v17 + v19, a1 + v18[7], (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
    sub_1A61C7934(v15);
    *(_QWORD *)(a1 + v18[8]) = v8;
    return __swift_storeEnumTagSinglePayload(a1, 0, 1, (uint64_t)v18);
  }
  else
  {
    v21 = type metadata accessor for WeatherDataInterpolator.CubicBoundingBox();
    __swift_storeEnumTagSinglePayload(a1, 1, 1, v21);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A625C6A8(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = type metadata accessor for WeatherDataInterpolator.CubicBoundingBox();
  return sub_1A625C954(a1, a2, *(_QWORD *)(a3 + *(int *)(v8 + 32)), a4);
}

double sub_1A625C954(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double *v4;
  uint64_t v5;
  double v6;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  double v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  unsigned __int8 v30;

  v29 = a1;
  v28 = type metadata accessor for InterpolationElement();
  v9 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v11 = (uint64_t *)((char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(_QWORD *)(a2 + 16);
  if (v12)
  {
    v26 = a4;
    v6 = *v4;
    v13 = *(_QWORD *)(type metadata accessor for HourForecast() - 8);
    v14 = a2 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v15 = *(_QWORD *)(v13 + 72);
    v27 = a2;
    sub_1A6334CDC();
    v16 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      sub_1A625CED4(v29);
      if (v5)
        break;
      v18 = v17;
      v19 = (char *)v11 + *(int *)(v28 + 20);
      v20 = sub_1A6332C24();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v19, v14, v20);
      *v11 = v18;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v16 = sub_1A61D3C7C(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
      v22 = *(_QWORD *)(v16 + 16);
      v21 = *(_QWORD *)(v16 + 24);
      if (v22 >= v21 >> 1)
        v16 = sub_1A61D3C7C(v21 > 1, v22 + 1, 1, v16);
      *(_QWORD *)(v16 + 16) = v22 + 1;
      sub_1A618B330((uint64_t)v11, v16+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v22, (uint64_t (*)(_QWORD))type metadata accessor for InterpolationElement);
      v14 += v15;
      if (!--v12)
      {
        swift_bridgeObjectRelease();
        a4 = v26;
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = MEMORY[0x1E0DEE9D8];
LABEL_12:
    v30 = 0;
    MidpointInterpolator.interpolationValue(data:date:interpolationMode:)(v16, a4, &v30);
    if (!v5)
    {
      v6 = v23;
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  swift_bridgeObjectRelease();
  return v6;
}

void sub_1A625CB78(uint64_t a1, unsigned __int8 a2, uint64_t a3, unsigned __int8 a4)
{
  double v4;

  if (((a2 | a4) & 1) == 0)
  {
    v4 = round(atan2(COERCE_LONG_DOUBLE(a3 ^ 0x8000000000000000), COERCE_LONG_DOUBLE(a1 ^ 0x8000000000000000))* 180.0/ 3.14159265)+ 180.0;
    if ((~*(_QWORD *)&v4 & 0x7FF0000000000000) != 0)
    {
      if (v4 > -9.22337204e18)
      {
        if (v4 < 9.22337204e18)
          return;
LABEL_8:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_8;
  }
}

uint64_t sub_1A625CC24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = type metadata accessor for DayForecast();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v31 = (uint64_t)&v30 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED219B10);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v30 - v15;
  v17 = sub_1A6332D8C();
  v32 = *(_QWORD *)(v17 - 8);
  v33 = v17;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.currentCalendar(with:)(a3, (uint64_t)v19);
  v20 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for DailyForecast() + 20));
  v21 = *(_QWORD *)(v20 + 16);
  if (v21)
  {
    v30 = v5;
    v22 = v20 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v23 = *(_QWORD *)(v6 + 72);
    sub_1A6334CDC();
    while (1)
    {
      sub_1A618D9C4(v22, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for DayForecast);
      if ((sub_1A6332D5C() & 1) != 0)
        break;
      sub_1A61AED2C((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for DayForecast);
      v22 += v23;
      if (!--v21)
      {
        v24 = 1;
        goto LABEL_8;
      }
    }
    sub_1A618B330((uint64_t)v8, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for DayForecast);
    v24 = 0;
LABEL_8:
    v5 = v30;
  }
  else
  {
    sub_1A6334CDC();
    v24 = 1;
  }
  v26 = v32;
  v25 = v33;
  __swift_storeEnumTagSinglePayload((uint64_t)v16, v24, 1, v5);
  swift_bridgeObjectRelease();
  sub_1A625F48C((uint64_t)v16, (uint64_t)v13);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v19, v25);
    sub_1A61AEA1C((uint64_t)v13, &qword_1ED219B10);
    return 0;
  }
  else
  {
    v28 = v31;
    sub_1A618B330((uint64_t)v13, v31, (uint64_t (*)(_QWORD))type metadata accessor for DayForecast);
    v27 = *(_QWORD *)(v28 + *(int *)(v5 + 116));
    sub_1A61AED2C(v28, (uint64_t (*)(_QWORD))type metadata accessor for DayForecast);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v19, v25);
  }
  return v27;
}

void sub_1A625CED4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A625CF10()
{
  return type metadata accessor for HourForecast();
}

uint64_t sub_1A625D0E8(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  a4(&v7);
  v5 = *a1 + 8;
  result = sub_1A6335774();
  *a1 = v5;
  return result;
}

void sub_1A625D140(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  v2 = *(_QWORD *)(type metadata accessor for HourForecast() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1A62605F0(v3);
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_1A625F568(v6);
  *a1 = v3;
}

unint64_t sub_1A625D1C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED21B780;
  if (!qword_1ED21B780)
  {
    v1 = sub_1A6332C24();
    result = MEMORY[0x1A85BEED0](MEMORY[0x1E0CB08F0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED21B780);
  }
  return result;
}

uint64_t dispatch thunk of WeatherDataInterpolatorType.interpolatedCurrentWeather(from:location:date:timeZone:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

ValueMetadata *type metadata accessor for WeatherDataInterpolator()
{
  return &type metadata for WeatherDataInterpolator;
}

_QWORD *sub_1A625D218(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v91 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v91 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A6332C24();
    v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = (int *)type metadata accessor for HourForecast();
    *(_QWORD *)((char *)a1 + v9[5]) = *(_QWORD *)((char *)a2 + v9[5]);
    *(_QWORD *)((char *)a1 + v9[6]) = *(_QWORD *)((char *)a2 + v9[6]);
    *(_QWORD *)((char *)a1 + v9[7]) = *(_QWORD *)((char *)a2 + v9[7]);
    *(_QWORD *)((char *)a1 + v9[8]) = *(_QWORD *)((char *)a2 + v9[8]);
    *((_BYTE *)a1 + v9[9]) = *((_BYTE *)a2 + v9[9]);
    *((_BYTE *)a1 + v9[10]) = *((_BYTE *)a2 + v9[10]);
    *(_QWORD *)((char *)a1 + v9[11]) = *(_QWORD *)((char *)a2 + v9[11]);
    *(_QWORD *)((char *)a1 + v9[12]) = *(_QWORD *)((char *)a2 + v9[12]);
    *(_QWORD *)((char *)a1 + v9[13]) = *(_QWORD *)((char *)a2 + v9[13]);
    *((_BYTE *)a1 + v9[14]) = *((_BYTE *)a2 + v9[14]);
    *(_QWORD *)((char *)a1 + v9[15]) = *(_QWORD *)((char *)a2 + v9[15]);
    v10 = v9[16];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    *(_QWORD *)v11 = *(_QWORD *)v12;
    v11[8] = v12[8];
    *((_BYTE *)a1 + v9[17]) = *((_BYTE *)a2 + v9[17]);
    v13 = v9[18];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    v14[8] = v15[8];
    *(_QWORD *)((char *)a1 + v9[19]) = *(_QWORD *)((char *)a2 + v9[19]);
    v16 = v9[20];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = v18[8];
    v19 = v9[21];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    *(_QWORD *)v20 = *(_QWORD *)v21;
    v20[8] = v21[8];
    *(_QWORD *)((char *)a1 + v9[22]) = *(_QWORD *)((char *)a2 + v9[22]);
    *(_QWORD *)((char *)a1 + v9[23]) = *(_QWORD *)((char *)a2 + v9[23]);
    v22 = v9[24];
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v23[8] = v24[8];
    *(_QWORD *)v23 = *(_QWORD *)v24;
    v25 = v9[25];
    v26 = (char *)a1 + v25;
    v27 = (char *)a2 + v25;
    *(_QWORD *)v26 = *(_QWORD *)v27;
    v26[8] = v27[8];
    *(_QWORD *)((char *)a1 + v9[26]) = *(_QWORD *)((char *)a2 + v9[26]);
    v28 = a3[5];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    v8((_QWORD *)((char *)a1 + v28), (_QWORD *)((char *)a2 + v28), v7);
    *(_QWORD *)&v29[v9[5]] = *(_QWORD *)&v30[v9[5]];
    *(_QWORD *)&v29[v9[6]] = *(_QWORD *)&v30[v9[6]];
    *(_QWORD *)&v29[v9[7]] = *(_QWORD *)&v30[v9[7]];
    *(_QWORD *)&v29[v9[8]] = *(_QWORD *)&v30[v9[8]];
    v29[v9[9]] = v30[v9[9]];
    v29[v9[10]] = v30[v9[10]];
    *(_QWORD *)&v29[v9[11]] = *(_QWORD *)&v30[v9[11]];
    *(_QWORD *)&v29[v9[12]] = *(_QWORD *)&v30[v9[12]];
    *(_QWORD *)&v29[v9[13]] = *(_QWORD *)&v30[v9[13]];
    v29[v9[14]] = v30[v9[14]];
    *(_QWORD *)&v29[v9[15]] = *(_QWORD *)&v30[v9[15]];
    v31 = v9[16];
    v32 = &v29[v31];
    v33 = &v30[v31];
    *(_QWORD *)v32 = *(_QWORD *)v33;
    v32[8] = v33[8];
    v29[v9[17]] = v30[v9[17]];
    v34 = v9[18];
    v35 = &v29[v34];
    v36 = &v30[v34];
    *(_QWORD *)v35 = *(_QWORD *)v36;
    v35[8] = v36[8];
    *(_QWORD *)&v29[v9[19]] = *(_QWORD *)&v30[v9[19]];
    v37 = v9[20];
    v38 = &v29[v37];
    v39 = &v30[v37];
    *(_QWORD *)v38 = *(_QWORD *)v39;
    v38[8] = v39[8];
    v40 = v9[21];
    v41 = &v29[v40];
    v42 = &v30[v40];
    *(_QWORD *)v41 = *(_QWORD *)v42;
    v41[8] = v42[8];
    *(_QWORD *)&v29[v9[22]] = *(_QWORD *)&v30[v9[22]];
    *(_QWORD *)&v29[v9[23]] = *(_QWORD *)&v30[v9[23]];
    v43 = v9[24];
    v44 = &v29[v43];
    v45 = &v30[v43];
    v44[8] = v45[8];
    *(_QWORD *)v44 = *(_QWORD *)v45;
    v46 = v9[25];
    v47 = &v29[v46];
    v48 = &v30[v46];
    *(_QWORD *)v47 = *(_QWORD *)v48;
    v47[8] = v48[8];
    *(_QWORD *)&v29[v9[26]] = *(_QWORD *)&v30[v9[26]];
    v49 = a3[6];
    v50 = (char *)a1 + v49;
    v51 = (char *)a2 + v49;
    v8((_QWORD *)((char *)a1 + v49), (_QWORD *)((char *)a2 + v49), v7);
    *(_QWORD *)&v50[v9[5]] = *(_QWORD *)&v51[v9[5]];
    *(_QWORD *)&v50[v9[6]] = *(_QWORD *)&v51[v9[6]];
    *(_QWORD *)&v50[v9[7]] = *(_QWORD *)&v51[v9[7]];
    *(_QWORD *)&v50[v9[8]] = *(_QWORD *)&v51[v9[8]];
    v50[v9[9]] = v51[v9[9]];
    v50[v9[10]] = v51[v9[10]];
    *(_QWORD *)&v50[v9[11]] = *(_QWORD *)&v51[v9[11]];
    *(_QWORD *)&v50[v9[12]] = *(_QWORD *)&v51[v9[12]];
    *(_QWORD *)&v50[v9[13]] = *(_QWORD *)&v51[v9[13]];
    v50[v9[14]] = v51[v9[14]];
    *(_QWORD *)&v50[v9[15]] = *(_QWORD *)&v51[v9[15]];
    v52 = v9[16];
    v53 = &v50[v52];
    v54 = &v51[v52];
    *(_QWORD *)v53 = *(_QWORD *)v54;
    v53[8] = v54[8];
    v50[v9[17]] = v51[v9[17]];
    v55 = v9[18];
    v56 = &v50[v55];
    v57 = &v51[v55];
    *(_QWORD *)v56 = *(_QWORD *)v57;
    v56[8] = v57[8];
    *(_QWORD *)&v50[v9[19]] = *(_QWORD *)&v51[v9[19]];
    v58 = v9[20];
    v59 = &v50[v58];
    v60 = &v51[v58];
    *(_QWORD *)v59 = *(_QWORD *)v60;
    v59[8] = v60[8];
    v61 = v9[21];
    v62 = &v50[v61];
    v63 = &v51[v61];
    *(_QWORD *)v62 = *(_QWORD *)v63;
    v62[8] = v63[8];
    *(_QWORD *)&v50[v9[22]] = *(_QWORD *)&v51[v9[22]];
    *(_QWORD *)&v50[v9[23]] = *(_QWORD *)&v51[v9[23]];
    v64 = v9[24];
    v65 = &v50[v64];
    v66 = &v51[v64];
    v65[8] = v66[8];
    *(_QWORD *)v65 = *(_QWORD *)v66;
    v67 = v9[25];
    v68 = &v50[v67];
    v69 = &v51[v67];
    *(_QWORD *)v68 = *(_QWORD *)v69;
    v68[8] = v69[8];
    *(_QWORD *)&v50[v9[26]] = *(_QWORD *)&v51[v9[26]];
    v70 = a3[7];
    v71 = (char *)a1 + v70;
    v72 = (char *)a2 + v70;
    v8((_QWORD *)((char *)a1 + v70), (_QWORD *)((char *)a2 + v70), v7);
    *(_QWORD *)&v71[v9[5]] = *(_QWORD *)&v72[v9[5]];
    *(_QWORD *)&v71[v9[6]] = *(_QWORD *)&v72[v9[6]];
    *(_QWORD *)&v71[v9[7]] = *(_QWORD *)&v72[v9[7]];
    *(_QWORD *)&v71[v9[8]] = *(_QWORD *)&v72[v9[8]];
    v71[v9[9]] = v72[v9[9]];
    v71[v9[10]] = v72[v9[10]];
    *(_QWORD *)&v71[v9[11]] = *(_QWORD *)&v72[v9[11]];
    *(_QWORD *)&v71[v9[12]] = *(_QWORD *)&v72[v9[12]];
    *(_QWORD *)&v71[v9[13]] = *(_QWORD *)&v72[v9[13]];
    v71[v9[14]] = v72[v9[14]];
    *(_QWORD *)&v71[v9[15]] = *(_QWORD *)&v72[v9[15]];
    v73 = v9[16];
    v74 = &v71[v73];
    v75 = &v72[v73];
    *(_QWORD *)v74 = *(_QWORD *)v75;
    v74[8] = v75[8];
    v71[v9[17]] = v72[v9[17]];
    v76 = v9[18];
    v77 = &v71[v76];
    v78 = &v72[v76];
    *(_QWORD *)v77 = *(_QWORD *)v78;
    v77[8] = v78[8];
    *(_QWORD *)&v71[v9[19]] = *(_QWORD *)&v72[v9[19]];
    v79 = v9[20];
    v80 = &v71[v79];
    v81 = &v72[v79];
    *(_QWORD *)v80 = *(_QWORD *)v81;
    v80[8] = v81[8];
    v82 = v9[21];
    v83 = &v71[v82];
    v84 = &v72[v82];
    *(_QWORD *)v83 = *(_QWORD *)v84;
    v83[8] = v84[8];
    *(_QWORD *)&v71[v9[22]] = *(_QWORD *)&v72[v9[22]];
    *(_QWORD *)&v71[v9[23]] = *(_QWORD *)&v72[v9[23]];
    v85 = v9[24];
    v86 = &v71[v85];
    v87 = &v72[v85];
    v86[8] = v87[8];
    *(_QWORD *)v86 = *(_QWORD *)v87;
    v88 = v9[25];
    v89 = &v71[v88];
    v90 = &v72[v88];
    *(_QWORD *)v89 = *(_QWORD *)v90;
    v89[8] = v90[8];
    *(_QWORD *)&v71[v9[26]] = *(_QWORD *)&v72[v9[26]];
    *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
    sub_1A6334CDC();
  }
  return a1;
}

uint64_t sub_1A625D8B8(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v4 = sub_1A6332C24();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  v5(a1 + a2[6], v4);
  v5(a1 + a2[7], v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A625D938(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v6 = sub_1A6332C24();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for HourForecast();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  *(_BYTE *)(a1 + v8[9]) = *(_BYTE *)(a2 + v8[9]);
  *(_BYTE *)(a1 + v8[10]) = *(_BYTE *)(a2 + v8[10]);
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  *(_QWORD *)(a1 + v8[12]) = *(_QWORD *)(a2 + v8[12]);
  *(_QWORD *)(a1 + v8[13]) = *(_QWORD *)(a2 + v8[13]);
  *(_BYTE *)(a1 + v8[14]) = *(_BYTE *)(a2 + v8[14]);
  *(_QWORD *)(a1 + v8[15]) = *(_QWORD *)(a2 + v8[15]);
  v9 = v8[16];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  *(_BYTE *)(a1 + v8[17]) = *(_BYTE *)(a2 + v8[17]);
  v12 = v8[18];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)(a1 + v8[19]) = *(_QWORD *)(a2 + v8[19]);
  v15 = v8[20];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
  v18 = v8[21];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  *(_QWORD *)(a1 + v8[22]) = *(_QWORD *)(a2 + v8[22]);
  *(_QWORD *)(a1 + v8[23]) = *(_QWORD *)(a2 + v8[23]);
  v21 = v8[24];
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_BYTE *)(v22 + 8) = *(_BYTE *)(v23 + 8);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  v24 = v8[25];
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  *(_QWORD *)(a1 + v8[26]) = *(_QWORD *)(a2 + v8[26]);
  v27 = a3[5];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v7(a1 + v27, a2 + v27, v6);
  *(_QWORD *)(v28 + v8[5]) = *(_QWORD *)(v29 + v8[5]);
  *(_QWORD *)(v28 + v8[6]) = *(_QWORD *)(v29 + v8[6]);
  *(_QWORD *)(v28 + v8[7]) = *(_QWORD *)(v29 + v8[7]);
  *(_QWORD *)(v28 + v8[8]) = *(_QWORD *)(v29 + v8[8]);
  *(_BYTE *)(v28 + v8[9]) = *(_BYTE *)(v29 + v8[9]);
  *(_BYTE *)(v28 + v8[10]) = *(_BYTE *)(v29 + v8[10]);
  *(_QWORD *)(v28 + v8[11]) = *(_QWORD *)(v29 + v8[11]);
  *(_QWORD *)(v28 + v8[12]) = *(_QWORD *)(v29 + v8[12]);
  *(_QWORD *)(v28 + v8[13]) = *(_QWORD *)(v29 + v8[13]);
  *(_BYTE *)(v28 + v8[14]) = *(_BYTE *)(v29 + v8[14]);
  *(_QWORD *)(v28 + v8[15]) = *(_QWORD *)(v29 + v8[15]);
  v30 = v8[16];
  v31 = v28 + v30;
  v32 = v29 + v30;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *(_BYTE *)(v31 + 8) = *(_BYTE *)(v32 + 8);
  *(_BYTE *)(v28 + v8[17]) = *(_BYTE *)(v29 + v8[17]);
  v33 = v8[18];
  v34 = v28 + v33;
  v35 = v29 + v33;
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *(_BYTE *)(v34 + 8) = *(_BYTE *)(v35 + 8);
  *(_QWORD *)(v28 + v8[19]) = *(_QWORD *)(v29 + v8[19]);
  v36 = v8[20];
  v37 = v28 + v36;
  v38 = v29 + v36;
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *(_BYTE *)(v37 + 8) = *(_BYTE *)(v38 + 8);
  v39 = v8[21];
  v40 = v28 + v39;
  v41 = v29 + v39;
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *(_BYTE *)(v40 + 8) = *(_BYTE *)(v41 + 8);
  *(_QWORD *)(v28 + v8[22]) = *(_QWORD *)(v29 + v8[22]);
  *(_QWORD *)(v28 + v8[23]) = *(_QWORD *)(v29 + v8[23]);
  v42 = v8[24];
  v43 = v28 + v42;
  v44 = v29 + v42;
  *(_BYTE *)(v43 + 8) = *(_BYTE *)(v44 + 8);
  *(_QWORD *)v43 = *(_QWORD *)v44;
  v45 = v8[25];
  v46 = v28 + v45;
  v47 = v29 + v45;
  *(_QWORD *)v46 = *(_QWORD *)v47;
  *(_BYTE *)(v46 + 8) = *(_BYTE *)(v47 + 8);
  *(_QWORD *)(v28 + v8[26]) = *(_QWORD *)(v29 + v8[26]);
  v48 = a3[6];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v7(a1 + v48, a2 + v48, v6);
  *(_QWORD *)(v49 + v8[5]) = *(_QWORD *)(v50 + v8[5]);
  *(_QWORD *)(v49 + v8[6]) = *(_QWORD *)(v50 + v8[6]);
  *(_QWORD *)(v49 + v8[7]) = *(_QWORD *)(v50 + v8[7]);
  *(_QWORD *)(v49 + v8[8]) = *(_QWORD *)(v50 + v8[8]);
  *(_BYTE *)(v49 + v8[9]) = *(_BYTE *)(v50 + v8[9]);
  *(_BYTE *)(v49 + v8[10]) = *(_BYTE *)(v50 + v8[10]);
  *(_QWORD *)(v49 + v8[11]) = *(_QWORD *)(v50 + v8[11]);
  *(_QWORD *)(v49 + v8[12]) = *(_QWORD *)(v50 + v8[12]);
  *(_QWORD *)(v49 + v8[13]) = *(_QWORD *)(v50 + v8[13]);
  *(_BYTE *)(v49 + v8[14]) = *(_BYTE *)(v50 + v8[14]);
  *(_QWORD *)(v49 + v8[15]) = *(_QWORD *)(v50 + v8[15]);
  v51 = v8[16];
  v52 = v49 + v51;
  v53 = v50 + v51;
  *(_QWORD *)v52 = *(_QWORD *)v53;
  *(_BYTE *)(v52 + 8) = *(_BYTE *)(v53 + 8);
  *(_BYTE *)(v49 + v8[17]) = *(_BYTE *)(v50 + v8[17]);
  v54 = v8[18];
  v55 = v49 + v54;
  v56 = v50 + v54;
  *(_QWORD *)v55 = *(_QWORD *)v56;
  *(_BYTE *)(v55 + 8) = *(_BYTE *)(v56 + 8);
  *(_QWORD *)(v49 + v8[19]) = *(_QWORD *)(v50 + v8[19]);
  v57 = v8[20];
  v58 = v49 + v57;
  v59 = v50 + v57;
  *(_QWORD *)v58 = *(_QWORD *)v59;
  *(_BYTE *)(v58 + 8) = *(_BYTE *)(v59 + 8);
  v60 = v8[21];
  v61 = v49 + v60;
  v62 = v50 + v60;
  *(_QWORD *)v61 = *(_QWORD *)v62;
  *(_BYTE *)(v61 + 8) = *(_BYTE *)(v62 + 8);
  *(_QWORD *)(v49 + v8[22]) = *(_QWORD *)(v50 + v8[22]);
  *(_QWORD *)(v49 + v8[23]) = *(_QWORD *)(v50 + v8[23]);
  v63 = v8[24];
  v64 = v49 + v63;
  v65 = v50 + v63;
  *(_BYTE *)(v64 + 8) = *(_BYTE *)(v65 + 8);
  *(_QWORD *)v64 = *(_QWORD *)v65;
  v66 = v8[25];
  v67 = v49 + v66;
  v68 = v50 + v66;
  *(_QWORD *)v67 = *(_QWORD *)v68;
  *(_BYTE *)(v67 + 8) = *(_BYTE *)(v68 + 8);
  *(_QWORD *)(v49 + v8[26]) = *(_QWORD *)(v50 + v8[26]);
  v69 = a3[7];
  v70 = a1 + v69;
  v71 = a2 + v69;
  v7(a1 + v69, a2 + v69, v6);
  *(_QWORD *)(v70 + v8[5]) = *(_QWORD *)(v71 + v8[5]);
  *(_QWORD *)(v70 + v8[6]) = *(_QWORD *)(v71 + v8[6]);
  *(_QWORD *)(v70 + v8[7]) = *(_QWORD *)(v71 + v8[7]);
  *(_QWORD *)(v70 + v8[8]) = *(_QWORD *)(v71 + v8[8]);
  *(_BYTE *)(v70 + v8[9]) = *(_BYTE *)(v71 + v8[9]);
  *(_BYTE *)(v70 + v8[10]) = *(_BYTE *)(v71 + v8[10]);
  *(_QWORD *)(v70 + v8[11]) = *(_QWORD *)(v71 + v8[11]);
  *(_QWORD *)(v70 + v8[12]) = *(_QWORD *)(v71 + v8[12]);
  *(_QWORD *)(v70 + v8[13]) = *(_QWORD *)(v71 + v8[13]);
  *(_BYTE *)(v70 + v8[14]) = *(_BYTE *)(v71 + v8[14]);
  *(_QWORD *)(v70 + v8[15]) = *(_QWORD *)(v71 + v8[15]);
  v72 = v8[16];
  v73 = v70 + v72;
  v74 = v71 + v72;
  *(_QWORD *)v73 = *(_QWORD *)v74;
  *(_BYTE *)(v73 + 8) = *(_BYTE *)(v74 + 8);
  *(_BYTE *)(v70 + v8[17]) = *(_BYTE *)(v71 + v8[17]);
  v75 = v8[18];
  v76 = v70 + v75;
  v77 = v71 + v75;
  *(_QWORD *)v76 = *(_QWORD *)v77;
  *(_BYTE *)(v76 + 8) = *(_BYTE *)(v77 + 8);
  *(_QWORD *)(v70 + v8[19]) = *(_QWORD *)(v71 + v8[19]);
  v78 = v8[20];
  v79 = v70 + v78;
  v80 = v71 + v78;
  *(_QWORD *)v79 = *(_QWORD *)v80;
  *(_BYTE *)(v79 + 8) = *(_BYTE *)(v80 + 8);
  v81 = v8[21];
  v82 = v70 + v81;
  v83 = v71 + v81;
  *(_QWORD *)v82 = *(_QWORD *)v83;
  *(_BYTE *)(v82 + 8) = *(_BYTE *)(v83 + 8);
  *(_QWORD *)(v70 + v8[22]) = *(_QWORD *)(v71 + v8[22]);
  *(_QWORD *)(v70 + v8[23]) = *(_QWORD *)(v71 + v8[23]);
  v84 = v8[24];
  v85 = v70 + v84;
  v86 = v71 + v84;
  *(_BYTE *)(v85 + 8) = *(_BYTE *)(v86 + 8);
  *(_QWORD *)v85 = *(_QWORD *)v86;
  v87 = v8[25];
  v88 = v70 + v87;
  v89 = v71 + v87;
  *(_QWORD *)v88 = *(_QWORD *)v89;
  *(_BYTE *)(v88 + 8) = *(_BYTE *)(v89 + 8);
  *(_QWORD *)(v70 + v8[26]) = *(_QWORD *)(v71 + v8[26]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  sub_1A6334CDC();
  return a1;
}

uint64_t sub_1A625DFAC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;

  v6 = sub_1A6332C24();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for HourForecast();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  *(_BYTE *)(a1 + v8[9]) = *(_BYTE *)(a2 + v8[9]);
  *(_BYTE *)(a1 + v8[10]) = *(_BYTE *)(a2 + v8[10]);
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  *(_QWORD *)(a1 + v8[12]) = *(_QWORD *)(a2 + v8[12]);
  *(_QWORD *)(a1 + v8[13]) = *(_QWORD *)(a2 + v8[13]);
  *(_BYTE *)(a1 + v8[14]) = *(_BYTE *)(a2 + v8[14]);
  *(_QWORD *)(a1 + v8[15]) = *(_QWORD *)(a2 + v8[15]);
  v9 = v8[16];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = *(_BYTE *)(v11 + 8);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = v12;
  *(_BYTE *)(a1 + v8[17]) = *(_BYTE *)(a2 + v8[17]);
  v13 = v8[18];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_BYTE *)(v15 + 8);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = v16;
  *(_QWORD *)(a1 + v8[19]) = *(_QWORD *)(a2 + v8[19]);
  v17 = v8[20];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_BYTE *)(v19 + 8);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = v20;
  v21 = v8[21];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(_BYTE *)(v23 + 8);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_BYTE *)(v22 + 8) = v24;
  *(_QWORD *)(a1 + v8[22]) = *(_QWORD *)(a2 + v8[22]);
  *(_QWORD *)(a1 + v8[23]) = *(_QWORD *)(a2 + v8[23]);
  v25 = v8[24];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = *(_BYTE *)(v27 + 8);
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_BYTE *)(v26 + 8) = v28;
  v29 = v8[25];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = *(_BYTE *)(v31 + 8);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_BYTE *)(v30 + 8) = v32;
  *(_QWORD *)(a1 + v8[26]) = *(_QWORD *)(a2 + v8[26]);
  v33 = a3[5];
  v34 = a1 + v33;
  v35 = a2 + v33;
  v7(a1 + v33, a2 + v33, v6);
  *(_QWORD *)(v34 + v8[5]) = *(_QWORD *)(v35 + v8[5]);
  *(_QWORD *)(v34 + v8[6]) = *(_QWORD *)(v35 + v8[6]);
  *(_QWORD *)(v34 + v8[7]) = *(_QWORD *)(v35 + v8[7]);
  *(_QWORD *)(v34 + v8[8]) = *(_QWORD *)(v35 + v8[8]);
  *(_BYTE *)(v34 + v8[9]) = *(_BYTE *)(v35 + v8[9]);
  *(_BYTE *)(v34 + v8[10]) = *(_BYTE *)(v35 + v8[10]);
  *(_QWORD *)(v34 + v8[11]) = *(_QWORD *)(v35 + v8[11]);
  *(_QWORD *)(v34 + v8[12]) = *(_QWORD *)(v35 + v8[12]);
  *(_QWORD *)(v34 + v8[13]) = *(_QWORD *)(v35 + v8[13]);
  *(_BYTE *)(v34 + v8[14]) = *(_BYTE *)(v35 + v8[14]);
  *(_QWORD *)(v34 + v8[15]) = *(_QWORD *)(v35 + v8[15]);
  v36 = v8[16];
  v37 = v34 + v36;
  v38 = v35 + v36;
  v39 = *(_BYTE *)(v38 + 8);
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *(_BYTE *)(v37 + 8) = v39;
  *(_BYTE *)(v34 + v8[17]) = *(_BYTE *)(v35 + v8[17]);
  v40 = v8[18];
  v41 = v34 + v40;
  v42 = v35 + v40;
  v43 = *(_BYTE *)(v42 + 8);
  *(_QWORD *)v41 = *(_QWORD *)v42;
  *(_BYTE *)(v41 + 8) = v43;
  *(_QWORD *)(v34 + v8[19]) = *(_QWORD *)(v35 + v8[19]);
  v44 = v8[20];
  v45 = v34 + v44;
  v46 = v35 + v44;
  v47 = *(_BYTE *)(v46 + 8);
  *(_QWORD *)v45 = *(_QWORD *)v46;
  *(_BYTE *)(v45 + 8) = v47;
  v48 = v8[21];
  v49 = v34 + v48;
  v50 = v35 + v48;
  v51 = *(_BYTE *)(v50 + 8);
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *(_BYTE *)(v49 + 8) = v51;
  *(_QWORD *)(v34 + v8[22]) = *(_QWORD *)(v35 + v8[22]);
  *(_QWORD *)(v34 + v8[23]) = *(_QWORD *)(v35 + v8[23]);
  v52 = v8[24];
  v53 = v34 + v52;
  v54 = v35 + v52;
  v55 = *(_BYTE *)(v54 + 8);
  *(_QWORD *)v53 = *(_QWORD *)v54;
  *(_BYTE *)(v53 + 8) = v55;
  v56 = v8[25];
  v57 = v34 + v56;
  v58 = v35 + v56;
  v59 = *(_BYTE *)(v58 + 8);
  *(_QWORD *)v57 = *(_QWORD *)v58;
  *(_BYTE *)(v57 + 8) = v59;
  *(_QWORD *)(v34 + v8[26]) = *(_QWORD *)(v35 + v8[26]);
  v60 = a3[6];
  v61 = a1 + v60;
  v62 = a2 + v60;
  v7(a1 + v60, a2 + v60, v6);
  *(_QWORD *)(v61 + v8[5]) = *(_QWORD *)(v62 + v8[5]);
  *(_QWORD *)(v61 + v8[6]) = *(_QWORD *)(v62 + v8[6]);
  *(_QWORD *)(v61 + v8[7]) = *(_QWORD *)(v62 + v8[7]);
  *(_QWORD *)(v61 + v8[8]) = *(_QWORD *)(v62 + v8[8]);
  *(_BYTE *)(v61 + v8[9]) = *(_BYTE *)(v62 + v8[9]);
  *(_BYTE *)(v61 + v8[10]) = *(_BYTE *)(v62 + v8[10]);
  *(_QWORD *)(v61 + v8[11]) = *(_QWORD *)(v62 + v8[11]);
  *(_QWORD *)(v61 + v8[12]) = *(_QWORD *)(v62 + v8[12]);
  *(_QWORD *)(v61 + v8[13]) = *(_QWORD *)(v62 + v8[13]);
  *(_BYTE *)(v61 + v8[14]) = *(_BYTE *)(v62 + v8[14]);
  *(_QWORD *)(v61 + v8[15]) = *(_QWORD *)(v62 + v8[15]);
  v63 = v8[16];
  v64 = v61 + v63;
  v65 = v62 + v63;
  v66 = *(_BYTE *)(v65 + 8);
  *(_QWORD *)v64 = *(_QWORD *)v65;
  *(_BYTE *)(v64 + 8) = v66;
  *(_BYTE *)(v61 + v8[17]) = *(_BYTE *)(v62 + v8[17]);
  v67 = v8[18];
  v68 = v61 + v67;
  v69 = v62 + v67;
  v70 = *(_BYTE *)(v69 + 8);
  *(_QWORD *)v68 = *(_QWORD *)v69;
  *(_BYTE *)(v68 + 8) = v70;
  *(_QWORD *)(v61 + v8[19]) = *(_QWORD *)(v62 + v8[19]);
  v71 = v8[20];
  v72 = v61 + v71;
  v73 = v62 + v71;
  v74 = *(_BYTE *)(v73 + 8);
  *(_QWORD *)v72 = *(_QWORD *)v73;
  *(_BYTE *)(v72 + 8) = v74;
  v75 = v8[21];
  v76 = v61 + v75;
  v77 = v62 + v75;
  v78 = *(_BYTE *)(v77 + 8);
  *(_QWORD *)v76 = *(_QWORD *)v77;
  *(_BYTE *)(v76 + 8) = v78;
  *(_QWORD *)(v61 + v8[22]) = *(_QWORD *)(v62 + v8[22]);
  *(_QWORD *)(v61 + v8[23]) = *(_QWORD *)(v62 + v8[23]);
  v79 = v8[24];
  v80 = v61 + v79;
  v81 = v62 + v79;
  v82 = *(_BYTE *)(v81 + 8);
  *(_QWORD *)v80 = *(_QWORD *)v81;
  *(_BYTE *)(v80 + 8) = v82;
  v83 = v8[25];
  v84 = v61 + v83;
  v85 = v62 + v83;
  v86 = *(_BYTE *)(v85 + 8);
  *(_QWORD *)v84 = *(_QWORD *)v85;
  *(_BYTE *)(v84 + 8) = v86;
  *(_QWORD *)(v61 + v8[26]) = *(_QWORD *)(v62 + v8[26]);
  v87 = a3[7];
  v88 = a1 + v87;
  v89 = a2 + v87;
  v7(a1 + v87, a2 + v87, v6);
  *(_QWORD *)(v88 + v8[5]) = *(_QWORD *)(v89 + v8[5]);
  *(_QWORD *)(v88 + v8[6]) = *(_QWORD *)(v89 + v8[6]);
  *(_QWORD *)(v88 + v8[7]) = *(_QWORD *)(v89 + v8[7]);
  *(_QWORD *)(v88 + v8[8]) = *(_QWORD *)(v89 + v8[8]);
  *(_BYTE *)(v88 + v8[9]) = *(_BYTE *)(v89 + v8[9]);
  *(_BYTE *)(v88 + v8[10]) = *(_BYTE *)(v89 + v8[10]);
  *(_QWORD *)(v88 + v8[11]) = *(_QWORD *)(v89 + v8[11]);
  *(_QWORD *)(v88 + v8[12]) = *(_QWORD *)(v89 + v8[12]);
  *(_QWORD *)(v88 + v8[13]) = *(_QWORD *)(v89 + v8[13]);
  *(_BYTE *)(v88 + v8[14]) = *(_BYTE *)(v89 + v8[14]);
  *(_QWORD *)(v88 + v8[15]) = *(_QWORD *)(v89 + v8[15]);
  v90 = v8[16];
  v91 = v88 + v90;
  v92 = v89 + v90;
  v93 = *(_BYTE *)(v92 + 8);
  *(_QWORD *)v91 = *(_QWORD *)v92;
  *(_BYTE *)(v91 + 8) = v93;
  *(_BYTE *)(v88 + v8[17]) = *(_BYTE *)(v89 + v8[17]);
  v94 = v8[18];
  v95 = v88 + v94;
  v96 = v89 + v94;
  v97 = *(_BYTE *)(v96 + 8);
  *(_QWORD *)v95 = *(_QWORD *)v96;
  *(_BYTE *)(v95 + 8) = v97;
  *(_QWORD *)(v88 + v8[19]) = *(_QWORD *)(v89 + v8[19]);
  v98 = v8[20];
  v99 = v88 + v98;
  v100 = v89 + v98;
  v101 = *(_BYTE *)(v100 + 8);
  *(_QWORD *)v99 = *(_QWORD *)v100;
  *(_BYTE *)(v99 + 8) = v101;
  v102 = v8[21];
  v103 = v88 + v102;
  v104 = v89 + v102;
  v105 = *(_BYTE *)(v104 + 8);
  *(_QWORD *)v103 = *(_QWORD *)v104;
  *(_BYTE *)(v103 + 8) = v105;
  *(_QWORD *)(v88 + v8[22]) = *(_QWORD *)(v89 + v8[22]);
  *(_QWORD *)(v88 + v8[23]) = *(_QWORD *)(v89 + v8[23]);
  v106 = v8[24];
  v107 = v88 + v106;
  v108 = v89 + v106;
  v109 = *(_BYTE *)(v108 + 8);
  *(_QWORD *)v107 = *(_QWORD *)v108;
  *(_BYTE *)(v107 + 8) = v109;
  v110 = v8[25];
  v111 = v88 + v110;
  v112 = v89 + v110;
  v113 = *(_BYTE *)(v112 + 8);
  *(_QWORD *)v111 = *(_QWORD *)v112;
  *(_BYTE *)(v111 + 8) = v113;
  *(_QWORD *)(v88 + v8[26]) = *(_QWORD *)(v89 + v8[26]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A625E62C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v6 = sub_1A6332C24();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for HourForecast();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  *(_BYTE *)(a1 + v8[9]) = *(_BYTE *)(a2 + v8[9]);
  *(_BYTE *)(a1 + v8[10]) = *(_BYTE *)(a2 + v8[10]);
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  *(_QWORD *)(a1 + v8[12]) = *(_QWORD *)(a2 + v8[12]);
  *(_QWORD *)(a1 + v8[13]) = *(_QWORD *)(a2 + v8[13]);
  *(_BYTE *)(a1 + v8[14]) = *(_BYTE *)(a2 + v8[14]);
  *(_QWORD *)(a1 + v8[15]) = *(_QWORD *)(a2 + v8[15]);
  v9 = v8[16];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  *(_BYTE *)(a1 + v8[17]) = *(_BYTE *)(a2 + v8[17]);
  v12 = v8[18];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)(a1 + v8[19]) = *(_QWORD *)(a2 + v8[19]);
  v15 = v8[20];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
  v18 = v8[21];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  *(_QWORD *)(a1 + v8[22]) = *(_QWORD *)(a2 + v8[22]);
  *(_QWORD *)(a1 + v8[23]) = *(_QWORD *)(a2 + v8[23]);
  v21 = v8[24];
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_BYTE *)(v22 + 8) = *(_BYTE *)(v23 + 8);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  v24 = v8[25];
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  *(_QWORD *)(a1 + v8[26]) = *(_QWORD *)(a2 + v8[26]);
  v27 = a3[5];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v7(a1 + v27, a2 + v27, v6);
  *(_QWORD *)(v28 + v8[5]) = *(_QWORD *)(v29 + v8[5]);
  *(_QWORD *)(v28 + v8[6]) = *(_QWORD *)(v29 + v8[6]);
  *(_QWORD *)(v28 + v8[7]) = *(_QWORD *)(v29 + v8[7]);
  *(_QWORD *)(v28 + v8[8]) = *(_QWORD *)(v29 + v8[8]);
  *(_BYTE *)(v28 + v8[9]) = *(_BYTE *)(v29 + v8[9]);
  *(_BYTE *)(v28 + v8[10]) = *(_BYTE *)(v29 + v8[10]);
  *(_QWORD *)(v28 + v8[11]) = *(_QWORD *)(v29 + v8[11]);
  *(_QWORD *)(v28 + v8[12]) = *(_QWORD *)(v29 + v8[12]);
  *(_QWORD *)(v28 + v8[13]) = *(_QWORD *)(v29 + v8[13]);
  *(_BYTE *)(v28 + v8[14]) = *(_BYTE *)(v29 + v8[14]);
  *(_QWORD *)(v28 + v8[15]) = *(_QWORD *)(v29 + v8[15]);
  v30 = v8[16];
  v31 = v28 + v30;
  v32 = v29 + v30;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *(_BYTE *)(v31 + 8) = *(_BYTE *)(v32 + 8);
  *(_BYTE *)(v28 + v8[17]) = *(_BYTE *)(v29 + v8[17]);
  v33 = v8[18];
  v34 = v28 + v33;
  v35 = v29 + v33;
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *(_BYTE *)(v34 + 8) = *(_BYTE *)(v35 + 8);
  *(_QWORD *)(v28 + v8[19]) = *(_QWORD *)(v29 + v8[19]);
  v36 = v8[20];
  v37 = v28 + v36;
  v38 = v29 + v36;
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *(_BYTE *)(v37 + 8) = *(_BYTE *)(v38 + 8);
  v39 = v8[21];
  v40 = v28 + v39;
  v41 = v29 + v39;
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *(_BYTE *)(v40 + 8) = *(_BYTE *)(v41 + 8);
  *(_QWORD *)(v28 + v8[22]) = *(_QWORD *)(v29 + v8[22]);
  *(_QWORD *)(v28 + v8[23]) = *(_QWORD *)(v29 + v8[23]);
  v42 = v8[24];
  v43 = v28 + v42;
  v44 = v29 + v42;
  *(_BYTE *)(v43 + 8) = *(_BYTE *)(v44 + 8);
  *(_QWORD *)v43 = *(_QWORD *)v44;
  v45 = v8[25];
  v46 = v28 + v45;
  v47 = v29 + v45;
  *(_QWORD *)v46 = *(_QWORD *)v47;
  *(_BYTE *)(v46 + 8) = *(_BYTE *)(v47 + 8);
  *(_QWORD *)(v28 + v8[26]) = *(_QWORD *)(v29 + v8[26]);
  v48 = a3[6];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v7(a1 + v48, a2 + v48, v6);
  *(_QWORD *)(v49 + v8[5]) = *(_QWORD *)(v50 + v8[5]);
  *(_QWORD *)(v49 + v8[6]) = *(_QWORD *)(v50 + v8[6]);
  *(_QWORD *)(v49 + v8[7]) = *(_QWORD *)(v50 + v8[7]);
  *(_QWORD *)(v49 + v8[8]) = *(_QWORD *)(v50 + v8[8]);
  *(_BYTE *)(v49 + v8[9]) = *(_BYTE *)(v50 + v8[9]);
  *(_BYTE *)(v49 + v8[10]) = *(_BYTE *)(v50 + v8[10]);
  *(_QWORD *)(v49 + v8[11]) = *(_QWORD *)(v50 + v8[11]);
  *(_QWORD *)(v49 + v8[12]) = *(_QWORD *)(v50 + v8[12]);
  *(_QWORD *)(v49 + v8[13]) = *(_QWORD *)(v50 + v8[13]);
  *(_BYTE *)(v49 + v8[14]) = *(_BYTE *)(v50 + v8[14]);
  *(_QWORD *)(v49 + v8[15]) = *(_QWORD *)(v50 + v8[15]);
  v51 = v8[16];
  v52 = v49 + v51;
  v53 = v50 + v51;
  *(_QWORD *)v52 = *(_QWORD *)v53;
  *(_BYTE *)(v52 + 8) = *(_BYTE *)(v53 + 8);
  *(_BYTE *)(v49 + v8[17]) = *(_BYTE *)(v50 + v8[17]);
  v54 = v8[18];
  v55 = v49 + v54;
  v56 = v50 + v54;
  *(_QWORD *)v55 = *(_QWORD *)v56;
  *(_BYTE *)(v55 + 8) = *(_BYTE *)(v56 + 8);
  *(_QWORD *)(v49 + v8[19]) = *(_QWORD *)(v50 + v8[19]);
  v57 = v8[20];
  v58 = v49 + v57;
  v59 = v50 + v57;
  *(_QWORD *)v58 = *(_QWORD *)v59;
  *(_BYTE *)(v58 + 8) = *(_BYTE *)(v59 + 8);
  v60 = v8[21];
  v61 = v49 + v60;
  v62 = v50 + v60;
  *(_QWORD *)v61 = *(_QWORD *)v62;
  *(_BYTE *)(v61 + 8) = *(_BYTE *)(v62 + 8);
  *(_QWORD *)(v49 + v8[22]) = *(_QWORD *)(v50 + v8[22]);
  *(_QWORD *)(v49 + v8[23]) = *(_QWORD *)(v50 + v8[23]);
  v63 = v8[24];
  v64 = v49 + v63;
  v65 = v50 + v63;
  *(_BYTE *)(v64 + 8) = *(_BYTE *)(v65 + 8);
  *(_QWORD *)v64 = *(_QWORD *)v65;
  v66 = v8[25];
  v67 = v49 + v66;
  v68 = v50 + v66;
  *(_QWORD *)v67 = *(_QWORD *)v68;
  *(_BYTE *)(v67 + 8) = *(_BYTE *)(v68 + 8);
  *(_QWORD *)(v49 + v8[26]) = *(_QWORD *)(v50 + v8[26]);
  v69 = a3[7];
  v70 = a1 + v69;
  v71 = a2 + v69;
  v7(a1 + v69, a2 + v69, v6);
  *(_QWORD *)(v70 + v8[5]) = *(_QWORD *)(v71 + v8[5]);
  *(_QWORD *)(v70 + v8[6]) = *(_QWORD *)(v71 + v8[6]);
  *(_QWORD *)(v70 + v8[7]) = *(_QWORD *)(v71 + v8[7]);
  *(_QWORD *)(v70 + v8[8]) = *(_QWORD *)(v71 + v8[8]);
  *(_BYTE *)(v70 + v8[9]) = *(_BYTE *)(v71 + v8[9]);
  *(_BYTE *)(v70 + v8[10]) = *(_BYTE *)(v71 + v8[10]);
  *(_QWORD *)(v70 + v8[11]) = *(_QWORD *)(v71 + v8[11]);
  *(_QWORD *)(v70 + v8[12]) = *(_QWORD *)(v71 + v8[12]);
  *(_QWORD *)(v70 + v8[13]) = *(_QWORD *)(v71 + v8[13]);
  *(_BYTE *)(v70 + v8[14]) = *(_BYTE *)(v71 + v8[14]);
  *(_QWORD *)(v70 + v8[15]) = *(_QWORD *)(v71 + v8[15]);
  v72 = v8[16];
  v73 = v70 + v72;
  v74 = v71 + v72;
  *(_QWORD *)v73 = *(_QWORD *)v74;
  *(_BYTE *)(v73 + 8) = *(_BYTE *)(v74 + 8);
  *(_BYTE *)(v70 + v8[17]) = *(_BYTE *)(v71 + v8[17]);
  v75 = v8[18];
  v76 = v70 + v75;
  v77 = v71 + v75;
  *(_QWORD *)v76 = *(_QWORD *)v77;
  *(_BYTE *)(v76 + 8) = *(_BYTE *)(v77 + 8);
  *(_QWORD *)(v70 + v8[19]) = *(_QWORD *)(v71 + v8[19]);
  v78 = v8[20];
  v79 = v70 + v78;
  v80 = v71 + v78;
  *(_QWORD *)v79 = *(_QWORD *)v80;
  *(_BYTE *)(v79 + 8) = *(_BYTE *)(v80 + 8);
  v81 = v8[21];
  v82 = v70 + v81;
  v83 = v71 + v81;
  *(_QWORD *)v82 = *(_QWORD *)v83;
  *(_BYTE *)(v82 + 8) = *(_BYTE *)(v83 + 8);
  *(_QWORD *)(v70 + v8[22]) = *(_QWORD *)(v71 + v8[22]);
  *(_QWORD *)(v70 + v8[23]) = *(_QWORD *)(v71 + v8[23]);
  v84 = v8[24];
  v85 = v70 + v84;
  v86 = v71 + v84;
  *(_BYTE *)(v85 + 8) = *(_BYTE *)(v86 + 8);
  *(_QWORD *)v85 = *(_QWORD *)v86;
  v87 = v8[25];
  v88 = v70 + v87;
  v89 = v71 + v87;
  *(_QWORD *)v88 = *(_QWORD *)v89;
  *(_BYTE *)(v88 + 8) = *(_BYTE *)(v89 + 8);
  *(_QWORD *)(v70 + v8[26]) = *(_QWORD *)(v71 + v8[26]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1A625EC9C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v6 = sub_1A6332C24();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for HourForecast();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  *(_BYTE *)(a1 + v8[9]) = *(_BYTE *)(a2 + v8[9]);
  *(_BYTE *)(a1 + v8[10]) = *(_BYTE *)(a2 + v8[10]);
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  *(_QWORD *)(a1 + v8[12]) = *(_QWORD *)(a2 + v8[12]);
  *(_QWORD *)(a1 + v8[13]) = *(_QWORD *)(a2 + v8[13]);
  *(_BYTE *)(a1 + v8[14]) = *(_BYTE *)(a2 + v8[14]);
  *(_QWORD *)(a1 + v8[15]) = *(_QWORD *)(a2 + v8[15]);
  v9 = v8[16];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  *(_BYTE *)(a1 + v8[17]) = *(_BYTE *)(a2 + v8[17]);
  v12 = v8[18];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)(a1 + v8[19]) = *(_QWORD *)(a2 + v8[19]);
  v15 = v8[20];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
  v18 = v8[21];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  *(_QWORD *)(a1 + v8[22]) = *(_QWORD *)(a2 + v8[22]);
  *(_QWORD *)(a1 + v8[23]) = *(_QWORD *)(a2 + v8[23]);
  v21 = v8[24];
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_BYTE *)(v22 + 8) = *(_BYTE *)(v23 + 8);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  v24 = v8[25];
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  *(_QWORD *)(a1 + v8[26]) = *(_QWORD *)(a2 + v8[26]);
  v27 = a3[5];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v7(a1 + v27, a2 + v27, v6);
  *(_QWORD *)(v28 + v8[5]) = *(_QWORD *)(v29 + v8[5]);
  *(_QWORD *)(v28 + v8[6]) = *(_QWORD *)(v29 + v8[6]);
  *(_QWORD *)(v28 + v8[7]) = *(_QWORD *)(v29 + v8[7]);
  *(_QWORD *)(v28 + v8[8]) = *(_QWORD *)(v29 + v8[8]);
  *(_BYTE *)(v28 + v8[9]) = *(_BYTE *)(v29 + v8[9]);
  *(_BYTE *)(v28 + v8[10]) = *(_BYTE *)(v29 + v8[10]);
  *(_QWORD *)(v28 + v8[11]) = *(_QWORD *)(v29 + v8[11]);
  *(_QWORD *)(v28 + v8[12]) = *(_QWORD *)(v29 + v8[12]);
  *(_QWORD *)(v28 + v8[13]) = *(_QWORD *)(v29 + v8[13]);
  *(_BYTE *)(v28 + v8[14]) = *(_BYTE *)(v29 + v8[14]);
  *(_QWORD *)(v28 + v8[15]) = *(_QWORD *)(v29 + v8[15]);
  v30 = v8[16];
  v31 = v28 + v30;
  v32 = v29 + v30;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *(_BYTE *)(v31 + 8) = *(_BYTE *)(v32 + 8);
  *(_BYTE *)(v28 + v8[17]) = *(_BYTE *)(v29 + v8[17]);
  v33 = v8[18];
  v34 = v28 + v33;
  v35 = v29 + v33;
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *(_BYTE *)(v34 + 8) = *(_BYTE *)(v35 + 8);
  *(_QWORD *)(v28 + v8[19]) = *(_QWORD *)(v29 + v8[19]);
  v36 = v8[20];
  v37 = v28 + v36;
  v38 = v29 + v36;
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *(_BYTE *)(v37 + 8) = *(_BYTE *)(v38 + 8);
  v39 = v8[21];
  v40 = v28 + v39;
  v41 = v29 + v39;
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *(_BYTE *)(v40 + 8) = *(_BYTE *)(v41 + 8);
  *(_QWORD *)(v28 + v8[22]) = *(_QWORD *)(v29 + v8[22]);
  *(_QWORD *)(v28 + v8[23]) = *(_QWORD *)(v29 + v8[23]);
  v42 = v8[24];
  v43 = v28 + v42;
  v44 = v29 + v42;
  *(_BYTE *)(v43 + 8) = *(_BYTE *)(v44 + 8);
  *(_QWORD *)v43 = *(_QWORD *)v44;
  v45 = v8[25];
  v46 = v28 + v45;
  v47 = v29 + v45;
  *(_QWORD *)v46 = *(_QWORD *)v47;
  *(_BYTE *)(v46 + 8) = *(_BYTE *)(v47 + 8);
  *(_QWORD *)(v28 + v8[26]) = *(_QWORD *)(v29 + v8[26]);
  v48 = a3[6];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v7(a1 + v48, a2 + v48, v6);
  *(_QWORD *)(v49 + v8[5]) = *(_QWORD *)(v50 + v8[5]);
  *(_QWORD *)(v49 + v8[6]) = *(_QWORD *)(v50 + v8[6]);
  *(_QWORD *)(v49 + v8[7]) = *(_QWORD *)(v50 + v8[7]);
  *(_QWORD *)(v49 + v8[8]) = *(_QWORD *)(v50 + v8[8]);
  *(_BYTE *)(v49 + v8[9]) = *(_BYTE *)(v50 + v8[9]);
  *(_BYTE *)(v49 + v8[10]) = *(_BYTE *)(v50 + v8[10]);
  *(_QWORD *)(v49 + v8[11]) = *(_QWORD *)(v50 + v8[11]);
  *(_QWORD *)(v49 + v8[12]) = *(_QWORD *)(v50 + v8[12]);
  *(_QWORD *)(v49 + v8[13]) = *(_QWORD *)(v50 + v8[13]);
  *(_BYTE *)(v49 + v8[14]) = *(_BYTE *)(v50 + v8[14]);
  *(_QWORD *)(v49 + v8[15]) = *(_QWORD *)(v50 + v8[15]);
  v51 = v8[16];
  v52 = v49 + v51;
  v53 = v50 + v51;
  *(_QWORD *)v52 = *(_QWORD *)v53;
  *(_BYTE *)(v52 + 8) = *(_BYTE *)(v53 + 8);
  *(_BYTE *)(v49 + v8[17]) = *(_BYTE *)(v50 + v8[17]);
  v54 = v8[18];
  v55 = v49 + v54;
  v56 = v50 + v54;
  *(_QWORD *)v55 = *(_QWORD *)v56;
  *(_BYTE *)(v55 + 8) = *(_BYTE *)(v56 + 8);
  *(_QWORD *)(v49 + v8[19]) = *(_QWORD *)(v50 + v8[19]);
  v57 = v8[20];
  v58 = v49 + v57;
  v59 = v50 + v57;
  *(_QWORD *)v58 = *(_QWORD *)v59;
  *(_BYTE *)(v58 + 8) = *(_BYTE *)(v59 + 8);
  v60 = v8[21];
  v61 = v49 + v60;
  v62 = v50 + v60;
  *(_QWORD *)v61 = *(_QWORD *)v62;
  *(_BYTE *)(v61 + 8) = *(_BYTE *)(v62 + 8);
  *(_QWORD *)(v49 + v8[22]) = *(_QWORD *)(v50 + v8[22]);
  *(_QWORD *)(v49 + v8[23]) = *(_QWORD *)(v50 + v8[23]);
  v63 = v8[24];
  v64 = v49 + v63;
  v65 = v50 + v63;
  *(_BYTE *)(v64 + 8) = *(_BYTE *)(v65 + 8);
  *(_QWORD *)v64 = *(_QWORD *)v65;
  v66 = v8[25];
  v67 = v49 + v66;
  v68 = v50 + v66;
  *(_QWORD *)v67 = *(_QWORD *)v68;
  *(_BYTE *)(v67 + 8) = *(_BYTE *)(v68 + 8);
  *(_QWORD *)(v49 + v8[26]) = *(_QWORD *)(v50 + v8[26]);
  v69 = a3[7];
  v70 = a1 + v69;
  v71 = a2 + v69;
  v7(a1 + v69, a2 + v69, v6);
  *(_QWORD *)(v70 + v8[5]) = *(_QWORD *)(v71 + v8[5]);
  *(_QWORD *)(v70 + v8[6]) = *(_QWORD *)(v71 + v8[6]);
  *(_QWORD *)(v70 + v8[7]) = *(_QWORD *)(v71 + v8[7]);
  *(_QWORD *)(v70 + v8[8]) = *(_QWORD *)(v71 + v8[8]);
  *(_BYTE *)(v70 + v8[9]) = *(_BYTE *)(v71 + v8[9]);
  *(_BYTE *)(v70 + v8[10]) = *(_BYTE *)(v71 + v8[10]);
  *(_QWORD *)(v70 + v8[11]) = *(_QWORD *)(v71 + v8[11]);
  *(_QWORD *)(v70 + v8[12]) = *(_QWORD *)(v71 + v8[12]);
  *(_QWORD *)(v70 + v8[13]) = *(_QWORD *)(v71 + v8[13]);
  *(_BYTE *)(v70 + v8[14]) = *(_BYTE *)(v71 + v8[14]);
  *(_QWORD *)(v70 + v8[15]) = *(_QWORD *)(v71 + v8[15]);
  v72 = v8[16];
  v73 = v70 + v72;
  v74 = v71 + v72;
  *(_QWORD *)v73 = *(_QWORD *)v74;
  *(_BYTE *)(v73 + 8) = *(_BYTE *)(v74 + 8);
  *(_BYTE *)(v70 + v8[17]) = *(_BYTE *)(v71 + v8[17]);
  v75 = v8[18];
  v76 = v70 + v75;
  v77 = v71 + v75;
  *(_QWORD *)v76 = *(_QWORD *)v77;
  *(_BYTE *)(v76 + 8) = *(_BYTE *)(v77 + 8);
  *(_QWORD *)(v70 + v8[19]) = *(_QWORD *)(v71 + v8[19]);
  v78 = v8[20];
  v79 = v70 + v78;
  v80 = v71 + v78;
  *(_QWORD *)v79 = *(_QWORD *)v80;
  *(_BYTE *)(v79 + 8) = *(_BYTE *)(v80 + 8);
  v81 = v8[21];
  v82 = v70 + v81;
  v83 = v71 + v81;
  *(_QWORD *)v82 = *(_QWORD *)v83;
  *(_BYTE *)(v82 + 8) = *(_BYTE *)(v83 + 8);
  *(_QWORD *)(v70 + v8[22]) = *(_QWORD *)(v71 + v8[22]);
  *(_QWORD *)(v70 + v8[23]) = *(_QWORD *)(v71 + v8[23]);
  v84 = v8[24];
  v85 = v70 + v84;
  v86 = v71 + v84;
  *(_BYTE *)(v85 + 8) = *(_BYTE *)(v86 + 8);
  *(_QWORD *)v85 = *(_QWORD *)v86;
  v87 = v8[25];
  v88 = v70 + v87;
  v89 = v71 + v87;
  *(_QWORD *)v88 = *(_QWORD *)v89;
  *(_BYTE *)(v88 + 8) = *(_BYTE *)(v89 + 8);
  *(_QWORD *)(v70 + v8[26]) = *(_QWORD *)(v71 + v8[26]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A625F314()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A625F320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = OUTLINED_FUNCTION_29();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_1A625F394()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A625F3A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_29();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  return result;
}

uint64_t sub_1A625F410()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for HourForecast();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A625F48C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED219B10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A625F4D4()
{
  unint64_t result;

  result = qword_1ED2196C0;
  if (!qword_1ED2196C0)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633C5B8, &type metadata for WeatherDataInterpolator.Errors);
    atomic_store(result, (unint64_t *)&qword_1ED2196C0);
  }
  return result;
}

uint64_t sub_1A625F510()
{
  return sub_1A6332B94() & 1;
}

uint64_t sub_1A625F53C()
{
  return sub_1A6332B88() & 1;
}

void sub_1A625F568(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  BOOL v91;
  uint64_t v92;
  char v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char *v110;
  int64_t *v111;
  char *v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  unint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;

  v2 = v1;
  v132 = type metadata accessor for HourForecast();
  v4 = *(_QWORD *)(v132 - 8);
  MEMORY[0x1E0C80A78](v132);
  v128 = (uint64_t)&v121 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v138 = (uint64_t)&v121 - v7;
  MEMORY[0x1E0C80A78](v8);
  v135 = (uint64_t)&v121 - v9;
  MEMORY[0x1E0C80A78](v10);
  v134 = (uint64_t)&v121 - v11;
  v12 = (int64_t)a1;
  v13 = a1[1];
  v14 = sub_1A6335A98();
  if (v14 >= v13)
  {
    if ((v13 & 0x8000000000000000) == 0)
    {
      if (v13)
        sub_1A625FED8(0, v13, 1, (_QWORD *)v12);
      return;
    }
    goto LABEL_141;
  }
  v15 = v14;
  v124 = sub_1A61D3AD4(v13 / 2);
  v125 = v13;
  v130 = v16;
  v131 = v4;
  if (v13 <= 0)
  {
LABEL_105:
    v18 = (char *)MEMORY[0x1E0DEE9D8];
    v65 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    v20 = (uint64_t *)v12;
LABEL_106:
    if (v65 < 2)
    {
LABEL_117:
      swift_bridgeObjectRelease();
      if (v125 >= -1)
        goto LABEL_118;
      goto LABEL_145;
    }
    v115 = *v20;
    while (1)
    {
      v12 = v65 - 2;
      if (v65 < 2)
        break;
      if (!v115)
        goto LABEL_149;
      v116 = v18;
      v117 = *(_QWORD *)&v18[16 * v12 + 32];
      v118 = *(_QWORD *)&v18[16 * v65 + 24];
      sub_1A62600FC(v115 + *(_QWORD *)(v131 + 72) * v117, v115 + *(_QWORD *)(v131 + 72) * *(_QWORD *)&v18[16 * v65 + 16], v115 + *(_QWORD *)(v131 + 72) * v118, v130);
      if (v2)
        goto LABEL_103;
      if (v118 < v117)
        goto LABEL_136;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v116 = sub_1A62605B4((uint64_t)v18);
      if ((unint64_t)v12 >= *((_QWORD *)v116 + 2))
        goto LABEL_137;
      v119 = &v116[16 * v12 + 32];
      *(_QWORD *)v119 = v117;
      *((_QWORD *)v119 + 1) = v118;
      v120 = *((_QWORD *)v116 + 2);
      if (v65 > v120)
        goto LABEL_138;
      memmove(&v116[16 * v65 + 16], &v116[16 * v65 + 32], 16 * (v120 - v65));
      *((_QWORD *)v116 + 2) = v120 - 1;
      v65 = v120 - 1;
      v18 = v116;
      if (v120 <= 2)
        goto LABEL_117;
    }
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
    return;
  }
  v123 = v15;
  v17 = 0;
  v18 = (char *)MEMORY[0x1E0DEE9D8];
  v19 = v13;
  v20 = (uint64_t *)v12;
  v137 = (uint64_t *)v12;
  while (1)
  {
    v21 = v17;
    v22 = v17 + 1;
    v129 = v17;
    if (v17 + 1 >= v19)
    {
      v39 = v17 + 1;
    }
    else
    {
      v23 = *v20;
      v24 = *(_QWORD *)(v4 + 72);
      v25 = *v20 + v24 * v22;
      v133 = v19;
      v26 = v134;
      sub_1A618D9C4(v25, v134, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
      v27 = v23 + v24 * v21;
      v28 = v135;
      sub_1A618D9C4(v27, v135, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
      LODWORD(v136) = sub_1A6332B94();
      v29 = v28;
      v21 = v129;
      sub_1A61AED2C(v29, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
      v30 = v26;
      v19 = v133;
      sub_1A61AED2C(v30, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
      v31 = v21 + 2;
      v127 = v23;
      v139 = v24;
      if (v21 + 2 >= v19)
      {
        v34 = v21 + 2;
        v20 = v137;
      }
      else
      {
        v126 = v2;
        v32 = v24 * v22;
        v33 = v23;
        v34 = v31;
        v35 = v24 * v31;
        while (1)
        {
          v36 = v134;
          sub_1A618D9C4(v33 + v35, v134, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
          v37 = v135;
          sub_1A618D9C4(v33 + v32, v135, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
          v38 = sub_1A6332B94();
          sub_1A61AED2C(v37, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
          sub_1A61AED2C(v36, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
          if (((v136 ^ v38) & 1) != 0)
            break;
          v33 += v139;
          if (++v34 >= v133)
          {
            v19 = v133;
            v34 = v133;
            v20 = v137;
            v4 = v131;
            v2 = v126;
            v21 = v129;
            goto LABEL_13;
          }
        }
        v20 = v137;
        v4 = v131;
        v2 = v126;
        v21 = v129;
        v19 = v133;
      }
LABEL_13:
      if ((v136 & 1) != 0)
      {
        if (v34 < v21)
          goto LABEL_142;
        v39 = v34;
        if (v21 < v34)
        {
          v126 = v2;
          v40 = 0;
          v41 = v139;
          v42 = v139 * (v34 - 1);
          v43 = v34 * v139;
          v44 = v21 * v139;
          do
          {
            if (v21 != v39 + v40 - 1)
            {
              v45 = v127;
              if (!v127)
                goto LABEL_148;
              v46 = v127 + v44;
              v136 = v127 + v42;
              sub_1A618B330(v127 + v44, v128, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
              if (v44 < v42 || v46 >= v45 + v43)
              {
                swift_arrayInitWithTakeFrontToBack();
                v41 = v139;
              }
              else
              {
                v41 = v139;
                if (v44 != v42)
                  swift_arrayInitWithTakeBackToFront();
              }
              sub_1A618B330(v128, v136, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
              v20 = v137;
              v39 = v34;
            }
            ++v21;
            --v40;
            v42 -= v41;
            v43 -= v41;
            v44 += v41;
          }
          while (v21 < v39 + v40);
          v4 = v131;
          v2 = v126;
          v21 = v129;
          v19 = v133;
        }
      }
      else
      {
        v39 = v34;
      }
    }
    if (v39 < v19)
    {
      if (__OFSUB__(v39, v21))
        goto LABEL_140;
      if (v39 - v21 < v123)
      {
        if (__OFADD__(v21, v123))
          goto LABEL_143;
        if (v21 + v123 >= v19)
          v48 = v19;
        else
          v48 = v21 + v123;
        if (v48 < v21)
          goto LABEL_144;
        if (v39 != v48)
        {
          v122 = v18;
          v126 = v2;
          v49 = *(_QWORD *)(v4 + 72);
          v139 = v49 * (v39 - 1);
          v133 = v49;
          v50 = v39 * v49;
          v127 = v48;
          do
          {
            v51 = 0;
            v136 = v39;
            while (1)
            {
              v52 = *v20;
              v53 = v50;
              v54 = v50 + v51;
              v55 = v20;
              v56 = v134;
              sub_1A618D9C4(v54 + *v20, v134, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
              v57 = v135;
              sub_1A618D9C4(v139 + v51 + v52, v135, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
              LOBYTE(v52) = sub_1A6332B94();
              sub_1A61AED2C(v57, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
              sub_1A61AED2C(v56, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
              if ((v52 & 1) == 0)
                break;
              v58 = *v55;
              if (!*v55)
                goto LABEL_146;
              v50 = v53;
              v59 = v58 + v139 + v51;
              sub_1A618B330(v58 + v53 + v51, v138, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
              swift_arrayInitWithTakeFrontToBack();
              sub_1A618B330(v138, v59, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
              v51 -= v133;
              ++v21;
              v60 = v136;
              v20 = v137;
              if (v136 == v21)
                goto LABEL_47;
            }
            v60 = v136;
            v20 = v55;
            v50 = v53;
LABEL_47:
            v39 = v60 + 1;
            v139 += v133;
            v50 += v133;
            v21 = v129;
          }
          while (v39 != v127);
          v39 = v127;
          v2 = v126;
          v18 = v122;
        }
      }
    }
    if (v39 < v21)
      goto LABEL_139;
    v61 = v20;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v136 = v39;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v18 = sub_1A62604C0(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
    v64 = *((_QWORD *)v18 + 2);
    v63 = *((_QWORD *)v18 + 3);
    v65 = v64 + 1;
    if (v64 >= v63 >> 1)
      v18 = sub_1A62604C0((char *)(v63 > 1), v64 + 1, 1, v18);
    v20 = v61;
    v66 = v2;
    *((_QWORD *)v18 + 2) = v65;
    v67 = v18 + 32;
    v68 = &v18[16 * v64 + 32];
    v69 = v136;
    *(_QWORD *)v68 = v129;
    *((_QWORD *)v68 + 1) = v69;
    if (v64)
      break;
    v65 = 1;
LABEL_97:
    v19 = v20[1];
    v17 = v136;
    v2 = v66;
    v4 = v131;
    if (v136 >= v19)
      goto LABEL_106;
  }
  while (1)
  {
    v70 = v65 - 1;
    if (v65 >= 4)
    {
      v75 = &v67[16 * v65];
      v76 = *((_QWORD *)v75 - 8);
      v77 = *((_QWORD *)v75 - 7);
      v81 = __OFSUB__(v77, v76);
      v78 = v77 - v76;
      if (v81)
        goto LABEL_124;
      v80 = *((_QWORD *)v75 - 6);
      v79 = *((_QWORD *)v75 - 5);
      v81 = __OFSUB__(v79, v80);
      v73 = v79 - v80;
      v74 = v81;
      if (v81)
        goto LABEL_125;
      v82 = v65 - 2;
      v83 = &v67[16 * v65 - 32];
      v85 = *(_QWORD *)v83;
      v84 = *((_QWORD *)v83 + 1);
      v81 = __OFSUB__(v84, v85);
      v86 = v84 - v85;
      if (v81)
        goto LABEL_126;
      v81 = __OFADD__(v73, v86);
      v87 = v73 + v86;
      if (v81)
        goto LABEL_128;
      if (v87 >= v78)
      {
        v105 = &v67[16 * v70];
        v107 = *(_QWORD *)v105;
        v106 = *((_QWORD *)v105 + 1);
        v81 = __OFSUB__(v106, v107);
        v108 = v106 - v107;
        if (v81)
          goto LABEL_134;
        v98 = v73 < v108;
        goto LABEL_86;
      }
    }
    else
    {
      if (v65 != 3)
      {
        v99 = *((_QWORD *)v18 + 4);
        v100 = *((_QWORD *)v18 + 5);
        v81 = __OFSUB__(v100, v99);
        v92 = v100 - v99;
        v93 = v81;
        goto LABEL_80;
      }
      v72 = *((_QWORD *)v18 + 4);
      v71 = *((_QWORD *)v18 + 5);
      v81 = __OFSUB__(v71, v72);
      v73 = v71 - v72;
      v74 = v81;
    }
    if ((v74 & 1) != 0)
      goto LABEL_127;
    v82 = v65 - 2;
    v88 = &v67[16 * v65 - 32];
    v90 = *(_QWORD *)v88;
    v89 = *((_QWORD *)v88 + 1);
    v91 = __OFSUB__(v89, v90);
    v92 = v89 - v90;
    v93 = v91;
    if (v91)
      goto LABEL_129;
    v94 = &v67[16 * v70];
    v96 = *(_QWORD *)v94;
    v95 = *((_QWORD *)v94 + 1);
    v81 = __OFSUB__(v95, v96);
    v97 = v95 - v96;
    if (v81)
      goto LABEL_131;
    if (__OFADD__(v92, v97))
      goto LABEL_133;
    if (v92 + v97 >= v73)
    {
      v98 = v73 < v97;
LABEL_86:
      if (v98)
        v70 = v82;
      goto LABEL_88;
    }
LABEL_80:
    if ((v93 & 1) != 0)
      goto LABEL_130;
    v101 = &v67[16 * v70];
    v103 = *(_QWORD *)v101;
    v102 = *((_QWORD *)v101 + 1);
    v81 = __OFSUB__(v102, v103);
    v104 = v102 - v103;
    if (v81)
      goto LABEL_132;
    if (v104 < v92)
      goto LABEL_97;
LABEL_88:
    v109 = v70 - 1;
    if (v70 - 1 >= v65)
    {
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
      goto LABEL_135;
    }
    if (!*v20)
      goto LABEL_147;
    v110 = v18;
    v111 = (int64_t *)&v67[16 * v109];
    v12 = *v111;
    v112 = &v67[16 * v70];
    v113 = *((_QWORD *)v112 + 1);
    sub_1A62600FC(*v20 + *(_QWORD *)(v131 + 72) * *v111, *v20 + *(_QWORD *)(v131 + 72) * *(_QWORD *)v112, *v20 + *(_QWORD *)(v131 + 72) * v113, v130);
    if (v66)
      break;
    if (v113 < v12)
      goto LABEL_121;
    if (v70 > *((_QWORD *)v110 + 2))
      goto LABEL_122;
    *v111 = v12;
    *(_QWORD *)&v67[16 * v109 + 8] = v113;
    v114 = *((_QWORD *)v110 + 2);
    if (v70 >= v114)
      goto LABEL_123;
    v18 = v110;
    v65 = v114 - 1;
    memmove(&v67[16 * v70], v112 + 16, 16 * (v114 - 1 - v70));
    *((_QWORD *)v110 + 2) = v114 - 1;
    v20 = v137;
    if (v114 <= 2)
      goto LABEL_97;
  }
  v2 = v66;
LABEL_103:
  swift_bridgeObjectRelease();
  if (v125 < -1)
  {
    __break(1u);
    goto LABEL_105;
  }
LABEL_118:
  *(_QWORD *)(v124 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_1A625FED8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v24 = a1;
  v25 = type metadata accessor for HourForecast();
  MEMORY[0x1E0C80A78](v25);
  v29 = (uint64_t)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v26 = (uint64_t)&v22 - v9;
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v22 - v12;
  v28 = a3;
  v23 = a2;
  if (a3 != a2)
  {
    v14 = *(_QWORD *)(v11 + 72);
    v31 = v14 * (v28 - 1);
    v27 = v14;
    v30 = v14 * v28;
    while (2)
    {
      v15 = 0;
      v16 = v24;
      do
      {
        v17 = *a4;
        sub_1A618D9C4(v30 + v15 + *a4, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
        v18 = v26;
        sub_1A618D9C4(v31 + v15 + v17, v26, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
        LOBYTE(v17) = sub_1A6332B94();
        sub_1A61AED2C(v18, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
        sub_1A61AED2C((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
        if ((v17 & 1) == 0)
          break;
        v19 = *a4;
        if (!*a4)
        {
          __break(1u);
          return;
        }
        v20 = a4;
        v21 = v19 + v31 + v15;
        sub_1A618B330(v19 + v30 + v15, v29, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
        swift_arrayInitWithTakeFrontToBack();
        sub_1A618B330(v29, v21, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
        v15 -= v27;
        ++v16;
        a4 = v20;
      }
      while (v28 != v16);
      v31 += v27;
      v30 += v27;
      if (++v28 != v23)
        continue;
      break;
    }
  }
}

void sub_1A62600FC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int64_t v14;
  int64_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  char v23;
  unint64_t v24;
  unint64_t v26;
  BOOL v28;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  unint64_t v41;
  int64_t v43;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v51 = type metadata accessor for HourForecast();
  MEMORY[0x1E0C80A78](v51);
  v52 = (uint64_t)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v45 - v11;
  v13 = *(_QWORD *)(v10 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  v14 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_75;
  v16 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_76;
  v18 = v14 / v13;
  v19 = v16 / v13;
  v46 = *(_QWORD *)(v10 + 72);
  if (v14 / v13 >= v16 / v13)
  {
    sub_1A61D4C30(a2, v16 / v13, a4);
    v20 = a4 + v19 * v13;
    if (v19 * v13 < 1 || a1 >= a2)
      goto LABEL_69;
    v48 = a1;
    v49 = -v13;
    v47 = a4;
    while (1)
    {
      v30 = a3;
      v31 = v49;
      a3 += v49;
      v50 = v20 + v49;
      v32 = v20;
      sub_1A618D9C4(v20 + v49, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
      v33 = a2 + v31;
      v34 = a2 + v31;
      v35 = (uint64_t)v12;
      v36 = v52;
      sub_1A618D9C4(v34, v52, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
      v37 = sub_1A6332B94();
      v38 = v36;
      v12 = (char *)v35;
      sub_1A61AED2C(v38, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
      sub_1A61AED2C(v35, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
      if ((v37 & 1) != 0)
      {
        v20 = v32;
        if (v30 >= a2 && a3 < a2)
        {
          v41 = v48;
          if (v30 != a2)
            swift_arrayInitWithTakeBackToFront();
          a2 = v33;
          a4 = v47;
          goto LABEL_64;
        }
        swift_arrayInitWithTakeFrontToBack();
        a2 = v33;
      }
      else if (v30 < v32 || a3 >= v32)
      {
        v20 = v50;
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        v20 = v50;
        if (v30 != v32)
          swift_arrayInitWithTakeBackToFront();
      }
      a4 = v47;
      v41 = v48;
LABEL_64:
      if (v20 <= a4 || a2 <= v41)
      {
        v13 = v46;
        goto LABEL_69;
      }
    }
  }
  sub_1A61D4C30(a1, v14 / v13, a4);
  v20 = a4 + v18 * v13;
  v50 = a3;
  if (v18 * v13 >= 1 && a2 < a3)
  {
    v22 = v52;
    do
    {
      sub_1A618D9C4(a2, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
      sub_1A618D9C4(a4, v22, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
      v23 = sub_1A6332B94();
      sub_1A61AED2C(v22, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
      sub_1A61AED2C((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for HourForecast);
      if ((v23 & 1) != 0)
      {
        v24 = a2 + v13;
        if (a1 < a2 || a1 >= v24)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      else
      {
        v26 = a4 + v13;
        if (a1 < a4 || a1 >= v26)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v24 = a2;
        a4 = v26;
        v13 = v46;
      }
      a1 += v13;
      v28 = a4 >= v20 || v24 >= v50;
      a2 = v24;
    }
    while (!v28);
  }
  a2 = a1;
LABEL_69:
  v43 = v20 - a4;
  if (v13 != -1 || v43 != 0x8000000000000000)
  {
    sub_1A61D4C30(a4, v43 / v13, a2);
    return;
  }
LABEL_77:
  __break(1u);
}

char *sub_1A62604C0(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847160);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12)
      memmove(v12, v13, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A62605B4(uint64_t a1)
{
  return sub_1A62604C0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_1A62605C8(uint64_t a1)
{
  sub_1A61DF684(0, *(_QWORD *)(a1 + 16), 0, a1);
}

void sub_1A62605DC(uint64_t a1)
{
  sub_1A61AEB4C(0, *(_QWORD *)(a1 + 16), 0, a1);
}

void sub_1A62605F0(uint64_t a1)
{
  sub_1A61DF788(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_1A6260604(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D0A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for WeatherDataInterpolator.Errors()
{
  return &type metadata for WeatherDataInterpolator.Errors;
}

uint64_t _s13WeatherDaemon23WeatherDataInterpolatorV9ConditionOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_1A62606B0 + 4 * byte_1A633C545[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_1A62606E4 + 4 * byte_1A633C540[v4]))();
}

uint64_t sub_1A62606E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A62606EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A62606F4);
  return result;
}

uint64_t sub_1A6260700(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6260708);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_1A626070C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6260714(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WeatherDataInterpolator.Condition()
{
  return &type metadata for WeatherDataInterpolator.Condition;
}

unint64_t sub_1A6260734()
{
  unint64_t result;

  result = qword_1EE847168;
  if (!qword_1EE847168)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633C644, &type metadata for WeatherDataInterpolator.Condition);
    atomic_store(result, (unint64_t *)&qword_1EE847168);
  }
  return result;
}

void MonthlyWeatherStatistics.metadata.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1A618DA30(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for Metadata);
}

uint64_t MonthlyWeatherStatistics.months.getter()
{
  OUTLINED_FUNCTION_8_19();
  return sub_1A6334CDC();
}

uint64_t MonthlyWeatherStatistics.baselineStartDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_8_19() + 24);
  v4 = OUTLINED_FUNCTION_6();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void static MonthlyWeatherStatistics.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (static Metadata.== infix(_:_:)(a1, a2)
    && (v4 = OUTLINED_FUNCTION_8_19(),
        (sub_1A61CE2EC(*(_QWORD *)(a1 + *(int *)(v4 + 20)), *(_QWORD *)(a2 + *(int *)(v4 + 20))) & 1) != 0))
  {
    sub_1A6332BE8();
  }
  else
  {
    OUTLINED_FUNCTION_3_1();
  }
}

uint64_t sub_1A6260854(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v7;

  v2 = a1 == 0x617461646174656DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1A6335ABC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7368746E6F6DLL && a2 == 0xE600000000000000;
    if (v6 || (sub_1A6335ABC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x80000001A6349830)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = sub_1A6335ABC();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1A6260998(char a1)
{
  if (!a1)
    return 0x617461646174656DLL;
  if (a1 == 1)
    return 0x7368746E6F6DLL;
  return 0xD000000000000011;
}

uint64_t sub_1A62609F0()
{
  char *v0;

  return sub_1A6260998(*v0);
}

uint64_t sub_1A62609F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A6260854(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A6260A1C()
{
  sub_1A6260DC4();
  return sub_1A6335C18();
}

uint64_t sub_1A6260A44()
{
  sub_1A6260DC4();
  return sub_1A6335C24();
}

void sub_1A6260A70()
{
  static MonthlyWeatherStatistics.read(from:)();
}

void sub_1A6260A84(uint64_t a1)
{
  MonthlyWeatherStatistics.write(to:)(a1);
}

void MonthlyWeatherStatistics.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v15 = sub_1A6332C24();
  v13 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_2();
  v5 = v4 - v3;
  v6 = type metadata accessor for Metadata();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_2();
  v16 = v8 - v7;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847170);
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_11();
  v9 = type metadata accessor for MonthlyWeatherStatistics();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_2();
  v12 = v11 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6260DC4();
  sub_1A6335BDC();
  if (v18)
  {
    OUTLINED_FUNCTION_17();
  }
  else
  {
    sub_1A618B2B4(&qword_1ED21B9E8, (uint64_t (*)(uint64_t))type metadata accessor for Metadata, (uint64_t)&protocol conformance descriptor for Metadata);
    sub_1A63359D8();
    sub_1A618D95C(v16, v12);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847180);
    sub_1A6261004(&qword_1EE847188, (uint64_t (*)(void))sub_1A6260E00, MEMORY[0x1E0DEAF40]);
    sub_1A63359D8();
    *(_QWORD *)(v12 + *(int *)(v9 + 20)) = v19;
    sub_1A618B2B4(&qword_1ED21B8A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    sub_1A63359D8();
    OUTLINED_FUNCTION_15_1();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v12 + *(int *)(v9 + 24), v5, v15);
    sub_1A618DA30(v12, a2, (uint64_t (*)(_QWORD))type metadata accessor for MonthlyWeatherStatistics);
    OUTLINED_FUNCTION_17();
    sub_1A618DF54(v12, (uint64_t (*)(_QWORD))type metadata accessor for MonthlyWeatherStatistics);
  }
}

unint64_t sub_1A6260DC4()
{
  unint64_t result;

  result = qword_1EE847178;
  if (!qword_1EE847178)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633C85C, &type metadata for MonthlyWeatherStatistics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847178);
  }
  return result;
}

unint64_t sub_1A6260E00()
{
  unint64_t result;

  result = qword_1EE847190;
  if (!qword_1EE847190)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for MonthWeatherStatistics, &type metadata for MonthWeatherStatistics);
    atomic_store(result, (unint64_t *)&qword_1EE847190);
  }
  return result;
}

uint64_t MonthlyWeatherStatistics.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847198);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6260DC4();
  sub_1A6335BF4();
  type metadata accessor for Metadata();
  sub_1A618B2B4(&qword_1ED21B9E0, (uint64_t (*)(uint64_t))type metadata accessor for Metadata, (uint64_t)&protocol conformance descriptor for Metadata);
  OUTLINED_FUNCTION_3();
  if (!v1)
  {
    type metadata accessor for MonthlyWeatherStatistics();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847180);
    sub_1A6261004(&qword_1EE8471A0, (uint64_t (*)(void))sub_1A626106C, MEMORY[0x1E0DEAF10]);
    OUTLINED_FUNCTION_3();
    sub_1A6332C24();
    sub_1A618B2B4(&qword_1ED21B898, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    OUTLINED_FUNCTION_3();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

uint64_t sub_1A6261004(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE847180);
    v8 = a2();
    result = MEMORY[0x1A85BEED0](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A626106C()
{
  unint64_t result;

  result = qword_1EE8471A8;
  if (!qword_1EE8471A8)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for MonthWeatherStatistics, &type metadata for MonthWeatherStatistics);
    atomic_store(result, (unint64_t *)&qword_1EE8471A8);
  }
  return result;
}

void sub_1A62610A8(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  MonthlyWeatherStatistics.init(from:)(a1, a2);
}

uint64_t sub_1A62610BC(_QWORD *a1)
{
  return MonthlyWeatherStatistics.encode(to:)(a1);
}

uint64_t sub_1A62610D0()
{
  return MEMORY[0x1E0DCAF68];
}

uint64_t sub_1A62610DC()
{
  return MEMORY[0x1E0DCAF60];
}

void sub_1A62610E8(uint64_t a1)
{
  uint64_t v2;

  sub_1A618B2B4(&qword_1EE846260, (uint64_t (*)(uint64_t))type metadata accessor for MonthlyWeatherStatistics, (uint64_t)&protocol conformance descriptor for MonthlyWeatherStatistics);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t getEnumTagSinglePayload for MonthlyWeatherStatistics()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1A6261130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = OUTLINED_FUNCTION_8_1();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    if ((_DWORD)v3 == 0x7FFFFFFF)
    {
      OUTLINED_FUNCTION_3_1();
      return;
    }
    v7 = OUTLINED_FUNCTION_6();
    v8 = v4 + *(int *)(a3 + 24);
  }
  __swift_getEnumTagSinglePayload(v8, v3, v7);
}

uint64_t storeEnumTagSinglePayload for MonthlyWeatherStatistics()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A62611C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = OUTLINED_FUNCTION_8_1();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = v5;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(v5 + *(int *)(a4 + 20)) = (v4 - 1);
      return result;
    }
    v9 = OUTLINED_FUNCTION_6();
    v10 = v5 + *(int *)(a4 + 24);
  }
  return __swift_storeEnumTagSinglePayload(v10, v4, v4, v9);
}

uint64_t storeEnumTagSinglePayload for MonthlyWeatherStatistics.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A6261294 + 4 * byte_1A633C675[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A62612C8 + 4 * byte_1A633C670[v4]))();
}

uint64_t sub_1A62612C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A62612D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A62612D8);
  return result;
}

uint64_t sub_1A62612E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A62612ECLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A62612F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A62612F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MonthlyWeatherStatistics.CodingKeys()
{
  return &type metadata for MonthlyWeatherStatistics.CodingKeys;
}

unint64_t sub_1A6261318()
{
  unint64_t result;

  result = qword_1EE8471E0;
  if (!qword_1EE8471E0)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633C834, &type metadata for MonthlyWeatherStatistics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8471E0);
  }
  return result;
}

unint64_t sub_1A6261358()
{
  unint64_t result;

  result = qword_1EE8471E8;
  if (!qword_1EE8471E8)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633C7A4, &type metadata for MonthlyWeatherStatistics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8471E8);
  }
  return result;
}

unint64_t sub_1A6261398()
{
  unint64_t result;

  result = qword_1EE8471F0;
  if (!qword_1EE8471F0)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633C7CC, &type metadata for MonthlyWeatherStatistics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8471F0);
  }
  return result;
}

uint64_t Array<A>.contains(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = a1 + 32;
  sub_1A6334CDC();
  v3 = 0;
  while (1)
  {
    v4 = *(_QWORD *)(v2 + 8 * v3);
    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
      break;
LABEL_13:
    if (++v3 == v1)
    {
      OUTLINED_FUNCTION_6_1();
      return 0;
    }
  }
  sub_1A6334CDC();
  v6 = OUTLINED_FUNCTION_59();
  v7 = OUTLINED_FUNCTION_0_35(v6);
  result = OUTLINED_FUNCTION_94();
  if ((v7 & 1) == 0)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v9 = *(_QWORD *)(v4 + 16);
  if (v9 < 2)
    goto LABEL_22;
  if (v9 < v5)
    goto LABEL_25;
  if (v5 == 1)
  {
LABEL_22:
    OUTLINED_FUNCTION_399();
    goto LABEL_23;
  }
  swift_bridgeObjectRetain_n();
  v10 = OUTLINED_FUNCTION_59();
  if ((OUTLINED_FUNCTION_0_35(v10) & 1) != 0)
    goto LABEL_11;
  OUTLINED_FUNCTION_94();
  if (v5 == 2)
    goto LABEL_20;
  v11 = OUTLINED_FUNCTION_59();
  if ((OUTLINED_FUNCTION_0_35(v11) & 1) != 0)
  {
LABEL_11:
    OUTLINED_FUNCTION_4_24();
    goto LABEL_12;
  }
  result = OUTLINED_FUNCTION_94();
  if (v5 == 3)
  {
LABEL_20:
    OUTLINED_FUNCTION_4_24();
LABEL_23:
    OUTLINED_FUNCTION_6_1();
    return 1;
  }
  v12 = 0;
  while (v12 + 3 < v5)
  {
    v13 = OUTLINED_FUNCTION_59();
    if ((OUTLINED_FUNCTION_0_35(v13) & 1) != 0)
      goto LABEL_11;
    result = OUTLINED_FUNCTION_94();
    if (v5 - 3 == ++v12)
      goto LABEL_20;
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

{
  unint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t result;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v3 = OUTLINED_FUNCTION_22_1();
  v4 = OUTLINED_FUNCTION_0_35(v3);
  OUTLINED_FUNCTION_6_1();
  if ((v4 & 1) == 0)
    return 0;
  if (v1 < 2)
    return 1;
  result = sub_1A626170C(1, a1);
  if (v6 == v7 >> 1)
  {
    OUTLINED_FUNCTION_59();
    swift_unknownObjectRelease();
    return 1;
  }
  v8 = v6;
  v9 = v7 >> 1;
  if (v6 < (uint64_t)(v7 >> 1))
  {
    OUTLINED_FUNCTION_59();
    swift_unknownObjectRetain();
    v10 = sub_1A6334CDC();
    if ((OUTLINED_FUNCTION_0_35(v10) & 1) != 0)
    {
LABEL_8:
      OUTLINED_FUNCTION_7_16();
      OUTLINED_FUNCTION_5_11();
      return 0;
    }
    result = OUTLINED_FUNCTION_5_11();
    v11 = v8 + 1;
    if (v8 + 1 == v9)
    {
LABEL_14:
      OUTLINED_FUNCTION_7_16();
      return 1;
    }
    while (v11 < v9)
    {
      v12 = sub_1A6334CDC();
      if ((OUTLINED_FUNCTION_0_35(v12) & 1) != 0)
        goto LABEL_8;
      result = OUTLINED_FUNCTION_5_11();
      if (v9 == ++v11)
        goto LABEL_14;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A6261540(uint64_t a1, double a2, double a3)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  double v21;
  double v22;
  BOOL v24;
  BOOL v25;
  BOOL v26;
  _BOOL4 v29;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3 < 4)
    goto LABEL_2;
  v9 = a1 + 32;
  v4 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 32 + 8 * v3 - 8);
  OUTLINED_FUNCTION_59();
  sub_1A6334CDC();
  if (!v4)
  {
    OUTLINED_FUNCTION_399();
    return v4 & 1;
  }
  if (!v10)
  {
    OUTLINED_FUNCTION_94();
    goto LABEL_2;
  }
  v11 = sub_1A61CD7E0(v4, v10);
  OUTLINED_FUNCTION_94();
  result = OUTLINED_FUNCTION_399();
  if (!v11)
  {
LABEL_2:
    LOBYTE(v4) = 0;
    return v4 & 1;
  }
  v12 = *(_QWORD *)v9;
  if (*(_QWORD *)(*(_QWORD *)v9 + 16) < 2uLL)
    goto LABEL_51;
  v14 = *(double *)(v12 + 32);
  v13 = *(double *)(v12 + 40);
  result = sub_1A626170C(1, a1);
  v18 = (v17 >> 1) - v16;
  if (v17 >> 1 == v16)
  {
    OUTLINED_FUNCTION_22_1();
    swift_unknownObjectRelease();
    goto LABEL_2;
  }
  if ((uint64_t)(v17 >> 1) <= v16)
    goto LABEL_52;
  LODWORD(v4) = 0;
  v19 = (uint64_t *)(v15 + 8 * v16);
  while (1)
  {
    v20 = *v19;
    if (*(_QWORD *)(*v19 + 16) < 2uLL)
      break;
    v22 = *(double *)(v20 + 32);
    v21 = *(double *)(v20 + 40);
    if (v21 == v13 && v22 == v14)
    {
      v22 = v14;
      v21 = v13;
    }
    else
    {
      v24 = v13 > a2 && v21 < a2;
      if (!v24 && (v13 < a2 ? (v25 = v21 <= a2) : (v25 = 1), v25) || (v22 <= a3 ? (v26 = v14 <= a3) : (v26 = 0), v26))
      {
        if (v13 != a2 || v21 >= a2 || v14 <= a3)
        {
          v29 = v21 == a2;
          if (v13 >= a2)
            v29 = 0;
          if (v22 <= a3)
            v29 = 0;
          LODWORD(v4) = v4 ^ v29;
          goto LABEL_48;
        }
      }
      else if (v14 + (v22 - v14) * ((a2 - v13) / (v21 - v13)) <= a3)
      {
        goto LABEL_48;
      }
      LODWORD(v4) = v4 ^ 1;
    }
LABEL_48:
    ++v19;
    v14 = v22;
    v13 = v21;
    if (!--v18)
    {
      OUTLINED_FUNCTION_22_1();
      swift_unknownObjectRelease();
      return v4 & 1;
    }
  }
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_1A626170C(uint64_t result, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16) < result)
  {
    __break(1u);
  }
  else if ((result & 0x8000000000000000) == 0)
  {
    return a2;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A626185C(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

uint64_t sub_1A6261864(uint64_t result, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16) < result)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (result < 0)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_1A6261880(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5 || (uint64_t)(a6 >> 1) <= result)
    __break(1u);
  return result;
}

uint64_t sub_1A626189C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _BOOL8 v38;
  _BOOL8 v39;
  _BOOL8 v40;
  _QWORD v41[2];
  unint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v1 = sub_1A63328DC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v44 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v41 - v5;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v41 - v8;
  v46 = *v0;
  sub_1A63328B8();
  v10 = sub_1A61AE934(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v12 = *(_QWORD *)(v10 + 16);
  v11 = *(_QWORD *)(v10 + 24);
  if (v12 >= v11 >> 1)
  {
    v38 = OUTLINED_FUNCTION_0_36(v11);
    v10 = OUTLINED_FUNCTION_3_19(v38, v12 + 1);
  }
  *(_QWORD *)(v10 + 16) = v12 + 1;
  v13 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v45 = *(_QWORD *)(v2 + 72);
  v14 = *(_QWORD *)(v2 + 32);
  OUTLINED_FUNCTION_2_27(v10 + v13 + v45 * v12, (uint64_t)v9);
  sub_1A63328B8();
  v16 = *(_QWORD *)(v10 + 16);
  v15 = *(_QWORD *)(v10 + 24);
  if (v16 >= v15 >> 1)
  {
    v39 = OUTLINED_FUNCTION_0_36(v15);
    v10 = OUTLINED_FUNCTION_3_19(v39, v16 + 1);
  }
  *(_QWORD *)(v10 + 16) = v16 + 1;
  v42 = v13;
  v43 = v10;
  OUTLINED_FUNCTION_2_27(v10 + v13 + v16 * v45, (uint64_t)v6);
  v17 = *(_QWORD *)(v46 + 16);
  v18 = MEMORY[0x1E0DEE9D8];
  if (v17)
  {
    v41[0] = v14;
    v41[1] = v1;
    v47 = MEMORY[0x1E0DEE9D8];
    sub_1A6334CDC();
    sub_1A61AEB30(0, v17, 0);
    v18 = v47;
    v19 = 0;
    v20 = *(_QWORD *)(v47 + 16);
    v21 = 16 * v20;
    OUTLINED_FUNCTION_1_2();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_4_25();
    do
    {
      v26 = v20 + v19;
      if (*(_BYTE *)(v22 + v19 + 32))
        v27 = v24;
      else
        v27 = v23;
      if (*(_BYTE *)(v22 + v19 + 32))
        v28 = 0xEB00000000657275;
      else
        v28 = v25;
      v47 = v18;
      v29 = *(_QWORD *)(v18 + 24);
      v30 = v26 + 1;
      if (v26 >= v29 >> 1)
      {
        v32 = OUTLINED_FUNCTION_0_36(v29);
        sub_1A61AEB30(v32, v30, 1);
        OUTLINED_FUNCTION_4_25();
        OUTLINED_FUNCTION_5_0();
        OUTLINED_FUNCTION_1_2();
        v22 = v46;
        v18 = v47;
      }
      ++v19;
      *(_QWORD *)(v18 + 16) = v30;
      v31 = v18 + v21;
      *(_QWORD *)(v31 + 32) = v27;
      *(_QWORD *)(v31 + 40) = v28;
      v21 += 16;
    }
    while (v17 != v19);
    swift_bridgeObjectRelease();
  }
  v47 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D1F8);
  sub_1A61AECAC();
  sub_1A63352B8();
  swift_bridgeObjectRelease();
  v33 = (uint64_t)v44;
  sub_1A63328B8();
  swift_bridgeObjectRelease();
  v34 = v43;
  v36 = *(_QWORD *)(v43 + 16);
  v35 = *(_QWORD *)(v43 + 24);
  if (v36 >= v35 >> 1)
  {
    v40 = OUTLINED_FUNCTION_0_36(v35);
    v34 = sub_1A61AE934(v40, v36 + 1, 1, v34);
  }
  *(_QWORD *)(v34 + 16) = v36 + 1;
  OUTLINED_FUNCTION_2_27(v34 + v42 + v36 * v45, v33);
  return v34;
}

uint64_t destroy for DailyWeatherSummaryRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DailyWeatherSummaryRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A6334CDC();
  return a1;
}

uint64_t assignWithCopy for DailyWeatherSummaryRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v4;
  return a1;
}

void *__swift_memcpy65_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x41uLL);
}

uint64_t assignWithTake for DailyWeatherSummaryRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for DailyWeatherSummaryRequest(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 65))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DailyWeatherSummaryRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DailyWeatherSummaryRequest()
{
  return &type metadata for DailyWeatherSummaryRequest;
}

uint64_t TelemetryActivity.MetaData.init(iterationIndex:wasRacingRequest:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = result;
  *(_BYTE *)(a3 + 8) = a2;
  return result;
}

uint64_t TelemetryActivity.MetaData.iterationIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t TelemetryActivity.MetaData.wasRacingRequest.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

void sub_1A6261E50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for TelemetryActivity();
  MEMORY[0x1E0C80A78](v1);
  sub_1A626AA84(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_1A6261ED4 + 4 * byte_1A633C8E0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A6261ED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1A6334D48();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v1, v0, v2);
}

void sub_1A6261F08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B8A8);
  swift_bridgeObjectRelease();
  v3 = v0 + *(int *)(v2 + 64);
  v4 = sub_1A6334D48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v1, v0, v4);
  sub_1A61DB454(v3, (uint64_t *)&unk_1ED21B908);
  JUMPOUT(0x1A6261EF4);
}

void TelemetryActivity.httpStatusCode.getter()
{
  sub_1A6261F78(MEMORY[0x1E0DB4320]);
}

void TelemetryActivity.errorCode.getter()
{
  sub_1A6261F78(MEMORY[0x1E0DB4340]);
}

void sub_1A6261F78(void (*a1)(void))
{
  uint64_t v2;

  OUTLINED_FUNCTION_6_20();
  OUTLINED_FUNCTION_3_20();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_0_37();
  a1();
  OUTLINED_FUNCTION_1_25();
  OUTLINED_FUNCTION_13();
}

uint64_t TelemetryActivity.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  void *v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v17;

  v3 = OUTLINED_FUNCTION_6();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_2_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OUTLINED_FUNCTION_6_20();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A6261E50();
  v12 = (void *)sub_1A6334D3C();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v12)
  {
    v13 = objc_msgSend(v12, sel_fetchStartDate);
    if (v13)
    {
      v14 = v13;
      sub_1A6332C00();

      v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 32);
      v15(v7, v1, v3);
      OUTLINED_FUNCTION_20_16((uint64_t)v7, 0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v3) != 1)
        return ((uint64_t (*)(uint64_t, char *, uint64_t))v15)(a1, v7, v3);
    }
    else
    {

      OUTLINED_FUNCTION_20_16((uint64_t)v7, 1);
    }
    sub_1A61DB454((uint64_t)v7, &qword_1ED21D330);
  }
  return sub_1A6332C18();
}

void TelemetryActivity.dnsDuration.getter()
{
  sub_1A6262180((const char **)&selRef_domainLookupStartDate, (const char **)&selRef_domainLookupEndDate);
}

void TelemetryActivity.connectDuration.getter()
{
  sub_1A6262180((const char **)&selRef_connectStartDate, (const char **)&selRef_connectEndDate);
}

void sub_1A6262180(const char **a1, const char **a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  const char **v30;
  uint64_t v31;

  v30 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_27();
  v29 = v5;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v28 - v7;
  v9 = OUTLINED_FUNCTION_6();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_27();
  v28 = v11;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v28 - v13;
  MEMORY[0x1E0C80A78](v15);
  v31 = (uint64_t)&v28 - v16;
  v17 = OUTLINED_FUNCTION_6_20();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_2_3();
  sub_1A6261E50();
  v19 = (void *)sub_1A6334D3C();
  v20 = (*(uint64_t (**)(void *, uint64_t))(v18 + 8))(v2, v17);
  if (v19)
  {
    if (OUTLINED_FUNCTION_13_14(v20, *a1))
    {
      OUTLINED_FUNCTION_16_17();

      v21 = v10;
      OUTLINED_FUNCTION_11_1((uint64_t)v8, (uint64_t)v14);
      OUTLINED_FUNCTION_0_27((uint64_t)v8, 0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) != 1)
      {
        v22 = v31;
        v23 = OUTLINED_FUNCTION_11_1(v31, (uint64_t)v8);
        if (OUTLINED_FUNCTION_13_14(v23, *v30))
        {
          OUTLINED_FUNCTION_16_17();

          v24 = v29;
          OUTLINED_FUNCTION_11_1(v29, (uint64_t)v14);
          OUTLINED_FUNCTION_7_17();
          if (!v25)
          {
            v26 = v28;
            OUTLINED_FUNCTION_11_1(v28, v24);
            sub_1A6332B58();

            OUTLINED_FUNCTION_8_20(v26);
            OUTLINED_FUNCTION_8_20(v22);
            goto LABEL_12;
          }
        }
        else
        {
          v24 = v29;
          OUTLINED_FUNCTION_0_27(v29, 1);
        }

        OUTLINED_FUNCTION_19_13(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
        v27 = v24;
LABEL_11:
        sub_1A61DB454(v27, &qword_1ED21D330);
        goto LABEL_12;
      }
    }
    else
    {
      OUTLINED_FUNCTION_0_27((uint64_t)v8, 1);
    }

    v27 = (uint64_t)v8;
    goto LABEL_11;
  }
LABEL_12:
  OUTLINED_FUNCTION_20();
}

void TelemetryActivity.requestDuration.getter()
{
  sub_1A6262180((const char **)&selRef_requestStartDate, (const char **)&selRef_responseStartDate);
}

void TelemetryActivity.responseDuration.getter()
{
  sub_1A6262180((const char **)&selRef_responseStartDate, (const char **)&selRef_responseEndDate);
}

void TelemetryActivity.taskDuration.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_27();
  v26 = v1;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v25 - v3;
  v5 = OUTLINED_FUNCTION_6();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_27();
  v25 = v7;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v25 - v12;
  v14 = OUTLINED_FUNCTION_6_20();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A6261E50();
  v18 = (void *)sub_1A6334D3C();
  v19 = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if (v18)
  {
    if (OUTLINED_FUNCTION_13_14(v19, sel_responseEndDate))
    {
      OUTLINED_FUNCTION_17_13();

      OUTLINED_FUNCTION_10_14((uint64_t)v4, (uint64_t)v10);
      OUTLINED_FUNCTION_0_27((uint64_t)v4, 0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) != 1)
      {
        v20 = OUTLINED_FUNCTION_10_14((uint64_t)v13, (uint64_t)v4);
        if (OUTLINED_FUNCTION_13_14(v20, sel_fetchStartDate))
        {
          OUTLINED_FUNCTION_17_13();

          v21 = v26;
          OUTLINED_FUNCTION_10_14(v26, (uint64_t)v10);
          OUTLINED_FUNCTION_7_17();
          if (!v22)
          {
            v23 = v25;
            OUTLINED_FUNCTION_10_14(v25, v21);
            sub_1A6332B58();

            OUTLINED_FUNCTION_8_20(v23);
            OUTLINED_FUNCTION_8_20((uint64_t)v13);
            goto LABEL_12;
          }
        }
        else
        {
          v21 = v26;
          OUTLINED_FUNCTION_0_27(v26, 1);
        }

        OUTLINED_FUNCTION_19_13(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
        v24 = v21;
LABEL_11:
        sub_1A61DB454(v24, &qword_1ED21D330);
        goto LABEL_12;
      }
    }
    else
    {
      OUTLINED_FUNCTION_0_27((uint64_t)v4, 1);
    }

    v24 = (uint64_t)v4;
    goto LABEL_11;
  }
LABEL_12:
  OUTLINED_FUNCTION_20();
}

void TelemetryActivity.responseSize.getter()
{
  void *v0;
  uint64_t v1;
  id v2;
  id v3;

  OUTLINED_FUNCTION_6_20();
  OUTLINED_FUNCTION_3_20();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_0_37();
  sub_1A6334D3C();
  OUTLINED_FUNCTION_1_25();
  if (v0)
  {
    v2 = objc_msgSend(v0, sel_countOfResponseBodyBytesReceived);
    v3 = objc_msgSend(v0, sel_countOfResponseHeaderBytesReceived);

    if (__OFADD__(v2, v3))
      __break(1u);
  }
  OUTLINED_FUNCTION_13();
}

id TelemetryActivity.isProxyConnection.getter()
{
  void *v0;
  uint64_t v1;
  id v2;

  OUTLINED_FUNCTION_6_20();
  OUTLINED_FUNCTION_3_20();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_0_37();
  sub_1A6334D3C();
  OUTLINED_FUNCTION_1_25();
  if (!v0)
    return 0;
  v2 = objc_msgSend(v0, sel_isProxyConnection);

  return v2;
}

void *TelemetryActivity.cdnServer.getter()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;

  OUTLINED_FUNCTION_6_20();
  OUTLINED_FUNCTION_3_20();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_0_37();
  sub_1A6334D30();
  OUTLINED_FUNCTION_1_25();
  if (v0)
  {
    v2 = (void *)sub_1A63352E8();
    v3 = objc_msgSend(v0, sel_valueForHTTPHeaderField_, v2);

    if (v3)
    {
      v0 = (void *)sub_1A6335300();

    }
    else
    {
      return 0;
    }
  }
  return v0;
}

uint64_t initializeBufferWithCopyOfBuffer for TelemetryActivity(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1A6262878 + 4 * word_1A633C8F6[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t assignWithCopy for TelemetryActivity(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1A6266E9C(result);
    v2 = (char *)&loc_1A6264ADC + 4 * word_1A633C960[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_1A6266E9C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TelemetryActivity();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void initializeWithTake for TelemetryActivity()
{
  char *v0;

  v0 = (char *)sub_1A6266F2C + 4 * word_1A633C98A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A6266F2C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__dst, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = sub_1A6334D48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
  swift_storeEnumTagMultiPayload();
  return v26;
}

uint64_t assignWithTake for TelemetryActivity(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1A6266E9C(result);
    v2 = (char *)&loc_1A6268CB0 + 4 * word_1A633C9B4[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for TelemetryActivity.MetaData(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TelemetryActivity.MetaData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for TelemetryActivity.MetaData()
{
  return &type metadata for TelemetryActivity.MetaData;
}

uint64_t sub_1A626AA84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TelemetryActivity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t dispatch thunk of AppConfigurationDataServiceObserver.handle(telemetry:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t WeatherRequestDailyRelativeRange.RelativeTo.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A6335918();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t WeatherRequestDailyRelativeRange.RelativeTo.rawValue.getter()
{
  return 0x7961646F74;
}

uint64_t sub_1A626AB44@<X0>(BOOL *a1@<X8>)
{
  return WeatherRequestDailyRelativeRange.RelativeTo.init(rawValue:)(a1);
}

void sub_1A626AB50(_QWORD *a1@<X8>)
{
  *a1 = 0x7961646F74;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1A626AB68()
{
  sub_1A626B86C();
  return sub_1A63354F8();
}

uint64_t sub_1A626ABC4()
{
  sub_1A626B86C();
  return sub_1A63354BC();
}

uint64_t sub_1A626AC10(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x7472617473 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A6335ABC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 6581861 && a2 == 0xE300000000000000;
    if (v6 || (sub_1A6335ABC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x65766974616C6572 && a2 == 0xEA00000000006F54;
      if (v7 || (sub_1A6335ABC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 7827310 && a2 == 0xE300000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_1A6335ABC();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_1A626ADA0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A626ADD0 + 4 * byte_1A633CA40[a1]))(0x7472617473, 0xE500000000000000);
}

uint64_t sub_1A626ADD0()
{
  return 6581861;
}

uint64_t sub_1A626ADE0()
{
  return 0x65766974616C6572;
}

uint64_t sub_1A626ADFC()
{
  return 7827310;
}

uint64_t sub_1A626AE0C()
{
  unsigned __int8 *v0;

  return sub_1A626ADA0(*v0);
}

uint64_t sub_1A626AE14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A626AC10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A626AE38()
{
  sub_1A626AFF8();
  return sub_1A6335C18();
}

uint64_t sub_1A626AE60()
{
  sub_1A626AFF8();
  return sub_1A6335C24();
}

uint64_t WeatherRequestDailyRelativeRange.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8471F8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A626AFF8();
  sub_1A6335BF4();
  OUTLINED_FUNCTION_0_38();
  if (!v1)
  {
    OUTLINED_FUNCTION_0_38();
    sub_1A626B034();
    OUTLINED_FUNCTION_4_0();
    type metadata accessor for WeatherRequestDailyRelativeRange();
    sub_1A6332C24();
    sub_1A6189BFC(&qword_1ED21B898, MEMORY[0x1E0CB0890]);
    OUTLINED_FUNCTION_4_0();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

unint64_t sub_1A626AFF8()
{
  unint64_t result;

  result = qword_1EE847200;
  if (!qword_1EE847200)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633CC94, &type metadata for WeatherRequestDailyRelativeRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847200);
  }
  return result;
}

unint64_t sub_1A626B034()
{
  unint64_t result;

  result = qword_1EE847208;
  if (!qword_1EE847208)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for WeatherRequestDailyRelativeRange.RelativeTo, &type metadata for WeatherRequestDailyRelativeRange.RelativeTo);
    atomic_store(result, (unint64_t *)&qword_1EE847208);
  }
  return result;
}

uint64_t WeatherRequestDailyRelativeRange.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;

  v11 = a2;
  v14 = sub_1A6332C24();
  v12 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v13 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847210);
  MEMORY[0x1E0C80A78](v15);
  v5 = type metadata accessor for WeatherRequestDailyRelativeRange();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A626AFF8();
  v6 = v16;
  sub_1A6335BDC();
  if (!v6)
  {
    v16 = v5;
    v8 = v13;
    v7 = v14;
    v20 = 0;
    *v2 = sub_1A63359CC();
    v19 = 1;
    v2[1] = sub_1A63359CC();
    v18 = 2;
    sub_1A626B2C8();
    sub_1A63359D8();
    v17 = 3;
    sub_1A6189BFC(&qword_1ED21B8A0, MEMORY[0x1E0CB08C0]);
    sub_1A63359D8();
    OUTLINED_FUNCTION_0_8();
    v10 = v11;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))((char *)v2 + *(int *)(v16 + 28), v8, v7);
    sub_1A626B304((uint64_t)v2, v10);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1A626B2C8()
{
  unint64_t result;

  result = qword_1EE847218;
  if (!qword_1EE847218)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for WeatherRequestDailyRelativeRange.RelativeTo, &type metadata for WeatherRequestDailyRelativeRange.RelativeTo);
    atomic_store(result, (unint64_t *)&qword_1EE847218);
  }
  return result;
}

uint64_t sub_1A626B304(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WeatherRequestDailyRelativeRange();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A626B34C()
{
  unint64_t result;

  result = qword_1EE847220;
  if (!qword_1EE847220)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for WeatherRequestDailyRelativeRange.RelativeTo, &type metadata for WeatherRequestDailyRelativeRange.RelativeTo);
    atomic_store(result, (unint64_t *)&qword_1EE847220);
  }
  return result;
}

uint64_t sub_1A626B388@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WeatherRequestDailyRelativeRange.init(from:)(a1, a2);
}

uint64_t sub_1A626B39C(_QWORD *a1)
{
  return WeatherRequestDailyRelativeRange.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for WeatherRequestDailyRelativeRange(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v5 = *(int *)(a3 + 28);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1A6332C24();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for WeatherRequestDailyRelativeRange(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 28);
  v3 = sub_1A6332C24();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_OWORD *initializeWithCopy for WeatherRequestDailyRelativeRange(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 28);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A6332C24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithCopy for WeatherRequestDailyRelativeRange(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = *(int *)(a3 + 28);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A6332C24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *initializeWithTake for WeatherRequestDailyRelativeRange(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 28);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A6332C24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *assignWithTake for WeatherRequestDailyRelativeRange(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 28);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A6332C24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1A626B5E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 28);
  v5 = OUTLINED_FUNCTION_6();
  return __swift_getEnumTagSinglePayload(v4, a2, v5);
}

uint64_t sub_1A626B61C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 28);
  v6 = OUTLINED_FUNCTION_6();
  return __swift_storeEnumTagSinglePayload(v5, a2, a2, v6);
}

uint64_t storeEnumTagSinglePayload for WeatherRequestDailyRelativeRange.RelativeTo(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A626B694 + 4 * byte_1A633CA44[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A626B6B4 + 4 * byte_1A633CA49[v4]))();
}

_BYTE *sub_1A626B694(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A626B6B4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A626B6BC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A626B6C4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A626B6CC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A626B6D4(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t storeEnumTagSinglePayload for WeatherRequestDailyRelativeRange.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A626B72C + 4 * byte_1A633CA53[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A626B760 + 4 * byte_1A633CA4E[v4]))();
}

uint64_t sub_1A626B760(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A626B768(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A626B770);
  return result;
}

uint64_t sub_1A626B77C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A626B784);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A626B788(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A626B790(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WeatherRequestDailyRelativeRange.CodingKeys()
{
  return &type metadata for WeatherRequestDailyRelativeRange.CodingKeys;
}

unint64_t sub_1A626B7B0()
{
  unint64_t result;

  result = qword_1EE847228;
  if (!qword_1EE847228)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633CC6C, &type metadata for WeatherRequestDailyRelativeRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847228);
  }
  return result;
}

unint64_t sub_1A626B7F0()
{
  unint64_t result;

  result = qword_1EE847230;
  if (!qword_1EE847230)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633CBDC, &type metadata for WeatherRequestDailyRelativeRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847230);
  }
  return result;
}

unint64_t sub_1A626B830()
{
  unint64_t result;

  result = qword_1EE847238;
  if (!qword_1EE847238)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633CC04, &type metadata for WeatherRequestDailyRelativeRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847238);
  }
  return result;
}

unint64_t sub_1A626B86C()
{
  unint64_t result;

  result = qword_1EE847240;
  if (!qword_1EE847240)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for WeatherRequestDailyRelativeRange.RelativeTo, &type metadata for WeatherRequestDailyRelativeRange.RelativeTo);
    atomic_store(result, (unint64_t *)&qword_1EE847240);
  }
  return result;
}

uint64_t sub_1A626B8A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v1 = sub_1A63356E4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_2_28();
  sub_1A63356CC();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v3);
  sub_1A63351B0();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_0_39();
  sub_1A6335198();
  sub_1A61BC344();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED21E270);
  sub_1A61BC594();
  sub_1A63357D4();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v0, *MEMORY[0x1E0DEF8D0], v1);
  result = OUTLINED_FUNCTION_3_21();
  qword_1ED2199E8 = result;
  return result;
}

id static OS_dispatch_queue.authService.getter()
{
  return sub_1A61BC4C8(&qword_1ED2199F0, (id *)&qword_1ED2199E8);
}

ValueMetadata *type metadata accessor for DailyWeatherStatisticsRequest()
{
  return &type metadata for DailyWeatherStatisticsRequest;
}

uint64_t NSFileManager.deleteSqliteDatabase(_:in:)(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void **p_weak_ivar_lyt;
  void *v18;
  unsigned int v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void **v27;
  uint64_t v28;
  void *v29;
  uint64_t v31;
  char *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;

  v4 = v3;
  v35 = *MEMORY[0x1E0C80C00];
  v8 = sub_1A6332A98();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CBC8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A6338E40;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  v33 = a1;
  v34 = a2;
  swift_bridgeObjectRetain_n();
  sub_1A63353F0();
  v13 = v34;
  *(_QWORD *)(inited + 48) = v33;
  *(_QWORD *)(inited + 56) = v13;
  v33 = a1;
  v34 = a2;
  OUTLINED_FUNCTION_59();
  sub_1A63353F0();
  v14 = v34;
  *(_QWORD *)(inited + 64) = v33;
  *(_QWORD *)(inited + 72) = v14;
  v33 = a1;
  v34 = a2;
  OUTLINED_FUNCTION_59();
  sub_1A63353F0();
  v15 = 0;
  v16 = v34;
  *(_QWORD *)(inited + 80) = v33;
  *(_QWORD *)(inited + 88) = v16;
  p_weak_ivar_lyt = &NotificationAssembly.weak_ivar_lyt;
  v32 = v11;
  do
  {
    OUTLINED_FUNCTION_59();
    sub_1A6332A44();
    swift_bridgeObjectRelease();
    v18 = (void *)sub_1A6332A2C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v33 = 0;
    v19 = objc_msgSend(v4, (SEL)p_weak_ivar_lyt[397], v18, &v33);

    v20 = v33;
    if (!v19)
    {
      v21 = v20;
      v22 = inited;
      v23 = v8;
      v24 = v9;
      v25 = a3;
      v26 = v4;
      v27 = p_weak_ivar_lyt;
      v28 = sub_1A6332A08();

      swift_willThrow();
      v29 = (void *)v28;
      p_weak_ivar_lyt = v27;
      v4 = v26;
      a3 = v25;
      v9 = v24;
      v8 = v23;
      inited = v22;
      v11 = v32;

    }
    v15 += 16;
  }
  while (v15 != 64);
  swift_setDeallocating();
  return sub_1A626BC5C();
}

uint64_t sub_1A626BC5C()
{
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for HourlyWeatherStatisticsDescriptor()
{
  return &type metadata for HourlyWeatherStatisticsDescriptor;
}

uint64_t sub_1A626BC9C()
{
  uint64_t result;

  sub_1A6334CDC();
  sub_1A63353F0();
  result = swift_bridgeObjectRelease();
  qword_1EE85E330 = 0x2E312E302E30;
  *(_QWORD *)algn_1EE85E338 = 0xE600000000000000;
  return result;
}

uint64_t *sub_1A626BD14()
{
  if (qword_1EE8453F8 != -1)
    swift_once();
  return &qword_1EE85E330;
}

uint64_t sub_1A626BD54()
{
  uint64_t v0;

  v0 = qword_1EE847248;
  sub_1A6334CDC();
  return v0;
}

uint64_t sub_1A626BD88()
{
  uint64_t v0;

  sub_1A626BD14();
  v0 = qword_1EE85E330;
  sub_1A6334CDC();
  return v0;
}

uint64_t WeatherAlerts.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A618DAAC(v1, a1);
}

uint64_t WeatherAlerts.metadata.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A61CD678(a1, v1);
}

uint64_t (*WeatherAlerts.metadata.modify())(void)
{
  return nullsub_1;
}

uint64_t WeatherAlerts.detailsUrl.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_0_40() + 20));
  sub_1A6334CDC();
  return v1;
}

void WeatherAlerts.detailsUrl.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(int *)(OUTLINED_FUNCTION_0_40() + 20));
  swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*WeatherAlerts.detailsUrl.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_40();
  return nullsub_1;
}

uint64_t WeatherAlerts.alerts.getter()
{
  OUTLINED_FUNCTION_0_40();
  return sub_1A6334CDC();
}

void WeatherAlerts.alerts.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_0_40() + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*WeatherAlerts.alerts.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_40();
  return nullsub_1;
}

uint64_t WeatherAlerts.init(metadata:detailsUrl:alerts:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;

  v10 = OUTLINED_FUNCTION_0_40();
  v11 = (_QWORD *)(a5 + *(int *)(v10 + 20));
  result = sub_1A618D95C(a1, a5);
  *v11 = a2;
  v11[1] = a3;
  *(_QWORD *)(a5 + *(int *)(v10 + 24)) = a4;
  return result;
}

uint64_t WeatherAlerts.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = type metadata accessor for Metadata();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_2();
  v7 = v6 - v5;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED219F18);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_2();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A626C18C();
  sub_1A6335BDC();
  if (!v2)
  {
    LOBYTE(v14) = 0;
    sub_1A618B274(&qword_1ED21B9E8, (uint64_t (*)(uint64_t))type metadata accessor for Metadata, (uint64_t)&protocol conformance descriptor for Metadata);
    sub_1A63359D8();
    sub_1A6335954();
    type metadata accessor for WeatherAlert();
    sub_1A618B274(&qword_1ED219DA0, (uint64_t (*)(uint64_t))type metadata accessor for WeatherAlert, (uint64_t)&protocol conformance descriptor for WeatherAlert);
    v9 = sub_1A6335948();
    OUTLINED_FUNCTION_4_1();
    v10 = type metadata accessor for WeatherAlerts();
    v11 = (_QWORD *)(a2 + *(int *)(v10 + 20));
    sub_1A618D95C(v7, a2);
    *v11 = v14;
    v11[1] = v15;
    *(_QWORD *)(a2 + *(int *)(v10 + 24)) = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1A626C18C()
{
  unint64_t result;

  result = qword_1ED219E88;
  if (!qword_1ED219E88)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633CEDC, &type metadata for WeatherAlerts.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED219E88);
  }
  return result;
}

uint64_t sub_1A626C1C8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x617461646174656DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1A6335ABC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x55736C6961746564 && a2 == 0xEA00000000006C72;
    if (v6 || (sub_1A6335ABC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x737472656C61 && a2 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1A6335ABC();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1A626C318(char a1)
{
  if (!a1)
    return 0x617461646174656DLL;
  if (a1 == 1)
    return 0x55736C6961746564;
  return 0x737472656C61;
}

uint64_t sub_1A626C370()
{
  char *v0;

  return sub_1A626C318(*v0);
}

uint64_t sub_1A626C378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A626C1C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A626C39C()
{
  sub_1A626C18C();
  return sub_1A6335C18();
}

uint64_t sub_1A626C3C4()
{
  sub_1A626C18C();
  return sub_1A6335C24();
}

uint64_t WeatherAlerts.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21A0A8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_2();
  v7 = v6 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A626C18C();
  sub_1A6335BF4();
  type metadata accessor for Metadata();
  sub_1A618B274(&qword_1ED21B9E0, (uint64_t (*)(uint64_t))type metadata accessor for Metadata, (uint64_t)&protocol conformance descriptor for Metadata);
  OUTLINED_FUNCTION_0_19();
  if (!v1)
  {
    type metadata accessor for WeatherAlerts();
    sub_1A6335A08();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21A068);
    sub_1A626C56C();
    OUTLINED_FUNCTION_0_19();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_1A626C56C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED21A070;
  if (!qword_1ED21A070)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED21A068);
    v2 = sub_1A618B274(&qword_1ED219FB0, (uint64_t (*)(uint64_t))type metadata accessor for WeatherAlert, (uint64_t)&protocol conformance descriptor for WeatherAlert);
    result = MEMORY[0x1A85BEED0](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED21A070);
  }
  return result;
}

uint64_t sub_1A626C5E8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WeatherAlerts.init(from:)(a1, a2);
}

uint64_t sub_1A626C5FC(_QWORD *a1)
{
  return WeatherAlerts.encode(to:)(a1);
}

char *initializeBufferWithCopyOfBuffer for WeatherAlerts(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A6332C24();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = (int *)type metadata accessor for Metadata();
    v8(&a1[v9[5]], &a2[v9[5]], v7);
    v10 = v9[6];
    v11 = &a1[v10];
    v12 = &a2[v10];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v10], 1, v7))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v8(v11, v12, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v7);
    }
    *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
    *(_QWORD *)&a1[v9[8]] = *(_QWORD *)&a2[v9[8]];
    *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
    v15 = v9[10];
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v18;
    v19 = v9[11];
    v20 = &a1[v19];
    v21 = &a2[v19];
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    v23 = v9[12];
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v26;
    a1[v9[13]] = a2[v9[13]];
    a1[v9[14]] = a2[v9[14]];
    v27 = v9[15];
    v28 = &a1[v27];
    v29 = &a2[v27];
    v30 = *((_QWORD *)v29 + 1);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *((_QWORD *)v28 + 1) = v30;
    v31 = *(int *)(a3 + 20);
    v32 = *(int *)(a3 + 24);
    v33 = &a1[v31];
    v34 = &a2[v31];
    v35 = *((_QWORD *)v34 + 1);
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *((_QWORD *)v33 + 1) = v35;
    *(_QWORD *)&a1[v32] = *(_QWORD *)&a2[v32];
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
  }
  return a1;
}

uint64_t destroy for WeatherAlerts(uint64_t a1)
{
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  v2 = sub_1A6332C24();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(a1, v2);
  v4 = type metadata accessor for Metadata();
  v3(a1 + *(int *)(v4 + 20), v2);
  v5 = a1 + *(int *)(v4 + 24);
  if (!__swift_getEnumTagSinglePayload(v5, 1, v2))
    v3(v5, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for WeatherAlerts(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;

  v6 = sub_1A6332C24();
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for Metadata();
  v7(&a1[v8[5]], &a2[v8[5]], v6);
  v9 = v8[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v9], 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v7(v10, v11, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
  }
  *(_QWORD *)&a1[v8[7]] = *(_QWORD *)&a2[v8[7]];
  *(_QWORD *)&a1[v8[8]] = *(_QWORD *)&a2[v8[8]];
  *(_QWORD *)&a1[v8[9]] = *(_QWORD *)&a2[v8[9]];
  v13 = v8[10];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = v8[11];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = v20;
  v21 = v8[12];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = v24;
  a1[v8[13]] = a2[v8[13]];
  a1[v8[14]] = a2[v8[14]];
  v25 = v8[15];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = *((_QWORD *)v27 + 1);
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = v28;
  v29 = *(int *)(a3 + 20);
  v30 = *(int *)(a3 + 24);
  v31 = &a1[v29];
  v32 = &a2[v29];
  v33 = *((_QWORD *)v32 + 1);
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *((_QWORD *)v31 + 1) = v33;
  *(_QWORD *)&a1[v30] = *(_QWORD *)&a2[v30];
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A6334CDC();
  return a1;
}

char *assignWithCopy for WeatherAlerts(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int EnumTagSinglePayload;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;

  v6 = sub_1A6332C24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = (int *)type metadata accessor for Metadata();
  v8(&a1[v9[5]], &a2[v9[5]], v6);
  v10 = v9[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v10], 1, v6);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v14)
    {
      v8(v11, v12, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
  *(_QWORD *)&a1[v9[8]] = *(_QWORD *)&a2[v9[8]];
  *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
  v16 = v9[10];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v19 = v9[11];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v22 = v9[12];
  v23 = &a1[v22];
  v24 = &a2[v22];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  a1[v9[13]] = a2[v9[13]];
  a1[v9[14]] = a2[v9[14]];
  v25 = v9[15];
  v26 = &a1[v25];
  v27 = &a2[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v28 = *(int *)(a3 + 20);
  v29 = &a1[v28];
  v30 = &a2[v28];
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for WeatherAlerts(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1A6332C24();
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for Metadata();
  v7(&a1[v8[5]], &a2[v8[5]], v6);
  v9 = v8[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v9], 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v7(v10, v11, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
  }
  *(_QWORD *)&a1[v8[7]] = *(_QWORD *)&a2[v8[7]];
  *(_QWORD *)&a1[v8[8]] = *(_QWORD *)&a2[v8[8]];
  *(_QWORD *)&a1[v8[9]] = *(_QWORD *)&a2[v8[9]];
  *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
  *(_OWORD *)&a1[v8[11]] = *(_OWORD *)&a2[v8[11]];
  *(_OWORD *)&a1[v8[12]] = *(_OWORD *)&a2[v8[12]];
  a1[v8[13]] = a2[v8[13]];
  a1[v8[14]] = a2[v8[14]];
  *(_OWORD *)&a1[v8[15]] = *(_OWORD *)&a2[v8[15]];
  v13 = *(int *)(a3 + 24);
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
  return a1;
}

char *assignWithTake for WeatherAlerts(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int EnumTagSinglePayload;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;

  v6 = sub_1A6332C24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = (int *)type metadata accessor for Metadata();
  v8(&a1[v9[5]], &a2[v9[5]], v6);
  v10 = v9[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v10], 1, v6);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v14)
    {
      v8(v11, v12, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
  *(_QWORD *)&a1[v9[8]] = *(_QWORD *)&a2[v9[8]];
  *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
  v16 = v9[10];
  v17 = &a1[v16];
  v18 = (uint64_t *)&a2[v16];
  v20 = *v18;
  v19 = v18[1];
  *(_QWORD *)v17 = v20;
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v21 = v9[11];
  v22 = &a1[v21];
  v23 = (uint64_t *)&a2[v21];
  v25 = *v23;
  v24 = v23[1];
  *(_QWORD *)v22 = v25;
  *((_QWORD *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  v26 = v9[12];
  v27 = &a1[v26];
  v28 = (uint64_t *)&a2[v26];
  v30 = *v28;
  v29 = v28[1];
  *(_QWORD *)v27 = v30;
  *((_QWORD *)v27 + 1) = v29;
  swift_bridgeObjectRelease();
  a1[v9[13]] = a2[v9[13]];
  a1[v9[14]] = a2[v9[14]];
  v31 = v9[15];
  v32 = &a1[v31];
  v33 = (uint64_t *)&a2[v31];
  v35 = *v33;
  v34 = v33[1];
  *(_QWORD *)v32 = v35;
  *((_QWORD *)v32 + 1) = v34;
  swift_bridgeObjectRelease();
  v36 = *(int *)(a3 + 20);
  v37 = &a1[v36];
  v38 = (uint64_t *)&a2[v36];
  v40 = *v38;
  v39 = v38[1];
  *(_QWORD *)v37 = v40;
  *((_QWORD *)v37 + 1) = v39;
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A626D094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = type metadata accessor for Metadata();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

void sub_1A626D10C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = type metadata accessor for Metadata();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
    OUTLINED_FUNCTION_3_1();
  }
}

uint64_t storeEnumTagSinglePayload for WeatherAlerts.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A626D1C4 + 4 * byte_1A633CD7D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A626D1F8 + 4 * byte_1A633CD78[v4]))();
}

uint64_t sub_1A626D1F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A626D200(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A626D208);
  return result;
}

uint64_t sub_1A626D214(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A626D21CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A626D220(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A626D228(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WeatherAlerts.CodingKeys()
{
  return &type metadata for WeatherAlerts.CodingKeys;
}

unint64_t sub_1A626D248()
{
  unint64_t result;

  result = qword_1EE847258;
  if (!qword_1EE847258)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633CEB4, &type metadata for WeatherAlerts.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847258);
  }
  return result;
}

unint64_t sub_1A626D288()
{
  unint64_t result;

  result = qword_1ED219E98;
  if (!qword_1ED219E98)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633CE24, &type metadata for WeatherAlerts.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED219E98);
  }
  return result;
}

unint64_t sub_1A626D2C8()
{
  unint64_t result;

  result = qword_1ED219E90;
  if (!qword_1ED219E90)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633CE4C, &type metadata for WeatherAlerts.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED219E90);
  }
  return result;
}

uint64_t HourForecast.forecastStart.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_6();
  return OUTLINED_FUNCTION_4(v1, a1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 40));
}

uint64_t (*HourForecast.forecastStart.modify())(void)
{
  return nullsub_1;
}

void HourForecast.cloudCover.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_29() + 20)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*HourForecast.cloudCover.modify())(_QWORD)
{
  OUTLINED_FUNCTION_29();
  return nullsub_1;
}

void HourForecast.cloudCoverLowAltPct.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_29() + 24)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*HourForecast.cloudCoverLowAltPct.modify())(_QWORD)
{
  OUTLINED_FUNCTION_29();
  return nullsub_1;
}

void HourForecast.cloudCoverMidAltPct.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_29() + 28)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*HourForecast.cloudCoverMidAltPct.modify())(_QWORD)
{
  OUTLINED_FUNCTION_29();
  return nullsub_1;
}

void HourForecast.cloudCoverHighAltPct.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_29() + 32)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*HourForecast.cloudCoverHighAltPct.modify())(_QWORD)
{
  OUTLINED_FUNCTION_29();
  return nullsub_1;
}

void HourForecast.conditionCode.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_29() + 36)) = v2;
  OUTLINED_FUNCTION_29_1();
}

uint64_t (*HourForecast.conditionCode.modify())(_QWORD)
{
  OUTLINED_FUNCTION_29();
  return nullsub_1;
}

void HourForecast.daylight.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_29() + 40)) = a1;
  OUTLINED_FUNCTION_29_1();
}

uint64_t (*HourForecast.daylight.modify())(_QWORD)
{
  OUTLINED_FUNCTION_29();
  return nullsub_1;
}

void HourForecast.humidity.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_29() + 44)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*HourForecast.humidity.modify())(_QWORD)
{
  OUTLINED_FUNCTION_29();
  return nullsub_1;
}

void HourForecast.precipitationAmount.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_29() + 48)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*HourForecast.precipitationAmount.modify())(_QWORD)
{
  OUTLINED_FUNCTION_29();
  return nullsub_1;
}

void HourForecast.precipitationChance.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_29() + 52)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*HourForecast.precipitationChance.modify())(_QWORD)
{
  OUTLINED_FUNCTION_29();
  return nullsub_1;
}

void HourForecast.precipitationType.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_29() + 56)) = v2;
  OUTLINED_FUNCTION_29_1();
}

uint64_t (*HourForecast.precipitationType.modify())(_QWORD)
{
  OUTLINED_FUNCTION_29();
  return nullsub_1;
}

double HourForecast.perceivedPrecipitationIntensity.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(OUTLINED_FUNCTION_29() + 60));
}

void HourForecast.perceivedPrecipitationIntensity.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_29() + 60)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*HourForecast.perceivedPrecipitationIntensity.modify())(_QWORD)
{
  OUTLINED_FUNCTION_29();
  return nullsub_1;
}

void HourForecast.pressure.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_18(*(int *)(v0 + 64));
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*HourForecast.pressure.modify())(_QWORD)
{
  OUTLINED_FUNCTION_29();
  return nullsub_1;
}

void HourForecast.pressureTrend.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_29() + 68)) = v2;
  OUTLINED_FUNCTION_29_1();
}

uint64_t (*HourForecast.pressureTrend.modify())(_QWORD)
{
  OUTLINED_FUNCTION_29();
  return nullsub_1;
}

void HourForecast.snowfallIntensity.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_18(*(int *)(v0 + 72));
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*HourForecast.snowfallIntensity.modify())(_QWORD)
{
  OUTLINED_FUNCTION_29();
  return nullsub_1;
}

void HourForecast.temperature.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_29() + 76)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*HourForecast.temperature.modify())(_QWORD)
{
  OUTLINED_FUNCTION_29();
  return nullsub_1;
}

void HourForecast.temperatureApparent.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_18(*(int *)(v0 + 80));
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*HourForecast.temperatureApparent.modify())(_QWORD)
{
  OUTLINED_FUNCTION_29();
  return nullsub_1;
}

void HourForecast.temperatureDewPoint.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_18(*(int *)(v0 + 84));
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*HourForecast.temperatureDewPoint.modify())(_QWORD)
{
  OUTLINED_FUNCTION_29();
  return nullsub_1;
}

void HourForecast.uvIndex.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + *(int *)(OUTLINED_FUNCTION_29() + 88)) = a1;
  OUTLINED_FUNCTION_29_1();
}

uint64_t (*HourForecast.uvIndex.modify())(_QWORD)
{
  OUTLINED_FUNCTION_29();
  return nullsub_1;
}

void HourForecast.visibility.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_29() + 92)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*HourForecast.visibility.modify())(_QWORD)
{
  OUTLINED_FUNCTION_29();
  return nullsub_1;
}

void HourForecast.windDirection.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_18(*(int *)(v0 + 96));
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*HourForecast.windDirection.modify())(_QWORD)
{
  OUTLINED_FUNCTION_29();
  return nullsub_1;
}

void HourForecast.windGust.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_18(*(int *)(v0 + 100));
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*HourForecast.windGust.modify())(_QWORD)
{
  OUTLINED_FUNCTION_29();
  return nullsub_1;
}

void HourForecast.windSpeed.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_29() + 104)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*HourForecast.windSpeed.modify())(_QWORD)
{
  OUTLINED_FUNCTION_29();
  return nullsub_1;
}

double HourForecast.init(forecastStart:cloudCover:cloudCoverLowAltPct:cloudCoverMidAltPct:cloudCoverHighAltPct:conditionCode:daylight:humidity:precipitationAmount:precipitationChance:precipitationType:perceivedPrecipitationIntensity:pressure:pressureTrend:snowfallIntensity:temperature:temperatureApparent:temperatureDewPoint:uvIndex:visibility:windDirection:windGust:windSpeed:)@<D0>(uint64_t a1@<X0>, char *a2@<X1>, char a3@<W2>, char *a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, double a14@<D4>, double a15@<D5>, double a16@<D6>, double a17@<D7>, char a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,char a29,double a30)
{
  char v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double result;
  uint64_t v50;
  char v51;
  char v52;

  v38 = *a2;
  v51 = *a4;
  v52 = *a7;
  v39 = (int *)OUTLINED_FUNCTION_29();
  v40 = v39[14];
  v50 = v39[17];
  v41 = a9 + v39[16];
  v42 = a9 + v39[18];
  v43 = a9 + v39[20];
  v44 = a9 + v39[21];
  v45 = a9 + v39[24];
  v46 = a9 + v39[25];
  v47 = OUTLINED_FUNCTION_6();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(a9, a1, v47);
  *(double *)(a9 + v39[5]) = a10;
  *(double *)(a9 + v39[6]) = a11;
  *(double *)(a9 + v39[7]) = a12;
  *(double *)(a9 + v39[8]) = a13;
  *(_BYTE *)(a9 + v39[9]) = v38;
  *(_BYTE *)(a9 + v39[10]) = a3;
  *(double *)(a9 + v39[11]) = a14;
  *(double *)(a9 + v39[12]) = a15;
  *(double *)(a9 + v39[13]) = a16;
  *(_BYTE *)(a9 + v40) = v51;
  *(double *)(a9 + v39[15]) = a17;
  *(_QWORD *)v41 = a5;
  *(_BYTE *)(v41 + 8) = a6 & 1;
  *(_BYTE *)(a9 + v50) = v52;
  *(_QWORD *)v42 = a8;
  *(_BYTE *)(v42 + 8) = a18 & 1;
  *(_QWORD *)(a9 + v39[19]) = a19;
  *(_QWORD *)v43 = a20;
  *(_BYTE *)(v43 + 8) = a21 & 1;
  *(_QWORD *)v44 = a22;
  *(_BYTE *)(v44 + 8) = a23 & 1;
  *(_QWORD *)(a9 + v39[22]) = a24;
  *(_QWORD *)(a9 + v39[23]) = a25;
  *(_QWORD *)v45 = a26;
  *(_BYTE *)(v45 + 8) = a27 & 1;
  *(_QWORD *)v46 = a28;
  *(_BYTE *)(v46 + 8) = a29 & 1;
  result = a30;
  *(double *)(a9 + v39[26]) = a30;
  return result;
}

uint64_t sub_1A626DC30(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  char v18;

  v2 = a1 == 0x7473616365726F66 && a2 == 0xED00007472617453;
  if (v2 || (sub_1A6335ABC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x766F4364756F6C63 && a2 == 0xEA00000000007265;
    if (v6 || (sub_1A6335ABC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x80000001A634AB90 || (sub_1A6335ABC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x80000001A634ABB0 || (sub_1A6335ABC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000014 && a2 == 0x80000001A634ABD0 || (sub_1A6335ABC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else
    {
      v7 = a1 == 0x6F697469646E6F63 && a2 == 0xED000065646F436ELL;
      if (v7 || (sub_1A6335ABC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        v8 = a1 == 0x746867696C796164 && a2 == 0xE800000000000000;
        if (v8 || (sub_1A6335ABC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else
        {
          v9 = a1 == 0x79746964696D7568 && a2 == 0xE800000000000000;
          if (v9 || (sub_1A6335ABC() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else if (a1 == 0xD000000000000013 && a2 == 0x80000001A634ABF0 || (sub_1A6335ABC() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 8;
          }
          else if (a1 == 0xD000000000000013 && a2 == 0x80000001A634A5E0 || (sub_1A6335ABC() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 9;
          }
          else if (a1 == 0xD000000000000011 && a2 == 0x80000001A634AC10 || (sub_1A6335ABC() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 10;
          }
          else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001A634AC30 || (sub_1A6335ABC() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 11;
          }
          else
          {
            v10 = a1 == 0x6572757373657270 && a2 == 0xE800000000000000;
            if (v10 || (sub_1A6335ABC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 12;
            }
            else
            {
              v11 = a1 == 0x6572757373657270 && a2 == 0xED0000646E657254;
              if (v11 || (sub_1A6335ABC() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 13;
              }
              else if (a1 == 0xD000000000000011 && a2 == 0x80000001A634AC50 || (sub_1A6335ABC() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 14;
              }
              else
              {
                v12 = a1 == 0x74617265706D6574 && a2 == 0xEB00000000657275;
                if (v12 || (sub_1A6335ABC() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 15;
                }
                else if (a1 == 0xD000000000000013 && a2 == 0x80000001A634AC70 || (sub_1A6335ABC() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 16;
                }
                else if (a1 == 0xD000000000000013 && a2 == 0x80000001A634AC90 || (sub_1A6335ABC() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 17;
                }
                else
                {
                  v13 = a1 == 0x7865646E497675 && a2 == 0xE700000000000000;
                  if (v13 || (sub_1A6335ABC() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 18;
                  }
                  else
                  {
                    v14 = a1 == 0x696C696269736976 && a2 == 0xEA00000000007974;
                    if (v14 || (sub_1A6335ABC() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 19;
                    }
                    else
                    {
                      v15 = a1 == 0x65726944646E6977 && a2 == 0xED00006E6F697463;
                      if (v15 || (sub_1A6335ABC() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 20;
                      }
                      else
                      {
                        v16 = a1 == 0x74737547646E6977 && a2 == 0xE800000000000000;
                        if (v16 || (sub_1A6335ABC() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 21;
                        }
                        else if (a1 == 0x65657053646E6977 && a2 == 0xE900000000000064)
                        {
                          swift_bridgeObjectRelease();
                          return 22;
                        }
                        else
                        {
                          v18 = sub_1A6335ABC();
                          swift_bridgeObjectRelease();
                          if ((v18 & 1) != 0)
                            return 22;
                          else
                            return 23;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1A626E55C()
{
  return 23;
}

uint64_t sub_1A626E564@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A626DC30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A626E588@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A626E55C();
  *a1 = result;
  return result;
}

uint64_t sub_1A626E5AC()
{
  sub_1A618CE7C();
  return sub_1A6335C18();
}

uint64_t sub_1A626E5D4()
{
  sub_1A618CE7C();
  return sub_1A6335C24();
}

void sub_1A626E5FC()
{
  static HourForecast.read(from:)();
}

void sub_1A626E610()
{
  HourForecast.write(to:)();
}

_QWORD *initializeBufferWithCopyOfBuffer for HourForecast(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v33 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A6332C24();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
    *(_QWORD *)((char *)a1 + v8) = *(_QWORD *)((char *)a2 + v8);
    v9 = a3[8];
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    *(_QWORD *)((char *)a1 + v9) = *(_QWORD *)((char *)a2 + v9);
    v10 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
    v11 = a3[12];
    *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
    *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
    v12 = a3[14];
    *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
    *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
    v13 = a3[16];
    *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    v14[8] = v15[8];
    v16 = a3[18];
    *((_BYTE *)a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = v18[8];
    v19 = a3[20];
    *(_QWORD *)((char *)a1 + a3[19]) = *(_QWORD *)((char *)a2 + a3[19]);
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    *(_QWORD *)v20 = *(_QWORD *)v21;
    v20[8] = v21[8];
    v22 = a3[21];
    v23 = a3[22];
    v24 = (char *)a1 + v22;
    v25 = (char *)a2 + v22;
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v24[8] = v25[8];
    *(_QWORD *)((char *)a1 + v23) = *(_QWORD *)((char *)a2 + v23);
    v26 = a3[24];
    *(_QWORD *)((char *)a1 + a3[23]) = *(_QWORD *)((char *)a2 + a3[23]);
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    *(_QWORD *)v27 = *(_QWORD *)v28;
    v27[8] = v28[8];
    v29 = a3[25];
    v30 = a3[26];
    v31 = (char *)a1 + v29;
    v32 = (char *)a2 + v29;
    *(_QWORD *)v31 = *(_QWORD *)v32;
    v31[8] = v32[8];
    *(_QWORD *)((char *)a1 + v30) = *(_QWORD *)((char *)a2 + v30);
  }
  return a1;
}

uint64_t destroy for TideEvent(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A6332C24();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for HourForecast(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = sub_1A6332C24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  v10 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  v11 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  v15 = a3[18];
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
  v18 = a3[20];
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  v21 = a3[21];
  v22 = a3[22];
  v23 = a1 + v21;
  v24 = a2 + v21;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);
  v25 = a3[24];
  *(_QWORD *)(a1 + a3[23]) = *(_QWORD *)(a2 + a3[23]);
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
  v28 = a3[25];
  v29 = a3[26];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_BYTE *)(v30 + 8) = *(_BYTE *)(v31 + 8);
  *(_QWORD *)(a1 + v29) = *(_QWORD *)(a2 + v29);
  return a1;
}

uint64_t assignWithCopy for HourForecast(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v6 = sub_1A6332C24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  v7 = a3[16];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  v11 = a3[18];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = v14;
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  v15 = a3[20];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_BYTE *)(v17 + 8);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = v18;
  v19 = a3[21];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_BYTE *)(v21 + 8);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_BYTE *)(v20 + 8) = v22;
  *(_QWORD *)(a1 + a3[22]) = *(_QWORD *)(a2 + a3[22]);
  *(_QWORD *)(a1 + a3[23]) = *(_QWORD *)(a2 + a3[23]);
  v23 = a3[24];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_BYTE *)(v25 + 8);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_BYTE *)(v24 + 8) = v26;
  v27 = a3[25];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = *(_BYTE *)(v29 + 8);
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *(_BYTE *)(v28 + 8) = v30;
  *(_QWORD *)(a1 + a3[26]) = *(_QWORD *)(a2 + a3[26]);
  return a1;
}

uint64_t initializeWithTake for HourForecast(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = sub_1A6332C24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  v10 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  v11 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  v15 = a3[18];
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
  v18 = a3[20];
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  v21 = a3[21];
  v22 = a3[22];
  v23 = a1 + v21;
  v24 = a2 + v21;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);
  v25 = a3[24];
  *(_QWORD *)(a1 + a3[23]) = *(_QWORD *)(a2 + a3[23]);
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
  v28 = a3[25];
  v29 = a3[26];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_BYTE *)(v30 + 8) = *(_BYTE *)(v31 + 8);
  *(_QWORD *)(a1 + v29) = *(_QWORD *)(a2 + v29);
  return a1;
}

uint64_t assignWithTake for HourForecast(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = sub_1A6332C24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  v10 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  v11 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  v15 = a3[18];
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
  v18 = a3[20];
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  v21 = a3[21];
  v22 = a3[22];
  v23 = a1 + v21;
  v24 = a2 + v21;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);
  v25 = a3[24];
  *(_QWORD *)(a1 + a3[23]) = *(_QWORD *)(a2 + a3[23]);
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
  v28 = a3[25];
  v29 = a3[26];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_BYTE *)(v30 + 8) = *(_BYTE *)(v31 + 8);
  *(_QWORD *)(a1 + v29) = *(_QWORD *)(a2 + v29);
  return a1;
}

uint64_t sub_1A626EE6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v8;

  v6 = OUTLINED_FUNCTION_6();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 40));
  if (v8 >= 2)
    return ((v8 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

void sub_1A626EEF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_6();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_BYTE *)(a1 + *(int *)(a4 + 40)) = a2 + 1;
    OUTLINED_FUNCTION_3_1();
  }
}

unint64_t sub_1A626EF5C()
{
  unint64_t result;

  result = qword_1EE847260;
  if (!qword_1EE847260)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633D1D4, &type metadata for HourForecast.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847260);
  }
  return result;
}

void static AirQualityDescriptor.name.getter()
{
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_53();
}

void static AirQualityDescriptor.name.setter()
{
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_1_8();
}

uint64_t (*static AirQualityDescriptor.name.modify())()
{
  OUTLINED_FUNCTION_0_11();
  return j__swift_endAccess;
}

uint64_t sub_1A626F050()
{
  uint64_t result;

  sub_1A6334CDC();
  sub_1A63353F0();
  result = swift_bridgeObjectRelease();
  qword_1ED21C7B0 = 0x2E312E312E30;
  *(_QWORD *)algn_1ED21C7B8 = 0xE600000000000000;
  return result;
}

void static AirQualityDescriptor.version.getter()
{
  if (qword_1ED21C7C0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_53();
}

void static AirQualityDescriptor.version.setter()
{
  if (qword_1ED21C7C0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_1_8();
}

uint64_t (*static AirQualityDescriptor.version.modify())()
{
  if (qword_1ED21C7C0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  return j_j__swift_endAccess;
}

ValueMetadata *type metadata accessor for AirQualityDescriptor()
{
  return &type metadata for AirQualityDescriptor;
}

void static NextHourForecast.currentlyClearWithRainStarting(on:with:chance:intensity:perceivedIntensity:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 *v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;

  OUTLINED_FUNCTION_9_16();
  v5 = v4;
  v44 = v6;
  v8 = v7;
  v41 = v7;
  v48 = OUTLINED_FUNCTION_24_10(v9);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_2();
  v13 = v12 - v11;
  v14 = OUTLINED_FUNCTION_41_2();
  v46 = *(_QWORD *)(v14 - 8);
  v47 = v14;
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_15_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_6_22(v17, v40);
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_10_15();
  OUTLINED_FUNCTION_49_4();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_7_19();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v40 - v21;
  OUTLINED_FUNCTION_402();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v23);
  v43 = (char *)&v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v40 - v26;
  v42 = (uint64_t)&v40 - v26;
  HIDWORD(v45) = *v5;
  v28 = *(_QWORD *)(v1 + 16);
  OUTLINED_FUNCTION_8_21((uint64_t)v22, v8);
  OUTLINED_FUNCTION_8_21(v0, v44);
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v3);
  v50 = 1;
  OUTLINED_FUNCTION_4_26();
  OUTLINED_FUNCTION_2_30((uint64_t)v22, v0, v2, (uint64_t)v27, 37.323, -122.0322, v40, v41, v42, v43, v44, v45);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE845998);
  v29 = OUTLINED_FUNCTION_18_13();
  v30 = (*(unsigned __int8 *)(*(_QWORD *)(v29 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v29 - 8) + 80);
  v31 = OUTLINED_FUNCTION_16_18();
  v44 = v31;
  *(_OWORD *)(v31 + 16) = xmmword_1A6338E30;
  v32 = v31 + v30;
  v33 = v41;
  OUTLINED_FUNCTION_8_21(v2, v41);
  OUTLINED_FUNCTION_37_4();
  OUTLINED_FUNCTION_40_4(v32);
  OUTLINED_FUNCTION_44_3();
  OUTLINED_FUNCTION_19_14();
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v3);
  OUTLINED_FUNCTION_13_16(v33);
  OUTLINED_FUNCTION_19_14();
  v34 = v42;
  sub_1A618DAAC(v42, (uint64_t)v43);
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_12_15();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE845990);
  v35 = (__n128 *)OUTLINED_FUNCTION_11_14();
  OUTLINED_FUNCTION_43_3(v35, (__n128)xmmword_1A6338890);
  __swift_storeEnumTagSinglePayload(v28, 0, 1, v3);
  OUTLINED_FUNCTION_23_13(SBYTE4(v45));
  OUTLINED_FUNCTION_31_2();
  v36 = OUTLINED_FUNCTION_3_23();
  sub_1A618B35C(v36, v37, (uint64_t (*)(_QWORD))type metadata accessor for ForecastMinute);
  v38 = (int *)v48;
  v39 = OUTLINED_FUNCTION_45_3();
  sub_1A618B35C(v39, v13, (uint64_t (*)(_QWORD))type metadata accessor for Metadata);
  *(_QWORD *)(v13 + v38[5]) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v13 + v38[6]) = v44;
  OUTLINED_FUNCTION_29_7();
  *(_QWORD *)(v13 + v38[8]) = v35;
  sub_1A618B35C(v13, v49, (uint64_t (*)(_QWORD))type metadata accessor for NextHourForecast);
  sub_1A6234C30(v34);
  OUTLINED_FUNCTION_1_27();
}

void static NextHourForecast.currentlyRainingWithClearConditionsStarting(on:with:chance:intensity:perceivedIntensity:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  __n128 *v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;

  OUTLINED_FUNCTION_9_16();
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v41 = v8;
  v48 = OUTLINED_FUNCTION_24_10(v10);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v11);
  v45 = (uint64_t)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = OUTLINED_FUNCTION_41_2();
  v46 = *(_QWORD *)(v13 - 8);
  v47 = v13;
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_15_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_6_22(v16, v40);
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_10_15();
  OUTLINED_FUNCTION_49_4();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_7_19();
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v40 - v20;
  OUTLINED_FUNCTION_402();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v22);
  v43 = (char *)&v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v40 - v25;
  HIDWORD(v44) = *v5;
  v27 = *(_QWORD *)(v1 + 16);
  OUTLINED_FUNCTION_8_21((uint64_t)v21, v9);
  OUTLINED_FUNCTION_8_21(v0, v7);
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v3);
  v50 = 1;
  OUTLINED_FUNCTION_4_26();
  v28 = (uint64_t)v26;
  OUTLINED_FUNCTION_2_30((uint64_t)v21, v0, v2, (uint64_t)v26, 37.323, -122.0322, v40, v41, v42, v43, v44, v45);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE845998);
  v29 = *(_QWORD *)(OUTLINED_FUNCTION_18_13() - 8);
  v30 = *(_QWORD *)(v29 + 72);
  v31 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v32 = OUTLINED_FUNCTION_16_18();
  v42 = v32;
  *(_OWORD *)(v32 + 16) = xmmword_1A6338E30;
  v33 = v32 + v31;
  OUTLINED_FUNCTION_8_21(v2, v41);
  OUTLINED_FUNCTION_37_4();
  OUTLINED_FUNCTION_13_16((uint64_t)v21);
  OUTLINED_FUNCTION_44_3();
  OUTLINED_FUNCTION_19_14();
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v3);
  OUTLINED_FUNCTION_40_4(v33 + v30);
  OUTLINED_FUNCTION_19_14();
  sub_1A618DAAC(v28, (uint64_t)v43);
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_12_15();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE845990);
  v34 = (__n128 *)OUTLINED_FUNCTION_11_14();
  OUTLINED_FUNCTION_43_3(v34, (__n128)xmmword_1A6338890);
  OUTLINED_FUNCTION_14_13(v27);
  OUTLINED_FUNCTION_31_2();
  v35 = OUTLINED_FUNCTION_3_23();
  sub_1A618B35C(v35, v36, (uint64_t (*)(_QWORD))type metadata accessor for ForecastMinute);
  v37 = (int *)v48;
  v38 = v45;
  v39 = OUTLINED_FUNCTION_45_3();
  sub_1A618B35C(v39, v38, (uint64_t (*)(_QWORD))type metadata accessor for Metadata);
  *(_QWORD *)(v38 + v37[5]) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v38 + v37[6]) = v42;
  OUTLINED_FUNCTION_29_7();
  *(_QWORD *)(v38 + v37[8]) = v34;
  sub_1A618B35C(v38, v49, (uint64_t (*)(_QWORD))type metadata accessor for NextHourForecast);
  sub_1A6234C30(v28);
  OUTLINED_FUNCTION_1_27();
}

uint64_t static NextHourForecast.clear(until:with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t HourForecast;
  uint64_t v41;
  uint64_t v42;
  char v43;

  v39 = a2;
  v42 = a3;
  HourForecast = type metadata accessor for NextHourForecast();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_2();
  v7 = v6 - v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_919();
  v11 = v9 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v38 - v13;
  v15 = sub_1A6332C24();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_919();
  v19 = v17 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v38 - v21;
  OUTLINED_FUNCTION_402();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_919();
  v26 = v24 - v25;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v38 - v28;
  v41 = a1;
  sub_1A618752C(a1, (uint64_t)v14);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15) == 1)
  {
    sub_1A6332C18();
    sub_1A6187574((uint64_t)v14);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v22, v14, v15);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v19, v39, v15);
  OUTLINED_FUNCTION_36_0(v11, 1);
  v43 = 1;
  OUTLINED_FUNCTION_2_30((uint64_t)v22, v19, v11, (uint64_t)v29, 37.323, -122.0322, 0, 0, 0, &v43, 0, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE845998);
  OUTLINED_FUNCTION_18_13();
  OUTLINED_FUNCTION_47_3();
  v32 = v31 & ~v30;
  v33 = OUTLINED_FUNCTION_16_18();
  *(_OWORD *)(v33 + 16) = xmmword_1A6338890;
  sub_1A6332B40();
  static ForecastSummary.clear(starting:until:)(v41, v33 + v32);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v19, v15);
  sub_1A618DAAC((uint64_t)v29, v26);
  sub_1A6332C18();
  OUTLINED_FUNCTION_36_0(v11, 0);
  v34 = (int *)HourForecast;
  v35 = v7 + *(int *)(HourForecast + 28);
  OUTLINED_FUNCTION_36_0(v35, 1);
  sub_1A618B35C(v26, v7, (uint64_t (*)(_QWORD))type metadata accessor for Metadata);
  v36 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v7 + v34[5]) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v7 + v34[6]) = v33;
  sub_1A618D2C8(v11, v35);
  *(_QWORD *)(v7 + v34[8]) = v36;
  sub_1A618B35C(v7, v42, (uint64_t (*)(_QWORD))type metadata accessor for NextHourForecast);
  return sub_1A6234C30((uint64_t)v29);
}

void static NextHourForecast.rain(until:with:chance:intensity:perceivedIntensity:)()
{
  unsigned __int8 *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  uint64_t v48[2];
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned __int8 *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;

  OUTLINED_FUNCTION_9_16();
  v53 = v0;
  v2 = v1;
  v4 = v3;
  *(_QWORD *)&v49 = v5;
  v7 = v6;
  v57 = OUTLINED_FUNCTION_24_10(v8);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_2();
  v12 = v11 - v10;
  v56 = OUTLINED_FUNCTION_41_2();
  v54 = *(_QWORD *)(v56 - 8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_2();
  v16 = v15 - v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_27();
  v55 = v18;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v48 - v20;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v48 - v23;
  v25 = sub_1A6332C24();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_919();
  v29 = v27 - v28;
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)v48 - v31;
  OUTLINED_FUNCTION_402();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_27();
  v52 = v34;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)v48 - v36;
  HIDWORD(v51) = *v53;
  v53 = (unsigned __int8 *)v7;
  sub_1A618752C(v7, (uint64_t)v24);
  if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25) == 1)
  {
    sub_1A6332C18();
    sub_1A6187574((uint64_t)v24);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v32, v24, v25);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v26 + 16))(v29, v49, v25);
  OUTLINED_FUNCTION_20_0((uint64_t)v21, 1);
  v59 = 1;
  OUTLINED_FUNCTION_4_26();
  OUTLINED_FUNCTION_2_30((uint64_t)v32, v29, (uint64_t)v21, (uint64_t)v37, 37.323, -122.0322, v48[0], (uint64_t)v37, v49, *((char **)&v49 + 1), v50, v51);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE845998);
  OUTLINED_FUNCTION_18_13();
  OUTLINED_FUNCTION_47_3();
  v38 = OUTLINED_FUNCTION_16_18();
  v49 = xmmword_1A6338890;
  *(_OWORD *)(v38 + 16) = xmmword_1A6338890;
  sub_1A6332B40();
  static ForecastSummary.rain(starting:until:chance:intensity:)(v29, v53, v4, v2);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v29, v25);
  v39 = (uint64_t)v37;
  v40 = v52;
  sub_1A618DAAC(v39, v52);
  sub_1A6332C18();
  OUTLINED_FUNCTION_20_0((uint64_t)v21, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE845990);
  v41 = OUTLINED_FUNCTION_11_14();
  *(_OWORD *)(v41 + 16) = v49;
  v42 = v55;
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_20_0(v42, 0);
  OUTLINED_FUNCTION_23_13(SBYTE4(v51));
  v44 = v43;
  OUTLINED_FUNCTION_20_0(v16, 1);
  sub_1A618D2C8(v42, v16);
  v45 = v56;
  *(double *)(v16 + *(int *)(v56 + 20)) = v4;
  *(double *)(v16 + *(int *)(v45 + 24)) = v2;
  *(_QWORD *)(v16 + *(int *)(v45 + 28)) = v44;
  sub_1A618B35C(v16, v41 + v29, (uint64_t (*)(_QWORD))type metadata accessor for ForecastMinute);
  v46 = (int *)v57;
  v47 = v12 + *(int *)(v57 + 28);
  OUTLINED_FUNCTION_20_0(v47, 1);
  sub_1A618B35C(v40, v12, (uint64_t (*)(_QWORD))type metadata accessor for Metadata);
  *(_QWORD *)(v12 + v46[5]) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v12 + v46[6]) = v38;
  sub_1A618D2C8((uint64_t)v21, v47);
  *(_QWORD *)(v12 + v46[8]) = v41;
  sub_1A618B35C(v12, v58, (uint64_t (*)(_QWORD))type metadata accessor for NextHourForecast);
  sub_1A6234C30(v48[1]);
  OUTLINED_FUNCTION_1_27();
}

void static NextHourForecast.currentlyClearWithRainStarting(on:with:chance:intensity:perceivedIntensity:stopping:)()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[2];
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;

  OUTLINED_FUNCTION_9_16();
  v45 = OUTLINED_FUNCTION_21_11(v6, v7, v8);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v9);
  v11 = OUTLINED_FUNCTION_27_6(v10, v38[0]);
  v43 = *(_QWORD *)(v11 - 8);
  v44 = v11;
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_15_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_6_22(v14, v38[0]);
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_10_15();
  OUTLINED_FUNCTION_50_3();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_7_19();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v38 - v18;
  OUTLINED_FUNCTION_402();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v20);
  v39 = (char *)v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v38 - v23;
  v38[0] = (uint64_t)v38 - v23;
  HIDWORD(v41) = *v2;
  OUTLINED_FUNCTION_8_21((uint64_t)v19, v3);
  OUTLINED_FUNCTION_8_21(v0, (uint64_t)v40);
  __swift_storeEnumTagSinglePayload(v4, 1, 1, v5);
  v46 = 1;
  OUTLINED_FUNCTION_4_26();
  OUTLINED_FUNCTION_2_30((uint64_t)v19, v0, v4, (uint64_t)v24, 37.323, -122.0322, v38[0], v38[1], (char)v39, v40, v41, v42);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE845998);
  v25 = *(_QWORD *)(OUTLINED_FUNCTION_18_13() - 8);
  v26 = *(_QWORD *)(v25 + 72);
  v27 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v28 = OUTLINED_FUNCTION_16_18();
  v40 = (char *)v28;
  *(_OWORD *)(v28 + 16) = xmmword_1A6336CF0;
  v29 = v28 + v27;
  OUTLINED_FUNCTION_8_21(v4, v3);
  OUTLINED_FUNCTION_17_15(v4, 0);
  OUTLINED_FUNCTION_40_4(v29);
  v30 = *(_QWORD *)(v1 + 8);
  OUTLINED_FUNCTION_30_7();
  OUTLINED_FUNCTION_19_14();
  OUTLINED_FUNCTION_8_21(v4, v42);
  __swift_storeEnumTagSinglePayload(v4, 0, 1, v5);
  OUTLINED_FUNCTION_13_16(v3);
  OUTLINED_FUNCTION_19_14();
  OUTLINED_FUNCTION_17_15(v4, 1);
  OUTLINED_FUNCTION_40_4(v29 + 2 * v26);
  OUTLINED_FUNCTION_30_7();
  OUTLINED_FUNCTION_19_14();
  OUTLINED_FUNCTION_39_3();
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_12_15();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE845990);
  v31 = (__n128 *)OUTLINED_FUNCTION_26_7();
  OUTLINED_FUNCTION_42_3(v31, (__n128)xmmword_1A6338890);
  OUTLINED_FUNCTION_14_13(v30);
  OUTLINED_FUNCTION_32_4();
  v32 = OUTLINED_FUNCTION_3_23();
  sub_1A618B35C(v32, v33, (uint64_t (*)(_QWORD))type metadata accessor for ForecastMinute);
  v34 = OUTLINED_FUNCTION_25_7();
  sub_1A618B35C(v34, v35, (uint64_t (*)(_QWORD))type metadata accessor for Metadata);
  OUTLINED_FUNCTION_28_7(MEMORY[0x1E0DEE9D8]);
  v36 = OUTLINED_FUNCTION_48_3();
  sub_1A618B35C(v36, v37, (uint64_t (*)(_QWORD))type metadata accessor for NextHourForecast);
  sub_1A6234C30(v26);
  OUTLINED_FUNCTION_1_27();
}

void static NextHourForecast.currentlyRainingWithClearConditionsStarting(on:with:chance:intensity:perceivedIntensity:resuming:)()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  __n128 *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[2];
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;

  OUTLINED_FUNCTION_9_16();
  v45 = OUTLINED_FUNCTION_21_11(v6, v7, v8);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v9);
  v11 = OUTLINED_FUNCTION_27_6(v10, v38[0]);
  v43 = *(_QWORD *)(v11 - 8);
  v44 = v11;
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_15_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_6_22(v14, v38[0]);
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_10_15();
  OUTLINED_FUNCTION_50_3();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_7_19();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v38 - v18;
  OUTLINED_FUNCTION_402();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v20);
  v39 = (char *)v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v38 - v23;
  v38[0] = (uint64_t)v38 - v23;
  HIDWORD(v41) = *v2;
  OUTLINED_FUNCTION_8_21((uint64_t)v19, v3);
  OUTLINED_FUNCTION_8_21(v0, (uint64_t)v40);
  __swift_storeEnumTagSinglePayload(v4, 1, 1, v5);
  v46 = 1;
  OUTLINED_FUNCTION_4_26();
  OUTLINED_FUNCTION_2_30((uint64_t)v19, v0, v4, (uint64_t)v24, 37.323, -122.0322, v38[0], v38[1], (char)v39, v40, v41, v42);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE845998);
  v25 = *(_QWORD *)(OUTLINED_FUNCTION_18_13() - 8);
  v26 = *(_QWORD *)(v25 + 72);
  v27 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v28 = OUTLINED_FUNCTION_16_18();
  v40 = (char *)v28;
  *(_OWORD *)(v28 + 16) = xmmword_1A6336CF0;
  v29 = v28 + v27;
  OUTLINED_FUNCTION_8_21(v4, v3);
  OUTLINED_FUNCTION_17_15(v4, 0);
  OUTLINED_FUNCTION_13_16((uint64_t)v19);
  v30 = *(_QWORD *)(v1 + 8);
  OUTLINED_FUNCTION_30_7();
  OUTLINED_FUNCTION_19_14();
  OUTLINED_FUNCTION_8_21(v4, v42);
  __swift_storeEnumTagSinglePayload(v4, 0, 1, v5);
  OUTLINED_FUNCTION_40_4(v29 + v26);
  OUTLINED_FUNCTION_19_14();
  OUTLINED_FUNCTION_17_15(v4, 1);
  OUTLINED_FUNCTION_13_16((uint64_t)v19);
  OUTLINED_FUNCTION_30_7();
  OUTLINED_FUNCTION_19_14();
  OUTLINED_FUNCTION_39_3();
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_12_15();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE845990);
  v31 = (__n128 *)OUTLINED_FUNCTION_26_7();
  OUTLINED_FUNCTION_42_3(v31, (__n128)xmmword_1A6338890);
  OUTLINED_FUNCTION_14_13(v30);
  OUTLINED_FUNCTION_32_4();
  v32 = OUTLINED_FUNCTION_3_23();
  sub_1A618B35C(v32, v33, (uint64_t (*)(_QWORD))type metadata accessor for ForecastMinute);
  v34 = OUTLINED_FUNCTION_25_7();
  sub_1A618B35C(v34, v35, (uint64_t (*)(_QWORD))type metadata accessor for Metadata);
  OUTLINED_FUNCTION_28_7(MEMORY[0x1E0DEE9D8]);
  v36 = OUTLINED_FUNCTION_48_3();
  sub_1A618B35C(v36, v37, (uint64_t (*)(_QWORD))type metadata accessor for NextHourForecast);
  sub_1A6234C30(v26);
  OUTLINED_FUNCTION_1_27();
}

uint64_t OUTLINED_FUNCTION_37_4()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
  return sub_1A6332B40();
}

uint64_t sub_1A6270428@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21A248);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_2();
  v5 = v4 - v3;
  type metadata accessor for Metadata();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_2();
  v9 = v8 - v7;
  sub_1A6334034();
  v10 = sub_1A6333D70();
  result = __swift_getEnumTagSinglePayload(v5, 1, v10);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1A6270910(v9);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v5, v10);
    sub_1A6270534();
    v13 = v12;
    sub_1A618D95C(v9, a1);
    result = type metadata accessor for DailySummary();
    *(_QWORD *)(a1 + *(int *)(result + 20)) = v13;
  }
  return result;
}

void sub_1A6270534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847310);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_2();
  v3 = v2 - v1;
  v4 = sub_1A6334040();
  if (v4 < 0)
  {
LABEL_15:
    __break(1u);
    return;
  }
  v5 = v4;
  if (v4)
  {
    v6 = 0;
    v7 = MEMORY[0x1E0DEE9D8];
    v17 = v4;
    while (v5 != v6)
    {
      sub_1A6334028();
      sub_1A6270708(v3, (uint64_t)&v25);
      sub_1A6270888(v3);
      v8 = v26;
      if (v26)
      {
        v9 = v25;
        v11 = v27;
        v10 = v28;
        v24 = v36;
        v22 = v34;
        v23 = v35;
        v20 = v32;
        v21 = v33;
        v12 = v29;
        v18 = v30;
        v19 = v31;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_2_31();
          v7 = v15;
        }
        v13 = *(_QWORD *)(v7 + 16);
        if (v13 >= *(_QWORD *)(v7 + 24) >> 1)
        {
          OUTLINED_FUNCTION_2_31();
          v7 = v16;
        }
        *(_QWORD *)(v7 + 16) = v13 + 1;
        v14 = v7 + 96 * v13;
        *(_QWORD *)(v14 + 32) = v9;
        *(_QWORD *)(v14 + 40) = v8;
        *(_QWORD *)(v14 + 48) = v11;
        *(_BYTE *)(v14 + 56) = v10 & 1;
        *(_QWORD *)(v14 + 64) = v12;
        *(_BYTE *)(v14 + 72) = v18 & 1;
        *(_QWORD *)(v14 + 80) = v19;
        *(_BYTE *)(v14 + 88) = v20 & 1;
        *(_QWORD *)(v14 + 96) = v21;
        *(_BYTE *)(v14 + 104) = v22 & 1;
        *(_QWORD *)(v14 + 112) = v23;
        *(_BYTE *)(v14 + 120) = v24 & 1;
        v5 = v17;
      }
      if (v5 == ++v6)
        return;
    }
    __break(1u);
    goto LABEL_15;
  }
}

uint64_t sub_1A6270708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  float v18;
  double v19;
  float v20;
  float v21;
  float v22;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847310);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_2();
  v7 = v6 - v5;
  v8 = sub_1A6333F50();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_2();
  v12 = v11 - v10;
  sub_1A62708C8(a1, v7);
  if (__swift_getEnumTagSinglePayload(v7, 1, v8) == 1)
  {
    result = sub_1A6270888(v7);
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    v14 = 0.0;
    v15 = 0.0;
    v16 = 0.0;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v12, v7, v8);
    v17 = sub_1A6333F44();
    sub_1A6333F2C();
    v19 = v18;
    sub_1A6333F20();
    v14 = v20;
    sub_1A6333F38();
    v15 = v21;
    sub_1A6333F14();
    v16 = v22;
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v12, v8);
    *(_OWORD *)a2 = xmmword_1A633D2B0;
    *(_QWORD *)(a2 + 16) = v17;
    *(_QWORD *)(a2 + 24) = 0;
    *(double *)(a2 + 32) = v19;
    *(_QWORD *)(a2 + 40) = 0;
  }
  *(double *)(a2 + 48) = v14;
  *(_QWORD *)(a2 + 56) = 0;
  *(double *)(a2 + 64) = v15;
  *(_QWORD *)(a2 + 72) = 0;
  *(double *)(a2 + 80) = v16;
  *(_BYTE *)(a2 + 88) = 0;
  return result;
}

uint64_t type metadata accessor for DailySummaryModelFactory()
{
  return objc_opt_self();
}

uint64_t sub_1A6270888(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847310);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A62708C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A6270910@<X0>(uint64_t a1@<X8>)
{
  return sub_1A627091C((void (*)(unint64_t))sub_1A6324A70, a1);
}

uint64_t sub_1A627091C@<X0>(void (*a1)(unint64_t)@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  float v13;
  double v14;
  float v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31[5];

  v30 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_2();
  v29 = v5 - v4;
  sub_1A6332C24();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v28 - v10;
  sub_1A6333D58();
  sub_1A6332BD0();
  sub_1A6333C74();
  sub_1A6332BD0();
  v12 = sub_1A6333CA4();
  a1(v12 | ((HIDWORD(v12) & 1) << 32));
  sub_1A6333D4C();
  v14 = v13;
  sub_1A6333D64();
  v16 = v15;
  v28 = sub_1A6333D40();
  v18 = v17;
  v19 = sub_1A6333C98();
  v21 = v20;
  v22 = sub_1A6333C8C();
  v24 = v23;
  LOBYTE(a1) = sub_1A6333CBC() & 1;
  v31[0] = 0;
  v25 = sub_1A6333CB0();
  return Metadata.init(readTime:expireTime:reportedTime:version:latitude:longitude:language:providerName:providerLogo:temporarilyUnavailable:units:attributionURL:)((uint64_t)v11, (uint64_t)v8, v29, 2, v28, v18, v19, v21, v30, v14, v16, v22, v24, (char)a1, v31, v25, v26);
}

void sub_1A6270AC0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  double v11;
  double v12;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8469C0);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_5_20();
  sub_1A63349F4();
  OUTLINED_FUNCTION_7_20();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_2_3();
  sub_1A62711D4(a1, v2, &qword_1EE8469C0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v2, 1, v3);
  if (EnumTagSinglePayload == 1)
  {
    sub_1A61DB454(v2, &qword_1EE8469C0);
    v11 = 0.0;
    v12 = 0.0;
  }
  else
  {
    v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v4, v2, v3);
    v11 = MEMORY[0x1A85BD700](v13);
    v12 = MEMORY[0x1A85BD6F4]();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v3);
  }
  *(double *)a2 = v11;
  *(double *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = EnumTagSinglePayload == 1;
  OUTLINED_FUNCTION_3_24();
}

uint64_t sub_1A6270BC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  uint64_t result;
  double v12;
  double v13;
  double v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8469B8);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_2_3();
  sub_1A6334718();
  OUTLINED_FUNCTION_7_20();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_5_20();
  sub_1A62711D4(a1, v4, &qword_1EE8469B8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v4, 1, v3);
  if (EnumTagSinglePayload == 1)
  {
    result = sub_1A61DB454(v4, &qword_1EE8469B8);
    v12 = 0.0;
    v13 = 0.0;
    v14 = 0.0;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v2, v4, v3);
    v12 = (double)sub_1A633470C() / 100.0;
    v13 = MEMORY[0x1A85BD418]();
    v14 = MEMORY[0x1A85BD40C]();
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v3);
  }
  *(double *)a2 = v12;
  *(double *)(a2 + 8) = v13;
  *(double *)(a2 + 16) = v14;
  *(_BYTE *)(a2 + 24) = EnumTagSinglePayload == 1;
  return result;
}

void sub_1A6270CFC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21A248);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_2();
  v6 = v5 - v4;
  type metadata accessor for Metadata();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_2_3();
  sub_1A6333248();
  v8 = sub_1A6333D70();
  if (__swift_getEnumTagSinglePayload(v6, 1, v8) == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1A627091C((void (*)(unint64_t))sub_1A6324A70, v1);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
    sub_1A6270E1C();
    v10 = v9;
    sub_1A6333230();
    v11 = type metadata accessor for MonthlyWeatherStatistics();
    sub_1A6332BD0();
    sub_1A618D95C(v1, a1);
    *(_QWORD *)(a1 + *(int *)(v11 + 20)) = v10;
    OUTLINED_FUNCTION_3_24();
  }
}

void sub_1A6270E1C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  char v22;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8473B0);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_11();
  v2 = sub_1A6333224();
  if (v2 < 0)
  {
LABEL_15:
    __break(1u);
    return;
  }
  v3 = v2;
  if (v2)
  {
    v4 = 0;
    v5 = MEMORY[0x1E0DEE9D8];
    while (v3 != v4)
    {
      sub_1A633323C();
      sub_1A6270FB0(v0, (uint64_t)&v16);
      sub_1A61DB454(v0, &qword_1EE8473B0);
      if ((v22 & 1) == 0)
      {
        v14 = v16;
        v15 = v19;
        v6 = v20;
        v7 = v21;
        v8 = v17;
        v9 = v18;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_6_23();
          v5 = v12;
        }
        v10 = *(_QWORD *)(v5 + 16);
        if (v10 >= *(_QWORD *)(v5 + 24) >> 1)
        {
          OUTLINED_FUNCTION_6_23();
          v5 = v13;
        }
        *(_QWORD *)(v5 + 16) = v10 + 1;
        v11 = v5 + (v10 << 6);
        *(_OWORD *)(v11 + 32) = v14;
        *(_QWORD *)(v11 + 48) = v8;
        *(_BYTE *)(v11 + 56) = v9 & 1;
        *(_OWORD *)(v11 + 64) = v15;
        *(_QWORD *)(v11 + 80) = v6;
        *(_BYTE *)(v11 + 88) = v7 & 1;
      }
      if (v3 == ++v4)
        return;
    }
    __break(1u);
    goto LABEL_15;
  }
}

uint64_t sub_1A6270FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int EnumTagSinglePayload;
  uint64_t result;
  char v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  char v30;
  _QWORD v31[2];
  unsigned __int8 v32;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8469B8);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8469C0);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_2();
  v9 = v8 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8473B0);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_2();
  v13 = v12 - v11;
  v14 = sub_1A6333BCC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_2();
  v18 = v17 - v16;
  sub_1A62711D4(a1, v13, &qword_1EE8473B0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v13, 1, v14);
  if (EnumTagSinglePayload == 1)
  {
    result = sub_1A61DB454(v13, &qword_1EE8473B0);
    v21 = 0;
    v22 = 0uLL;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_QWORD *)(a2 + 32) = 0;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v18, v13, v14);
    v27 = (char)sub_1A6333BC0();
    sub_1A6333BA8();
    sub_1A6270AC0(v9, (uint64_t)v31);
    sub_1A61DB454(v9, &qword_1EE8469C0);
    v23 = v31[0];
    v26 = v31[1];
    v24 = v32;
    sub_1A6333BB4();
    sub_1A6270BC4(v2, (uint64_t)&v28);
    sub_1A61DB454(v2, &qword_1EE8469B8);
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v18, v14);
    v25 = v28;
    v22 = v29;
    v21 = v30;
    *(_QWORD *)a2 = v27;
    *(_QWORD *)(a2 + 8) = v23;
    *(_QWORD *)(a2 + 16) = v26;
    *(_QWORD *)(a2 + 24) = v24;
    *(_QWORD *)(a2 + 32) = v25;
  }
  *(_OWORD *)(a2 + 40) = v22;
  *(_BYTE *)(a2 + 56) = v21;
  *(_BYTE *)(a2 + 57) = EnumTagSinglePayload == 1;
  return result;
}

uint64_t type metadata accessor for MonthlyStatisticsModelFactory()
{
  return objc_opt_self();
}

uint64_t sub_1A62711D4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

WeatherDaemon::XPCActivity __swiftcall XPCActivity.init(identifier:gracePeriod:priority:requiresNetworkConnectivity:)(Swift::String identifier, Swift::Double gracePeriod, WeatherDaemon::XPCActivity::XPCPriority priority, Swift::Bool requiresNetworkConnectivity)
{
  uint64_t v4;
  char v5;
  WeatherDaemon::XPCActivity result;

  v5 = *(_BYTE *)priority;
  *(Swift::String *)v4 = identifier;
  *(Swift::Double *)(v4 + 16) = gracePeriod;
  *(_BYTE *)(v4 + 24) = v5;
  *(_BYTE *)(v4 + 25) = requiresNetworkConnectivity;
  result.identifier = identifier;
  result.gracePeriod = gracePeriod;
  result.priority = priority;
  return result;
}

uint64_t XPCActivity.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A6334CDC();
  return v1;
}

double XPCActivity.gracePeriod.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void XPCActivity.priority.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 24);
}

uint64_t XPCActivity.requiresNetworkConnectivity.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 25);
}

BOOL static XPCActivity.XPCPriority.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t XPCActivity.XPCPriority.hash(into:)()
{
  return sub_1A6335BAC();
}

uint64_t XPCActivity.XPCPriority.hashValue.getter()
{
  sub_1A6335BA0();
  sub_1A6335BAC();
  return sub_1A6335BC4();
}

unint64_t sub_1A627130C()
{
  unint64_t result;

  result = qword_1EE8473B8;
  if (!qword_1EE8473B8)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for XPCActivity.XPCPriority, &type metadata for XPCActivity.XPCPriority);
    atomic_store(result, (unint64_t *)&qword_1EE8473B8);
  }
  return result;
}

uint64_t initializeWithCopy for XPCActivity(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  sub_1A6334CDC();
  return a1;
}

uint64_t assignWithCopy for XPCActivity(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  return a1;
}

__n128 __swift_memcpy26_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for XPCActivity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCActivity(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 26))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCActivity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 26) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 26) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCActivity()
{
  return &type metadata for XPCActivity;
}

uint64_t storeEnumTagSinglePayload for XPCActivity.XPCPriority(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A6271530 + 4 * byte_1A633D335[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A6271564 + 4 * byte_1A633D330[v4]))();
}

uint64_t sub_1A6271564(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A627156C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6271574);
  return result;
}

uint64_t sub_1A6271580(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6271588);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A627158C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6271594(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for XPCActivity.XPCPriority()
{
  return &type metadata for XPCActivity.XPCPriority;
}

uint64_t sub_1A62715B0(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  if (qword_1ED21D318 != -1)
    swift_once();
  v4 = sub_1A6334F04();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED22A3C0);
  swift_bridgeObjectRetain_n();
  v5 = sub_1A6334EEC();
  v6 = sub_1A633569C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    *(_DWORD *)v7 = 136315138;
    sub_1A6334CDC();
    sub_1A61A6A1C(a1, a2, &v11);
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v5, v6, "Requesting weather alert with identifier %s", v7, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_0_5();
  }

  swift_bridgeObjectRelease_n();
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A61F8984();
  v9 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1A62717C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  if (qword_1ED21D318 != -1)
    swift_once();
  v5 = sub_1A6334F04();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED22A3C0);
  v6 = sub_1A6334EEC();
  v7 = sub_1A633569C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_DWORD *)v8 = 141558275;
    v15 = v9;
    sub_1A6335774();
    *(_WORD *)(v8 + 12) = 2081;
    v10 = CLLocationCoordinate2D.id.getter();
    sub_1A61A6A1C(v10, v11, &v15);
    sub_1A6335774();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A6185000, v6, v7, "Fetching daily weather statistics for location: %{private,mask.hash}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_0_5();
  }

  sub_1A6271A04(a2);
  sub_1A6271A04(a3);
  sub_1A6334CDC();
  sub_1A61F8D44();
  v13 = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1A6271A04(uint64_t a1)
{
  uint64_t v1;

  if (*(_BYTE *)(*(_QWORD *)(v1 + 16) + qword_1ED22A388))
    return sub_1A6335AA4();
  else
    return sub_1A6271A60(a1);
}

uint64_t sub_1A6271A60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = a1 - 31;
  if (a1 <= 31)
    v1 = a1;
  if (v1 <= 29)
    v2 = v1;
  else
    v2 = v1 - 29;
  if (v2 > 31)
  {
    OUTLINED_FUNCTION_0_41();
    v2 -= 31;
  }
  if (v2 >= 31)
  {
    OUTLINED_FUNCTION_0_41();
    if ((unint64_t)(v2 - 30) < 0x20)
    {
      v2 -= 30;
    }
    else
    {
      OUTLINED_FUNCTION_0_41();
      v2 -= 61;
    }
    if ((unint64_t)v2 >= 0x1F)
    {
      OUTLINED_FUNCTION_0_41();
      v3 = v2 - 30;
      if ((unint64_t)(v2 - 30) < 0x20
        || (OUTLINED_FUNCTION_0_41(), v3 = v2 - 61, (unint64_t)(v2 - 61) < 0x20))
      {
        v2 = v3;
      }
      else
      {
        OUTLINED_FUNCTION_0_41();
        v2 -= 92;
      }
      if ((unint64_t)v2 >= 0x1F)
      {
        OUTLINED_FUNCTION_0_41();
        if ((unint64_t)(v2 - 30) < 0x20)
        {
          v2 -= 30;
        }
        else
        {
          OUTLINED_FUNCTION_0_41();
          v2 -= 61;
        }
        if ((unint64_t)v2 >= 0x1F)
        {
          OUTLINED_FUNCTION_0_41();
          v2 -= 30;
        }
      }
    }
  }
  if (v2 >= 31)
    v2 = 31;
  sub_1A63353F0();
  OUTLINED_FUNCTION_0_41();
  sub_1A63353F0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D210);
  v4 = swift_allocObject();
  v5 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v4 + 16) = xmmword_1A6338890;
  v6 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v4 + 56) = v5;
  *(_QWORD *)(v4 + 64) = v6;
  *(_QWORD *)(v4 + 32) = v2;
  sub_1A6335324();
  sub_1A63353F0();
  swift_bridgeObjectRelease();
  return 11565;
}

uint64_t type metadata accessor for DailyStatisticsService()
{
  return objc_opt_self();
}

uint64_t sub_1A6271C34()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1A6271C80()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1A6271CA4()
{
  sub_1A6271C80();
  return swift_deallocClassInstance();
}

void sub_1A6271CC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CA58);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_15_4();
  type metadata accessor for WeatherComparisons();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_14_14(v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C1B8);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_15_4();
  type metadata accessor for TideEvents();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_14_14(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C5F8);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_15_4();
  type metadata accessor for WeatherAlerts();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_14_14(v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CE20);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_15_4();
  type metadata accessor for WeatherChange();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_14_14(v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D0A0);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_15_4();
  type metadata accessor for NextHourForecast();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_14_14(v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C910);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_15_4();
  type metadata accessor for News();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_14_14(v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C238);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_15_4();
  type metadata accessor for MarineForecast();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_14_14(v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C6D0);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_15_4();
  type metadata accessor for LocationInfo();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_14_14(v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D098);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_15_4();
  type metadata accessor for HourlyForecast();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_14_14(v27);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CB78);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_2();
  type metadata accessor for DailyForecast();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CBE8);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_2();
  type metadata accessor for CurrentWeather();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D030);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_2();
  type metadata accessor for AirQuality();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_2();
  __asm { BR              X10 }
}

uint64_t sub_1A62720AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1A61AEFEC(*(_QWORD *)(v3 - 96), v1, &qword_1ED21D030);
  if (__swift_getEnumTagSinglePayload(v1, 1, v0) == 1)
  {
    sub_1A61D61C0(v1, &qword_1ED21D030);
    __swift_storeEnumTagSinglePayload(*(_QWORD *)(v3 - 112), 1, 1, v0);
    OUTLINED_FUNCTION_5_21();
    OUTLINED_FUNCTION_10_16();
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B8B0);
    OUTLINED_FUNCTION_10_16();
  }
  else
  {
    OUTLINED_FUNCTION_4_27(v1, v2);
    v4 = *(_QWORD *)(v3 - 112);
    OUTLINED_FUNCTION_4_27(v2, v4);
    __swift_storeEnumTagSinglePayload(v4, 0, 1, v0);
    OUTLINED_FUNCTION_5_21();
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B8B0);
  }
  return swift_storeEnumTagMultiPayload();
}

unint64_t sub_1A6272878()
{
  unint64_t result;

  result = qword_1EE847460;
  if (!qword_1EE847460)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A634063C, &type metadata for WeatherModel.Errors);
    atomic_store(result, (unint64_t *)&qword_1EE847460);
  }
  return result;
}

void static DailyWeatherStatisticsDescriptor.name.getter()
{
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_53();
}

void static DailyWeatherStatisticsDescriptor.name.setter()
{
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_1_8();
}

uint64_t (*static DailyWeatherStatisticsDescriptor.name.modify())()
{
  OUTLINED_FUNCTION_0_11();
  return j__swift_endAccess;
}

uint64_t sub_1A627296C()
{
  uint64_t result;

  sub_1A6334CDC();
  sub_1A63353F0();
  result = swift_bridgeObjectRelease();
  qword_1EE847478 = 0x2E312E302E30;
  unk_1EE847480 = 0xE600000000000000;
  return result;
}

void static DailyWeatherStatisticsDescriptor.version.getter()
{
  if (qword_1EE845400 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_53();
}

void static DailyWeatherStatisticsDescriptor.version.setter()
{
  if (qword_1EE845400 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_1_8();
}

uint64_t (*static DailyWeatherStatisticsDescriptor.version.modify())()
{
  if (qword_1EE845400 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  return j_j__swift_endAccess;
}

ValueMetadata *type metadata accessor for DailyWeatherStatisticsDescriptor()
{
  return &type metadata for DailyWeatherStatisticsDescriptor;
}

uint64_t EventMessage.language.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A6334CDC();
  return v1;
}

void EventMessage.language.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*EventMessage.language.modify())(void)
{
  return nullsub_1;
}

uint64_t EventMessage.message.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1A6334CDC();
  return v1;
}

void EventMessage.message.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*EventMessage.message.modify())(void)
{
  return nullsub_1;
}

WeatherDaemon::EventMessage __swiftcall EventMessage.init(language:message:)(Swift::String_optional language, Swift::String_optional message)
{
  Swift::String_optional *v2;
  WeatherDaemon::EventMessage result;

  *v2 = language;
  v2[1] = message;
  result.message = message;
  result.language = language;
  return result;
}

void EventMessage.init(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847488);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6272D50();
  sub_1A6335BDC();
  if (!v2)
  {
    LOBYTE(v15) = 0;
    sub_1A6335954();
    v9 = v17;
    v14 = v18;
    v19 = 1;
    sub_1A6335954();
    v10 = v15;
    v11 = v16;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v12 = v14;
    *a2 = v9;
    a2[1] = v12;
    a2[2] = v10;
    a2[3] = v11;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  OUTLINED_FUNCTION_1();
}

unint64_t sub_1A6272D50()
{
  unint64_t result;

  result = qword_1EE847490;
  if (!qword_1EE847490)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633D6EC, &type metadata for EventMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847490);
  }
  return result;
}

uint64_t sub_1A6272D8C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x65676175676E616CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1A6335ABC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1A6335ABC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A6272E78(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6567617373656DLL;
  else
    return 0x65676175676E616CLL;
}

uint64_t sub_1A6272EB0()
{
  char *v0;

  return sub_1A6272E78(*v0);
}

uint64_t sub_1A6272EB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A6272D8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A6272EDC()
{
  sub_1A6272D50();
  return sub_1A6335C18();
}

uint64_t sub_1A6272F04()
{
  sub_1A6272D50();
  return sub_1A6335C24();
}

void EventMessage.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  char v10;
  char v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847498);
  v9 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v8[1] = *(_QWORD *)(v1 + 24);
  v8[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6272D50();
  sub_1A6335BF4();
  v11 = 0;
  OUTLINED_FUNCTION_12();
  if (!v2)
  {
    v10 = 1;
    OUTLINED_FUNCTION_12();
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v4);
  OUTLINED_FUNCTION_1();
}

void sub_1A6273034(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  EventMessage.init(from:)(a1, a2);
}

void sub_1A6273048(_QWORD *a1)
{
  EventMessage.encode(to:)(a1);
}

void sub_1A627305C()
{
  static EventMessage.read(from:)();
}

void sub_1A6273070()
{
  EventMessage.write(to:)();
}

uint64_t destroy for EventMessage()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for EventMessage(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  sub_1A6334CDC();
  sub_1A6334CDC();
  return a1;
}

_QWORD *assignWithCopy for EventMessage(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *assignWithTake for EventMessage(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EventMessage(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EventMessage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for EventMessage()
{
  return &type metadata for EventMessage;
}

uint64_t storeEnumTagSinglePayload for EventMessage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A62732A8 + 4 * byte_1A633D569[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A62732DC + 4 * asc_1A633D564[v4]))();
}

uint64_t sub_1A62732DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A62732E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A62732ECLL);
  return result;
}

uint64_t sub_1A62732F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6273300);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A6273304(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A627330C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EventMessage.CodingKeys()
{
  return &type metadata for EventMessage.CodingKeys;
}

unint64_t sub_1A627332C()
{
  unint64_t result;

  result = qword_1EE8474A0;
  if (!qword_1EE8474A0)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633D6C4, &type metadata for EventMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8474A0);
  }
  return result;
}

unint64_t sub_1A627336C()
{
  unint64_t result;

  result = qword_1EE8474A8;
  if (!qword_1EE8474A8)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633D634, &type metadata for EventMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8474A8);
  }
  return result;
}

unint64_t sub_1A62733AC()
{
  unint64_t result;

  result = qword_1EE8474B0;
  if (!qword_1EE8474B0)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633D65C, &type metadata for EventMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8474B0);
  }
  return result;
}

uint64_t DataSet.init(from:)@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  void *v7;
  Swift::String v8;
  char v9;
  _QWORD v11[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_0_28();
  sub_1A6335BD0();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    OUTLINED_FUNCTION_0_28();
    v5 = sub_1A6335AD4();
    v7 = v6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    v8._countAndFlagsBits = v5;
    v8._object = v7;
    DataSet.init(rawValue:)(v8);
    v9 = v11[0];
    if (LOBYTE(v11[0]) == 13)
      v9 = 12;
    *a2 = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

WeatherDaemon::DataSet_optional __swiftcall DataSet.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  WeatherDaemon::DataSet_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A6335918();
  result.value = swift_bridgeObjectRelease();
  v5 = 13;
  if (v3 < 0xD)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t DataSet.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A627353C + 4 * byte_1A633D73C[*v0]))(0x696C617551726961, 0xEA00000000007974);
}

uint64_t sub_1A627353C()
{
  return 0x57746E6572727563;
}

uint64_t sub_1A6273560()
{
  return 0x7473616365726F66;
}

unint64_t sub_1A6273598()
{
  return 0xD000000000000010;
}

uint64_t sub_1A62735B4()
{
  return 1937204590;
}

uint64_t sub_1A62735C4()
{
  return 0x7365646974;
}

uint64_t sub_1A62735D8()
{
  return 0x6D6F43646E657274;
}

unint64_t sub_1A62735FC()
{
  return 0xD000000000000019;
}

uint64_t sub_1A6273620()
{
  return 0x4172656874616577;
}

uint64_t sub_1A6273644()
{
  return 0x4372656874616577;
}

uint64_t sub_1A6273668()
{
  return 0x6369726F74736968;
}

uint64_t sub_1A627368C()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_1A62736A4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A62439E0(*a1, *a2);
}

unint64_t sub_1A62736B4()
{
  unint64_t result;

  result = qword_1EE8474B8;
  if (!qword_1EE8474B8)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for DataSet, &type metadata for DataSet);
    atomic_store(result, (unint64_t *)&qword_1EE8474B8);
  }
  return result;
}

void sub_1A62736F0()
{
  unsigned __int8 *v0;

  sub_1A62DE2AC(*v0);
}

uint64_t sub_1A62736F8(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1A61F46EC(a1, *v1);
}

void sub_1A6273700(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1A61F5CFC(a1, *v1);
}

WeatherDaemon::DataSet_optional sub_1A6273708(Swift::String *a1)
{
  return DataSet.init(rawValue:)(*a1);
}

uint64_t sub_1A6273714@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = DataSet.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A6273738@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return DataSet.init(from:)(a1, a2);
}

uint64_t sub_1A627374C()
{
  sub_1A627387C();
  return sub_1A63354BC();
}

void sub_1A6273798(_BYTE *a1@<X8>)
{
  static DataSet.read(from:)(a1);
}

void sub_1A62737AC()
{
  DataSet.write(to:)();
}

uint64_t storeEnumTagSinglePayload for DataSet(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1A627380C + 4 * byte_1A633D74E[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1A6273840 + 4 * byte_1A633D749[v4]))();
}

uint64_t sub_1A6273840(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6273848(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6273850);
  return result;
}

uint64_t sub_1A627385C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6273864);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1A6273868(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6273870(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1A627387C()
{
  unint64_t result;

  result = qword_1EE8474C0;
  if (!qword_1EE8474C0)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for DataSet, &type metadata for DataSet);
    atomic_store(result, (unint64_t *)&qword_1EE8474C0);
  }
  return result;
}

uint64_t WDSVersion.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x32762F697061;
  if (*v0 != 1)
    v1 = 13174;
  if (*v0)
    return v1;
  else
    return 0x31762F697061;
}

WeatherDaemon::WDSVersion_optional __swiftcall WDSVersion.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  WeatherDaemon::WDSVersion_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A6335918();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_1A6273958(char *a1, char *a2)
{
  sub_1A6243EE4(*a1, *a2);
}

unint64_t sub_1A6273968()
{
  unint64_t result;

  result = qword_1EE8474C8;
  if (!qword_1EE8474C8)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for WDSVersion, &type metadata for WDSVersion);
    atomic_store(result, (unint64_t *)&qword_1EE8474C8);
  }
  return result;
}

void sub_1A62739A4()
{
  sub_1A62DE2B8();
}

uint64_t sub_1A62739AC(uint64_t a1)
{
  char *v1;

  return sub_1A61F4ECC(a1, *v1);
}

void sub_1A62739B4()
{
  sub_1A61F57B0();
}

WeatherDaemon::WDSVersion_optional sub_1A62739BC(Swift::String *a1)
{
  return WDSVersion.init(rawValue:)(*a1);
}

uint64_t sub_1A62739C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = WDSVersion.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t storeEnumTagSinglePayload for WDSVersion(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A6273A38 + 4 * byte_1A633D8DD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A6273A6C + 4 * byte_1A633D8D8[v4]))();
}

uint64_t sub_1A6273A6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6273A74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6273A7CLL);
  return result;
}

uint64_t sub_1A6273A88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6273A90);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A6273A94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6273A9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WDSVersion()
{
  return &type metadata for WDSVersion;
}

uint64_t sub_1A6273AB8()
{
  uint64_t v1;

  sub_1A6273F28();
  sub_1A6334CDC();
  v1 = sub_1A633545C();
  sub_1A63353E4();
  return v1;
}

uint64_t WDSEndpoint.init(url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  _QWORD *v6;

  v4 = OUTLINED_FUNCTION_1_7();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  result = OUTLINED_FUNCTION_12_17();
  v6 = (_QWORD *)(a2 + *(int *)(result + 20));
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for WDSEndpoint(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1A6332A98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    if (!*(_QWORD *)v10)
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
      return a1;
    }
    v11 = *((_QWORD *)v10 + 1);
    *(_QWORD *)v9 = *(_QWORD *)v10;
    *((_QWORD *)v9 + 1) = v11;
  }
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for WDSEndpoint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1A6332A98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a1 + v7);
  v11 = *(_QWORD *)(a2 + v7);
  if (!v10)
  {
    if (v11)
    {
      v13 = *(_QWORD *)(v9 + 8);
      *v8 = v11;
      v8[1] = v13;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    return a1;
  }
  if (!v11)
  {
    swift_release();
    goto LABEL_7;
  }
  v12 = *(_QWORD *)(v9 + 8);
  *v8 = v11;
  v8[1] = v12;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for WDSEndpoint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1A6332A98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  if (*v9)
  {
    v11 = v9[1];
    *v8 = v10;
    v8[1] = v11;
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
  }
  return a1;
}

uint64_t assignWithTake for WDSEndpoint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1A6332A98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *(_QWORD *)(a1 + v7);
  v11 = *v9;
  if (!v10)
  {
    if (v11)
    {
      v13 = v9[1];
      *v8 = v11;
      v8[1] = v13;
      return a1;
    }
LABEL_7:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    return a1;
  }
  if (!v11)
  {
    swift_release();
    goto LABEL_7;
  }
  v12 = v9[1];
  *v8 = v11;
  v8[1] = v12;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WDSEndpoint()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A6273DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;
  int v9;

  v6 = OUTLINED_FUNCTION_1_7();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  v9 = v8 - 1;
  if (v9 < 0)
    v9 = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for WDSEndpoint()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1A6273E84(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_1_7();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
    OUTLINED_FUNCTION_3_1();
  }
}

unint64_t sub_1A6273EEC()
{
  unint64_t result;

  result = qword_1EE8474D0;
  if (!qword_1EE8474D0)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633DA58, &type metadata for WDSEndpoint.Error);
    atomic_store(result, (unint64_t *)&qword_1EE8474D0);
  }
  return result;
}

unint64_t sub_1A6273F28()
{
  unint64_t result;

  result = qword_1EE8474E0;
  if (!qword_1EE8474E0)
  {
    result = MEMORY[0x1A85BEED0](MEMORY[0x1E0DEBB10], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&qword_1EE8474E0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WDSEndpoint.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A6273FB0 + 4 * byte_1A633D9AD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A6273FE4 + 4 * byte_1A633D9A8[v4]))();
}

uint64_t sub_1A6273FE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6273FEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6273FF4);
  return result;
}

uint64_t sub_1A6274000(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6274008);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A627400C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6274014(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WDSEndpoint.Error()
{
  return &type metadata for WDSEndpoint.Error;
}

unint64_t sub_1A6274034()
{
  unint64_t result;

  result = qword_1EE8474E8;
  if (!qword_1EE8474E8)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633DA30, &type metadata for WDSEndpoint.Error);
    atomic_store(result, (unint64_t *)&qword_1EE8474E8);
  }
  return result;
}

void WDSJWTAuthenticatorService.__allocating_init(session:signer:endpoint:version:timeout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  sub_1A6274088(a1, a2, a3, a4, a5, a6, (void (*)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A6276980);
}

void WDSJWTAuthenticatorService.init(session:signer:endpoint:version:timeout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  sub_1A6274088(a1, a2, a3, a4, a5, a6, (void (*)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A6276B08);
}

void sub_1A6274088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void (*a7)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v26 = a7;
  v23 = a4;
  v24 = a5;
  v12 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 32);
  v13 = a6 & 1;
  v14 = __swift_mutable_project_boxed_opaque_existential_1(a1, v12);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v18 + 16))(v17, v15);
  v19 = *(_QWORD *)(a2 + 24);
  v20 = *(_QWORD *)(a2 + 32);
  v21 = __swift_mutable_project_boxed_opaque_existential_1(a2, v19);
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_11();
  (*(void (**)(uint64_t))(v22 + 16))(v7);
  v26(v17, v7, a3, v23, v24, v13, v25, v12, v19, v11, v20);
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1(a1);
  OUTLINED_FUNCTION_7();
}

uint64_t WDSJWTAuthenticatorService.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  sub_1A61E00EC(v0 + OBJC_IVAR____TtC13WeatherDaemon26WDSJWTAuthenticatorService_endpoint);
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t WDSJWTAuthenticatorService.__deallocating_deinit()
{
  WDSJWTAuthenticatorService.deinit();
  return swift_deallocClassInstance();
}

uint64_t WDSJWTAuthenticatorService.generateToken(session:url:)()
{
  uint64_t v0;
  os_log_type_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (qword_1ED21D318 != -1)
    swift_once();
  v2 = sub_1A6334F04();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED22A3C0);
  v3 = sub_1A6334EEC();
  v4 = sub_1A633569C();
  if (OUTLINED_FUNCTION_862(v4))
  {
    v5 = (uint8_t *)OUTLINED_FUNCTION_2_4();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1A6185000, v3, v1, "About to attempt to generate JWT token request ... requesting bundler identifier", v5, 2u);
    OUTLINED_FUNCTION_0_5();
  }

  v6 = (void *)objc_opt_self();
  v7 = sub_1A61BB590(objc_msgSend(v6, sel_mainBundle));
  if (v8)
  {
    v9 = v7;
    v10 = v8;
    if ((sub_1A61BB814() & 1) != 0)
    {
      WDSJWTAuthenticatorService.generateToken(for:endpoint:)(v9, v10, v0 + OBJC_IVAR____TtC13WeatherDaemon26WDSJWTAuthenticatorService_endpoint);
      v12 = v11;
      swift_bridgeObjectRelease();
      return v12;
    }
    sub_1A6334CDC();
    v18 = sub_1A6334EEC();
    v19 = sub_1A6335690();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)OUTLINED_FUNCTION_2_4();
      v25 = OUTLINED_FUNCTION_2_4();
      *(_DWORD *)v20 = 136446210;
      sub_1A6334CDC();
      sub_1A61A6A1C(v9, v10, &v25);
      sub_1A6335774();
      OUTLINED_FUNCTION_37();
      _os_log_impl(&dword_1A6185000, v18, v19, "Aborting: bundleIdentifier is not first party. bundleIdentifier=%{public}s", v20, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_0_5();
    }

    OUTLINED_FUNCTION_19_0();
    v21 = sub_1A61BB590(objc_msgSend(v6, sel_mainBundle));
    v23 = v22;
    sub_1A61F7204();
    OUTLINED_FUNCTION_21();
    *(_QWORD *)v24 = v21;
    *(_QWORD *)(v24 + 8) = v23;
    *(_BYTE *)(v24 + 16) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D238);
    OUTLINED_FUNCTION_1_1();
  }
  else
  {
    v14 = sub_1A6334EEC();
    v15 = sub_1A6335690();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)OUTLINED_FUNCTION_2_4();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1A6185000, v14, v15, "Aborting: could not obtain Bundle.main.bundleIdentifier.", v16, 2u);
      OUTLINED_FUNCTION_0_5();
    }

    sub_1A61F7204();
    OUTLINED_FUNCTION_21();
    *(_QWORD *)v17 = 0;
    *(_QWORD *)(v17 + 8) = 0;
    *(_BYTE *)(v17 + 16) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D238);
    OUTLINED_FUNCTION_1_1();
  }
  return sub_1A6334E50();
}

void WDSJWTAuthenticatorService.generateToken(for:endpoint:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  void *v29;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v5 = v3;
  v33 = a3;
  v37 = a1;
  v35 = *v3;
  v7 = type metadata accessor for WDSEndpoint();
  v31 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v32 = v8;
  v34 = (uint64_t)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A6332C54();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_11();
  if (qword_1ED21D318 != -1)
    swift_once();
  v11 = sub_1A6334F04();
  v12 = __swift_project_value_buffer(v11, (uint64_t)qword_1ED22A3C0);
  swift_bridgeObjectRetain_n();
  v36 = v12;
  v13 = sub_1A6334EEC();
  v14 = sub_1A633569C();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = OUTLINED_FUNCTION_2_4();
    v30[1] = v5;
    v16 = (uint8_t *)v15;
    v39 = OUTLINED_FUNCTION_2_4();
    v30[0] = v10;
    *(_DWORD *)v16 = 136446210;
    sub_1A6334CDC();
    v38 = sub_1A61A6A1C(v37, a2, &v39);
    sub_1A6335774();
    OUTLINED_FUNCTION_37();
    _os_log_impl(&dword_1A6185000, v13, v14, "Starting to generate JWT token request. bundleIdentifier=%{public}s", v16, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_0_5();
  }

  OUTLINED_FUNCTION_19_0();
  v17 = v37;
  sub_1A6332C48();
  v18 = sub_1A6332C30();
  v20 = v19;
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v9);
  v21 = sub_1A6274A8C();
  v23 = v22;
  v37 = *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC13WeatherDaemon26WDSJWTAuthenticatorService_signQueue);
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = v21;
  v24[3] = v23;
  v24[4] = v17;
  v24[5] = a2;
  OUTLINED_FUNCTION_7_22();
  sub_1A6334CDC();
  OUTLINED_FUNCTION_7_22();
  sub_1A6334E98();
  swift_release();
  v25 = v34;
  sub_1A61C221C(v33, v34);
  v26 = (*(unsigned __int8 *)(v31 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = v18;
  v27[3] = v20;
  v27[4] = v21;
  v27[5] = v23;
  sub_1A61C2260(v25, (uint64_t)v27 + v26);
  OUTLINED_FUNCTION_16_1();
  sub_1A6334E2C();
  swift_release();
  swift_release();
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = v18;
  *(_QWORD *)(v28 + 24) = v20;
  v29 = (void *)sub_1A6334DD8();
  sub_1A6334E44();
  sub_1A61A68B8(v21, v23);
  swift_release();
  swift_release();

  OUTLINED_FUNCTION_7();
}

uint64_t sub_1A6274A8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v9[2];

  v0 = sub_1A633533C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1A6335834();
  swift_bridgeObjectRelease();
  strcpy((char *)v9, "{\"bundleId\":\"");
  HIWORD(v9[1]) = -4864;
  sub_1A63353F0();
  sub_1A63353F0();
  sub_1A6335330();
  v4 = sub_1A633530C();
  v6 = v5;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v6 >> 60 == 15)
  {
    sub_1A61F7204();
    swift_allocError();
    *(_QWORD *)v7 = 0;
    *(_QWORD *)(v7 + 8) = 0;
    *(_BYTE *)(v7 + 16) = 3;
    swift_willThrow();
  }
  return v4;
}

uint64_t sub_1A6274BEC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;

  v9 = a1[10];
  v10 = a1[11];
  __swift_project_boxed_opaque_existential_1(a1 + 7, v9);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(a2, a3, a4, a5, v9, v10);
}

uint64_t sub_1A6274C70(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  void *v28;
  id v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;

  v53 = a7;
  v51 = a5;
  v52 = a6;
  v11 = sub_1A6332810();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v47 = (char *)&v44 - v16;
  v17 = *a1;
  v49 = a1[1];
  v50 = v17;
  if (qword_1ED21D318 != -1)
    swift_once();
  v18 = sub_1A6334F04();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED22A3C0);
  swift_bridgeObjectRetain_n();
  v48 = v19;
  v20 = sub_1A6334EEC();
  v21 = sub_1A633569C();
  if (os_log_type_enabled(v20, v21))
  {
    v44 = a2;
    v22 = swift_slowAlloc();
    v46 = v11;
    v23 = (uint8_t *)v22;
    v24 = swift_slowAlloc();
    v45 = v12;
    v25 = v24;
    v56 = v24;
    *(_DWORD *)v23 = 136446210;
    sub_1A6334CDC();
    v55 = sub_1A61A6A1C(a3, a4, &v56);
    a2 = v44;
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v20, v21, "Make new JWT token request. requestIdentifier=%{public}s", v23, 0xCu);
    swift_arrayDestroy();
    v26 = v25;
    v12 = v45;
    MEMORY[0x1A85BEFA8](v26, -1, -1);
    v27 = v23;
    v11 = v46;
    MEMORY[0x1A85BEFA8](v27, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v28 = v54;
  sub_1A62750E0(v51, v52, v50, v49, v53, a3, a4, (uint64_t)v14);
  if (v28)
  {
    v29 = v28;
    v30 = v28;
    v31 = sub_1A6334EEC();
    v32 = sub_1A6335690();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v56 = v34;
      *(_DWORD *)v33 = 136446210;
      v55 = (uint64_t)v28;
      v35 = v28;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD0);
      v36 = sub_1A6335348();
      v55 = sub_1A61A6A1C(v36, v37, &v56);
      sub_1A6335774();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A6185000, v31, v32, "Cannot make token request. error=%{public}s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85BEFA8](v34, -1, -1);
      MEMORY[0x1A85BEFA8](v33, -1, -1);
    }
    else
    {

    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D238);
    swift_allocObject();
    return sub_1A6334E50();
  }
  else
  {
    v38 = a2;
    v39 = v47;
    v40 = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(v47, v14, v11);
    MEMORY[0x1E0C80A78](v40);
    *(&v44 - 4) = v38;
    *(&v44 - 3) = (uint64_t)v39;
    *(&v44 - 2) = v41;
    *(&v44 - 1) = a4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D238);
    swift_allocObject();
    v42 = sub_1A6334E8C();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v39, v11);
  }
  return v42;
}

uint64_t sub_1A62750E0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X8>)
{
  unint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint64_t v34;
  uint8_t *v35;
  uint8_t *v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  unint64_t v40;
  uint64_t v41;
  NSObject *v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  char *v55;
  uint8_t *v56;
  uint8_t *v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  NSObject *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73[2];

  v70 = a5;
  v68 = a8;
  v69 = a7;
  v66 = a1;
  v67 = a2;
  v73[1] = *MEMORY[0x1E0C80C00];
  v12 = sub_1A6332A98();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v58 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v58 - v20;
  v64 = (char *)a3;
  v65 = a4;
  v63 = sub_1A6332AF8();
  v23 = v22;
  LOBYTE(v72) = *(_BYTE *)(v8 + OBJC_IVAR____TtC13WeatherDaemon26WDSJWTAuthenticatorService_version);
  v24 = v71;
  sub_1A61ABA3C(a6, v69, 0, (uint64_t)v21);
  if (v24)
    return swift_bridgeObjectRelease();
  v62 = v15;
  v70 = v13;
  v71 = v23;
  v26 = v8;
  v69 = 0;
  v27 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v28 = v12;
  v27(v18, v21, v12);
  sub_1A63327D4();
  sub_1A63327A4();
  sub_1A61A6288(v66, v67);
  sub_1A63327F8();
  sub_1A6332804();
  v29 = v21;
  if ((sub_1A628CA50((uint64_t)v64, v65) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED21D318 != -1)
      swift_once();
    v30 = sub_1A6334F04();
    __swift_project_value_buffer(v30, (uint64_t)qword_1ED22A3C0);
    v31 = sub_1A6334EEC();
    v32 = sub_1A633569C();
    v33 = os_log_type_enabled(v31, v32);
    v34 = v70;
    if (v33)
    {
      v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v35 = 0;
      _os_log_impl(&dword_1A6185000, v31, v32, "Not adding authentication header to token request - Signature is missing", v35, 2u);
      v36 = v35;
      v29 = v21;
      v28 = v12;
      MEMORY[0x1A85BEFA8](v36, -1, -1);
    }

    v37 = v26;
    sub_1A6332804();
  }
  else
  {
    v65 = v8;
    sub_1A6334CDC();
    sub_1A6332804();
    swift_bridgeObjectRelease();
    if (qword_1ED21E4E0 != -1)
      swift_once();
    v38 = sub_1A6334F04();
    __swift_project_value_buffer(v38, (uint64_t)qword_1ED22A3D8);
    v39 = v62;
    v27(v62, v21, v12);
    v41 = v66;
    v40 = v67;
    sub_1A61A6288(v66, v67);
    sub_1A61A6288(v41, v40);
    sub_1A6334CDC();
    v42 = sub_1A6334EEC();
    v43 = sub_1A633569C();
    if (os_log_type_enabled(v42, (os_log_type_t)v43))
    {
      v59 = v43;
      v61 = v42;
      v64 = v21;
      v44 = swift_slowAlloc();
      v45 = swift_slowAlloc();
      v73[0] = v45;
      *(_DWORD *)v44 = 136446722;
      v46 = sub_1A6332A14();
      v72 = sub_1A61A6A1C(v46, v47, v73);
      sub_1A6335774();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v39, v28);
      v60 = v44;
      *(_WORD *)(v44 + 12) = 2082;
      v62 = (char *)v28;
      v48 = (char *)&loc_1A6275528 + *((int *)qword_1A6275A18 + (v40 >> 62));
      v58 = v45;
      __asm { BR              X10 }
    }
    v49 = v70;
    (*(void (**)(char *, uint64_t))(v70 + 8))(v39, v28);
    sub_1A61A68B8(v41, v40);
    v50 = v41;
    v34 = v49;
    sub_1A61A68B8(v50, v40);

    swift_bridgeObjectRelease_n();
    v37 = v65;
  }
  if ((*(_BYTE *)(v37 + OBJC_IVAR____TtC13WeatherDaemon26WDSJWTAuthenticatorService_timeout + 8) & 1) == 0)
  {
    v51 = *(_QWORD *)(v37 + OBJC_IVAR____TtC13WeatherDaemon26WDSJWTAuthenticatorService_timeout);
    if (qword_1ED21D318 != -1)
      swift_once();
    v52 = sub_1A6334F04();
    __swift_project_value_buffer(v52, (uint64_t)qword_1ED22A3C0);
    v53 = sub_1A6334EEC();
    v54 = sub_1A633569C();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = v29;
      v56 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v56 = 134217984;
      v72 = v51;
      sub_1A6335774();
      _os_log_impl(&dword_1A6185000, v53, v54, "Setting token request timeout time interval to %f", v56, 0xCu);
      v57 = v56;
      v29 = v55;
      MEMORY[0x1A85BEFA8](v57, -1, -1);
    }

    sub_1A63327B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v29, v28);
}

uint64_t sub_1A6275A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void (*v20)(_QWORD *__return_ptr, uint64_t, void (*)(uint64_t, unint64_t, void *, void *), _QWORD *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;

  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  v16 = a5 + 2;
  v18 = a5[5];
  v17 = a5[6];
  __swift_project_boxed_opaque_existential_1(v16, v18);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a7;
  v19[3] = a8;
  v19[4] = a3;
  v19[5] = a4;
  v19[6] = sub_1A6277144;
  v19[7] = v15;
  v20 = *(void (**)(_QWORD *__return_ptr, uint64_t, void (*)(uint64_t, unint64_t, void *, void *), _QWORD *, uint64_t, uint64_t))(v17 + 8);
  swift_retain();
  sub_1A6334CDC();
  swift_retain();
  v20(v25, a6, sub_1A627717C, v19, v18, v17);
  swift_release();
  v21 = v26;
  v22 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

void sub_1A6275B58(uint64_t a1, unint64_t a2, void *a3, void *a4, uint64_t a5, unint64_t a6, void (*a7)(void), uint64_t a8, void (*a9)(uint64_t, uint64_t))
{
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint8_t *v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  os_log_type_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  void *v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  os_log_type_t v79;
  id v80;
  uint64_t v82[2];
  uint64_t v83;

  v15 = sub_1A633533C();
  MEMORY[0x1E0C80A78](v15);
  if (a4)
  {
    v16 = a4;
    if (qword_1ED21D318 != -1)
      swift_once();
    v17 = sub_1A6334F04();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED22A3C0);
    sub_1A6334CDC();
    v18 = a4;
    sub_1A6334CDC();
    v19 = a4;
    v20 = sub_1A6334EEC();
    v21 = sub_1A6335690();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v23 = swift_slowAlloc();
      v82[0] = v23;
      *(_DWORD *)v22 = 136446723;
      sub_1A6334CDC();
      v83 = sub_1A61A6A1C(a5, a6, v82);
      sub_1A6335774();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v22 + 12) = 2160;
      v83 = 1752392040;
      sub_1A6335774();
      *(_WORD *)(v22 + 22) = 2081;
      v83 = (uint64_t)a4;
      v24 = a4;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD0);
      v25 = sub_1A6335348();
      v83 = sub_1A61A6A1C(v25, v26, v82);
      sub_1A6335774();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A6185000, v20, v21, "Error while fetching new JWT token. requestIdentifier=%{public}s, error=%{private,mask.hash}s", (uint8_t *)v22, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1A85BEFA8](v23, -1, -1);
      MEMORY[0x1A85BEFA8](v22, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    sub_1A61F7204();
    v36 = (void *)swift_allocError();
    *(_OWORD *)v37 = xmmword_1A633DAA0;
    *(_BYTE *)(v37 + 16) = 3;
    a7();

    v38 = a4;
    goto LABEL_24;
  }
  v77 = a1;
  if (qword_1ED21D318 != -1)
    swift_once();
  v27 = sub_1A6334F04();
  __swift_project_value_buffer(v27, (uint64_t)qword_1ED22A3C0);
  v28 = a3;
  swift_bridgeObjectRetain_n();
  v29 = v28;
  v30 = sub_1A6334EEC();
  v79 = sub_1A633569C();
  v78 = a5;
  if (os_log_type_enabled(v30, v79))
  {
    v75 = a2;
    v31 = a5;
    v32 = swift_slowAlloc();
    v74 = swift_slowAlloc();
    v82[0] = v74;
    *(_DWORD *)v32 = 136446466;
    sub_1A6334CDC();
    v83 = sub_1A61A6A1C(v31, a6, v82);
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v32 + 12) = 2082;
    v83 = (uint64_t)a3;
    v33 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C998);
    v34 = sub_1A6335348();
    v83 = sub_1A61A6A1C(v34, v35, v82);
    sub_1A6335774();

    a2 = v75;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A6185000, v30, v79, "Got JWT token response. requestIdentifier=%{public}s, response=%{public}s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v74, -1, -1);
    MEMORY[0x1A85BEFA8](v32, -1, -1);

    if (!a3)
      goto LABEL_20;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if (!a3)
    {
LABEL_20:
      swift_bridgeObjectRetain_n();
      v53 = sub_1A6334EEC();
      v54 = sub_1A6335690();
      if (os_log_type_enabled(v53, v54))
      {
        v55 = (uint8_t *)swift_slowAlloc();
        v56 = swift_slowAlloc();
        v82[0] = v56;
        *(_DWORD *)v55 = 136446210;
        sub_1A6334CDC();
        v83 = sub_1A61A6A1C(v78, a6, v82);
        sub_1A6335774();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A6185000, v53, v54, "Invalid JWT Response. requestIdentifier=%{public}s", v55, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85BEFA8](v56, -1, -1);
        MEMORY[0x1A85BEFA8](v55, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_1A61F7204();
      v57 = swift_allocError();
      *(_QWORD *)v58 = 0;
      *(_QWORD *)(v58 + 8) = 0;
      *(_BYTE *)(v58 + 16) = 1;
      a7();
      v38 = (void *)v57;
LABEL_24:

      return;
    }
  }
  objc_opt_self();
  v39 = swift_dynamicCastObjCClass();
  if (!v39)
    goto LABEL_20;
  v40 = v39;
  v41 = v29;
  if (!NSHTTPURLResponse.isSuccess.getter())
  {
    swift_bridgeObjectRetain_n();
    v59 = sub_1A6334EEC();
    v60 = sub_1A6335690();
    if (!os_log_type_enabled(v59, v60))
    {

      swift_bridgeObjectRelease_n();
LABEL_34:
      sub_1A61F7204();
      v71 = (void *)swift_allocError();
      *(_QWORD *)v72 = v40;
      *(_QWORD *)(v72 + 8) = 0;
      *(_BYTE *)(v72 + 16) = 1;
      v73 = v41;
      ((void (*)(void *))a7)(v71);

      return;
    }
    v61 = (uint8_t *)swift_slowAlloc();
    v62 = v41;
    v63 = swift_slowAlloc();
    v82[0] = v63;
    *(_DWORD *)v61 = 136446210;
    sub_1A6334CDC();
    v83 = sub_1A61A6A1C(v78, a6, v82);
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v59, v60, "JWT Response not successful. requestIdentifier=%{public}s", v61, 0xCu);
    swift_arrayDestroy();
    v64 = v63;
    v41 = v62;
    MEMORY[0x1A85BEFA8](v64, -1, -1);
    v65 = (uint64_t)v61;
    goto LABEL_31;
  }
  if (a2 >> 60 == 15)
  {
LABEL_29:
    sub_1A6334CDC();
    sub_1A62771A8(v77, a2);
    sub_1A6334CDC();
    sub_1A62771A8(v77, a2);
    v59 = sub_1A6334EEC();
    v66 = sub_1A6335690();
    if (!os_log_type_enabled(v59, v66))
    {
      swift_bridgeObjectRelease_n();
      sub_1A61E0128(v77, a2);
      sub_1A61E0128(v77, a2);
      goto LABEL_33;
    }
    v67 = swift_slowAlloc();
    v68 = swift_slowAlloc();
    v83 = v68;
    *(_DWORD *)v67 = 136446466;
    sub_1A6334CDC();
    v82[0] = sub_1A61A6A1C(v78, a6, &v83);
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v67 + 12) = 2082;
    v82[0] = v77;
    v82[1] = a2;
    sub_1A62771A8(v77, a2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8474F0);
    v69 = sub_1A6335348();
    v82[0] = sub_1A61A6A1C(v69, v70, &v83);
    sub_1A6335774();
    swift_bridgeObjectRelease();
    sub_1A61E0128(v77, a2);
    sub_1A61E0128(v77, a2);
    _os_log_impl(&dword_1A6185000, v59, v66, "JWT Token not found. requestIdentifier=%{public}s, data=%{public}s", (uint8_t *)v67, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v68, -1, -1);
    v65 = v67;
LABEL_31:
    MEMORY[0x1A85BEFA8](v65, -1, -1);
LABEL_33:

    goto LABEL_34;
  }
  sub_1A61A6288(v77, a2);
  sub_1A6335330();
  v42 = sub_1A6335318();
  if (!v43)
  {
    sub_1A61E0128(v77, a2);
    goto LABEL_29;
  }
  v44 = v42;
  v45 = v43;
  v76 = a2;
  v46 = a9;
  swift_bridgeObjectRetain_n();
  v47 = sub_1A6334EEC();
  v48 = sub_1A633569C();
  if (os_log_type_enabled(v47, v48))
  {
    v49 = (uint8_t *)swift_slowAlloc();
    v80 = v41;
    v50 = swift_slowAlloc();
    v82[0] = v50;
    *(_DWORD *)v49 = 136446210;
    sub_1A6334CDC();
    v83 = sub_1A61A6A1C(v78, a6, v82);
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v47, v48, "Successfully generated JWT Token. requestIdentifier=%{public}s", v49, 0xCu);
    swift_arrayDestroy();
    v51 = v50;
    v41 = v80;
    MEMORY[0x1A85BEFA8](v51, -1, -1);
    v52 = v49;
    v46 = a9;
    MEMORY[0x1A85BEFA8](v52, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v46(v44, v45);
  swift_bridgeObjectRelease();
  sub_1A61E0128(v77, v76);

}

void sub_1A62766E8(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  id v7;
  id v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  NSObject *oslog;
  uint64_t v16;

  if (qword_1ED21D318 != -1)
    swift_once();
  v6 = sub_1A6334F04();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED22A3C0);
  sub_1A6334CDC();
  v7 = a1;
  sub_1A6334CDC();
  v8 = a1;
  oslog = sub_1A6334EEC();
  v9 = sub_1A6335690();
  if (os_log_type_enabled(oslog, v9))
  {
    v10 = swift_slowAlloc();
    v11 = swift_slowAlloc();
    v16 = v11;
    *(_DWORD *)v10 = 136446723;
    sub_1A6334CDC();
    sub_1A61A6A1C(a2, a3, &v16);
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2160;
    sub_1A6335774();
    *(_WORD *)(v10 + 22) = 2081;
    v12 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD0);
    v13 = sub_1A6335348();
    sub_1A61A6A1C(v13, v14, &v16);
    sub_1A6335774();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A6185000, oslog, v9, "Error while creating local signature. requestIdentifier=%{public}s, error=%{private,mask.hash}s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v11, -1, -1);
    MEMORY[0x1A85BEFA8](v10, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
}

uint64_t sub_1A627695C()
{
  return WDSJWTAuthenticatorService.generateToken(session:url:)();
}

uint64_t sub_1A6276980(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  unsigned __int8 *v32;
  uint64_t v33;

  v32 = a4;
  v33 = a5;
  v31 = a3;
  v29 = a10;
  v30 = a6 & 1;
  v13 = *(_QWORD *)(a9 - 8);
  MEMORY[0x1E0C80A78](a1);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v28 - v23;
  (*(void (**)(char *, __n128))(v17 + 32))((char *)&v28 - v23, v22);
  v25 = swift_allocObject();
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v24, a8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, a9);
  v26 = sub_1A6276B08((uint64_t)v20, (uint64_t)v15, v31, v32, v33, v30, v25, a8, a9, v29, a11);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a2, a9);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v24, a8);
  return v26;
}

uint64_t sub_1A6276B08(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;

  v32 = a6;
  v30 = a3;
  v31 = a5;
  v26 = a2;
  v27 = a4;
  v14 = sub_1A63356E4();
  v28 = *(_QWORD *)(v14 - 8);
  v29 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1A63356CC();
  MEMORY[0x1E0C80A78](v17);
  v18 = sub_1A63351B0();
  MEMORY[0x1E0C80A78](v18);
  v38 = a8;
  v39 = a10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v37);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(boxed_opaque_existential_1, a1, a8);
  v35 = a9;
  v36 = a11;
  v20 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v34);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a9 - 8) + 32))(v20, v26, a9);
  LODWORD(v27) = *v27;
  v21 = (_QWORD *)(a7 + OBJC_IVAR____TtC13WeatherDaemon26WDSJWTAuthenticatorService_httpHeaderMescalAuthenticationKey);
  *v21 = 0xD000000000000017;
  v21[1] = 0x80000001A6349280;
  v22 = OBJC_IVAR____TtC13WeatherDaemon26WDSJWTAuthenticatorService_signQueue;
  sub_1A61BC2C8();
  sub_1A633518C();
  v33 = MEMORY[0x1E0DEE9D8];
  sub_1A61BC344();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED21E270);
  sub_1A61BC594();
  sub_1A63357D4();
  (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v16, *MEMORY[0x1E0DEF8D0], v29);
  *(_QWORD *)(a7 + v22) = sub_1A63356F0();
  sub_1A61A1000(&v37, a7 + 16);
  sub_1A61A1000(&v34, a7 + 56);
  sub_1A61C2260(v30, a7 + OBJC_IVAR____TtC13WeatherDaemon26WDSJWTAuthenticatorService_endpoint);
  *(_BYTE *)(a7 + OBJC_IVAR____TtC13WeatherDaemon26WDSJWTAuthenticatorService_version) = (_BYTE)v27;
  v23 = a7 + OBJC_IVAR____TtC13WeatherDaemon26WDSJWTAuthenticatorService_timeout;
  *(_QWORD *)v23 = v31;
  *(_BYTE *)(v23 + 8) = v32 & 1;
  return a7;
}

uint64_t sub_1A6276D8C()
{
  uint64_t v0;

  sub_1A61A68B8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A6276DB8(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1A6274BEC(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1A6276DD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for WDSEndpoint();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  OUTLINED_FUNCTION_393();
  sub_1A61A68B8(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  v3 = v0 + ((v2 + 48) & ~v2);
  v4 = sub_1A6332A98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  if (*(_QWORD *)(v3 + *(int *)(v1 + 20)))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A6276E6C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WDSEndpoint() - 8) + 80);
  return sub_1A6274C70(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), v2 + ((v5 + 48) & ~v5));
}

uint64_t sub_1A6276ECC()
{
  OUTLINED_FUNCTION_393();
  return swift_deallocObject();
}

void sub_1A6276EEC(void *a1)
{
  uint64_t v1;

  sub_1A62766E8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t dispatch thunk of WDSJWTAuthenticatorServiceType.generateToken(session:url:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1A6276EFC()
{
  return type metadata accessor for WDSJWTAuthenticatorService();
}

uint64_t method lookup function for WDSJWTAuthenticatorService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WDSJWTAuthenticatorService.__allocating_init(session:signer:endpoint:version:timeout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v6 + 136))(a1, a2, a3, a4, a5, a6 & 1);
}

id sub_1A6276F20(id result, id a2, char a3)
{
  if (a3 == 2 || a3 == 1)
    return result;
  if (!a3)
    return (id)sub_1A6334CDC();
  return result;
}

void destroy for WDSJWTAuthenticatorService.Errors(uint64_t a1)
{
  sub_1A61DC124(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s13WeatherDaemon26WDSJWTAuthenticatorServiceC6ErrorsOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A6276F20(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for WDSJWTAuthenticatorService.Errors(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A6276F20(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1A61DC124(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for WDSJWTAuthenticatorService.Errors(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1A61DC124(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for WDSJWTAuthenticatorService.Errors(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 3)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WDSJWTAuthenticatorService.Errors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A62770D4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_1A62770EC(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for WDSJWTAuthenticatorService.Errors()
{
  return &type metadata for WDSJWTAuthenticatorService.Errors;
}

uint64_t sub_1A6277114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1A6275A28(a1, a2, a3, a4, *(_QWORD **)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40));
}

uint64_t sub_1A6277120()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A6277144(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A62D337C(a1, a2, *(void (**)(_QWORD *))(v2 + 16));
}

uint64_t sub_1A627714C()
{
  OUTLINED_FUNCTION_393();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1A627717C(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  uint64_t v4;

  sub_1A6275B58(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(void (**)(void))(v4 + 32), *(_QWORD *)(v4 + 40), *(void (**)(uint64_t, uint64_t))(v4 + 48));
}

uint64_t sub_1A62771A8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1A61A6288(a1, a2);
  return a1;
}

uint64_t String.isFirstPartyProcess.getter()
{
  return sub_1A61BB814();
}

uint64_t String.isWeatherProcess.getter()
{
  return OUTLINED_FUNCTION_0_42();
}

uint64_t String.isNanoWeatherProcess.getter()
{
  return OUTLINED_FUNCTION_0_42();
}

uint64_t String.isWeatherWidgetProcess.getter(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x80000001A634AED0)
    return 1;
  else
    return sub_1A6335ABC();
}

uint64_t CacheEntity.TimeValid.description.getter()
{
  OUTLINED_FUNCTION_29_0();
  sub_1A63353F0();
  return 0;
}

uint64_t static CacheEntity.tableName.getter()
{
  return sub_1A6334F94();
}

uint64_t static CacheEntity.version.getter()
{
  return sub_1A6334FA0();
}

uint64_t CacheEntity.id.getter()
{
  return swift_retain();
}

uint64_t CacheEntity.modified.getter()
{
  return swift_retain();
}

uint64_t CacheEntity.expires.getter()
{
  return swift_retain();
}

uint64_t CacheEntity.model.getter()
{
  return swift_retain();
}

uint64_t CacheEntity.diagnosticsModel.getter()
{
  return swift_retain();
}

uint64_t CacheEntity.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C940);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_27();
  v31 = v4;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v30 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B9F8);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_919();
  v11 = v9 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v30 - v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CB88);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_919();
  v18 = v16 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v30 - v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CB98);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_15_19();
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v30 - v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CB90);
  OUTLINED_FUNCTION_22_11((uint64_t)v25);
  OUTLINED_FUNCTION_22_11(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D1E0);
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_27_7();
  v30 = sub_1A6335024();
  sub_1A6332C18();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CB80);
  OUTLINED_FUNCTION_34_4((uint64_t)v21);
  OUTLINED_FUNCTION_10_18((uint64_t)v21, 0);
  sub_1A6332C18();
  OUTLINED_FUNCTION_34_4(v18);
  OUTLINED_FUNCTION_10_18(v18, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D1D8);
  OUTLINED_FUNCTION_1_1();
  v26 = OUTLINED_FUNCTION_9_18();
  OUTLINED_FUNCTION_10_18((uint64_t)v21, 1);
  OUTLINED_FUNCTION_10_18(v18, 1);
  swift_allocObject();
  v27 = OUTLINED_FUNCTION_9_18();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B9F0);
  OUTLINED_FUNCTION_1_29((uint64_t)v14);
  OUTLINED_FUNCTION_1_29(v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21BA00);
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_21_12();
  v28 = sub_1A6335024();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C938);
  OUTLINED_FUNCTION_1_29((uint64_t)v7);
  OUTLINED_FUNCTION_1_29(v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C948);
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_32_5();
  result = sub_1A6335024();
  *a1 = v30;
  a1[1] = v26;
  a1[2] = v27;
  a1[3] = v28;
  a1[4] = result;
  return result;
}

uint64_t sub_1A6277680(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v9;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A6335ABC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6465696669646F6DLL && a2 == 0xE800000000000000;
    if (v6 || (sub_1A6335ABC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x73657269707865 && a2 == 0xE700000000000000;
      if (v7 || (sub_1A6335ABC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000;
        if (v8 || (sub_1A6335ABC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000010 && a2 == 0x80000001A634AEF0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = sub_1A6335ABC();
          swift_bridgeObjectRelease();
          if ((v9 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_1A627786C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A6277894 + 4 * byte_1A633DBE0[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_1A6277894()
{
  return 0x6465696669646F6DLL;
}

uint64_t sub_1A62778AC()
{
  return 0x73657269707865;
}

uint64_t sub_1A62778C4()
{
  return 0x6C65646F6DLL;
}

unint64_t sub_1A62778D8()
{
  return 0xD000000000000010;
}

BOOL sub_1A62778F4(char *a1, char *a2)
{
  return sub_1A61C60C4(*a1, *a2);
}

uint64_t sub_1A6277934()
{
  return sub_1A61C62BC();
}

uint64_t sub_1A627794C()
{
  return sub_1A61C60D4();
}

uint64_t sub_1A6277980()
{
  sub_1A6335BA0();
  sub_1A61C60D4();
  return sub_1A6335BC4();
}

uint64_t sub_1A62779D4()
{
  unsigned __int8 *v0;

  return sub_1A627786C(*v0);
}

uint64_t sub_1A62779EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A6277680(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A6277A30()
{
  return sub_1A61C6300();
}

uint64_t sub_1A6277A5C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A623DF0C();
  *a1 = result;
  return result;
}

uint64_t sub_1A6277A94(uint64_t a1)
{
  MEMORY[0x1A85BEED0](&unk_1A633DED0, a1);
  return sub_1A6335C18();
}

uint64_t sub_1A6277AC8(uint64_t a1)
{
  MEMORY[0x1A85BEED0](&unk_1A633DED0, a1);
  return sub_1A6335C24();
}

void CacheEntity.encode(to:)()
{
  type metadata accessor for CacheEntity.CodingKeys();
}

void sub_1A6277B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  MEMORY[0x1A85BEED0](&unk_1A633DED0, a1);
  v12 = sub_1A6335A8C();
  *(_QWORD *)(v11 - 160) = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&a9 - v13;
  v16 = *v9;
  v15 = v9[1];
  *(_QWORD *)(v11 - 176) = v9[2];
  *(_QWORD *)(v11 - 168) = v15;
  v17 = v9[3];
  *(_QWORD *)(v11 - 192) = v9[4];
  *(_QWORD *)(v11 - 184) = v17;
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  v18 = v12;
  sub_1A6335BF4();
  *(_QWORD *)(v11 - 144) = v16;
  *(_BYTE *)(v11 - 65) = 0;
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_18_15(&qword_1EE8474F8, v19, MEMORY[0x1E0DB2CB8]);
  v20 = *(_QWORD *)(v11 - 152);
  sub_1A6335A80();
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 160) + 8))(v14, v12);
  }
  else
  {
    v22 = *(_QWORD *)(v11 - 184);
    v21 = *(_QWORD *)(v11 - 176);
    v23 = *(_QWORD *)(v11 - 160);
    *(_QWORD *)(v11 - 144) = *(_QWORD *)(v11 - 168);
    *(_BYTE *)(v11 - 65) = 1;
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_18_15(&qword_1EE847500, v24, MEMORY[0x1E0DB2CB8]);
    OUTLINED_FUNCTION_3_27();
    *(_QWORD *)(v11 - 144) = v21;
    *(_BYTE *)(v11 - 65) = 2;
    OUTLINED_FUNCTION_3_27();
    *(_QWORD *)(v11 - 144) = v22;
    *(_BYTE *)(v11 - 65) = 3;
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_18_15(&qword_1EE847508, v25, MEMORY[0x1E0DB2CB8]);
    OUTLINED_FUNCTION_4_29();
    *(_QWORD *)(v11 - 144) = *(_QWORD *)(v11 - 192);
    *(_BYTE *)(v11 - 65) = 4;
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_18_15(&qword_1EE847510, v26, MEMORY[0x1E0DB2CB8]);
    OUTLINED_FUNCTION_4_29();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v18);
  }
  OUTLINED_FUNCTION_1();
}

void type metadata accessor for CacheEntity.CodingKeys()
{
  JUMPOUT(0x1A85BEE4CLL);
}

void CacheEntity.init(from:)()
{
  type metadata accessor for CacheEntity.CodingKeys();
}

void sub_1A6277D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;

  *(_QWORD *)(v10 - 168) = MEMORY[0x1A85BEED0](&unk_1A633DED0, a1);
  v11 = sub_1A63359F0();
  *(_QWORD *)(v10 - 224) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v10 - 216) = v11;
  MEMORY[0x1E0C80A78](v11);
  *(_QWORD *)(v10 - 152) = (char *)&a9 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C940);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_27();
  *(_QWORD *)(v10 - 176) = v14;
  MEMORY[0x1E0C80A78](v15);
  *(_QWORD *)(v10 - 184) = (char *)&a9 - v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B9F8);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_919();
  v20 = v18 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&a9 - v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CB88);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_919();
  v27 = v25 - v26;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&a9 - v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CB98);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_15_19();
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&a9 - v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CB90);
  OUTLINED_FUNCTION_23_14((uint64_t)v34);
  OUTLINED_FUNCTION_23_14(v9);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D1E0);
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_27_7();
  *(_QWORD *)(v10 - 192) = sub_1A6335024();
  sub_1A6332C18();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CB80);
  OUTLINED_FUNCTION_33_5((uint64_t)v30);
  OUTLINED_FUNCTION_10_18((uint64_t)v30, 0);
  sub_1A6332C18();
  OUTLINED_FUNCTION_33_5(v27);
  OUTLINED_FUNCTION_10_18(v27, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D1D8);
  OUTLINED_FUNCTION_1_1();
  *(_QWORD *)(v10 - 200) = OUTLINED_FUNCTION_8_22();
  OUTLINED_FUNCTION_10_18((uint64_t)v30, 1);
  OUTLINED_FUNCTION_10_18(v27, 1);
  swift_allocObject();
  OUTLINED_FUNCTION_8_22();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B9F0);
  OUTLINED_FUNCTION_1_29((uint64_t)v23);
  OUTLINED_FUNCTION_1_29(v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21BA00);
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_21_12();
  *(_QWORD *)(v10 - 208) = sub_1A6335024();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C938);
  OUTLINED_FUNCTION_25_8(*(_QWORD *)(v10 - 184));
  OUTLINED_FUNCTION_25_8(*(_QWORD *)(v10 - 176));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C948);
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_32_5();
  *(_QWORD *)(v10 - 176) = sub_1A6335024();
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v10 - 144), *(_QWORD *)(*(_QWORD *)(v10 - 144) + 24));
  v36 = *(_QWORD *)(v10 - 160);
  sub_1A6335BDC();
  if (!v36)
  {
    *(_BYTE *)(v10 - 65) = 0;
    sub_1A6278328(&qword_1EE847518, &qword_1ED21D1E0, MEMORY[0x1E0DB2CC0]);
    OUTLINED_FUNCTION_17_16();
    OUTLINED_FUNCTION_16_20();
    OUTLINED_FUNCTION_31_3();
    swift_release();
    *(_BYTE *)(v10 - 65) = 1;
    sub_1A6278328(&qword_1EE847520, &qword_1ED21D1D8, MEMORY[0x1E0DB2CC0]);
    OUTLINED_FUNCTION_5_23();
    *(_QWORD *)(v10 - 160) = v35;
    OUTLINED_FUNCTION_31_3();
    swift_release();
    *(_BYTE *)(v10 - 65) = 2;
    OUTLINED_FUNCTION_5_23();
    v37 = *(_QWORD *)(v10 - 136);
    swift_retain();
    swift_release();
    *(_BYTE *)(v10 - 65) = 3;
    sub_1A6278328(&qword_1EE847528, &qword_1ED21BA00, MEMORY[0x1E0DB2CC0]);
    OUTLINED_FUNCTION_17_16();
    OUTLINED_FUNCTION_16_20();
    v38 = *(_QWORD *)(v10 - 136);
    swift_retain();
    swift_release();
    *(_BYTE *)(v10 - 65) = 4;
    sub_1A6278328(qword_1EE847530, &qword_1ED21C948, MEMORY[0x1E0DB2CC0]);
    OUTLINED_FUNCTION_17_16();
    OUTLINED_FUNCTION_16_20();
    OUTLINED_FUNCTION_2_32();
    v39 = *(_QWORD *)(v10 - 136);
    swift_retain();
    swift_release();
    v40 = *(_QWORD **)(v10 - 232);
    *v40 = *(_QWORD *)(v10 - 160);
    v40[1] = v35;
    v40[2] = v37;
    v40[3] = v38;
    v40[4] = v39;
  }
  __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v10 - 144));
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_626();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1A6278328(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1A85BEED0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1A6278368()
{
  JUMPOUT(0x1A85BEED0);
}

void sub_1A6278378()
{
  JUMPOUT(0x1A85BEED0);
}

void sub_1A627838C()
{
  JUMPOUT(0x1A85BEED0);
}

void sub_1A627839C()
{
  JUMPOUT(0x1A85BEED0);
}

void sub_1A62783AC()
{
  JUMPOUT(0x1A85BEED0);
}

uint64_t sub_1A62783BC()
{
  return static CacheEntity.tableName.getter();
}

uint64_t sub_1A62783CC()
{
  return static CacheEntity.version.getter();
}

void sub_1A62783DC()
{
  JUMPOUT(0x1A85BEED0);
}

uint64_t sub_1A62783EC(uint64_t a1)
{
  MEMORY[0x1A85BEED0](&protocol conformance descriptor for CacheEntity<A, B>, a1);
  return sub_1A6334F10();
}

uint64_t sub_1A6278430(uint64_t a1)
{
  MEMORY[0x1A85BEED0](&protocol conformance descriptor for CacheEntity<A, B>, a1);
  return sub_1A6334F28();
}

uint64_t sub_1A6278474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85BEED0](&protocol conformance descriptor for CacheEntity<A, B>, a3);
  return sub_1A6334F1C();
}

void sub_1A62784D4()
{
  CacheEntity.init(from:)();
}

void sub_1A62784FC()
{
  CacheEntity.encode(to:)();
}

uint64_t sub_1A6278510()
{
  MEMORY[0x1A85BEED0](&protocol conformance descriptor for CacheEntity<A, B>);
  return sub_1A6334F4C();
}

uint64_t sub_1A6278550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85BEED0](&protocol conformance descriptor for CacheEntity<A, B>, a3);
  return sub_1A6334F40();
}

uint64_t sub_1A627859C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x1A85BEED0](&protocol conformance descriptor for CacheEntity<A, B>, a4);
  return sub_1A6334F34();
}

uint64_t sub_1A62785F8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1A6278600()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *sub_1A6278640(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_1A62786AC(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1A6278750(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t sub_1A62787B4(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1A62787F4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for CacheEntity()
{
  JUMPOUT(0x1A85BEE4CLL);
}

uint64_t sub_1A6278848()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1A6278850(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1A6278890(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A62788D4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1A62788DC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2;
  return result;
}

void type metadata accessor for CacheEntity.TimeValid()
{
  JUMPOUT(0x1A85BEE4CLL);
}

uint64_t sub_1A62788F0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A627893C + 4 * byte_1A633DBEA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A6278970 + 4 * byte_1A633DBE5[v4]))();
}

uint64_t sub_1A6278970(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6278978(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6278980);
  return result;
}

uint64_t sub_1A627898C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6278994);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A6278998(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A62789A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1A62789AC()
{
  JUMPOUT(0x1A85BEED0);
}

void sub_1A62789BC()
{
  JUMPOUT(0x1A85BEED0);
}

void sub_1A62789CC()
{
  JUMPOUT(0x1A85BEED0);
}

void DailySummary.metadata.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1A618DA30(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for Metadata);
}

uint64_t DailySummary.days.getter()
{
  type metadata accessor for DailySummary();
  return sub_1A6334CDC();
}

uint64_t static DailySummary.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (!static Metadata.== infix(_:_:)(a1, a2))
    return 0;
  v4 = *(int *)(type metadata accessor for DailySummary() + 20);
  return sub_1A61CDD7C(*(_QWORD *)(a1 + v4), *(_QWORD *)(a2 + v4));
}

uint64_t sub_1A6278A6C()
{
  sub_1A6278C20();
  return sub_1A6335C18();
}

uint64_t sub_1A6278A94()
{
  sub_1A6278C20();
  return sub_1A6335C24();
}

uint64_t DailySummary.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847638);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_2();
  v7 = v6 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6278C20();
  sub_1A6335BF4();
  type metadata accessor for Metadata();
  sub_1A618B2B4(&qword_1ED21B9E0, (uint64_t (*)(uint64_t))type metadata accessor for Metadata, (uint64_t)&protocol conformance descriptor for Metadata);
  OUTLINED_FUNCTION_0_19();
  if (!v1)
  {
    type metadata accessor for DailySummary();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847648);
    sub_1A6278ED4(&qword_1EE847650, (uint64_t (*)(void))sub_1A6278C5C, MEMORY[0x1E0DEAF10]);
    OUTLINED_FUNCTION_0_19();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_1A6278C20()
{
  unint64_t result;

  result = qword_1EE847640;
  if (!qword_1EE847640)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633E0F4, &type metadata for DailySummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847640);
  }
  return result;
}

unint64_t sub_1A6278C5C()
{
  unint64_t result;

  result = qword_1EE847658;
  if (!qword_1EE847658)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for DaySummary, &type metadata for DaySummary);
    atomic_store(result, (unint64_t *)&qword_1EE847658);
  }
  return result;
}

void DailySummary.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v11 = type metadata accessor for Metadata();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_2();
  v12 = v5 - v4;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847660);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_2();
  v6 = type metadata accessor for DailySummary();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_2();
  v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6278C20();
  sub_1A6335BDC();
  if (v2)
  {
    OUTLINED_FUNCTION_19();
  }
  else
  {
    sub_1A618B2B4(&qword_1ED21B9E8, (uint64_t (*)(uint64_t))type metadata accessor for Metadata, (uint64_t)&protocol conformance descriptor for Metadata);
    OUTLINED_FUNCTION_5_24();
    sub_1A618D95C(v12, v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847648);
    sub_1A6278ED4(&qword_1EE847668, (uint64_t (*)(void))sub_1A6278F3C, MEMORY[0x1E0DEAF40]);
    OUTLINED_FUNCTION_5_24();
    OUTLINED_FUNCTION_2_18();
    *(_QWORD *)(v9 + *(int *)(v6 + 20)) = v14;
    sub_1A618DA30(v9, a2, (uint64_t (*)(_QWORD))type metadata accessor for DailySummary);
    OUTLINED_FUNCTION_19();
    sub_1A618DF54(v9, (uint64_t (*)(_QWORD))type metadata accessor for DailySummary);
  }
}

uint64_t sub_1A6278ED4(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE847648);
    v8 = a2();
    result = MEMORY[0x1A85BEED0](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A6278F3C()
{
  unint64_t result;

  result = qword_1EE847670;
  if (!qword_1EE847670)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for DaySummary, &type metadata for DaySummary);
    atomic_store(result, (unint64_t *)&qword_1EE847670);
  }
  return result;
}

void sub_1A6278F78(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  DailySummary.init(from:)(a1, a2);
}

uint64_t sub_1A6278F8C(_QWORD *a1)
{
  return DailySummary.encode(to:)(a1);
}

void sub_1A6278FA4()
{
  static DailySummary.read(from:)();
}

void sub_1A6278FB8(uint64_t a1)
{
  DailySummary.write(to:)(a1);
}

uint64_t sub_1A6278FCC()
{
  return MEMORY[0x1E0DCBB28];
}

uint64_t sub_1A6278FD8()
{
  return MEMORY[0x1E0DCBB20];
}

void sub_1A6278FE4(uint64_t a1)
{
  uint64_t v2;

  sub_1A618B2B4(&qword_1EE846398, (uint64_t (*)(uint64_t))type metadata accessor for DailySummary, (uint64_t)&protocol conformance descriptor for DailySummary);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t getEnumTagSinglePayload for DailySummary()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A627902C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = type metadata accessor for Metadata();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DailySummary()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A62790B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = type metadata accessor for Metadata();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for DailySummary.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A6279170 + 4 * byte_1A633DF25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A62791A4 + 4 * byte_1A633DF20[v4]))();
}

uint64_t sub_1A62791A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A62791AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A62791B4);
  return result;
}

uint64_t sub_1A62791C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A62791C8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A62791CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A62791D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DailySummary.CodingKeys()
{
  return &type metadata for DailySummary.CodingKeys;
}

unint64_t sub_1A62791F4()
{
  unint64_t result;

  result = qword_1EE8476A8;
  if (!qword_1EE8476A8)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633E0CC, &type metadata for DailySummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8476A8);
  }
  return result;
}

unint64_t sub_1A6279234()
{
  unint64_t result;

  result = qword_1EE8476B0;
  if (!qword_1EE8476B0)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633E03C, &type metadata for DailySummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8476B0);
  }
  return result;
}

unint64_t sub_1A6279274()
{
  unint64_t result;

  result = qword_1EE8476B8;
  if (!qword_1EE8476B8)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633E064, &type metadata for DailySummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8476B8);
  }
  return result;
}

WeatherDaemon::ChangeDirection_optional __swiftcall ChangeDirection.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  WeatherDaemon::ChangeDirection_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A6335918();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ChangeDirection.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A6279338 + 4 * byte_1A633E144[*v0]))(0x65676E6168436F6ELL, 0xE800000000000000);
}

uint64_t sub_1A6279338()
{
  return 6516329;
}

uint64_t sub_1A627934C()
{
  return 6514020;
}

uint64_t sub_1A627935C()
{
  return 0x796461657473;
}

void sub_1A6279370(char *a1)
{
  sub_1A6244064(*a1);
}

unint64_t sub_1A6279380()
{
  unint64_t result;

  result = qword_1EE8476C0;
  if (!qword_1EE8476C0)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for ChangeDirection, &type metadata for ChangeDirection);
    atomic_store(result, (unint64_t *)&qword_1EE8476C0);
  }
  return result;
}

void sub_1A62793BC()
{
  unsigned __int8 *v0;

  sub_1A62DE2C4(*v0);
}

void sub_1A62793C4(uint64_t a1)
{
  char *v1;

  sub_1A61F4B44(a1, *v1);
}

void sub_1A62793CC(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1A61F5A90(a1, *v1);
}

WeatherDaemon::ChangeDirection_optional sub_1A62793D4(Swift::String *a1)
{
  return ChangeDirection.init(rawValue:)(*a1);
}

uint64_t sub_1A62793E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ChangeDirection.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A6279404()
{
  sub_1A62795A0();
  return sub_1A63354F8();
}

uint64_t sub_1A6279460()
{
  sub_1A62795A0();
  return sub_1A63354BC();
}

void sub_1A62794AC(_BYTE *a1@<X8>)
{
  static ChangeDirection.read(from:)(a1);
}

void sub_1A62794C0()
{
  ChangeDirection.write(to:)();
}

uint64_t storeEnumTagSinglePayload for ChangeDirection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A6279520 + 4 * byte_1A633E14D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A6279554 + 4 * byte_1A633E148[v4]))();
}

uint64_t sub_1A6279554(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A627955C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6279564);
  return result;
}

uint64_t sub_1A6279570(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6279578);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A627957C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6279584(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ChangeDirection()
{
  return &type metadata for ChangeDirection;
}

unint64_t sub_1A62795A0()
{
  unint64_t result;

  result = qword_1ED21A458;
  if (!qword_1ED21A458)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for ChangeDirection, &type metadata for ChangeDirection);
    atomic_store(result, (unint64_t *)&qword_1ED21A458);
  }
  return result;
}

uint64_t WeatherAvailabilityCaching.hash(into:)()
{
  return sub_1A6335BAC();
}

BOOL static WeatherAvailabilityCaching.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t WeatherAvailabilityCaching.hashValue.getter()
{
  sub_1A6335BA0();
  sub_1A6335BAC();
  return sub_1A6335BC4();
}

unint64_t sub_1A627966C()
{
  unint64_t result;

  result = qword_1EE8476C8;
  if (!qword_1EE8476C8)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for WeatherAvailabilityCaching, &type metadata for WeatherAvailabilityCaching);
    atomic_store(result, (unint64_t *)&qword_1EE8476C8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WeatherAvailabilityCaching(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A62796F8 + 4 * byte_1A633E2C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A627972C + 4 * byte_1A633E2C0[v4]))();
}

uint64_t sub_1A627972C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6279734(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A627973CLL);
  return result;
}

uint64_t sub_1A6279748(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6279750);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A6279754(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A627975C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6279768()
{
  uint64_t v1;

  swift_retain();
  sub_1A6334D84();
  swift_release();
  return v1;
}

uint64_t sub_1A62797A8@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1A6279958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  if (!a4)
    return CLLocationCoordinate2D.cacheKey.getter();
  v5 = CLLocationCoordinate2D.cacheKey.getter();
  sub_1A63353F0();
  sub_1A63353F0();
  sub_1A63353F0();
  sub_1A62E0758();
  sub_1A63353F0();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1A62799E8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42[3];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CBA0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A6334F58();
  v44 = *(_QWORD *)(v9 - 8);
  v45 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED219570 != -1)
    swift_once();
  v46 = a1;
  v12 = sub_1A6334F04();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED22A2F0);
  swift_bridgeObjectRetain_n();
  v13 = sub_1A6334EEC();
  v14 = sub_1A633569C();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v43 = v3;
    v16 = v15;
    v17 = swift_slowAlloc();
    v53 = v17;
    *(_DWORD *)v16 = 141558275;
    v48 = 1752392040;
    sub_1A6335774();
    *(_WORD *)(v16 + 12) = 2081;
    sub_1A6334CDC();
    v48 = sub_1A61A6A1C(v46, a2, &v53);
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v13, v14, "Attempting to retrieve availableDataSets from cache; identifier=%{private,mask.hash}s",
      (uint8_t *)v16,
      0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v17, -1, -1);
    MEMORY[0x1A85BEFA8](v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v18 = sub_1A6279768();
  if (!v18)
  {
    v22 = sub_1A6334EEC();
    v23 = sub_1A6335690();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_1A6185000, v22, v23, "Cannot retrieve cached availableDataSets due to missing store", v24, 2u);
      MEMORY[0x1A85BEFA8](v24, -1, -1);
    }

    return MEMORY[0x1E0DEE9D8];
  }
  v19 = v18;
  sub_1A6335000();
  v56 = MEMORY[0x1E0DEA968];
  v57 = MEMORY[0x1E0DB2EC8];
  v20 = v46;
  v53 = v46;
  v54 = a2;
  sub_1A6334CDC();
  sub_1A6334FB8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
  v21 = sub_1A633506C();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v21);
  sub_1A6334FDC();
  v43 = v19;
  swift_release();
  sub_1A627B15C((uint64_t)v8);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v45);
  v25 = v48;
  if (!v48)
  {
    swift_bridgeObjectRetain_n();
    v36 = sub_1A6334EEC();
    v37 = sub_1A633569C();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = swift_slowAlloc();
      v39 = v20;
      v40 = swift_slowAlloc();
      v53 = v40;
      *(_DWORD *)v38 = 141558275;
      v48 = 1752392040;
      sub_1A6335774();
      *(_WORD *)(v38 + 12) = 2081;
      sub_1A6334CDC();
      v48 = sub_1A61A6A1C(v39, a2, &v53);
      sub_1A6335774();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A6185000, v36, v37, "Could not find availableDataSets data in cache; identifier=%{private,mask.hash}s",
        (uint8_t *)v38,
        0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85BEFA8](v40, -1, -1);
      MEMORY[0x1A85BEFA8](v38, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    goto LABEL_20;
  }
  v27 = v49;
  v26 = v50;
  v29 = v51;
  v28 = v52;
  v53 = v48;
  v54 = v49;
  v55 = v50;
  v56 = v51;
  v57 = v52;
  sub_1A62EDCCC();
  if (!v30)
  {
    sub_1A61DB490(v25);
LABEL_20:
    swift_release();
    return MEMORY[0x1E0DEE9D8];
  }
  v31 = v30;
  v42[0] = v25;
  v42[1] = v27;
  v42[2] = v26;
  v44 = v29;
  v45 = v28;
  swift_bridgeObjectRetain_n();
  v32 = sub_1A6334EEC();
  v33 = sub_1A633569C();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = swift_slowAlloc();
    v35 = swift_slowAlloc();
    v48 = v35;
    *(_DWORD *)v34 = 141558275;
    v47 = 1752392040;
    sub_1A6335774();
    *(_WORD *)(v34 + 12) = 2081;
    sub_1A6334CDC();
    v47 = sub_1A61A6A1C(v20, a2, &v48);
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v32, v33, "Successfully retrieved availableDataSets from cache; identifier=%{private,mask.hash}s",
      (uint8_t *)v34,
      0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v35, -1, -1);
    MEMORY[0x1A85BEFA8](v34, -1, -1);
    sub_1A61DB490(v42[0]);
    swift_release();

  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_1A61DB490(v42[0]);

    swift_release();
  }
  return v31;
}

uint64_t sub_1A627A228()
{
  return sub_1A61A51CC();
}

uint64_t sub_1A627A26C@<X0>(uint64_t *a1@<X0>, char a2@<W2>, uint64_t a3@<X3>, unint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v6;

  v6 = *a1;
  if ((a2 & 1) != 0)
    sub_1A627A2C0(*a1, a3, a4);
  *a5 = v6;
  return sub_1A6334CDC();
}

void sub_1A627A2C0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23[2];
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  v5 = sub_1A6332C24();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  if (sub_1A6279768())
  {
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6332C0C();
    sub_1A6332BA0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    sub_1A62E12D8();
    v27 = v24;
    v28 = v25;
    v29 = v26;
    sub_1A6334FF4();
    v24 = v27;
    v25 = v28;
    v26 = v29;
    sub_1A6334FD0();
    swift_release();
    if (qword_1ED219570 != -1)
      swift_once();
    v13 = sub_1A6334F04();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED22A2F0);
    sub_1A6334CDC();
    sub_1A61DB3F4((uint64_t)&v27);
    sub_1A6334CDC();
    sub_1A61DB3F4((uint64_t)&v27);
    v14 = sub_1A6334EEC();
    v15 = sub_1A633569C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v17 = swift_slowAlloc();
      v23[0] = v17;
      *(_DWORD *)v16 = 141558531;
      *(_QWORD *)&v24 = 1752392040;
      sub_1A6335774();
      *(_WORD *)(v16 + 12) = 2081;
      sub_1A6334CDC();
      *(_QWORD *)&v24 = sub_1A61A6A1C(a2, a3, v23);
      sub_1A6335774();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v16 + 22) = 2080;
      v18 = sub_1A61DB3F4((uint64_t)&v27);
      sub_1A62E8144(&v24, v18);
      sub_1A61DB394((uint64_t)&v27);
      v19 = sub_1A62E82A8(v24, BYTE8(v24));
      *(_QWORD *)&v24 = sub_1A61A6A1C(v19, v20, v23);
      sub_1A6335774();
      swift_bridgeObjectRelease();
      sub_1A61DB394((uint64_t)&v27);
      sub_1A61DB394((uint64_t)&v27);
      _os_log_impl(&dword_1A6185000, v14, v15, "Just cached availableDataSets; identifier=%{private,mask.hash}s. It's valid for another %s",
        (uint8_t *)v16,
        0x20u);
      swift_arrayDestroy();
      MEMORY[0x1A85BEFA8](v17, -1, -1);
      MEMORY[0x1A85BEFA8](v16, -1, -1);

      sub_1A61DB394((uint64_t)&v27);
    }
    else
    {
      sub_1A61DB394((uint64_t)&v27);
      swift_bridgeObjectRelease_n();
      sub_1A61DB394((uint64_t)&v27);
      sub_1A61DB394((uint64_t)&v27);

    }
    sub_1A627A8DC();
    swift_release();
  }
  else
  {
    if (qword_1ED219570 != -1)
      swift_once();
    v10 = sub_1A6334F04();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED22A2F0);
    v22 = sub_1A6334EEC();
    v11 = sub_1A6335690();
    if (os_log_type_enabled(v22, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_1A6185000, v22, v11, "Cannot cache availableDataSets due to missing store", v12, 2u);
      MEMORY[0x1A85BEFA8](v12, -1, -1);
    }

  }
}

void sub_1A627A8DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  NSObject *v15;
  uint64_t v16[5];

  v0 = sub_1A6332C24();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  v4 = sub_1A6334F58();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  if (sub_1A6279768())
  {
    sub_1A6335018();
    v16[3] = v0;
    v16[4] = MEMORY[0x1E0DB2918];
    __swift_allocate_boxed_opaque_existential_1(v16);
    sub_1A6332C0C();
    sub_1A6332BAC();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_1A6334FC4();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    sub_1A6335060();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (qword_1ED219570 != -1)
      swift_once();
    v11 = sub_1A6334F04();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED22A2F0);
    v12 = sub_1A6334EEC();
    v13 = sub_1A633569C();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_1A6185000, v12, v13, "Purged expired availableDataSets", v14, 2u);
      MEMORY[0x1A85BEFA8](v14, -1, -1);
      swift_release();

    }
    else
    {

      swift_release();
    }
  }
  else
  {
    if (qword_1ED219570 != -1)
      swift_once();
    v8 = sub_1A6334F04();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ED22A2F0);
    v15 = sub_1A6334EEC();
    v9 = sub_1A6335690();
    if (os_log_type_enabled(v15, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_1A6185000, v15, v9, "Cannot purge expired availableDataSets due to missing store", v10, 2u);
      MEMORY[0x1A85BEFA8](v10, -1, -1);
    }

  }
}

void sub_1A627ADA8()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  if (sub_1A6279768())
  {
    sub_1A6335018();
    sub_1A6335054();
    swift_release();
    swift_release();
  }
  else
  {
    if (qword_1ED219570 != -1)
      swift_once();
    v0 = sub_1A6334F04();
    __swift_project_value_buffer(v0, (uint64_t)qword_1ED22A2F0);
    oslog = sub_1A6334EEC();
    v1 = sub_1A6335690();
    if (os_log_type_enabled(oslog, v1))
    {
      v2 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v2 = 0;
      _os_log_impl(&dword_1A6185000, oslog, v1, "Cannot purge availableDataSets due to missing store", v2, 2u);
      MEMORY[0x1A85BEFA8](v2, -1, -1);
    }

  }
}

uint64_t sub_1A627B0C0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1A627B0EC()
{
  return sub_1A627A228();
}

uint64_t sub_1A627B11C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A627B140@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1A627A26C(a1, *(_BYTE *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_1A627B15C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CBA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t LocationInfo.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A618DAAC(v1, a1);
}

uint64_t LocationInfo.metadata.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A61CD678(a1, v1);
}

uint64_t (*LocationInfo.metadata.modify())(void)
{
  return nullsub_1;
}

void LocationInfo.primaryName.getter()
{
  OUTLINED_FUNCTION_0_43();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_8_3();
  OUTLINED_FUNCTION_29_1();
}

void LocationInfo.primaryName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  OUTLINED_FUNCTION_0_43();
  OUTLINED_FUNCTION_16();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*LocationInfo.primaryName.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_43();
  return nullsub_1;
}

void LocationInfo.secondaryName.getter()
{
  OUTLINED_FUNCTION_0_43();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_8_3();
  OUTLINED_FUNCTION_29_1();
}

void LocationInfo.secondaryName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  OUTLINED_FUNCTION_0_43();
  OUTLINED_FUNCTION_16();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*LocationInfo.secondaryName.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_43();
  return nullsub_1;
}

void LocationInfo.preciseName.getter()
{
  OUTLINED_FUNCTION_0_43();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_8_3();
  OUTLINED_FUNCTION_29_1();
}

void LocationInfo.preciseName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  OUTLINED_FUNCTION_0_43();
  OUTLINED_FUNCTION_16();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*LocationInfo.preciseName.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_43();
  return nullsub_1;
}

void LocationInfo.countryCode.getter()
{
  OUTLINED_FUNCTION_0_43();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_8_3();
  OUTLINED_FUNCTION_29_1();
}

void LocationInfo.countryCode.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  OUTLINED_FUNCTION_0_43();
  OUTLINED_FUNCTION_16();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*LocationInfo.countryCode.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_43();
  return nullsub_1;
}

void LocationInfo.timeZone.getter()
{
  OUTLINED_FUNCTION_0_43();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_8_3();
  OUTLINED_FUNCTION_29_1();
}

void LocationInfo.timeZone.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  OUTLINED_FUNCTION_0_43();
  OUTLINED_FUNCTION_16();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*LocationInfo.timeZone.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_43();
  return nullsub_1;
}

uint64_t sub_1A627B418(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 0x617461646174656DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1A6335ABC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x4E7972616D697270 && a2 == 0xEB00000000656D61;
    if (v6 || (sub_1A6335ABC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x7261646E6F636573 && a2 == 0xED0000656D614E79;
      if (v7 || (sub_1A6335ABC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x4E65736963657270 && a2 == 0xEB00000000656D61;
        if (v8 || (sub_1A6335ABC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x437972746E756F63 && a2 == 0xEB0000000065646FLL;
          if (v9 || (sub_1A6335ABC() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x656E6F5A656D6974 && a2 == 0xE800000000000000)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v11 = sub_1A6335ABC();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 5;
            else
              return 6;
          }
        }
      }
    }
  }
}

uint64_t sub_1A627B6D0()
{
  return 6;
}

uint64_t sub_1A627B6D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A627B418(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A627B6FC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A627B6D0();
  *a1 = result;
  return result;
}

uint64_t sub_1A627B720()
{
  sub_1A6188304();
  return sub_1A6335C18();
}

uint64_t sub_1A627B748()
{
  sub_1A6188304();
  return sub_1A6335C24();
}

void sub_1A627B770()
{
  static LocationInfo.read(from:)();
}

void sub_1A627B784()
{
  LocationInfo.write(to:)();
}

uint64_t LocationInfo.shortDescription.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t inited;
  int *v4;
  int *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED219600);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A633E680;
  *(_QWORD *)(inited + 32) = 0x4E7972616D697270;
  *(_QWORD *)(inited + 40) = 0xEB00000000656D61;
  v4 = (int *)OUTLINED_FUNCTION_0_43();
  v5 = v4;
  v6 = (_QWORD *)(v1 + v4[5]);
  v7 = v6[1];
  v8 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = *v6;
  *(_QWORD *)(inited + 56) = v7;
  *(_QWORD *)(inited + 72) = v8;
  strcpy((char *)(inited + 80), "secondaryName");
  *(_WORD *)(inited + 94) = -4864;
  v9 = (uint64_t *)(v1 + v4[6]);
  v10 = *v9;
  v11 = v9[1];
  v12 = 7104878;
  if (v11)
  {
    v13 = v11;
  }
  else
  {
    v10 = 7104878;
    v13 = 0xE300000000000000;
  }
  *(_QWORD *)(inited + 96) = v10;
  *(_QWORD *)(inited + 104) = v13;
  *(_QWORD *)(inited + 120) = v8;
  *(_QWORD *)(inited + 128) = 0x4E65736963657270;
  *(_QWORD *)(inited + 136) = 0xEB00000000656D61;
  v14 = (uint64_t *)(v1 + v4[7]);
  v15 = v14[1];
  if (v15)
    v16 = *v14;
  else
    v16 = 7104878;
  if (v15)
    v17 = v15;
  else
    v17 = 0xE300000000000000;
  *(_QWORD *)(inited + 144) = v16;
  *(_QWORD *)(inited + 152) = v17;
  *(_QWORD *)(inited + 168) = v8;
  *(_QWORD *)(inited + 176) = 0x437972746E756F63;
  *(_QWORD *)(inited + 184) = 0xEB0000000065646FLL;
  v18 = (uint64_t *)(v1 + v5[8]);
  if (v18[1])
  {
    v12 = *v18;
    v19 = v18[1];
  }
  else
  {
    v19 = 0xE300000000000000;
  }
  *(_QWORD *)(inited + 192) = v12;
  *(_QWORD *)(inited + 200) = v19;
  *(_QWORD *)(inited + 216) = v8;
  *(_QWORD *)(inited + 224) = 0x656E6F5A656D6974;
  *(_QWORD *)(inited + 232) = 0xE800000000000000;
  v20 = (uint64_t *)(v1 + v5[9]);
  v21 = *v20;
  v22 = v20[1];
  *(_QWORD *)(inited + 264) = v8;
  *(_QWORD *)(inited + 240) = v21;
  *(_QWORD *)(inited + 248) = v22;
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A6335288();
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2195C8);
  a1[4] = sub_1A627B9C0();
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1A6334CD0();
}

unint64_t sub_1A627B9C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2195C0;
  if (!qword_1ED2195C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2195C8);
    result = MEMORY[0x1A85BEED0](MEMORY[0x1E0DB3C80], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2195C0);
  }
  return result;
}

uint64_t sub_1A627BA04()
{
  return sub_1A618B274(&qword_1ED2195E8, (uint64_t (*)(uint64_t))type metadata accessor for LocationInfo, (uint64_t)&protocol conformance descriptor for LocationInfo);
}

uint64_t sub_1A627BA34()
{
  sub_1A618B274(&qword_1ED2195E0, (uint64_t (*)(uint64_t))type metadata accessor for LocationInfo, (uint64_t)&protocol conformance descriptor for LocationInfo);
  return sub_1A6334CC4();
}

char *initializeBufferWithCopyOfBuffer for LocationInfo(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A6332C24();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = (int *)type metadata accessor for Metadata();
    v8(&a1[v9[5]], &a2[v9[5]], v7);
    v10 = v9[6];
    v11 = &a1[v10];
    v12 = &a2[v10];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v10], 1, v7))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v8(v11, v12, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v7);
    }
    *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
    *(_QWORD *)&a1[v9[8]] = *(_QWORD *)&a2[v9[8]];
    *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
    v15 = v9[10];
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v18;
    v19 = v9[11];
    v20 = &a1[v19];
    v21 = &a2[v19];
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    v23 = v9[12];
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v26;
    a1[v9[13]] = a2[v9[13]];
    a1[v9[14]] = a2[v9[14]];
    v27 = v9[15];
    v28 = &a1[v27];
    v29 = &a2[v27];
    v30 = *((_QWORD *)v29 + 1);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *((_QWORD *)v28 + 1) = v30;
    v31 = a3[5];
    v32 = a3[6];
    v33 = &a1[v31];
    v34 = &a2[v31];
    v35 = *((_QWORD *)v34 + 1);
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *((_QWORD *)v33 + 1) = v35;
    v36 = &a1[v32];
    v37 = &a2[v32];
    v38 = *((_QWORD *)v37 + 1);
    *(_QWORD *)v36 = *(_QWORD *)v37;
    *((_QWORD *)v36 + 1) = v38;
    v39 = a3[7];
    v40 = a3[8];
    v41 = &a1[v39];
    v42 = &a2[v39];
    v43 = *((_QWORD *)v42 + 1);
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *((_QWORD *)v41 + 1) = v43;
    v44 = &a1[v40];
    v45 = &a2[v40];
    v46 = *((_QWORD *)v45 + 1);
    *(_QWORD *)v44 = *(_QWORD *)v45;
    *((_QWORD *)v44 + 1) = v46;
    v47 = a3[9];
    v48 = &a1[v47];
    v49 = &a2[v47];
    v50 = *((_QWORD *)v49 + 1);
    *(_QWORD *)v48 = *(_QWORD *)v49;
    *((_QWORD *)v48 + 1) = v50;
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
  }
  return a1;
}

char *assignWithCopy for LocationInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int EnumTagSinglePayload;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;

  v6 = sub_1A6332C24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = (int *)type metadata accessor for Metadata();
  v8(&a1[v9[5]], &a2[v9[5]], v6);
  v10 = v9[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v10], 1, v6);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v14)
    {
      v8(v11, v12, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
  *(_QWORD *)&a1[v9[8]] = *(_QWORD *)&a2[v9[8]];
  *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
  v16 = v9[10];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v19 = v9[11];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v22 = v9[12];
  v23 = &a1[v22];
  v24 = &a2[v22];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  a1[v9[13]] = a2[v9[13]];
  a1[v9[14]] = a2[v9[14]];
  v25 = v9[15];
  v26 = &a1[v25];
  v27 = &a2[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v28 = a3[5];
  v29 = &a1[v28];
  v30 = &a2[v28];
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v31 = a3[6];
  v32 = &a1[v31];
  v33 = &a2[v31];
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *((_QWORD *)v32 + 1) = *((_QWORD *)v33 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v34 = a3[7];
  v35 = &a1[v34];
  v36 = &a2[v34];
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v37 = a3[8];
  v38 = &a1[v37];
  v39 = &a2[v37];
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *((_QWORD *)v38 + 1) = *((_QWORD *)v39 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v40 = a3[9];
  v41 = &a1[v40];
  v42 = &a2[v40];
  *(_QWORD *)v41 = *(_QWORD *)v42;
  *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for LocationInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1A6332C24();
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for Metadata();
  v7(&a1[v8[5]], &a2[v8[5]], v6);
  v9 = v8[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v9], 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v7(v10, v11, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
  }
  *(_QWORD *)&a1[v8[7]] = *(_QWORD *)&a2[v8[7]];
  *(_QWORD *)&a1[v8[8]] = *(_QWORD *)&a2[v8[8]];
  *(_QWORD *)&a1[v8[9]] = *(_QWORD *)&a2[v8[9]];
  *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
  *(_OWORD *)&a1[v8[11]] = *(_OWORD *)&a2[v8[11]];
  *(_OWORD *)&a1[v8[12]] = *(_OWORD *)&a2[v8[12]];
  a1[v8[13]] = a2[v8[13]];
  a1[v8[14]] = a2[v8[14]];
  *(_OWORD *)&a1[v8[15]] = *(_OWORD *)&a2[v8[15]];
  v13 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  v14 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v14] = *(_OWORD *)&a2[v14];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  return a1;
}

char *assignWithTake for LocationInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int EnumTagSinglePayload;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;

  v6 = sub_1A6332C24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = (int *)type metadata accessor for Metadata();
  v8(&a1[v9[5]], &a2[v9[5]], v6);
  v10 = v9[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v10], 1, v6);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v14)
    {
      v8(v11, v12, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
  *(_QWORD *)&a1[v9[8]] = *(_QWORD *)&a2[v9[8]];
  *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
  v16 = v9[10];
  v17 = &a1[v16];
  v18 = (uint64_t *)&a2[v16];
  v20 = *v18;
  v19 = v18[1];
  *(_QWORD *)v17 = v20;
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v21 = v9[11];
  v22 = &a1[v21];
  v23 = (uint64_t *)&a2[v21];
  v25 = *v23;
  v24 = v23[1];
  *(_QWORD *)v22 = v25;
  *((_QWORD *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  v26 = v9[12];
  v27 = &a1[v26];
  v28 = (uint64_t *)&a2[v26];
  v30 = *v28;
  v29 = v28[1];
  *(_QWORD *)v27 = v30;
  *((_QWORD *)v27 + 1) = v29;
  swift_bridgeObjectRelease();
  a1[v9[13]] = a2[v9[13]];
  a1[v9[14]] = a2[v9[14]];
  v31 = v9[15];
  v32 = &a1[v31];
  v33 = (uint64_t *)&a2[v31];
  v35 = *v33;
  v34 = v33[1];
  *(_QWORD *)v32 = v35;
  *((_QWORD *)v32 + 1) = v34;
  swift_bridgeObjectRelease();
  v36 = a3[5];
  v37 = &a1[v36];
  v38 = (uint64_t *)&a2[v36];
  v40 = *v38;
  v39 = v38[1];
  *(_QWORD *)v37 = v40;
  *((_QWORD *)v37 + 1) = v39;
  swift_bridgeObjectRelease();
  v41 = a3[6];
  v42 = &a1[v41];
  v43 = (uint64_t *)&a2[v41];
  v45 = *v43;
  v44 = v43[1];
  *(_QWORD *)v42 = v45;
  *((_QWORD *)v42 + 1) = v44;
  swift_bridgeObjectRelease();
  v46 = a3[7];
  v47 = &a1[v46];
  v48 = (uint64_t *)&a2[v46];
  v50 = *v48;
  v49 = v48[1];
  *(_QWORD *)v47 = v50;
  *((_QWORD *)v47 + 1) = v49;
  swift_bridgeObjectRelease();
  v51 = a3[8];
  v52 = &a1[v51];
  v53 = (uint64_t *)&a2[v51];
  v55 = *v53;
  v54 = v53[1];
  *(_QWORD *)v52 = v55;
  *((_QWORD *)v52 + 1) = v54;
  swift_bridgeObjectRelease();
  v56 = a3[9];
  v57 = &a1[v56];
  v58 = (uint64_t *)&a2[v56];
  v60 = *v58;
  v59 = v58[1];
  *(_QWORD *)v57 = v60;
  *((_QWORD *)v57 + 1) = v59;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A627C3BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = type metadata accessor for Metadata();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

void sub_1A627C438(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = type metadata accessor for Metadata();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
    OUTLINED_FUNCTION_3_1();
  }
}

unint64_t sub_1A627C4AC()
{
  unint64_t result;

  result = qword_1EE8476D0;
  if (!qword_1EE8476D0)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633E604, &type metadata for LocationInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8476D0);
  }
  return result;
}

uint64_t InterpolationElement.init(value:date:)@<X0>(uint64_t a1@<X0>, double *a2@<X8>, double a3@<D0>)
{
  uint64_t v4;
  uint64_t v5;

  *a2 = a3;
  v4 = (uint64_t)a2 + *(int *)(type metadata accessor for InterpolationElement() + 20);
  v5 = OUTLINED_FUNCTION_6();
  return OUTLINED_FUNCTION_4(v4, a1, v5, *(uint64_t (**)(void))(*(_QWORD *)(v5 - 8) + 32));
}

uint64_t type metadata accessor for InterpolationElement()
{
  uint64_t result;

  result = qword_1ED219258;
  if (!qword_1ED219258)
    return swift_getSingletonMetadata();
  return result;
}

double InterpolationElement.value.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

uint64_t InterpolationElement.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InterpolationElement() + 20);
  v4 = OUTLINED_FUNCTION_6();
  return OUTLINED_FUNCTION_4(a1, v3, v4, *(uint64_t (**)(void))(*(_QWORD *)(v4 - 8) + 16));
}

uint64_t *initializeBufferWithCopyOfBuffer for InterpolationElement(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1A6332C24();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for InterpolationElement(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_1A6332C24();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *initializeWithCopy for InterpolationElement(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A6332C24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithCopy for InterpolationElement(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A6332C24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *initializeWithTake for InterpolationElement(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A6332C24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for InterpolationElement(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A6332C24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for InterpolationElement()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A627C7EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = OUTLINED_FUNCTION_6();
  return __swift_getEnumTagSinglePayload(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for InterpolationElement()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A627C82C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = OUTLINED_FUNCTION_6();
  return __swift_storeEnumTagSinglePayload(v5, a2, a2, v6);
}

uint64_t sub_1A627C864()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A6332C24();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t WeatherRequestLocationOptions.decimalPrecision.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t WeatherRequestLocationOptions.limitsPrecision.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t sub_1A627C8F0(uint64_t a1, uint64_t a2)
{
  char v6;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001A634AF50 || (sub_1A6335ABC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72507374696D696CLL && a2 == 0xEF6E6F6973696365)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A6335ABC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A627C9FC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x72507374696D696CLL;
  else
    return 0xD000000000000010;
}

uint64_t sub_1A627CA44()
{
  char *v0;

  return sub_1A627C9FC(*v0);
}

uint64_t sub_1A627CA4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A627C8F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A627CA70()
{
  sub_1A627CBE0();
  return sub_1A6335C18();
}

uint64_t sub_1A627CA98()
{
  sub_1A627CBE0();
  return sub_1A6335C24();
}

void WeatherRequestLocationOptions.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  char v10;
  char v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8476D8);
  v8 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(unsigned __int8 *)(v1 + 9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A627CBE0();
  sub_1A6335BF4();
  v11 = 0;
  sub_1A6335A38();
  if (!v2)
  {
    v10 = 1;
    sub_1A6335A14();
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v4);
  OUTLINED_FUNCTION_1();
}

unint64_t sub_1A627CBE0()
{
  unint64_t result;

  result = qword_1EE8476E0;
  if (!qword_1EE8476E0)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633E814, &type metadata for WeatherRequestLocationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8476E0);
  }
  return result;
}

void WeatherRequestLocationOptions.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8476E8);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A627CBE0();
  sub_1A6335BDC();
  if (!v2)
  {
    v6 = sub_1A6335990();
    v8 = v7;
    v9 = sub_1A6335978();
    OUTLINED_FUNCTION_2_7();
    *(_QWORD *)a2 = v6;
    *(_BYTE *)(a2 + 8) = v8 & 1;
    *(_BYTE *)(a2 + 9) = v9;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  OUTLINED_FUNCTION_1();
}

void sub_1A627CD48(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  WeatherRequestLocationOptions.init(from:)(a1, a2);
}

void sub_1A627CD5C(_QWORD *a1)
{
  WeatherRequestLocationOptions.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for WeatherRequestLocationOptions.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A627CDBC + 4 * byte_1A633E6C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A627CDF0 + 4 * asc_1A633E6C0[v4]))();
}

uint64_t sub_1A627CDF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A627CDF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A627CE00);
  return result;
}

uint64_t sub_1A627CE0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A627CE14);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A627CE18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A627CE20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WeatherRequestLocationOptions.CodingKeys()
{
  return &type metadata for WeatherRequestLocationOptions.CodingKeys;
}

unint64_t sub_1A627CE40()
{
  unint64_t result;

  result = qword_1EE8476F0;
  if (!qword_1EE8476F0)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633E7EC, &type metadata for WeatherRequestLocationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8476F0);
  }
  return result;
}

unint64_t sub_1A627CE80()
{
  unint64_t result;

  result = qword_1EE8476F8;
  if (!qword_1EE8476F8)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633E75C, &type metadata for WeatherRequestLocationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8476F8);
  }
  return result;
}

unint64_t sub_1A627CEC0()
{
  unint64_t result;

  result = qword_1EE847700;
  if (!qword_1EE847700)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633E784, &type metadata for WeatherRequestLocationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847700);
  }
  return result;
}

void static TideEventsUnavailableDescriptor.name.getter()
{
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_53();
}

void static TideEventsUnavailableDescriptor.name.setter()
{
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_1_8();
}

uint64_t (*static TideEventsUnavailableDescriptor.name.modify())()
{
  OUTLINED_FUNCTION_0_11();
  return j__swift_endAccess;
}

uint64_t sub_1A627CFB4()
{
  uint64_t result;

  sub_1A6334CDC();
  sub_1A63353F0();
  result = swift_bridgeObjectRelease();
  qword_1ED21C2D0 = 0x2E312E312E30;
  *(_QWORD *)algn_1ED21C2D8 = 0xE600000000000000;
  return result;
}

void static TideEventsUnavailableDescriptor.version.getter()
{
  if (qword_1ED21C2E0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_53();
}

void static TideEventsUnavailableDescriptor.version.setter()
{
  if (qword_1ED21C2E0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_1_8();
}

uint64_t (*static TideEventsUnavailableDescriptor.version.modify())()
{
  if (qword_1ED21C2E0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  return j_j__swift_endAccess;
}

ValueMetadata *type metadata accessor for TideEventsUnavailableDescriptor()
{
  return &type metadata for TideEventsUnavailableDescriptor;
}

uint64_t MarineHourForecast.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_6();
  return OUTLINED_FUNCTION_4(a1, v1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 16));
}

uint64_t MarineHourForecast.date.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_6();
  return OUTLINED_FUNCTION_4(v1, a1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 40));
}

uint64_t (*MarineHourForecast.date.modify())(void)
{
  return nullsub_1;
}

double MarineHourForecast.primarySwell.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  double result;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_0_44() + 20);
  result = *(double *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(double *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for MarineHourForecast()
{
  uint64_t result;

  result = qword_1EE847798;
  if (!qword_1EE847798)
    return swift_getSingletonMetadata();
  return result;
}

__n128 MarineHourForecast.primarySwell.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  __n128 *v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = (__n128 *)(v1 + *(int *)(OUTLINED_FUNCTION_0_44() + 20));
  result = v5;
  *v3 = v5;
  v3[1].n128_u64[0] = v2;
  return result;
}

uint64_t (*MarineHourForecast.primarySwell.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_44();
  return nullsub_1;
}

double MarineHourForecast.waterTemperature.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(OUTLINED_FUNCTION_0_44() + 24));
}

uint64_t MarineHourForecast.waterTemperature.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = OUTLINED_FUNCTION_0_44();
  *(double *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*MarineHourForecast.waterTemperature.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_44();
  return nullsub_1;
}

uint64_t MarineHourForecast.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = sub_1A6332C24();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_2();
  v7 = v6 - v5;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847718);
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_2();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A627D544();
  sub_1A6335BDC();
  if (!v15)
  {
    LOBYTE(v16) = 0;
    sub_1A6189BFC(&qword_1ED21B8A0, MEMORY[0x1E0CB08C0]);
    sub_1A63359D8();
    sub_1A627D580();
    sub_1A63359D8();
    sub_1A63359C0();
    v10 = v9;
    OUTLINED_FUNCTION_3_29();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(a2, v7, v3);
    v11 = type metadata accessor for MarineHourForecast();
    v12 = (_QWORD *)(a2 + *(int *)(v11 + 20));
    *v12 = v16;
    v12[1] = v17;
    v12[2] = v18;
    *(_QWORD *)(a2 + *(int *)(v11 + 24)) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1A627D544()
{
  unint64_t result;

  result = qword_1EE847720;
  if (!qword_1EE847720)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633EA8C, &type metadata for MarineHourForecast.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847720);
  }
  return result;
}

unint64_t sub_1A627D580()
{
  unint64_t result;

  result = qword_1EE847728;
  if (!qword_1EE847728)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for Swell, &type metadata for Swell);
    atomic_store(result, (unint64_t *)&qword_1EE847728);
  }
  return result;
}

uint64_t MarineHourForecast.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847730);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_2();
  v7 = v6 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A627D544();
  sub_1A6335BF4();
  sub_1A6332C24();
  sub_1A6189BFC(&qword_1ED21B898, MEMORY[0x1E0CB0890]);
  OUTLINED_FUNCTION_3();
  if (!v1)
  {
    type metadata accessor for MarineHourForecast();
    sub_1A627D740();
    OUTLINED_FUNCTION_3();
    sub_1A6335A68();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_1A627D740()
{
  unint64_t result;

  result = qword_1EE847738;
  if (!qword_1EE847738)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for Swell, &type metadata for Swell);
    atomic_store(result, (unint64_t *)&qword_1EE847738);
  }
  return result;
}

uint64_t sub_1A627D77C()
{
  unint64_t v0;

  v0 = sub_1A6335918();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1A627D7C8(char a1)
{
  if (!a1)
    return 1702125924;
  if (a1 == 1)
    return 0x537972616D697270;
  return 0xD000000000000010;
}

void sub_1A627D824(char *a1, char *a2)
{
  sub_1A6243B10(*a1, *a2);
}

void sub_1A627D830()
{
  sub_1A62DE2D0();
}

uint64_t sub_1A627D838(uint64_t a1)
{
  char *v1;

  return sub_1A61F47A4(a1, *v1);
}

void sub_1A627D840()
{
  sub_1A61F5BA4();
}

uint64_t sub_1A627D848@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A627D77C();
  *a1 = result;
  return result;
}

uint64_t sub_1A627D874@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1A627D7C8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A627D89C()
{
  char *v0;

  return sub_1A627D7C8(*v0);
}

uint64_t sub_1A627D8A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A627D7C4();
  *a1 = result;
  return result;
}

uint64_t sub_1A627D8C8()
{
  sub_1A627D544();
  return sub_1A6335C18();
}

uint64_t sub_1A627D8F0()
{
  sub_1A627D544();
  return sub_1A6335C24();
}

uint64_t sub_1A627D918@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MarineHourForecast.init(from:)(a1, a2);
}

uint64_t sub_1A627D92C(_QWORD *a1)
{
  return MarineHourForecast.encode(to:)(a1);
}

BOOL static MarineHourForecast.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  double *v9;
  BOOL v10;

  if ((sub_1A6332BE8() & 1) == 0)
    return 0;
  v4 = OUTLINED_FUNCTION_0_44();
  v5 = *(int *)(v4 + 20);
  v6 = *(double *)(a1 + v5);
  v7 = *(double *)(a1 + v5 + 8);
  v8 = *(double *)(a1 + v5 + 16);
  v9 = (double *)(a2 + v5);
  v10 = v6 == *v9 && v7 == v9[1];
  return v10 && v8 == v9[2] && *(double *)(a1 + *(int *)(v4 + 24)) == *(double *)(a2 + *(int *)(v4 + 24));
}

uint64_t *initializeBufferWithCopyOfBuffer for MarineHourForecast(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A6332C24();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_OWORD *)v10 = *(_OWORD *)v11;
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
  }
  return a1;
}

uint64_t initializeWithCopy for MarineHourForecast(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1A6332C24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t assignWithCopy for MarineHourForecast(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1A6332C24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for MarineHourForecast(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1A6332C24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for MarineHourForecast(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1A6332C24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for MarineHourForecast()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A627DC40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_6();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MarineHourForecast()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A627DC7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_6();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_1A627DCB0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A6332C24();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MarineHourForecast.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A627DD7C + 4 * byte_1A633E8C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A627DDB0 + 4 * asc_1A633E8C0[v4]))();
}

uint64_t sub_1A627DDB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A627DDB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A627DDC0);
  return result;
}

uint64_t sub_1A627DDCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A627DDD4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A627DDD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A627DDE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MarineHourForecast.CodingKeys()
{
  return &type metadata for MarineHourForecast.CodingKeys;
}

unint64_t sub_1A627DE00()
{
  unint64_t result;

  result = qword_1EE8477D8;
  if (!qword_1EE8477D8)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633EA64, &type metadata for MarineHourForecast.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8477D8);
  }
  return result;
}

unint64_t sub_1A627DE40()
{
  unint64_t result;

  result = qword_1EE8477E0;
  if (!qword_1EE8477E0)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633E99C, &type metadata for MarineHourForecast.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8477E0);
  }
  return result;
}

unint64_t sub_1A627DE80()
{
  unint64_t result;

  result = qword_1EE8477E8;
  if (!qword_1EE8477E8)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633E9C4, &type metadata for MarineHourForecast.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8477E8);
  }
  return result;
}

uint64_t sub_1A627DEBC(uint64_t a1)
{
  uint64_t result;

  result = sub_1A627DF30(&qword_1ED219DA0, (uint64_t)&protocol conformance descriptor for WeatherAlert);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for WeatherAlertResource()
{
  return &type metadata for WeatherAlertResource;
}

_UNKNOWN **sub_1A627DF00()
{
  return &off_1E500A328;
}

uint64_t sub_1A627DF0C()
{
  return sub_1A627DF30(qword_1EE847830, (uint64_t)&unk_1A633EB10);
}

uint64_t sub_1A627DF30(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for WeatherAlert();
    result = MEMORY[0x1A85BEED0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

id sub_1A627DF70(uint64_t a1)
{
  return sub_1A627DFA4(a1, &qword_1ED2197E0);
}

id static NSOperationQueue.notifications.getter()
{
  return sub_1A61BC4C8(&qword_1ED2197E8, (id *)&qword_1ED2197E0);
}

id sub_1A627DF98(uint64_t a1)
{
  return sub_1A627DFA4(a1, &qword_1ED2197D0);
}

id sub_1A627DFA4(uint64_t a1, _QWORD *a2)
{
  id v3;
  id result;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3828]), sel_init);
  objc_msgSend(v3, sel_setMaxConcurrentOperationCount_, 1);
  if (qword_1ED219B78 != -1)
    swift_once();
  result = objc_msgSend(v3, sel_setUnderlyingQueue_, qword_1ED219B70);
  *a2 = v3;
  return result;
}

id static NSOperationQueue.cloudChannels.getter()
{
  return sub_1A61BC4C8(&qword_1ED2197D8, (id *)&qword_1ED2197D0);
}

uint64_t WDSNetworkActivity.domain.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t WDSNetworkActivity.label.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t WDSNetworkActivity.parentToken.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_5_25() + 24);
  return sub_1A61C5760(v3, a1);
}

uint64_t sub_1A627E088(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A6335ABC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6C6562616CLL && a2 == 0xE500000000000000;
    if (v6 || (sub_1A6335ABC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6F54746E65726170 && a2 == 0xEB000000006E656BLL)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1A6335ABC();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1A627E1DC(char a1)
{
  if (!a1)
    return 0x6E69616D6F64;
  if (a1 == 1)
    return 0x6C6562616CLL;
  return 0x6F54746E65726170;
}

uint64_t sub_1A627E234()
{
  char *v0;

  return sub_1A627E1DC(*v0);
}

uint64_t sub_1A627E23C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A627E088(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A627E260()
{
  sub_1A627E3F8();
  return sub_1A6335C18();
}

uint64_t sub_1A627E288()
{
  sub_1A627E3F8();
  return sub_1A6335C24();
}

uint64_t WDSNetworkActivity.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847878);
  OUTLINED_FUNCTION_18_0();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_2();
  v8 = v7 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A627E3F8();
  sub_1A6335BF4();
  OUTLINED_FUNCTION_0_38();
  if (!v2)
  {
    OUTLINED_FUNCTION_0_38();
    type metadata accessor for WDSNetworkActivity();
    sub_1A6332C54();
    sub_1A627E62C(&qword_1ED219F88, MEMORY[0x1E0CB09B8]);
    sub_1A6335A44();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v8, v1);
}

unint64_t sub_1A627E3F8()
{
  unint64_t result;

  result = qword_1EE847880;
  if (!qword_1EE847880)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633ECB8, &type metadata for WDSNetworkActivity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847880);
  }
  return result;
}

uint64_t WDSNetworkActivity.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v18;
  uint64_t v19;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C350);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_2();
  v6 = v5 - v4;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847888);
  v7 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_2();
  v10 = v9 - v8;
  v11 = type metadata accessor for WDSNetworkActivity();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_2();
  v15 = (uint64_t *)(v14 - v13);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A627E3F8();
  sub_1A6335BDC();
  if (!v19)
  {
    *v15 = OUTLINED_FUNCTION_1_30();
    v15[1] = OUTLINED_FUNCTION_1_30();
    sub_1A6332C54();
    sub_1A627E62C(&qword_1ED219F90, MEMORY[0x1E0CB09E0]);
    sub_1A633599C();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v18);
    sub_1A61C57A8(v6, (uint64_t)v15 + *(int *)(v11 + 24));
    sub_1A627E66C((uint64_t)v15, a2);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A627E62C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1A6332C54();
    result = MEMORY[0x1A85BEED0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A627E66C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WDSNetworkActivity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A627E6B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WDSNetworkActivity.init(from:)(a1, a2);
}

uint64_t sub_1A627E6C4(_QWORD *a1)
{
  return WDSNetworkActivity.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for WDSNetworkActivity(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v5 = *(int *)(a3 + 24);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1A6332C54();
    if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C350);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t destroy for WDSNetworkActivity(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = sub_1A6332C54();
  result = __swift_getEnumTagSinglePayload(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return result;
}

_OWORD *initializeWithCopy for WDSNetworkActivity(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A6332C54();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C350);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *assignWithCopy for WDSNetworkActivity(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  int EnumTagSinglePayload;
  int v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A6332C54();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v5, 1, v7);
  v9 = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7);
  if (!EnumTagSinglePayload)
  {
    v10 = *(_QWORD *)(v7 - 8);
    if (!v9)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v9)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C350);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  return a1;
}

_OWORD *initializeWithTake for WDSNetworkActivity(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A6332C54();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C350);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

_OWORD *assignWithTake for WDSNetworkActivity(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  int EnumTagSinglePayload;
  int v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A6332C54();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v5, 1, v7);
  v9 = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7);
  if (!EnumTagSinglePayload)
  {
    v10 = *(_QWORD *)(v7 - 8);
    if (!v9)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v9)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C350);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  return a1;
}

uint64_t sub_1A627EB64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 24);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C350);
  return __swift_getEnumTagSinglePayload(v4, a2, v5);
}

uint64_t sub_1A627EBA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 24);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C350);
  return __swift_storeEnumTagSinglePayload(v5, a2, a2, v6);
}

uint64_t storeEnumTagSinglePayload for WDSNetworkActivity.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A627EC2C + 4 * byte_1A633EB75[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A627EC60 + 4 * byte_1A633EB70[v4]))();
}

uint64_t sub_1A627EC60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A627EC68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A627EC70);
  return result;
}

uint64_t sub_1A627EC7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A627EC84);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A627EC88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A627EC90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WDSNetworkActivity.CodingKeys()
{
  return &type metadata for WDSNetworkActivity.CodingKeys;
}

unint64_t sub_1A627ECB0()
{
  unint64_t result;

  result = qword_1EE847890;
  if (!qword_1EE847890)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633EC90, &type metadata for WDSNetworkActivity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847890);
  }
  return result;
}

unint64_t sub_1A627ECF0()
{
  unint64_t result;

  result = qword_1EE847898;
  if (!qword_1EE847898)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633EC00, &type metadata for WDSNetworkActivity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847898);
  }
  return result;
}

unint64_t sub_1A627ED30()
{
  unint64_t result;

  result = qword_1EE8478A0[0];
  if (!qword_1EE8478A0[0])
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633EC28, &type metadata for WDSNetworkActivity.CodingKeys);
    atomic_store(result, qword_1EE8478A0);
  }
  return result;
}

uint64_t sub_1A627ED6C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C350);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A627EDAC(double a1, double a2)
{
  uint64_t *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t v7;

  v3 = *v2;
  if (*v2)
  {
    if (*(_QWORD *)(v3 + 16) != 4)
      return 0;
    v4 = *(double *)(v3 + 32) > a2 || *(double *)(v3 + 48) < a2;
    v5 = v4 || *(double *)(v3 + 40) > a1;
    if (v5 || *(double *)(v3 + 56) < a1)
      return 0;
  }
  v7 = v2[1];
  if (!v7)
    return 0;
  else
    return Array<A>.contains(_:)(v7);
}

BOOL static GeoJSON.Polygon.== infix(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  char v24;
  uint64_t v25;
  char v26;
  char *v27;
  uint64_t v28;
  char v29;
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v37 = a4;
  v35 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v34 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A633575C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v36 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v10 = (char *)&v32 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v32 - v15;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v32 - v19;
  v21 = *a2;
  if (*a1)
  {
    if (!v21 || !sub_1A61CD7E0(*a1, v21))
      return 0;
  }
  else if (v21)
  {
    return 0;
  }
  v22 = (_QWORD *)a1[1];
  v23 = (_QWORD *)a2[1];
  if (v22)
  {
    if (!v23)
      return 0;
    sub_1A61CD84C(v22, v23);
    if ((v24 & 1) == 0)
      return 0;
  }
  else if (v23)
  {
    return 0;
  }
  v33 = type metadata accessor for GeoJSON.Polygon(0, a3, v37, v18);
  OUTLINED_FUNCTION_11_1((uint64_t)v20, (uint64_t)a1 + *(int *)(v33 + 40));
  OUTLINED_FUNCTION_11_1((uint64_t)v16, (uint64_t)a2 + *(int *)(v33 + 40));
  v25 = (uint64_t)&v10[*(int *)(TupleTypeMetadata2 + 48)];
  OUTLINED_FUNCTION_11_1((uint64_t)v10, (uint64_t)v20);
  OUTLINED_FUNCTION_11_1(v25, (uint64_t)v16);
  OUTLINED_FUNCTION_5_15((uint64_t)v10);
  if (v26)
  {
    OUTLINED_FUNCTION_5_2((uint64_t)v16);
    OUTLINED_FUNCTION_5_2((uint64_t)v20);
    OUTLINED_FUNCTION_5_15(v25);
    if (v26)
    {
      OUTLINED_FUNCTION_5_2((uint64_t)v10);
      return 1;
    }
    goto LABEL_19;
  }
  OUTLINED_FUNCTION_11_1((uint64_t)v13, (uint64_t)v10);
  OUTLINED_FUNCTION_5_15(v25);
  if (v26)
  {
    OUTLINED_FUNCTION_5_2((uint64_t)v16);
    OUTLINED_FUNCTION_5_2((uint64_t)v20);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, a3);
LABEL_19:
    (*(void (**)(char *, uint64_t))(v36 + 8))(v10, TupleTypeMetadata2);
    return 0;
  }
  v27 = v34;
  v28 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v34, v25, a3);
  v29 = sub_1A63352DC();
  v30 = *(void (**)(char *, uint64_t))(v28 + 8);
  v30(v27, a3);
  OUTLINED_FUNCTION_7_24((uint64_t)v16);
  OUTLINED_FUNCTION_7_24((uint64_t)v20);
  v30(v13, a3);
  OUTLINED_FUNCTION_7_24((uint64_t)v10);
  return (v29 & 1) != 0;
}

uint64_t type metadata accessor for GeoJSON.Polygon(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for GeoJSON.Polygon);
}

uint64_t GeoJSON.Polygon.boundingBox.getter()
{
  return sub_1A6334CDC();
}

uint64_t GeoJSON.Polygon.coordinates.getter()
{
  return sub_1A6334CDC();
}

uint64_t GeoJSON.Polygon.properties.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 40);
  v5 = sub_1A633575C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t GeoJSON.Polygon.init(boundingBox:coordinates:properties:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  char *v7;
  uint64_t v8;

  *a6 = a1;
  a6[1] = a2;
  v7 = (char *)a6 + *(int *)(type metadata accessor for GeoJSON.Polygon(0, a4, a5, a4) + 40);
  v8 = sub_1A633575C();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a3, v8);
}

uint64_t sub_1A627F1A0()
{
  unint64_t v0;

  v0 = sub_1A6335918();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_1A627F1EC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A627F218 + 4 * byte_1A633ED08[a1]))(1701869940, 0xE400000000000000);
}

uint64_t sub_1A627F218()
{
  return 2020565602;
}

uint64_t sub_1A627F224()
{
  return 0x616E6964726F6F63;
}

uint64_t sub_1A627F244()
{
  return 0x69747265706F7270;
}

uint64_t sub_1A627F264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85BEED0](&unk_1A633EE50, a3);
  return sub_1A6335B10();
}

uint64_t sub_1A627F2B8(uint64_t a1)
{
  MEMORY[0x1A85BEED0](&unk_1A633EE50, a1);
  return sub_1A63354D4();
}

uint64_t sub_1A627F304()
{
  MEMORY[0x1A85BEED0](&unk_1A633EE50);
  return sub_1A63354EC();
}

uint64_t sub_1A627F354()
{
  MEMORY[0x1A85BEED0](&unk_1A633EE50);
  return sub_1A63354E0();
}

uint64_t sub_1A627F3A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A627F1A0();
  *a1 = result;
  return result;
}

uint64_t sub_1A627F3D8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1A627F1EC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A627F404(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1A627F260(*v1, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t sub_1A627F410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t result;

  result = sub_1A627F1E8(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
  *a4 = result;
  return result;
}

uint64_t sub_1A627F43C(uint64_t a1)
{
  MEMORY[0x1A85BEED0](&unk_1A633EEF0, a1);
  return sub_1A6335C18();
}

uint64_t sub_1A627F470(uint64_t a1)
{
  MEMORY[0x1A85BEED0](&unk_1A633EEF0, a1);
  return sub_1A6335C24();
}

void GeoJSON.Polygon.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v31 = a4;
  v30 = sub_1A633575C();
  v32 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v29 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v27 - v9;
  v33 = a3;
  v12 = _s7PolygonV10CodingKeysOMa(255, a2, a3, v11);
  MEMORY[0x1A85BEED0](&unk_1A633EEF0, v12);
  v35 = sub_1A63359F0();
  MEMORY[0x1E0C80A78](v35);
  v14 = (char *)&v27 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v34 = v14;
  v15 = (uint64_t)a1;
  v16 = v36;
  sub_1A6335BDC();
  if (!v16)
  {
    v17 = v10;
    v18 = v32;
    v19 = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846B00);
    v38 = 1;
    sub_1A623C6D0(&qword_1EE846B08, MEMORY[0x1E0DEB0A8], MEMORY[0x1E0DEAF40]);
    OUTLINED_FUNCTION_0_45();
    v36 = a1;
    v20 = v39;
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846B18);
    v38 = 2;
    v22 = MEMORY[0x1E0DEAF40];
    v37 = sub_1A623C818(&qword_1EE846B20, &qword_1EE846B08, MEMORY[0x1E0DEB0A8], MEMORY[0x1E0DEAF40]);
    MEMORY[0x1A85BEED0](v22, v21, &v37);
    OUTLINED_FUNCTION_0_45();
    v28 = v20;
    v23 = v39;
    LOBYTE(v39) = 3;
    sub_1A633599C();
    v15 = (uint64_t)v36;
    OUTLINED_FUNCTION_2_33();
    v24 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    v25 = v23;
    v26 = (uint64_t)v29;
    v24(v29, v17, v30);
    GeoJSON.Polygon.init(boundingBox:coordinates:properties:)(v28, v25, v26, a2, v19, v31);
  }
  __swift_destroy_boxed_opaque_existential_1(v15);
  OUTLINED_FUNCTION_1();
}

uint64_t _s7PolygonV10CodingKeysOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s7PolygonV10CodingKeysOMn);
}

void GeoJSON.Polygon.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v6 = *(_QWORD *)(a2 + 16);
  v15 = *(_QWORD *)(a2 + 24);
  v16 = v6;
  v7 = _s7PolygonV10CodingKeysOMa(255, v6, v15, a4);
  MEMORY[0x1A85BEED0](&unk_1A633EEF0, v7);
  v8 = sub_1A6335A8C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v14 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6335BF4();
  LOBYTE(v20) = 0;
  v12 = v18;
  sub_1A6335A50();
  if (!v12)
  {
    v13 = v17;
    v20 = *v17;
    v19 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846B00);
    sub_1A623C6D0(&qword_1EE846B30, MEMORY[0x1E0DEB080], MEMORY[0x1E0DEAF10]);
    OUTLINED_FUNCTION_1_15();
    v20 = v13[1];
    v19 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846B18);
    sub_1A623C794();
    OUTLINED_FUNCTION_1_15();
    LOBYTE(v20) = 3;
    sub_1A6335A44();
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  OUTLINED_FUNCTION_1();
}

void sub_1A627F93C(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  GeoJSON.Polygon.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

void sub_1A627F958(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  GeoJSON.Polygon.encode(to:)(a1, a2, a3, a4);
}

BOOL sub_1A627F96C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return static GeoJSON.Polygon.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_1A627F978()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A633575C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A627F9F0(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v16;
  int v17;
  uint64_t v18;
  unsigned int EnumTagSinglePayload;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if ((_DWORD)v6)
    v7 = v6 - 1;
  else
    v7 = 0;
  if (v7 <= 0x7FFFFFFE)
    v8 = 2147483646;
  else
    v8 = v7;
  v9 = *(_QWORD *)(v5 + 64);
  if (!(_DWORD)v6)
    ++v9;
  if (!a2)
    return 0;
  v10 = *(unsigned __int8 *)(v5 + 80);
  v11 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_27;
  v12 = v9 + ((v10 + 16) & ~v10);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v16 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v16))
    {
      v14 = *(_DWORD *)((char *)a1 + v12);
      if (!v14)
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v16 > 0xFF)
    {
      v14 = *(unsigned __int16 *)((char *)a1 + v12);
      if (!*(_WORD *)((char *)a1 + v12))
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v16 < 2)
    {
LABEL_27:
      if (v7 > 0x7FFFFFFE)
      {
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload(((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v10 + 8) & ~v10, v6, v4);
        if (EnumTagSinglePayload >= 2)
          return EnumTagSinglePayload - 1;
        else
          return 0;
      }
      else
      {
        v18 = *a1;
        if (*a1 >= 0xFFFFFFFFuLL)
          LODWORD(v18) = -1;
        if ((v18 + 1) >= 2)
          return v18;
        else
          return 0;
      }
    }
  }
  v14 = *((unsigned __int8 *)a1 + v12);
  if (!*((_BYTE *)a1 + v12))
    goto LABEL_27;
LABEL_20:
  v17 = (v14 - 1) << v13;
  if (v12 > 3)
    v17 = 0;
  if ((_DWORD)v12)
  {
    if (v12 > 3)
      LODWORD(v12) = 4;
    __asm { BR              X12 }
  }
  return v8 + v17 + 1;
}

void sub_1A627FB74(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  size_t v13;
  char v14;
  BOOL v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  int v19;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  if (v9 <= 0x7FFFFFFE)
    v10 = 2147483646;
  else
    v10 = v9;
  v11 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v12 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v12;
  v13 = v11 + v12;
  v14 = 8 * (v11 + v12);
  v15 = a3 >= v10;
  v16 = a3 - v10;
  if (v16 != 0 && v15)
  {
    if (v13 <= 3)
    {
      v17 = ((v16 + ~(-1 << v14)) >> v14) + 1;
      if (HIWORD(v17))
      {
        v6 = 4u;
      }
      else if (v17 >= 0x100)
      {
        v6 = 2;
      }
      else
      {
        v6 = v17 > 1;
      }
    }
    else
    {
      v6 = 1u;
    }
  }
  if (v10 < a2)
  {
    v18 = ~v10 + a2;
    if (v13 < 4)
    {
      if ((_DWORD)v13)
      {
        v19 = v18 & ~(-1 << v14);
        bzero(a1, v13);
        if ((_DWORD)v13 == 3)
        {
          *a1 = v19;
          *((_BYTE *)a1 + 2) = BYTE2(v19);
        }
        else if ((_DWORD)v13 == 2)
        {
          *a1 = v19;
        }
        else
        {
          *(_BYTE *)a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v13);
      *(_DWORD *)a1 = v18;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void sub_1A627FDD0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1A627FDD8()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_1A627FDF8()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1A627FE08()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1A627FE10()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_1A627FE1C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A627FE68 + 4 * byte_1A633ED23[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A627FE9C + 4 * byte_1A633ED1E[v4]))();
}

uint64_t sub_1A627FE9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A627FEA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A627FEACLL);
  return result;
}

uint64_t sub_1A627FEB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A627FEC0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A627FEC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A627FECC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1A627FED8()
{
  JUMPOUT(0x1A85BEED0);
}

void sub_1A627FEE8()
{
  JUMPOUT(0x1A85BEED0);
}

void sub_1A627FEF8()
{
  JUMPOUT(0x1A85BEED0);
}

ValueMetadata *type metadata accessor for DailyWeatherStatisticsResource()
{
  return &type metadata for DailyWeatherStatisticsResource;
}

_UNKNOWN **sub_1A627FF18()
{
  return &off_1E5002C90;
}

unint64_t sub_1A627FF28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE8479B8;
  if (!qword_1EE8479B8)
  {
    v1 = type metadata accessor for DailyWeatherStatistics();
    result = MEMORY[0x1A85BEED0](&unk_1A6338704, v1);
    atomic_store(result, (unint64_t *)&qword_1EE8479B8);
  }
  return result;
}

void WeatherInterpolationOptions.Stride.timeInterval.getter()
{
  uint64_t *v0;

  if (*((_BYTE *)v0 + 8) != 1 && (unsigned __int128)(*v0 * (__int128)60) >> 64 != (60 * *v0) >> 63)
    __break(1u);
}

uint64_t WeatherInterpolationOptions.Stride.description.getter()
{
  uint64_t v1;

  v1 = sub_1A6335AA4();
  sub_1A63353F0();
  return v1;
}

uint64_t *initializeBufferWithCopyOfBuffer for WeatherInterpolationOptions(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1A63328AC();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED219608) + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      *(_QWORD *)v8 = *(_QWORD *)v9;
      v8[8] = v9[8];
    }
    else
    {
      v11 = sub_1A6332C24();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for WeatherInterpolationOptions(uint64_t a1)
{
  uint64_t v2;

  if (swift_getEnumCaseMultiPayload() == 1)
    v2 = sub_1A63328AC();
  else
    v2 = sub_1A6332C24();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for WeatherInterpolationOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1A63328AC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED219608) + 48);
    v6 = a1 + v5;
    v7 = a2 + v5;
    *(_QWORD *)v6 = *(_QWORD *)v7;
    *(_BYTE *)(v6 + 8) = *(_BYTE *)(v7 + 8);
  }
  else
  {
    v8 = sub_1A6332C24();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for WeatherInterpolationOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_1A628033C(a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_1A63328AC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
      v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED219608) + 48);
      v6 = a1 + v5;
      v7 = a2 + v5;
      v8 = *(_BYTE *)(v7 + 8);
      *(_QWORD *)v6 = *(_QWORD *)v7;
      *(_BYTE *)(v6 + 8) = v8;
    }
    else
    {
      v9 = sub_1A6332C24();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1A628033C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WeatherInterpolationOptions();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for WeatherInterpolationOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1A63328AC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
    v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED219608) + 48);
    v6 = a1 + v5;
    v7 = a2 + v5;
    *(_QWORD *)v6 = *(_QWORD *)v7;
    *(_BYTE *)(v6 + 8) = *(_BYTE *)(v7 + 8);
  }
  else
  {
    v8 = sub_1A6332C24();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for WeatherInterpolationOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1A628033C(a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_1A63328AC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
      v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED219608) + 48);
      v6 = a1 + v5;
      v7 = a2 + v5;
      *(_QWORD *)v6 = *(_QWORD *)v7;
      *(_BYTE *)(v6 + 8) = *(_BYTE *)(v7 + 8);
    }
    else
    {
      v8 = sub_1A6332C24();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for WeatherInterpolationOptions.Stride(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WeatherInterpolationOptions.Stride(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A6280594(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for WeatherInterpolationOptions.Stride()
{
  return &type metadata for WeatherInterpolationOptions.Stride;
}

uint64_t MarineForecast.hours.getter()
{
  return sub_1A6334CDC();
}

void MarineForecast.hours.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_bridgeObjectRelease();
  *v1 = a1;
  OUTLINED_FUNCTION_29_1();
}

uint64_t (*MarineForecast.hours.modify())(void)
{
  return nullsub_1;
}

uint64_t MarineForecast.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_1_31() + 20);
  return sub_1A618DAAC(v3, a1);
}

uint64_t type metadata accessor for MarineForecast()
{
  uint64_t result;

  result = qword_1ED21BAF0;
  if (!qword_1ED21BAF0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t MarineForecast.metadata.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_1_31() + 20);
  return sub_1A61CD678(a1, v3);
}

uint64_t (*MarineForecast.metadata.modify())(_QWORD)
{
  OUTLINED_FUNCTION_1_31();
  return nullsub_1;
}

void MarineForecast.closestWaterLocation.getter(_OWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_OWORD *)(v1 + *(int *)(OUTLINED_FUNCTION_1_31() + 24));
  OUTLINED_FUNCTION_29_1();
}

uint64_t MarineForecast.closestWaterLocation.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;

  v2 = *a1;
  v3 = a1[1];
  result = OUTLINED_FUNCTION_1_31();
  v5 = (_QWORD *)(v1 + *(int *)(result + 24));
  *v5 = v2;
  v5[1] = v3;
  return result;
}

uint64_t (*MarineForecast.closestWaterLocation.modify())(_QWORD)
{
  OUTLINED_FUNCTION_1_31();
  return nullsub_1;
}

void static MarineForecast.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  if (sub_1A61CDBD8(*a1, *a2))
  {
    v4 = OUTLINED_FUNCTION_1_31();
    static Metadata.== infix(_:_:)((uint64_t)a1 + *(int *)(v4 + 20), (uint64_t)a2 + *(int *)(v4 + 20));
  }
  OUTLINED_FUNCTION_3_1();
}

uint64_t MarineForecast.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = type metadata accessor for Metadata();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_2();
  v7 = v6 - v5;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847A00);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_2();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A62809F8();
  sub_1A6335BDC();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847A10);
    sub_1A6280BF4(&qword_1EE847A18, &qword_1EE847A20, (uint64_t)&protocol conformance descriptor for MarineHourForecast, MEMORY[0x1E0DEAF40]);
    sub_1A6335954();
    if (v14)
      v8 = v14;
    else
      v8 = MEMORY[0x1E0DEE9D8];
    LOBYTE(v14) = 1;
    sub_1A618B274(&qword_1ED21B9E8, (uint64_t (*)(uint64_t))type metadata accessor for Metadata, (uint64_t)&protocol conformance descriptor for Metadata);
    sub_1A63359D8();
    sub_1A61CED4C();
    sub_1A63359D8();
    OUTLINED_FUNCTION_4_1();
    *a2 = v8;
    v9 = type metadata accessor for MarineForecast();
    sub_1A618D95C(v7, (uint64_t)a2 + *(int *)(v9 + 20));
    v10 = (_QWORD *)((char *)a2 + *(int *)(v9 + 24));
    *v10 = v14;
    v10[1] = v15;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1A62809F8()
{
  unint64_t result;

  result = qword_1EE847A08;
  if (!qword_1EE847A08)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633F1C4, &type metadata for MarineForecast.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847A08);
  }
  return result;
}

uint64_t MarineForecast.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847A28);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_2();
  v7 = v6 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A62809F8();
  sub_1A6335BF4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847A10);
  sub_1A6280BF4(&qword_1EE847A30, &qword_1EE847A38, (uint64_t)&protocol conformance descriptor for MarineHourForecast, MEMORY[0x1E0DEAF10]);
  OUTLINED_FUNCTION_3();
  if (!v1)
  {
    type metadata accessor for MarineForecast();
    type metadata accessor for Metadata();
    sub_1A618B274(&qword_1ED21B9E0, (uint64_t (*)(uint64_t))type metadata accessor for Metadata, (uint64_t)&protocol conformance descriptor for Metadata);
    OUTLINED_FUNCTION_3();
    sub_1A61CE90C();
    OUTLINED_FUNCTION_3();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1A6280BF4(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE847A10);
    v10 = sub_1A618B274(a2, (uint64_t (*)(uint64_t))type metadata accessor for MarineHourForecast, a3);
    result = MEMORY[0x1A85BEED0](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A6280C78()
{
  unint64_t v0;

  v0 = sub_1A6335918();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1A6280CC4(char a1)
{
  if (!a1)
    return 0x7372756F68;
  if (a1 == 1)
    return 0x617461646174656DLL;
  return 0xD000000000000014;
}

void sub_1A6280D1C(char *a1, char *a2)
{
  sub_1A62441F0(*a1, *a2);
}

void sub_1A6280D28()
{
  sub_1A62DE2DC();
}

uint64_t sub_1A6280D30(uint64_t a1)
{
  char *v1;

  return sub_1A61F4C1C(a1, *v1);
}

void sub_1A6280D38()
{
  sub_1A61F59D0();
}

uint64_t sub_1A6280D40@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A6280C78();
  *a1 = result;
  return result;
}

void sub_1A6280D6C(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t v3;

  *a1 = sub_1A6280CC4(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_29_1();
}

uint64_t sub_1A6280D90()
{
  char *v0;

  return sub_1A6280CC4(*v0);
}

uint64_t sub_1A6280D98@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A6280CC0();
  *a1 = result;
  return result;
}

uint64_t sub_1A6280DBC()
{
  sub_1A62809F8();
  return sub_1A6335C18();
}

uint64_t sub_1A6280DE4()
{
  sub_1A62809F8();
  return sub_1A6335C24();
}

uint64_t sub_1A6280E0C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return MarineForecast.init(from:)(a1, a2);
}

uint64_t sub_1A6280E20(_QWORD *a1)
{
  return MarineForecast.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for MarineForecast(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1A6332C24();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    sub_1A6334CDC();
    v12(v9, v10, v11);
    v13 = (int *)type metadata accessor for Metadata();
    v12(&v9[v13[5]], &v10[v13[5]], v11);
    v14 = v13[6];
    v15 = &v9[v14];
    v16 = &v10[v14];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v10[v14], 1, v11))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v12(v15, v16, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v11);
    }
    *(_QWORD *)&v9[v13[7]] = *(_QWORD *)&v10[v13[7]];
    *(_QWORD *)&v9[v13[8]] = *(_QWORD *)&v10[v13[8]];
    *(_QWORD *)&v9[v13[9]] = *(_QWORD *)&v10[v13[9]];
    v18 = v13[10];
    v19 = &v9[v18];
    v20 = &v10[v18];
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    v22 = v13[11];
    v23 = &v9[v22];
    v24 = &v10[v22];
    v25 = *((_QWORD *)v24 + 1);
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *((_QWORD *)v23 + 1) = v25;
    v26 = v13[12];
    v27 = &v9[v26];
    v28 = &v10[v26];
    v29 = *((_QWORD *)v28 + 1);
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *((_QWORD *)v27 + 1) = v29;
    v9[v13[13]] = v10[v13[13]];
    v9[v13[14]] = v10[v13[14]];
    v30 = v13[15];
    v31 = &v9[v30];
    v32 = &v10[v30];
    v33 = *((_QWORD *)v32 + 1);
    *(_QWORD *)v31 = *(_QWORD *)v32;
    *((_QWORD *)v31 + 1) = v33;
    *(_OWORD *)((char *)v7 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
  }
  return v7;
}

uint64_t destroy for MarineForecast(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1A6332C24();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = type metadata accessor for Metadata();
  v6(v4 + *(int *)(v7 + 20), v5);
  v8 = v4 + *(int *)(v7 + 24);
  if (!__swift_getEnumTagSinglePayload(v8, 1, v5))
    v6(v8, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for MarineForecast(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A6332C24();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  sub_1A6334CDC();
  v10(v7, v8, v9);
  v11 = (int *)type metadata accessor for Metadata();
  v10(&v7[v11[5]], &v8[v11[5]], v9);
  v12 = v11[6];
  v13 = &v7[v12];
  v14 = &v8[v12];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v8[v12], 1, v9))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v10(v13, v14, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v9);
  }
  *(_QWORD *)&v7[v11[7]] = *(_QWORD *)&v8[v11[7]];
  *(_QWORD *)&v7[v11[8]] = *(_QWORD *)&v8[v11[8]];
  *(_QWORD *)&v7[v11[9]] = *(_QWORD *)&v8[v11[9]];
  v16 = v11[10];
  v17 = &v7[v16];
  v18 = &v8[v16];
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = v19;
  v20 = v11[11];
  v21 = &v7[v20];
  v22 = &v8[v20];
  v23 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = v23;
  v24 = v11[12];
  v25 = &v7[v24];
  v26 = &v8[v24];
  v27 = *((_QWORD *)v26 + 1);
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *((_QWORD *)v25 + 1) = v27;
  v7[v11[13]] = v8[v11[13]];
  v7[v11[14]] = v8[v11[14]];
  v28 = v11[15];
  v29 = &v7[v28];
  v30 = &v8[v28];
  v31 = *((_QWORD *)v30 + 1);
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *((_QWORD *)v29 + 1) = v31;
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A6334CDC();
  return a1;
}

_QWORD *assignWithCopy for MarineForecast(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int EnumTagSinglePayload;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v35;
  _QWORD *v36;

  *a1 = *a2;
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v35 = a3;
  v36 = a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A6332C24();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = (int *)type metadata accessor for Metadata();
  v11(&v7[v12[5]], &v8[v12[5]], v9);
  v13 = v12[6];
  v14 = &v7[v13];
  v15 = &v8[v13];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&v7[v13], 1, v9);
  v17 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v9);
  if (!EnumTagSinglePayload)
  {
    if (!v17)
    {
      v11(v14, v15, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v15, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v9);
LABEL_7:
  *(_QWORD *)&v7[v12[7]] = *(_QWORD *)&v8[v12[7]];
  *(_QWORD *)&v7[v12[8]] = *(_QWORD *)&v8[v12[8]];
  *(_QWORD *)&v7[v12[9]] = *(_QWORD *)&v8[v12[9]];
  v19 = v12[10];
  v20 = &v7[v19];
  v21 = &v8[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v22 = v12[11];
  v23 = &v7[v22];
  v24 = &v8[v22];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v25 = v12[12];
  v26 = &v7[v25];
  v27 = &v8[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v7[v12[13]] = v8[v12[13]];
  v7[v12[14]] = v8[v12[14]];
  v28 = v12[15];
  v29 = &v7[v28];
  v30 = &v8[v28];
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v31 = *(int *)(v35 + 24);
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (_QWORD *)((char *)v36 + v31);
  *v32 = *v33;
  v32[1] = v33[1];
  return a1;
}

_QWORD *initializeWithTake for MarineForecast(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A6332C24();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = (int *)type metadata accessor for Metadata();
  v10(&v7[v11[5]], &v8[v11[5]], v9);
  v12 = v11[6];
  v13 = &v7[v12];
  v14 = &v8[v12];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v8[v12], 1, v9))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v10(v13, v14, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v9);
  }
  *(_QWORD *)&v7[v11[7]] = *(_QWORD *)&v8[v11[7]];
  *(_QWORD *)&v7[v11[8]] = *(_QWORD *)&v8[v11[8]];
  *(_QWORD *)&v7[v11[9]] = *(_QWORD *)&v8[v11[9]];
  *(_OWORD *)&v7[v11[10]] = *(_OWORD *)&v8[v11[10]];
  *(_OWORD *)&v7[v11[11]] = *(_OWORD *)&v8[v11[11]];
  *(_OWORD *)&v7[v11[12]] = *(_OWORD *)&v8[v11[12]];
  v7[v11[13]] = v8[v11[13]];
  v7[v11[14]] = v8[v11[14]];
  *(_OWORD *)&v7[v11[15]] = *(_OWORD *)&v8[v11[15]];
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *assignWithTake for MarineForecast(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int EnumTagSinglePayload;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  _QWORD *v41;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v40 = a3;
  v41 = a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A6332C24();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v12 = (int *)type metadata accessor for Metadata();
  v11(&v7[v12[5]], &v8[v12[5]], v9);
  v13 = v12[6];
  v14 = &v7[v13];
  v15 = &v8[v13];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&v7[v13], 1, v9);
  v17 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v9);
  if (!EnumTagSinglePayload)
  {
    if (!v17)
    {
      v11(v14, v15, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v15, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v9);
LABEL_7:
  *(_QWORD *)&v7[v12[7]] = *(_QWORD *)&v8[v12[7]];
  *(_QWORD *)&v7[v12[8]] = *(_QWORD *)&v8[v12[8]];
  *(_QWORD *)&v7[v12[9]] = *(_QWORD *)&v8[v12[9]];
  v19 = v12[10];
  v20 = &v7[v19];
  v21 = &v8[v19];
  v23 = *(_QWORD *)v21;
  v22 = *((_QWORD *)v21 + 1);
  *(_QWORD *)v20 = v23;
  *((_QWORD *)v20 + 1) = v22;
  swift_bridgeObjectRelease();
  v24 = v12[11];
  v25 = &v7[v24];
  v26 = &v8[v24];
  v28 = *(_QWORD *)v26;
  v27 = *((_QWORD *)v26 + 1);
  *(_QWORD *)v25 = v28;
  *((_QWORD *)v25 + 1) = v27;
  swift_bridgeObjectRelease();
  v29 = v12[12];
  v30 = &v7[v29];
  v31 = &v8[v29];
  v33 = *(_QWORD *)v31;
  v32 = *((_QWORD *)v31 + 1);
  *(_QWORD *)v30 = v33;
  *((_QWORD *)v30 + 1) = v32;
  swift_bridgeObjectRelease();
  v7[v12[13]] = v8[v12[13]];
  v7[v12[14]] = v8[v12[14]];
  v34 = v12[15];
  v35 = &v7[v34];
  v36 = &v8[v34];
  v38 = *(_QWORD *)v36;
  v37 = *((_QWORD *)v36 + 1);
  *(_QWORD *)v35 = v38;
  *((_QWORD *)v35 + 1) = v37;
  swift_bridgeObjectRelease();
  *(_OWORD *)((char *)a1 + *(int *)(v40 + 24)) = *(_OWORD *)((char *)v41 + *(int *)(v40 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for MarineForecast()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1A62818E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_3_1();
  }
  else
  {
    v6 = type metadata accessor for Metadata();
    __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 20), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for MarineForecast()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_1A6281958(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for Metadata();
    return (_QWORD *)__swift_storeEnumTagSinglePayload((uint64_t)v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1A62819C4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Metadata();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MarineForecast.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A6281A90 + 4 * byte_1A633F005[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A6281AC4 + 4 * byte_1A633F000[v4]))();
}

uint64_t sub_1A6281AC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6281ACC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6281AD4);
  return result;
}

uint64_t sub_1A6281AE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6281AE8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A6281AEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6281AF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MarineForecast.CodingKeys()
{
  return &type metadata for MarineForecast.CodingKeys;
}

unint64_t sub_1A6281B14()
{
  unint64_t result;

  result = qword_1EE847A40;
  if (!qword_1EE847A40)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633F19C, &type metadata for MarineForecast.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847A40);
  }
  return result;
}

unint64_t sub_1A6281B54()
{
  unint64_t result;

  result = qword_1EE847A48;
  if (!qword_1EE847A48)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633F0D4, &type metadata for MarineForecast.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847A48);
  }
  return result;
}

unint64_t sub_1A6281B94()
{
  unint64_t result;

  result = qword_1EE847A50;
  if (!qword_1EE847A50)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633F0FC, &type metadata for MarineForecast.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847A50);
  }
  return result;
}

uint64_t static Date.fiveDaysFromNow.getter()
{
  return sub_1A6281C8C();
}

id sub_1A6281BDC()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36A8]), sel_init);
  qword_1ED22A360 = (uint64_t)result;
  return result;
}

uint64_t Date.rounded(to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = sub_1A6332B1C();
  if ((unsigned __int128)(a1 * (__int128)60) >> 64 == (60 * a1) >> 63)
  {
    sub_1A6332B10();
    v5 = OUTLINED_FUNCTION_6();
    return __swift_storeEnumTagSinglePayload(a2, 0, 1, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static Date.fiveMinutesFromNow.getter()
{
  return sub_1A6281C8C();
}

uint64_t sub_1A6281C8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = OUTLINED_FUNCTION_6();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_2();
  v4 = v3 - v2;
  sub_1A6332C0C();
  sub_1A6332BA0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_1A6281D14(unint64_t a1, id a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v20;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  _BYTE v29[48];

  v20 = *v3;
  v4 = *((_QWORD *)v3 + 1);
  v5 = v3[16];
  v6 = v3[17];
  v7 = v3[18];
  v9 = *((_QWORD *)v3 + 3);
  v8 = *((_QWORD *)v3 + 4);
  v10 = v3[40];
  v11 = *((_QWORD *)v3 + 6);
  v12 = *((_QWORD *)v3 + 7);
  v28 = a2;
  v13 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B698);
  if (OUTLINED_FUNCTION_3_31())
  {
    sub_1A61A1000(&v22, (uint64_t)v29);
    OUTLINED_FUNCTION_1_33();
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v5 + 40))(v6, v5) & 1) != 0)
    {
      v14 = sub_1A6335C0C();
    }
    else
    {
      OUTLINED_FUNCTION_1_33();
      v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v6, v5);
      if ((v17 & 1) != 0)
      {
        LOBYTE(v22) = v20;
        *((_QWORD *)&v22 + 1) = v4;
        LOBYTE(v23) = v5;
        BYTE1(v23) = v6;
        BYTE2(v23) = v7;
        *((_QWORD *)&v23 + 1) = v9;
        v24 = v8;
        v25 = v10;
        v26 = v11;
        v27 = v12;
        v14 = sub_1A6282444(a1, a3);
      }
    }
    v16 = v14;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  else
  {
    v24 = 0;
    v22 = 0u;
    v23 = 0u;
    sub_1A61E00AC((uint64_t)&v22);
    LOBYTE(v22) = v20;
    *((_QWORD *)&v22 + 1) = v4;
    LOBYTE(v23) = v5;
    BYTE1(v23) = v6;
    BYTE2(v23) = v7;
    *((_QWORD *)&v23 + 1) = v9;
    v24 = v8;
    v25 = v10;
    v26 = v11;
    v27 = v12;
    v15 = sub_1A6335C0C();
    return sub_1A6282444(a1, v15);
  }
  return v16;
}

uint64_t sub_1A6281ED8(void *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unsigned __int8 *v4;
  int v8;
  int v9;
  unsigned __int8 v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  _QWORD v37[5];
  _QWORD v38[5];
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;

  v8 = v4[16];
  v9 = v4[17];
  v10 = v4[18];
  v38[0] = a1;
  v11 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B698);
  if (OUTLINED_FUNCTION_3_31())
  {
    sub_1A61A1000(&v39, (uint64_t)v42);
    v12 = v43;
    v13 = v44;
    __swift_project_boxed_opaque_existential_1(v42, v43);
    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 40))(v12, v13);
    v15 = sub_1A6282494(a2);
    if ((v14 & 1) != 0 && (v15 & 1) != 0)
    {
      if (qword_1ED21D318 != -1)
        swift_once();
      v16 = sub_1A6334F04();
      __swift_project_value_buffer(v16, (uint64_t)qword_1ED22A3C0);
      swift_bridgeObjectRetain_n();
      v17 = sub_1A6334EEC();
      v18 = sub_1A633569C();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc();
        *(_QWORD *)&v39 = swift_slowAlloc();
        *(_DWORD *)v19 = 136315138;
        if (a4)
        {
          v20 = a4;
        }
        else
        {
          a3 = 0x3E6C696E3CLL;
          v20 = 0xE500000000000000;
        }
        sub_1A6334CDC();
        v38[0] = sub_1A61A6A1C(a3, v20, (uint64_t *)&v39);
        sub_1A6335774();
        OUTLINED_FUNCTION_4_31();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A6185000, v17, v18, "Two auth errors in a row for request %s) - aborting all retries", v19, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_0_5();
      }

      OUTLINED_FUNCTION_4_31();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
      goto LABEL_17;
    }
    sub_1A61BDF04((uint64_t)v42, (uint64_t)&v39);
    if (v8)
    {
      v22 = v41;
      __swift_project_boxed_opaque_existential_1(&v39, *((uint64_t *)&v40 + 1));
      v23 = OUTLINED_FUNCTION_0_46(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 24));
      v24 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v39);
      OUTLINED_FUNCTION_2_34(v24, v25, v26, v27, v28);
      if ((v23 & 1) != 0)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
LABEL_21:
        v21 = 1;
LABEL_24:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
        return v21 & 1;
      }
    }
    else
    {
      v29 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v39);
      OUTLINED_FUNCTION_2_34(v29, v30, v31, v32, v33);
    }
    sub_1A61BDF04((uint64_t)v38, (uint64_t)v37);
    if (v9)
    {
      v34 = v37[4];
      __swift_project_boxed_opaque_existential_1(v37, v37[3]);
      v35 = OUTLINED_FUNCTION_0_46(*(uint64_t (**)(uint64_t, uint64_t))(v34 + 32));
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      if ((v35 & 1) != 0)
        goto LABEL_21;
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    }
    v21 = v10 & v14;
    goto LABEL_24;
  }
  v41 = 0;
  v39 = 0u;
  v40 = 0u;
  sub_1A61E00AC((uint64_t)&v39);
  if (!v9)
  {
LABEL_17:
    v21 = 0;
    return v21 & 1;
  }
  swift_getErrorValue();
  v21 = sub_1A61F627C();
  return v21 & 1;
}

uint64_t initializeWithCopy for WDSClientConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A6334CDC();
  return a1;
}

uint64_t assignWithCopy for WDSClientConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WDSClientConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WDSClientConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WDSClientConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1A6282444(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(v2 + 56);
  v4 = *(_QWORD *)(v3 + 16);
  if ((a1 & 0x8000000000000000) != 0)
  {
    if (v4)
      goto LABEL_5;
  }
  else
  {
    if (v4 > a1)
    {
      v3 += 16 * a1;
LABEL_5:
      v5 = v3 + 32;
      return *(_QWORD *)v5;
    }
    if (v4)
    {
      v5 = v3 + 16 * v4 + 16;
      return *(_QWORD *)v5;
    }
  }
  return a2;
}

uint64_t sub_1A6282494(uint64_t a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  id v10[3];
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1
    || (v10[0] = *(id *)(a1 + 8 * v1 + 24),
        v2 = v10[0],
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD0),
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B698),
        (swift_dynamicCast() & 1) == 0))
  {
    v9 = 0;
    v7 = 0u;
    v8 = 0u;
    goto LABEL_6;
  }
  if (!*((_QWORD *)&v8 + 1))
  {
LABEL_6:
    sub_1A61E00AC((uint64_t)&v7);
    v5 = 0;
    return v5 & 1;
  }
  sub_1A61A1000(&v7, (uint64_t)v10);
  v3 = v11;
  v4 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 40))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return v5 & 1;
}

unint64_t sub_1A6282570(unsigned __int8 a1)
{
  sub_1A6335834();
  swift_bridgeObjectRelease();
  sub_1A62825EC(a1);
  sub_1A63353F0();
  swift_bridgeObjectRelease();
  return 0xD00000000000002DLL;
}

uint64_t sub_1A62825EC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A6282628 + 4 * byte_1A633F270[a1]))(0x746165572E324B57, 0xEB00000000726568);
}

unint64_t sub_1A6282628()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1A6282680()
{
  return 0xD000000000000010;
}

uint64_t dispatch thunk of InterpolationInitializerType.initialize(a:b:c:d:startDate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

void static HourlyForecastDescriptor.name.getter()
{
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_53();
}

void static HourlyForecastDescriptor.name.setter()
{
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_1_8();
}

uint64_t (*static HourlyForecastDescriptor.name.modify())()
{
  OUTLINED_FUNCTION_0_11();
  return j__swift_endAccess;
}

uint64_t sub_1A628275C()
{
  uint64_t result;

  sub_1A6334CDC();
  sub_1A63353F0();
  result = swift_bridgeObjectRelease();
  qword_1ED21C7F8 = 0x2E312E312E30;
  unk_1ED21C800 = 0xE600000000000000;
  return result;
}

void static HourlyForecastDescriptor.version.getter()
{
  if (qword_1ED21C808 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_53();
}

void static HourlyForecastDescriptor.version.setter()
{
  if (qword_1ED21C808 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_1_8();
}

uint64_t (*static HourlyForecastDescriptor.version.modify())()
{
  if (qword_1ED21C808 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  return j_j__swift_endAccess;
}

ValueMetadata *type metadata accessor for HourlyForecastDescriptor()
{
  return &type metadata for HourlyForecastDescriptor;
}

double PrecipitationAmount.probability.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double PrecipitationAmount.averageAmount.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double PrecipitationAmount.averageSnowfallAmount.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

BOOL static PrecipitationAmount.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t sub_1A6282968(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v7;

  v2 = a1 == 0x6C696261626F7270 && a2 == 0xEB00000000797469;
  if (v2 || (sub_1A6335ABC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x4165676172657661 && a2 == 0xED0000746E756F6DLL;
    if (v6 || (sub_1A6335ABC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000015 && a2 == 0x80000001A634B040)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = sub_1A6335ABC();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1A6282AF0(char a1)
{
  if (!a1)
    return 0x6C696261626F7270;
  if (a1 == 1)
    return 0x4165676172657661;
  return 0xD000000000000015;
}

uint64_t sub_1A6282B60()
{
  char *v0;

  return sub_1A6282AF0(*v0);
}

uint64_t sub_1A6282B68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A6282968(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A6282B8C()
{
  sub_1A6282D04();
  return sub_1A6335C18();
}

uint64_t sub_1A6282BB4()
{
  sub_1A6282D04();
  return sub_1A6335C24();
}

uint64_t PrecipitationAmount.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847A68);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6282D04();
  sub_1A6335BF4();
  v11 = 0;
  OUTLINED_FUNCTION_7_1();
  if (!v1)
  {
    v10 = 1;
    OUTLINED_FUNCTION_7_1();
    v9 = 2;
    OUTLINED_FUNCTION_7_1();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1A6282D04()
{
  unint64_t result;

  result = qword_1EE847A70;
  if (!qword_1EE847A70)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633F4F8, &type metadata for PrecipitationAmount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847A70);
  }
  return result;
}

uint64_t PrecipitationAmount.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847A78);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6282D04();
  sub_1A6335BDC();
  if (!v2)
  {
    OUTLINED_FUNCTION_0_33();
    v7 = v6;
    OUTLINED_FUNCTION_0_33();
    v10 = v9;
    OUTLINED_FUNCTION_0_33();
    v12 = v11;
    OUTLINED_FUNCTION_2_0();
    *a2 = v7;
    a2[1] = v10;
    a2[2] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A6282E8C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return PrecipitationAmount.init(from:)(a1, a2);
}

uint64_t sub_1A6282EA0(_QWORD *a1)
{
  return PrecipitationAmount.encode(to:)(a1);
}

uint64_t sub_1A6282EB8()
{
  return static PrecipitationAmount.read(from:)();
}

uint64_t sub_1A6282ECC()
{
  return PrecipitationAmount.write(to:)();
}

ValueMetadata *type metadata accessor for PrecipitationAmount()
{
  return &type metadata for PrecipitationAmount;
}

uint64_t storeEnumTagSinglePayload for PrecipitationAmount.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A6282F3C + 4 * byte_1A633F345[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A6282F70 + 4 * asc_1A633F340[v4]))();
}

uint64_t sub_1A6282F70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6282F78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6282F80);
  return result;
}

uint64_t sub_1A6282F8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6282F94);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A6282F98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6282FA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PrecipitationAmount.CodingKeys()
{
  return &type metadata for PrecipitationAmount.CodingKeys;
}

unint64_t sub_1A6282FC0()
{
  unint64_t result;

  result = qword_1EE847A80;
  if (!qword_1EE847A80)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633F4D0, &type metadata for PrecipitationAmount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847A80);
  }
  return result;
}

unint64_t sub_1A6283000()
{
  unint64_t result;

  result = qword_1EE847A88;
  if (!qword_1EE847A88)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633F440, &type metadata for PrecipitationAmount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847A88);
  }
  return result;
}

unint64_t sub_1A6283040()
{
  unint64_t result;

  result = qword_1EE847A90;
  if (!qword_1EE847A90)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633F468, &type metadata for PrecipitationAmount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847A90);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WeatherAlertRequestOptions(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WeatherAlertRequestOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherAlertRequestOptions()
{
  return &type metadata for WeatherAlertRequestOptions;
}

BOOL PrecipitationType.isClear.getter()
{
  _BYTE *v0;

  return *v0 == 0;
}

void sub_1A628311C(char *a1)
{
  sub_1A6243C58(*a1);
}

unint64_t sub_1A628312C()
{
  unint64_t result;

  result = qword_1EE847A98;
  if (!qword_1EE847A98)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for PrecipitationType, &type metadata for PrecipitationType);
    atomic_store(result, (unint64_t *)&qword_1EE847A98);
  }
  return result;
}

void sub_1A6283168()
{
  unsigned __int8 *v0;

  sub_1A62DE2E8(*v0);
}

void sub_1A6283170(uint64_t a1)
{
  char *v1;

  sub_1A61F485C(a1, *v1);
}

void sub_1A6283178(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1A61F5B24(a1, *v1);
}

WeatherDaemon::PrecipitationType_optional sub_1A6283180(Swift::String *a1)
{
  return PrecipitationType.init(rawValue:)(*a1);
}

void sub_1A628318C(_BYTE *a1@<X8>)
{
  static PrecipitationType.read(from:)(a1);
}

void sub_1A62831A0()
{
  PrecipitationType.write(to:)();
}

uint64_t Settings.DaemonStore.set<A>(setting:value:)()
{
  sub_1A61C4FC4((unint64_t *)&qword_1EE845BE8, (uint64_t)&protocol conformance descriptor for Settings.DaemonStore);
  return sub_1A6332E88();
}

uint64_t type metadata accessor for Settings.DaemonStore()
{
  return objc_opt_self();
}

uint64_t static Settings.Daemon.requestFlatbuffers.getter()
{
  return sub_1A628325C(&qword_1ED21CA50);
}

uint64_t static Settings.Daemon.requestStatisticsFlatbuffers.getter()
{
  return sub_1A628325C(&qword_1ED21CAB0);
}

uint64_t sub_1A628325C(_QWORD *a1)
{
  unsigned __int8 v3;

  sub_1A6332E28();
  sub_1A6332E1C();
  if (*a1 != -1)
    swift_once();
  sub_1A6332E10();
  swift_release();
  return v3;
}

uint64_t Settings.DaemonStore.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t Settings.DaemonStore.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1A62832F0()
{
  return sub_1A6332E88();
}

uint64_t sub_1A62832FC()
{
  return sub_1A6332EA0();
}

uint64_t sub_1A6283308()
{
  return sub_1A6332E94();
}

uint64_t sub_1A6283310()
{
  return sub_1A6332DD4();
}

uint64_t sub_1A628331C()
{
  return sub_1A6332DC8();
}

uint64_t sub_1A6283328()
{
  return sub_1A6332DE0();
}

uint64_t sub_1A6283334()
{
  return sub_1A6332DBC();
}

uint64_t static Settings.Daemon.settingsStore.getter()
{
  type metadata accessor for Settings.DaemonStore();
  return swift_initStaticObject();
}

uint64_t sub_1A628335C(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_1A6283394(uint64_t a1)
{
  return OUTLINED_FUNCTION_0_47(a1, 47, 0x80000001A634B3D0, &qword_1ED21C378);
}

uint64_t static Settings.Daemon.clearWeatherDataCacheOnNextLaunch.getter()
{
  return sub_1A628335C(&qword_1ED21BBF0);
}

uint64_t static Settings.Daemon.clearWeatherAvailableDataSetsCacheOnNextLaunch.getter()
{
  return sub_1A628335C(&qword_1ED219240);
}

uint64_t sub_1A62833EC(uint64_t a1)
{
  return OUTLINED_FUNCTION_0_47(a1, 51, 0x80000001A634B350, &qword_1EE847AA0);
}

uint64_t static Settings.Daemon.clearDailyStatisticsCacheOnNextLaunch.getter()
{
  return sub_1A628335C(&qword_1EE845408);
}

uint64_t sub_1A6283428(uint64_t a1)
{
  return OUTLINED_FUNCTION_0_47(a1, 48, 0x80000001A634B310, &qword_1EE847AA8);
}

uint64_t static Settings.Daemon.clearDailySummaryCacheOnNextLaunch.getter()
{
  return sub_1A628335C(&qword_1EE845410);
}

uint64_t sub_1A6283464(uint64_t a1)
{
  return OUTLINED_FUNCTION_0_47(a1, 52, 0x80000001A634B2D0, &qword_1EE847AB0);
}

uint64_t static Settings.Daemon.clearHourlyStatisticsCacheOnNextLaunch.getter()
{
  return sub_1A628335C(&qword_1EE845418);
}

uint64_t sub_1A62834A0(uint64_t a1)
{
  return OUTLINED_FUNCTION_0_47(a1, 53, 0x80000001A634B290, &qword_1EE847AB8);
}

uint64_t static Settings.Daemon.clearMonthlyStatisticsCacheOnNextLaunch.getter()
{
  return sub_1A628335C(&qword_1EE845420);
}

uint64_t static Settings.Daemon.clearCachedJWTTokenOnNextLaunch.getter()
{
  return sub_1A628335C(&qword_1ED21D398);
}

uint64_t static Settings.Daemon.mangleCachedJWTTokenOnNextLaunch.getter()
{
  return sub_1A628335C(&qword_1ED21C000);
}

uint64_t sub_1A6283514(uint64_t a1)
{
  return sub_1A61C5204(a1, 1, 0xD000000000000025, 0x80000001A634B180, &qword_1EE847AC0);
}

uint64_t static Settings.Daemon.forceQAAndNoAuthOnSimulator.getter()
{
  return sub_1A628335C(&qword_1EE845428);
}

uint64_t sub_1A6283558(uint64_t a1)
{
  return sub_1A61C5204(a1, 1, 0xD000000000000020, 0x80000001A634B490, &qword_1ED21CA48);
}

uint64_t static Settings.Daemon.enableFlatbuffers.getter()
{
  return sub_1A628335C(&qword_1ED21CA50);
}

uint64_t sub_1A628359C(uint64_t a1)
{
  return sub_1A61C5204(a1, 1, 0xD00000000000002ALL, 0x80000001A634B460, &qword_1ED21CAB8);
}

uint64_t static Settings.Daemon.enableStatisticsFlatbuffers.getter()
{
  return sub_1A628335C(&qword_1ED21CAB0);
}

uint64_t sub_1A62835E0(uint64_t a1)
{
  return OUTLINED_FUNCTION_3_32(a1, 1, 41, 0x80000001A634B150, &qword_1ED21A220);
}

uint64_t static Settings.Daemon.enableSendFlatbufferSchemaVersion.getter()
{
  return sub_1A628335C(qword_1ED21A1A8);
}

uint64_t static Settings.Daemon.treatmentIdentifierOverrides.getter()
{
  return sub_1A628335C(&qword_1ED21BB10);
}

uint64_t Settings.Daemon.AttributionOverrides.WeatherDataProvider.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000013;
  if (*v0 != 1)
    v1 = 0;
  if (*v0)
    return v1;
  else
    return 0x50746C7561666564;
}

uint64_t Settings.Daemon.AttributionOverrides.WeatherDataProvider.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1A6335918();
  result = swift_bridgeObjectRelease();
  v4 = 3;
  if (v2 < 3)
    v4 = v2;
  *a1 = v4;
  return result;
}

void sub_1A62836F0(unsigned __int8 *a1, char *a2)
{
  sub_1A6244FA8(*a1, *a2);
}

void sub_1A62836FC()
{
  sub_1A62DE2F4();
}

uint64_t sub_1A6283704(uint64_t a1)
{
  char *v1;

  return sub_1A61F5380(a1, *v1);
}

void sub_1A628370C()
{
  sub_1A61F5494();
}

uint64_t sub_1A6283714@<X0>(char *a1@<X8>)
{
  return Settings.Daemon.AttributionOverrides.WeatherDataProvider.init(rawValue:)(a1);
}

uint64_t sub_1A6283720@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Settings.Daemon.AttributionOverrides.WeatherDataProvider.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A6283744()
{
  sub_1A6283AA0();
  return sub_1A63354A4();
}

uint64_t sub_1A6283784()
{
  sub_1A6283AA0();
  return sub_1A6335498();
}

uint64_t sub_1A62837CC()
{
  sub_1A6283AA0();
  return sub_1A633548C();
}

void Settings.Daemon.AttributionOverrides.__allocating_init(key:defaultValue:access:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_12_1();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_12_0();
  swift_allocObject();
  OUTLINED_FUNCTION_6_2();
  OUTLINED_FUNCTION_4_32();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_58();
}

void Settings.Daemon.AttributionOverrides.init(key:defaultValue:access:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_12_1();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_2();
  OUTLINED_FUNCTION_4_32();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_58();
}

uint64_t Settings.Daemon.AttributionOverrides.__deallocating_deinit()
{
  _s11TeaSettings0B0C13WeatherDaemonE0D0V20AttributionOverridesCfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_1A62838D8()
{
  return sub_1A61C4FC4(&qword_1EE847AC8, (uint64_t)&protocol conformance descriptor for Settings.DaemonStore);
}

unint64_t sub_1A6283900()
{
  unint64_t result;

  result = qword_1ED21B6A8;
  if (!qword_1ED21B6A8)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for Settings.Daemon.AttributionOverrides.WeatherDataProvider, &type metadata for Settings.Daemon.AttributionOverrides.WeatherDataProvider);
    atomic_store(result, (unint64_t *)&qword_1ED21B6A8);
  }
  return result;
}

uint64_t method lookup function for Settings.DaemonStore()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for Settings.Daemon()
{
  return &type metadata for Settings.Daemon;
}

uint64_t type metadata accessor for Settings.Daemon.AttributionOverrides()
{
  uint64_t result;

  result = qword_1EE847B68;
  if (!qword_1EE847B68)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A6283990()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1A62839CC()
{
  return type metadata accessor for Settings.Daemon.AttributionOverrides();
}

uint64_t _s6DaemonV20AttributionOverridesC19WeatherDataProviderOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A6283A20 + 4 * byte_1A633F715[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A6283A54 + 4 * byte_1A633F710[v4]))();
}

uint64_t sub_1A6283A54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6283A5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6283A64);
  return result;
}

uint64_t sub_1A6283A70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6283A78);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A6283A7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6283A84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Settings.Daemon.AttributionOverrides.WeatherDataProvider()
{
  return &type metadata for Settings.Daemon.AttributionOverrides.WeatherDataProvider;
}

unint64_t sub_1A6283AA0()
{
  unint64_t result;

  result = qword_1ED21B6B0[0];
  if (!qword_1ED21B6B0[0])
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for Settings.Daemon.AttributionOverrides.WeatherDataProvider, &type metadata for Settings.Daemon.AttributionOverrides.WeatherDataProvider);
    atomic_store(result, qword_1ED21B6B0);
  }
  return result;
}

uint64_t EventSignificance.init(from:)@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  void *v7;
  Swift::String v8;
  char v9;
  _QWORD v11[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_0_28();
  sub_1A6335BD0();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    OUTLINED_FUNCTION_0_28();
    v5 = sub_1A6335AD4();
    v7 = v6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    v8._countAndFlagsBits = v5;
    v8._object = v7;
    EventSignificance.init(rawValue:)(v8);
    v9 = v11[0];
    if (LOBYTE(v11[0]) == 13)
      v9 = 12;
    *a2 = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

WeatherDaemon::EventSignificance_optional __swiftcall EventSignificance.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  WeatherDaemon::EventSignificance_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A6335918();
  result.value = swift_bridgeObjectRelease();
  v5 = 13;
  if (v3 < 0xD)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t EventSignificance.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A6283C28 + 4 * byte_1A633F910[*v0]))(0x6863746177, 0xE500000000000000);
}

uint64_t sub_1A6283C28()
{
  return 0x6E6974656C6C7562;
}

uint64_t sub_1A6283C40()
{
  return 0x636E656772656D65;
}

uint64_t sub_1A6283C60()
{
  return 0x656D6572747865;
}

uint64_t sub_1A6283CC4()
{
  return 0x6B6F6F6C74756FLL;
}

uint64_t sub_1A6283CDC()
{
  return 0x74726F706572;
}

uint64_t sub_1A6283CF0()
{
  return 0x6E656D6574617473;
}

uint64_t sub_1A6283D0C()
{
  return 0x676E696E726177;
}

uint64_t sub_1A6283D24()
{
  return 0x79726F7369766461;
}

uint64_t sub_1A6283D3C()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_1A6283D54(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A6243DC4(*a1, *a2);
}

unint64_t sub_1A6283D64()
{
  unint64_t result;

  result = qword_1EE847BB8;
  if (!qword_1EE847BB8)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for EventSignificance, &type metadata for EventSignificance);
    atomic_store(result, &qword_1EE847BB8);
  }
  return result;
}

void sub_1A6283DA0()
{
  unsigned __int8 *v0;

  sub_1A62DE300(*v0);
}

void sub_1A6283DA8(uint64_t a1)
{
  char *v1;

  sub_1A61F4910(a1, *v1);
}

void sub_1A6283DB0(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1A61F5B0C(a1, *v1);
}

WeatherDaemon::EventSignificance_optional sub_1A6283DB8(Swift::String *a1)
{
  return EventSignificance.init(rawValue:)(*a1);
}

uint64_t sub_1A6283DC4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = EventSignificance.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A6283DE8@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return EventSignificance.init(from:)(a1, a2);
}

uint64_t sub_1A6283DFC()
{
  sub_1A6283F3C();
  return sub_1A63354BC();
}

void sub_1A6283E48(_BYTE *a1@<X8>)
{
  static EventSignificance.read(from:)(a1);
}

void sub_1A6283E5C()
{
  EventSignificance.write(to:)();
}

uint64_t storeEnumTagSinglePayload for EventSignificance(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1A6283EBC + 4 * byte_1A633F922[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1A6283EF0 + 4 * byte_1A633F91D[v4]))();
}

uint64_t sub_1A6283EF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6283EF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6283F00);
  return result;
}

uint64_t sub_1A6283F0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6283F14);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1A6283F18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6283F20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EventSignificance()
{
  return &type metadata for EventSignificance;
}

unint64_t sub_1A6283F3C()
{
  unint64_t result;

  result = qword_1ED219FF8;
  if (!qword_1ED219FF8)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for EventSignificance, &type metadata for EventSignificance);
    atomic_store(result, (unint64_t *)&qword_1ED219FF8);
  }
  return result;
}

BOOL Array<A>.contains(_:)(uint64_t a1, double a2, double a3)
{
  BOOL v3;

  if (*(_QWORD *)(a1 + 16) != 4)
    return 0;
  v3 = *(double *)(a1 + 32) > a3 || *(double *)(a1 + 48) < a3;
  return !v3 && *(double *)(a1 + 40) <= a2 && *(double *)(a1 + 56) >= a2;
}

uint64_t Array<A>.minLongitude.getter(uint64_t result)
{
  if (!*(_QWORD *)(result + 16))
    __break(1u);
  return result;
}

uint64_t Array<A>.minLatitude.getter(uint64_t result)
{
  if (*(_QWORD *)(result + 16) < 2uLL)
    __break(1u);
  return result;
}

uint64_t Array<A>.maxLongitude.getter(uint64_t result)
{
  if (*(_QWORD *)(result + 16) < 3uLL)
    __break(1u);
  return result;
}

uint64_t Array<A>.maxLatitude.getter(uint64_t result)
{
  if (*(_QWORD *)(result + 16) < 4uLL)
    __break(1u);
  return result;
}

void Array<A>.center.getter(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 < 2)
  {
    __break(1u);
  }
  else if (v1 >= 4)
  {
    CLLocationCoordinate2DMake(*(double *)(a1 + 40) + (*(double *)(a1 + 56) - *(double *)(a1 + 40)) * 0.5, *(double *)(a1 + 32) + (*(double *)(a1 + 48) - *(double *)(a1 + 32)) * 0.5);
    return;
  }
  __break(1u);
}

ValueMetadata *type metadata accessor for AirQualityScaleRequest()
{
  return &type metadata for AirQualityScaleRequest;
}

uint64_t WDSJWTMescalSigner.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  WDSJWTMescalSigner.init()();
  return v0;
}

id sub_1A6284098@<X0>(_QWORD *a1@<X8>)
{
  id result;

  sub_1A619FE44(0, &qword_1ED21B680);
  result = sub_1A62840F8();
  *a1 = result;
  return result;
}

id sub_1A62840F8()
{
  void *v0;
  void *v1;
  id v2;

  v0 = (void *)sub_1A63352E8();
  swift_bridgeObjectRelease();
  v1 = (void *)sub_1A63352E8();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_bagForProfile_profileVersion_, v0, v1);

  return v2;
}

uint64_t WDSJWTMescalSigner.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);

  v1 = sub_1A6334B50();
  MEMORY[0x1E0C80A78](v1);
  sub_1A618B274((unint64_t *)&qword_1ED21CBE0, v2, MEMORY[0x1E0DB33D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21BA10);
  sub_1A6284288();
  sub_1A63357D4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C058);
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1A6334D90();
  return v0;
}

unint64_t sub_1A6284288()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED21BA18;
  if (!qword_1ED21BA18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED21BA10);
    result = MEMORY[0x1A85BEED0](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED21BA18);
  }
  return result;
}

uint64_t WDSJWTMescalSigner.sign(data:bundleIdentifier:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  _QWORD *v11;

  v3 = v2;
  if (qword_1ED21E4E0 != -1)
    swift_once();
  v6 = sub_1A6334F04();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED22A3D8);
  v7 = sub_1A6334EEC();
  v8 = sub_1A633569C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1A6185000, v7, v8, "About to request a signature", v9, 2u);
    MEMORY[0x1A85BEFA8](v9, -1, -1);
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B5B0);
  v10 = *(_QWORD *)(v3 + 16);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = v10;
  swift_retain();
  sub_1A61A6288(a1, a2);
  return sub_1A6334E08();
}

uint64_t sub_1A6284414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  return swift_task_switch();
}

uint64_t sub_1A6284430()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[9];
  v2 = v0[8];
  sub_1A619FE44(0, &qword_1ED219C90);
  sub_1A6284680(v2, v1);
  v0[11] = v3;
  v0[12] = v4;
  sub_1A6334D84();
  v0[13] = v0[6];
  v5 = (_QWORD *)swift_task_alloc();
  v0[14] = v5;
  *v5 = v0;
  v5[1] = sub_1A62844EC;
  return sub_1A6335720();
}

uint64_t sub_1A62844EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;

  v4 = (_QWORD *)*v3;
  v4[2] = v3;
  v4[3] = a1;
  v4[4] = a2;
  v4[5] = v2;
  v4[15] = v2;
  swift_task_dealloc();
  if (v2)
  {
    v6 = v4[12];
    v5 = (void *)v4[13];
    v7 = v4[11];

    sub_1A61A68B8(v7, v6);
  }
  else
  {
    v8 = (void *)v4[13];
    sub_1A61A68B8(v4[11], v4[12]);

  }
  return swift_task_switch();
}

uint64_t sub_1A6284580()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _OWORD *v5;
  __int128 v7;

  if (qword_1ED21E4E0 != -1)
    swift_once();
  v1 = sub_1A6334F04();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED22A3D8);
  v2 = sub_1A6334EEC();
  v3 = sub_1A633569C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1A6185000, v2, v3, "Signed successfully", v4, 2u);
    MEMORY[0x1A85BEFA8](v4, -1, -1);
  }
  v5 = *(_OWORD **)(v0 + 56);
  v7 = *(_OWORD *)(v0 + 24);

  *v5 = v7;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A6284674()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1A6284680(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;

  v3 = sub_1A6335234();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9A30];
  MEMORY[0x1E0C80A78](v3);
  v5 = sub_1A6335228();
  MEMORY[0x1E0C80A78](v5);
  sub_1A618B274(&qword_1ED21C990, v4, MEMORY[0x1E0CA9A28]);
  sub_1A63351D4();
  __asm { BR              X10 }
}

uint64_t sub_1A6284768()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1A6284AD0();
  sub_1A61A68B8(v3, v2);
  sub_1A63351C8();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v0);
  return sub_1A628CB80(v4);
}

uint64_t WDSJWTMescalSigner.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t WDSJWTMescalSigner.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1A62848E0(uint64_t a1, unint64_t a2)
{
  return WDSJWTMescalSigner.sign(data:bundleIdentifier:)(a1, a2);
}

uint64_t sub_1A6284900()
{
  uint64_t v0;

  sub_1A61A68B8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A628492C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1A6284998;
  return sub_1A6284414(a1, v4, v5, v6);
}

uint64_t sub_1A6284998()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t dispatch thunk of WDSSignerType.sign(data:bundleIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t method lookup function for WDSJWTMescalSigner()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WDSJWTMescalSigner.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1A6284A0C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1A6332978();
  if (!result || (result = sub_1A6332990(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_1A6332984();
      sub_1A6335234();
      sub_1A618B274(&qword_1ED21C990, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9A30], MEMORY[0x1E0CA9A28]);
      return sub_1A63351BC();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A6284AD0()
{
  sub_1A6335234();
  sub_1A618B274(&qword_1ED21C990, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9A30], MEMORY[0x1E0CA9A28]);
  return sub_1A63351BC();
}

void static NewsDescriptor.name.getter()
{
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_53();
}

void static NewsDescriptor.name.setter()
{
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_1_8();
}

uint64_t (*static NewsDescriptor.name.modify())()
{
  OUTLINED_FUNCTION_0_11();
  return j__swift_endAccess;
}

uint64_t sub_1A6284C94()
{
  uint64_t result;

  sub_1A6334CDC();
  sub_1A63353F0();
  result = swift_bridgeObjectRelease();
  qword_1ED21C6F0 = 0x2E302E312E30;
  *(_QWORD *)algn_1ED21C6F8 = 0xE600000000000000;
  return result;
}

void static NewsDescriptor.version.getter()
{
  if (qword_1ED21C700 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_53();
}

void static NewsDescriptor.version.setter()
{
  if (qword_1ED21C700 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_1_8();
}

uint64_t (*static NewsDescriptor.version.modify())()
{
  if (qword_1ED21C700 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  return j_j__swift_endAccess;
}

ValueMetadata *type metadata accessor for NewsDescriptor()
{
  return &type metadata for NewsDescriptor;
}

unint64_t WDSSignature.header.getter()
{
  void *v0;
  id v1;

  v0 = (void *)sub_1A6332AEC();
  v1 = objc_msgSend(v0, sel_base64EncodedStringWithOptions_, 1);

  sub_1A6335300();
  sub_1A6335834();
  swift_bridgeObjectRelease();
  sub_1A63353F0();
  swift_bridgeObjectRelease();
  sub_1A63353F0();
  sub_1A6334CDC();
  sub_1A63353F0();
  swift_bridgeObjectRelease();
  sub_1A63353F0();
  sub_1A6334CDC();
  sub_1A63353F0();
  swift_bridgeObjectRelease();
  return 0xD000000000000010;
}

uint64_t destroy for WDSSignature(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1A61A68B8(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for WDSSignature(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  v6 = a2[3];
  sub_1A6334CDC();
  sub_1A61A6288(v5, v6);
  a1[2] = v5;
  a1[3] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  sub_1A6334CDC();
  return a1;
}

_QWORD *assignWithCopy for WDSSignature(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v4 = a2[2];
  v5 = a2[3];
  sub_1A61A6288(v4, v5);
  v6 = a1[2];
  v7 = a1[3];
  a1[2] = v4;
  a1[3] = v5;
  sub_1A61A68B8(v6, v7);
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for WDSSignature(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a1[2];
  v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_1A61A68B8(v5, v6);
  v7 = *(_QWORD *)(a2 + 40);
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WDSSignature(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WDSSignature(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WDSSignature()
{
  return &type metadata for WDSSignature;
}

uint64_t sub_1A628519C(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 16) = (*a1 & 1) == 0;
  *(_QWORD *)(v3 + 24) = a3;
  *(_QWORD *)(v3 + 32) = a2;
  swift_retain();
  swift_retain();
  sub_1A62851FC();
  OUTLINED_FUNCTION_2_6();
  swift_release();
  return v3;
}

uint64_t sub_1A62851FC()
{
  uint64_t result;
  char v1;

  sub_1A6332E28();
  sub_1A6332E1C();
  if (qword_1EE845408 != -1)
    swift_once();
  sub_1A6332E10();
  result = swift_release();
  if (v1 == 1)
  {
    type metadata accessor for Settings.DaemonStore();
    swift_initStaticObject();
    sub_1A61DB4E8();
    sub_1A6332E88();
    return sub_1A62871A4();
  }
  return result;
}

uint64_t sub_1A62852D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v40[3];
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;

  v5 = v4;
  v8 = *v5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8464A0);
  MEMORY[0x1E0C80A78](v9);
  v46 = (uint64_t)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DailyWeatherStatistics();
  MEMORY[0x1E0C80A78](v11);
  v44 = (uint64_t)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v43 = (uint64_t)v40 - v14;
  v15 = *(unsigned __int8 *)(a4 + 8);
  v42 = *(_QWORD *)a4;
  v48 = v42;
  v41 = v15;
  v49 = v15;
  OUTLINED_FUNCTION_0_18();
  v20 = sub_1A62856FC(v16, v17, v18, v19);
  v22 = v21;
  if (qword_1EE845480 != -1)
    swift_once();
  v23 = sub_1A6334F04();
  __swift_project_value_buffer(v23, (uint64_t)qword_1EE85E3E0);
  swift_bridgeObjectRetain_n();
  v24 = sub_1A6334EEC();
  v25 = sub_1A633569C();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc();
    v40[2] = v8;
    v27 = v26;
    v28 = swift_slowAlloc();
    v45 = v20;
    v40[0] = v28;
    *(_DWORD *)v27 = 141558275;
    v47 = 1752392040;
    v48 = v28;
    v40[1] = a2;
    sub_1A6335774();
    *(_WORD *)(v27 + 12) = 2081;
    sub_1A6334CDC();
    v47 = sub_1A61A6A1C(v45, v22, &v48);
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v24, v25, "Attempting to read daily statistics from cache; key=%{private,mask.hash}s",
      (uint8_t *)v27,
      0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_0_5();
  }

  swift_bridgeObjectRelease_n();
  v29 = v46;
  sub_1A62858B0(v20, v22, v46);
  if (__swift_getEnumTagSinglePayload(v29, 1, v11) == 1)
  {
    sub_1A61DB454(v29, &qword_1EE8464A0);
    v48 = v42;
    v49 = v41;
    OUTLINED_FUNCTION_0_18();
    sub_1A62717C0(v30, v31, v32);
    v33 = OUTLINED_FUNCTION_3_0();
    *(_QWORD *)(v33 + 16) = v20;
    *(_QWORD *)(v33 + 24) = v22;
    sub_1A6334CDC();
    v34 = (void *)sub_1A6334DD8();
    sub_1A6334E2C();
    swift_release();
    OUTLINED_FUNCTION_2_6();

    v35 = OUTLINED_FUNCTION_3_0();
    *(_QWORD *)(v35 + 16) = v20;
    *(_QWORD *)(v35 + 24) = v22;
    v36 = (void *)sub_1A6334DD8();
    v37 = sub_1A6334E44();
    swift_release();
    OUTLINED_FUNCTION_2_6();

  }
  else
  {
    swift_bridgeObjectRelease();
    v38 = v43;
    sub_1A6287474(v29, v43);
    sub_1A62874B8(v38, v44);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846418);
    swift_allocObject();
    v37 = sub_1A6334E5C();
    sub_1A62874FC(v38);
  }
  return v37;
}

uint64_t sub_1A62856FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5;
  uint64_t v6;

  v5 = *(_BYTE *)(a4 + 8);
  sub_1A6335834();
  v6 = CLLocationCoordinate2D.cacheKey.getter();
  swift_bridgeObjectRelease();
  sub_1A63353F0();
  sub_1A6335AA4();
  sub_1A63353F0();
  swift_bridgeObjectRelease();
  sub_1A63353F0();
  sub_1A6335AA4();
  sub_1A63353F0();
  swift_bridgeObjectRelease();
  sub_1A63353F0();
  sub_1A62B1508(a1);
  sub_1A63353F0();
  swift_bridgeObjectRelease();
  sub_1A63353F0();
  if ((v5 & 1) == 0)
    sub_1A6335AA4();
  sub_1A63353F0();
  swift_bridgeObjectRelease();
  sub_1A62E0758();
  sub_1A63353F0();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1A62858B0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  const char *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[2];
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;

  v45 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CBA0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A6334F58();
  v43 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE845480 != -1)
    swift_once();
  v11 = sub_1A6334F04();
  v12 = __swift_project_value_buffer(v11, (uint64_t)qword_1EE85E3E0);
  swift_bridgeObjectRetain_n();
  v13 = sub_1A6334EEC();
  v14 = sub_1A633569C();
  v15 = os_log_type_enabled(v13, v14);
  v16 = &protocol conformance descriptor for MonthlyWeatherStatisticsDescriptor;
  v44 = v10;
  if (v15)
  {
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v42 = v12;
    v19 = v18;
    v52 = v18;
    *(_DWORD *)v17 = 141558275;
    v48[0] = 1752392040;
    sub_1A6335774();
    *(_WORD *)(v17 + 12) = 2081;
    sub_1A6334CDC();
    v48[0] = sub_1A61A6A1C(v45, a2, &v52);
    v16 = (_QWORD *)&protocol conformance descriptor for MonthlyWeatherStatisticsDescriptor;
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v13, v14, "Attempting to retrieve daily statistics from cache; key=%{private,mask.hash}s",
      (uint8_t *)v17,
      0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v19, -1, -1);
    MEMORY[0x1A85BEFA8](v17, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (*(_BYTE *)(v46 + 16) != 1)
  {
    v23 = sub_1A6334EEC();
    v24 = sub_1A6335690();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      v26 = "Daily statistics cache is disabled - returning nil";
LABEL_13:
      _os_log_impl(&dword_1A6185000, v23, v24, v26, v25, 2u);
      MEMORY[0x1A85BEFA8](v25, -1, -1);
    }
LABEL_14:

LABEL_15:
    v27 = type metadata accessor for DailyWeatherStatistics();
    return __swift_storeEnumTagSinglePayload(a3, 1, 1, v27);
  }
  v20 = sub_1A61D8F8C();
  if (!v20)
  {
    v23 = sub_1A6334EEC();
    v24 = sub_1A6335690();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      v26 = "Cannot retrieve cached daily statistics due to missing store";
      goto LABEL_13;
    }
    goto LABEL_14;
  }
  v46 = v20;
  sub_1A6335000();
  v55 = (char *)MEMORY[0x1E0DEA968];
  v56 = MEMORY[0x1E0DB2EC8];
  v52 = v45;
  v53 = a2;
  sub_1A6334CDC();
  v21 = v44;
  sub_1A6334FB8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v52);
  v22 = sub_1A633506C();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v22);
  sub_1A6334FDC();
  swift_release();
  sub_1A61DB454((uint64_t)v7, &qword_1ED21CBA0);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v21, v8);
  v29 = v48[0];
  if (!v48[0])
  {
    swift_bridgeObjectRetain_n();
    v37 = sub_1A6334EEC();
    v38 = sub_1A633569C();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc();
      v40 = swift_slowAlloc();
      v52 = v40;
      *(_DWORD *)v39 = v16[22];
      v48[0] = 1752392040;
      sub_1A6335774();
      *(_WORD *)(v39 + 12) = 2081;
      sub_1A6334CDC();
      v48[0] = sub_1A61A6A1C(v45, a2, &v52);
      sub_1A6335774();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A6185000, v37, v38, "Could not find daily statistics in cache; key=%{private,mask.hash}s",
        (uint8_t *)v39,
        0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85BEFA8](v40, -1, -1);
      MEMORY[0x1A85BEFA8](v39, -1, -1);
      swift_release();

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release();
    }
    goto LABEL_15;
  }
  v30 = v49;
  v52 = v48[0];
  v53 = v48[1];
  v54 = v49;
  v55 = v50;
  v43 = v51;
  v44 = v50;
  v56 = v51;
  swift_bridgeObjectRetain_n();
  v31 = sub_1A6334EEC();
  v32 = sub_1A633569C();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = swift_slowAlloc();
    v42 = v30;
    v34 = a2;
    v35 = v33;
    v36 = swift_slowAlloc();
    v48[0] = v36;
    *(_DWORD *)v35 = v16[22];
    v47 = 1752392040;
    sub_1A6335774();
    *(_WORD *)(v35 + 12) = 2081;
    sub_1A6334CDC();
    v47 = sub_1A61A6A1C(v45, v34, v48);
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v31, v32, "Successfully retrieved daily statistics from cache; key=%{private,mask.hash}s",
      (uint8_t *)v35,
      0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v36, -1, -1);
    MEMORY[0x1A85BEFA8](v35, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1A62EE224();
  swift_release();
  return sub_1A61DB490(v29);
}

uint64_t sub_1A628620C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v8 = type metadata accessor for DailyWeatherStatistics();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE845480 != -1)
    swift_once();
  v11 = sub_1A6334F04();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EE85E3E0);
  swift_bridgeObjectRetain_n();
  v12 = sub_1A6334EEC();
  v13 = sub_1A633569C();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    v20 = v4;
    v18 = v15;
    v22 = v15;
    *(_DWORD *)v14 = 141558275;
    v21 = 1752392040;
    v19 = v10;
    sub_1A6335774();
    *(_WORD *)(v14 + 12) = 2081;
    sub_1A6334CDC();
    v21 = sub_1A61A6A1C(a3, a4, &v22);
    v10 = v19;
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v12, v13, "Successfully fetched daily statistics. key=%{private,mask.hash}s", (uint8_t *)v14, 0x16u);
    v16 = v18;
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v16, -1, -1);
    MEMORY[0x1A85BEFA8](v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1A6286480(a1, a3, a4);
  sub_1A62874B8(a1, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846418);
  swift_allocObject();
  return sub_1A6334E5C();
}

void sub_1A6286480(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30[2];
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;

  v7 = sub_1A6332C24();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DailyWeatherStatistics();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v3 + 16) != 1)
  {
    if (qword_1EE845480 != -1)
      swift_once();
    v15 = sub_1A6334F04();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EE85E3E0);
    v29 = sub_1A6334EEC();
    v16 = sub_1A6335690();
    if (!os_log_type_enabled(v29, v16))
      goto LABEL_13;
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    v18 = "Daily statistics cache is disabled - not caching";
    goto LABEL_12;
  }
  if (!sub_1A61D8F8C())
  {
    if (qword_1EE845480 != -1)
      swift_once();
    v19 = sub_1A6334F04();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EE85E3E0);
    v29 = sub_1A6334EEC();
    v16 = sub_1A6335690();
    if (!os_log_type_enabled(v29, v16))
      goto LABEL_13;
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    v18 = "Cannot cache daily statistics due to missing store";
LABEL_12:
    _os_log_impl(&dword_1A6185000, v29, v16, v18, v17, 2u);
    MEMORY[0x1A85BEFA8](v17, -1, -1);
LABEL_13:

    return;
  }
  sub_1A62874B8(a1, (uint64_t)v13);
  v14 = type metadata accessor for Metadata();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1 + *(int *)(v14 + 20), v7);
  sub_1A6334CDC();
  sub_1A62E1794();
  v34 = v31;
  v35 = v32;
  v36 = v33;
  sub_1A6334FF4();
  v31 = v34;
  v32 = v35;
  v33 = v36;
  sub_1A6334FD0();
  swift_release();
  if (qword_1EE845480 != -1)
    swift_once();
  v20 = sub_1A6334F04();
  __swift_project_value_buffer(v20, (uint64_t)qword_1EE85E3E0);
  sub_1A6334CDC();
  sub_1A61DB3F4((uint64_t)&v34);
  sub_1A6334CDC();
  sub_1A61DB3F4((uint64_t)&v34);
  v21 = sub_1A6334EEC();
  v22 = sub_1A633569C();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v30[0] = v24;
    *(_DWORD *)v23 = 141558531;
    *(_QWORD *)&v31 = 1752392040;
    sub_1A6335774();
    *(_WORD *)(v23 + 12) = 2081;
    sub_1A6334CDC();
    *(_QWORD *)&v31 = sub_1A61A6A1C(a2, a3, v30);
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v23 + 22) = 2080;
    v25 = sub_1A61DB3F4((uint64_t)&v34);
    sub_1A62E8144(&v31, v25);
    sub_1A61DB394((uint64_t)&v34);
    v26 = sub_1A62E82A8(v31, BYTE8(v31));
    *(_QWORD *)&v31 = sub_1A61A6A1C(v26, v27, v30);
    sub_1A6335774();
    swift_bridgeObjectRelease();
    sub_1A61DB394((uint64_t)&v34);
    sub_1A61DB394((uint64_t)&v34);
    _os_log_impl(&dword_1A6185000, v21, v22, "Just cached daily statistics; key=%{private,mask.hash}s. It's valid for another %s",
      (uint8_t *)v23,
      0x20u);
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v24, -1, -1);
    MEMORY[0x1A85BEFA8](v23, -1, -1);

    sub_1A61DB394((uint64_t)&v34);
  }
  else
  {
    sub_1A61DB394((uint64_t)&v34);
    swift_bridgeObjectRelease_n();
    sub_1A61DB394((uint64_t)&v34);
    sub_1A61DB394((uint64_t)&v34);

  }
  sub_1A6286DA4();
  swift_release();
}

void sub_1A6286BE8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_1EE845480 != -1)
    swift_once();
  v5 = sub_1A6334F04();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EE85E3E0);
  swift_bridgeObjectRetain_n();
  v6 = sub_1A6334EEC();
  v7 = sub_1A6335690();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_DWORD *)v8 = 141558275;
    v10 = v9;
    sub_1A6335774();
    *(_WORD *)(v8 + 12) = 2081;
    sub_1A6334CDC();
    sub_1A61A6A1C(a2, a3, &v10);
    sub_1A6335774();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A6185000, v6, v7, "Failed to fetch daily statistics. key=%{private,mask.hash}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v9, -1, -1);
    MEMORY[0x1A85BEFA8](v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_1A6286DA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v13[5];

  v0 = sub_1A6332C24();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  v4 = sub_1A6334F58();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  if (sub_1A61D8F8C())
  {
    sub_1A6335018();
    v13[3] = v0;
    v13[4] = MEMORY[0x1E0DB2918];
    __swift_allocate_boxed_opaque_existential_1(v13);
    sub_1A6332C0C();
    sub_1A6332BAC();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_1A6334FC4();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    sub_1A6335060();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (qword_1EE845480 != -1)
      swift_once();
    v8 = sub_1A6334F04();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EE85E3E0);
    v9 = sub_1A6334EEC();
    v10 = sub_1A633569C();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1A6185000, v9, v10, "Purged expired daily weather statistics", v11, 2u);
      MEMORY[0x1A85BEFA8](v11, -1, -1);
      swift_release();

    }
    else
    {

      swift_release();
    }
  }
}

uint64_t sub_1A62871A4()
{
  uint64_t result;

  result = sub_1A61D8F8C();
  if (result)
  {
    sub_1A6335018();
    sub_1A6335054();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for DailyStatisticsDataManager()
{
  return objc_opt_self();
}

uint64_t sub_1A6287430()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A6287454(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A628620C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_1A628746C(uint64_t a1)
{
  uint64_t v1;

  sub_1A6286BE8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1A6287474(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DailyWeatherStatistics();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A62874B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DailyWeatherStatistics();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A62874FC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DailyWeatherStatistics();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t WDSJWTAuthenticatorServiceProxy.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  WDSJWTAuthenticatorServiceProxy.init()();
  return v0;
}

id sub_1A6287570()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 32);
  if (v1)
  {
    v2 = *(id *)(v0 + 32);
  }
  else
  {
    v3 = sub_1A62875C4();
    v4 = *(void **)(v0 + 32);
    *(_QWORD *)(v0 + 32) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

id sub_1A62875C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v8;

  v0 = sub_1A6334C10();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A62884DC();
  if (qword_1ED21A0C8 != -1)
    swift_once();
  v4 = sub_1A6334B74();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED21A0B0);
  sub_1A6334B68();
  v5 = sub_1A62876CC();
  sub_1A6334B5C();
  v6 = (void *)sub_1A6334C04();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v5, sel_setRemoteObjectInterface_, v6);

  return v5;
}

id sub_1A62876CC()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_1A63352E8();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithServiceName_, v1);

  return v2;
}

_QWORD *WDSJWTAuthenticatorServiceProxy.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_1A6334B2C();
  MEMORY[0x1E0C80A78](v1);
  sub_1A6334B20();
  sub_1A6334B44();
  OUTLINED_FUNCTION_1_1();
  v2 = sub_1A6334B38();
  v0[3] = 0;
  v0[4] = 0;
  v0[2] = v2;
  return v0;
}

uint64_t WDSJWTAuthenticatorServiceProxy.deinit()
{
  uint64_t v0;

  swift_release();

  return v0;
}

uint64_t WDSJWTAuthenticatorServiceProxy.__deallocating_deinit()
{
  WDSJWTAuthenticatorServiceProxy.deinit();
  return swift_deallocClassInstance();
}

uint64_t WDSJWTAuthenticatorServiceProxy.generateToken(session:url:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D238);
  OUTLINED_FUNCTION_1_1();
  return sub_1A6334E8C();
}

void sub_1A6287850(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  _QWORD *v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  _QWORD *v27;
  void *v28;
  uint64_t aBlock;
  uint64_t v30;
  void (*v31)(uint64_t, void *, void *);
  void *v32;
  void *v33;
  _QWORD *v34;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  swift_retain();
  v9 = sub_1A6287570();
  objc_msgSend(v9, sel_activate);

  v10 = sub_1A6287570();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a3;
  *(_QWORD *)(v11 + 24) = a4;
  v33 = sub_1A6288448;
  v34 = (_QWORD *)v11;
  v12 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v30 = 1107296256;
  v31 = (void (*)(uint64_t, void *, void *))sub_1A62AEDA4;
  v32 = &block_descriptor_1;
  v13 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v14 = objc_msgSend(v10, sel_remoteObjectProxyWithErrorHandler_, v13);
  _Block_release(v13);

  sub_1A63357BC();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED219A08);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1A6334CDC();
    v15 = (void *)sub_1A63352E8();
    swift_bridgeObjectRelease();
    v16 = (_QWORD *)swift_allocObject();
    v16[2] = a3;
    v16[3] = a4;
    v16[4] = sub_1A6277144;
    v16[5] = v8;
    v33 = sub_1A62884D0;
    v34 = v16;
    aBlock = v12;
    v30 = 1107296256;
    v31 = sub_1A628835C;
    v32 = &block_descriptor_9;
    v17 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v28, sel_generateTokenWithUrl_completion_, v15, v17);
    swift_unknownObjectRelease();
    _Block_release(v17);

  }
  else
  {
    swift_release();
    if (qword_1ED21E4E0 != -1)
      swift_once();
    v18 = sub_1A6334F04();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED22A3D8);
    v19 = sub_1A6334EEC();
    v20 = sub_1A6335690();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      aBlock = v22;
      *(_DWORD *)v21 = 136446210;
      if (qword_1ED21A0C8 != -1)
        swift_once();
      v23 = sub_1A6334B74();
      __swift_project_value_buffer(v23, (uint64_t)qword_1ED21A0B0);
      v24 = sub_1A6334B68();
      sub_1A61A6A1C(v24, v25, &aBlock);
      sub_1A6335774();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A6185000, v19, v20, "Remote object proxy remote interface mismatch for: %{public}s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85BEFA8](v22, -1, -1);
      MEMORY[0x1A85BEFA8](v21, -1, -1);
    }

    sub_1A6288468();
    v26 = (void *)swift_allocError();
    *v27 = 0;
    a3();

  }
}

void sub_1A6287C58(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  sub_1A6287850(a1, a2, a3, a4);
}

void sub_1A6287C64(void *a1, void (*a2)(void *))
{
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;

  if (qword_1ED21E4E0 != -1)
    swift_once();
  v4 = sub_1A6334F04();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED22A3D8);
  v5 = a1;
  v6 = a1;
  v7 = sub_1A6334EEC();
  v8 = sub_1A6335690();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v20 = v10;
    *(_DWORD *)v9 = 136446466;
    if (qword_1ED21A0C8 != -1)
      swift_once();
    v11 = sub_1A6334B74();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED21A0B0);
    v12 = sub_1A6334B68();
    sub_1A61A6A1C(v12, v13, &v20);
    sub_1A6335774();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    v14 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CAD0);
    v15 = sub_1A6335348();
    sub_1A61A6A1C(v15, v16, &v20);
    sub_1A6335774();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A6185000, v7, v8, "Failed to get remote object proxy for: %{public}s with error: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85BEFA8](v10, -1, -1);
    MEMORY[0x1A85BEFA8](v9, -1, -1);
  }
  else
  {

  }
  sub_1A6288468();
  v17 = (void *)swift_allocError();
  *v18 = a1;
  v19 = a1;
  a2(v17);

}

void sub_1A6287EEC(uint64_t a1, void *a2, void (*a3)(void))
{
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;
  _QWORD *v29;
  id v30;
  uint64_t v31;
  void (*v32)(void);
  uint64_t v33[2];
  uint64_t v34;

  if (a1)
  {
    v33[0] = 0;
    v33[1] = 0;
    sub_1A63352F4();
  }
  if (a2)
  {
    v5 = qword_1ED21E4E0;
    v6 = a2;
    if (v5 != -1)
      swift_once();
    v7 = sub_1A6334F04();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED22A3D8);
    v8 = v6;
    v9 = sub_1A6334EEC();
    v10 = sub_1A6335690();
    if (os_log_type_enabled(v9, v10))
    {
      v32 = a3;
      v11 = swift_slowAlloc();
      v31 = swift_slowAlloc();
      v33[0] = v31;
      *(_DWORD *)v11 = 136446466;
      if (qword_1ED21A0C8 != -1)
        swift_once();
      v12 = sub_1A6334B74();
      __swift_project_value_buffer(v12, (uint64_t)qword_1ED21A0B0);
      v13 = sub_1A6334B68();
      v34 = sub_1A61A6A1C(v13, v14, v33);
      sub_1A6335774();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2080;
      v15 = v8;
      v16 = objc_msgSend(v15, sel_description);
      v17 = sub_1A6335300();
      v19 = v18;

      v34 = sub_1A61A6A1C(v17, v19, v33);
      sub_1A6335774();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A6185000, v9, v10, "Failed to generate jwt token for: %{public}s with error: %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85BEFA8](v31, -1, -1);
      MEMORY[0x1A85BEFA8](v11, -1, -1);

      a3 = v32;
    }
    else
    {

    }
    v30 = v8;
    a3();

  }
  else
  {
    if (qword_1ED21E4E0 != -1)
      swift_once();
    v20 = sub_1A6334F04();
    __swift_project_value_buffer(v20, (uint64_t)qword_1ED22A3D8);
    v21 = sub_1A6334EEC();
    v22 = sub_1A6335690();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v33[0] = v24;
      *(_DWORD *)v23 = 136446210;
      if (qword_1ED21A0C8 != -1)
        swift_once();
      v25 = sub_1A6334B74();
      __swift_project_value_buffer(v25, (uint64_t)qword_1ED21A0B0);
      v26 = sub_1A6334B68();
      v34 = sub_1A61A6A1C(v26, v27, v33);
      sub_1A6335774();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A6185000, v21, v22, "Failed to generate jwt token for: %{public}s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85BEFA8](v24, -1, -1);
      MEMORY[0x1A85BEFA8](v23, -1, -1);
    }

    sub_1A6288468();
    v28 = (void *)swift_allocError();
    *v29 = 1;
    a3();

  }
}

void sub_1A628835C(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_1A62883D0()
{
  return WDSJWTAuthenticatorServiceProxy.generateToken(session:url:)();
}

uint64_t type metadata accessor for WDSJWTAuthenticatorServiceProxy()
{
  return objc_opt_self();
}

uint64_t method lookup function for WDSJWTAuthenticatorServiceProxy()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WDSJWTAuthenticatorServiceProxy.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1A6288424()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A6288448(void *a1)
{
  uint64_t v1;

  sub_1A6287C64(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

unint64_t sub_1A6288468()
{
  unint64_t result;

  result = qword_1EE847C90;
  if (!qword_1EE847C90)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633FC90, &type metadata for WDSJWTAuthenticatorServiceProxy.Errors);
    atomic_store(result, (unint64_t *)&qword_1EE847C90);
  }
  return result;
}

uint64_t sub_1A62884A4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1A62884D0(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1A6287EEC(a1, a2, *(void (**)(void))(v2 + 16));
}

unint64_t sub_1A62884DC()
{
  unint64_t result;

  result = qword_1ED219A10;
  if (!qword_1ED219A10)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED219A10);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for WDSJWTAuthenticatorServiceProxy.Errors(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void destroy for WDSJWTAuthenticatorServiceProxy.Errors(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **assignWithCopy for WDSJWTAuthenticatorServiceProxy.Errors(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
      v7 = v4;
    *a1 = v4;
  }
  else if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    *a1 = *a2;
  }
  else
  {
    v5 = v4;
    v6 = *a1;
    *a1 = v4;

  }
  return a1;
}

void **assignWithTake for WDSJWTAuthenticatorServiceProxy.Errors(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for WDSJWTAuthenticatorServiceProxy.Errors(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WDSJWTAuthenticatorServiceProxy.Errors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

uint64_t sub_1A6288708(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1A6288720(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for WDSJWTAuthenticatorServiceProxy.Errors()
{
  return &type metadata for WDSJWTAuthenticatorServiceProxy.Errors;
}

uint64_t HourWeatherStatistics.hour.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

__n128 HourWeatherStatistics.temperature.getter@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  unsigned __int8 v3;
  __n128 result;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_BYTE *)(v1 + 32);
  result = *(__n128 *)(v1 + 8);
  *a1 = result;
  a1[1].n128_u64[0] = v2;
  a1[1].n128_u8[8] = v3;
  return result;
}

void HourWeatherStatistics.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  char v31;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847C98);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_2();
  v7 = v6 - v5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847CA0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_2();
  v12 = v11 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6288AA4();
  sub_1A6335BDC();
  if (v27)
  {
    v13 = (uint64_t)a1;
  }
  else
  {
    v28 = v7;
    v24 = sub_1A63359CC();
    v25 = v12;
    v13 = (uint64_t)a1;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1A6288AE0();
    sub_1A6335BDC();
    LOBYTE(v29) = 0;
    v14 = v3;
    v15 = sub_1A6335990();
    if ((v16 & 1) != 0)
    {
      v21 = v4;
      v20 = a2;
    }
    else
    {
      v17 = v15;
      LOBYTE(v29) = 1;
      v18 = sub_1A6335990();
      v21 = v4;
      v20 = a2;
      if ((v19 & 1) == 0)
      {
        v22 = sub_1A6288B58(v24, v17, v18);
        if ((v23 & 1) != 0)
        {
          sub_1A6335870();
          swift_allocError();
          sub_1A6288BC8();
          sub_1A6335858();
          swift_willThrow();
          (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v28, v14);
          OUTLINED_FUNCTION_2_35(v25, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
          goto LABEL_4;
        }
        v24 = v22;
      }
    }
    sub_1A6288B1C();
    sub_1A633599C();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v28, v14);
    OUTLINED_FUNCTION_2_35(v25, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
    *(_QWORD *)v20 = v24;
    *(_OWORD *)(v20 + 8) = v29;
    *(_QWORD *)(v20 + 24) = v30;
    *(_BYTE *)(v20 + 32) = v31;
  }
LABEL_4:
  __swift_destroy_boxed_opaque_existential_1(v13);
  OUTLINED_FUNCTION_1();
}

unint64_t sub_1A6288AA4()
{
  unint64_t result;

  result = qword_1EE847CA8;
  if (!qword_1EE847CA8)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A6340024, &type metadata for HourWeatherStatistics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847CA8);
  }
  return result;
}

unint64_t sub_1A6288AE0()
{
  unint64_t result;

  result = qword_1EE847CB0;
  if (!qword_1EE847CB0)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633FFD4, &type metadata for HourWeatherStatistics.LegacyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847CB0);
  }
  return result;
}

unint64_t sub_1A6288B1C()
{
  unint64_t result;

  result = qword_1EE847CB8;
  if (!qword_1EE847CB8)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for Quantiles, &type metadata for Quantiles);
    atomic_store(result, (unint64_t *)&qword_1EE847CB8);
  }
  return result;
}

uint64_t sub_1A6288B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  result = sub_1A62C26A8(a2, a3);
  if ((v5 & 1) == 0)
  {
    v6 = result - 1;
    if (__OFSUB__(result, 1))
    {
      __break(1u);
    }
    else
    {
      v7 = (unsigned __int128)(v6 * (__int128)24) >> 64;
      v8 = 24 * v6;
      if (v7 == v8 >> 63)
      {
        v9 = __OFADD__(v8, a1);
        v10 = v8 + a1;
        if (!v9)
        {
          result = v10 + 1;
          if (!__OFADD__(v10, 1))
            return result;
LABEL_10:
          __break(1u);
          return result;
        }
LABEL_9:
        __break(1u);
        goto LABEL_10;
      }
    }
    __break(1u);
    goto LABEL_9;
  }
  return result;
}

unint64_t sub_1A6288BC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE847CC0;
  if (!qword_1EE847CC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE847C98);
    result = MEMORY[0x1A85BEED0](MEMORY[0x1E0DED060], v1);
    atomic_store(result, (unint64_t *)&qword_1EE847CC0);
  }
  return result;
}

uint64_t sub_1A6288C0C()
{
  return sub_1A6288C60();
}

uint64_t sub_1A6288C28(char a1)
{
  if ((a1 & 1) != 0)
    return 0x74617265706D6574;
  else
    return 1920298856;
}

uint64_t sub_1A6288C60()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_1A6335918();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_1A6288CAC()
{
  return sub_1A6288C60();
}

uint64_t sub_1A6288CC8(char a1)
{
  if ((a1 & 1) != 0)
    return 0x68746E6F6DLL;
  else
    return 0x6E6F4D664F796164;
}

void sub_1A6288D00(char *a1, char *a2)
{
  sub_1A6244CB4(*a1, *a2);
}

void sub_1A6288D0C()
{
  sub_1A62DE30C();
}

uint64_t sub_1A6288D14()
{
  return sub_1A61F5204();
}

void sub_1A6288D1C()
{
  sub_1A61F5544();
}

uint64_t sub_1A6288D24@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A6288C60();
  *a1 = result;
  return result;
}

uint64_t sub_1A6288D58@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1A6288C28(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A6288D80()
{
  char *v0;

  return sub_1A6288C28(*v0);
}

uint64_t sub_1A6288D88@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A6288C0C();
  *a1 = result;
  return result;
}

uint64_t sub_1A6288DAC()
{
  sub_1A6288AA4();
  return sub_1A6335C18();
}

uint64_t sub_1A6288DD4()
{
  sub_1A6288AA4();
  return sub_1A6335C24();
}

uint64_t sub_1A6288DFC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A6244CB0(*a1, *a2);
}

uint64_t sub_1A6288E08()
{
  char *v0;

  return sub_1A62DE318(*v0);
}

uint64_t sub_1A6288E10(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1A61F5200(a1, *v1);
}

uint64_t sub_1A6288E18(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1A61F5540(a1, *v1);
}

uint64_t sub_1A6288E20@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A6288C60();
  *a1 = result;
  return result;
}

uint64_t sub_1A6288E54@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1A6288CC8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A6288E7C()
{
  char *v0;

  return sub_1A6288CC8(*v0);
}

uint64_t sub_1A6288E84@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A6288CAC();
  *a1 = result;
  return result;
}

uint64_t sub_1A6288EA8()
{
  sub_1A6288AE0();
  return sub_1A6335C18();
}

uint64_t sub_1A6288ED0()
{
  sub_1A6288AE0();
  return sub_1A6335C24();
}

BOOL static HourWeatherStatistics.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;

  if (*(_QWORD *)a1 != *(_QWORD *)a2)
    return 0;
  if ((*(_BYTE *)(a1 + 32) & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
      return 0;
    v2 = *(double *)(a1 + 8) == *(double *)(a2 + 8) && *(double *)(a1 + 16) == *(double *)(a2 + 16);
    return v2 && *(double *)(a1 + 24) == *(double *)(a2 + 24);
  }
  return (*(_BYTE *)(a2 + 32) & 1) != 0;
}

void HourWeatherStatistics.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847CC8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_2();
  v7 = v6 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6288AA4();
  sub_1A6335BF4();
  sub_1A6335A74();
  if (!v1)
  {
    sub_1A6289094();
    sub_1A6335A44();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  OUTLINED_FUNCTION_1();
}

unint64_t sub_1A6289094()
{
  unint64_t result;

  result = qword_1EE847CD0;
  if (!qword_1EE847CD0)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for Quantiles, &type metadata for Quantiles);
    atomic_store(result, (unint64_t *)&qword_1EE847CD0);
  }
  return result;
}

void sub_1A62890D0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  HourWeatherStatistics.init(from:)(a1, a2);
}

void sub_1A62890E4(_QWORD *a1)
{
  HourWeatherStatistics.encode(to:)(a1);
}

void sub_1A62890FC()
{
  static HourWeatherStatistics.read(from:)();
}

uint64_t sub_1A6289110()
{
  return HourWeatherStatistics.write(to:)();
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for HourWeatherStatistics(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HourWeatherStatistics(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 33) = v3;
  return result;
}

ValueMetadata *type metadata accessor for HourWeatherStatistics()
{
  return &type metadata for HourWeatherStatistics;
}

ValueMetadata *type metadata accessor for HourWeatherStatistics.CodingKeys()
{
  return &type metadata for HourWeatherStatistics.CodingKeys;
}

uint64_t _s13WeatherDaemon21HourWeatherStatisticsV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A62891FC + 4 * byte_1A633FCD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A6289230 + 4 * byte_1A633FCD0[v4]))();
}

uint64_t sub_1A6289230(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6289238(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6289240);
  return result;
}

uint64_t sub_1A628924C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6289254);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A6289258(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6289260(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HourWeatherStatistics.LegacyCodingKeys()
{
  return &type metadata for HourWeatherStatistics.LegacyCodingKeys;
}

unint64_t sub_1A6289280()
{
  unint64_t result;

  result = qword_1EE847CD8;
  if (!qword_1EE847CD8)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633FEBC, &type metadata for HourWeatherStatistics.LegacyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847CD8);
  }
  return result;
}

unint64_t sub_1A62892C0()
{
  unint64_t result;

  result = qword_1EE847CE0;
  if (!qword_1EE847CE0)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633FFAC, &type metadata for HourWeatherStatistics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847CE0);
  }
  return result;
}

unint64_t sub_1A6289300()
{
  unint64_t result;

  result = qword_1EE847CE8;
  if (!qword_1EE847CE8)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633FDF4, &type metadata for HourWeatherStatistics.LegacyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847CE8);
  }
  return result;
}

unint64_t sub_1A6289340()
{
  unint64_t result;

  result = qword_1EE847CF0;
  if (!qword_1EE847CF0)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633FE1C, &type metadata for HourWeatherStatistics.LegacyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847CF0);
  }
  return result;
}

unint64_t sub_1A6289380()
{
  unint64_t result;

  result = qword_1EE847CF8;
  if (!qword_1EE847CF8)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633FEE4, &type metadata for HourWeatherStatistics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847CF8);
  }
  return result;
}

unint64_t sub_1A62893C0()
{
  unint64_t result;

  result = qword_1EE847D00;
  if (!qword_1EE847D00)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A633FF0C, &type metadata for HourWeatherStatistics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847D00);
  }
  return result;
}

uint64_t GeoJSON.Feature<>.country.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 40) == 1)
    return 0;
  v1 = *(_QWORD *)(v0 + 48);
  sub_1A6334CDC();
  return v1;
}

uint64_t GeoJSON.Feature<>.channel.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 40) == 1)
    return 0;
  v1 = *(_QWORD *)(v0 + 32);
  sub_1A6334CDC();
  return v1;
}

uint64_t dispatch thunk of CloudChannelRegionType.channel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CloudChannelRegionType.country.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CloudChannelRegionType.geometry.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CloudChannelRegionType.contains(_:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CloudChannelMapType.contains(_:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CloudChannelMapType.regions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void sub_1A62894C0(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A6289504(_QWORD *a1)
{
  double v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v4 = a1[2];
  v3 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  if (v4)
  {
    if (*(_QWORD *)(v4 + 16) == 4)
    {
      v7 = *(double *)(v4 + 32) > v1 || *(double *)(v4 + 48) < v1;
      v8 = v7 || *(double *)(v4 + 40) > v2;
      v9 = v8 || *(double *)(v4 + 56) < v2;
      if (!v9 && v3 != 0)
        goto LABEL_19;
    }
  }
  else if (v3)
  {
LABEL_19:
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A628BDC8(v5, v6);
    v11 = Array<A>.contains(_:)(v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A628BE58(v5, v6);
    return v11 & 1;
  }
  return 0;
}

uint64_t sub_1A6289760(double a1, double a2)
{
  uint64_t v2;
  BOOL v5;
  BOOL v6;
  BOOL v7;
  char v8;
  uint64_t v10;
  _BYTE v11[8];
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_0_48(v2 + 16, (uint64_t)v11);
  OUTLINED_FUNCTION_0_48((uint64_t)v11, (uint64_t)&v12);
  if ((!v12
     || *(_QWORD *)(v12 + 16) == 4
     && (*(double *)(v12 + 32) <= a2 ? (v5 = *(double *)(v12 + 48) < a2) : (v5 = 1),
         !v5 ? (v6 = *(double *)(v12 + 40) > a1) : (v6 = 1),
         !v6 ? (v7 = *(double *)(v12 + 56) < a1) : (v7 = 1),
         !v7))
    && (OUTLINED_FUNCTION_0_48(v2 + 24, (uint64_t)&v10),
        OUTLINED_FUNCTION_0_48((uint64_t)&v10, (uint64_t)&v13),
        (~v13 & 0xF000000000000007) != 0))
  {
    sub_1A62894C0(v13);
  }
  else
  {
    v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_1A6289828(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  uint64_t v16;

  v3 = *(_QWORD *)(v2 + 8);
  if (v3 && *(_QWORD *)(v3 + 16))
  {
    v6 = v3 + 32;
    v16 = *(_QWORD *)(v3 + 16);
    sub_1A6334CDC();
    v7 = 0;
    do
    {
      v8 = v6 + (v7 << 6);
      v9 = *(_QWORD *)(v8 + 16);
      v10 = *(_QWORD *)(v8 + 24);
      if (v9)
      {
        if (*(_QWORD *)(v9 + 16) == 4)
        {
          v11 = *(double *)(v9 + 32) > a2 || *(double *)(v9 + 48) < a2;
          v12 = v11 || *(double *)(v9 + 40) > a1;
          v13 = v12 || *(double *)(v9 + 56) < a1;
          if (!v13 && (v10 & 0xF000000000000007) != 0xF000000000000007)
LABEL_22:
            __asm { BR              X9 }
        }
      }
      else if ((~v10 & 0xF000000000000007) != 0)
      {
        goto LABEL_22;
      }
      ++v7;
    }
    while (v7 != v16);
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_1A628BA3C()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;

  v1 = *v0;
  swift_retain();
  sub_1A62894C0(v1);
  LOBYTE(v1) = v2;
  swift_release();
  return v1 & 1;
}

uint64_t sub_1A628BA94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)v0 >> 62 != 3)
    return MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(*(_QWORD *)v0 + 24))
    v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  else
    v1 = MEMORY[0x1E0DEE9D8];
  sub_1A6334CDC();
  v2 = sub_1A628BAF8(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1A628BAF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  _UNKNOWN **v19;
  uint64_t v20;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v20 = MEMORY[0x1E0DEE9D8];
    sub_1A61DF650();
    v2 = v20;
    v4 = (uint64_t *)(a1 + 48);
    do
    {
      v5 = *(v4 - 1);
      v15 = *(v4 - 2);
      v6 = *v4;
      v7 = v4[1];
      v8 = v4[2];
      v9 = v4[3];
      v11 = v4[4];
      v10 = v4[5];
      sub_1A6334CDC();
      sub_1A6334CDC();
      sub_1A622C9D0(v7);
      v16 = v10;
      sub_1A628BDC8(v8, v9);
      v20 = v2;
      v12 = *(_QWORD *)(v2 + 16);
      if (v12 >= *(_QWORD *)(v2 + 24) >> 1)
      {
        sub_1A61DF650();
        v2 = v20;
      }
      v4 += 8;
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847D08);
      v19 = &protocol witness table for <> GeoJSON<A>.Feature;
      v13 = (_QWORD *)swift_allocObject();
      *(_QWORD *)&v17 = v13;
      v13[2] = v15;
      v13[3] = v5;
      v13[4] = v6;
      v13[5] = v7;
      v13[6] = v8;
      v13[7] = v9;
      v13[8] = v11;
      v13[9] = v16;
      *(_QWORD *)(v2 + 16) = v12 + 1;
      sub_1A61A1000(&v17, v2 + 40 * v12 + 32);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1A628BC6C(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (*(_QWORD *)(a2 + 16) <= a1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v2 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
  swift_unknownObjectRetain_n();
  if (swift_dynamicCast())
    return v2;
LABEL_7:
  sub_1A6335834();
  sub_1A63353F0();
  sub_1A63353F0();
  sub_1A63353F0();
  swift_getObjectType();
  swift_unknownObjectRelease();
  sub_1A6335C30();
  sub_1A63353F0();
  swift_bridgeObjectRelease();
  result = sub_1A63358F4();
  __break(1u);
  return result;
}

uint64_t sub_1A628BDC8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    sub_1A6334CDC();
    return sub_1A6334CDC();
  }
  return result;
}

uint64_t sub_1A628BDFC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((~*(_QWORD *)(v0 + 40) & 0xF000000000000007) != 0)
    swift_release();
  if (*(_QWORD *)(v0 + 56) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1A628BE58(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A628BE8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A628BDC8(v2, v3);
  return a1;
}

uint64_t sub_1A628BEE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A628BE58(v2, v3);
  return a1;
}

uint64_t sub_1A628BF48(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

uint64_t sub_1A628BF60(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

ValueMetadata *type metadata accessor for CloudChannelMap()
{
  return &type metadata for CloudChannelMap;
}

ValueMetadata *type metadata accessor for MonthlyWeatherStatisticsRequest()
{
  return &type metadata for MonthlyWeatherStatisticsRequest;
}

uint64_t WeatherAvailableDataSetsStore.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  WeatherAvailableDataSetsStore.init()();
  return v0;
}

uint64_t WeatherAvailableDataSetsStore.availableDataSets.getter()
{
  return swift_retain();
}

uint64_t WeatherAvailableDataSetsStore.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v13;

  v2 = v0;
  v3 = sub_1A63350D8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED2193B8 != -1)
    swift_once();
  if (qword_1ED2193B0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED219538);
    sub_1A628C86C();
    swift_retain();
    v7 = sub_1A633509C();
    if (!v1)
    {
      *(_QWORD *)(v0 + 16) = v7;
      (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB2E80], v3);
      sub_1A63350E4();
      OUTLINED_FUNCTION_0_49();
      swift_release();
      return v2;
    }
    swift_release();
  }
  else
  {
    if (qword_1ED21D318 != -1)
      swift_once();
    v8 = sub_1A6334F04();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ED22A3C0);
    v9 = sub_1A6334EEC();
    v10 = sub_1A6335690();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1A6185000, v9, v10, "Failed to create weather available data sets database", v11, 2u);
      MEMORY[0x1A85BEFA8](v11, -1, -1);
    }

    sub_1A628C830();
    swift_allocError();
    swift_willThrow();
  }
  swift_deallocPartialClassInstance();
  return v2;
}

uint64_t sub_1A628C260()
{
  sub_1A633500C();
  sub_1A6335048();
  return swift_release();
}

uint64_t WeatherAvailableDataSetsStore.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t WeatherAvailableDataSetsStore.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1A628C2E4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v0 = sub_1A63350A8();
  __swift_allocate_value_buffer(v0, qword_1ED2193C0);
  v1 = (uint64_t *)__swift_project_value_buffer(v0, (uint64_t)qword_1ED2193C0);
  if (qword_1ED21D318 != -1)
    swift_once();
  v2 = sub_1A6334F04();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED22A3C0);
  return static Database.Location.protectedLocation(_:logger:)(0xD00000000000001ELL, 0x80000001A634B6C0, v1);
}

void static WeatherAvailableDataSetsStore.location.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED2193D8 != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_22();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED2193C0);
  OUTLINED_FUNCTION_0_11();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
  OUTLINED_FUNCTION_1_8();
}

void static WeatherAvailableDataSetsStore.location.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED2193D8 != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_22();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED2193C0);
  OUTLINED_FUNCTION_0_11();
  v4 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
  OUTLINED_FUNCTION_1_8();
}

uint64_t (*static WeatherAvailableDataSetsStore.location.modify())()
{
  uint64_t v0;

  if (qword_1ED2193D8 != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_22();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED2193C0);
  OUTLINED_FUNCTION_0_11();
  return j__swift_endAccess;
}

uint64_t static WeatherAvailableDataSetsStore.preferredCacheSize.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = 32;
  v2 = *MEMORY[0x1E0DB2E20];
  v3 = sub_1A63350C0();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1A628C564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char v30;

  v0 = sub_1A6335084();
  v27 = *(_QWORD *)(v0 - 8);
  v28 = v0;
  MEMORY[0x1E0C80A78](v0);
  v29 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1A6335090();
  v25 = *(_QWORD *)(v2 - 8);
  v26 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A6335078();
  v23 = *(_QWORD *)(v5 - 8);
  v24 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A63350C0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (_QWORD *)((char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_1A6334F88();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A63350A8();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[1] = sub_1A63350CC();
  if (qword_1ED2193D8 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v15, (uint64_t)qword_1ED2193C0);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v19, v15);
  static AssertionOptions.weatherAssertions.getter();
  *v11 = 32;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB2E20], v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v23 + 104))(v7, *MEMORY[0x1E0DB2D50], v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v4, *MEMORY[0x1E0DB2DA8], v26);
  v20 = (uint64_t)v29;
  (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v29, *MEMORY[0x1E0DB2D80], v28);
  v30 = 1;
  result = Database.init(location:assertions:journalingMode:recoveryMode:preferredCacheSize:vacuumMode:busyTimeout:)((uint64_t)v18, (uint64_t)v14, (uint64_t)v4, v20, (uint64_t)v11, (uint64_t)v7, 0x100000000);
  qword_1ED2193B0 = result;
  return result;
}

unint64_t sub_1A628C830()
{
  unint64_t result;

  result = qword_1EE847D18;
  if (!qword_1EE847D18)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A6340200, &type metadata for WeatherAvailableDataSetsStore.Errors);
    atomic_store(result, (unint64_t *)&qword_1EE847D18);
  }
  return result;
}

unint64_t sub_1A628C86C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED219530;
  if (!qword_1ED219530)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED219538);
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for CacheEntity<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED219530);
  }
  return result;
}

uint64_t sub_1A628C8B0()
{
  return sub_1A628C260();
}

uint64_t method lookup function for WeatherAvailableDataSetsStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WeatherAvailableDataSetsStore.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t storeEnumTagSinglePayload for WeatherAvailableDataSetsStore.Errors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A628C92C + 4 * asc_1A6340140[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A628C94C + 4 * byte_1A6340145[v4]))();
}

_BYTE *sub_1A628C92C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A628C94C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A628C954(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A628C95C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A628C964(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A628C96C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WeatherAvailableDataSetsStore.Errors()
{
  return &type metadata for WeatherAvailableDataSetsStore.Errors;
}

unint64_t sub_1A628C98C()
{
  unint64_t result;

  result = qword_1EE847D20;
  if (!qword_1EE847D20)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A63401D8, &type metadata for WeatherAvailableDataSetsStore.Errors);
    atomic_store(result, (unint64_t *)&qword_1EE847D20);
  }
  return result;
}

_UNKNOWN **sub_1A628C9C8()
{
  return &off_1E5000758;
}

unint64_t sub_1A628C9D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE847D38;
  if (!qword_1EE847D38)
  {
    v1 = type metadata accessor for Weather();
    result = MEMORY[0x1A85BEED0](&unk_1A6338BD4, v1);
    atomic_store(result, (unint64_t *)&qword_1EE847D38);
  }
  return result;
}

void WDSHMACSigner.__allocating_init(signatureRoundingInterval:)(uint64_t a1)
{
  swift_allocObject();
  WDSHMACSigner.init(signatureRoundingInterval:)(a1);
  OUTLINED_FUNCTION_29_1();
}

uint64_t sub_1A628CA50(uint64_t a1, unint64_t a2)
{
  return ((uint64_t (*)(void))((char *)sub_1A628CA74 + 4 * byte_1A6340270[a2 >> 62]))();
}

BOOL sub_1A628CA74(uint64_t a1, uint64_t a2)
{
  return BYTE6(a2) == 0;
}

uint64_t sub_1A628CA9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8[3];
  uint64_t v9;
  uint64_t v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21AE48);
  v9 = v2;
  sub_1A61AEDF4(&qword_1ED21B278, &qword_1ED21AE48);
  v10 = v3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v8);
  v5 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(boxed_opaque_existential_1, a1, v2);
  __swift_project_boxed_opaque_existential_1(v8, v9);
  sub_1A63329D8();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v7;
}

uint64_t sub_1A628CB80(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8[3];
  uint64_t v9;
  uint64_t v10;

  v2 = sub_1A6335228();
  v9 = v2;
  sub_1A61A30F0(&qword_1ED21C988, (void (*)(uint64_t))MEMORY[0x1E0CA9A08]);
  v10 = v3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v8);
  v5 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(boxed_opaque_existential_1, a1, v2);
  __swift_project_boxed_opaque_existential_1(v8, v9);
  sub_1A63329D8();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v7;
}

uint64_t sub_1A628CC60(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847D90);
  sub_1A61AEDF4(&qword_1EE847D98, &qword_1EE847D90);
  v11 = v2;
  v9[0] = a1;
  v3 = __swift_project_boxed_opaque_existential_1(v9, v10);
  v4 = *v3 + 32;
  v5 = v4 + *(_QWORD *)(*v3 + 16);
  sub_1A6334CDC();
  sub_1A628DAA4(v4, v5, &v8);
  swift_bridgeObjectRelease();
  v6 = v8;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return v6;
}

uint64_t WDSHMACSigner.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t WDSHMACSigner.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t WDSHMACSigner.createSignature(with:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _BYTE *v36;
  uint64_t result;
  int64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  _BYTE *v53;
  uint64_t (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t);
  unint64_t v58;
  unint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  int EnumTagSinglePayload;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  _BYTE *v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t);
  _BYTE *v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  _BYTE *v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  _BYTE *v88;
  uint64_t v89;
  unint64_t v90;
  _BYTE *v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  _BYTE *v100;
  uint64_t v101;
  _BYTE *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t (*v109)(uint64_t, uint64_t);
  uint64_t *v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  unint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;

  v4 = v2;
  v128 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21AE48);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_1_0();
  v124 = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21AE58);
  v126 = *(_QWORD *)(v8 - 8);
  v127 = v8;
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_1_0();
  v125 = v10;
  v11 = sub_1A63351EC();
  v130 = *(_QWORD *)(v11 - 8);
  v131 = v11;
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v12);
  v123 = (char *)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v129 = (char *)&v112 - v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21DA20);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_2();
  v19 = v18 - v17;
  v136 = sub_1A6332960();
  v134 = *(_QWORD *)(v136 - 8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_1_0();
  v135 = v21;
  v22 = sub_1A633533C();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_2();
  v26 = v25 - v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_2();
  v30 = v29 - v28;
  v31 = sub_1A6332C24();
  v145 = *(_QWORD *)(v31 - 8);
  OUTLINED_FUNCTION_15_0();
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_1_0();
  v138 = v33;
  v34 = sub_1A6332AD4();
  if (v35 >> 60 == 15)
  {
    sub_1A628D8D4();
    OUTLINED_FUNCTION_21();
    *v36 = 0;
    return OUTLINED_FUNCTION_76();
  }
  v132 = v34;
  v133 = v35;
  v121 = v3;
  v137 = v31;
  v122 = type metadata accessor for WDSAuthenticationContext();
  v38 = *(_QWORD *)(v4 + 16);
  sub_1A6332B1C();
  if ((unsigned __int128)(v38 * (__int128)60) >> 64 == (60 * v38) >> 63)
  {
    sub_1A6332B10();
    v39 = v137;
    __swift_storeEnumTagSinglePayload(v30, 0, 1, v137);
    if (__swift_getEnumTagSinglePayload(v30, 1, v39) == 1)
    {
      sub_1A61D61C0(v30, &qword_1ED21D330);
      sub_1A628D8D4();
      OUTLINED_FUNCTION_21();
      *v40 = 1;
      OUTLINED_FUNCTION_76();
      return OUTLINED_FUNCTION_11_19();
    }
    v41 = v39;
    v42 = v138;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v145 + 32))(v138, v30, v41);
    v43 = *(void **)(v4 + 24);
    v44 = (void *)sub_1A6332B7C();
    v45 = objc_msgSend(v43, sel_stringFromDate_, v44);

    v46 = sub_1A6335300();
    v48 = v47;

    OUTLINED_FUNCTION_12_18();
    v117 = v46;
    v49 = sub_1A633530C();
    v51 = v50;
    v52 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v52(v26, v22);
    if (v51 >> 60 == 15)
    {
      swift_bridgeObjectRelease();
      sub_1A628D8D4();
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_1_34(v53, 1);
      sub_1A61E0128(v132, v133);
      OUTLINED_FUNCTION_18_16();
      v55 = v42;
      return v54(v55, v137);
    }
    v119 = v48;
    v118 = v49;
    v120 = v51;
    OUTLINED_FUNCTION_12_18();
    v56 = sub_1A633530C();
    v57 = v52;
    v59 = v58;
    v57(v26, v22);
    if (v59 >> 60 == 15)
    {
      OUTLINED_FUNCTION_3_33();
      sub_1A628D8D4();
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_1_34(v60, 2);
      OUTLINED_FUNCTION_2_36();
LABEL_26:
      OUTLINED_FUNCTION_18_16();
      goto LABEL_27;
    }
    v116 = v56;
    sub_1A63328F4();
    v61 = v136;
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v19, 1, v136);
    v63 = v138;
    if (EnumTagSinglePayload == 1)
    {
      OUTLINED_FUNCTION_3_33();
      sub_1A61D61C0(v19, &qword_1ED21DA20);
      sub_1A628D8D4();
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_1_34(v64, 3);
      OUTLINED_FUNCTION_17_17(v116);
      OUTLINED_FUNCTION_2_36();
      OUTLINED_FUNCTION_18_16();
      v55 = v63;
      return v54(v55, v137);
    }
    v115 = v59;
    v66 = v134;
    v65 = v135;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v134 + 32))(v135, v19, v61);
    sub_1A633293C();
    v67 = sub_1A6332948();
    if (!v68)
    {
      OUTLINED_FUNCTION_3_33();
      sub_1A628D8D4();
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_1_34(v75, 3);
      sub_1A61E0128(v116, v115);
      OUTLINED_FUNCTION_2_36();
      v74 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
      v73 = v65;
      goto LABEL_16;
    }
    v143 = v67;
    v144 = v68;
    v141 = 12079;
    v142 = 0xE200000000000000;
    v139 = 0;
    v140 = 0xE000000000000000;
    sub_1A61BB940();
    sub_1A63357A4();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_12_18();
    v69 = sub_1A633530C();
    v71 = v70;
    OUTLINED_FUNCTION_683();
    OUTLINED_FUNCTION_15_20();
    if (v71 >> 60 == 15)
    {
      OUTLINED_FUNCTION_3_33();
      sub_1A628D8D4();
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_1_34(v72, 3);
      sub_1A61E0128(v116, v115);
      OUTLINED_FUNCTION_2_36();
      v73 = v135;
      v74 = *(void (**)(uint64_t, uint64_t))(v134 + 8);
LABEL_16:
      v76 = v61;
LABEL_25:
      v74(v73, v76);
      goto LABEL_26;
    }
    v77 = (uint64_t *)(a1 + *(int *)(v122 + 32));
    a1 = *v77;
    v19 = v77[1];
    sub_1A6334CDC();
    OUTLINED_FUNCTION_12_18();
    v78 = sub_1A633530C();
    v80 = v79;
    OUTLINED_FUNCTION_15_20();
    v38 = v115;
    if (v80 >> 60 == 15)
    {
      OUTLINED_FUNCTION_683();
      OUTLINED_FUNCTION_3_33();
      sub_1A628D8D4();
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_1_34(v81, 4);
      sub_1A61E0128(v69, v71);
      sub_1A61E0128(v116, v38);
      v82 = v118;
      v83 = v120;
LABEL_23:
      sub_1A61E0128(v82, v83);
      sub_1A61E0128(v132, v133);
      v73 = v135;
      v74 = *(void (**)(uint64_t, uint64_t))(v134 + 8);
LABEL_24:
      v76 = v136;
      goto LABEL_25;
    }
    v112 = v80;
    v113 = v78;
    v114 = v69;
    v122 = v71;
    v85 = v132;
    v84 = v133;
    v86 = sub_1A628CA50(v132, v133);
    v87 = v145;
    if ((v86 & 1) != 0)
    {
      OUTLINED_FUNCTION_683();
      swift_bridgeObjectRelease();
      sub_1A628D8D4();
      OUTLINED_FUNCTION_21();
      *v88 = 0;
      OUTLINED_FUNCTION_76();
      OUTLINED_FUNCTION_5_26();
      OUTLINED_FUNCTION_19_15(v118, (uint64_t)&v146);
      sub_1A61E0128(v85, v84);
      OUTLINED_FUNCTION_13_18();
      v54 = *(uint64_t (**)(uint64_t, uint64_t))(v87 + 8);
LABEL_27:
      v55 = v138;
      return v54(v55, v137);
    }
    v89 = v118;
    v90 = v120;
    if ((sub_1A628CA50(v118, v120) & 1) != 0)
    {
      OUTLINED_FUNCTION_683();
      swift_bridgeObjectRelease();
      sub_1A628D8D4();
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_1_34(v91, 1);
      OUTLINED_FUNCTION_5_26();
      v82 = v89;
      v83 = v90;
      goto LABEL_23;
    }
    v92 = v116;
    v93 = sub_1A628CA50(v116, v38);
    v94 = v134;
    v95 = v135;
    if ((v93 & 1) != 0)
    {
      OUTLINED_FUNCTION_683();
      OUTLINED_FUNCTION_3_33();
      sub_1A628D8D4();
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_1_34(v96, 2);
      sub_1A61E0128(v113, v112);
      OUTLINED_FUNCTION_19_15(v114, (uint64_t)&v147);
      v97 = v92;
LABEL_33:
      sub_1A61E0128(v97, v38);
      v101 = v89;
LABEL_34:
      sub_1A61E0128(v101, v120);
      OUTLINED_FUNCTION_11_19();
      v74 = *(void (**)(uint64_t, uint64_t))(v94 + 8);
      v73 = v95;
      goto LABEL_24;
    }
    v98 = v114;
    v99 = v122;
    if ((sub_1A628CA50(v114, v122) & 1) != 0)
    {
      OUTLINED_FUNCTION_683();
      OUTLINED_FUNCTION_3_33();
      sub_1A628D8D4();
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_1_34(v100, 3);
      OUTLINED_FUNCTION_19_15(v113, (uint64_t)&v144);
      sub_1A61E0128(v98, v99);
      v97 = v116;
      goto LABEL_33;
    }
    v26 = v113;
    v23 = v112;
    if ((sub_1A628CA50(v113, v112) & 1) != 0)
    {
      OUTLINED_FUNCTION_683();
      OUTLINED_FUNCTION_3_33();
      sub_1A628D8D4();
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_1_34(v102, 4);
      OUTLINED_FUNCTION_17_17(v26);
      sub_1A61E0128(v114, v122);
      sub_1A61E0128(v116, v38);
      v101 = v118;
      goto LABEL_34;
    }
  }
  else
  {
    __break(1u);
  }
  v143 = v132;
  v144 = v133;
  sub_1A61A6288(v132, v133);
  v103 = v129;
  sub_1A63351E0();
  (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v123, v103, v131);
  sub_1A633521C();
  sub_1A61A30F0(&qword_1ED21B280, (void (*)(uint64_t))MEMORY[0x1E0CA9940]);
  v104 = v125;
  sub_1A63351F8();
  v143 = v116;
  v144 = v38;
  sub_1A628D910();
  v105 = v127;
  sub_1A6335204();
  v143 = v114;
  v144 = v122;
  OUTLINED_FUNCTION_6_25();
  v143 = v118;
  v144 = v120;
  OUTLINED_FUNCTION_6_25();
  v143 = v26;
  v144 = v23;
  OUTLINED_FUNCTION_6_25();
  v106 = v124;
  sub_1A6335210();
  v124 = sub_1A628CA9C(v106);
  v108 = v107;
  sub_1A61E0128(v26, v23);
  sub_1A61E0128(v114, v122);
  sub_1A61E0128(v116, v115);
  OUTLINED_FUNCTION_17_17(v118);
  OUTLINED_FUNCTION_11_19();
  (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v104, v105);
  (*(void (**)(char *, uint64_t))(v130 + 8))(v129, v131);
  OUTLINED_FUNCTION_13_18();
  OUTLINED_FUNCTION_18_16();
  result = v109(v138, v137);
  v110 = v128;
  v111 = v119;
  *v128 = v117;
  v110[1] = v111;
  v110[2] = v124;
  v110[3] = v108;
  v110[4] = a1;
  v110[5] = v19;
  return result;
}

unint64_t sub_1A628D8D4()
{
  unint64_t result;

  result = qword_1EE847D80;
  if (!qword_1EE847D80)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A6340348, &type metadata for WDSHMACSigner.Errors);
    atomic_store(result, (unint64_t *)&qword_1EE847D80);
  }
  return result;
}

unint64_t sub_1A628D910()
{
  unint64_t result;

  result = qword_1ED21AE50;
  if (!qword_1ED21AE50)
  {
    result = MEMORY[0x1A85BEED0](MEMORY[0x1E0CB0310], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1ED21AE50);
  }
  return result;
}

uint64_t sub_1A628D94C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return WDSHMACSigner.createSignature(with:)(a1, a2);
}

uint64_t dispatch thunk of WDSHMACSignerType.createSignature(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t method lookup function for WDSHMACSigner()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WDSHMACSigner.__allocating_init(signatureRoundingInterval:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t storeEnumTagSinglePayload for WDSHMACSigner.Errors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A628D9E4 + 4 * byte_1A6340279[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A628DA18 + 4 * byte_1A6340274[v4]))();
}

uint64_t sub_1A628DA18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A628DA20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A628DA28);
  return result;
}

uint64_t sub_1A628DA34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A628DA3CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A628DA40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A628DA48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WDSHMACSigner.Errors()
{
  return &type metadata for WDSHMACSigner.Errors;
}

unint64_t sub_1A628DA68()
{
  unint64_t result;

  result = qword_1EE847D88;
  if (!qword_1EE847D88)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A6340320, &type metadata for WDSHMACSigner.Errors);
    atomic_store(result, (unint64_t *)&qword_1EE847D88);
  }
  return result;
}

uint64_t sub_1A628DAA4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = sub_1A6332AA4();
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = MEMORY[0x1A85BB7C8]();
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = MEMORY[0x1A85BB7E0]();
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

ValueMetadata *type metadata accessor for ChannelMapRequest()
{
  return &type metadata for ChannelMapRequest;
}

uint64_t Urgency.init(from:)@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  void *v7;
  Swift::String v8;
  char v9;
  _QWORD v11[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_0_28();
  sub_1A6335BD0();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    OUTLINED_FUNCTION_0_28();
    v5 = sub_1A6335AD4();
    v7 = v6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    v8._countAndFlagsBits = v5;
    v8._object = v7;
    Urgency.init(rawValue:)(v8);
    v9 = v11[0];
    if (LOBYTE(v11[0]) == 5)
      v9 = 4;
    *a2 = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

WeatherDaemon::Urgency_optional __swiftcall Urgency.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  WeatherDaemon::Urgency_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A6335918();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t Urgency.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A628DC7C + 4 * byte_1A63403B4[*v0]))(0x74616964656D6D69, 0xE900000000000065);
}

uint64_t sub_1A628DC7C()
{
  return 0x6465746365707865;
}

uint64_t sub_1A628DC94()
{
  return 0x657275747566;
}

uint64_t sub_1A628DCA8()
{
  return 1953718640;
}

uint64_t sub_1A628DCB8()
{
  return 0x6E776F6E6B6E75;
}

void sub_1A628DCD0(char *a1)
{
  sub_1A62438A8(*a1);
}

unint64_t sub_1A628DCE0()
{
  unint64_t result;

  result = qword_1EE847DA0;
  if (!qword_1EE847DA0)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for Urgency, &type metadata for Urgency);
    atomic_store(result, (unint64_t *)&qword_1EE847DA0);
  }
  return result;
}

void sub_1A628DD1C()
{
  unsigned __int8 *v0;

  sub_1A62DE324(*v0);
}

void sub_1A628DD24(uint64_t a1)
{
  char *v1;

  sub_1A61F4658(a1, *v1);
}

void sub_1A628DD2C(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1A61F5D08(a1, *v1);
}

WeatherDaemon::Urgency_optional sub_1A628DD34(Swift::String *a1)
{
  return Urgency.init(rawValue:)(*a1);
}

uint64_t sub_1A628DD40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Urgency.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A628DD64@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return Urgency.init(from:)(a1, a2);
}

uint64_t sub_1A628DD78()
{
  sub_1A628DEB8();
  return sub_1A63354BC();
}

void sub_1A628DDC4(_BYTE *a1@<X8>)
{
  static Urgency.read(from:)(a1);
}

void sub_1A628DDD8()
{
  Urgency.write(to:)();
}

uint64_t storeEnumTagSinglePayload for Urgency(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A628DE38 + 4 * byte_1A63403BE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A628DE6C + 4 * byte_1A63403B9[v4]))();
}

uint64_t sub_1A628DE6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A628DE74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A628DE7CLL);
  return result;
}

uint64_t sub_1A628DE88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A628DE90);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A628DE94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A628DE9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Urgency()
{
  return &type metadata for Urgency;
}

unint64_t sub_1A628DEB8()
{
  unint64_t result;

  result = qword_1ED21A028;
  if (!qword_1ED21A028)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for Urgency, &type metadata for Urgency);
    atomic_store(result, (unint64_t *)&qword_1ED21A028);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for WeatherModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1A628DF54 + 4 * word_1A6340528[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t assignWithCopy for WeatherModel(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1A61AF11C(result);
    v2 = (char *)&loc_1A628FBA0 + 4 * word_1A6340576[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

_QWORD *initializeWithTake for WeatherModel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  int *HourForecast;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  int *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  int *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  int *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  int *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  int *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, char *, uint64_t);
  int *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t);
  int *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *, char *, uint64_t);
  int *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  void (*v106)(char *, char *, uint64_t);
  int *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  void (*v116)(char *, char *, uint64_t);
  int *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  char *__dst;
  char *__dsta;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = (int *)type metadata accessor for AirQuality();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v6))
      {
        v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D030);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        v50 = sub_1A6332C24();
        v51 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32);
        v51((char *)a1, (char *)a2, v50);
        v52 = (int *)type metadata accessor for Metadata();
        v51((char *)a1 + v52[5], (char *)a2 + v52[5], v50);
        v53 = v52[6];
        v54 = (char *)a1 + v53;
        v55 = (char *)a2 + v53;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v53, 1, v50))
        {
          v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
          memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
        }
        else
        {
          v51(v54, v55, v50);
          __swift_storeEnumTagSinglePayload((uint64_t)v54, 0, 1, v50);
        }
        *(_QWORD *)((char *)a1 + v52[7]) = *(_QWORD *)((char *)a2 + v52[7]);
        *(_QWORD *)((char *)a1 + v52[8]) = *(_QWORD *)((char *)a2 + v52[8]);
        *(_QWORD *)((char *)a1 + v52[9]) = *(_QWORD *)((char *)a2 + v52[9]);
        *(_OWORD *)((char *)a1 + v52[10]) = *(_OWORD *)((char *)a2 + v52[10]);
        *(_OWORD *)((char *)a1 + v52[11]) = *(_OWORD *)((char *)a2 + v52[11]);
        *(_OWORD *)((char *)a1 + v52[12]) = *(_OWORD *)((char *)a2 + v52[12]);
        *((_BYTE *)a1 + v52[13]) = *((_BYTE *)a2 + v52[13]);
        *((_BYTE *)a1 + v52[14]) = *((_BYTE *)a2 + v52[14]);
        *(_OWORD *)((char *)a1 + v52[15]) = *(_OWORD *)((char *)a2 + v52[15]);
        *(_OWORD *)((char *)a1 + v6[5]) = *(_OWORD *)((char *)a2 + v6[5]);
        *((_BYTE *)a1 + v6[6]) = *((_BYTE *)a2 + v6[6]);
        *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
        v150 = v6[8];
        v151 = (char *)a1 + v150;
        v152 = (char *)a2 + v150;
        v151[8] = v152[8];
        *(_QWORD *)v151 = *(_QWORD *)v152;
        v153 = v6[9];
        v154 = (char *)a1 + v153;
        v155 = (char *)a2 + v153;
        *(_QWORD *)v154 = *(_QWORD *)v155;
        v154[8] = v155[8];
        *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
        *(_OWORD *)((char *)a1 + v6[11]) = *(_OWORD *)((char *)a2 + v6[11]);
        *(_OWORD *)((char *)a1 + v6[12]) = *(_OWORD *)((char *)a2 + v6[12]);
        *(_QWORD *)((char *)a1 + v6[13]) = *(_QWORD *)((char *)a2 + v6[13]);
        *(_OWORD *)((char *)a1 + v6[14]) = *(_OWORD *)((char *)a2 + v6[14]);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v6);
      }
      goto LABEL_92;
    case 1u:
      v8 = sub_1A6332C24();
      v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
      v9((char *)a1, (char *)a2, v8);
      v10 = (int *)type metadata accessor for Metadata();
      v9((char *)a1 + v10[5], (char *)a2 + v10[5], v8);
      v11 = v10[6];
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v11, 1, v8))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v9(v12, v13, v8);
        __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v8);
      }
      *(_QWORD *)((char *)a1 + v10[7]) = *(_QWORD *)((char *)a2 + v10[7]);
      *(_QWORD *)((char *)a1 + v10[8]) = *(_QWORD *)((char *)a2 + v10[8]);
      *(_QWORD *)((char *)a1 + v10[9]) = *(_QWORD *)((char *)a2 + v10[9]);
      *(_OWORD *)((char *)a1 + v10[10]) = *(_OWORD *)((char *)a2 + v10[10]);
      *(_OWORD *)((char *)a1 + v10[11]) = *(_OWORD *)((char *)a2 + v10[11]);
      *(_OWORD *)((char *)a1 + v10[12]) = *(_OWORD *)((char *)a2 + v10[12]);
      *((_BYTE *)a1 + v10[13]) = *((_BYTE *)a2 + v10[13]);
      *((_BYTE *)a1 + v10[14]) = *((_BYTE *)a2 + v10[14]);
      *(_OWORD *)((char *)a1 + v10[15]) = *(_OWORD *)((char *)a2 + v10[15]);
      v57 = (int *)type metadata accessor for CurrentWeather();
      v58 = v57[5];
      v59 = (char *)a1 + v58;
      v60 = (char *)a2 + v58;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v58, 1, v8))
      {
        v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        v9(v59, v60, v8);
        __swift_storeEnumTagSinglePayload((uint64_t)v59, 0, 1, v8);
      }
      *(_QWORD *)((char *)a1 + v57[6]) = *(_QWORD *)((char *)a2 + v57[6]);
      *(_QWORD *)((char *)a1 + v57[7]) = *(_QWORD *)((char *)a2 + v57[7]);
      *(_QWORD *)((char *)a1 + v57[8]) = *(_QWORD *)((char *)a2 + v57[8]);
      *(_QWORD *)((char *)a1 + v57[9]) = *(_QWORD *)((char *)a2 + v57[9]);
      *((_BYTE *)a1 + v57[10]) = *((_BYTE *)a2 + v57[10]);
      *((_BYTE *)a1 + v57[11]) = *((_BYTE *)a2 + v57[11]);
      *(_QWORD *)((char *)a1 + v57[12]) = *(_QWORD *)((char *)a2 + v57[12]);
      *(_QWORD *)((char *)a1 + v57[13]) = *(_QWORD *)((char *)a2 + v57[13]);
      *(_QWORD *)((char *)a1 + v57[14]) = *(_QWORD *)((char *)a2 + v57[14]);
      *(_QWORD *)((char *)a1 + v57[15]) = *(_QWORD *)((char *)a2 + v57[15]);
      *(_QWORD *)((char *)a1 + v57[16]) = *(_QWORD *)((char *)a2 + v57[16]);
      *(_QWORD *)((char *)a1 + v57[17]) = *(_QWORD *)((char *)a2 + v57[17]);
      *(_QWORD *)((char *)a1 + v57[18]) = *(_QWORD *)((char *)a2 + v57[18]);
      *(_QWORD *)((char *)a1 + v57[19]) = *(_QWORD *)((char *)a2 + v57[19]);
      *(_QWORD *)((char *)a1 + v57[20]) = *(_QWORD *)((char *)a2 + v57[20]);
      *(_QWORD *)((char *)a1 + v57[21]) = *(_QWORD *)((char *)a2 + v57[21]);
      *(_QWORD *)((char *)a1 + v57[22]) = *(_QWORD *)((char *)a2 + v57[22]);
      *(_QWORD *)((char *)a1 + v57[23]) = *(_QWORD *)((char *)a2 + v57[23]);
      *(_QWORD *)((char *)a1 + v57[24]) = *(_QWORD *)((char *)a2 + v57[24]);
      *(_QWORD *)((char *)a1 + v57[25]) = *(_QWORD *)((char *)a2 + v57[25]);
      *(_QWORD *)((char *)a1 + v57[26]) = *(_QWORD *)((char *)a2 + v57[26]);
      v121 = v57[27];
      v122 = (char *)a1 + v121;
      v123 = (char *)a2 + v121;
      *(_QWORD *)v122 = *(_QWORD *)v123;
      v122[8] = v123[8];
      *((_BYTE *)a1 + v57[28]) = *((_BYTE *)a2 + v57[28]);
      *(_QWORD *)((char *)a1 + v57[29]) = *(_QWORD *)((char *)a2 + v57[29]);
      *(_QWORD *)((char *)a1 + v57[30]) = *(_QWORD *)((char *)a2 + v57[30]);
      *(_QWORD *)((char *)a1 + v57[31]) = *(_QWORD *)((char *)a2 + v57[31]);
      *(_QWORD *)((char *)a1 + v57[32]) = *(_QWORD *)((char *)a2 + v57[32]);
      *(_QWORD *)((char *)a1 + v57[33]) = *(_QWORD *)((char *)a2 + v57[33]);
      *(_QWORD *)((char *)a1 + v57[34]) = *(_QWORD *)((char *)a2 + v57[34]);
      v124 = v57[35];
      v125 = (char *)a1 + v124;
      v126 = (char *)a2 + v124;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v124, 1, v8))
      {
        v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
        memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
      }
      else
      {
        v9(v125, v126, v8);
        __swift_storeEnumTagSinglePayload((uint64_t)v125, 0, 1, v8);
      }
      v128 = v57[36];
      v129 = (char *)a1 + v128;
      v130 = (char *)a2 + v128;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v128, 1, v8))
      {
        v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
        memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
      }
      else
      {
        v9(v129, v130, v8);
        __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, v8);
      }
      *(_QWORD *)((char *)a1 + v57[37]) = *(_QWORD *)((char *)a2 + v57[37]);
      v132 = v57[38];
      v133 = (char *)a1 + v132;
      v134 = (char *)a2 + v132;
      *(_QWORD *)v133 = *(_QWORD *)v134;
      v133[8] = v134[8];
      v135 = v57[39];
      v136 = (char *)a1 + v135;
      v137 = (char *)a2 + v135;
      *(_QWORD *)v136 = *(_QWORD *)v137;
      v136[8] = v137[8];
      v138 = v57[40];
      v139 = (char *)a1 + v138;
      v140 = (char *)a2 + v138;
      *(_QWORD *)v139 = *(_QWORD *)v140;
      v139[8] = v140[8];
      v141 = v57[41];
      v142 = (char *)a1 + v141;
      v143 = (char *)a2 + v141;
      *(_QWORD *)v142 = *(_QWORD *)v143;
      v142[8] = v143[8];
      *(_QWORD *)((char *)a1 + v57[42]) = *(_QWORD *)((char *)a2 + v57[42]);
      *(_QWORD *)((char *)a1 + v57[43]) = *(_QWORD *)((char *)a2 + v57[43]);
      v144 = v57[44];
      v145 = (char *)a1 + v144;
      v146 = (char *)a2 + v144;
      *(_QWORD *)v145 = *(_QWORD *)v146;
      v145[8] = v146[8];
      v147 = v57[45];
      v148 = (char *)a1 + v147;
      v149 = (char *)a2 + v147;
      *(_QWORD *)v148 = *(_QWORD *)v149;
      v148[8] = v149[8];
      *(_QWORD *)((char *)a1 + v57[46]) = *(_QWORD *)((char *)a2 + v57[46]);
      goto LABEL_92;
    case 2u:
      v15 = sub_1A6332C24();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
      v16((char *)a1, (char *)a2, v15);
      v17 = (int *)type metadata accessor for Metadata();
      v16((char *)a1 + v17[5], (char *)a2 + v17[5], v15);
      v18 = v17[6];
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v18, 1, v15))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        v16(v19, v20, v15);
        __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v15);
      }
      *(_QWORD *)((char *)a1 + v17[7]) = *(_QWORD *)((char *)a2 + v17[7]);
      *(_QWORD *)((char *)a1 + v17[8]) = *(_QWORD *)((char *)a2 + v17[8]);
      *(_QWORD *)((char *)a1 + v17[9]) = *(_QWORD *)((char *)a2 + v17[9]);
      *(_OWORD *)((char *)a1 + v17[10]) = *(_OWORD *)((char *)a2 + v17[10]);
      *(_OWORD *)((char *)a1 + v17[11]) = *(_OWORD *)((char *)a2 + v17[11]);
      *(_OWORD *)((char *)a1 + v17[12]) = *(_OWORD *)((char *)a2 + v17[12]);
      *((_BYTE *)a1 + v17[13]) = *((_BYTE *)a2 + v17[13]);
      *((_BYTE *)a1 + v17[14]) = *((_BYTE *)a2 + v17[14]);
      *(_OWORD *)((char *)a1 + v17[15]) = *(_OWORD *)((char *)a2 + v17[15]);
      v62 = type metadata accessor for DailyForecast();
      *(_QWORD *)((char *)a1 + *(int *)(v62 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v62 + 20));
      goto LABEL_92;
    case 3u:
      v22 = sub_1A6332C24();
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32);
      v23((char *)a1, (char *)a2, v22);
      v24 = (int *)type metadata accessor for Metadata();
      v23((char *)a1 + v24[5], (char *)a2 + v24[5], v22);
      v25 = v24[6];
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v25, 1, v22))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        v23(v26, v27, v22);
        __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v22);
      }
      *(_QWORD *)((char *)a1 + v24[7]) = *(_QWORD *)((char *)a2 + v24[7]);
      *(_QWORD *)((char *)a1 + v24[8]) = *(_QWORD *)((char *)a2 + v24[8]);
      *(_QWORD *)((char *)a1 + v24[9]) = *(_QWORD *)((char *)a2 + v24[9]);
      *(_OWORD *)((char *)a1 + v24[10]) = *(_OWORD *)((char *)a2 + v24[10]);
      *(_OWORD *)((char *)a1 + v24[11]) = *(_OWORD *)((char *)a2 + v24[11]);
      *(_OWORD *)((char *)a1 + v24[12]) = *(_OWORD *)((char *)a2 + v24[12]);
      *((_BYTE *)a1 + v24[13]) = *((_BYTE *)a2 + v24[13]);
      *((_BYTE *)a1 + v24[14]) = *((_BYTE *)a2 + v24[14]);
      *(_OWORD *)((char *)a1 + v24[15]) = *(_OWORD *)((char *)a2 + v24[15]);
      v63 = type metadata accessor for HourlyForecast();
      *(_QWORD *)((char *)a1 + *(int *)(v63 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v63 + 20));
      goto LABEL_92;
    case 4u:
      HourForecast = (int *)type metadata accessor for NextHourForecast();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)HourForecast))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D0A0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        v64 = sub_1A6332C24();
        v65 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 32);
        v65((char *)a1, (char *)a2, v64);
        v66 = (int *)type metadata accessor for Metadata();
        v65((char *)a1 + v66[5], (char *)a2 + v66[5], v64);
        v67 = v66[6];
        v68 = (char *)a1 + v67;
        v69 = (char *)a2 + v67;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v67, 1, v64))
        {
          v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
          memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
        }
        else
        {
          v65(v68, v69, v64);
          __swift_storeEnumTagSinglePayload((uint64_t)v68, 0, 1, v64);
        }
        *(_QWORD *)((char *)a1 + v66[7]) = *(_QWORD *)((char *)a2 + v66[7]);
        *(_QWORD *)((char *)a1 + v66[8]) = *(_QWORD *)((char *)a2 + v66[8]);
        *(_QWORD *)((char *)a1 + v66[9]) = *(_QWORD *)((char *)a2 + v66[9]);
        *(_OWORD *)((char *)a1 + v66[10]) = *(_OWORD *)((char *)a2 + v66[10]);
        *(_OWORD *)((char *)a1 + v66[11]) = *(_OWORD *)((char *)a2 + v66[11]);
        *(_OWORD *)((char *)a1 + v66[12]) = *(_OWORD *)((char *)a2 + v66[12]);
        *((_BYTE *)a1 + v66[13]) = *((_BYTE *)a2 + v66[13]);
        *((_BYTE *)a1 + v66[14]) = *((_BYTE *)a2 + v66[14]);
        *(_OWORD *)((char *)a1 + v66[15]) = *(_OWORD *)((char *)a2 + v66[15]);
        *(_QWORD *)((char *)a1 + HourForecast[5]) = *(_QWORD *)((char *)a2 + HourForecast[5]);
        *(_QWORD *)((char *)a1 + HourForecast[6]) = *(_QWORD *)((char *)a2 + HourForecast[6]);
        v156 = HourForecast[7];
        v157 = (char *)a1 + v156;
        v158 = (char *)a2 + v156;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v156, 1, v64))
        {
          v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
          memcpy(v157, v158, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
        }
        else
        {
          v65(v157, v158, v64);
          __swift_storeEnumTagSinglePayload((uint64_t)v157, 0, 1, v64);
        }
        *(_QWORD *)((char *)a1 + HourForecast[8]) = *(_QWORD *)((char *)a2 + HourForecast[8]);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)HourForecast);
      }
      goto LABEL_92;
    case 6u:
      v31 = sub_1A6332C24();
      v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32);
      v32((char *)a1, (char *)a2, v31);
      v33 = (int *)type metadata accessor for Metadata();
      v32((char *)a1 + v33[5], (char *)a2 + v33[5], v31);
      v34 = v33[6];
      v35 = (char *)a1 + v34;
      v36 = (char *)a2 + v34;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v34, 1, v31))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        v32(v35, v36, v31);
        __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v31);
      }
      *(_QWORD *)((char *)a1 + v33[7]) = *(_QWORD *)((char *)a2 + v33[7]);
      *(_QWORD *)((char *)a1 + v33[8]) = *(_QWORD *)((char *)a2 + v33[8]);
      *(_QWORD *)((char *)a1 + v33[9]) = *(_QWORD *)((char *)a2 + v33[9]);
      *(_OWORD *)((char *)a1 + v33[10]) = *(_OWORD *)((char *)a2 + v33[10]);
      *(_OWORD *)((char *)a1 + v33[11]) = *(_OWORD *)((char *)a2 + v33[11]);
      *(_OWORD *)((char *)a1 + v33[12]) = *(_OWORD *)((char *)a2 + v33[12]);
      *((_BYTE *)a1 + v33[13]) = *((_BYTE *)a2 + v33[13]);
      *((_BYTE *)a1 + v33[14]) = *((_BYTE *)a2 + v33[14]);
      *(_OWORD *)((char *)a1 + v33[15]) = *(_OWORD *)((char *)a2 + v33[15]);
      v71 = (int *)type metadata accessor for LocationInfo();
      *(_OWORD *)((char *)a1 + v71[5]) = *(_OWORD *)((char *)a2 + v71[5]);
      *(_OWORD *)((char *)a1 + v71[6]) = *(_OWORD *)((char *)a2 + v71[6]);
      *(_OWORD *)((char *)a1 + v71[7]) = *(_OWORD *)((char *)a2 + v71[7]);
      *(_OWORD *)((char *)a1 + v71[8]) = *(_OWORD *)((char *)a2 + v71[8]);
      *(_OWORD *)((char *)a1 + v71[9]) = *(_OWORD *)((char *)a2 + v71[9]);
      goto LABEL_92;
    case 7u:
      v38 = type metadata accessor for MarineForecast();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v38))
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C238);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        v72 = *(int *)(v38 + 20);
        v73 = (char *)a1 + v72;
        v74 = (char *)a2 + v72;
        v75 = sub_1A6332C24();
        v76 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32);
        v76(v73, v74, v75);
        v77 = (int *)type metadata accessor for Metadata();
        v76(&v73[v77[5]], &v74[v77[5]], v75);
        v78 = v77[6];
        __dst = &v73[v78];
        v79 = &v74[v78];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v74[v78], 1, v75))
        {
          v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
          memcpy(__dst, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
        }
        else
        {
          v76(__dst, v79, v75);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v75);
        }
        *(_QWORD *)&v73[v77[7]] = *(_QWORD *)&v74[v77[7]];
        *(_QWORD *)&v73[v77[8]] = *(_QWORD *)&v74[v77[8]];
        *(_QWORD *)&v73[v77[9]] = *(_QWORD *)&v74[v77[9]];
        *(_OWORD *)&v73[v77[10]] = *(_OWORD *)&v74[v77[10]];
        *(_OWORD *)&v73[v77[11]] = *(_OWORD *)&v74[v77[11]];
        *(_OWORD *)&v73[v77[12]] = *(_OWORD *)&v74[v77[12]];
        v73[v77[13]] = v74[v77[13]];
        v73[v77[14]] = v74[v77[14]];
        *(_OWORD *)&v73[v77[15]] = *(_OWORD *)&v74[v77[15]];
        *(_OWORD *)((char *)a1 + *(int *)(v38 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v38 + 24));
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v38);
      }
      goto LABEL_92;
    case 8u:
      v40 = type metadata accessor for News();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v40))
      {
        v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C910);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        v81 = sub_1A6332C24();
        v82 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32);
        v82((char *)a1, (char *)a2, v81);
        v83 = (int *)type metadata accessor for Metadata();
        v82((char *)a1 + v83[5], (char *)a2 + v83[5], v81);
        v84 = v83[6];
        v85 = (char *)a1 + v84;
        v86 = (char *)a2 + v84;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v84, 1, v81))
        {
          v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
          memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
        }
        else
        {
          v82(v85, v86, v81);
          __swift_storeEnumTagSinglePayload((uint64_t)v85, 0, 1, v81);
        }
        *(_QWORD *)((char *)a1 + v83[7]) = *(_QWORD *)((char *)a2 + v83[7]);
        *(_QWORD *)((char *)a1 + v83[8]) = *(_QWORD *)((char *)a2 + v83[8]);
        *(_QWORD *)((char *)a1 + v83[9]) = *(_QWORD *)((char *)a2 + v83[9]);
        *(_OWORD *)((char *)a1 + v83[10]) = *(_OWORD *)((char *)a2 + v83[10]);
        *(_OWORD *)((char *)a1 + v83[11]) = *(_OWORD *)((char *)a2 + v83[11]);
        *(_OWORD *)((char *)a1 + v83[12]) = *(_OWORD *)((char *)a2 + v83[12]);
        *((_BYTE *)a1 + v83[13]) = *((_BYTE *)a2 + v83[13]);
        *((_BYTE *)a1 + v83[14]) = *((_BYTE *)a2 + v83[14]);
        *(_OWORD *)((char *)a1 + v83[15]) = *(_OWORD *)((char *)a2 + v83[15]);
        *(_QWORD *)((char *)a1 + *(int *)(v40 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v40 + 20));
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v40);
      }
      goto LABEL_92;
    case 9u:
      v42 = type metadata accessor for WeatherAlerts();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v42))
      {
        v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C5F8);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        v88 = sub_1A6332C24();
        v89 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 32);
        v89((char *)a1, (char *)a2, v88);
        v90 = (int *)type metadata accessor for Metadata();
        v89((char *)a1 + v90[5], (char *)a2 + v90[5], v88);
        v91 = v90[6];
        v92 = (char *)a1 + v91;
        v93 = (char *)a2 + v91;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v91, 1, v88))
        {
          v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
          memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
        }
        else
        {
          v89(v92, v93, v88);
          __swift_storeEnumTagSinglePayload((uint64_t)v92, 0, 1, v88);
        }
        *(_QWORD *)((char *)a1 + v90[7]) = *(_QWORD *)((char *)a2 + v90[7]);
        *(_QWORD *)((char *)a1 + v90[8]) = *(_QWORD *)((char *)a2 + v90[8]);
        *(_QWORD *)((char *)a1 + v90[9]) = *(_QWORD *)((char *)a2 + v90[9]);
        *(_OWORD *)((char *)a1 + v90[10]) = *(_OWORD *)((char *)a2 + v90[10]);
        *(_OWORD *)((char *)a1 + v90[11]) = *(_OWORD *)((char *)a2 + v90[11]);
        *(_OWORD *)((char *)a1 + v90[12]) = *(_OWORD *)((char *)a2 + v90[12]);
        *((_BYTE *)a1 + v90[13]) = *((_BYTE *)a2 + v90[13]);
        *((_BYTE *)a1 + v90[14]) = *((_BYTE *)a2 + v90[14]);
        *(_OWORD *)((char *)a1 + v90[15]) = *(_OWORD *)((char *)a2 + v90[15]);
        *(_OWORD *)((char *)a1 + *(int *)(v42 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v42 + 20));
        *(_QWORD *)((char *)a1 + *(int *)(v42 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v42 + 24));
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v42);
      }
      goto LABEL_92;
    case 0xAu:
      v44 = (int *)type metadata accessor for WeatherChange();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v44))
      {
        v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CE20);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        v95 = sub_1A6332C24();
        v96 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32);
        v96((char *)a1, (char *)a2, v95);
        v97 = (int *)type metadata accessor for Metadata();
        v96((char *)a1 + v97[5], (char *)a2 + v97[5], v95);
        v98 = v97[6];
        v99 = (char *)a1 + v98;
        v100 = (char *)a2 + v98;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v98, 1, v95))
        {
          v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
          memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
        }
        else
        {
          v96(v99, v100, v95);
          __swift_storeEnumTagSinglePayload((uint64_t)v99, 0, 1, v95);
        }
        *(_QWORD *)((char *)a1 + v97[7]) = *(_QWORD *)((char *)a2 + v97[7]);
        *(_QWORD *)((char *)a1 + v97[8]) = *(_QWORD *)((char *)a2 + v97[8]);
        *(_QWORD *)((char *)a1 + v97[9]) = *(_QWORD *)((char *)a2 + v97[9]);
        *(_OWORD *)((char *)a1 + v97[10]) = *(_OWORD *)((char *)a2 + v97[10]);
        *(_OWORD *)((char *)a1 + v97[11]) = *(_OWORD *)((char *)a2 + v97[11]);
        *(_OWORD *)((char *)a1 + v97[12]) = *(_OWORD *)((char *)a2 + v97[12]);
        *((_BYTE *)a1 + v97[13]) = *((_BYTE *)a2 + v97[13]);
        *((_BYTE *)a1 + v97[14]) = *((_BYTE *)a2 + v97[14]);
        *(_OWORD *)((char *)a1 + v97[15]) = *(_OWORD *)((char *)a2 + v97[15]);
        v160 = v44[5];
        v161 = (char *)a1 + v160;
        v162 = (char *)a2 + v160;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v160, 1, v95))
        {
          v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
          memcpy(v161, v162, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
        }
        else
        {
          v96(v161, v162, v95);
          __swift_storeEnumTagSinglePayload((uint64_t)v161, 0, 1, v95);
        }
        v164 = v44[6];
        v165 = (char *)a1 + v164;
        v166 = (char *)a2 + v164;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v164, 1, v95))
        {
          v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
          memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
        }
        else
        {
          v96(v165, v166, v95);
          __swift_storeEnumTagSinglePayload((uint64_t)v165, 0, 1, v95);
        }
        *(_QWORD *)((char *)a1 + v44[7]) = *(_QWORD *)((char *)a2 + v44[7]);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v44);
      }
      goto LABEL_92;
    case 0xBu:
      v46 = type metadata accessor for WeatherComparisons();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v46))
      {
        v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CA58);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        v102 = *(int *)(v46 + 20);
        v103 = (char *)a1 + v102;
        v104 = (char *)a2 + v102;
        v105 = sub_1A6332C24();
        v106 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 32);
        v106(v103, v104, v105);
        v107 = (int *)type metadata accessor for Metadata();
        v106(&v103[v107[5]], &v104[v107[5]], v105);
        v108 = v107[6];
        v109 = &v103[v108];
        v110 = &v104[v108];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v104[v108], 1, v105))
        {
          v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
          memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
        }
        else
        {
          v106(v109, v110, v105);
          __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v105);
        }
        *(_QWORD *)&v103[v107[7]] = *(_QWORD *)&v104[v107[7]];
        *(_QWORD *)&v103[v107[8]] = *(_QWORD *)&v104[v107[8]];
        *(_QWORD *)&v103[v107[9]] = *(_QWORD *)&v104[v107[9]];
        *(_OWORD *)&v103[v107[10]] = *(_OWORD *)&v104[v107[10]];
        *(_OWORD *)&v103[v107[11]] = *(_OWORD *)&v104[v107[11]];
        *(_OWORD *)&v103[v107[12]] = *(_OWORD *)&v104[v107[12]];
        v103[v107[13]] = v104[v107[13]];
        v103[v107[14]] = v104[v107[14]];
        *(_OWORD *)&v103[v107[15]] = *(_OWORD *)&v104[v107[15]];
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v46);
      }
      goto LABEL_92;
    case 0xCu:
      v48 = type metadata accessor for TideEvents();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v48))
      {
        v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C1B8);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v112 = *(int *)(v48 + 24);
        v113 = (char *)a1 + v112;
        v114 = (char *)a2 + v112;
        v115 = sub_1A6332C24();
        v116 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 32);
        v116(v113, v114, v115);
        v117 = (int *)type metadata accessor for Metadata();
        v116(&v113[v117[5]], &v114[v117[5]], v115);
        v118 = v117[6];
        __dsta = &v113[v118];
        v119 = &v114[v118];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v114[v118], 1, v115))
        {
          v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
          memcpy(__dsta, v119, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
        }
        else
        {
          v116(__dsta, v119, v115);
          __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v115);
        }
        *(_QWORD *)&v113[v117[7]] = *(_QWORD *)&v114[v117[7]];
        *(_QWORD *)&v113[v117[8]] = *(_QWORD *)&v114[v117[8]];
        *(_QWORD *)&v113[v117[9]] = *(_QWORD *)&v114[v117[9]];
        *(_OWORD *)&v113[v117[10]] = *(_OWORD *)&v114[v117[10]];
        *(_OWORD *)&v113[v117[11]] = *(_OWORD *)&v114[v117[11]];
        *(_OWORD *)&v113[v117[12]] = *(_OWORD *)&v114[v117[12]];
        v113[v117[13]] = v114[v117[13]];
        v113[v117[14]] = v114[v117[14]];
        *(_OWORD *)&v113[v117[15]] = *(_OWORD *)&v114[v117[15]];
        *(_OWORD *)((char *)a1 + *(int *)(v48 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(v48 + 28));
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v48);
      }
LABEL_92:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *assignWithTake for WeatherModel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  int *HourForecast;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  int *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  int *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  int *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  int *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  int *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, char *, uint64_t);
  int *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t);
  int *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *, char *, uint64_t);
  int *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  void (*v106)(char *, char *, uint64_t);
  int *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  void (*v116)(char *, char *, uint64_t);
  int *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  char *__dst;
  char *__dsta;

  if (a1 != a2)
  {
    sub_1A61AF11C((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = (int *)type metadata accessor for AirQuality();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v6))
        {
          v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D030);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        }
        else
        {
          v50 = sub_1A6332C24();
          v51 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32);
          v51((char *)a1, (char *)a2, v50);
          v52 = (int *)type metadata accessor for Metadata();
          v51((char *)a1 + v52[5], (char *)a2 + v52[5], v50);
          v53 = v52[6];
          v54 = (char *)a1 + v53;
          v55 = (char *)a2 + v53;
          if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v53, 1, v50))
          {
            v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
            memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
          }
          else
          {
            v51(v54, v55, v50);
            __swift_storeEnumTagSinglePayload((uint64_t)v54, 0, 1, v50);
          }
          *(_QWORD *)((char *)a1 + v52[7]) = *(_QWORD *)((char *)a2 + v52[7]);
          *(_QWORD *)((char *)a1 + v52[8]) = *(_QWORD *)((char *)a2 + v52[8]);
          *(_QWORD *)((char *)a1 + v52[9]) = *(_QWORD *)((char *)a2 + v52[9]);
          *(_OWORD *)((char *)a1 + v52[10]) = *(_OWORD *)((char *)a2 + v52[10]);
          *(_OWORD *)((char *)a1 + v52[11]) = *(_OWORD *)((char *)a2 + v52[11]);
          *(_OWORD *)((char *)a1 + v52[12]) = *(_OWORD *)((char *)a2 + v52[12]);
          *((_BYTE *)a1 + v52[13]) = *((_BYTE *)a2 + v52[13]);
          *((_BYTE *)a1 + v52[14]) = *((_BYTE *)a2 + v52[14]);
          *(_OWORD *)((char *)a1 + v52[15]) = *(_OWORD *)((char *)a2 + v52[15]);
          *(_OWORD *)((char *)a1 + v6[5]) = *(_OWORD *)((char *)a2 + v6[5]);
          *((_BYTE *)a1 + v6[6]) = *((_BYTE *)a2 + v6[6]);
          *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
          v150 = v6[8];
          v151 = (char *)a1 + v150;
          v152 = (char *)a2 + v150;
          v151[8] = v152[8];
          *(_QWORD *)v151 = *(_QWORD *)v152;
          v153 = v6[9];
          v154 = (char *)a1 + v153;
          v155 = (char *)a2 + v153;
          *(_QWORD *)v154 = *(_QWORD *)v155;
          v154[8] = v155[8];
          *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
          *(_OWORD *)((char *)a1 + v6[11]) = *(_OWORD *)((char *)a2 + v6[11]);
          *(_OWORD *)((char *)a1 + v6[12]) = *(_OWORD *)((char *)a2 + v6[12]);
          *(_QWORD *)((char *)a1 + v6[13]) = *(_QWORD *)((char *)a2 + v6[13]);
          *(_OWORD *)((char *)a1 + v6[14]) = *(_OWORD *)((char *)a2 + v6[14]);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v6);
        }
        goto LABEL_93;
      case 1u:
        v8 = sub_1A6332C24();
        v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
        v9((char *)a1, (char *)a2, v8);
        v10 = (int *)type metadata accessor for Metadata();
        v9((char *)a1 + v10[5], (char *)a2 + v10[5], v8);
        v11 = v10[6];
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v11, 1, v8))
        {
          v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          v9(v12, v13, v8);
          __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v8);
        }
        *(_QWORD *)((char *)a1 + v10[7]) = *(_QWORD *)((char *)a2 + v10[7]);
        *(_QWORD *)((char *)a1 + v10[8]) = *(_QWORD *)((char *)a2 + v10[8]);
        *(_QWORD *)((char *)a1 + v10[9]) = *(_QWORD *)((char *)a2 + v10[9]);
        *(_OWORD *)((char *)a1 + v10[10]) = *(_OWORD *)((char *)a2 + v10[10]);
        *(_OWORD *)((char *)a1 + v10[11]) = *(_OWORD *)((char *)a2 + v10[11]);
        *(_OWORD *)((char *)a1 + v10[12]) = *(_OWORD *)((char *)a2 + v10[12]);
        *((_BYTE *)a1 + v10[13]) = *((_BYTE *)a2 + v10[13]);
        *((_BYTE *)a1 + v10[14]) = *((_BYTE *)a2 + v10[14]);
        *(_OWORD *)((char *)a1 + v10[15]) = *(_OWORD *)((char *)a2 + v10[15]);
        v57 = (int *)type metadata accessor for CurrentWeather();
        v58 = v57[5];
        v59 = (char *)a1 + v58;
        v60 = (char *)a2 + v58;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v58, 1, v8))
        {
          v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
          memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
        }
        else
        {
          v9(v59, v60, v8);
          __swift_storeEnumTagSinglePayload((uint64_t)v59, 0, 1, v8);
        }
        *(_QWORD *)((char *)a1 + v57[6]) = *(_QWORD *)((char *)a2 + v57[6]);
        *(_QWORD *)((char *)a1 + v57[7]) = *(_QWORD *)((char *)a2 + v57[7]);
        *(_QWORD *)((char *)a1 + v57[8]) = *(_QWORD *)((char *)a2 + v57[8]);
        *(_QWORD *)((char *)a1 + v57[9]) = *(_QWORD *)((char *)a2 + v57[9]);
        *((_BYTE *)a1 + v57[10]) = *((_BYTE *)a2 + v57[10]);
        *((_BYTE *)a1 + v57[11]) = *((_BYTE *)a2 + v57[11]);
        *(_QWORD *)((char *)a1 + v57[12]) = *(_QWORD *)((char *)a2 + v57[12]);
        *(_QWORD *)((char *)a1 + v57[13]) = *(_QWORD *)((char *)a2 + v57[13]);
        *(_QWORD *)((char *)a1 + v57[14]) = *(_QWORD *)((char *)a2 + v57[14]);
        *(_QWORD *)((char *)a1 + v57[15]) = *(_QWORD *)((char *)a2 + v57[15]);
        *(_QWORD *)((char *)a1 + v57[16]) = *(_QWORD *)((char *)a2 + v57[16]);
        *(_QWORD *)((char *)a1 + v57[17]) = *(_QWORD *)((char *)a2 + v57[17]);
        *(_QWORD *)((char *)a1 + v57[18]) = *(_QWORD *)((char *)a2 + v57[18]);
        *(_QWORD *)((char *)a1 + v57[19]) = *(_QWORD *)((char *)a2 + v57[19]);
        *(_QWORD *)((char *)a1 + v57[20]) = *(_QWORD *)((char *)a2 + v57[20]);
        *(_QWORD *)((char *)a1 + v57[21]) = *(_QWORD *)((char *)a2 + v57[21]);
        *(_QWORD *)((char *)a1 + v57[22]) = *(_QWORD *)((char *)a2 + v57[22]);
        *(_QWORD *)((char *)a1 + v57[23]) = *(_QWORD *)((char *)a2 + v57[23]);
        *(_QWORD *)((char *)a1 + v57[24]) = *(_QWORD *)((char *)a2 + v57[24]);
        *(_QWORD *)((char *)a1 + v57[25]) = *(_QWORD *)((char *)a2 + v57[25]);
        *(_QWORD *)((char *)a1 + v57[26]) = *(_QWORD *)((char *)a2 + v57[26]);
        v121 = v57[27];
        v122 = (char *)a1 + v121;
        v123 = (char *)a2 + v121;
        *(_QWORD *)v122 = *(_QWORD *)v123;
        v122[8] = v123[8];
        *((_BYTE *)a1 + v57[28]) = *((_BYTE *)a2 + v57[28]);
        *(_QWORD *)((char *)a1 + v57[29]) = *(_QWORD *)((char *)a2 + v57[29]);
        *(_QWORD *)((char *)a1 + v57[30]) = *(_QWORD *)((char *)a2 + v57[30]);
        *(_QWORD *)((char *)a1 + v57[31]) = *(_QWORD *)((char *)a2 + v57[31]);
        *(_QWORD *)((char *)a1 + v57[32]) = *(_QWORD *)((char *)a2 + v57[32]);
        *(_QWORD *)((char *)a1 + v57[33]) = *(_QWORD *)((char *)a2 + v57[33]);
        *(_QWORD *)((char *)a1 + v57[34]) = *(_QWORD *)((char *)a2 + v57[34]);
        v124 = v57[35];
        v125 = (char *)a1 + v124;
        v126 = (char *)a2 + v124;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v124, 1, v8))
        {
          v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
          memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
        }
        else
        {
          v9(v125, v126, v8);
          __swift_storeEnumTagSinglePayload((uint64_t)v125, 0, 1, v8);
        }
        v128 = v57[36];
        v129 = (char *)a1 + v128;
        v130 = (char *)a2 + v128;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v128, 1, v8))
        {
          v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
          memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
        }
        else
        {
          v9(v129, v130, v8);
          __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, v8);
        }
        *(_QWORD *)((char *)a1 + v57[37]) = *(_QWORD *)((char *)a2 + v57[37]);
        v132 = v57[38];
        v133 = (char *)a1 + v132;
        v134 = (char *)a2 + v132;
        *(_QWORD *)v133 = *(_QWORD *)v134;
        v133[8] = v134[8];
        v135 = v57[39];
        v136 = (char *)a1 + v135;
        v137 = (char *)a2 + v135;
        *(_QWORD *)v136 = *(_QWORD *)v137;
        v136[8] = v137[8];
        v138 = v57[40];
        v139 = (char *)a1 + v138;
        v140 = (char *)a2 + v138;
        *(_QWORD *)v139 = *(_QWORD *)v140;
        v139[8] = v140[8];
        v141 = v57[41];
        v142 = (char *)a1 + v141;
        v143 = (char *)a2 + v141;
        *(_QWORD *)v142 = *(_QWORD *)v143;
        v142[8] = v143[8];
        *(_QWORD *)((char *)a1 + v57[42]) = *(_QWORD *)((char *)a2 + v57[42]);
        *(_QWORD *)((char *)a1 + v57[43]) = *(_QWORD *)((char *)a2 + v57[43]);
        v144 = v57[44];
        v145 = (char *)a1 + v144;
        v146 = (char *)a2 + v144;
        *(_QWORD *)v145 = *(_QWORD *)v146;
        v145[8] = v146[8];
        v147 = v57[45];
        v148 = (char *)a1 + v147;
        v149 = (char *)a2 + v147;
        *(_QWORD *)v148 = *(_QWORD *)v149;
        v148[8] = v149[8];
        *(_QWORD *)((char *)a1 + v57[46]) = *(_QWORD *)((char *)a2 + v57[46]);
        goto LABEL_93;
      case 2u:
        v15 = sub_1A6332C24();
        v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
        v16((char *)a1, (char *)a2, v15);
        v17 = (int *)type metadata accessor for Metadata();
        v16((char *)a1 + v17[5], (char *)a2 + v17[5], v15);
        v18 = v17[6];
        v19 = (char *)a1 + v18;
        v20 = (char *)a2 + v18;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v18, 1, v15))
        {
          v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          v16(v19, v20, v15);
          __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v15);
        }
        *(_QWORD *)((char *)a1 + v17[7]) = *(_QWORD *)((char *)a2 + v17[7]);
        *(_QWORD *)((char *)a1 + v17[8]) = *(_QWORD *)((char *)a2 + v17[8]);
        *(_QWORD *)((char *)a1 + v17[9]) = *(_QWORD *)((char *)a2 + v17[9]);
        *(_OWORD *)((char *)a1 + v17[10]) = *(_OWORD *)((char *)a2 + v17[10]);
        *(_OWORD *)((char *)a1 + v17[11]) = *(_OWORD *)((char *)a2 + v17[11]);
        *(_OWORD *)((char *)a1 + v17[12]) = *(_OWORD *)((char *)a2 + v17[12]);
        *((_BYTE *)a1 + v17[13]) = *((_BYTE *)a2 + v17[13]);
        *((_BYTE *)a1 + v17[14]) = *((_BYTE *)a2 + v17[14]);
        *(_OWORD *)((char *)a1 + v17[15]) = *(_OWORD *)((char *)a2 + v17[15]);
        v62 = type metadata accessor for DailyForecast();
        *(_QWORD *)((char *)a1 + *(int *)(v62 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v62 + 20));
        goto LABEL_93;
      case 3u:
        v22 = sub_1A6332C24();
        v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32);
        v23((char *)a1, (char *)a2, v22);
        v24 = (int *)type metadata accessor for Metadata();
        v23((char *)a1 + v24[5], (char *)a2 + v24[5], v22);
        v25 = v24[6];
        v26 = (char *)a1 + v25;
        v27 = (char *)a2 + v25;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v25, 1, v22))
        {
          v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
          memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          v23(v26, v27, v22);
          __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v22);
        }
        *(_QWORD *)((char *)a1 + v24[7]) = *(_QWORD *)((char *)a2 + v24[7]);
        *(_QWORD *)((char *)a1 + v24[8]) = *(_QWORD *)((char *)a2 + v24[8]);
        *(_QWORD *)((char *)a1 + v24[9]) = *(_QWORD *)((char *)a2 + v24[9]);
        *(_OWORD *)((char *)a1 + v24[10]) = *(_OWORD *)((char *)a2 + v24[10]);
        *(_OWORD *)((char *)a1 + v24[11]) = *(_OWORD *)((char *)a2 + v24[11]);
        *(_OWORD *)((char *)a1 + v24[12]) = *(_OWORD *)((char *)a2 + v24[12]);
        *((_BYTE *)a1 + v24[13]) = *((_BYTE *)a2 + v24[13]);
        *((_BYTE *)a1 + v24[14]) = *((_BYTE *)a2 + v24[14]);
        *(_OWORD *)((char *)a1 + v24[15]) = *(_OWORD *)((char *)a2 + v24[15]);
        v63 = type metadata accessor for HourlyForecast();
        *(_QWORD *)((char *)a1 + *(int *)(v63 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v63 + 20));
        goto LABEL_93;
      case 4u:
        HourForecast = (int *)type metadata accessor for NextHourForecast();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)HourForecast))
        {
          v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D0A0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          v64 = sub_1A6332C24();
          v65 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 32);
          v65((char *)a1, (char *)a2, v64);
          v66 = (int *)type metadata accessor for Metadata();
          v65((char *)a1 + v66[5], (char *)a2 + v66[5], v64);
          v67 = v66[6];
          v68 = (char *)a1 + v67;
          v69 = (char *)a2 + v67;
          if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v67, 1, v64))
          {
            v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
            memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
          }
          else
          {
            v65(v68, v69, v64);
            __swift_storeEnumTagSinglePayload((uint64_t)v68, 0, 1, v64);
          }
          *(_QWORD *)((char *)a1 + v66[7]) = *(_QWORD *)((char *)a2 + v66[7]);
          *(_QWORD *)((char *)a1 + v66[8]) = *(_QWORD *)((char *)a2 + v66[8]);
          *(_QWORD *)((char *)a1 + v66[9]) = *(_QWORD *)((char *)a2 + v66[9]);
          *(_OWORD *)((char *)a1 + v66[10]) = *(_OWORD *)((char *)a2 + v66[10]);
          *(_OWORD *)((char *)a1 + v66[11]) = *(_OWORD *)((char *)a2 + v66[11]);
          *(_OWORD *)((char *)a1 + v66[12]) = *(_OWORD *)((char *)a2 + v66[12]);
          *((_BYTE *)a1 + v66[13]) = *((_BYTE *)a2 + v66[13]);
          *((_BYTE *)a1 + v66[14]) = *((_BYTE *)a2 + v66[14]);
          *(_OWORD *)((char *)a1 + v66[15]) = *(_OWORD *)((char *)a2 + v66[15]);
          *(_QWORD *)((char *)a1 + HourForecast[5]) = *(_QWORD *)((char *)a2 + HourForecast[5]);
          *(_QWORD *)((char *)a1 + HourForecast[6]) = *(_QWORD *)((char *)a2 + HourForecast[6]);
          v156 = HourForecast[7];
          v157 = (char *)a1 + v156;
          v158 = (char *)a2 + v156;
          if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v156, 1, v64))
          {
            v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
            memcpy(v157, v158, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
          }
          else
          {
            v65(v157, v158, v64);
            __swift_storeEnumTagSinglePayload((uint64_t)v157, 0, 1, v64);
          }
          *(_QWORD *)((char *)a1 + HourForecast[8]) = *(_QWORD *)((char *)a2 + HourForecast[8]);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)HourForecast);
        }
        goto LABEL_93;
      case 6u:
        v31 = sub_1A6332C24();
        v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32);
        v32((char *)a1, (char *)a2, v31);
        v33 = (int *)type metadata accessor for Metadata();
        v32((char *)a1 + v33[5], (char *)a2 + v33[5], v31);
        v34 = v33[6];
        v35 = (char *)a1 + v34;
        v36 = (char *)a2 + v34;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v34, 1, v31))
        {
          v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
          memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          v32(v35, v36, v31);
          __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v31);
        }
        *(_QWORD *)((char *)a1 + v33[7]) = *(_QWORD *)((char *)a2 + v33[7]);
        *(_QWORD *)((char *)a1 + v33[8]) = *(_QWORD *)((char *)a2 + v33[8]);
        *(_QWORD *)((char *)a1 + v33[9]) = *(_QWORD *)((char *)a2 + v33[9]);
        *(_OWORD *)((char *)a1 + v33[10]) = *(_OWORD *)((char *)a2 + v33[10]);
        *(_OWORD *)((char *)a1 + v33[11]) = *(_OWORD *)((char *)a2 + v33[11]);
        *(_OWORD *)((char *)a1 + v33[12]) = *(_OWORD *)((char *)a2 + v33[12]);
        *((_BYTE *)a1 + v33[13]) = *((_BYTE *)a2 + v33[13]);
        *((_BYTE *)a1 + v33[14]) = *((_BYTE *)a2 + v33[14]);
        *(_OWORD *)((char *)a1 + v33[15]) = *(_OWORD *)((char *)a2 + v33[15]);
        v71 = (int *)type metadata accessor for LocationInfo();
        *(_OWORD *)((char *)a1 + v71[5]) = *(_OWORD *)((char *)a2 + v71[5]);
        *(_OWORD *)((char *)a1 + v71[6]) = *(_OWORD *)((char *)a2 + v71[6]);
        *(_OWORD *)((char *)a1 + v71[7]) = *(_OWORD *)((char *)a2 + v71[7]);
        *(_OWORD *)((char *)a1 + v71[8]) = *(_OWORD *)((char *)a2 + v71[8]);
        *(_OWORD *)((char *)a1 + v71[9]) = *(_OWORD *)((char *)a2 + v71[9]);
        goto LABEL_93;
      case 7u:
        v38 = type metadata accessor for MarineForecast();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v38))
        {
          v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C238);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v72 = *(int *)(v38 + 20);
          v73 = (char *)a1 + v72;
          v74 = (char *)a2 + v72;
          v75 = sub_1A6332C24();
          v76 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32);
          v76(v73, v74, v75);
          v77 = (int *)type metadata accessor for Metadata();
          v76(&v73[v77[5]], &v74[v77[5]], v75);
          v78 = v77[6];
          __dst = &v73[v78];
          v79 = &v74[v78];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v74[v78], 1, v75))
          {
            v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
            memcpy(__dst, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
          }
          else
          {
            v76(__dst, v79, v75);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v75);
          }
          *(_QWORD *)&v73[v77[7]] = *(_QWORD *)&v74[v77[7]];
          *(_QWORD *)&v73[v77[8]] = *(_QWORD *)&v74[v77[8]];
          *(_QWORD *)&v73[v77[9]] = *(_QWORD *)&v74[v77[9]];
          *(_OWORD *)&v73[v77[10]] = *(_OWORD *)&v74[v77[10]];
          *(_OWORD *)&v73[v77[11]] = *(_OWORD *)&v74[v77[11]];
          *(_OWORD *)&v73[v77[12]] = *(_OWORD *)&v74[v77[12]];
          v73[v77[13]] = v74[v77[13]];
          v73[v77[14]] = v74[v77[14]];
          *(_OWORD *)&v73[v77[15]] = *(_OWORD *)&v74[v77[15]];
          *(_OWORD *)((char *)a1 + *(int *)(v38 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v38 + 24));
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v38);
        }
        goto LABEL_93;
      case 8u:
        v40 = type metadata accessor for News();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v40))
        {
          v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C910);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        }
        else
        {
          v81 = sub_1A6332C24();
          v82 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32);
          v82((char *)a1, (char *)a2, v81);
          v83 = (int *)type metadata accessor for Metadata();
          v82((char *)a1 + v83[5], (char *)a2 + v83[5], v81);
          v84 = v83[6];
          v85 = (char *)a1 + v84;
          v86 = (char *)a2 + v84;
          if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v84, 1, v81))
          {
            v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
            memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
          }
          else
          {
            v82(v85, v86, v81);
            __swift_storeEnumTagSinglePayload((uint64_t)v85, 0, 1, v81);
          }
          *(_QWORD *)((char *)a1 + v83[7]) = *(_QWORD *)((char *)a2 + v83[7]);
          *(_QWORD *)((char *)a1 + v83[8]) = *(_QWORD *)((char *)a2 + v83[8]);
          *(_QWORD *)((char *)a1 + v83[9]) = *(_QWORD *)((char *)a2 + v83[9]);
          *(_OWORD *)((char *)a1 + v83[10]) = *(_OWORD *)((char *)a2 + v83[10]);
          *(_OWORD *)((char *)a1 + v83[11]) = *(_OWORD *)((char *)a2 + v83[11]);
          *(_OWORD *)((char *)a1 + v83[12]) = *(_OWORD *)((char *)a2 + v83[12]);
          *((_BYTE *)a1 + v83[13]) = *((_BYTE *)a2 + v83[13]);
          *((_BYTE *)a1 + v83[14]) = *((_BYTE *)a2 + v83[14]);
          *(_OWORD *)((char *)a1 + v83[15]) = *(_OWORD *)((char *)a2 + v83[15]);
          *(_QWORD *)((char *)a1 + *(int *)(v40 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v40 + 20));
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v40);
        }
        goto LABEL_93;
      case 9u:
        v42 = type metadata accessor for WeatherAlerts();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v42))
        {
          v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C5F8);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        }
        else
        {
          v88 = sub_1A6332C24();
          v89 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 32);
          v89((char *)a1, (char *)a2, v88);
          v90 = (int *)type metadata accessor for Metadata();
          v89((char *)a1 + v90[5], (char *)a2 + v90[5], v88);
          v91 = v90[6];
          v92 = (char *)a1 + v91;
          v93 = (char *)a2 + v91;
          if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v91, 1, v88))
          {
            v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
            memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
          }
          else
          {
            v89(v92, v93, v88);
            __swift_storeEnumTagSinglePayload((uint64_t)v92, 0, 1, v88);
          }
          *(_QWORD *)((char *)a1 + v90[7]) = *(_QWORD *)((char *)a2 + v90[7]);
          *(_QWORD *)((char *)a1 + v90[8]) = *(_QWORD *)((char *)a2 + v90[8]);
          *(_QWORD *)((char *)a1 + v90[9]) = *(_QWORD *)((char *)a2 + v90[9]);
          *(_OWORD *)((char *)a1 + v90[10]) = *(_OWORD *)((char *)a2 + v90[10]);
          *(_OWORD *)((char *)a1 + v90[11]) = *(_OWORD *)((char *)a2 + v90[11]);
          *(_OWORD *)((char *)a1 + v90[12]) = *(_OWORD *)((char *)a2 + v90[12]);
          *((_BYTE *)a1 + v90[13]) = *((_BYTE *)a2 + v90[13]);
          *((_BYTE *)a1 + v90[14]) = *((_BYTE *)a2 + v90[14]);
          *(_OWORD *)((char *)a1 + v90[15]) = *(_OWORD *)((char *)a2 + v90[15]);
          *(_OWORD *)((char *)a1 + *(int *)(v42 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v42 + 20));
          *(_QWORD *)((char *)a1 + *(int *)(v42 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v42 + 24));
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v42);
        }
        goto LABEL_93;
      case 0xAu:
        v44 = (int *)type metadata accessor for WeatherChange();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v44))
        {
          v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CE20);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          v95 = sub_1A6332C24();
          v96 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32);
          v96((char *)a1, (char *)a2, v95);
          v97 = (int *)type metadata accessor for Metadata();
          v96((char *)a1 + v97[5], (char *)a2 + v97[5], v95);
          v98 = v97[6];
          v99 = (char *)a1 + v98;
          v100 = (char *)a2 + v98;
          if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v98, 1, v95))
          {
            v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
            memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
          }
          else
          {
            v96(v99, v100, v95);
            __swift_storeEnumTagSinglePayload((uint64_t)v99, 0, 1, v95);
          }
          *(_QWORD *)((char *)a1 + v97[7]) = *(_QWORD *)((char *)a2 + v97[7]);
          *(_QWORD *)((char *)a1 + v97[8]) = *(_QWORD *)((char *)a2 + v97[8]);
          *(_QWORD *)((char *)a1 + v97[9]) = *(_QWORD *)((char *)a2 + v97[9]);
          *(_OWORD *)((char *)a1 + v97[10]) = *(_OWORD *)((char *)a2 + v97[10]);
          *(_OWORD *)((char *)a1 + v97[11]) = *(_OWORD *)((char *)a2 + v97[11]);
          *(_OWORD *)((char *)a1 + v97[12]) = *(_OWORD *)((char *)a2 + v97[12]);
          *((_BYTE *)a1 + v97[13]) = *((_BYTE *)a2 + v97[13]);
          *((_BYTE *)a1 + v97[14]) = *((_BYTE *)a2 + v97[14]);
          *(_OWORD *)((char *)a1 + v97[15]) = *(_OWORD *)((char *)a2 + v97[15]);
          v160 = v44[5];
          v161 = (char *)a1 + v160;
          v162 = (char *)a2 + v160;
          if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v160, 1, v95))
          {
            v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
            memcpy(v161, v162, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
          }
          else
          {
            v96(v161, v162, v95);
            __swift_storeEnumTagSinglePayload((uint64_t)v161, 0, 1, v95);
          }
          v164 = v44[6];
          v165 = (char *)a1 + v164;
          v166 = (char *)a2 + v164;
          if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v164, 1, v95))
          {
            v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
            memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
          }
          else
          {
            v96(v165, v166, v95);
            __swift_storeEnumTagSinglePayload((uint64_t)v165, 0, 1, v95);
          }
          *(_QWORD *)((char *)a1 + v44[7]) = *(_QWORD *)((char *)a2 + v44[7]);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v44);
        }
        goto LABEL_93;
      case 0xBu:
        v46 = type metadata accessor for WeatherComparisons();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v46))
        {
          v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21CA58);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v102 = *(int *)(v46 + 20);
          v103 = (char *)a1 + v102;
          v104 = (char *)a2 + v102;
          v105 = sub_1A6332C24();
          v106 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 32);
          v106(v103, v104, v105);
          v107 = (int *)type metadata accessor for Metadata();
          v106(&v103[v107[5]], &v104[v107[5]], v105);
          v108 = v107[6];
          v109 = &v103[v108];
          v110 = &v104[v108];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v104[v108], 1, v105))
          {
            v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
            memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
          }
          else
          {
            v106(v109, v110, v105);
            __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v105);
          }
          *(_QWORD *)&v103[v107[7]] = *(_QWORD *)&v104[v107[7]];
          *(_QWORD *)&v103[v107[8]] = *(_QWORD *)&v104[v107[8]];
          *(_QWORD *)&v103[v107[9]] = *(_QWORD *)&v104[v107[9]];
          *(_OWORD *)&v103[v107[10]] = *(_OWORD *)&v104[v107[10]];
          *(_OWORD *)&v103[v107[11]] = *(_OWORD *)&v104[v107[11]];
          *(_OWORD *)&v103[v107[12]] = *(_OWORD *)&v104[v107[12]];
          v103[v107[13]] = v104[v107[13]];
          v103[v107[14]] = v104[v107[14]];
          *(_OWORD *)&v103[v107[15]] = *(_OWORD *)&v104[v107[15]];
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v46);
        }
        goto LABEL_93;
      case 0xCu:
        v48 = type metadata accessor for TideEvents();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v48))
        {
          v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C1B8);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v112 = *(int *)(v48 + 24);
          v113 = (char *)a1 + v112;
          v114 = (char *)a2 + v112;
          v115 = sub_1A6332C24();
          v116 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 32);
          v116(v113, v114, v115);
          v117 = (int *)type metadata accessor for Metadata();
          v116(&v113[v117[5]], &v114[v117[5]], v115);
          v118 = v117[6];
          __dsta = &v113[v118];
          v119 = &v114[v118];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v114[v118], 1, v115))
          {
            v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
            memcpy(__dsta, v119, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
          }
          else
          {
            v116(__dsta, v119, v115);
            __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v115);
          }
          *(_QWORD *)&v113[v117[7]] = *(_QWORD *)&v114[v117[7]];
          *(_QWORD *)&v113[v117[8]] = *(_QWORD *)&v114[v117[8]];
          *(_QWORD *)&v113[v117[9]] = *(_QWORD *)&v114[v117[9]];
          *(_OWORD *)&v113[v117[10]] = *(_OWORD *)&v114[v117[10]];
          *(_OWORD *)&v113[v117[11]] = *(_OWORD *)&v114[v117[11]];
          *(_OWORD *)&v113[v117[12]] = *(_OWORD *)&v114[v117[12]];
          v113[v117[13]] = v114[v117[13]];
          v113[v117[14]] = v114[v117[14]];
          *(_OWORD *)&v113[v117[15]] = *(_OWORD *)&v114[v117[15]];
          *(_OWORD *)((char *)a1 + *(int *)(v48 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(v48 + 28));
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v48);
        }
LABEL_93:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1A62948A8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_4_33(v4);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for WeatherModel.Errors(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1A629491C(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_1A629491C(id result, unsigned __int8 a2)
{
  if (a2 - 1 <= 0xA)
    return result;
  return result;
}

void destroy for WeatherModel.Errors(uint64_t a1)
{
  sub_1A6294944(*(id *)a1, *(_BYTE *)(a1 + 8));
}

void sub_1A6294944(id a1, unsigned __int8 a2)
{
  if (a2 - 1 <= 0xA)

}

uint64_t assignWithCopy for WeatherModel.Errors(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1A629491C(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1A6294944(v5, v6);
  return a1;
}

uint64_t assignWithTake for WeatherModel.Errors(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1A6294944(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for WeatherModel.Errors(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xF5 && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 244;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 0xB)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WeatherModel.Errors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF4)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 245;
    if (a3 >= 0xF5)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xF5)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherModel.Errors()
{
  return &type metadata for WeatherModel.Errors;
}

double CurrentWeather.init(metadata:asOf:cloudCover:cloudCoverLowAltPct:cloudCoverMidAltPct:cloudCoverHighAltPct:conditionCode:daylight:humidity:precipitationAmount1h:precipitationAmount6h:precipitationAmount24h:precipitationAmountNext1h:precipitationAmountNext6h:precipitationAmountNext24h:precipitationAmountPrevious1hByType:precipitationAmountPrevious6hByType:precipitationAmountPrevious24hByType:precipitationAmountNext1hByType:precipitationAmountNext6hByType:precipitationAmountNext24hByType:precipitationIntensity:perceivedPrecipitationIntensity:pressure:pressureTrend:snowfallAmount1h:snowfallAmount6h:snowfallAmount24h:snowfallAmountNext1h:snowfallAmountNext6h:snowfallAmountNext24h:sunrise:sunset:temperature:temperatureApparent:temperatureDewPoint:temperatureTodayMax:temperatureTodayMin:uvIndex:visibility:windDirection:windGust:windSpeed:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, double a14@<D4>, double a15@<D5>, double a16@<D6>, double a17@<D7>, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,char *a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,char a40,uint64_t a41,char a42,uint64_t a43,char a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48,uint64_t a49,char a50,double a51)
{
  int *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  double result;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v73;

  v67 = *a3;
  v73 = *a27;
  v56 = (int *)OUTLINED_FUNCTION_0_51();
  v57 = a9 + v56[5];
  v66 = v57;
  sub_1A6332C24();
  OUTLINED_FUNCTION_19_16(v57);
  v58 = a9 + v56[27];
  *(_QWORD *)v58 = 0;
  *(_BYTE *)(v58 + 8) = 1;
  v68 = v56[28];
  *(_BYTE *)(a9 + v68) = 3;
  v70 = a9 + v56[35];
  OUTLINED_FUNCTION_19_16(v70);
  v69 = a9 + v56[36];
  OUTLINED_FUNCTION_19_16(v69);
  v59 = a9 + v56[38];
  *(_QWORD *)v59 = 0;
  *(_BYTE *)(v59 + 8) = 1;
  v60 = a9 + v56[39];
  *(_QWORD *)v60 = 0;
  *(_BYTE *)(v60 + 8) = 1;
  v61 = a9 + v56[40];
  *(_QWORD *)v61 = 0;
  *(_BYTE *)(v61 + 8) = 1;
  v62 = a9 + v56[41];
  *(_QWORD *)v62 = 0;
  *(_BYTE *)(v62 + 8) = 1;
  v63 = a9 + v56[44];
  *(_QWORD *)v63 = 0;
  *(_BYTE *)(v63 + 8) = 1;
  v64 = a9 + v56[45];
  *(_QWORD *)v64 = 0;
  *(_BYTE *)(v64 + 8) = 1;
  sub_1A618D95C(a1, a9);
  sub_1A618D2C8(a2, v66);
  *(double *)(a9 + v56[6]) = a10;
  *(double *)(a9 + v56[7]) = a11;
  *(double *)(a9 + v56[8]) = a12;
  *(double *)(a9 + v56[9]) = a13;
  *(_BYTE *)(a9 + v56[10]) = v67;
  *(_BYTE *)(a9 + v56[11]) = a4;
  *(double *)(a9 + v56[12]) = a14;
  *(double *)(a9 + v56[13]) = a15;
  *(double *)(a9 + v56[14]) = a16;
  *(double *)(a9 + v56[15]) = a17;
  *(_QWORD *)(a9 + v56[16]) = a18;
  *(_QWORD *)(a9 + v56[17]) = a19;
  *(_QWORD *)(a9 + v56[18]) = a20;
  *(_QWORD *)(a9 + v56[19]) = a5;
  *(_QWORD *)(a9 + v56[20]) = a6;
  *(_QWORD *)(a9 + v56[21]) = a7;
  *(_QWORD *)(a9 + v56[22]) = a8;
  *(_QWORD *)(a9 + v56[23]) = a21;
  *(_QWORD *)(a9 + v56[24]) = a22;
  *(_QWORD *)(a9 + v56[25]) = a23;
  *(_QWORD *)(a9 + v56[26]) = a24;
  *(_QWORD *)v58 = a25;
  *(_BYTE *)(v58 + 8) = a26 & 1;
  *(_BYTE *)(a9 + v68) = v73;
  *(_QWORD *)(a9 + v56[29]) = a28;
  *(_QWORD *)(a9 + v56[30]) = a29;
  *(_QWORD *)(a9 + v56[31]) = a30;
  *(_QWORD *)(a9 + v56[32]) = a31;
  *(_QWORD *)(a9 + v56[33]) = a32;
  *(_QWORD *)(a9 + v56[34]) = a33;
  sub_1A618D2C8(a34, v70);
  sub_1A618D2C8(a35, v69);
  *(_QWORD *)(a9 + v56[37]) = a36;
  *(_QWORD *)v59 = a37;
  *(_BYTE *)(v59 + 8) = a38 & 1;
  *(_QWORD *)v60 = a39;
  *(_BYTE *)(v60 + 8) = a40 & 1;
  *(_QWORD *)v61 = a41;
  *(_BYTE *)(v61 + 8) = a42 & 1;
  *(_QWORD *)v62 = a43;
  *(_BYTE *)(v62 + 8) = a44 & 1;
  *(_QWORD *)(a9 + v56[42]) = a45;
  *(_QWORD *)(a9 + v56[43]) = a46;
  *(_QWORD *)v63 = a47;
  *(_BYTE *)(v63 + 8) = a48 & 1;
  *(_QWORD *)v64 = a49;
  *(_BYTE *)(v64 + 8) = a50 & 1;
  result = a51;
  *(double *)(a9 + v56[46]) = a51;
  return result;
}

uint64_t CurrentWeather.metadata.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A61CD678(a1, v1);
}

uint64_t (*CurrentWeather.metadata.modify())(void)
{
  return nullsub_1;
}

uint64_t CurrentWeather.asOf.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_0_51();
  return OUTLINED_FUNCTION_4_3(a1, v1 + *(int *)(v3 + 20));
}

uint64_t (*CurrentWeather.asOf.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.cloudCover.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_0_51() + 24)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*CurrentWeather.cloudCover.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.cloudCoverLowAltPct.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_0_51() + 28)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*CurrentWeather.cloudCoverLowAltPct.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.cloudCoverMidAltPct.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_0_51() + 32)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*CurrentWeather.cloudCoverMidAltPct.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.cloudCoverHighAltPct.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_0_51() + 36)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*CurrentWeather.cloudCoverHighAltPct.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.conditionCode.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_0_51() + 40)) = v2;
  OUTLINED_FUNCTION_29_1();
}

uint64_t (*CurrentWeather.conditionCode.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.daylight.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_0_51() + 44)) = a1;
  OUTLINED_FUNCTION_29_1();
}

uint64_t (*CurrentWeather.daylight.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.humidity.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_0_51() + 48)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*CurrentWeather.humidity.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.precipitationAmount1h.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_0_51() + 52)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*CurrentWeather.precipitationAmount1h.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.precipitationAmount6h.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_0_51() + 56)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*CurrentWeather.precipitationAmount6h.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.precipitationAmount24h.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_0_51() + 60)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*CurrentWeather.precipitationAmount24h.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

double CurrentWeather.precipitationAmountNext1h.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(OUTLINED_FUNCTION_0_51() + 64));
}

void CurrentWeather.precipitationAmountNext1h.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_0_51() + 64)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*CurrentWeather.precipitationAmountNext1h.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

double CurrentWeather.precipitationAmountNext6h.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(OUTLINED_FUNCTION_0_51() + 68));
}

void CurrentWeather.precipitationAmountNext6h.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_0_51() + 68)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*CurrentWeather.precipitationAmountNext6h.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.precipitationAmountNext24h.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_0_51() + 72)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*CurrentWeather.precipitationAmountNext24h.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

uint64_t CurrentWeather.precipitationAmountPrevious1hByType.getter()
{
  OUTLINED_FUNCTION_0_51();
  return sub_1A6334CDC();
}

void CurrentWeather.precipitationAmountPrevious1hByType.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_0_51() + 76);
  OUTLINED_FUNCTION_10_10();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*CurrentWeather.precipitationAmountPrevious1hByType.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

uint64_t CurrentWeather.precipitationAmountPrevious6hByType.getter()
{
  OUTLINED_FUNCTION_0_51();
  return sub_1A6334CDC();
}

void CurrentWeather.precipitationAmountPrevious6hByType.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_0_51() + 80);
  OUTLINED_FUNCTION_10_10();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*CurrentWeather.precipitationAmountPrevious6hByType.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.precipitationAmountPrevious24hByType.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_0_51() + 84);
  OUTLINED_FUNCTION_10_10();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*CurrentWeather.precipitationAmountPrevious24hByType.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

uint64_t CurrentWeather.precipitationAmountNext1hByType.getter()
{
  OUTLINED_FUNCTION_0_51();
  return sub_1A6334CDC();
}

void CurrentWeather.precipitationAmountNext1hByType.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_0_51() + 88);
  OUTLINED_FUNCTION_10_10();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*CurrentWeather.precipitationAmountNext1hByType.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

uint64_t CurrentWeather.precipitationAmountNext6hByType.getter()
{
  OUTLINED_FUNCTION_0_51();
  return sub_1A6334CDC();
}

void CurrentWeather.precipitationAmountNext6hByType.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_0_51() + 92);
  OUTLINED_FUNCTION_10_10();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*CurrentWeather.precipitationAmountNext6hByType.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.precipitationAmountNext24hByType.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_0_51() + 96);
  OUTLINED_FUNCTION_10_10();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*CurrentWeather.precipitationAmountNext24hByType.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.precipitationIntensity.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_0_51() + 100)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*CurrentWeather.precipitationIntensity.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

double CurrentWeather.perceivedPrecipitationIntensity.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(OUTLINED_FUNCTION_0_51() + 104));
}

void CurrentWeather.perceivedPrecipitationIntensity.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_0_51() + 104)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*CurrentWeather.perceivedPrecipitationIntensity.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.pressure.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_0_51();
  OUTLINED_FUNCTION_18(*(int *)(v0 + 108));
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*CurrentWeather.pressure.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.pressureTrend.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_0_51() + 112)) = v2;
  OUTLINED_FUNCTION_29_1();
}

uint64_t (*CurrentWeather.pressureTrend.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.snowfallAmount1h.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_0_51() + 116)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*CurrentWeather.snowfallAmount1h.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.snowfallAmount6h.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_0_51() + 120)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*CurrentWeather.snowfallAmount6h.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.snowfallAmount24h.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_0_51() + 124)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*CurrentWeather.snowfallAmount24h.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

double CurrentWeather.snowfallAmountNext1h.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(OUTLINED_FUNCTION_0_51() + 128));
}

void CurrentWeather.snowfallAmountNext1h.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_0_51() + 128)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*CurrentWeather.snowfallAmountNext1h.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

double CurrentWeather.snowfallAmountNext6h.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(OUTLINED_FUNCTION_0_51() + 132));
}

void CurrentWeather.snowfallAmountNext6h.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_0_51() + 132)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*CurrentWeather.snowfallAmountNext6h.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.snowfallAmountNext24h.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_0_51() + 136)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*CurrentWeather.snowfallAmountNext24h.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

uint64_t CurrentWeather.sunrise.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_0_51();
  return OUTLINED_FUNCTION_4_3(a1, v1 + *(int *)(v3 + 140));
}

uint64_t (*CurrentWeather.sunrise.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

uint64_t CurrentWeather.sunset.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_0_51();
  return OUTLINED_FUNCTION_4_3(a1, v1 + *(int *)(v3 + 144));
}

uint64_t (*CurrentWeather.sunset.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.temperature.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_0_51() + 148)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*CurrentWeather.temperature.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.temperatureApparent.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_0_51();
  OUTLINED_FUNCTION_18(*(int *)(v0 + 152));
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*CurrentWeather.temperatureApparent.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.temperatureDewPoint.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_0_51();
  OUTLINED_FUNCTION_18(*(int *)(v0 + 156));
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*CurrentWeather.temperatureDewPoint.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.temperatureTodayMax.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_0_51();
  OUTLINED_FUNCTION_18(*(int *)(v0 + 160));
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*CurrentWeather.temperatureTodayMax.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.temperatureTodayMin.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_0_51();
  OUTLINED_FUNCTION_18(*(int *)(v0 + 164));
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*CurrentWeather.temperatureTodayMin.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.uvIndex.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + *(int *)(OUTLINED_FUNCTION_0_51() + 168)) = a1;
  OUTLINED_FUNCTION_29_1();
}

uint64_t (*CurrentWeather.uvIndex.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.visibility.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_0_51() + 172)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*CurrentWeather.visibility.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.windDirection.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_0_51();
  OUTLINED_FUNCTION_18(*(int *)(v0 + 176));
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*CurrentWeather.windDirection.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.windGust.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_0_51();
  OUTLINED_FUNCTION_18(*(int *)(v0 + 180));
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*CurrentWeather.windGust.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

void CurrentWeather.windSpeed.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_0_51() + 184)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*CurrentWeather.windSpeed.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_51();
  return nullsub_1;
}

uint64_t sub_1A6295C64(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  char v21;

  v2 = a1 == 0x617461646174656DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1A6335ABC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1716482913 && a2 == 0xE400000000000000;
    if (v6 || (sub_1A6335ABC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x766F4364756F6C63 && a2 == 0xEA00000000007265;
      if (v7 || (sub_1A6335ABC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000013 && a2 == 0x80000001A634AB90 || (sub_1A6335ABC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000013 && a2 == 0x80000001A634ABB0 || (sub_1A6335ABC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x80000001A634ABD0 || (sub_1A6335ABC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        v8 = a1 == 0x6F697469646E6F63 && a2 == 0xED000065646F436ELL;
        if (v8 || (sub_1A6335ABC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else
        {
          v9 = a1 == 0x746867696C796164 && a2 == 0xE800000000000000;
          if (v9 || (sub_1A6335ABC() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            v10 = a1 == 0x79746964696D7568 && a2 == 0xE800000000000000;
            if (v10 || (sub_1A6335ABC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 8;
            }
            else if (a1 == 0xD000000000000015 && a2 == 0x80000001A634B740 || (sub_1A6335ABC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 9;
            }
            else if (a1 == 0xD000000000000015 && a2 == 0x80000001A634B760 || (sub_1A6335ABC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 10;
            }
            else if (a1 == 0xD000000000000016 && a2 == 0x80000001A634B780 || (sub_1A6335ABC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 11;
            }
            else if (a1 == 0xD000000000000019 && a2 == 0x80000001A634B7A0 || (sub_1A6335ABC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 12;
            }
            else if (a1 == 0xD000000000000019 && a2 == 0x80000001A634B7C0 || (sub_1A6335ABC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 13;
            }
            else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001A634B7E0 || (sub_1A6335ABC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 14;
            }
            else if (a1 == 0xD000000000000023 && a2 == 0x80000001A634B800 || (sub_1A6335ABC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 15;
            }
            else if (a1 == 0xD000000000000023 && a2 == 0x80000001A634B830 || (sub_1A6335ABC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 16;
            }
            else if (a1 == 0xD000000000000024 && a2 == 0x80000001A634B860 || (sub_1A6335ABC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 17;
            }
            else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001A634B890 || (sub_1A6335ABC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 18;
            }
            else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001A634B8B0 || (sub_1A6335ABC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 19;
            }
            else if (a1 == 0xD000000000000020 && a2 == 0x80000001A634B8D0 || (sub_1A6335ABC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 20;
            }
            else if (a1 == 0xD000000000000016 && a2 == 0x80000001A634A600 || (sub_1A6335ABC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 21;
            }
            else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001A634AC30 || (sub_1A6335ABC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 22;
            }
            else
            {
              v11 = a1 == 0x6572757373657270 && a2 == 0xE800000000000000;
              if (v11 || (sub_1A6335ABC() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 23;
              }
              else
              {
                v12 = a1 == 0x6572757373657270 && a2 == 0xED0000646E657254;
                if (v12 || (sub_1A6335ABC() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 24;
                }
                else if (a1 == 0xD000000000000010 && a2 == 0x80000001A634B900 || (sub_1A6335ABC() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 25;
                }
                else if (a1 == 0xD000000000000010 && a2 == 0x80000001A634B920 || (sub_1A6335ABC() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 26;
                }
                else if (a1 == 0xD000000000000011 && a2 == 0x80000001A634B940 || (sub_1A6335ABC() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 27;
                }
                else if (a1 == 0xD000000000000014 && a2 == 0x80000001A634B960 || (sub_1A6335ABC() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 28;
                }
                else if (a1 == 0xD000000000000014 && a2 == 0x80000001A634B980 || (sub_1A6335ABC() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 29;
                }
                else if (a1 == 0xD000000000000015 && a2 == 0x80000001A634B9A0 || (sub_1A6335ABC() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 30;
                }
                else
                {
                  v13 = a1 == 0x657369726E7573 && a2 == 0xE700000000000000;
                  if (v13 || (sub_1A6335ABC() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 31;
                  }
                  else
                  {
                    v14 = a1 == 0x7465736E7573 && a2 == 0xE600000000000000;
                    if (v14 || (sub_1A6335ABC() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 32;
                    }
                    else
                    {
                      v15 = a1 == 0x74617265706D6574 && a2 == 0xEB00000000657275;
                      if (v15 || (sub_1A6335ABC() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 33;
                      }
                      else if (a1 == 0xD000000000000013 && a2 == 0x80000001A634AC70 || (sub_1A6335ABC() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 34;
                      }
                      else if (a1 == 0xD000000000000013 && a2 == 0x80000001A634AC90 || (sub_1A6335ABC() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 35;
                      }
                      else if (a1 == 0xD000000000000013 && a2 == 0x80000001A634B9C0 || (sub_1A6335ABC() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 36;
                      }
                      else if (a1 == 0xD000000000000013 && a2 == 0x80000001A634B9E0 || (sub_1A6335ABC() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 37;
                      }
                      else
                      {
                        v16 = a1 == 0x7865646E497675 && a2 == 0xE700000000000000;
                        if (v16 || (sub_1A6335ABC() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 38;
                        }
                        else
                        {
                          v17 = a1 == 0x696C696269736976 && a2 == 0xEA00000000007974;
                          if (v17 || (sub_1A6335ABC() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 39;
                          }
                          else
                          {
                            v18 = a1 == 0x65726944646E6977 && a2 == 0xED00006E6F697463;
                            if (v18 || (sub_1A6335ABC() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 40;
                            }
                            else
                            {
                              v19 = a1 == 0x74737547646E6977 && a2 == 0xE800000000000000;
                              if (v19 || (sub_1A6335ABC() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 41;
                              }
                              else if (a1 == 0x65657053646E6977 && a2 == 0xE900000000000064)
                              {
                                swift_bridgeObjectRelease();
                                return 42;
                              }
                              else
                              {
                                v21 = sub_1A6335ABC();
                                swift_bridgeObjectRelease();
                                if ((v21 & 1) != 0)
                                  return 42;
                                else
                                  return 43;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1A6296BF4()
{
  return 43;
}

uint64_t sub_1A6296BFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A6295C64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A6296C20@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A6296BF4();
  *a1 = result;
  return result;
}

uint64_t sub_1A6296C44()
{
  sub_1A618B450();
  return sub_1A6335C18();
}

uint64_t sub_1A6296C6C()
{
  sub_1A618B450();
  return sub_1A6335C24();
}

void sub_1A6296C94()
{
  static CurrentWeather.read(from:)();
}

void sub_1A6296CA8()
{
  CurrentWeather.write(to:)();
}

char *initializeBufferWithCopyOfBuffer for CurrentWeather(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A6332C24();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = (int *)type metadata accessor for Metadata();
    v8(&a1[v9[5]], &a2[v9[5]], v7);
    v10 = v9[6];
    v11 = &a1[v10];
    v12 = &a2[v10];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v10], 1, v7))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v8(v11, v12, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v7);
    }
    *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
    *(_QWORD *)&a1[v9[8]] = *(_QWORD *)&a2[v9[8]];
    *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
    v15 = v9[10];
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v18;
    v19 = v9[11];
    v20 = &a1[v19];
    v21 = &a2[v19];
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    v23 = v9[12];
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v26;
    a1[v9[13]] = a2[v9[13]];
    a1[v9[14]] = a2[v9[14]];
    v27 = v9[15];
    v28 = &a1[v27];
    v29 = &a2[v27];
    v30 = *((_QWORD *)v29 + 1);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *((_QWORD *)v28 + 1) = v30;
    v31 = a3[5];
    v32 = &a1[v31];
    v33 = &a2[v31];
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v7))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      v8(v32, v33, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v7);
    }
    v35 = a3[7];
    *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
    *(_QWORD *)&a1[v35] = *(_QWORD *)&a2[v35];
    v36 = a3[9];
    *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
    *(_QWORD *)&a1[v36] = *(_QWORD *)&a2[v36];
    v37 = a3[11];
    a1[a3[10]] = a2[a3[10]];
    a1[v37] = a2[v37];
    v38 = a3[13];
    *(_QWORD *)&a1[a3[12]] = *(_QWORD *)&a2[a3[12]];
    *(_QWORD *)&a1[v38] = *(_QWORD *)&a2[v38];
    v39 = a3[15];
    *(_QWORD *)&a1[a3[14]] = *(_QWORD *)&a2[a3[14]];
    *(_QWORD *)&a1[v39] = *(_QWORD *)&a2[v39];
    v40 = a3[17];
    *(_QWORD *)&a1[a3[16]] = *(_QWORD *)&a2[a3[16]];
    *(_QWORD *)&a1[v40] = *(_QWORD *)&a2[v40];
    v41 = a3[19];
    *(_QWORD *)&a1[a3[18]] = *(_QWORD *)&a2[a3[18]];
    *(_QWORD *)&a1[v41] = *(_QWORD *)&a2[v41];
    v42 = a3[21];
    *(_QWORD *)&a1[a3[20]] = *(_QWORD *)&a2[a3[20]];
    *(_QWORD *)&a1[v42] = *(_QWORD *)&a2[v42];
    v43 = a3[23];
    *(_QWORD *)&a1[a3[22]] = *(_QWORD *)&a2[a3[22]];
    *(_QWORD *)&a1[v43] = *(_QWORD *)&a2[v43];
    v44 = a3[25];
    *(_QWORD *)&a1[a3[24]] = *(_QWORD *)&a2[a3[24]];
    *(_QWORD *)&a1[v44] = *(_QWORD *)&a2[v44];
    v45 = a3[27];
    *(_QWORD *)&a1[a3[26]] = *(_QWORD *)&a2[a3[26]];
    v46 = &a1[v45];
    v47 = &a2[v45];
    *(_QWORD *)v46 = *(_QWORD *)v47;
    v46[8] = v47[8];
    v48 = a3[29];
    a1[a3[28]] = a2[a3[28]];
    *(_QWORD *)&a1[v48] = *(_QWORD *)&a2[v48];
    v49 = a3[31];
    *(_QWORD *)&a1[a3[30]] = *(_QWORD *)&a2[a3[30]];
    *(_QWORD *)&a1[v49] = *(_QWORD *)&a2[v49];
    v50 = a3[33];
    *(_QWORD *)&a1[a3[32]] = *(_QWORD *)&a2[a3[32]];
    *(_QWORD *)&a1[v50] = *(_QWORD *)&a2[v50];
    v51 = a3[35];
    *(_QWORD *)&a1[a3[34]] = *(_QWORD *)&a2[a3[34]];
    v52 = &a1[v51];
    v53 = &a2[v51];
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
    if (__swift_getEnumTagSinglePayload((uint64_t)v53, 1, v7))
    {
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      v55 = v8;
    }
    else
    {
      v55 = v8;
      v8(v52, v53, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v52, 0, 1, v7);
    }
    v56 = a3[36];
    v57 = &a1[v56];
    v58 = &a2[v56];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v56], 1, v7))
    {
      v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      v55(v57, v58, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v57, 0, 1, v7);
    }
    v60 = a3[38];
    *(_QWORD *)&a1[a3[37]] = *(_QWORD *)&a2[a3[37]];
    v61 = &a1[v60];
    v62 = &a2[v60];
    v61[8] = v62[8];
    *(_QWORD *)v61 = *(_QWORD *)v62;
    v63 = a3[39];
    v64 = a3[40];
    v65 = &a1[v63];
    v66 = &a2[v63];
    v65[8] = v66[8];
    *(_QWORD *)v65 = *(_QWORD *)v66;
    v67 = &a1[v64];
    v68 = &a2[v64];
    *(_QWORD *)v67 = *(_QWORD *)v68;
    v67[8] = v68[8];
    v69 = a3[41];
    v70 = a3[42];
    v71 = &a1[v69];
    v72 = &a2[v69];
    *(_QWORD *)v71 = *(_QWORD *)v72;
    v71[8] = v72[8];
    *(_QWORD *)&a1[v70] = *(_QWORD *)&a2[v70];
    v73 = a3[44];
    *(_QWORD *)&a1[a3[43]] = *(_QWORD *)&a2[a3[43]];
    v74 = &a1[v73];
    v75 = &a2[v73];
    *(_QWORD *)v74 = *(_QWORD *)v75;
    v74[8] = v75[8];
    v76 = a3[45];
    v77 = a3[46];
    v78 = &a1[v76];
    v79 = &a2[v76];
    *(_QWORD *)v78 = *(_QWORD *)v79;
    v78[8] = v79[8];
    *(_QWORD *)&a1[v77] = *(_QWORD *)&a2[v77];
  }
  return a1;
}

char *assignWithCopy for CurrentWeather(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int EnumTagSinglePayload;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;

  v6 = sub_1A6332C24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = (int *)type metadata accessor for Metadata();
  v8(&a1[v9[5]], &a2[v9[5]], v6);
  v10 = v9[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v10], 1, v6);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v8(v11, v12, v6);
LABEL_7:
  *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
  *(_QWORD *)&a1[v9[8]] = *(_QWORD *)&a2[v9[8]];
  *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
  v16 = v9[10];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v19 = v9[11];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v22 = v9[12];
  v23 = &a1[v22];
  v24 = &a2[v22];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  a1[v9[13]] = a2[v9[13]];
  a1[v9[14]] = a2[v9[14]];
  v25 = v9[15];
  v26 = &a1[v25];
  v27 = &a2[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  v28 = a3[5];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v28], 1, v6);
  v32 = __swift_getEnumTagSinglePayload((uint64_t)v30, 1, v6);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v29, v30, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v29, v6);
LABEL_12:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_13;
  }
  v8(v29, v30, v6);
LABEL_13:
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  a1[a3[10]] = a2[a3[10]];
  a1[a3[11]] = a2[a3[11]];
  *(_QWORD *)&a1[a3[12]] = *(_QWORD *)&a2[a3[12]];
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  *(_QWORD *)&a1[a3[14]] = *(_QWORD *)&a2[a3[14]];
  *(_QWORD *)&a1[a3[15]] = *(_QWORD *)&a2[a3[15]];
  *(_QWORD *)&a1[a3[16]] = *(_QWORD *)&a2[a3[16]];
  *(_QWORD *)&a1[a3[17]] = *(_QWORD *)&a2[a3[17]];
  *(_QWORD *)&a1[a3[18]] = *(_QWORD *)&a2[a3[18]];
  *(_QWORD *)&a1[a3[19]] = *(_QWORD *)&a2[a3[19]];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[20]] = *(_QWORD *)&a2[a3[20]];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[21]] = *(_QWORD *)&a2[a3[21]];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[22]] = *(_QWORD *)&a2[a3[22]];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[23]] = *(_QWORD *)&a2[a3[23]];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[24]] = *(_QWORD *)&a2[a3[24]];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[25]] = *(_QWORD *)&a2[a3[25]];
  *(_QWORD *)&a1[a3[26]] = *(_QWORD *)&a2[a3[26]];
  v34 = a3[27];
  v35 = &a1[v34];
  v36 = &a2[v34];
  v37 = *(_QWORD *)v36;
  v35[8] = v36[8];
  *(_QWORD *)v35 = v37;
  a1[a3[28]] = a2[a3[28]];
  *(_QWORD *)&a1[a3[29]] = *(_QWORD *)&a2[a3[29]];
  *(_QWORD *)&a1[a3[30]] = *(_QWORD *)&a2[a3[30]];
  *(_QWORD *)&a1[a3[31]] = *(_QWORD *)&a2[a3[31]];
  *(_QWORD *)&a1[a3[32]] = *(_QWORD *)&a2[a3[32]];
  *(_QWORD *)&a1[a3[33]] = *(_QWORD *)&a2[a3[33]];
  *(_QWORD *)&a1[a3[34]] = *(_QWORD *)&a2[a3[34]];
  v38 = a3[35];
  v39 = &a1[v38];
  v40 = &a2[v38];
  v41 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v38], 1, v6);
  v42 = __swift_getEnumTagSinglePayload((uint64_t)v40, 1, v6);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v39, v40, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v42)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v39, v6);
LABEL_18:
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_19;
  }
  v8(v39, v40, v6);
LABEL_19:
  v44 = a3[36];
  v45 = &a1[v44];
  v46 = &a2[v44];
  v47 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v44], 1, v6);
  v48 = __swift_getEnumTagSinglePayload((uint64_t)v46, 1, v6);
  if (!v47)
  {
    if (!v48)
    {
      v8(v45, v46, v6);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v45, v6);
    goto LABEL_24;
  }
  if (v48)
  {
LABEL_24:
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v45, v46, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, v6);
LABEL_25:
  *(_QWORD *)&a1[a3[37]] = *(_QWORD *)&a2[a3[37]];
  v50 = a3[38];
  v51 = &a1[v50];
  v52 = &a2[v50];
  v53 = *(_QWORD *)v52;
  v51[8] = v52[8];
  *(_QWORD *)v51 = v53;
  v54 = a3[39];
  v55 = &a1[v54];
  v56 = &a2[v54];
  v57 = *(_QWORD *)v56;
  v55[8] = v56[8];
  *(_QWORD *)v55 = v57;
  v58 = a3[40];
  v59 = &a1[v58];
  v60 = &a2[v58];
  v61 = *(_QWORD *)v60;
  v59[8] = v60[8];
  *(_QWORD *)v59 = v61;
  v62 = a3[41];
  v63 = &a1[v62];
  v64 = &a2[v62];
  v65 = *(_QWORD *)v64;
  v63[8] = v64[8];
  *(_QWORD *)v63 = v65;
  *(_QWORD *)&a1[a3[42]] = *(_QWORD *)&a2[a3[42]];
  *(_QWORD *)&a1[a3[43]] = *(_QWORD *)&a2[a3[43]];
  v66 = a3[44];
  v67 = &a1[v66];
  v68 = &a2[v66];
  v69 = *(_QWORD *)v68;
  v67[8] = v68[8];
  *(_QWORD *)v67 = v69;
  v70 = a3[45];
  v71 = &a1[v70];
  v72 = &a2[v70];
  v73 = *(_QWORD *)v72;
  v71[8] = v72[8];
  *(_QWORD *)v71 = v73;
  *(_QWORD *)&a1[a3[46]] = *(_QWORD *)&a2[a3[46]];
  return a1;
}

char *initializeWithTake for CurrentWeather(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;

  v6 = sub_1A6332C24();
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for Metadata();
  v7(&a1[v8[5]], &a2[v8[5]], v6);
  v9 = v8[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v9], 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v7(v10, v11, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
  }
  *(_QWORD *)&a1[v8[7]] = *(_QWORD *)&a2[v8[7]];
  *(_QWORD *)&a1[v8[8]] = *(_QWORD *)&a2[v8[8]];
  *(_QWORD *)&a1[v8[9]] = *(_QWORD *)&a2[v8[9]];
  *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
  *(_OWORD *)&a1[v8[11]] = *(_OWORD *)&a2[v8[11]];
  *(_OWORD *)&a1[v8[12]] = *(_OWORD *)&a2[v8[12]];
  a1[v8[13]] = a2[v8[13]];
  a1[v8[14]] = a2[v8[14]];
  *(_OWORD *)&a1[v8[15]] = *(_OWORD *)&a2[v8[15]];
  v13 = a3[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v13], 1, v6))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v7(v14, v15, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v6);
  }
  v17 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  *(_QWORD *)&a1[v17] = *(_QWORD *)&a2[v17];
  v18 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  *(_QWORD *)&a1[v18] = *(_QWORD *)&a2[v18];
  v19 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  a1[v19] = a2[v19];
  v20 = a3[13];
  *(_QWORD *)&a1[a3[12]] = *(_QWORD *)&a2[a3[12]];
  *(_QWORD *)&a1[v20] = *(_QWORD *)&a2[v20];
  v21 = a3[15];
  *(_QWORD *)&a1[a3[14]] = *(_QWORD *)&a2[a3[14]];
  *(_QWORD *)&a1[v21] = *(_QWORD *)&a2[v21];
  v22 = a3[17];
  *(_QWORD *)&a1[a3[16]] = *(_QWORD *)&a2[a3[16]];
  *(_QWORD *)&a1[v22] = *(_QWORD *)&a2[v22];
  v23 = a3[19];
  *(_QWORD *)&a1[a3[18]] = *(_QWORD *)&a2[a3[18]];
  *(_QWORD *)&a1[v23] = *(_QWORD *)&a2[v23];
  v24 = a3[21];
  *(_QWORD *)&a1[a3[20]] = *(_QWORD *)&a2[a3[20]];
  *(_QWORD *)&a1[v24] = *(_QWORD *)&a2[v24];
  v25 = a3[23];
  *(_QWORD *)&a1[a3[22]] = *(_QWORD *)&a2[a3[22]];
  *(_QWORD *)&a1[v25] = *(_QWORD *)&a2[v25];
  v26 = a3[25];
  *(_QWORD *)&a1[a3[24]] = *(_QWORD *)&a2[a3[24]];
  *(_QWORD *)&a1[v26] = *(_QWORD *)&a2[v26];
  v27 = a3[27];
  *(_QWORD *)&a1[a3[26]] = *(_QWORD *)&a2[a3[26]];
  v28 = &a1[v27];
  v29 = &a2[v27];
  *(_QWORD *)v28 = *(_QWORD *)v29;
  v28[8] = v29[8];
  v30 = a3[29];
  a1[a3[28]] = a2[a3[28]];
  *(_QWORD *)&a1[v30] = *(_QWORD *)&a2[v30];
  v31 = a3[31];
  *(_QWORD *)&a1[a3[30]] = *(_QWORD *)&a2[a3[30]];
  *(_QWORD *)&a1[v31] = *(_QWORD *)&a2[v31];
  v32 = a3[33];
  *(_QWORD *)&a1[a3[32]] = *(_QWORD *)&a2[a3[32]];
  *(_QWORD *)&a1[v32] = *(_QWORD *)&a2[v32];
  v33 = a3[35];
  *(_QWORD *)&a1[a3[34]] = *(_QWORD *)&a2[a3[34]];
  v34 = &a1[v33];
  v35 = &a2[v33];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v33], 1, v6))
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    v7(v34, v35, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v6);
  }
  v37 = a3[36];
  v38 = &a1[v37];
  v39 = &a2[v37];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v37], 1, v6))
  {
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    v7(v38, v39, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v6);
  }
  v41 = a3[38];
  *(_QWORD *)&a1[a3[37]] = *(_QWORD *)&a2[a3[37]];
  v42 = &a1[v41];
  v43 = &a2[v41];
  v42[8] = v43[8];
  *(_QWORD *)v42 = *(_QWORD *)v43;
  v44 = a3[39];
  v45 = a3[40];
  v46 = &a1[v44];
  v47 = &a2[v44];
  v46[8] = v47[8];
  *(_QWORD *)v46 = *(_QWORD *)v47;
  v48 = &a1[v45];
  v49 = &a2[v45];
  *(_QWORD *)v48 = *(_QWORD *)v49;
  v48[8] = v49[8];
  v50 = a3[41];
  v51 = a3[42];
  v52 = &a1[v50];
  v53 = &a2[v50];
  *(_QWORD *)v52 = *(_QWORD *)v53;
  v52[8] = v53[8];
  *(_QWORD *)&a1[v51] = *(_QWORD *)&a2[v51];
  v54 = a3[44];
  *(_QWORD *)&a1[a3[43]] = *(_QWORD *)&a2[a3[43]];
  v55 = &a1[v54];
  v56 = &a2[v54];
  *(_QWORD *)v55 = *(_QWORD *)v56;
  v55[8] = v56[8];
  v57 = a3[45];
  v58 = a3[46];
  v59 = &a1[v57];
  v60 = &a2[v57];
  *(_QWORD *)v59 = *(_QWORD *)v60;
  v59[8] = v60[8];
  *(_QWORD *)&a1[v58] = *(_QWORD *)&a2[v58];
  return a1;
}

char *assignWithTake for CurrentWeather(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int EnumTagSinglePayload;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;

  v6 = sub_1A6332C24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = (int *)type metadata accessor for Metadata();
  v8(&a1[v9[5]], &a2[v9[5]], v6);
  v10 = v9[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v10], 1, v6);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v8(v11, v12, v6);
LABEL_7:
  *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
  *(_QWORD *)&a1[v9[8]] = *(_QWORD *)&a2[v9[8]];
  *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
  v16 = v9[10];
  v17 = &a1[v16];
  v18 = (uint64_t *)&a2[v16];
  v20 = *v18;
  v19 = v18[1];
  *(_QWORD *)v17 = v20;
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v21 = v9[11];
  v22 = &a1[v21];
  v23 = (uint64_t *)&a2[v21];
  v25 = *v23;
  v24 = v23[1];
  *(_QWORD *)v22 = v25;
  *((_QWORD *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  v26 = v9[12];
  v27 = &a1[v26];
  v28 = (uint64_t *)&a2[v26];
  v30 = *v28;
  v29 = v28[1];
  *(_QWORD *)v27 = v30;
  *((_QWORD *)v27 + 1) = v29;
  swift_bridgeObjectRelease();
  a1[v9[13]] = a2[v9[13]];
  a1[v9[14]] = a2[v9[14]];
  v31 = v9[15];
  v32 = &a1[v31];
  v33 = (uint64_t *)&a2[v31];
  v35 = *v33;
  v34 = v33[1];
  *(_QWORD *)v32 = v35;
  *((_QWORD *)v32 + 1) = v34;
  swift_bridgeObjectRelease();
  v36 = a3[5];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v36], 1, v6);
  v40 = __swift_getEnumTagSinglePayload((uint64_t)v38, 1, v6);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v37, v38, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v37, v6);
LABEL_12:
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_13;
  }
  v8(v37, v38, v6);
LABEL_13:
  v42 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  *(_QWORD *)&a1[v42] = *(_QWORD *)&a2[v42];
  v43 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  *(_QWORD *)&a1[v43] = *(_QWORD *)&a2[v43];
  v44 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  a1[v44] = a2[v44];
  v45 = a3[13];
  *(_QWORD *)&a1[a3[12]] = *(_QWORD *)&a2[a3[12]];
  *(_QWORD *)&a1[v45] = *(_QWORD *)&a2[v45];
  v46 = a3[15];
  *(_QWORD *)&a1[a3[14]] = *(_QWORD *)&a2[a3[14]];
  *(_QWORD *)&a1[v46] = *(_QWORD *)&a2[v46];
  v47 = a3[17];
  *(_QWORD *)&a1[a3[16]] = *(_QWORD *)&a2[a3[16]];
  *(_QWORD *)&a1[v47] = *(_QWORD *)&a2[v47];
  v48 = a3[19];
  *(_QWORD *)&a1[a3[18]] = *(_QWORD *)&a2[a3[18]];
  *(_QWORD *)&a1[v48] = *(_QWORD *)&a2[v48];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[20]] = *(_QWORD *)&a2[a3[20]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[21]] = *(_QWORD *)&a2[a3[21]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[22]] = *(_QWORD *)&a2[a3[22]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[23]] = *(_QWORD *)&a2[a3[23]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[24]] = *(_QWORD *)&a2[a3[24]];
  swift_bridgeObjectRelease();
  v49 = a3[26];
  *(_QWORD *)&a1[a3[25]] = *(_QWORD *)&a2[a3[25]];
  *(_QWORD *)&a1[v49] = *(_QWORD *)&a2[v49];
  v50 = a3[27];
  v51 = a3[28];
  v52 = &a1[v50];
  v53 = &a2[v50];
  v52[8] = v53[8];
  *(_QWORD *)v52 = *(_QWORD *)v53;
  a1[v51] = a2[v51];
  v54 = a3[30];
  *(_QWORD *)&a1[a3[29]] = *(_QWORD *)&a2[a3[29]];
  *(_QWORD *)&a1[v54] = *(_QWORD *)&a2[v54];
  v55 = a3[32];
  *(_QWORD *)&a1[a3[31]] = *(_QWORD *)&a2[a3[31]];
  *(_QWORD *)&a1[v55] = *(_QWORD *)&a2[v55];
  v56 = a3[34];
  *(_QWORD *)&a1[a3[33]] = *(_QWORD *)&a2[a3[33]];
  v57 = a3[35];
  v58 = &a1[v57];
  v59 = &a2[v57];
  *(_QWORD *)&a1[v56] = *(_QWORD *)&a2[v56];
  v60 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v57], 1, v6);
  v61 = __swift_getEnumTagSinglePayload((uint64_t)v59, 1, v6);
  if (v60)
  {
    if (!v61)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v58, v59, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v61)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v58, v6);
LABEL_18:
    v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    goto LABEL_19;
  }
  v8(v58, v59, v6);
LABEL_19:
  v63 = a3[36];
  v64 = &a1[v63];
  v65 = &a2[v63];
  v66 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v63], 1, v6);
  v67 = __swift_getEnumTagSinglePayload((uint64_t)v65, 1, v6);
  if (!v66)
  {
    if (!v67)
    {
      v8(v64, v65, v6);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v64, v6);
    goto LABEL_24;
  }
  if (v67)
  {
LABEL_24:
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v64, v65, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v6);
LABEL_25:
  v69 = a3[38];
  *(_QWORD *)&a1[a3[37]] = *(_QWORD *)&a2[a3[37]];
  v70 = &a1[v69];
  v71 = &a2[v69];
  v70[8] = v71[8];
  *(_QWORD *)v70 = *(_QWORD *)v71;
  v72 = a3[39];
  v73 = a3[40];
  v74 = &a1[v72];
  v75 = &a2[v72];
  v74[8] = v75[8];
  *(_QWORD *)v74 = *(_QWORD *)v75;
  v76 = &a1[v73];
  v77 = &a2[v73];
  *(_QWORD *)v76 = *(_QWORD *)v77;
  v76[8] = v77[8];
  v78 = a3[41];
  v79 = a3[42];
  v80 = &a1[v78];
  v81 = &a2[v78];
  *(_QWORD *)v80 = *(_QWORD *)v81;
  v80[8] = v81[8];
  *(_QWORD *)&a1[v79] = *(_QWORD *)&a2[v79];
  v82 = a3[44];
  *(_QWORD *)&a1[a3[43]] = *(_QWORD *)&a2[a3[43]];
  v83 = &a1[v82];
  v84 = &a2[v82];
  *(_QWORD *)v83 = *(_QWORD *)v84;
  v83[8] = v84[8];
  v85 = a3[45];
  v86 = a3[46];
  v87 = &a1[v85];
  v88 = &a2[v85];
  *(_QWORD *)v87 = *(_QWORD *)v88;
  v87[8] = v88[8];
  *(_QWORD *)&a1[v86] = *(_QWORD *)&a2[v86];
  return a1;
}

uint64_t sub_1A629835C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v11;

  v6 = OUTLINED_FUNCTION_8_1();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
    return __swift_getEnumTagSinglePayload(v8, v3, v7);
  }
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v9;
    v8 = v4 + *(int *)(a3 + 20);
    return __swift_getEnumTagSinglePayload(v8, v3, v7);
  }
  v11 = *(_QWORD *)(v4 + *(int *)(a3 + 76));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

void sub_1A62983F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = OUTLINED_FUNCTION_8_1();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
LABEL_5:
    __swift_storeEnumTagSinglePayload(v10, v4, v4, v9);
    return;
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
  {
    v9 = v11;
    v10 = v5 + *(int *)(a4 + 20);
    goto LABEL_5;
  }
  *(_QWORD *)(v5 + *(int *)(a4 + 76)) = (v4 - 1);
  OUTLINED_FUNCTION_3_1();
}

unint64_t sub_1A6298484()
{
  unint64_t result;

  result = qword_1EE847DA8;
  if (!qword_1EE847DA8)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A63409C4, &type metadata for CurrentWeather.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847DA8);
  }
  return result;
}

void static ForecastCondition.read(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_17_1();
  v5 = v4;
  v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_130_0();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_58_3();
  if (!v0)
  {
    OUTLINED_FUNCTION_10_20();
    v12 = sub_1A6335264();
    OUTLINED_FUNCTION_10_20();
    v23 = v21;
    v20 = v22;
    OUTLINED_FUNCTION_0_0();
    OUTLINED_FUNCTION_115_0();
    v19 = v7 + v13;
    OUTLINED_FUNCTION_103();
    __swift_storeEnumTagSinglePayload(v14, v15, v16, v1);
    v17 = (_QWORD *)(v7 + *(int *)(v5 + 28));
    *v17 = 0;
    v17[1] = 0;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v7, v2, v1);
    sub_1A618D2C8((uint64_t)v10, v19);
    *(_QWORD *)(v7 + *(int *)(v5 + 24)) = v12;
    swift_bridgeObjectRelease();
    v18 = v20;
    *v17 = v23;
    v17[1] = v18;
  }
  OUTLINED_FUNCTION_92_1();
  OUTLINED_FUNCTION_1();
}

void ForecastCondition.write(to:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_55_2();
  if (!v0)
  {
    OUTLINED_FUNCTION_0_0();
    OUTLINED_FUNCTION_63_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_6();
    sub_1A6335270();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21BA08);
    OUTLINED_FUNCTION_2_39();
  }
  OUTLINED_FUNCTION_52_2();
}

void static HistoricalFact.read(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, unsigned __int8 a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;

  OUTLINED_FUNCTION_17_1();
  v15 = v14;
  OUTLINED_FUNCTION_402();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_9_20();
  if (!v13)
  {
    if (a13 == 2)
    {
      v19 = 1;
    }
    else
    {
      if (a13 != 1)
        goto LABEL_8;
      v19 = 0;
    }
    OUTLINED_FUNCTION_9_20();
    v20 = a12 - 1;
    if (v20 <= 2)
    {
      v21 = OUTLINED_FUNCTION_90_0();
      v23 = v22;
      v24 = OUTLINED_FUNCTION_90_0();
      v29 = v28;
      v36 = v24;
      v33 = OUTLINED_FUNCTION_90_0();
      v35 = v30;
      v34 = sub_1A6298B30();
      sub_1A6298B6C();
      v34 = OUTLINED_FUNCTION_69_1();
      OUTLINED_FUNCTION_91_1((uint64_t)v18);
      *(_BYTE *)v15 = v19;
      *(_BYTE *)(v15 + 1) = v20;
      *(_QWORD *)(v15 + 8) = v21;
      *(_QWORD *)(v15 + 16) = v23;
      *(_QWORD *)(v15 + 24) = v36;
      *(_QWORD *)(v15 + 32) = v29;
      v31 = v35;
      *(_QWORD *)(v15 + 40) = v33;
      *(_QWORD *)(v15 + 48) = v31;
      *(_QWORD *)(v15 + 56) = v34;
      v32 = OUTLINED_FUNCTION_113_0();
      sub_1A618D95C((uint64_t)v18, v15 + *(int *)(v32 + 40));
      goto LABEL_9;
    }
LABEL_8:
    OUTLINED_FUNCTION_39_4();
    sub_1A618B274(&qword_1EE847DB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB36B0], MEMORY[0x1E0DB36B8]);
    v25 = OUTLINED_FUNCTION_5_27();
    v27 = OUTLINED_FUNCTION_43_4(v25, v26);
    OUTLINED_FUNCTION_11_21(v27, *MEMORY[0x1E0DB36A8]);
    OUTLINED_FUNCTION_732();
  }
LABEL_9:
  OUTLINED_FUNCTION_92_1();
  OUTLINED_FUNCTION_1();
}

void HistoricalFact.write(to:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_22_13();
  if (!v0)
  {
    OUTLINED_FUNCTION_87_1();
    OUTLINED_FUNCTION_86_1();
    OUTLINED_FUNCTION_86_1();
    OUTLINED_FUNCTION_86_1();
    sub_1A6298B30();
    sub_1A6298B6C();
    OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_113_0();
    OUTLINED_FUNCTION_97_0();
    Metadata.write(to:)();
  }
  OUTLINED_FUNCTION_27_8();
}

void static HistoricalFact.Condition.read(from:)(char *a1@<X8>)
{
  sub_1A6298D3C(a1);
}

void HistoricalFact.Condition.write(to:)()
{
  sub_1A62A082C();
}

void static HistoricalFact.Period.read(from:)(_BYTE *a1@<X8>)
{
  sub_1A629A0A0(a1);
}

unint64_t sub_1A6298B30()
{
  unint64_t result;

  result = qword_1EE847DB8;
  if (!qword_1EE847DB8)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for HistoricalFact.Argument, &type metadata for HistoricalFact.Argument);
    atomic_store(result, (unint64_t *)&qword_1EE847DB8);
  }
  return result;
}

unint64_t sub_1A6298B6C()
{
  unint64_t result;

  result = qword_1EE847DC0;
  if (!qword_1EE847DC0)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for HistoricalFact.Argument, &type metadata for HistoricalFact.Argument);
    atomic_store(result, (unint64_t *)&qword_1EE847DC0);
  }
  return result;
}

void HistoricalFact.Period.write(to:)()
{
  sub_1A629A148();
}

void static HistoricalFact.Argument.read(from:)(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  v3 = sub_1A6335384();
  if (!v1)
  {
    v5 = v3;
    v6 = v4;
    OUTLINED_FUNCTION_6_27();
    OUTLINED_FUNCTION_10_20();
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 24) = v7;
  }
  OUTLINED_FUNCTION_52_2();
}

uint64_t HistoricalFact.Argument.write(to:)()
{
  uint64_t v0;
  uint64_t result;

  result = sub_1A6335390();
  if (!v0)
  {
    OUTLINED_FUNCTION_0_52();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21BA08);
    return OUTLINED_FUNCTION_2_39();
  }
  return result;
}

void static DayPartType.read(from:)(char *a1@<X8>)
{
  sub_1A6298D3C(a1);
}

void sub_1A6298D3C(char *a1@<X8>)
{
  uint64_t v1;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  OUTLINED_FUNCTION_14_0();
  if (!v1)
  {
    if (v7 == 1)
    {
      v3 = 0;
    }
    else
    {
      if (v7 != 2)
      {
        OUTLINED_FUNCTION_39_4();
        sub_1A618B274(&qword_1EE847DB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB36B0], MEMORY[0x1E0DB36B8]);
        v4 = OUTLINED_FUNCTION_5_27();
        v6 = OUTLINED_FUNCTION_43_4(v4, v5);
        OUTLINED_FUNCTION_11_21(v6, *MEMORY[0x1E0DB36A8]);
        OUTLINED_FUNCTION_732();
        goto LABEL_8;
      }
      v3 = 1;
    }
    *a1 = v3;
  }
LABEL_8:
  OUTLINED_FUNCTION_25_10();
}

void DayPartType.write(to:)()
{
  sub_1A62A082C();
}

void static WeatherComparison.read(from:)(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;

  v4 = OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_81_1();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_402();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_2();
  v11 = v10 - v9;
  OUTLINED_FUNCTION_6_27();
  if (!v1)
  {
    if (v23 == 1)
    {
      OUTLINED_FUNCTION_91_1(v11);
      OUTLINED_FUNCTION_128_0();
      static WeatherComparison.Condition.read(from:)(v12);
      v13 = v25;
      OUTLINED_FUNCTION_6_27();
      v14 = v23;
      OUTLINED_FUNCTION_6_27();
      v15 = v22;
      OUTLINED_FUNCTION_128_0();
      static Urgency.read(from:)(v16);
      v17 = v24;
      OUTLINED_FUNCTION_70_1();
      sub_1A618D95C(v11, a1);
      v21 = (int *)OUTLINED_FUNCTION_109_1();
      *(_BYTE *)(a1 + v21[6]) = v13;
      *(_QWORD *)(a1 + v21[7]) = v14;
      *(_QWORD *)(a1 + v21[8]) = v15;
      *(_BYTE *)(a1 + v21[9]) = v17;
      (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(a1 + v21[10], v7, v4);
    }
    else
    {
      OUTLINED_FUNCTION_39_4();
      sub_1A618B274(&qword_1EE847DB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB36B0], MEMORY[0x1E0DB36B8]);
      v18 = OUTLINED_FUNCTION_5_27();
      v20 = OUTLINED_FUNCTION_43_4(v18, v19);
      OUTLINED_FUNCTION_11_21(v20, *MEMORY[0x1E0DB36A8]);
      OUTLINED_FUNCTION_732();
    }
  }
  OUTLINED_FUNCTION_68_2();
}

void WeatherComparison.write(to:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_105_1();
  if (!v0)
  {
    Metadata.write(to:)();
    OUTLINED_FUNCTION_109_1();
    OUTLINED_FUNCTION_97_0();
    WeatherComparison.Condition.write(to:)();
    OUTLINED_FUNCTION_87_1();
    OUTLINED_FUNCTION_87_1();
    OUTLINED_FUNCTION_97_0();
    Urgency.write(to:)();
    OUTLINED_FUNCTION_97_0();
    sub_1A6332B34();
  }
  OUTLINED_FUNCTION_27_8();
}

uint64_t static WeatherComparison.BaselineType.read(from:)()
{
  return sub_1A629A75C();
}

void WeatherComparison.BaselineType.write(to:)()
{
  sub_1A6334D78();
  OUTLINED_FUNCTION_66_1();
}

void static WeatherComparison.Condition.read(from:)(_BYTE *a1@<X8>)
{
  sub_1A629AF50(a1);
}

void WeatherComparison.Condition.write(to:)()
{
  sub_1A62A1B58();
}

void static DailyWeatherStatistics.read(from:)(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_81_1();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_402();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_93_1();
  OUTLINED_FUNCTION_119_0(v10);
  if (!v1)
  {
    sub_1A62A0F34();
    sub_1A62A0F70();
    v11 = OUTLINED_FUNCTION_120_0();
    sub_1A6332B28();
    sub_1A618D95C(v2, a1);
    v12 = type metadata accessor for DailyWeatherStatistics();
    *(_QWORD *)(a1 + *(int *)(v12 + 20)) = v11;
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1 + *(int *)(v12 + 24), v8, v5);
  }
  OUTLINED_FUNCTION_60_1();
}

void DailyWeatherStatistics.write(to:)(uint64_t a1)
{
  sub_1A629B244(a1, (void (*)(_QWORD))type metadata accessor for DailyWeatherStatistics, (void (*)(void))sub_1A62A0F34, (void (*)(void))sub_1A62A0F70);
}

void static DailyForecast.read(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_402();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_16_21(v2, v6);
  if (!v0)
  {
    OUTLINED_FUNCTION_132();
    OUTLINED_FUNCTION_62_1(&qword_1ED21B5B8, v3, (uint64_t)&protocol conformance descriptor for DayForecast);
    OUTLINED_FUNCTION_62_1(&qword_1ED21B5C0, v4, (uint64_t)&protocol conformance descriptor for DayForecast);
    OUTLINED_FUNCTION_76_1();
    OUTLINED_FUNCTION_51_2();
    v5 = type metadata accessor for DailyForecast();
    OUTLINED_FUNCTION_125_0(v5);
  }
  OUTLINED_FUNCTION_26_10();
}

void DailyForecast.write(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_64_1();
  if (!v0)
  {
    type metadata accessor for DailyForecast();
    OUTLINED_FUNCTION_132();
    OUTLINED_FUNCTION_40_5(&qword_1ED21B5B8, v1, (uint64_t)&protocol conformance descriptor for DayForecast);
    OUTLINED_FUNCTION_40_5(&qword_1ED21B5C0, v2, (uint64_t)&protocol conformance descriptor for DayForecast);
    OUTLINED_FUNCTION_15_22();
  }
  OUTLINED_FUNCTION_35_5();
}

void static TemperatureRange.read(from:)()
{
  sub_1A629DD0C();
}

uint64_t TemperatureRange.write(to:)()
{
  return sub_1A629DC98();
}

void static WeatherChange.read(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_17_1();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_919();
  v28 = v26 - v27;
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&a9 - v30;
  OUTLINED_FUNCTION_402();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&a9 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_119_0((uint64_t)v34);
  if (!v20)
  {
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_85_1();
    OUTLINED_FUNCTION_85_1();
    OUTLINED_FUNCTION_108();
    sub_1A618B274(&qword_1ED21A670, (uint64_t (*)(uint64_t))type metadata accessor for TrendDeviation, (uint64_t)&protocol conformance descriptor for TrendDeviation);
    sub_1A618B274(qword_1ED21A678, (uint64_t (*)(uint64_t))type metadata accessor for TrendDeviation, (uint64_t)&protocol conformance descriptor for TrendDeviation);
    a10 = OUTLINED_FUNCTION_120_0();
    v35 = (int *)type metadata accessor for WeatherChange();
    v36 = v24 + v35[5];
    OUTLINED_FUNCTION_9_11(v36);
    v37 = v24 + v35[6];
    OUTLINED_FUNCTION_9_11(v37);
    sub_1A618D95C((uint64_t)v34, v24);
    sub_1A618D2C8((uint64_t)v31, v36);
    sub_1A618D2C8(v28, v37);
    *(_QWORD *)(v24 + v35[7]) = a10;
  }
  OUTLINED_FUNCTION_1();
}

void WeatherChange.write(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_54_1();
  if (!v0)
  {
    type metadata accessor for WeatherChange();
    OUTLINED_FUNCTION_63_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    OUTLINED_FUNCTION_1_36();
    OUTLINED_FUNCTION_1_36();
    OUTLINED_FUNCTION_101_0();
    type metadata accessor for TrendDeviation();
    OUTLINED_FUNCTION_40_5(&qword_1ED21A670, v1, (uint64_t)&protocol conformance descriptor for TrendDeviation);
    OUTLINED_FUNCTION_40_5(qword_1ED21A678, v2, (uint64_t)&protocol conformance descriptor for TrendDeviation);
    OUTLINED_FUNCTION_15_22();
  }
  OUTLINED_FUNCTION_35_5();
}

void static ForecastSummary.read(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, unsigned __int8 a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  uint64_t v43;
  char v44;
  char v45;

  OUTLINED_FUNCTION_17_1();
  v17 = v16;
  v19 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_81_1();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_58_3();
  if (!v13)
  {
    OUTLINED_FUNCTION_10_20();
    OUTLINED_FUNCTION_128_0();
    static CardinalDirection.read(from:)(v25);
    OUTLINED_FUNCTION_10_20();
    v26 = v43;
    v45 = v44;
    OUTLINED_FUNCTION_10_20();
    v40 = v41;
    v39 = v42;
    OUTLINED_FUNCTION_0_25();
    OUTLINED_FUNCTION_115_0();
    v38 = v19 + v27;
    OUTLINED_FUNCTION_103();
    __swift_storeEnumTagSinglePayload(v28, v29, v30, v23);
    v31 = v17[7];
    v37 = a13;
    v32 = v19 + v31;
    *(_QWORD *)v32 = 0;
    *(_BYTE *)(v32 + 8) = 1;
    v33 = v17[8];
    v36 = v26;
    v34 = v19 + v33;
    *(_QWORD *)v34 = 0;
    *(_BYTE *)(v34 + 8) = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v19, v14, v23);
    sub_1A618D2C8((uint64_t)v22, v38);
    *(_BYTE *)(v19 + v17[6]) = v37;
    *(_QWORD *)v32 = v36;
    *(_BYTE *)(v32 + 8) = v45;
    *(_QWORD *)v34 = v40;
    *(_BYTE *)(v34 + 8) = v39;
  }
  OUTLINED_FUNCTION_92_1();
  OUTLINED_FUNCTION_1();
}

void ForecastSummary.write(to:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_55_2();
  if (!v0)
  {
    OUTLINED_FUNCTION_0_25();
    OUTLINED_FUNCTION_63_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_98_0();
    CardinalDirection.write(to:)();
    OUTLINED_FUNCTION_12_20();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C978);
    OUTLINED_FUNCTION_1_36();
    OUTLINED_FUNCTION_12_20();
    OUTLINED_FUNCTION_1_36();
  }
  OUTLINED_FUNCTION_59_2();
}

void static NextHourForecast.read(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *HourForecast;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  OUTLINED_FUNCTION_17_1();
  a19 = v22;
  a20 = v23;
  v25 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&a9 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_402();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_50_4();
  OUTLINED_FUNCTION_91_1(v30);
  if (!v20)
  {
    OUTLINED_FUNCTION_0_0();
    OUTLINED_FUNCTION_75_1(&qword_1ED21AA10, v31, (uint64_t)&protocol conformance descriptor for ForecastCondition);
    OUTLINED_FUNCTION_75_1(&qword_1ED21AA18, v32, (uint64_t)&protocol conformance descriptor for ForecastCondition);
    v33 = OUTLINED_FUNCTION_69_1();
    OUTLINED_FUNCTION_0_25();
    sub_1A618B274(&qword_1ED21A908, (uint64_t (*)(uint64_t))type metadata accessor for ForecastSummary, (uint64_t)&protocol conformance descriptor for ForecastSummary);
    sub_1A618B274(&qword_1ED21A910, (uint64_t (*)(uint64_t))type metadata accessor for ForecastSummary, (uint64_t)&protocol conformance descriptor for ForecastSummary);
    v34 = OUTLINED_FUNCTION_69_1();
    v35 = OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_10_20();
    a10 = OUTLINED_FUNCTION_112();
    sub_1A618B274(&qword_1ED21A850, (uint64_t (*)(uint64_t))type metadata accessor for ForecastMinute, (uint64_t)&protocol conformance descriptor for ForecastMinute);
    sub_1A618B274(&qword_1ED21A858, (uint64_t (*)(uint64_t))type metadata accessor for ForecastMinute, (uint64_t)&protocol conformance descriptor for ForecastMinute);
    a10 = OUTLINED_FUNCTION_69_1();
    HourForecast = (int *)type metadata accessor for NextHourForecast();
    v37 = v25 + HourForecast[7];
    OUTLINED_FUNCTION_103();
    __swift_storeEnumTagSinglePayload(v38, v39, v40, v35);
    sub_1A618D95C(v21, v25);
    *(_QWORD *)(v25 + HourForecast[5]) = v33;
    *(_QWORD *)(v25 + HourForecast[6]) = v34;
    sub_1A618D2C8((uint64_t)v28, v37);
    *(_QWORD *)(v25 + HourForecast[8]) = a10;
  }
  OUTLINED_FUNCTION_92_1();
  OUTLINED_FUNCTION_1();
}

void NextHourForecast.write(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_54_1();
  if (!v0)
  {
    type metadata accessor for NextHourForecast();
    OUTLINED_FUNCTION_101_0();
    type metadata accessor for ForecastCondition();
    OUTLINED_FUNCTION_75_1(&qword_1ED21AA10, v1, (uint64_t)&protocol conformance descriptor for ForecastCondition);
    OUTLINED_FUNCTION_75_1(&qword_1ED21AA18, v2, (uint64_t)&protocol conformance descriptor for ForecastCondition);
    OUTLINED_FUNCTION_57_2();
    OUTLINED_FUNCTION_101_0();
    type metadata accessor for ForecastSummary();
    OUTLINED_FUNCTION_75_1(&qword_1ED21A908, v3, (uint64_t)&protocol conformance descriptor for ForecastSummary);
    OUTLINED_FUNCTION_75_1(&qword_1ED21A910, v4, (uint64_t)&protocol conformance descriptor for ForecastSummary);
    OUTLINED_FUNCTION_57_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_101_0();
    type metadata accessor for ForecastMinute();
    OUTLINED_FUNCTION_40_5(&qword_1ED21A850, v5, (uint64_t)&protocol conformance descriptor for ForecastMinute);
    OUTLINED_FUNCTION_40_5(&qword_1ED21A858, v6, (uint64_t)&protocol conformance descriptor for ForecastMinute);
    OUTLINED_FUNCTION_15_22();
  }
  OUTLINED_FUNCTION_60_1();
}

void static ResponseType.read(from:)(_BYTE *a1@<X8>)
{
  uint64_t v1;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_14_0();
  if (!v1)
  {
    OUTLINED_FUNCTION_94_0();
    if (v3 >= 9)
    {
      OUTLINED_FUNCTION_39_4();
      sub_1A618B274(&qword_1EE847DB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB36B0], MEMORY[0x1E0DB36B8]);
      v4 = OUTLINED_FUNCTION_5_27();
      v6 = OUTLINED_FUNCTION_43_4(v4, v5);
      OUTLINED_FUNCTION_11_21(v6, *MEMORY[0x1E0DB36A8]);
      OUTLINED_FUNCTION_732();
    }
    else
    {
      *a1 = v3;
    }
  }
  OUTLINED_FUNCTION_25_10();
}

void ResponseType.write(to:)()
{
  __asm { BR              X10 }
}

void sub_1A6299E30()
{
  sub_1A6334D78();
  OUTLINED_FUNCTION_83_1();
}

void static HourlyForecast.read(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_402();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_16_21(v2, v6);
  if (!v0)
  {
    OUTLINED_FUNCTION_29();
    OUTLINED_FUNCTION_62_1(&qword_1ED21B5F8, v3, (uint64_t)&protocol conformance descriptor for HourForecast);
    OUTLINED_FUNCTION_62_1(&qword_1ED21B600, v4, (uint64_t)&protocol conformance descriptor for HourForecast);
    OUTLINED_FUNCTION_76_1();
    OUTLINED_FUNCTION_51_2();
    v5 = type metadata accessor for HourlyForecast();
    OUTLINED_FUNCTION_125_0(v5);
  }
  OUTLINED_FUNCTION_26_10();
}

void HourlyForecast.write(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_64_1();
  if (!v0)
  {
    type metadata accessor for HourlyForecast();
    OUTLINED_FUNCTION_29();
    OUTLINED_FUNCTION_40_5(&qword_1ED21B5F8, v1, (uint64_t)&protocol conformance descriptor for HourForecast);
    OUTLINED_FUNCTION_40_5(&qword_1ED21B600, v2, (uint64_t)&protocol conformance descriptor for HourForecast);
    OUTLINED_FUNCTION_15_22();
  }
  OUTLINED_FUNCTION_35_5();
}

void static PressureTrend.read(from:)(_BYTE *a1@<X8>)
{
  sub_1A629A0A0(a1);
}

void sub_1A629A0A0(_BYTE *a1@<X8>)
{
  uint64_t v1;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_14_0();
  if (!v1)
  {
    OUTLINED_FUNCTION_94_0();
    if (v3 >= 3)
    {
      OUTLINED_FUNCTION_39_4();
      sub_1A618B274(&qword_1EE847DB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB36B0], MEMORY[0x1E0DB36B8]);
      v4 = OUTLINED_FUNCTION_5_27();
      v6 = OUTLINED_FUNCTION_43_4(v4, v5);
      OUTLINED_FUNCTION_11_21(v6, *MEMORY[0x1E0DB36A8]);
      OUTLINED_FUNCTION_732();
    }
    else
    {
      *a1 = v3;
    }
  }
  OUTLINED_FUNCTION_25_10();
}

void PressureTrend.write(to:)()
{
  sub_1A629A148();
}

void sub_1A629A148()
{
  sub_1A6334D78();
  OUTLINED_FUNCTION_66_1();
}

void static Metadata.read(from:)(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[4];
  int v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29[3];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  uint64_t v38;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_130_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_919();
  v9 = v7 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = &v18[-v11];
  OUTLINED_FUNCTION_117_0();
  if (!v1)
  {
    OUTLINED_FUNCTION_117_0();
    OUTLINED_FUNCTION_10_20();
    OUTLINED_FUNCTION_9_20();
    v26 = v38;
    OUTLINED_FUNCTION_9_20();
    v13 = v37;
    OUTLINED_FUNCTION_9_20();
    v14 = v36;
    OUTLINED_FUNCTION_10_20();
    v15 = v35;
    v25 = v34;
    OUTLINED_FUNCTION_10_20();
    v23 = v32;
    v24 = v15;
    v16 = v33;
    OUTLINED_FUNCTION_10_20();
    v21 = v30;
    v22 = v16;
    v17 = v31;
    OUTLINED_FUNCTION_10_20();
    v19 = v29[2];
    v20 = sub_1A62A0FAC();
    sub_1A62A0FE8();
    OUTLINED_FUNCTION_10_20();
    v29[0] = v29[1];
    OUTLINED_FUNCTION_10_20();
    Metadata.init(readTime:expireTime:reportedTime:version:latitude:longitude:language:providerName:providerLogo:temporarilyUnavailable:units:attributionURL:)((uint64_t)v12, v9, (uint64_t)v5, v26, v25, v24, v23, v22, a1, v13, v14, v21, v17, v19, v29, v27, v28);
  }
  OUTLINED_FUNCTION_68_2();
}

void Metadata.write(to:)()
{
  uint64_t v0;
  int *v1;

  OUTLINED_FUNCTION_102_1();
  OUTLINED_FUNCTION_55_2();
  if (!v0)
  {
    OUTLINED_FUNCTION_402();
    OUTLINED_FUNCTION_63_2();
    OUTLINED_FUNCTION_123_0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_41_3(v1[8]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_41_3(v1[9]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_44_4(v1[10]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21BA08);
    OUTLINED_FUNCTION_1_36();
    OUTLINED_FUNCTION_44_4(v1[11]);
    OUTLINED_FUNCTION_1_36();
    OUTLINED_FUNCTION_44_4(v1[12]);
    OUTLINED_FUNCTION_1_36();
    OUTLINED_FUNCTION_74_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C960);
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_74_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C928);
    sub_1A62A0FAC();
    sub_1A62A0FE8();
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_44_4(v1[15]);
    OUTLINED_FUNCTION_1_36();
  }
  OUTLINED_FUNCTION_29_9();
}

uint64_t static Metadata.Units.read(from:)()
{
  return sub_1A629A75C();
}

uint64_t sub_1A629A75C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  result = OUTLINED_FUNCTION_14_0();
  if (!v0 && v5 != 1)
  {
    OUTLINED_FUNCTION_39_4();
    sub_1A618B274(&qword_1EE847DB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB36B0], MEMORY[0x1E0DB36B8]);
    v2 = OUTLINED_FUNCTION_5_27();
    v4 = OUTLINED_FUNCTION_43_4(v2, v3);
    OUTLINED_FUNCTION_11_21(v4, *MEMORY[0x1E0DB36A8]);
    return OUTLINED_FUNCTION_732();
  }
  return result;
}

void static CardinalDirection.read(from:)(_BYTE *a1@<X8>)
{
  sub_1A629C2D4(a1);
}

void CardinalDirection.write(to:)()
{
  sub_1A62A1C30();
}

void static AirQuality.read(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  OUTLINED_FUNCTION_17_1();
  v16 = v15;
  OUTLINED_FUNCTION_402();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_50_4();
  OUTLINED_FUNCTION_91_1(v18);
  if (!v13)
  {
    OUTLINED_FUNCTION_10_20();
    sub_1A62A1024();
    sub_1A62A1060();
    OUTLINED_FUNCTION_10_20();
    OUTLINED_FUNCTION_10_20();
    OUTLINED_FUNCTION_10_20();
    OUTLINED_FUNCTION_10_20();
    OUTLINED_FUNCTION_10_20();
    OUTLINED_FUNCTION_10_20();
    OUTLINED_FUNCTION_10_20();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B538);
    sub_1A62A1114(&qword_1ED21B540, MEMORY[0x1E0DB5130]);
    sub_1A62A1114(&qword_1ED21B548, MEMORY[0x1E0DB5138]);
    OUTLINED_FUNCTION_10_20();
    OUTLINED_FUNCTION_10_20();
    v19 = (int *)type metadata accessor for AirQuality();
    v29 = v19[6];
    v20 = (_QWORD *)(v16 + v19[5]);
    v23 = (_QWORD *)(v16 + v19[7]);
    v26 = v16 + v19[8];
    v28 = v19[10];
    v22 = v16 + v19[9];
    v21 = (_QWORD *)(v16 + v19[11]);
    v25 = (_QWORD *)(v16 + v19[12]);
    v27 = v19[13];
    v24 = (_QWORD *)(v16 + v19[14]);
    sub_1A618D95C(v14, v16);
    *v20 = v43;
    v20[1] = v44;
    *(_BYTE *)(v16 + v29) = a13;
    *v23 = v41;
    v23[1] = v42;
    *(_QWORD *)v26 = v39;
    *(_BYTE *)(v26 + 8) = v40;
    *(_QWORD *)v22 = v37;
    *(_BYTE *)(v22 + 8) = v38;
    *(_BYTE *)(v16 + v28) = a12;
    *v21 = v35;
    v21[1] = v36;
    *v25 = v33;
    v25[1] = v34;
    *(_QWORD *)(v16 + v27) = v32;
    *v24 = v30;
    v24[1] = v31;
  }
  OUTLINED_FUNCTION_92_1();
  OUTLINED_FUNCTION_1();
}

void AirQuality.write(to:)()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_102_1();
  OUTLINED_FUNCTION_54_1();
  if (!v0)
  {
    type metadata accessor for AirQuality();
    OUTLINED_FUNCTION_115_0();
    OUTLINED_FUNCTION_44_4(v2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21BA08);
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_74_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B428);
    sub_1A62A1024();
    sub_1A62A1060();
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_44_4(v1[7]);
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_12_20();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21BA20);
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_12_20();
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_74_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C960);
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_44_4(v1[11]);
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_44_4(v1[12]);
    OUTLINED_FUNCTION_2_39();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B560);
    sub_1A62A1114(&qword_1ED21B540, MEMORY[0x1E0DB5130]);
    sub_1A62A1114(&qword_1ED21B548, MEMORY[0x1E0DB5138]);
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_44_4(v1[14]);
    OUTLINED_FUNCTION_2_39();
  }
  OUTLINED_FUNCTION_29_9();
}

void static AirQuality.SourceType.read(from:)(_BYTE *a1@<X8>)
{
  sub_1A629AF50(a1);
}

void sub_1A629AF50(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  OUTLINED_FUNCTION_14_0();
  if (!v1)
  {
    if ((v6 - 1) >= 4u)
    {
      OUTLINED_FUNCTION_39_4();
      sub_1A618B274(&qword_1EE847DB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB36B0], MEMORY[0x1E0DB36B8]);
      v3 = OUTLINED_FUNCTION_5_27();
      v5 = OUTLINED_FUNCTION_43_4(v3, v4);
      OUTLINED_FUNCTION_11_21(v5, *MEMORY[0x1E0DB36A8]);
      OUTLINED_FUNCTION_732();
    }
    else
    {
      *a1 = v6 - 1;
    }
  }
  OUTLINED_FUNCTION_25_10();
}

void AirQuality.SourceType.write(to:)()
{
  sub_1A62A1B58();
}

void static HourlyWeatherStatistics.read(from:)()
{
  sub_1A629B0C4();
}

void HourlyWeatherStatistics.write(to:)(uint64_t a1)
{
  sub_1A629B244(a1, (void (*)(_QWORD))type metadata accessor for HourlyWeatherStatistics, (void (*)(void))sub_1A62A1194, (void (*)(void))sub_1A62A11D0);
}

uint64_t static Quantiles.read(from:)()
{
  return sub_1A629C17C();
}

uint64_t Quantiles.write(to:)()
{
  return sub_1A629C234();
}

void static MonthlyWeatherStatistics.read(from:)()
{
  sub_1A629B0C4();
}

void sub_1A629B0C4()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t (*v2)(_QWORD);
  void (*v3)(void);
  void (*v4)(void);
  void (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(void);

  OUTLINED_FUNCTION_17_1();
  v2 = v1;
  v19 = v3;
  v5 = v4;
  v7 = v6;
  v8 = OUTLINED_FUNCTION_6();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_402();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_2();
  v15 = v14 - v13;
  static Metadata.read(from:)(v14 - v13);
  if (!v0)
  {
    v18 = v8;
    v5();
    v19();
    v16 = sub_1A6335528();
    sub_1A6332B28();
    sub_1A618D95C(v15, v7);
    v17 = v2(0);
    *(_QWORD *)(v7 + *(int *)(v17 + 20)) = v16;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v7 + *(int *)(v17 + 24), v11, v18);
  }
  OUTLINED_FUNCTION_1();
}

void MonthlyWeatherStatistics.write(to:)(uint64_t a1)
{
  sub_1A629B244(a1, (void (*)(_QWORD))type metadata accessor for MonthlyWeatherStatistics, (void (*)(void))sub_1A62A120C, (void (*)(void))sub_1A62A1248);
}

void sub_1A629B244(uint64_t a1, void (*a2)(_QWORD), void (*a3)(void), void (*a4)(void))
{
  uint64_t v4;

  OUTLINED_FUNCTION_64_1();
  if (!v4)
  {
    a2(0);
    OUTLINED_FUNCTION_115_0();
    a3();
    a4();
    OUTLINED_FUNCTION_57_2();
    OUTLINED_FUNCTION_123_0();
  }
  OUTLINED_FUNCTION_60_1();
}

void static HourForecast.read(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _BYTE *v6;
  char v7;
  char v8;
  double v9;
  char *v10;
  char *v11;
  char *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;
  unsigned __int8 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 v55;
  uint64_t v56;
  unsigned __int8 v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 v60;
  char v61;
  char v62;
  uint64_t v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;

  OUTLINED_FUNCTION_96();
  v2 = v1;
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_81_1();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_70_1();
  if (!v0)
  {
    OUTLINED_FUNCTION_6_27();
    OUTLINED_FUNCTION_6_27();
    OUTLINED_FUNCTION_6_27();
    OUTLINED_FUNCTION_6_27();
    OUTLINED_FUNCTION_128_0();
    static ConditionCode.read(from:)(v6);
    v68 = v69;
    OUTLINED_FUNCTION_6_27();
    v7 = v67;
    OUTLINED_FUNCTION_6_27();
    OUTLINED_FUNCTION_6_27();
    OUTLINED_FUNCTION_6_27();
    sub_1A62A1284();
    OUTLINED_FUNCTION_121_0();
    OUTLINED_FUNCTION_10_20();
    v65 = v66;
    OUTLINED_FUNCTION_6_27();
    OUTLINED_FUNCTION_10_20();
    v46 = v63;
    v8 = v64;
    sub_1A62A12FC();
    sub_1A62A1338();
    OUTLINED_FUNCTION_10_20();
    v61 = v62;
    OUTLINED_FUNCTION_10_20();
    v45 = v59;
    v44 = v60;
    OUTLINED_FUNCTION_6_27();
    v43 = v58;
    OUTLINED_FUNCTION_10_20();
    v42 = v56;
    v41 = v57;
    OUTLINED_FUNCTION_10_20();
    v40 = v54;
    v39 = v55;
    OUTLINED_FUNCTION_6_27();
    v38 = v53;
    OUTLINED_FUNCTION_6_27();
    v37 = v52;
    OUTLINED_FUNCTION_10_20();
    v36 = v50;
    v35 = v51;
    OUTLINED_FUNCTION_10_20();
    v34 = v48;
    HIDWORD(v33) = v49;
    OUTLINED_FUNCTION_6_27();
    v32 = v47;
    v31 = BYTE4(v33);
    v30 = v34;
    v29 = v35;
    v28 = v36;
    v27 = v37;
    v26 = v38;
    v25 = v39;
    v24 = v40;
    v23 = v41;
    v22 = v42;
    v21 = v43;
    v20 = v44;
    v9 = OUTLINED_FUNCTION_71_1();
    HourForecast.init(forecastStart:cloudCover:cloudCoverLowAltPct:cloudCoverMidAltPct:cloudCoverHighAltPct:conditionCode:daylight:humidity:precipitationAmount:precipitationChance:precipitationType:perceivedPrecipitationIntensity:pressure:pressureTrend:snowfallIntensity:temperature:temperatureApparent:temperatureDewPoint:uvIndex:visibility:windDirection:windGust:windSpeed:)((uint64_t)v5, v10, v7, v11, v46, v8, v12, v45, v2, v9, v13, v14, v15, v16, v17, v18, v19, v20, v21,
      v22,
      v23,
      v24,
      v25,
      v26,
      v27,
      v28,
      v29,
      v30,
      v31,
      v32);
  }
  OUTLINED_FUNCTION_49();
}

void HourForecast.write(to:)()
{
  uint64_t v0;
  int *v1;

  OUTLINED_FUNCTION_102_1();
  OUTLINED_FUNCTION_55_2();
  if (!v0)
  {
    v1 = (int *)OUTLINED_FUNCTION_29();
    OUTLINED_FUNCTION_41_3(v1[5]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_41_3(v1[6]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_41_3(v1[7]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_41_3(v1[8]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_98_0();
    ConditionCode.write(to:)();
    OUTLINED_FUNCTION_74_1();
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_41_3(v1[11]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_41_3(v1[12]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_41_3(v1[13]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_74_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B660);
    sub_1A62A1284();
    sub_1A62A12C0();
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_41_3(v1[15]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_12_20();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C978);
    OUTLINED_FUNCTION_1_36();
    OUTLINED_FUNCTION_74_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C6E8);
    sub_1A62A12FC();
    sub_1A62A1338();
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_12_20();
    OUTLINED_FUNCTION_1_36();
    OUTLINED_FUNCTION_41_3(v1[19]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_12_20();
    OUTLINED_FUNCTION_1_36();
    OUTLINED_FUNCTION_12_20();
    OUTLINED_FUNCTION_1_36();
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_41_3(v1[23]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_12_20();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21BA20);
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_12_20();
    OUTLINED_FUNCTION_1_36();
    OUTLINED_FUNCTION_41_3(v1[26]);
    OUTLINED_FUNCTION_0_52();
  }
  OUTLINED_FUNCTION_29_9();
}

void static EventMessage.read(from:)()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_72_0();
  sub_1A6335744();
  if (!v1)
  {
    OUTLINED_FUNCTION_18_18();
    *(_QWORD *)v0 = v3;
    *(_QWORD *)(v0 + 8) = v4;
    *(_OWORD *)(v0 + 16) = v2;
  }
  OUTLINED_FUNCTION_52_2();
}

void EventMessage.write(to:)()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21BA08);
  OUTLINED_FUNCTION_47_4();
  if (!v0)
    sub_1A6335750();
  OUTLINED_FUNCTION_59_2();
}

void static DataSet.read(from:)(_BYTE *a1@<X8>)
{
  sub_1A629C398(a1);
}

void DataSet.write(to:)()
{
  sub_1A629C440();
}

void static DailySummary.read(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_402();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_16_21(v2, v4);
  if (!v0)
  {
    sub_1A62A1374();
    sub_1A62A13B0();
    OUTLINED_FUNCTION_77_1();
    OUTLINED_FUNCTION_51_2();
    v3 = type metadata accessor for DailySummary();
    OUTLINED_FUNCTION_125_0(v3);
  }
  OUTLINED_FUNCTION_27_8();
}

void DailySummary.write(to:)(uint64_t a1)
{
  sub_1A62A02C8(a1, (void (*)(_QWORD))type metadata accessor for DailySummary, (void (*)(void))sub_1A62A1374, (void (*)(void))sub_1A62A13B0);
}

void static ChangeDirection.read(from:)(_BYTE *a1@<X8>)
{
  sub_1A629AF50(a1);
}

void ChangeDirection.write(to:)()
{
  sub_1A62A1B58();
}

void static LocationInfo.read(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  OUTLINED_FUNCTION_17_1();
  v2 = v1;
  OUTLINED_FUNCTION_402();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_91_1((uint64_t)v5);
  if (!v0)
  {
    v6 = OUTLINED_FUNCTION_129_0();
    v8 = v7;
    OUTLINED_FUNCTION_10_20();
    v10 = v39;
    v9 = v40;
    OUTLINED_FUNCTION_10_20();
    v41 = v10;
    v11 = v37;
    v12 = v38;
    OUTLINED_FUNCTION_10_20();
    v32 = v11;
    v33 = v12;
    v13 = v35;
    v34 = v36;
    v14 = OUTLINED_FUNCTION_129_0();
    v31 = v15;
    v16 = (int *)type metadata accessor for LocationInfo();
    v17 = v16[6];
    v18 = v16[7];
    v29 = v13;
    v19 = (_QWORD *)(v2 + v17);
    v30 = (_QWORD *)(v2 + v18);
    v28 = (_QWORD *)(v2 + v16[8]);
    sub_1A618D95C((uint64_t)v5, v2);
    v20 = (uint64_t *)(v2 + v16[5]);
    *v20 = v6;
    v20[1] = v8;
    *v19 = v41;
    v19[1] = v9;
    v21 = v30;
    v22 = v33;
    *v30 = v32;
    v21[1] = v22;
    v23 = v28;
    v24 = v34;
    *v28 = v29;
    v23[1] = v24;
    v25 = (uint64_t *)(v2 + v16[9]);
    v26 = v31;
    *v25 = v14;
    v25[1] = v26;
  }
  OUTLINED_FUNCTION_92_1();
  OUTLINED_FUNCTION_1();
}

void LocationInfo.write(to:)()
{
  uint64_t v0;
  int *v1;

  OUTLINED_FUNCTION_54_1();
  if (!v0)
  {
    v1 = (int *)type metadata accessor for LocationInfo();
    OUTLINED_FUNCTION_88_1();
    OUTLINED_FUNCTION_44_4(v1[6]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21BA08);
    OUTLINED_FUNCTION_1_36();
    OUTLINED_FUNCTION_44_4(v1[7]);
    OUTLINED_FUNCTION_1_36();
    OUTLINED_FUNCTION_44_4(v1[8]);
    OUTLINED_FUNCTION_1_36();
    OUTLINED_FUNCTION_88_1();
  }
  OUTLINED_FUNCTION_59_2();
}

uint64_t static PrecipitationAmount.read(from:)()
{
  return sub_1A629C17C();
}

uint64_t sub_1A629C17C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_72_0();
  result = OUTLINED_FUNCTION_14_0();
  if (!v1)
  {
    OUTLINED_FUNCTION_14_0();
    result = OUTLINED_FUNCTION_14_0();
    *v0 = v5;
    v0[1] = v4;
    v0[2] = v3;
  }
  return result;
}

uint64_t PrecipitationAmount.write(to:)()
{
  return sub_1A629C234();
}

uint64_t sub_1A629C234()
{
  uint64_t v0;
  uint64_t result;

  result = OUTLINED_FUNCTION_105_1();
  if (!v0)
  {
    OUTLINED_FUNCTION_22_13();
    return OUTLINED_FUNCTION_22_13();
  }
  return result;
}

void static PrecipitationType.read(from:)(_BYTE *a1@<X8>)
{
  sub_1A629C2D4(a1);
}

void sub_1A629C2D4(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  OUTLINED_FUNCTION_14_0();
  if (!v1)
  {
    if ((v6 - 1) >= 8u)
    {
      OUTLINED_FUNCTION_39_4();
      sub_1A618B274(&qword_1EE847DB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB36B0], MEMORY[0x1E0DB36B8]);
      v3 = OUTLINED_FUNCTION_5_27();
      v5 = OUTLINED_FUNCTION_43_4(v3, v4);
      OUTLINED_FUNCTION_11_21(v5, *MEMORY[0x1E0DB36A8]);
      OUTLINED_FUNCTION_732();
    }
    else
    {
      *a1 = v6 - 1;
    }
  }
  OUTLINED_FUNCTION_25_10();
}

void PrecipitationType.write(to:)()
{
  sub_1A62A1C30();
}

void static EventSignificance.read(from:)(_BYTE *a1@<X8>)
{
  sub_1A629C398(a1);
}

void sub_1A629C398(_BYTE *a1@<X8>)
{
  uint64_t v1;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_14_0();
  if (!v1)
  {
    OUTLINED_FUNCTION_94_0();
    if (v3 >= 0xD)
    {
      OUTLINED_FUNCTION_39_4();
      sub_1A618B274(&qword_1EE847DB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB36B0], MEMORY[0x1E0DB36B8]);
      v4 = OUTLINED_FUNCTION_5_27();
      v6 = OUTLINED_FUNCTION_43_4(v4, v5);
      OUTLINED_FUNCTION_11_21(v6, *MEMORY[0x1E0DB36A8]);
      OUTLINED_FUNCTION_732();
    }
    else
    {
      *a1 = v3;
    }
  }
  OUTLINED_FUNCTION_25_10();
}

void EventSignificance.write(to:)()
{
  sub_1A629C440();
}

void sub_1A629C440()
{
  __asm { BR              X10 }
}

void sub_1A629C46C()
{
  sub_1A6334D78();
  OUTLINED_FUNCTION_83_1();
}

void static HourWeatherStatistics.read(from:)()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_14_0();
  if (!v1)
  {
    sub_1A62A13EC();
    sub_1A62A1428();
    OUTLINED_FUNCTION_18_18();
    *(_QWORD *)v0 = v5;
    *(_OWORD *)(v0 + 8) = v2;
    *(_QWORD *)(v0 + 24) = v3;
    *(_BYTE *)(v0 + 32) = v4;
  }
  OUTLINED_FUNCTION_52_2();
}

uint64_t HourWeatherStatistics.write(to:)()
{
  uint64_t v0;
  uint64_t result;

  result = sub_1A6334D78();
  if (!v0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847E18);
    sub_1A62A13EC();
    sub_1A62A1428();
    return OUTLINED_FUNCTION_37_5();
  }
  return result;
}

void static Urgency.read(from:)(_BYTE *a1@<X8>)
{
  sub_1A62A0EA0(a1);
}

void Urgency.write(to:)()
{
  sub_1A62A1D88();
}

void static CurrentWeather.read(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  double v17;
  char *v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char v55;
  double v56;
  _BYTE v57[4];
  int v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  double v93;
  uint64_t v94;
  unsigned __int8 v95;
  uint64_t v96;
  unsigned __int8 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unsigned __int8 v101;
  uint64_t v102;
  unsigned __int8 v103;
  uint64_t v104;
  unsigned __int8 v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115[2];
  uint64_t v116;
  unsigned __int8 v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unsigned __int8 v123;
  char v124;
  char v125[33];

  OUTLINED_FUNCTION_96();
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_919();
  v7 = v5 - v6;
  MEMORY[0x1E0C80A78](v8);
  v10 = &v57[-v9];
  MEMORY[0x1E0C80A78](v11);
  v13 = &v57[-v12];
  OUTLINED_FUNCTION_402();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_50_4();
  static Metadata.read(from:)(v15);
  if (!v0)
  {
    v92 = v3;
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_19_17();
    OUTLINED_FUNCTION_3_36();
    OUTLINED_FUNCTION_3_36();
    OUTLINED_FUNCTION_3_36();
    OUTLINED_FUNCTION_3_36();
    static ConditionCode.read(from:)(v125);
    v124 = v125[0];
    OUTLINED_FUNCTION_3_36();
    v91 = v123;
    OUTLINED_FUNCTION_3_36();
    OUTLINED_FUNCTION_3_36();
    OUTLINED_FUNCTION_3_36();
    OUTLINED_FUNCTION_3_36();
    OUTLINED_FUNCTION_3_36();
    v90 = v122;
    OUTLINED_FUNCTION_3_36();
    v89 = v121;
    OUTLINED_FUNCTION_3_36();
    v86 = v120;
    sub_1A62A1464();
    OUTLINED_FUNCTION_89_0();
    v88 = 0;
    v87 = sub_1A6335264();
    v85 = OUTLINED_FUNCTION_23_16();
    v84 = OUTLINED_FUNCTION_23_16();
    v83 = OUTLINED_FUNCTION_23_16();
    v82 = OUTLINED_FUNCTION_23_16();
    v88 = OUTLINED_FUNCTION_23_16();
    OUTLINED_FUNCTION_3_36();
    v81 = v119;
    OUTLINED_FUNCTION_3_36();
    v80 = v118;
    OUTLINED_FUNCTION_19_17();
    v79 = v116;
    v78 = v117;
    sub_1A62A12FC();
    sub_1A62A1338();
    OUTLINED_FUNCTION_19_17();
    v115[0] = v115[1];
    OUTLINED_FUNCTION_3_36();
    v77 = v114;
    OUTLINED_FUNCTION_3_36();
    v76 = v113;
    OUTLINED_FUNCTION_3_36();
    v75 = v112;
    OUTLINED_FUNCTION_3_36();
    v74 = v111;
    OUTLINED_FUNCTION_3_36();
    v73 = v110;
    OUTLINED_FUNCTION_3_36();
    v72 = v109;
    OUTLINED_FUNCTION_19_17();
    OUTLINED_FUNCTION_19_17();
    OUTLINED_FUNCTION_3_36();
    v71 = v108;
    OUTLINED_FUNCTION_19_17();
    v70 = v106;
    v16 = v107;
    OUTLINED_FUNCTION_19_17();
    v69 = v104;
    v68 = v105;
    OUTLINED_FUNCTION_19_17();
    v67 = v102;
    v66 = v103;
    OUTLINED_FUNCTION_19_17();
    v65 = v100;
    v64 = v101;
    OUTLINED_FUNCTION_3_36();
    v63 = v99;
    OUTLINED_FUNCTION_3_36();
    v62 = v98;
    OUTLINED_FUNCTION_19_17();
    v61 = v96;
    v60 = v97;
    OUTLINED_FUNCTION_19_17();
    v59 = v94;
    v58 = v95;
    OUTLINED_FUNCTION_3_36();
    v56 = v93;
    v55 = v58;
    v54 = v59;
    v53 = v60;
    v52 = v61;
    v51 = v62;
    v50 = v63;
    v49 = v64;
    v48 = v65;
    v47 = v66;
    v46 = v67;
    v45 = v68;
    v44 = v69;
    v43 = v70;
    v42 = v71;
    v41 = v72;
    v40 = v73;
    v39 = v74;
    v38 = v75;
    v37 = v76;
    v36 = v77;
    v35 = v78;
    v34 = v79;
    v33 = v80;
    v32 = v81;
    v31 = v88;
    v30 = v82;
    v29 = v86;
    v28 = v89;
    v27 = v90;
    v17 = OUTLINED_FUNCTION_71_1();
    CurrentWeather.init(metadata:asOf:cloudCover:cloudCoverLowAltPct:cloudCoverMidAltPct:cloudCoverHighAltPct:conditionCode:daylight:humidity:precipitationAmount1h:precipitationAmount6h:precipitationAmount24h:precipitationAmountNext1h:precipitationAmountNext6h:precipitationAmountNext24h:precipitationAmountPrevious1hByType:precipitationAmountPrevious6hByType:precipitationAmountPrevious24hByType:precipitationAmountNext1hByType:precipitationAmountNext6hByType:precipitationAmountNext24hByType:precipitationIntensity:perceivedPrecipitationIntensity:pressure:pressureTrend:snowfallAmount1h:snowfallAmount6h:snowfallAmount24h:snowfallAmountNext1h:snowfallAmountNext6h:snowfallAmountNext24h:sunrise:sunset:temperature:temperatureApparent:temperatureDewPoint:temperatureTodayMax:temperatureTodayMin:uvIndex:visibility:windDirection:windGust:windSpeed:)(v1, (uint64_t)v13, v18, v91, v87, v85, v84, v83, v19, v17, v20, v21, v22, v23, v24, v25, v26, v27, v28,
      v29,
      v30,
      v31,
      v32,
      v33,
      v34,
      v35,
      v115,
      v36,
      v37,
      v38,
      v39,
      v40,
      v41,
      (uint64_t)v10,
      v7,
      v42,
      v43,
      v16,
      v44,
      v45,
      v46,
      v47,
      v48,
      v49,
      v50,
      v51,
      v52,
      v53,
      v54,
      v55,
      v56);
  }
  OUTLINED_FUNCTION_49();
}

void CurrentWeather.write(to:)()
{
  uint64_t v0;
  int *v1;

  OUTLINED_FUNCTION_54_1();
  if (!v0)
  {
    type metadata accessor for CurrentWeather();
    OUTLINED_FUNCTION_63_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    OUTLINED_FUNCTION_1_36();
    OUTLINED_FUNCTION_20_18(v1[6]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_20_18(v1[7]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_20_18(v1[8]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_20_18(v1[9]);
    OUTLINED_FUNCTION_0_52();
    ConditionCode.write(to:)();
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_20_18(v1[12]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_20_18(v1[13]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_20_18(v1[14]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_20_18(v1[15]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_20_18(v1[16]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_20_18(v1[17]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_20_18(v1[18]);
    OUTLINED_FUNCTION_0_52();
    sub_1A62A1464();
    OUTLINED_FUNCTION_89_0();
    OUTLINED_FUNCTION_34_5();
    OUTLINED_FUNCTION_34_5();
    OUTLINED_FUNCTION_34_5();
    OUTLINED_FUNCTION_34_5();
    OUTLINED_FUNCTION_34_5();
    OUTLINED_FUNCTION_34_5();
    OUTLINED_FUNCTION_20_18(v1[25]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_20_18(v1[26]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_17_18();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C978);
    OUTLINED_FUNCTION_2_39();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C6E8);
    sub_1A62A12FC();
    sub_1A62A1338();
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_20_18(v1[29]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_20_18(v1[30]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_20_18(v1[31]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_20_18(v1[32]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_20_18(v1[33]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_20_18(v1[34]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_1_36();
    OUTLINED_FUNCTION_1_36();
    OUTLINED_FUNCTION_20_18(v1[37]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_17_18();
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_17_18();
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_17_18();
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_17_18();
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_20_18(v1[43]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_17_18();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21BA20);
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_17_18();
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_20_18(v1[46]);
    OUTLINED_FUNCTION_0_52();
  }
  OUTLINED_FUNCTION_65_0();
}

uint64_t Article.write(to:)()
{
  uint64_t v0;
  uint64_t result;

  result = sub_1A6335390();
  if (!v0)
  {
    OUTLINED_FUNCTION_95_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21BA08);
    OUTLINED_FUNCTION_47_4();
    OUTLINED_FUNCTION_47_4();
    OUTLINED_FUNCTION_95_1();
    sub_1A6332C54();
    return OUTLINED_FUNCTION_95_1();
  }
  return result;
}

uint64_t static Article.read(from:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = sub_1A6335384();
  if (!v1)
  {
    v5 = result;
    v6 = v4;
    v7 = OUTLINED_FUNCTION_69_1();
    OUTLINED_FUNCTION_10_20();
    OUTLINED_FUNCTION_10_20();
    v8 = OUTLINED_FUNCTION_69_1();
    sub_1A6332C54();
    result = OUTLINED_FUNCTION_69_1();
    *a1 = v5;
    a1[1] = v6;
    a1[2] = v7;
    a1[3] = v11;
    a1[4] = v12;
    a1[5] = v9;
    a1[6] = v10;
    a1[7] = v8;
    a1[8] = result;
  }
  return result;
}

uint64_t Coordinate.write(to:)()
{
  return sub_1A629DC98();
}

uint64_t sub_1A629DC98()
{
  uint64_t v0;
  uint64_t result;

  result = OUTLINED_FUNCTION_105_1();
  if (!v0)
    return OUTLINED_FUNCTION_22_13();
  return result;
}

void static Coordinate.read(from:)()
{
  sub_1A629DD0C();
}

void sub_1A629DD0C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_14_0();
  if (!v1)
  {
    OUTLINED_FUNCTION_14_0();
    *v0 = v3;
    v0[1] = v2;
  }
  OUTLINED_FUNCTION_84_1();
}

void ConditionCode.write(to:)()
{
  __asm { BR              X10 }
}

void sub_1A629DDA0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 1) = 1;
  sub_1A6334D78();
  OUTLINED_FUNCTION_66_1();
}

void static ConditionCode.read(from:)(_BYTE *a1@<X8>)
{
  uint64_t v1;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_14_0();
  if (!v1)
  {
    OUTLINED_FUNCTION_94_0();
    if (v3 >= 0x23)
    {
      OUTLINED_FUNCTION_39_4();
      sub_1A618B274(&qword_1EE847DB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB36B0], MEMORY[0x1E0DB36B8]);
      v4 = OUTLINED_FUNCTION_5_27();
      v6 = OUTLINED_FUNCTION_43_4(v4, v5);
      OUTLINED_FUNCTION_11_21(v6, *MEMORY[0x1E0DB36A8]);
      OUTLINED_FUNCTION_732();
    }
    else
    {
      *a1 = v3;
    }
  }
  OUTLINED_FUNCTION_25_10();
}

void DayForecast.write(to:)()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v5[192];
  _BYTE v6[192];
  _BYTE v7[192];
  _QWORD v8[25];
  char v9;

  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_55_2();
  if (!v0)
  {
    v2 = (int *)OUTLINED_FUNCTION_132();
    LOBYTE(v8[0]) = *(_BYTE *)(v1 + v2[5]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B618);
    sub_1A62A14DC();
    sub_1A62A1518();
    OUTLINED_FUNCTION_100_1();
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_21_14(v2[6]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C978);
    OUTLINED_FUNCTION_1_36();
    OUTLINED_FUNCTION_21_14(v2[7]);
    OUTLINED_FUNCTION_1_36();
    v8[0] = *(_QWORD *)(v1 + v2[8]);
    OUTLINED_FUNCTION_0_52();
    LOBYTE(v8[0]) = *(_BYTE *)(v1 + v2[9]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B678);
    sub_1A62A1554();
    sub_1A62A1590();
    OUTLINED_FUNCTION_100_1();
    OUTLINED_FUNCTION_2_39();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_107_1(v2[12]);
    OUTLINED_FUNCTION_0_52();
    sub_1A62A1464();
    sub_1A62A14A0();
    sub_1A6335270();
    OUTLINED_FUNCTION_107_1(v2[14]);
    OUTLINED_FUNCTION_0_52();
    LOBYTE(v8[0]) = *(_BYTE *)(v1 + v2[15]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B660);
    sub_1A62A1284();
    sub_1A62A12C0();
    OUTLINED_FUNCTION_100_1();
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_107_1(v2[16]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_107_1(v2[27]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_107_1(v2[29]);
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_2_39();
    OUTLINED_FUNCTION_21_14(v2[31]);
    OUTLINED_FUNCTION_1_36();
    OUTLINED_FUNCTION_21_14(v2[32]);
    OUTLINED_FUNCTION_1_36();
    OUTLINED_FUNCTION_21_14(v2[33]);
    OUTLINED_FUNCTION_1_36();
    OUTLINED_FUNCTION_21_14(v2[34]);
    OUTLINED_FUNCTION_1_36();
    v3 = (uint64_t *)(v1 + v2[35]);
    v4 = *v3;
    LOBYTE(v3) = *((_BYTE *)v3 + 8);
    v8[24] = v4;
    v9 = (char)v3;
    OUTLINED_FUNCTION_1_36();
    OUTLINED_FUNCTION_82_0(v8, (const void *)(v1 + v2[36]));
    OUTLINED_FUNCTION_122_0();
    OUTLINED_FUNCTION_82_0(v7, (const void *)(v1 + v2[37]));
    OUTLINED_FUNCTION_122_0();
    sub_1A62A15CC(v1 + v2[38], (uint64_t)v6);
    sub_1A62A15CC((uint64_t)v6, (uint64_t)v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B648);
    sub_1A62A1614();
    sub_1A62A1650();
    OUTLINED_FUNCTION_2_39();
  }
  OUTLINED_FUNCTION_1();
}

void DayPartForecast.write(to:)()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B5F0);
  sub_1A62A168C();
  sub_1A62A16C8();
  OUTLINED_FUNCTION_47_4();
  if (!v0)
  {
    OUTLINED_FUNCTION_22_13();
    OUTLINED_FUNCTION_22_13();
    OUTLINED_FUNCTION_22_13();
    OUTLINED_FUNCTION_22_13();
    ConditionCode.write(to:)();
    OUTLINED_FUNCTION_22_13();
    OUTLINED_FUNCTION_22_13();
    OUTLINED_FUNCTION_22_13();
    OUTLINED_FUNCTION_22_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C978);
    OUTLINED_FUNCTION_47_4();
    sub_1A62A1464();
    OUTLINED_FUNCTION_89_0();
    OUTLINED_FUNCTION_34_5();
    OUTLINED_FUNCTION_45_4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B660);
    sub_1A62A1284();
    sub_1A62A12C0();
    sub_1A6335750();
    sub_1A6335750();
    OUTLINED_FUNCTION_45_4();
    OUTLINED_FUNCTION_45_4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21BA20);
    OUTLINED_FUNCTION_48_4();
    OUTLINED_FUNCTION_45_4();
    OUTLINED_FUNCTION_45_4();
    OUTLINED_FUNCTION_45_4();
  }
}

uint64_t static DayForecast.read(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  int v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  _BYTE v56[4];
  int v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  _BYTE *v67;
  _BYTE *v68;
  _BYTE *v69;
  _BYTE *v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _BYTE v86[192];
  _BYTE v87[192];
  uint64_t v88;
  _BYTE v89[192];
  uint64_t v90;
  _BYTE v91[192];
  _BYTE v92[192];
  uint64_t v93;
  _QWORD v94[25];
  unsigned __int8 v95;
  uint64_t v96;
  unsigned __int8 v97;
  uint64_t v98;
  unsigned __int8 v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  char v103;
  double v104;
  double v105;
  double v106;
  char v107[2];
  double v108;
  double v109;
  char v110[2];
  uint64_t v111;
  uint64_t v112;
  unsigned __int8 v113;
  uint64_t v114;
  unsigned __int8 v115;
  char v116[10];

  v85 = a1;
  v74 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_919();
  v75 = v4 - v5;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_16_0();
  v76 = v7;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_16_0();
  v77 = v9;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_16_0();
  v78 = v11;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_16_0();
  v79 = v13;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_16_0();
  v80 = v15;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_16_0();
  v81 = v17;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_16_0();
  v82 = v19;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_16_0();
  v83 = v21;
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v22);
  v24 = &v56[-v23];
  MEMORY[0x1E0C80A78](v25);
  v27 = &v56[-v26];
  MEMORY[0x1E0C80A78](v28);
  v30 = &v56[-v29];
  MEMORY[0x1E0C80A78](v31);
  v33 = &v56[-v32];
  MEMORY[0x1E0C80A78](v34);
  v36 = &v56[-v35];
  v37 = OUTLINED_FUNCTION_6();
  v38 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  OUTLINED_FUNCTION_93_1();
  v39 = v84;
  result = sub_1A6332B28();
  if (!v39)
  {
    v67 = v24;
    v68 = v27;
    v69 = v30;
    v70 = v33;
    v71 = v36;
    v72 = v38;
    v73 = v37;
    v84 = v2;
    sub_1A62A14DC();
    sub_1A62A1518();
    OUTLINED_FUNCTION_19_17();
    v116[0] = v116[1];
    sub_1A6335744();
    v41 = v114;
    v42 = v115;
    OUTLINED_FUNCTION_19_17();
    v66 = v41;
    v43 = v112;
    v44 = v113;
    OUTLINED_FUNCTION_4_35();
    v65 = v44;
    v45 = v111;
    sub_1A62A1554();
    sub_1A62A1590();
    OUTLINED_FUNCTION_19_17();
    v64 = v43;
    v110[0] = v110[1];
    sub_1A6335744();
    v63 = v42;
    OUTLINED_FUNCTION_19_17();
    OUTLINED_FUNCTION_4_35();
    v46 = v109;
    sub_1A62A1464();
    OUTLINED_FUNCTION_89_0();
    v62 = sub_1A6335264();
    OUTLINED_FUNCTION_14_0();
    v47 = v108;
    sub_1A62A1284();
    OUTLINED_FUNCTION_121_0();
    OUTLINED_FUNCTION_19_17();
    v107[0] = v107[1];
    OUTLINED_FUNCTION_4_35();
    v48 = v106;
    OUTLINED_FUNCTION_13_20();
    OUTLINED_FUNCTION_13_20();
    OUTLINED_FUNCTION_13_20();
    OUTLINED_FUNCTION_13_20();
    OUTLINED_FUNCTION_13_20();
    OUTLINED_FUNCTION_13_20();
    OUTLINED_FUNCTION_13_20();
    OUTLINED_FUNCTION_13_20();
    OUTLINED_FUNCTION_13_20();
    OUTLINED_FUNCTION_13_20();
    OUTLINED_FUNCTION_4_35();
    v49 = v105;
    OUTLINED_FUNCTION_13_20();
    OUTLINED_FUNCTION_4_35();
    v50 = v104;
    OUTLINED_FUNCTION_13_20();
    OUTLINED_FUNCTION_18_18();
    v51 = v102;
    v52 = v103;
    OUTLINED_FUNCTION_19_17();
    v53 = v100;
    v54 = v101;
    OUTLINED_FUNCTION_19_17();
    v55 = v98;
    v61 = v99;
    OUTLINED_FUNCTION_19_17();
    v60 = v96;
    v59 = v97;
    OUTLINED_FUNCTION_19_17();
    v58 = v94[24];
    v57 = v95;
    OUTLINED_FUNCTION_118_0();
    OUTLINED_FUNCTION_82_0(&v93, v94);
    OUTLINED_FUNCTION_82_0(v92, v94);
    OUTLINED_FUNCTION_118_0();
    OUTLINED_FUNCTION_82_0(&v90, v91);
    OUTLINED_FUNCTION_82_0(v89, v91);
    sub_1A62A1614();
    sub_1A62A1650();
    OUTLINED_FUNCTION_19_17();
    sub_1A62A15CC((uint64_t)&v88, (uint64_t)v87);
    sub_1A62A15CC((uint64_t)v87, (uint64_t)v86);
    return DayForecast.init(forecastStart:conditionCode:humidityMax:humidityMin:maxUvIndex:moonPhase:moonrise:moonset:precipitationAmount:precipitationAmountByType:precipitationChance:precipitationType:snowfallAmount:solarNoon:solarMidnight:sunrise:sunriseAstronomical:sunriseCivil:sunriseNautical:sunset:sunsetAstronomical:sunsetCivil:sunsetNautical:temperatureMax:temperatureMaxTime:temperatureMin:temperatureMinTime:visibilityMax:visibilityMin:windGustSpeedMax:windSpeedAvg:windSpeedMax:daytimeForecast:overnightForecast:restOfDayForecast:)(v84, v116, v66, v63, v64, v65, v45, v110, v74, v46, v47, v48, v49, v50, (uint64_t)v71, (uint64_t)v70, v62, v107, (uint64_t)v69,
             (uint64_t)v68,
             (uint64_t)v67,
             v83,
             v82,
             v81,
             v80,
             v79,
             v78,
             v77,
             v76,
             v75,
             v51,
             v52,
             v53,
             v54,
             v55,
             v61,
             v60,
             v59,
             v58,
             v57,
             v92,
             v89,
             (uint64_t)v86);
  }
  return result;
}

void static DayPartForecast.read(from:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  _BYTE v26[2];

  OUTLINED_FUNCTION_72_0();
  sub_1A62A168C();
  sub_1A62A16C8();
  OUTLINED_FUNCTION_18_18();
  if (!v1)
  {
    v2 = v26[1];
    OUTLINED_FUNCTION_14_0();
    OUTLINED_FUNCTION_14_0();
    OUTLINED_FUNCTION_14_0();
    OUTLINED_FUNCTION_14_0();
    static ConditionCode.read(from:)(v26);
    v3 = v26[0];
    OUTLINED_FUNCTION_14_0();
    OUTLINED_FUNCTION_14_0();
    OUTLINED_FUNCTION_14_0();
    OUTLINED_FUNCTION_14_0();
    sub_1A6335744();
    sub_1A62A1464();
    OUTLINED_FUNCTION_89_0();
    v4 = sub_1A6335264();
    OUTLINED_FUNCTION_14_0();
    sub_1A62A1284();
    OUTLINED_FUNCTION_121_0();
    OUTLINED_FUNCTION_85_1();
    OUTLINED_FUNCTION_85_1();
    OUTLINED_FUNCTION_38_3();
    OUTLINED_FUNCTION_38_3();
    OUTLINED_FUNCTION_85_1();
    OUTLINED_FUNCTION_38_3();
    OUTLINED_FUNCTION_38_3();
    OUTLINED_FUNCTION_38_3();
    *(_BYTE *)v0 = v2;
    *(_QWORD *)(v0 + 8) = v24;
    *(_QWORD *)(v0 + 16) = v23;
    *(_QWORD *)(v0 + 24) = v22;
    *(_QWORD *)(v0 + 32) = v21;
    *(_BYTE *)(v0 + 40) = v3;
    *(_QWORD *)(v0 + 48) = v20;
    *(_QWORD *)(v0 + 56) = v19;
    *(_QWORD *)(v0 + 64) = v18;
    *(_QWORD *)(v0 + 72) = v17;
    *(_QWORD *)(v0 + 80) = v15;
    *(_BYTE *)(v0 + 88) = v16;
    *(_QWORD *)(v0 + 96) = v4;
    *(_QWORD *)(v0 + 104) = v14;
    *(_BYTE *)(v0 + 112) = v25;
    *(_QWORD *)(v0 + 120) = v12;
    *(_BYTE *)(v0 + 128) = v13;
    *(_QWORD *)(v0 + 136) = v11;
    *(_QWORD *)(v0 + 144) = v10;
    *(_QWORD *)(v0 + 152) = v8;
    *(_BYTE *)(v0 + 160) = v9;
    *(_QWORD *)(v0 + 168) = v7;
    *(_QWORD *)(v0 + 176) = v6;
    *(_QWORD *)(v0 + 184) = v5;
  }
}

uint64_t DaySummary.write(to:)()
{
  uint64_t v0;
  uint64_t result;

  result = sub_1A6335390();
  if (!v0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21BA20);
    OUTLINED_FUNCTION_48_4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21C978);
    OUTLINED_FUNCTION_36_3();
    OUTLINED_FUNCTION_36_3();
    OUTLINED_FUNCTION_36_3();
    return OUTLINED_FUNCTION_36_3();
  }
  return result;
}

uint64_t static DaySummary.read(from:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;

  result = sub_1A6335384();
  if (!v1)
  {
    v5 = result;
    v6 = v4;
    OUTLINED_FUNCTION_10_20();
    OUTLINED_FUNCTION_10_20();
    OUTLINED_FUNCTION_10_20();
    OUTLINED_FUNCTION_10_20();
    result = OUTLINED_FUNCTION_10_20();
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = v15;
    *(_BYTE *)(a1 + 24) = v16;
    *(_QWORD *)(a1 + 32) = v13;
    *(_BYTE *)(a1 + 40) = v14;
    *(_QWORD *)(a1 + 48) = v11;
    *(_BYTE *)(a1 + 56) = v12;
    *(_QWORD *)(a1 + 64) = v9;
    *(_BYTE *)(a1 + 72) = v10;
    *(_QWORD *)(a1 + 80) = v7;
    *(_BYTE *)(a1 + 88) = v8;
  }
  return result;
}

void DayWeatherStatistics.write(to:)()
{
  sub_1A62A00C0();
}

uint64_t static DayWeatherStatistics.read(from:)()
{
  return sub_1A62A01A4();
}

void ForecastMinute.write(to:)()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_48_4();
  if (!v0)
  {
    OUTLINED_FUNCTION_112();
    OUTLINED_FUNCTION_67();
    OUTLINED_FUNCTION_67();
    OUTLINED_FUNCTION_67();
  }
  OUTLINED_FUNCTION_27_8();
}

int *static ForecastMinute.read(from:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[4];

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OUTLINED_FUNCTION_6();
  result = (int *)OUTLINED_FUNCTION_18_18();
  if (!v1)
  {
    OUTLINED_FUNCTION_4_35();
    v8 = v14[3];
    OUTLINED_FUNCTION_4_35();
    v9 = v14[1];
    OUTLINED_FUNCTION_4_35();
    v10 = v14[0];
    OUTLINED_FUNCTION_103();
    __swift_storeEnumTagSinglePayload(v11, v12, v13, v6);
    sub_1A618D2C8((uint64_t)v5, a1);
    result = (int *)OUTLINED_FUNCTION_112();
    *(_QWORD *)(a1 + result[5]) = v8;
    *(_QWORD *)(a1 + result[6]) = v9;
    *(_QWORD *)(a1 + result[7]) = v10;
  }
  return result;
}

void HistoricalFacts.write(to:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_113_0();
  OUTLINED_FUNCTION_40_5(&qword_1EE847E50, v0, (uint64_t)&protocol conformance descriptor for HistoricalFact);
  OUTLINED_FUNCTION_40_5(&qword_1EE847E58, v1, (uint64_t)&protocol conformance descriptor for HistoricalFact);
  OUTLINED_FUNCTION_15_22();
  OUTLINED_FUNCTION_35_5();
}

void static HistoricalFacts.read(from:)(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_113_0();
  OUTLINED_FUNCTION_40_5(&qword_1EE847E50, v3, (uint64_t)&protocol conformance descriptor for HistoricalFact);
  OUTLINED_FUNCTION_40_5(&qword_1EE847E58, v4, (uint64_t)&protocol conformance descriptor for HistoricalFact);
  v5 = OUTLINED_FUNCTION_77_1();
  if (!v1)
    *a1 = v5;
  OUTLINED_FUNCTION_35_5();
}

void MonthWeatherStatistics.write(to:)()
{
  sub_1A62A00C0();
}

void sub_1A62A00C0()
{
  uint64_t v0;

  sub_1A6334D78();
  if (!v0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847E20);
    sub_1A62A172C();
    sub_1A62A1768();
    OUTLINED_FUNCTION_37_5();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847E38);
    sub_1A62A17A4();
    sub_1A62A17E0();
    OUTLINED_FUNCTION_37_5();
  }
  OUTLINED_FUNCTION_65_0();
}

uint64_t static MonthWeatherStatistics.read(from:)()
{
  return sub_1A62A01A4();
}

uint64_t sub_1A62A01A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  __int128 v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  OUTLINED_FUNCTION_72_0();
  result = OUTLINED_FUNCTION_14_0();
  if (!v1)
  {
    sub_1A62A172C();
    sub_1A62A1768();
    OUTLINED_FUNCTION_18_18();
    sub_1A62A17A4();
    sub_1A62A17E0();
    result = OUTLINED_FUNCTION_18_18();
    *(_QWORD *)v0 = v9;
    *(_QWORD *)(v0 + 8) = v6;
    *(_QWORD *)(v0 + 16) = v7;
    *(_BYTE *)(v0 + 24) = v8;
    *(_OWORD *)(v0 + 32) = v3;
    *(_QWORD *)(v0 + 48) = v4;
    *(_BYTE *)(v0 + 56) = v5;
  }
  return result;
}

void News.write(to:)(uint64_t a1)
{
  sub_1A62A02C8(a1, (void (*)(_QWORD))type metadata accessor for News, (void (*)(void))sub_1A62A181C, (void (*)(void))sub_1A62A1858);
}

void sub_1A62A02C8(uint64_t a1, void (*a2)(_QWORD), void (*a3)(void), void (*a4)(void))
{
  uint64_t v4;

  Metadata.write(to:)();
  if (!v4)
  {
    a2(0);
    a3();
    a4();
    OUTLINED_FUNCTION_57_2();
  }
  OUTLINED_FUNCTION_26_10();
}

void static News.read(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_402();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_16_21(v2, v4);
  if (!v0)
  {
    sub_1A62A181C();
    sub_1A62A1858();
    OUTLINED_FUNCTION_77_1();
    OUTLINED_FUNCTION_51_2();
    v3 = type metadata accessor for News();
    OUTLINED_FUNCTION_125_0(v3);
  }
  OUTLINED_FUNCTION_27_8();
}

void Placement.write(to:)()
{
  uint64_t v0;

  sub_1A62A1894();
  sub_1A62A18D0();
  sub_1A6335534();
  if (!v0)
    PlacementLocation.write(to:)();
  OUTLINED_FUNCTION_27_8();
}

void PlacementLocation.write(to:)()
{
  __asm { BR              X10 }
}

void sub_1A62A0470()
{
  sub_1A6334D78();
  OUTLINED_FUNCTION_83_1();
}

void static Placement.read(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  OUTLINED_FUNCTION_72_0();
  sub_1A62A1894();
  sub_1A62A18D0();
  v2 = OUTLINED_FUNCTION_77_1();
  if (!v1)
  {
    v3 = v2;
    static PlacementLocation.read(from:)(&v5);
    v4 = v5;
    *(_QWORD *)v0 = v3;
    *(_BYTE *)(v0 + 8) = v4;
  }
}

void static PlacementLocation.read(from:)(_BYTE *a1@<X8>)
{
  uint64_t v1;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_14_0();
  if (!v1)
  {
    OUTLINED_FUNCTION_94_0();
    if (v3 >= 0xF)
    {
      OUTLINED_FUNCTION_39_4();
      sub_1A618B274(&qword_1EE847DB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB36B0], MEMORY[0x1E0DB36B8]);
      v4 = OUTLINED_FUNCTION_5_27();
      v6 = OUTLINED_FUNCTION_43_4(v4, v5);
      OUTLINED_FUNCTION_11_21(v6, *MEMORY[0x1E0DB36A8]);
      OUTLINED_FUNCTION_732();
    }
    else
    {
      *a1 = v3;
    }
  }
  OUTLINED_FUNCTION_25_10();
}

void Pollutant.write(to:)()
{
  uint64_t v0;

  sub_1A6335390();
  if (!v0)
  {
    OUTLINED_FUNCTION_22_13();
    OUTLINED_FUNCTION_22_13();
  }
  OUTLINED_FUNCTION_84_1();
}

void PollutantUnits.write(to:)()
{
  sub_1A62A082C();
}

void sub_1A62A082C()
{
  sub_1A6334D78();
  OUTLINED_FUNCTION_66_1();
}

void static Pollutant.read(from:)(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v3 = sub_1A6335384();
  if (!v1)
  {
    v5 = v3;
    v6 = v4;
    OUTLINED_FUNCTION_4_35();
    OUTLINED_FUNCTION_4_35();
    if (v9 == 1)
    {
      v7 = 0;
      goto LABEL_10;
    }
    if (v9 == 2)
    {
      v7 = 1;
LABEL_10:
      *(_QWORD *)a1 = v5;
      *(_QWORD *)(a1 + 8) = v6;
      *(_QWORD *)(a1 + 16) = v10;
      *(_BYTE *)(a1 + 24) = v7;
      goto LABEL_5;
    }
    OUTLINED_FUNCTION_39_4();
    sub_1A618B274(&qword_1EE847DB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB36B0], MEMORY[0x1E0DB36B8]);
    OUTLINED_FUNCTION_5_27();
    OUTLINED_FUNCTION_11_21(v8, *MEMORY[0x1E0DB36A8]);
    swift_willThrow();
    swift_bridgeObjectRelease();
  }
LABEL_5:
  OUTLINED_FUNCTION_52_2();
}

void static PollutantUnits.read(from:)(char *a1@<X8>)
{
  sub_1A6298D3C(a1);
}

uint64_t PrecipitationAmountRange.write(to:)()
{
  uint64_t v0;
  uint64_t result;

  result = OUTLINED_FUNCTION_105_1();
  if (!v0)
  {
    OUTLINED_FUNCTION_22_13();
    OUTLINED_FUNCTION_22_13();
    OUTLINED_FUNCTION_22_13();
    OUTLINED_FUNCTION_22_13();
    return OUTLINED_FUNCTION_22_13();
  }
  return result;
}

uint64_t static PrecipitationAmountRange.read(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_72_0();
  result = OUTLINED_FUNCTION_14_0();
  if (!v1)
  {
    OUTLINED_FUNCTION_14_0();
    OUTLINED_FUNCTION_14_0();
    OUTLINED_FUNCTION_14_0();
    OUTLINED_FUNCTION_14_0();
    result = OUTLINED_FUNCTION_14_0();
    *v0 = v8;
    v0[1] = v7;
    v0[2] = v6;
    v0[3] = v5;
    v0[4] = v4;
    v0[5] = v3;
  }
  return result;
}

void TrendDeviation.write(to:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_102_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_47_4();
  if (!v0)
  {
    OUTLINED_FUNCTION_108();
    OUTLINED_FUNCTION_115_0();
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED219CB8);
    sub_1A62A190C();
    sub_1A62A1948();
    OUTLINED_FUNCTION_28_8();
    OUTLINED_FUNCTION_28_8();
    OUTLINED_FUNCTION_28_8();
    OUTLINED_FUNCTION_28_8();
  }
  OUTLINED_FUNCTION_29_9();
}

void static TrendDeviation.read(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned __int8 a11, char a12, char a13, char a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;

  OUTLINED_FUNCTION_17_1();
  v16 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_18_18();
  if (!v14)
  {
    sub_1A62A190C();
    sub_1A62A1948();
    OUTLINED_FUNCTION_18_18();
    OUTLINED_FUNCTION_18_18();
    OUTLINED_FUNCTION_18_18();
    OUTLINED_FUNCTION_18_18();
    v30 = a11;
    OUTLINED_FUNCTION_103();
    __swift_storeEnumTagSinglePayload(v21, v22, v23, v20);
    v24 = (int *)OUTLINED_FUNCTION_108();
    v25 = v24[5];
    *(_BYTE *)(v16 + v25) = 4;
    v26 = v24[6];
    *(_BYTE *)(v16 + v26) = 4;
    v27 = v24[7];
    *(_BYTE *)(v16 + v27) = 4;
    v28 = v24[8];
    *(_BYTE *)(v16 + v28) = 4;
    sub_1A618D2C8((uint64_t)v19, v16);
    *(_BYTE *)(v16 + v25) = a14;
    *(_BYTE *)(v16 + v26) = a13;
    *(_BYTE *)(v16 + v27) = a12;
    *(_BYTE *)(v16 + v28) = v30;
  }
  OUTLINED_FUNCTION_1();
}

void Deviation.write(to:)()
{
  sub_1A62A1D88();
}

void static Deviation.read(from:)(_BYTE *a1@<X8>)
{
  sub_1A62A0EA0(a1);
}

void sub_1A62A0EA0(_BYTE *a1@<X8>)
{
  uint64_t v1;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_14_0();
  if (!v1)
  {
    OUTLINED_FUNCTION_94_0();
    if (v3 >= 5)
    {
      OUTLINED_FUNCTION_39_4();
      sub_1A618B274(&qword_1EE847DB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB36B0], MEMORY[0x1E0DB36B8]);
      v4 = OUTLINED_FUNCTION_5_27();
      v6 = OUTLINED_FUNCTION_43_4(v4, v5);
      OUTLINED_FUNCTION_11_21(v6, *MEMORY[0x1E0DB36A8]);
      OUTLINED_FUNCTION_732();
    }
    else
    {
      *a1 = v3;
    }
  }
  OUTLINED_FUNCTION_25_10();
}

unint64_t sub_1A62A0F34()
{
  unint64_t result;

  result = qword_1EE847DC8;
  if (!qword_1EE847DC8)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for DayWeatherStatistics, &type metadata for DayWeatherStatistics);
    atomic_store(result, (unint64_t *)&qword_1EE847DC8);
  }
  return result;
}

unint64_t sub_1A62A0F70()
{
  unint64_t result;

  result = qword_1EE847DD0;
  if (!qword_1EE847DD0)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for DayWeatherStatistics, &type metadata for DayWeatherStatistics);
    atomic_store(result, (unint64_t *)&qword_1EE847DD0);
  }
  return result;
}

unint64_t sub_1A62A0FAC()
{
  unint64_t result;

  result = qword_1ED21C918;
  if (!qword_1ED21C918)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for Metadata.Units, &type metadata for Metadata.Units);
    atomic_store(result, (unint64_t *)&qword_1ED21C918);
  }
  return result;
}

unint64_t sub_1A62A0FE8()
{
  unint64_t result;

  result = qword_1ED21C920;
  if (!qword_1ED21C920)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for Metadata.Units, &type metadata for Metadata.Units);
    atomic_store(result, (unint64_t *)&qword_1ED21C920);
  }
  return result;
}

unint64_t sub_1A62A1024()
{
  unint64_t result;

  result = qword_1ED21B400;
  if (!qword_1ED21B400)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for AirQuality.SourceType, &type metadata for AirQuality.SourceType);
    atomic_store(result, (unint64_t *)&qword_1ED21B400);
  }
  return result;
}

unint64_t sub_1A62A1060()
{
  unint64_t result;

  result = qword_1ED21B408;
  if (!qword_1ED21B408)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for AirQuality.SourceType, &type metadata for AirQuality.SourceType);
    atomic_store(result, (unint64_t *)&qword_1ED21B408);
  }
  return result;
}

unint64_t sub_1A62A109C()
{
  unint64_t result;

  result = qword_1ED21B518;
  if (!qword_1ED21B518)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for Pollutant, &type metadata for Pollutant);
    atomic_store(result, (unint64_t *)&qword_1ED21B518);
  }
  return result;
}

unint64_t sub_1A62A10D8()
{
  unint64_t result;

  result = qword_1ED21B520;
  if (!qword_1ED21B520)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for Pollutant, &type metadata for Pollutant);
    atomic_store(result, (unint64_t *)&qword_1ED21B520);
  }
  return result;
}

uint64_t sub_1A62A1114(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED21B538);
    v6 = sub_1A62A109C();
    v7 = sub_1A62A10D8();
    v8[0] = MEMORY[0x1E0DB5158];
    v8[1] = MEMORY[0x1E0DB5160];
    v8[2] = v6;
    v8[3] = v7;
    result = MEMORY[0x1A85BEED0](a2, v5, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A62A1194()
{
  unint64_t result;

  result = qword_1EE847DD8;
  if (!qword_1EE847DD8)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for HourWeatherStatistics, &type metadata for HourWeatherStatistics);
    atomic_store(result, (unint64_t *)&qword_1EE847DD8);
  }
  return result;
}

unint64_t sub_1A62A11D0()
{
  unint64_t result;

  result = qword_1EE847DE0;
  if (!qword_1EE847DE0)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for HourWeatherStatistics, &type metadata for HourWeatherStatistics);
    atomic_store(result, (unint64_t *)&qword_1EE847DE0);
  }
  return result;
}

unint64_t sub_1A62A120C()
{
  unint64_t result;

  result = qword_1EE847DE8;
  if (!qword_1EE847DE8)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for MonthWeatherStatistics, &type metadata for MonthWeatherStatistics);
    atomic_store(result, (unint64_t *)&qword_1EE847DE8);
  }
  return result;
}

unint64_t sub_1A62A1248()
{
  unint64_t result;

  result = qword_1EE847DF0;
  if (!qword_1EE847DF0)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for MonthWeatherStatistics, &type metadata for MonthWeatherStatistics);
    atomic_store(result, (unint64_t *)&qword_1EE847DF0);
  }
  return result;
}

unint64_t sub_1A62A1284()
{
  unint64_t result;

  result = qword_1ED21B650;
  if (!qword_1ED21B650)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for PrecipitationType, &type metadata for PrecipitationType);
    atomic_store(result, (unint64_t *)&qword_1ED21B650);
  }
  return result;
}

unint64_t sub_1A62A12C0()
{
  unint64_t result;

  result = qword_1ED21B658;
  if (!qword_1ED21B658)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for PrecipitationType, &type metadata for PrecipitationType);
    atomic_store(result, (unint64_t *)&qword_1ED21B658);
  }
  return result;
}

unint64_t sub_1A62A12FC()
{
  unint64_t result;

  result = qword_1ED21C6D8;
  if (!qword_1ED21C6D8)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for PressureTrend, &type metadata for PressureTrend);
    atomic_store(result, (unint64_t *)&qword_1ED21C6D8);
  }
  return result;
}

unint64_t sub_1A62A1338()
{
  unint64_t result;

  result = qword_1ED21C6E0;
  if (!qword_1ED21C6E0)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for PressureTrend, &type metadata for PressureTrend);
    atomic_store(result, (unint64_t *)&qword_1ED21C6E0);
  }
  return result;
}

unint64_t sub_1A62A1374()
{
  unint64_t result;

  result = qword_1EE847DF8;
  if (!qword_1EE847DF8)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for DaySummary, &type metadata for DaySummary);
    atomic_store(result, (unint64_t *)&qword_1EE847DF8);
  }
  return result;
}

unint64_t sub_1A62A13B0()
{
  unint64_t result;

  result = qword_1EE847E00;
  if (!qword_1EE847E00)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for DaySummary, &type metadata for DaySummary);
    atomic_store(result, (unint64_t *)&qword_1EE847E00);
  }
  return result;
}

unint64_t sub_1A62A13EC()
{
  unint64_t result;

  result = qword_1EE847E08;
  if (!qword_1EE847E08)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for Quantiles, &type metadata for Quantiles);
    atomic_store(result, (unint64_t *)&qword_1EE847E08);
  }
  return result;
}

unint64_t sub_1A62A1428()
{
  unint64_t result;

  result = qword_1EE847E10;
  if (!qword_1EE847E10)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for Quantiles, &type metadata for Quantiles);
    atomic_store(result, (unint64_t *)&qword_1EE847E10);
  }
  return result;
}

unint64_t sub_1A62A1464()
{
  unint64_t result;

  result = qword_1ED21C298;
  if (!qword_1ED21C298)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for PrecipitationAmountRange, &type metadata for PrecipitationAmountRange);
    atomic_store(result, (unint64_t *)&qword_1ED21C298);
  }
  return result;
}

unint64_t sub_1A62A14A0()
{
  unint64_t result;

  result = qword_1ED21C2A0;
  if (!qword_1ED21C2A0)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for PrecipitationAmountRange, &type metadata for PrecipitationAmountRange);
    atomic_store(result, (unint64_t *)&qword_1ED21C2A0);
  }
  return result;
}

unint64_t sub_1A62A14DC()
{
  unint64_t result;

  result = qword_1ED21B608;
  if (!qword_1ED21B608)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for ConditionCode, &type metadata for ConditionCode);
    atomic_store(result, (unint64_t *)&qword_1ED21B608);
  }
  return result;
}

unint64_t sub_1A62A1518()
{
  unint64_t result;

  result = qword_1ED21B610;
  if (!qword_1ED21B610)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for ConditionCode, &type metadata for ConditionCode);
    atomic_store(result, (unint64_t *)&qword_1ED21B610);
  }
  return result;
}

unint64_t sub_1A62A1554()
{
  unint64_t result;

  result = qword_1ED21B668;
  if (!qword_1ED21B668)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for MoonPhase, &type metadata for MoonPhase);
    atomic_store(result, (unint64_t *)&qword_1ED21B668);
  }
  return result;
}

unint64_t sub_1A62A1590()
{
  unint64_t result;

  result = qword_1ED21B670;
  if (!qword_1ED21B670)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for MoonPhase, &type metadata for MoonPhase);
    atomic_store(result, (unint64_t *)&qword_1ED21B670);
  }
  return result;
}

uint64_t sub_1A62A15CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B648);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A62A1614()
{
  unint64_t result;

  result = qword_1ED21B638;
  if (!qword_1ED21B638)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for DayPartForecast, &type metadata for DayPartForecast);
    atomic_store(result, (unint64_t *)&qword_1ED21B638);
  }
  return result;
}

unint64_t sub_1A62A1650()
{
  unint64_t result;

  result = qword_1ED21B640;
  if (!qword_1ED21B640)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for DayPartForecast, &type metadata for DayPartForecast);
    atomic_store(result, (unint64_t *)&qword_1ED21B640);
  }
  return result;
}

unint64_t sub_1A62A168C()
{
  unint64_t result;

  result = qword_1ED21B5C8;
  if (!qword_1ED21B5C8)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for DayPartType, &type metadata for DayPartType);
    atomic_store(result, (unint64_t *)&qword_1ED21B5C8);
  }
  return result;
}

unint64_t sub_1A62A16C8()
{
  unint64_t result;

  result = qword_1ED21B5D0;
  if (!qword_1ED21B5D0)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for DayPartType, &type metadata for DayPartType);
    atomic_store(result, (unint64_t *)&qword_1ED21B5D0);
  }
  return result;
}

uint64_t sub_1A62A1704(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1A62A172C()
{
  unint64_t result;

  result = qword_1EE847E28;
  if (!qword_1EE847E28)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for TemperatureRange, &type metadata for TemperatureRange);
    atomic_store(result, (unint64_t *)&qword_1EE847E28);
  }
  return result;
}

unint64_t sub_1A62A1768()
{
  unint64_t result;

  result = qword_1EE847E30;
  if (!qword_1EE847E30)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for TemperatureRange, &type metadata for TemperatureRange);
    atomic_store(result, (unint64_t *)&qword_1EE847E30);
  }
  return result;
}

unint64_t sub_1A62A17A4()
{
  unint64_t result;

  result = qword_1EE847E40;
  if (!qword_1EE847E40)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for PrecipitationAmount, &type metadata for PrecipitationAmount);
    atomic_store(result, (unint64_t *)&qword_1EE847E40);
  }
  return result;
}

unint64_t sub_1A62A17E0()
{
  unint64_t result;

  result = qword_1EE847E48;
  if (!qword_1EE847E48)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for PrecipitationAmount, &type metadata for PrecipitationAmount);
    atomic_store(result, (unint64_t *)&qword_1EE847E48);
  }
  return result;
}

unint64_t sub_1A62A181C()
{
  unint64_t result;

  result = qword_1ED219938;
  if (!qword_1ED219938)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for Placement, &type metadata for Placement);
    atomic_store(result, (unint64_t *)&qword_1ED219938);
  }
  return result;
}

unint64_t sub_1A62A1858()
{
  unint64_t result;

  result = qword_1ED219940;
  if (!qword_1ED219940)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for Placement, &type metadata for Placement);
    atomic_store(result, (unint64_t *)&qword_1ED219940);
  }
  return result;
}

unint64_t sub_1A62A1894()
{
  unint64_t result;

  result = qword_1ED2198D8;
  if (!qword_1ED2198D8)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for Article, &type metadata for Article);
    atomic_store(result, (unint64_t *)&qword_1ED2198D8);
  }
  return result;
}

unint64_t sub_1A62A18D0()
{
  unint64_t result;

  result = qword_1ED2198E0;
  if (!qword_1ED2198E0)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for Article, &type metadata for Article);
    atomic_store(result, (unint64_t *)&qword_1ED2198E0);
  }
  return result;
}

unint64_t sub_1A62A190C()
{
  unint64_t result;

  result = qword_1ED219CA8;
  if (!qword_1ED219CA8)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for ChangeDirection, &type metadata for ChangeDirection);
    atomic_store(result, (unint64_t *)&qword_1ED219CA8);
  }
  return result;
}

unint64_t sub_1A62A1948()
{
  unint64_t result;

  result = qword_1ED219CB0;
  if (!qword_1ED219CB0)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for ChangeDirection, &type metadata for ChangeDirection);
    atomic_store(result, (unint64_t *)&qword_1ED219CB0);
  }
  return result;
}

void WeatherComparisons.write(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_109_1();
  OUTLINED_FUNCTION_62_1(&qword_1ED219848, v1, (uint64_t)&protocol conformance descriptor for WeatherComparison);
  OUTLINED_FUNCTION_62_1(&qword_1ED219850, v2, (uint64_t)&protocol conformance descriptor for WeatherComparison);
  sub_1A6335534();
  if (!v0)
  {
    type metadata accessor for WeatherComparisons();
    Metadata.write(to:)();
  }
  OUTLINED_FUNCTION_26_10();
}

void static WeatherComparisons.read(from:)(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_402();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_2();
  v6 = v5 - v4;
  OUTLINED_FUNCTION_109_1();
  OUTLINED_FUNCTION_62_1(&qword_1ED219848, v7, (uint64_t)&protocol conformance descriptor for WeatherComparison);
  OUTLINED_FUNCTION_62_1(&qword_1ED219850, v8, (uint64_t)&protocol conformance descriptor for WeatherComparison);
  v9 = OUTLINED_FUNCTION_120_0();
  if (!v1)
  {
    v10 = v9;
    OUTLINED_FUNCTION_119_0(v6);
    *a1 = v10;
    v11 = type metadata accessor for WeatherComparisons();
    sub_1A618D95C(v6, (uint64_t)a1 + *(int *)(v11 + 20));
  }
  OUTLINED_FUNCTION_26_10();
}

void Certainty.write(to:)()
{
  sub_1A62A1D88();
}

void static Certainty.read(from:)(_BYTE *a1@<X8>)
{
  sub_1A62A0EA0(a1);
}

void Importance.write(to:)()
{
  sub_1A62A1B58();
}

void sub_1A62A1B58()
{
  __asm { BR              X10 }
}

void sub_1A62A1B80()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 4) = 1;
  sub_1A6334D78();
  OUTLINED_FUNCTION_66_1();
}

void static Importance.read(from:)(_BYTE *a1@<X8>)
{
  sub_1A629AF50(a1);
}

void MoonPhase.write(to:)()
{
  sub_1A62A1C30();
}

void sub_1A62A1C30()
{
  __asm { BR              X10 }
}

void sub_1A62A1C58()
{
  sub_1A6334D78();
  OUTLINED_FUNCTION_66_1();
}

void static MoonPhase.read(from:)(_BYTE *a1@<X8>)
{
  sub_1A629C2D4(a1);
}

void Severity.write(to:)()
{
  sub_1A62A1D88();
}

void sub_1A62A1D88()
{
  __asm { BR              X10 }
}

void sub_1A62A1DB0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 5) = 1;
  sub_1A6334D78();
  OUTLINED_FUNCTION_66_1();
}

void static Severity.read(from:)(_BYTE *a1@<X8>)
{
  sub_1A62A0EA0(a1);
}

void Metadata.Units.write(to:)()
{
  WeatherComparison.BaselineType.write(to:)();
}

uint64_t OUTLINED_FUNCTION_36_3()
{
  return sub_1A6335750();
}

uint64_t OUTLINED_FUNCTION_37_5()
{
  return sub_1A6335750();
}

uint64_t OUTLINED_FUNCTION_55_2()
{
  return sub_1A6332B34();
}

uint64_t OUTLINED_FUNCTION_62_1(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t);

  return sub_1A618B274(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_70_1()
{
  return sub_1A6332B28();
}

uint64_t OUTLINED_FUNCTION_77_1()
{
  return sub_1A6335528();
}

uint64_t OUTLINED_FUNCTION_86_1()
{
  return sub_1A6335390();
}

unint64_t OUTLINED_FUNCTION_89_0()
{
  return sub_1A62A14A0();
}

uint64_t OUTLINED_FUNCTION_90_0()
{
  return sub_1A6335384();
}

void OUTLINED_FUNCTION_91_1(uint64_t a1@<X8>)
{
  static Metadata.read(from:)(a1);
}

uint64_t OUTLINED_FUNCTION_98_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_105_1()
{
  return sub_1A6334D78();
}

double OUTLINED_FUNCTION_107_1@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + a1);
  *(double *)&STACK[0x248] = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_109_1()
{
  return type metadata accessor for WeatherComparison();
}

uint64_t OUTLINED_FUNCTION_116()
{
  return swift_bridgeObjectRelease();
}

unint64_t OUTLINED_FUNCTION_121_0()
{
  return sub_1A62A12C0();
}

void OUTLINED_FUNCTION_122_0()
{
  DayPartForecast.write(to:)();
}

uint64_t OUTLINED_FUNCTION_127_0()
{
  uint64_t v0;

  return sub_1A6187574(v0);
}

uint64_t OUTLINED_FUNCTION_133_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_134_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_135_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t Double.humanReadableDescription.getter()
{
  OUTLINED_FUNCTION_29_0();
  sub_1A63353F0();
  return 0;
}

WeatherDaemon::PlacementLocation_optional __swiftcall PlacementLocation.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  WeatherDaemon::PlacementLocation_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A6335918();
  result.value = swift_bridgeObjectRelease();
  v5 = 15;
  if (v3 < 0xF)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t PlacementLocation.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A62A217C + 4 * byte_1A6340AB0[*v0]))(0xD000000000000011, 0x80000001A63489C0);
}

uint64_t sub_1A62A217C(uint64_t a1)
{
  return a1 + 10;
}

uint64_t sub_1A62A22A4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A6243DB8(*a1, *a2);
}

unint64_t sub_1A62A22B4()
{
  unint64_t result;

  result = qword_1EE847E60;
  if (!qword_1EE847E60)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for PlacementLocation, &type metadata for PlacementLocation);
    atomic_store(result, (unint64_t *)&qword_1EE847E60);
  }
  return result;
}

void sub_1A62A22F0()
{
  unsigned __int8 *v0;

  sub_1A62DE330(*v0);
}

uint64_t sub_1A62A22F8(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1A61F4904(a1, *v1);
}

void sub_1A62A2300(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1A61F5B18(a1, *v1);
}

WeatherDaemon::PlacementLocation_optional sub_1A62A2308(Swift::String *a1)
{
  return PlacementLocation.init(rawValue:)(*a1);
}

uint64_t sub_1A62A2314@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PlacementLocation.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A62A2338()
{
  sub_1A62A255C();
  return sub_1A63354F8();
}

uint64_t sub_1A62A2394()
{
  sub_1A62A255C();
  return sub_1A63354BC();
}

void sub_1A62A23E0(_BYTE *a1@<X8>)
{
  static PlacementLocation.read(from:)(a1);
}

void sub_1A62A23F4()
{
  PlacementLocation.write(to:)();
}

uint64_t getEnumTagSinglePayload for PlacementLocation(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF2)
  {
    if (a2 + 14 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 14) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 15;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xF;
  v5 = v6 - 15;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PlacementLocation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_1A62A24DC + 4 * byte_1A6340AC4[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_1A62A2510 + 4 * byte_1A6340ABF[v4]))();
}

uint64_t sub_1A62A2510(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A62A2518(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A62A2520);
  return result;
}

uint64_t sub_1A62A252C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A62A2534);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_1A62A2538(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A62A2540(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlacementLocation()
{
  return &type metadata for PlacementLocation;
}

unint64_t sub_1A62A255C()
{
  unint64_t result;

  result = qword_1ED219888;
  if (!qword_1ED219888)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for PlacementLocation, &type metadata for PlacementLocation);
    atomic_store(result, (unint64_t *)&qword_1ED219888);
  }
  return result;
}

uint64_t Importance.init(from:)@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  void *v7;
  Swift::String v8;
  char v9;
  _QWORD v11[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_0_28();
  sub_1A6335BD0();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    OUTLINED_FUNCTION_0_28();
    v5 = sub_1A6335AD4();
    v7 = v6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    v8._countAndFlagsBits = v5;
    v8._object = v7;
    Importance.init(rawValue:)(v8);
    v9 = v11[0];
    if (LOBYTE(v11[0]) == 4)
      v9 = 3;
    *a2 = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

WeatherDaemon::Importance_optional __swiftcall Importance.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  WeatherDaemon::Importance_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A6335918();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t Importance.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A62A26E0 + 4 * byte_1A6340C60[*v0]))(1751607656, 0xE400000000000000);
}

uint64_t sub_1A62A26E0()
{
  return 7827308;
}

uint64_t sub_1A62A26F0()
{
  return 0x6C616D726F6ELL;
}

uint64_t sub_1A62A2704()
{
  return 0x6E776F6E6B6E75;
}

void sub_1A62A271C(char *a1)
{
  sub_1A6244750(*a1);
}

unint64_t sub_1A62A272C()
{
  unint64_t result;

  result = qword_1EE847E68[0];
  if (!qword_1EE847E68[0])
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for Importance, &type metadata for Importance);
    atomic_store(result, qword_1EE847E68);
  }
  return result;
}

void sub_1A62A2768()
{
  unsigned __int8 *v0;

  sub_1A62DE33C(*v0);
}

void sub_1A62A2770(uint64_t a1)
{
  char *v1;

  sub_1A61F4F18(a1, *v1);
}

void sub_1A62A2778(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1A61F57A4(a1, *v1);
}

WeatherDaemon::Importance_optional sub_1A62A2780(Swift::String *a1)
{
  return Importance.init(rawValue:)(*a1);
}

uint64_t sub_1A62A278C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Importance.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A62A27B0@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return Importance.init(from:)(a1, a2);
}

uint64_t sub_1A62A27C4()
{
  sub_1A62A2904();
  return sub_1A63354BC();
}

void sub_1A62A2810(_BYTE *a1@<X8>)
{
  static Importance.read(from:)(a1);
}

void sub_1A62A2824()
{
  Importance.write(to:)();
}

uint64_t storeEnumTagSinglePayload for Importance(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A62A2884 + 4 * byte_1A6340C69[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A62A28B8 + 4 * byte_1A6340C64[v4]))();
}

uint64_t sub_1A62A28B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A62A28C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A62A28C8);
  return result;
}

uint64_t sub_1A62A28D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A62A28DCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A62A28E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A62A28E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Importance()
{
  return &type metadata for Importance;
}

unint64_t sub_1A62A2904()
{
  unint64_t result;

  result = qword_1ED219FC0;
  if (!qword_1ED219FC0)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for Importance, &type metadata for Importance);
    atomic_store(result, (unint64_t *)&qword_1ED219FC0);
  }
  return result;
}

Swift::Bool __swiftcall GeoJSON.FeatureCollection.contains(_:)(__C::CLLocationCoordinate2D a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  if (*(_QWORD *)(v1 + 8))
  {
    ((void (*)())MEMORY[0x1E0C80A78])();
    type metadata accessor for GeoJSON.Feature(255, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v3);
    v4 = sub_1A6335570();
    MEMORY[0x1A85BEED0](MEMORY[0x1E0DEAF38], v4);
    v5 = sub_1A6335474();
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

BOOL static GeoJSON.FeatureCollection.== infix(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v41 = a4;
  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v38 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A633575C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v40 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v11 = (char *)&v34 - v10;
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_27();
  v39 = v13;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v34 - v15;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v34 - v19;
  v21 = *a2;
  if (*a1)
  {
    if (!v21 || !sub_1A61CD7E0(*a1, v21))
      return 0;
  }
  else if (v21)
  {
    return 0;
  }
  v36 = v11;
  v37 = TupleTypeMetadata2;
  v35 = v7;
  v22 = a2[1];
  if (a1[1])
  {
    if (!v22)
      return 0;
    v23 = type metadata accessor for GeoJSON.Feature(0, a3, v41, v18);
    sub_1A6334CDC();
    sub_1A6334CDC();
    MEMORY[0x1A85BEED0](&protocol conformance descriptor for GeoJSON<A>.Feature, v23);
    LOBYTE(v23) = sub_1A633557C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
      return 0;
  }
  else if (v22)
  {
    return 0;
  }
  v24 = type metadata accessor for GeoJSON.FeatureCollection(0, a3, v41, v18);
  OUTLINED_FUNCTION_3_37((uint64_t)v20, (uint64_t)a1 + *(int *)(v24 + 40));
  OUTLINED_FUNCTION_3_37((uint64_t)v16, (uint64_t)a2 + *(int *)(v24 + 40));
  v25 = (uint64_t)v36;
  v26 = (uint64_t)&v36[*(int *)(v37 + 48)];
  OUTLINED_FUNCTION_3_37((uint64_t)v36, (uint64_t)v20);
  OUTLINED_FUNCTION_3_37(v26, (uint64_t)v16);
  OUTLINED_FUNCTION_5_15(v25);
  if (v28)
  {
    OUTLINED_FUNCTION_0_24((uint64_t)v16);
    OUTLINED_FUNCTION_0_24((uint64_t)v20);
    OUTLINED_FUNCTION_5_15(v26);
    if (v28)
    {
      OUTLINED_FUNCTION_0_24(v25);
      return 1;
    }
    goto LABEL_19;
  }
  v27 = v39;
  OUTLINED_FUNCTION_3_37(v39, v25);
  OUTLINED_FUNCTION_5_15(v26);
  if (v28)
  {
    OUTLINED_FUNCTION_0_24((uint64_t)v16);
    OUTLINED_FUNCTION_0_24((uint64_t)v20);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v27, a3);
LABEL_19:
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v25, v37);
    return 0;
  }
  v29 = v35;
  v30 = v27;
  v31 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v38, v26, a3);
  LODWORD(v41) = sub_1A63352DC();
  v32 = *(void (**)(char *, uint64_t))(v29 + 8);
  v32(v31, a3);
  OUTLINED_FUNCTION_5_2((uint64_t)v16);
  OUTLINED_FUNCTION_5_2((uint64_t)v20);
  v32((char *)v30, a3);
  OUTLINED_FUNCTION_5_2(v25);
  return (v41 & 1) != 0;
}

uint64_t GeoJSON.FeatureCollection.boundingBox.getter()
{
  return sub_1A6334CDC();
}

uint64_t GeoJSON.FeatureCollection.features.getter()
{
  return sub_1A6334CDC();
}

uint64_t GeoJSON.FeatureCollection.properties.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 40);
  v5 = sub_1A633575C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t GeoJSON.FeatureCollection.init(boundingBox:features:properties:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  char *v7;
  uint64_t v8;

  *a6 = a1;
  a6[1] = a2;
  v7 = (char *)a6 + *(int *)(type metadata accessor for GeoJSON.FeatureCollection(0, a4, a5, a4) + 40);
  v8 = sub_1A633575C();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a3, v8);
}

BOOL sub_1A62A2E00(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  type metadata accessor for GeoJSON.Feature(0, a4, a5, a6);
  return GeoJSON.Feature.contains(_:)((__C::CLLocationCoordinate2D)__PAIR128__(*(unint64_t *)&a2, *(unint64_t *)&a1));
}

BOOL sub_1A62A2E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1A62A2E00(*(double *)(v4 + 32), *(double *)(v4 + 40), a1, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

uint64_t type metadata accessor for GeoJSON.FeatureCollection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for GeoJSON.FeatureCollection);
}

uint64_t sub_1A62A2E78()
{
  unint64_t v0;

  v0 = sub_1A6335918();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_1A62A2EC4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A62A2EF0 + 4 * byte_1A6340DE0[a1]))(1701869940, 0xE400000000000000);
}

uint64_t sub_1A62A2EF0()
{
  return 2020565602;
}

uint64_t sub_1A62A2EFC()
{
  return 0x7365727574616566;
}

uint64_t sub_1A62A2F14()
{
  return 0x69747265706F7270;
}

uint64_t sub_1A62A2F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85BEED0](&unk_1A6340F38, a3);
  return sub_1A6335B10();
}

uint64_t sub_1A62A2F88(uint64_t a1)
{
  MEMORY[0x1A85BEED0](&unk_1A6340F38, a1);
  return sub_1A63354D4();
}

uint64_t sub_1A62A2FD4()
{
  MEMORY[0x1A85BEED0](&unk_1A6340F38);
  return sub_1A63354EC();
}

uint64_t sub_1A62A3024()
{
  MEMORY[0x1A85BEED0](&unk_1A6340F38);
  return sub_1A63354E0();
}

uint64_t sub_1A62A3074@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A62A2E78();
  *a1 = result;
  return result;
}

uint64_t sub_1A62A30A8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1A62A2EC4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A62A30D4(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1A62A2F30(*v1, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t sub_1A62A30E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t result;

  result = sub_1A62A2EC0(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
  *a4 = result;
  return result;
}

uint64_t sub_1A62A310C(uint64_t a1)
{
  MEMORY[0x1A85BEED0](&unk_1A6340FD8, a1);
  return sub_1A6335C18();
}

uint64_t sub_1A62A3140(uint64_t a1)
{
  MEMORY[0x1A85BEED0](&unk_1A6340FD8, a1);
  return sub_1A6335C24();
}

void GeoJSON.FeatureCollection.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = sub_1A633575C();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v5);
  _s17FeatureCollectionV10CodingKeysOMa(255, a2, a3, v6);
  OUTLINED_FUNCTION_8_4();
}

void sub_1A62A321C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v12 = sub_1A63359F0();
  *(_QWORD *)(v11 - 120) = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&a9 - v13;
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  *(_QWORD *)(v11 - 112) = v14;
  v15 = *(_QWORD *)(v11 - 104);
  sub_1A6335BDC();
  if (!v15)
  {
    v16 = *(_QWORD *)(v11 - 128);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846B00);
    *(_BYTE *)(v11 - 81) = 1;
    sub_1A623C6D0(&qword_1EE846B08, MEMORY[0x1E0DEB0A8], MEMORY[0x1E0DEAF40]);
    OUTLINED_FUNCTION_2_40();
    *(_QWORD *)(v11 - 104) = v10;
    *(_QWORD *)(v11 - 168) = *(_QWORD *)(v11 - 72);
    type metadata accessor for GeoJSON.Feature(255, v9, v16, v17);
    OUTLINED_FUNCTION_7_26();
    *(_BYTE *)(v11 - 81) = 2;
    OUTLINED_FUNCTION_8_4();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  OUTLINED_FUNCTION_1();
}

uint64_t _s17FeatureCollectionV10CodingKeysOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s17FeatureCollectionV10CodingKeysOMn);
}

void GeoJSON.FeatureCollection.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  v6 = *(_QWORD *)(a2 + 16);
  v17 = *(_QWORD *)(a2 + 24);
  v18 = v6;
  v7 = _s17FeatureCollectionV10CodingKeysOMa(255, v6, v17, a4);
  MEMORY[0x1A85BEED0](&unk_1A6340FD8, v7);
  v8 = sub_1A6335A8C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v17 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6335BF4();
  LOBYTE(v22) = 0;
  v12 = v20;
  sub_1A6335A50();
  if (!v12)
  {
    v20 = a2;
    v13 = v17;
    v14 = v18;
    v15 = v19;
    v22 = *v19;
    v21 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE846B00);
    sub_1A623C6D0(&qword_1EE846B30, MEMORY[0x1E0DEB080], MEMORY[0x1E0DEAF10]);
    OUTLINED_FUNCTION_9_21();
    OUTLINED_FUNCTION_5_28();
    v22 = v15[1];
    v21 = 2;
    type metadata accessor for GeoJSON.Feature(255, v14, v13, v16);
    OUTLINED_FUNCTION_7_26();
    OUTLINED_FUNCTION_8_4();
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  OUTLINED_FUNCTION_1();
}

void sub_1A62A3650(uint64_t a1, uint64_t a2)
{
  GeoJSON.FeatureCollection.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

void sub_1A62A366C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  GeoJSON.FeatureCollection.encode(to:)(a1, a2, a3, a4);
}

BOOL sub_1A62A3680(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return static GeoJSON.FeatureCollection.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_1A62A368C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A633575C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A62A3704(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v16;
  int v17;
  uint64_t v18;
  unsigned int EnumTagSinglePayload;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if ((_DWORD)v6)
    v7 = v6 - 1;
  else
    v7 = 0;
  if (v7 <= 0x7FFFFFFE)
    v8 = 2147483646;
  else
    v8 = v7;
  v9 = *(_QWORD *)(v5 + 64);
  if (!(_DWORD)v6)
    ++v9;
  if (!a2)
    return 0;
  v10 = *(unsigned __int8 *)(v5 + 80);
  v11 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_27;
  v12 = v9 + ((v10 + 16) & ~v10);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v16 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v16))
    {
      v14 = *(_DWORD *)((char *)a1 + v12);
      if (!v14)
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v16 > 0xFF)
    {
      v14 = *(unsigned __int16 *)((char *)a1 + v12);
      if (!*(_WORD *)((char *)a1 + v12))
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v16 < 2)
    {
LABEL_27:
      if (v7 > 0x7FFFFFFE)
      {
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload(((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v10 + 8) & ~v10, v6, v4);
        if (EnumTagSinglePayload >= 2)
          return EnumTagSinglePayload - 1;
        else
          return 0;
      }
      else
      {
        v18 = *a1;
        if (*a1 >= 0xFFFFFFFFuLL)
          LODWORD(v18) = -1;
        if ((v18 + 1) >= 2)
          return v18;
        else
          return 0;
      }
    }
  }
  v14 = *((unsigned __int8 *)a1 + v12);
  if (!*((_BYTE *)a1 + v12))
    goto LABEL_27;
LABEL_20:
  v17 = (v14 - 1) << v13;
  if (v12 > 3)
    v17 = 0;
  if ((_DWORD)v12)
  {
    if (v12 > 3)
      LODWORD(v12) = 4;
    __asm { BR              X12 }
  }
  return v8 + v17 + 1;
}

void sub_1A62A3888(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  size_t v13;
  char v14;
  BOOL v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  int v19;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  if (v9 <= 0x7FFFFFFE)
    v10 = 2147483646;
  else
    v10 = v9;
  v11 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v12 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v12;
  v13 = v11 + v12;
  v14 = 8 * (v11 + v12);
  v15 = a3 >= v10;
  v16 = a3 - v10;
  if (v16 != 0 && v15)
  {
    if (v13 <= 3)
    {
      v17 = ((v16 + ~(-1 << v14)) >> v14) + 1;
      if (HIWORD(v17))
      {
        v6 = 4u;
      }
      else if (v17 >= 0x100)
      {
        v6 = 2;
      }
      else
      {
        v6 = v17 > 1;
      }
    }
    else
    {
      v6 = 1u;
    }
  }
  if (v10 < a2)
  {
    v18 = ~v10 + a2;
    if (v13 < 4)
    {
      if ((_DWORD)v13)
      {
        v19 = v18 & ~(-1 << v14);
        bzero(a1, v13);
        if ((_DWORD)v13 == 3)
        {
          *a1 = v19;
          *((_BYTE *)a1 + 2) = BYTE2(v19);
        }
        else if ((_DWORD)v13 == 2)
        {
          *a1 = v19;
        }
        else
        {
          *(_BYTE *)a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v13);
      *(_DWORD *)a1 = v18;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void sub_1A62A3AE4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1A62A3AEC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_1A62A3B0C()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1A62A3B1C()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1A62A3B24()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_1A62A3B30(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A62A3B7C + 4 * byte_1A6340DFB[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A62A3BB0 + 4 * byte_1A6340DF6[v4]))();
}

uint64_t sub_1A62A3BB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A62A3BB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A62A3BC0);
  return result;
}

uint64_t sub_1A62A3BCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A62A3BD4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A62A3BD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A62A3BE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1A62A3BEC()
{
  JUMPOUT(0x1A85BEED0);
}

void sub_1A62A3BFC()
{
  JUMPOUT(0x1A85BEED0);
}

void sub_1A62A3C0C()
{
  JUMPOUT(0x1A85BEED0);
}

uint64_t sub_1A62A3C1C(uint64_t a1)
{
  return sub_1A61C54A4(a1, &qword_1EE85E350);
}

uint64_t WeatherRequestHourlyRelativeRange.RelativeTo.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 7827310;
  else
    return 7954788;
}

WeatherDaemon::WeatherRequestHourlyRelativeRange::RelativeTo_optional __swiftcall WeatherRequestHourlyRelativeRange.RelativeTo.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  char v4;
  WeatherDaemon::WeatherRequestHourlyRelativeRange::RelativeTo_optional result;

  v2 = v1;
  v3 = sub_1A6335918();
  swift_bridgeObjectRelease();
  if (v3 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v3)
    v4 = 0;
  *v2 = v4;
  OUTLINED_FUNCTION_3_1();
  return result;
}

uint64_t sub_1A62A3CA4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A6244960(*a1, *a2);
}

uint64_t sub_1A62A3CB0()
{
  char *v0;

  return sub_1A62DE348(*v0);
}

uint64_t sub_1A62A3CB8(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1A61F501C(a1, *v1);
}

uint64_t sub_1A62A3CC0(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1A61F5748(a1, *v1);
}

WeatherDaemon::WeatherRequestHourlyRelativeRange::RelativeTo_optional sub_1A62A3CC8(Swift::String *a1)
{
  return WeatherRequestHourlyRelativeRange.RelativeTo.init(rawValue:)(*a1);
}

uint64_t sub_1A62A3CD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = WeatherRequestHourlyRelativeRange.RelativeTo.rawValue.getter();
  *a1 = result;
  a1[1] = 0xE300000000000000;
  return result;
}

uint64_t sub_1A62A3CFC()
{
  sub_1A62A4930();
  return sub_1A63354F8();
}

uint64_t sub_1A62A3D58()
{
  sub_1A62A4930();
  return sub_1A63354BC();
}

uint64_t WeatherRequestHourlyRelativeRange.init(start:end:relativeTo:now:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *a3;
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = v7;
  v8 = a5 + *(int *)(type metadata accessor for WeatherRequestHourlyRelativeRange() + 28);
  v9 = OUTLINED_FUNCTION_6();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, a4, v9);
}

uint64_t sub_1A62A3DF8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A62A3E28 + 4 * byte_1A6341050[a1]))(0x7472617473, 0xE500000000000000);
}

uint64_t sub_1A62A3E28()
{
  return 6581861;
}

uint64_t sub_1A62A3E38()
{
  return 0x65766974616C6572;
}

uint64_t sub_1A62A3E54()
{
  return 7827310;
}

uint64_t sub_1A62A3E64()
{
  unsigned __int8 *v0;

  return sub_1A62A3DF8(*v0);
}

uint64_t sub_1A62A3E6C()
{
  sub_1A62A4038();
  return sub_1A6335C18();
}

uint64_t sub_1A62A3E94()
{
  sub_1A62A4038();
  return sub_1A6335C24();
}

uint64_t WeatherRequestHourlyRelativeRange.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847F70);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A62A4038();
  sub_1A6335BF4();
  OUTLINED_FUNCTION_0_38();
  if (!v1)
  {
    OUTLINED_FUNCTION_0_38();
    sub_1A62A4074();
    OUTLINED_FUNCTION_4_0();
    type metadata accessor for WeatherRequestHourlyRelativeRange();
    sub_1A6332C24();
    sub_1A6189BFC(&qword_1ED21B898, MEMORY[0x1E0CB0890]);
    OUTLINED_FUNCTION_4_0();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

unint64_t sub_1A62A4038()
{
  unint64_t result;

  result = qword_1EE847F78;
  if (!qword_1EE847F78)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A63412C8, &type metadata for WeatherRequestHourlyRelativeRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847F78);
  }
  return result;
}

unint64_t sub_1A62A4074()
{
  unint64_t result;

  result = qword_1EE847F80;
  if (!qword_1EE847F80)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for WeatherRequestHourlyRelativeRange.RelativeTo, &type metadata for WeatherRequestHourlyRelativeRange.RelativeTo);
    atomic_store(result, (unint64_t *)&qword_1EE847F80);
  }
  return result;
}

uint64_t WeatherRequestHourlyRelativeRange.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;

  v11 = a2;
  v14 = sub_1A6332C24();
  v12 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v13 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847F88);
  MEMORY[0x1E0C80A78](v15);
  v5 = type metadata accessor for WeatherRequestHourlyRelativeRange();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A62A4038();
  v6 = v16;
  sub_1A6335BDC();
  if (!v6)
  {
    v16 = v5;
    v8 = v13;
    v7 = v14;
    v21 = 0;
    *(_QWORD *)v2 = sub_1A63359CC();
    v20 = 1;
    *(_QWORD *)(v2 + 8) = sub_1A63359CC();
    v18 = 2;
    sub_1A62A4314();
    sub_1A63359D8();
    *(_BYTE *)(v2 + 16) = v19;
    v17 = 3;
    sub_1A6189BFC(&qword_1ED21B8A0, MEMORY[0x1E0CB08C0]);
    sub_1A63359D8();
    OUTLINED_FUNCTION_0_8();
    v10 = v11;
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v2 + *(int *)(v16 + 28), v8, v7);
    sub_1A62A4350(v2, v10);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1A62A4314()
{
  unint64_t result;

  result = qword_1EE847F90;
  if (!qword_1EE847F90)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for WeatherRequestHourlyRelativeRange.RelativeTo, &type metadata for WeatherRequestHourlyRelativeRange.RelativeTo);
    atomic_store(result, (unint64_t *)&qword_1EE847F90);
  }
  return result;
}

uint64_t sub_1A62A4350(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WeatherRequestHourlyRelativeRange();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A62A4398()
{
  unint64_t result;

  result = qword_1EE847F98;
  if (!qword_1EE847F98)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for WeatherRequestHourlyRelativeRange.RelativeTo, &type metadata for WeatherRequestHourlyRelativeRange.RelativeTo);
    atomic_store(result, (unint64_t *)&qword_1EE847F98);
  }
  return result;
}

uint64_t sub_1A62A43D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WeatherRequestHourlyRelativeRange.init(from:)(a1, a2);
}

uint64_t sub_1A62A43E8(_QWORD *a1)
{
  return WeatherRequestHourlyRelativeRange.encode(to:)(a1);
}

_QWORD *initializeBufferWithCopyOfBuffer for WeatherRequestHourlyRelativeRange(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v5 = *(int *)(a3 + 28);
    v6 = a1 + v5;
    v7 = (uint64_t)a2 + v5;
    v8 = sub_1A6332C24();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t initializeWithCopy for WeatherRequestHourlyRelativeRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1A6332C24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for WeatherRequestHourlyRelativeRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1A6332C24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t initializeWithTake for WeatherRequestHourlyRelativeRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1A6332C24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for WeatherRequestHourlyRelativeRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1A6332C24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1A62A4624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 >= 2)
      return v4 - 1;
    else
      return 0;
  }
  else
  {
    v8 = OUTLINED_FUNCTION_6();
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

void sub_1A62A468C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 254)
  {
    *(_BYTE *)(a1 + 16) = a2 + 1;
    OUTLINED_FUNCTION_3_1();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_6();
    __swift_storeEnumTagSinglePayload(a1 + *(int *)(a4 + 28), a2, a2, v7);
  }
}

uint64_t storeEnumTagSinglePayload for WeatherRequestHourlyRelativeRange.RelativeTo(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A62A4734 + 4 * byte_1A6341059[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A62A4768 + 4 * byte_1A6341054[v4]))();
}

uint64_t sub_1A62A4768(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A62A4770(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A62A4778);
  return result;
}

uint64_t sub_1A62A4784(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A62A478CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A62A4790(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A62A4798(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for WeatherRequestHourlyRelativeRange.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A62A47F0 + 4 * byte_1A6341063[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A62A4824 + 4 * byte_1A634105E[v4]))();
}

uint64_t sub_1A62A4824(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A62A482C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A62A4834);
  return result;
}

uint64_t sub_1A62A4840(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A62A4848);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A62A484C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A62A4854(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WeatherRequestHourlyRelativeRange.CodingKeys()
{
  return &type metadata for WeatherRequestHourlyRelativeRange.CodingKeys;
}

unint64_t sub_1A62A4874()
{
  unint64_t result;

  result = qword_1EE847FA0;
  if (!qword_1EE847FA0)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A63412A0, &type metadata for WeatherRequestHourlyRelativeRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847FA0);
  }
  return result;
}

unint64_t sub_1A62A48B4()
{
  unint64_t result;

  result = qword_1EE847FA8;
  if (!qword_1EE847FA8)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A6341210, &type metadata for WeatherRequestHourlyRelativeRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847FA8);
  }
  return result;
}

unint64_t sub_1A62A48F4()
{
  unint64_t result;

  result = qword_1EE847FB0;
  if (!qword_1EE847FB0)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A6341238, &type metadata for WeatherRequestHourlyRelativeRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847FB0);
  }
  return result;
}

unint64_t sub_1A62A4930()
{
  unint64_t result;

  result = qword_1EE847FB8;
  if (!qword_1EE847FB8)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for WeatherRequestHourlyRelativeRange.RelativeTo, &type metadata for WeatherRequestHourlyRelativeRange.RelativeTo);
    atomic_store(result, (unint64_t *)&qword_1EE847FB8);
  }
  return result;
}

uint64_t DayForecast.init(forecastStart:conditionCode:humidityMax:humidityMin:maxUvIndex:moonPhase:moonrise:moonset:precipitationAmount:precipitationAmountByType:precipitationChance:precipitationType:snowfallAmount:solarNoon:solarMidnight:sunrise:sunriseAstronomical:sunriseCivil:sunriseNautical:sunset:sunsetAstronomical:sunsetCivil:sunsetNautical:temperatureMax:temperatureMaxTime:temperatureMin:temperatureMinTime:visibilityMax:visibilityMin:windGustSpeedMax:windSpeedAvg:windSpeedMax:daytimeForecast:overnightForecast:restOfDayForecast:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, double a14@<D4>, uint64_t a15, uint64_t a16, uint64_t a17, char *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,char a34,uint64_t a35,char a36,uint64_t a37,char a38,uint64_t a39,char a40,const void *a41,const void *a42,uint64_t a43)
{
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t result;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char v80;
  char v81;
  _BYTE v88[192];
  _BYTE v89[192];
  _BYTE v90[192];
  _BYTE v91[192];
  _BYTE v92[200];

  v79 = *a2;
  v80 = *a8;
  v81 = *a18;
  OUTLINED_FUNCTION_82_0(v88, a41);
  OUTLINED_FUNCTION_82_0(v89, a42);
  sub_1A62A15CC(a43, (uint64_t)v90);
  v49 = (int *)OUTLINED_FUNCTION_132();
  v75 = a9 + v49[6];
  v76 = a9 + v49[7];
  v77 = v49[5];
  v78 = v49[9];
  v50 = a9 + v49[10];
  v74 = v50;
  v51 = OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_4_36(v50);
  v71 = a9 + v49[11];
  OUTLINED_FUNCTION_4_36(v71);
  v52 = v49[15];
  *(_BYTE *)(a9 + v52) = 8;
  v72 = v52;
  v73 = a9 + v49[17];
  OUTLINED_FUNCTION_4_36(v73);
  v70 = a9 + v49[18];
  OUTLINED_FUNCTION_4_36(v70);
  v69 = a9 + v49[19];
  OUTLINED_FUNCTION_4_36(v69);
  v68 = a9 + v49[20];
  OUTLINED_FUNCTION_4_36(v68);
  v67 = a9 + v49[21];
  OUTLINED_FUNCTION_4_36(v67);
  v66 = a9 + v49[22];
  OUTLINED_FUNCTION_4_36(v66);
  v65 = a9 + v49[23];
  OUTLINED_FUNCTION_4_36(v65);
  v64 = a9 + v49[24];
  OUTLINED_FUNCTION_4_36(v64);
  v63 = a9 + v49[25];
  OUTLINED_FUNCTION_4_36(v63);
  v62 = a9 + v49[26];
  OUTLINED_FUNCTION_4_36(v62);
  v61 = a9 + v49[28];
  OUTLINED_FUNCTION_4_36(v61);
  v53 = a9 + v49[30];
  OUTLINED_FUNCTION_4_36(v53);
  v54 = a9 + v49[31];
  *(_QWORD *)v54 = 0;
  *(_BYTE *)(v54 + 8) = 1;
  v55 = a9 + v49[32];
  *(_QWORD *)v55 = 0;
  *(_BYTE *)(v55 + 8) = 1;
  v56 = a9 + v49[33];
  *(_QWORD *)v56 = 0;
  *(_BYTE *)(v56 + 8) = 1;
  v57 = a9 + v49[34];
  *(_QWORD *)v57 = 0;
  *(_BYTE *)(v57 + 8) = 1;
  v58 = a9 + v49[35];
  *(_QWORD *)v58 = 0;
  *(_BYTE *)(v58 + 8) = 1;
  v59 = a9 + v49[38];
  sub_1A62A4E84(v91);
  sub_1A62A15CC((uint64_t)v91, v59);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(a9, a1, v51);
  *(_BYTE *)(a9 + v77) = v79;
  *(_QWORD *)v75 = a3;
  *(_BYTE *)(v75 + 8) = a4 & 1;
  *(_QWORD *)v76 = a5;
  *(_BYTE *)(v76 + 8) = a6 & 1;
  *(_QWORD *)(a9 + v49[8]) = a7;
  *(_BYTE *)(a9 + v78) = v80;
  sub_1A618D2C8(a15, v74);
  sub_1A618D2C8(a16, v71);
  *(double *)(a9 + v49[12]) = a10;
  *(_QWORD *)(a9 + v49[13]) = a17;
  *(double *)(a9 + v49[14]) = a11;
  *(_BYTE *)(a9 + v72) = v81;
  *(double *)(a9 + v49[16]) = a12;
  sub_1A618D2C8(a19, v73);
  sub_1A618D2C8(a20, v70);
  sub_1A618D2C8(a21, v69);
  sub_1A618D2C8(a22, v68);
  sub_1A618D2C8(a23, v67);
  sub_1A618D2C8(a24, v66);
  sub_1A618D2C8(a25, v65);
  sub_1A618D2C8(a26, v64);
  sub_1A618D2C8(a27, v63);
  sub_1A618D2C8(a28, v62);
  *(double *)(a9 + v49[27]) = a13;
  sub_1A618D2C8(a29, v61);
  *(double *)(a9 + v49[29]) = a14;
  sub_1A618D2C8(a30, v53);
  OUTLINED_FUNCTION_82_0((void *)(a9 + v49[36]), v88);
  OUTLINED_FUNCTION_82_0((void *)(a9 + v49[37]), v89);
  sub_1A62A15CC(v59, (uint64_t)v92);
  sub_1A62A1704((uint64_t)v92);
  result = sub_1A62A15CC((uint64_t)v90, v59);
  *(_QWORD *)v54 = a31;
  *(_BYTE *)(v54 + 8) = a32 & 1;
  *(_QWORD *)v55 = a33;
  *(_BYTE *)(v55 + 8) = a34 & 1;
  *(_QWORD *)v56 = a35;
  *(_BYTE *)(v56 + 8) = a36 & 1;
  *(_QWORD *)v57 = a37;
  *(_BYTE *)(v57 + 8) = a38 & 1;
  *(_QWORD *)v58 = a39;
  *(_BYTE *)(v58 + 8) = a40 & 1;
  return result;
}

void sub_1A62A4E84(void *a1)
{
  bzero(a1, 0xC0uLL);
}

uint64_t DayForecast.forecastStart.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_6();
  return OUTLINED_FUNCTION_4(v1, a1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 40));
}

uint64_t (*DayForecast.forecastStart.modify())(void)
{
  return nullsub_1;
}

void DayForecast.conditionCode.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_132() + 20)) = v2;
  OUTLINED_FUNCTION_29_1();
}

uint64_t (*DayForecast.conditionCode.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

void DayForecast.humidityMax.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_132();
  OUTLINED_FUNCTION_18(*(int *)(v0 + 24));
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*DayForecast.humidityMax.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

void DayForecast.humidityMin.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_132();
  OUTLINED_FUNCTION_18(*(int *)(v0 + 28));
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*DayForecast.humidityMin.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

void DayForecast.maxUvIndex.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + *(int *)(OUTLINED_FUNCTION_132() + 32)) = a1;
  OUTLINED_FUNCTION_29_1();
}

uint64_t (*DayForecast.maxUvIndex.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

void DayForecast.moonPhase.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_132() + 36)) = v2;
  OUTLINED_FUNCTION_29_1();
}

uint64_t (*DayForecast.moonPhase.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

uint64_t DayForecast.moonrise.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_132();
  v0 = OUTLINED_FUNCTION_16_22();
  return OUTLINED_FUNCTION_4_3(v0, v1);
}

uint64_t (*DayForecast.moonrise.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

uint64_t DayForecast.moonset.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_132();
  v0 = OUTLINED_FUNCTION_16_22();
  return OUTLINED_FUNCTION_4_3(v0, v1);
}

uint64_t (*DayForecast.moonset.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

void DayForecast.precipitationAmount.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_132() + 48)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*DayForecast.precipitationAmount.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

void DayForecast.precipitationAmountByType.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_132() + 52);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*DayForecast.precipitationAmountByType.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

void DayForecast.precipitationChance.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_132() + 56)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*DayForecast.precipitationChance.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

void DayForecast.precipitationType.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_132() + 60)) = v2;
  OUTLINED_FUNCTION_29_1();
}

uint64_t (*DayForecast.precipitationType.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

void DayForecast.snowfallAmount.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_132() + 64)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*DayForecast.snowfallAmount.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

uint64_t DayForecast.solarNoon.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_132();
  v0 = OUTLINED_FUNCTION_16_22();
  return OUTLINED_FUNCTION_4_3(v0, v1);
}

uint64_t (*DayForecast.solarNoon.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

uint64_t DayForecast.solarMidnight.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_132();
  v0 = OUTLINED_FUNCTION_16_22();
  return OUTLINED_FUNCTION_4_3(v0, v1);
}

uint64_t (*DayForecast.solarMidnight.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

uint64_t DayForecast.sunrise.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_132();
  v0 = OUTLINED_FUNCTION_16_22();
  return OUTLINED_FUNCTION_4_3(v0, v1);
}

uint64_t (*DayForecast.sunrise.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

uint64_t DayForecast.sunriseAstronomical.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_132();
  v0 = OUTLINED_FUNCTION_16_22();
  return OUTLINED_FUNCTION_4_3(v0, v1);
}

uint64_t (*DayForecast.sunriseAstronomical.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

uint64_t DayForecast.sunriseCivil.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_132();
  v0 = OUTLINED_FUNCTION_16_22();
  return OUTLINED_FUNCTION_4_3(v0, v1);
}

uint64_t (*DayForecast.sunriseCivil.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

uint64_t DayForecast.sunriseNautical.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_132();
  v0 = OUTLINED_FUNCTION_16_22();
  return OUTLINED_FUNCTION_4_3(v0, v1);
}

uint64_t (*DayForecast.sunriseNautical.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

uint64_t DayForecast.sunset.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_132();
  v0 = OUTLINED_FUNCTION_16_22();
  return OUTLINED_FUNCTION_4_3(v0, v1);
}

uint64_t (*DayForecast.sunset.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

uint64_t DayForecast.sunsetAstronomical.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_132();
  v0 = OUTLINED_FUNCTION_16_22();
  return OUTLINED_FUNCTION_4_3(v0, v1);
}

uint64_t (*DayForecast.sunsetAstronomical.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

uint64_t DayForecast.sunsetCivil.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_132();
  v0 = OUTLINED_FUNCTION_16_22();
  return OUTLINED_FUNCTION_4_3(v0, v1);
}

uint64_t (*DayForecast.sunsetCivil.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

uint64_t DayForecast.sunsetNautical.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_132();
  v0 = OUTLINED_FUNCTION_16_22();
  return OUTLINED_FUNCTION_4_3(v0, v1);
}

uint64_t (*DayForecast.sunsetNautical.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

void DayForecast.temperatureMax.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_132() + 108)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*DayForecast.temperatureMax.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

uint64_t DayForecast.temperatureMaxTime.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_132();
  v0 = OUTLINED_FUNCTION_16_22();
  return OUTLINED_FUNCTION_4_3(v0, v1);
}

uint64_t (*DayForecast.temperatureMaxTime.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

void DayForecast.temperatureMin.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(OUTLINED_FUNCTION_132() + 116)) = a1;
  OUTLINED_FUNCTION_7_18();
}

uint64_t (*DayForecast.temperatureMin.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

uint64_t DayForecast.temperatureMinTime.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_132();
  v0 = OUTLINED_FUNCTION_16_22();
  return OUTLINED_FUNCTION_4_3(v0, v1);
}

uint64_t (*DayForecast.temperatureMinTime.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

void DayForecast.visibilityMax.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_132();
  OUTLINED_FUNCTION_18(*(int *)(v0 + 124));
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*DayForecast.visibilityMax.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

void DayForecast.visibilityMin.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_132();
  OUTLINED_FUNCTION_18(*(int *)(v0 + 128));
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*DayForecast.visibilityMin.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

void DayForecast.windGustSpeedMax.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_132();
  OUTLINED_FUNCTION_18(*(int *)(v0 + 132));
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*DayForecast.windGustSpeedMax.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

void DayForecast.windSpeedAvg.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_132();
  OUTLINED_FUNCTION_18(*(int *)(v0 + 136));
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*DayForecast.windSpeedAvg.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

void DayForecast.windSpeedMax.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_132();
  OUTLINED_FUNCTION_18(*(int *)(v0 + 140));
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*DayForecast.windSpeedMax.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

void DayForecast.daytimeForecast.getter(void *a1@<X8>)
{
  const void *v1;
  uint64_t v3;
  uint64_t v4[24];

  v3 = OUTLINED_FUNCTION_132();
  OUTLINED_FUNCTION_17_19(*(int *)(v3 + 144), v4[0]);
  OUTLINED_FUNCTION_82_0(a1, v1);
  sub_1A62A5804((uint64_t)v4);
  OUTLINED_FUNCTION_24_12();
}

uint64_t sub_1A62A5804(uint64_t a1)
{
  sub_1A6334CDC();
  return a1;
}

void DayForecast.daytimeForecast.setter(const void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4[24];

  v3 = OUTLINED_FUNCTION_132();
  OUTLINED_FUNCTION_17_19(*(int *)(v3 + 144), v4[0]);
  sub_1A62A1704((uint64_t)v4);
  OUTLINED_FUNCTION_82_0(v1, a1);
  OUTLINED_FUNCTION_24_12();
}

uint64_t (*DayForecast.daytimeForecast.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

void DayForecast.overnightForecast.getter(void *a1@<X8>)
{
  const void *v1;
  uint64_t v3;
  uint64_t v4[24];

  v3 = OUTLINED_FUNCTION_132();
  OUTLINED_FUNCTION_17_19(*(int *)(v3 + 148), v4[0]);
  OUTLINED_FUNCTION_82_0(a1, v1);
  sub_1A62A5804((uint64_t)v4);
  OUTLINED_FUNCTION_24_12();
}

void DayForecast.overnightForecast.setter(const void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4[24];

  v3 = OUTLINED_FUNCTION_132();
  OUTLINED_FUNCTION_17_19(*(int *)(v3 + 148), v4[0]);
  sub_1A62A1704((uint64_t)v4);
  OUTLINED_FUNCTION_82_0(v1, a1);
  OUTLINED_FUNCTION_24_12();
}

uint64_t (*DayForecast.overnightForecast.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

uint64_t DayForecast.restOfDayForecast.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[192];
  _BYTE v5[200];

  sub_1A62A15CC(a1, (uint64_t)v4);
  v2 = v1 + *(int *)(OUTLINED_FUNCTION_132() + 152);
  sub_1A62A15CC(v2, (uint64_t)v5);
  sub_1A62A1704((uint64_t)v5);
  return sub_1A62A15CC((uint64_t)v4, v2);
}

uint64_t (*DayForecast.restOfDayForecast.modify())(_QWORD)
{
  OUTLINED_FUNCTION_132();
  return nullsub_1;
}

uint64_t sub_1A62A59A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  BOOL v25;
  BOOL v26;
  BOOL v27;
  BOOL v28;
  char v29;

  v2 = a1 == 0x7473616365726F66 && a2 == 0xED00007472617453;
  if (v2 || (sub_1A6335ABC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6F697469646E6F63 && a2 == 0xED000065646F436ELL;
    if (v6 || (sub_1A6335ABC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x79746964696D7568 && a2 == 0xEB0000000078614DLL;
      if (v7 || (sub_1A6335ABC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x79746964696D7568 && a2 == 0xEB000000006E694DLL;
        if (v8 || (sub_1A6335ABC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x646E49765578616DLL && a2 == 0xEA00000000007865;
          if (v9 || (sub_1A6335ABC() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x736168506E6F6F6DLL && a2 == 0xE900000000000065;
            if (v10 || (sub_1A6335ABC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x657369726E6F6F6DLL && a2 == 0xE800000000000000;
              if (v11 || (sub_1A6335ABC() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                v12 = a1 == 0x7465736E6F6F6DLL && a2 == 0xE700000000000000;
                if (v12 || (sub_1A6335ABC() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else if (a1 == 0xD000000000000013 && a2 == 0x80000001A634ABF0 || (sub_1A6335ABC() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else if (a1 == 0xD000000000000019 && a2 == 0x80000001A634BA30 || (sub_1A6335ABC() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 9;
                }
                else if (a1 == 0xD000000000000013 && a2 == 0x80000001A634A5E0 || (sub_1A6335ABC() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 10;
                }
                else if (a1 == 0xD000000000000011 && a2 == 0x80000001A634AC10 || (sub_1A6335ABC() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 11;
                }
                else
                {
                  v13 = a1 == 0x6C6C6166776F6E73 && a2 == 0xEE00746E756F6D41;
                  if (v13 || (sub_1A6335ABC() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 12;
                  }
                  else
                  {
                    v14 = a1 == 0x6F6F4E72616C6F73 && a2 == 0xE90000000000006ELL;
                    if (v14 || (sub_1A6335ABC() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 13;
                    }
                    else
                    {
                      v15 = a1 == 0x64694D72616C6F73 && a2 == 0xED0000746867696ELL;
                      if (v15 || (sub_1A6335ABC() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 14;
                      }
                      else
                      {
                        v16 = a1 == 0x657369726E7573 && a2 == 0xE700000000000000;
                        if (v16 || (sub_1A6335ABC() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 15;
                        }
                        else if (a1 == 0xD000000000000013 && a2 == 0x80000001A634BA50 || (sub_1A6335ABC() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 16;
                        }
                        else
                        {
                          v17 = a1 == 0x43657369726E7573 && a2 == 0xEC0000006C697669;
                          if (v17 || (sub_1A6335ABC() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 17;
                          }
                          else
                          {
                            v18 = a1 == 0x4E657369726E7573 && a2 == 0xEF6C616369747561;
                            if (v18 || (sub_1A6335ABC() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 18;
                            }
                            else
                            {
                              v19 = a1 == 0x7465736E7573 && a2 == 0xE600000000000000;
                              if (v19 || (sub_1A6335ABC() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 19;
                              }
                              else if (a1 == 0xD000000000000012 && a2 == 0x80000001A634BA70
                                     || (sub_1A6335ABC() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 20;
                              }
                              else
                              {
                                v20 = a1 == 0x69437465736E7573 && a2 == 0xEB000000006C6976;
                                if (v20 || (sub_1A6335ABC() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 21;
                                }
                                else
                                {
                                  v21 = a1 == 0x614E7465736E7573 && a2 == 0xEE006C6163697475;
                                  if (v21 || (sub_1A6335ABC() & 1) != 0)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 22;
                                  }
                                  else
                                  {
                                    v22 = a1 == 0x74617265706D6574 && a2 == 0xEE0078614D657275;
                                    if (v22 || (sub_1A6335ABC() & 1) != 0)
                                    {
                                      swift_bridgeObjectRelease();
                                      return 23;
                                    }
                                    else if (a1 == 0xD000000000000012 && a2 == 0x80000001A634BA90
                                           || (sub_1A6335ABC() & 1) != 0)
                                    {
                                      swift_bridgeObjectRelease();
                                      return 24;
                                    }
                                    else
                                    {
                                      v23 = a1 == 0x74617265706D6574 && a2 == 0xEE006E694D657275;
                                      if (v23 || (sub_1A6335ABC() & 1) != 0)
                                      {
                                        swift_bridgeObjectRelease();
                                        return 25;
                                      }
                                      else if (a1 == 0xD000000000000012 && a2 == 0x80000001A634BAB0
                                             || (sub_1A6335ABC() & 1) != 0)
                                      {
                                        swift_bridgeObjectRelease();
                                        return 26;
                                      }
                                      else
                                      {
                                        v24 = a1 == 0x696C696269736976 && a2 == 0xED000078614D7974;
                                        if (v24 || (sub_1A6335ABC() & 1) != 0)
                                        {
                                          swift_bridgeObjectRelease();
                                          return 27;
                                        }
                                        else
                                        {
                                          v25 = a1 == 0x696C696269736976 && a2 == 0xED00006E694D7974;
                                          if (v25 || (sub_1A6335ABC() & 1) != 0)
                                          {
                                            swift_bridgeObjectRelease();
                                            return 28;
                                          }
                                          else if (a1 == 0xD000000000000010 && a2 == 0x80000001A634BAD0
                                                 || (sub_1A6335ABC() & 1) != 0)
                                          {
                                            swift_bridgeObjectRelease();
                                            return 29;
                                          }
                                          else
                                          {
                                            v26 = a1 == 0x65657053646E6977 && a2 == 0xEC00000067764164;
                                            if (v26 || (sub_1A6335ABC() & 1) != 0)
                                            {
                                              swift_bridgeObjectRelease();
                                              return 30;
                                            }
                                            else
                                            {
                                              v27 = a1 == 0x65657053646E6977 && a2 == 0xEC00000078614D64;
                                              if (v27 || (sub_1A6335ABC() & 1) != 0)
                                              {
                                                swift_bridgeObjectRelease();
                                                return 31;
                                              }
                                              else
                                              {
                                                v28 = a1 == 0x46656D6974796164 && a2 == 0xEF7473616365726FLL;
                                                if (v28 || (sub_1A6335ABC() & 1) != 0)
                                                {
                                                  swift_bridgeObjectRelease();
                                                  return 32;
                                                }
                                                else if (a1 == 0xD000000000000011 && a2 == 0x80000001A634BAF0
                                                       || (sub_1A6335ABC() & 1) != 0)
                                                {
                                                  swift_bridgeObjectRelease();
                                                  return 33;
                                                }
                                                else if (a1 == 0xD000000000000011 && a2 == 0x80000001A634BB10)
                                                {
                                                  swift_bridgeObjectRelease();
                                                  return 34;
                                                }
                                                else
                                                {
                                                  v29 = sub_1A6335ABC();
                                                  swift_bridgeObjectRelease();
                                                  if ((v29 & 1) != 0)
                                                    return 34;
                                                  else
                                                    return 35;
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1A62A6864()
{
  return 35;
}

uint64_t sub_1A62A686C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A62A59A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A62A6890@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A62A6864();
  *a1 = result;
  return result;
}

uint64_t sub_1A62A68B4()
{
  sub_1A618C100();
  return sub_1A6335C18();
}

uint64_t sub_1A62A68DC()
{
  sub_1A618C100();
  return sub_1A6335C24();
}

uint64_t sub_1A62A6904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return static DayForecast.read(from:)(a1, a2);
}

void sub_1A62A6918()
{
  DayForecast.write(to:)();
}

char *initializeBufferWithCopyOfBuffer for DayForecast(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A6332C24();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[6];
    a1[a3[5]] = a2[a3[5]];
    v10 = &a1[v9];
    v11 = &a2[v9];
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = a3[7];
    v13 = a3[8];
    v14 = &a1[v12];
    v15 = &a2[v12];
    *(_QWORD *)v14 = *(_QWORD *)v15;
    v14[8] = v15[8];
    *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
    v16 = a3[10];
    a1[a3[9]] = a2[a3[9]];
    v17 = &a1[v16];
    v18 = &a2[v16];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v16], 1, v7))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v8(v17, v18, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v7);
    }
    v21 = a3[11];
    v22 = &a1[v21];
    v23 = &a2[v21];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v21], 1, v7))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v8(v22, v23, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v7);
    }
    v25 = a3[13];
    *(_QWORD *)&a1[a3[12]] = *(_QWORD *)&a2[a3[12]];
    *(_QWORD *)&a1[v25] = *(_QWORD *)&a2[v25];
    v26 = a3[15];
    *(_QWORD *)&a1[a3[14]] = *(_QWORD *)&a2[a3[14]];
    a1[v26] = a2[v26];
    v27 = a3[17];
    *(_QWORD *)&a1[a3[16]] = *(_QWORD *)&a2[a3[16]];
    v28 = &a1[v27];
    v29 = &a2[v27];
    sub_1A6334CDC();
    if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v7))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v8(v28, v29, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v7);
    }
    v31 = a3[18];
    v32 = &a1[v31];
    v33 = &a2[v31];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v31], 1, v7))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      v8(v32, v33, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v7);
    }
    v35 = a3[19];
    v36 = &a1[v35];
    v37 = &a2[v35];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v35], 1, v7))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      v8(v36, v37, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v7);
    }
    v39 = a3[20];
    v40 = &a1[v39];
    v41 = &a2[v39];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v39], 1, v7))
    {
      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      v8(v40, v41, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v40, 0, 1, v7);
    }
    v43 = a3[21];
    v44 = &a1[v43];
    v45 = &a2[v43];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v43], 1, v7))
    {
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      v8(v44, v45, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v44, 0, 1, v7);
    }
    v47 = a3[22];
    v48 = &a1[v47];
    v49 = &a2[v47];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v47], 1, v7))
    {
      v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      v8(v48, v49, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, v7);
    }
    v51 = a3[23];
    v52 = &a1[v51];
    v53 = &a2[v51];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v51], 1, v7))
    {
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      v8(v52, v53, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v52, 0, 1, v7);
    }
    v55 = a3[24];
    v56 = &a1[v55];
    v57 = &a2[v55];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v55], 1, v7))
    {
      v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      v8(v56, v57, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v56, 0, 1, v7);
    }
    v59 = a3[25];
    v60 = &a1[v59];
    v61 = &a2[v59];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v59], 1, v7))
    {
      v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      v8(v60, v61, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v7);
    }
    v63 = a3[26];
    v64 = &a1[v63];
    v65 = &a2[v63];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v63], 1, v7))
    {
      v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    }
    else
    {
      v8(v64, v65, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v7);
    }
    v67 = a3[28];
    *(_QWORD *)&a1[a3[27]] = *(_QWORD *)&a2[a3[27]];
    v68 = &a1[v67];
    v69 = &a2[v67];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v67], 1, v7))
    {
      v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
    else
    {
      v8(v68, v69, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v68, 0, 1, v7);
    }
    v71 = a3[30];
    *(_QWORD *)&a1[a3[29]] = *(_QWORD *)&a2[a3[29]];
    v72 = &a1[v71];
    v73 = &a2[v71];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v71], 1, v7))
    {
      v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
      memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    }
    else
    {
      v8(v72, v73, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v72, 0, 1, v7);
    }
    v75 = a3[31];
    v76 = a3[32];
    v77 = &a1[v75];
    v78 = &a2[v75];
    *(_QWORD *)v77 = *(_QWORD *)v78;
    v77[8] = v78[8];
    v79 = &a1[v76];
    v80 = &a2[v76];
    *(_QWORD *)v79 = *(_QWORD *)v80;
    v79[8] = v80[8];
    v81 = a3[33];
    v82 = a3[34];
    v83 = &a1[v81];
    v84 = &a2[v81];
    *(_QWORD *)v83 = *(_QWORD *)v84;
    v83[8] = v84[8];
    v85 = &a1[v82];
    v86 = &a2[v82];
    v85[8] = v86[8];
    *(_QWORD *)v85 = *(_QWORD *)v86;
    v87 = a3[35];
    v88 = a3[36];
    v89 = &a1[v87];
    v90 = &a2[v87];
    *(_QWORD *)v89 = *(_QWORD *)v90;
    v89[8] = v90[8];
    v91 = &a1[v88];
    v92 = &a2[v88];
    *v91 = *v92;
    *(_OWORD *)(v91 + 8) = *(_OWORD *)(v92 + 8);
    *(_OWORD *)(v91 + 24) = *(_OWORD *)(v92 + 24);
    v91[40] = v92[40];
    v93 = *((_OWORD *)v92 + 4);
    *((_OWORD *)v91 + 3) = *((_OWORD *)v92 + 3);
    *((_OWORD *)v91 + 4) = v93;
    *((_QWORD *)v91 + 10) = *((_QWORD *)v92 + 10);
    v91[88] = v92[88];
    v94 = *((_QWORD *)v92 + 13);
    *((_QWORD *)v91 + 12) = *((_QWORD *)v92 + 12);
    *((_QWORD *)v91 + 13) = v94;
    v91[112] = v92[112];
    v95 = *((_QWORD *)v92 + 15);
    v91[128] = v92[128];
    *((_QWORD *)v91 + 15) = v95;
    *(_OWORD *)(v91 + 136) = *(_OWORD *)(v92 + 136);
    v96 = *((_QWORD *)v92 + 19);
    v91[160] = v92[160];
    *((_QWORD *)v91 + 19) = v96;
    *(_OWORD *)(v91 + 168) = *(_OWORD *)(v92 + 168);
    *((_QWORD *)v91 + 23) = *((_QWORD *)v92 + 23);
    v97 = a3[37];
    v98 = a3[38];
    v99 = &a1[v97];
    v100 = &a2[v97];
    *v99 = *v100;
    *(_OWORD *)(v99 + 8) = *(_OWORD *)(v100 + 8);
    *(_OWORD *)(v99 + 24) = *(_OWORD *)(v100 + 24);
    v99[40] = v100[40];
    v101 = *((_OWORD *)v100 + 4);
    *((_OWORD *)v99 + 3) = *((_OWORD *)v100 + 3);
    *((_OWORD *)v99 + 4) = v101;
    *((_QWORD *)v99 + 10) = *((_QWORD *)v100 + 10);
    v99[88] = v100[88];
    v102 = *((_QWORD *)v100 + 13);
    *((_QWORD *)v99 + 12) = *((_QWORD *)v100 + 12);
    *((_QWORD *)v99 + 13) = v102;
    v99[112] = v100[112];
    v103 = *((_QWORD *)v100 + 15);
    v99[128] = v100[128];
    *((_QWORD *)v99 + 15) = v103;
    *(_OWORD *)(v99 + 136) = *(_OWORD *)(v100 + 136);
    v104 = *((_QWORD *)v100 + 19);
    v99[160] = v100[160];
    *((_QWORD *)v99 + 19) = v104;
    *(_OWORD *)(v99 + 168) = *(_OWORD *)(v100 + 168);
    *((_QWORD *)v99 + 23) = *((_QWORD *)v100 + 23);
    v105 = &a1[v98];
    v106 = &a2[v98];
    *v105 = *v106;
    *(_OWORD *)(v105 + 8) = *(_OWORD *)(v106 + 8);
    *(_OWORD *)(v105 + 24) = *(_OWORD *)(v106 + 24);
    v105[40] = v106[40];
    v107 = *((_OWORD *)v106 + 4);
    *((_OWORD *)v105 + 3) = *((_OWORD *)v106 + 3);
    *((_OWORD *)v105 + 4) = v107;
    *((_QWORD *)v105 + 10) = *((_QWORD *)v106 + 10);
    v105[88] = v106[88];
    v108 = *((_QWORD *)v106 + 13);
    *((_QWORD *)v105 + 12) = *((_QWORD *)v106 + 12);
    *((_QWORD *)v105 + 13) = v108;
    v105[112] = v106[112];
    v109 = *((_QWORD *)v106 + 15);
    v105[128] = v106[128];
    *((_QWORD *)v105 + 15) = v109;
    *(_OWORD *)(v105 + 136) = *(_OWORD *)(v106 + 136);
    v110 = *((_QWORD *)v106 + 19);
    v105[160] = v106[160];
    *((_QWORD *)v105 + 19) = v110;
    *(_OWORD *)(v105 + 168) = *(_OWORD *)(v106 + 168);
    *((_QWORD *)v105 + 23) = *((_QWORD *)v106 + 23);
    sub_1A6334CDC();
    sub_1A6334CDC();
    sub_1A6334CDC();
  }
  return a1;
}

char *assignWithCopy for DayForecast(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  char v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int EnumTagSinglePayload;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  int v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  int v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  int v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;

  v6 = sub_1A6332C24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  a1[a3[5]] = a2[a3[5]];
  v9 = a3[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = v11[8];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  v10[8] = v12;
  v13 = a3[7];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = v15[8];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v16;
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  a1[a3[9]] = a2[a3[9]];
  v17 = a3[10];
  v18 = &a1[v17];
  v19 = &a2[v17];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v17], 1, v6);
  v21 = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v18, v19, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v18, v6);
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  v8(v18, v19, v6);
LABEL_7:
  v23 = a3[11];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v23], 1, v6);
  v27 = __swift_getEnumTagSinglePayload((uint64_t)v25, 1, v6);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v24, v25, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v24, v6);
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  v8(v24, v25, v6);
LABEL_13:
  *(_QWORD *)&a1[a3[12]] = *(_QWORD *)&a2[a3[12]];
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[14]] = *(_QWORD *)&a2[a3[14]];
  a1[a3[15]] = a2[a3[15]];
  *(_QWORD *)&a1[a3[16]] = *(_QWORD *)&a2[a3[16]];
  v29 = a3[17];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v29], 1, v6);
  v33 = __swift_getEnumTagSinglePayload((uint64_t)v31, 1, v6);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v30, v31, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v30, v6);
LABEL_18:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_19;
  }
  v8(v30, v31, v6);
LABEL_19:
  v35 = a3[18];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v38 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v35], 1, v6);
  v39 = __swift_getEnumTagSinglePayload((uint64_t)v37, 1, v6);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v36, v37, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v36, v6);
LABEL_24:
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_25;
  }
  v8(v36, v37, v6);
LABEL_25:
  v41 = a3[19];
  v42 = &a1[v41];
  v43 = &a2[v41];
  v44 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v41], 1, v6);
  v45 = __swift_getEnumTagSinglePayload((uint64_t)v43, 1, v6);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v42, v43, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v42, 0, 1, v6);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v42, v6);
LABEL_30:
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_31;
  }
  v8(v42, v43, v6);
LABEL_31:
  v47 = a3[20];
  v48 = &a1[v47];
  v49 = &a2[v47];
  v50 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v47], 1, v6);
  v51 = __swift_getEnumTagSinglePayload((uint64_t)v49, 1, v6);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v48, v49, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, v6);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v48, v6);
LABEL_36:
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_37;
  }
  v8(v48, v49, v6);
LABEL_37:
  v53 = a3[21];
  v54 = &a1[v53];
  v55 = &a2[v53];
  v56 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v53], 1, v6);
  v57 = __swift_getEnumTagSinglePayload((uint64_t)v55, 1, v6);
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v54, v55, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v54, 0, 1, v6);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v57)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v54, v6);
LABEL_42:
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_43;
  }
  v8(v54, v55, v6);
LABEL_43:
  v59 = a3[22];
  v60 = &a1[v59];
  v61 = &a2[v59];
  v62 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v59], 1, v6);
  v63 = __swift_getEnumTagSinglePayload((uint64_t)v61, 1, v6);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v60, v61, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v6);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v63)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v60, v6);
LABEL_48:
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    goto LABEL_49;
  }
  v8(v60, v61, v6);
LABEL_49:
  v65 = a3[23];
  v66 = &a1[v65];
  v67 = &a2[v65];
  v68 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v65], 1, v6);
  v69 = __swift_getEnumTagSinglePayload((uint64_t)v67, 1, v6);
  if (v68)
  {
    if (!v69)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v66, v67, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v66, 0, 1, v6);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v69)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v66, v6);
LABEL_54:
    v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_55;
  }
  v8(v66, v67, v6);
LABEL_55:
  v71 = a3[24];
  v72 = &a1[v71];
  v73 = &a2[v71];
  v74 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v71], 1, v6);
  v75 = __swift_getEnumTagSinglePayload((uint64_t)v73, 1, v6);
  if (v74)
  {
    if (!v75)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v72, v73, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v72, 0, 1, v6);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v75)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v72, v6);
LABEL_60:
    v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    goto LABEL_61;
  }
  v8(v72, v73, v6);
LABEL_61:
  v77 = a3[25];
  v78 = &a1[v77];
  v79 = &a2[v77];
  v80 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v77], 1, v6);
  v81 = __swift_getEnumTagSinglePayload((uint64_t)v79, 1, v6);
  if (v80)
  {
    if (!v81)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v78, v79, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v78, 0, 1, v6);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v81)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v78, v6);
LABEL_66:
    v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    goto LABEL_67;
  }
  v8(v78, v79, v6);
LABEL_67:
  v83 = a3[26];
  v84 = &a1[v83];
  v85 = &a2[v83];
  v86 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v83], 1, v6);
  v87 = __swift_getEnumTagSinglePayload((uint64_t)v85, 1, v6);
  if (v86)
  {
    if (!v87)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v84, v85, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v84, 0, 1, v6);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v87)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v84, v6);
LABEL_72:
    v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
    goto LABEL_73;
  }
  v8(v84, v85, v6);
LABEL_73:
  *(_QWORD *)&a1[a3[27]] = *(_QWORD *)&a2[a3[27]];
  v89 = a3[28];
  v90 = &a1[v89];
  v91 = &a2[v89];
  v92 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v89], 1, v6);
  v93 = __swift_getEnumTagSinglePayload((uint64_t)v91, 1, v6);
  if (v92)
  {
    if (!v93)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v90, v91, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v90, 0, 1, v6);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v93)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v90, v6);
LABEL_78:
    v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
    goto LABEL_79;
  }
  v8(v90, v91, v6);
LABEL_79:
  *(_QWORD *)&a1[a3[29]] = *(_QWORD *)&a2[a3[29]];
  v95 = a3[30];
  v96 = &a1[v95];
  v97 = &a2[v95];
  v98 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v95], 1, v6);
  v99 = __swift_getEnumTagSinglePayload((uint64_t)v97, 1, v6);
  if (!v98)
  {
    if (!v99)
    {
      v8(v96, v97, v6);
      goto LABEL_85;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v96, v6);
    goto LABEL_84;
  }
  if (v99)
  {
LABEL_84:
    v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
    goto LABEL_85;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v96, v97, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v96, 0, 1, v6);
LABEL_85:
  v101 = a3[31];
  v102 = &a1[v101];
  v103 = &a2[v101];
  v104 = *(_QWORD *)v103;
  v102[8] = v103[8];
  *(_QWORD *)v102 = v104;
  v105 = a3[32];
  v106 = &a1[v105];
  v107 = &a2[v105];
  v108 = *(_QWORD *)v107;
  v106[8] = v107[8];
  *(_QWORD *)v106 = v108;
  v109 = a3[33];
  v110 = &a1[v109];
  v111 = &a2[v109];
  v112 = *(_QWORD *)v111;
  v110[8] = v111[8];
  *(_QWORD *)v110 = v112;
  v113 = a3[34];
  v114 = &a1[v113];
  v115 = &a2[v113];
  v116 = *(_QWORD *)v115;
  v114[8] = v115[8];
  *(_QWORD *)v114 = v116;
  v117 = a3[35];
  v118 = &a1[v117];
  v119 = &a2[v117];
  v120 = *(_QWORD *)v119;
  v118[8] = v119[8];
  *(_QWORD *)v118 = v120;
  v121 = a3[36];
  v122 = &a1[v121];
  v123 = &a2[v121];
  *v122 = a2[v121];
  *((_QWORD *)v122 + 1) = *(_QWORD *)&a2[v121 + 8];
  *((_QWORD *)v122 + 2) = *(_QWORD *)&a2[v121 + 16];
  *((_QWORD *)v122 + 3) = *(_QWORD *)&a2[v121 + 24];
  *((_QWORD *)v122 + 4) = *(_QWORD *)&a2[v121 + 32];
  v122[40] = a2[v121 + 40];
  *((_QWORD *)v122 + 6) = *(_QWORD *)&a2[v121 + 48];
  *((_QWORD *)v122 + 7) = *(_QWORD *)&a2[v121 + 56];
  *((_QWORD *)v122 + 8) = *(_QWORD *)&a2[v121 + 64];
  *((_QWORD *)v122 + 9) = *(_QWORD *)&a2[v121 + 72];
  v124 = *(_QWORD *)&a2[v121 + 80];
  v122[88] = v123[88];
  *((_QWORD *)v122 + 10) = v124;
  *((_QWORD *)v122 + 12) = *((_QWORD *)v123 + 12);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  *((_QWORD *)v122 + 13) = *((_QWORD *)v123 + 13);
  v122[112] = v123[112];
  v125 = *((_QWORD *)v123 + 15);
  v122[128] = v123[128];
  *((_QWORD *)v122 + 15) = v125;
  *((_QWORD *)v122 + 17) = *((_QWORD *)v123 + 17);
  *((_QWORD *)v122 + 18) = *((_QWORD *)v123 + 18);
  v126 = *((_QWORD *)v123 + 19);
  v122[160] = v123[160];
  *((_QWORD *)v122 + 19) = v126;
  *((_QWORD *)v122 + 21) = *((_QWORD *)v123 + 21);
  *((_QWORD *)v122 + 22) = *((_QWORD *)v123 + 22);
  *((_QWORD *)v122 + 23) = *((_QWORD *)v123 + 23);
  v127 = a3[37];
  v128 = &a1[v127];
  v129 = &a2[v127];
  *v128 = a2[v127];
  *((_QWORD *)v128 + 1) = *(_QWORD *)&a2[v127 + 8];
  *((_QWORD *)v128 + 2) = *(_QWORD *)&a2[v127 + 16];
  *((_QWORD *)v128 + 3) = *(_QWORD *)&a2[v127 + 24];
  *((_QWORD *)v128 + 4) = *(_QWORD *)&a2[v127 + 32];
  v128[40] = a2[v127 + 40];
  *((_QWORD *)v128 + 6) = *(_QWORD *)&a2[v127 + 48];
  *((_QWORD *)v128 + 7) = *(_QWORD *)&a2[v127 + 56];
  *((_QWORD *)v128 + 8) = *(_QWORD *)&a2[v127 + 64];
  *((_QWORD *)v128 + 9) = *(_QWORD *)&a2[v127 + 72];
  v130 = *(_QWORD *)&a2[v127 + 80];
  v128[88] = v129[88];
  *((_QWORD *)v128 + 10) = v130;
  *((_QWORD *)v128 + 12) = *((_QWORD *)v129 + 12);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  *((_QWORD *)v128 + 13) = *((_QWORD *)v129 + 13);
  v128[112] = v129[112];
  v131 = *((_QWORD *)v129 + 15);
  v128[128] = v129[128];
  *((_QWORD *)v128 + 15) = v131;
  *((_QWORD *)v128 + 17) = *((_QWORD *)v129 + 17);
  *((_QWORD *)v128 + 18) = *((_QWORD *)v129 + 18);
  v132 = *((_QWORD *)v129 + 19);
  v128[160] = v129[160];
  *((_QWORD *)v128 + 19) = v132;
  *((_QWORD *)v128 + 21) = *((_QWORD *)v129 + 21);
  *((_QWORD *)v128 + 22) = *((_QWORD *)v129 + 22);
  *((_QWORD *)v128 + 23) = *((_QWORD *)v129 + 23);
  v133 = a3[38];
  v134 = &a1[v133];
  v135 = &a2[v133];
  *v134 = a2[v133];
  *((_QWORD *)v134 + 1) = *(_QWORD *)&a2[v133 + 8];
  *((_QWORD *)v134 + 2) = *(_QWORD *)&a2[v133 + 16];
  *((_QWORD *)v134 + 3) = *(_QWORD *)&a2[v133 + 24];
  *((_QWORD *)v134 + 4) = *(_QWORD *)&a2[v133 + 32];
  v134[40] = a2[v133 + 40];
  *((_QWORD *)v134 + 6) = *(_QWORD *)&a2[v133 + 48];
  *((_QWORD *)v134 + 7) = *(_QWORD *)&a2[v133 + 56];
  *((_QWORD *)v134 + 8) = *(_QWORD *)&a2[v133 + 64];
  *((_QWORD *)v134 + 9) = *(_QWORD *)&a2[v133 + 72];
  v136 = *(_QWORD *)&a2[v133 + 80];
  v134[88] = v135[88];
  *((_QWORD *)v134 + 10) = v136;
  *((_QWORD *)v134 + 12) = *((_QWORD *)v135 + 12);
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  *((_QWORD *)v134 + 13) = *((_QWORD *)v135 + 13);
  v134[112] = v135[112];
  v137 = *((_QWORD *)v135 + 15);
  v134[128] = v135[128];
  *((_QWORD *)v134 + 15) = v137;
  *((_QWORD *)v134 + 17) = *((_QWORD *)v135 + 17);
  *((_QWORD *)v134 + 18) = *((_QWORD *)v135 + 18);
  v138 = *((_QWORD *)v135 + 19);
  v134[160] = v135[160];
  *((_QWORD *)v134 + 19) = v138;
  *((_QWORD *)v134 + 21) = *((_QWORD *)v135 + 21);
  *((_QWORD *)v134 + 22) = *((_QWORD *)v135 + 22);
  *((_QWORD *)v134 + 23) = *((_QWORD *)v135 + 23);
  return a1;
}

char *initializeWithTake for DayForecast(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;

  v6 = sub_1A6332C24();
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  v9 = &a1[v8];
  v10 = &a2[v8];
  *(_QWORD *)v9 = *(_QWORD *)v10;
  v9[8] = v10[8];
  v11 = a3[7];
  v12 = a3[8];
  v13 = &a1[v11];
  v14 = &a2[v11];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];
  v15 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  v16 = &a1[v15];
  v17 = &a2[v15];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v15], 1, v6))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v7(v16, v17, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v6);
  }
  v19 = a3[11];
  v20 = &a1[v19];
  v21 = &a2[v19];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v19], 1, v6))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v7(v20, v21, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v6);
  }
  v23 = a3[13];
  *(_QWORD *)&a1[a3[12]] = *(_QWORD *)&a2[a3[12]];
  *(_QWORD *)&a1[v23] = *(_QWORD *)&a2[v23];
  v24 = a3[15];
  *(_QWORD *)&a1[a3[14]] = *(_QWORD *)&a2[a3[14]];
  a1[v24] = a2[v24];
  v25 = a3[17];
  *(_QWORD *)&a1[a3[16]] = *(_QWORD *)&a2[a3[16]];
  v26 = &a1[v25];
  v27 = &a2[v25];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v25], 1, v6))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v7(v26, v27, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v6);
  }
  v29 = a3[18];
  v30 = &a1[v29];
  v31 = &a2[v29];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v29], 1, v6))
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    v7(v30, v31, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v6);
  }
  v33 = a3[19];
  v34 = &a1[v33];
  v35 = &a2[v33];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v33], 1, v6))
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    v7(v34, v35, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v6);
  }
  v37 = a3[20];
  v38 = &a1[v37];
  v39 = &a2[v37];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v37], 1, v6))
  {
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    v7(v38, v39, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v6);
  }
  v41 = a3[21];
  v42 = &a1[v41];
  v43 = &a2[v41];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v41], 1, v6))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    v7(v42, v43, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v42, 0, 1, v6);
  }
  v45 = a3[22];
  v46 = &a1[v45];
  v47 = &a2[v45];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v45], 1, v6))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    v7(v46, v47, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v6);
  }
  v49 = a3[23];
  v50 = &a1[v49];
  v51 = &a2[v49];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v49], 1, v6))
  {
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    v7(v50, v51, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v50, 0, 1, v6);
  }
  v53 = a3[24];
  v54 = &a1[v53];
  v55 = &a2[v53];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v53], 1, v6))
  {
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    v7(v54, v55, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v54, 0, 1, v6);
  }
  v57 = a3[25];
  v58 = &a1[v57];
  v59 = &a2[v57];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v57], 1, v6))
  {
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    v7(v58, v59, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v6);
  }
  v61 = a3[26];
  v62 = &a1[v61];
  v63 = &a2[v61];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v61], 1, v6))
  {
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  }
  else
  {
    v7(v62, v63, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v6);
  }
  v65 = a3[28];
  *(_QWORD *)&a1[a3[27]] = *(_QWORD *)&a2[a3[27]];
  v66 = &a1[v65];
  v67 = &a2[v65];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v65], 1, v6))
  {
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
  }
  else
  {
    v7(v66, v67, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v66, 0, 1, v6);
  }
  v69 = a3[30];
  *(_QWORD *)&a1[a3[29]] = *(_QWORD *)&a2[a3[29]];
  v70 = &a1[v69];
  v71 = &a2[v69];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v69], 1, v6))
  {
    v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
  }
  else
  {
    v7(v70, v71, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v70, 0, 1, v6);
  }
  v73 = a3[31];
  v74 = a3[32];
  v75 = &a1[v73];
  v76 = &a2[v73];
  *(_QWORD *)v75 = *(_QWORD *)v76;
  v75[8] = v76[8];
  v77 = &a1[v74];
  v78 = &a2[v74];
  *(_QWORD *)v77 = *(_QWORD *)v78;
  v77[8] = v78[8];
  v79 = a3[33];
  v80 = a3[34];
  v81 = &a1[v79];
  v82 = &a2[v79];
  *(_QWORD *)v81 = *(_QWORD *)v82;
  v81[8] = v82[8];
  v83 = &a1[v80];
  v84 = &a2[v80];
  *(_QWORD *)v83 = *(_QWORD *)v84;
  v83[8] = v84[8];
  v85 = a3[35];
  v86 = a3[36];
  v87 = &a1[v85];
  v88 = &a2[v85];
  v87[8] = v88[8];
  *(_QWORD *)v87 = *(_QWORD *)v88;
  memcpy(&a1[v86], &a2[v86], 0xC0uLL);
  memcpy(&a1[a3[37]], &a2[a3[37]], 0xC0uLL);
  memcpy(&a1[a3[38]], &a2[a3[38]], 0xC0uLL);
  return a1;
}

char *assignWithTake for DayForecast(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int EnumTagSinglePayload;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  int v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  int v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  int v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  __int128 v120;
  uint64_t v121;
  char *v122;
  char *v123;
  __int128 v124;
  uint64_t v125;
  char *v126;
  char *v127;
  __int128 v128;

  v6 = sub_1A6332C24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  v10[8] = v11[8];
  v12 = a3[7];
  v13 = a3[8];
  v14 = &a1[v12];
  v15 = &a2[v12];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
  v16 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  v17 = &a1[v16];
  v18 = &a2[v16];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v16], 1, v6);
  v20 = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v17, v18, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v6);
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  v8(v17, v18, v6);
LABEL_7:
  v22 = a3[11];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v22], 1, v6);
  v26 = __swift_getEnumTagSinglePayload((uint64_t)v24, 1, v6);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v23, v24, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v23, v6);
LABEL_12:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  v8(v23, v24, v6);
LABEL_13:
  v28 = a3[13];
  *(_QWORD *)&a1[a3[12]] = *(_QWORD *)&a2[a3[12]];
  *(_QWORD *)&a1[v28] = *(_QWORD *)&a2[v28];
  swift_bridgeObjectRelease();
  v29 = a3[15];
  *(_QWORD *)&a1[a3[14]] = *(_QWORD *)&a2[a3[14]];
  a1[v29] = a2[v29];
  v30 = a3[17];
  *(_QWORD *)&a1[a3[16]] = *(_QWORD *)&a2[a3[16]];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v30], 1, v6);
  v34 = __swift_getEnumTagSinglePayload((uint64_t)v32, 1, v6);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v31, v32, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v31, v6);
LABEL_18:
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_19;
  }
  v8(v31, v32, v6);
LABEL_19:
  v36 = a3[18];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v36], 1, v6);
  v40 = __swift_getEnumTagSinglePayload((uint64_t)v38, 1, v6);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v37, v38, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v37, v6);
LABEL_24:
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_25;
  }
  v8(v37, v38, v6);
LABEL_25:
  v42 = a3[19];
  v43 = &a1[v42];
  v44 = &a2[v42];
  v45 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v42], 1, v6);
  v46 = __swift_getEnumTagSinglePayload((uint64_t)v44, 1, v6);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v43, v44, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v43, 0, 1, v6);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v43, v6);
LABEL_30:
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_31;
  }
  v8(v43, v44, v6);
LABEL_31:
  v48 = a3[20];
  v49 = &a1[v48];
  v50 = &a2[v48];
  v51 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v48], 1, v6);
  v52 = __swift_getEnumTagSinglePayload((uint64_t)v50, 1, v6);
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v49, v50, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v49, 0, 1, v6);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v52)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v49, v6);
LABEL_36:
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_37;
  }
  v8(v49, v50, v6);
LABEL_37:
  v54 = a3[21];
  v55 = &a1[v54];
  v56 = &a2[v54];
  v57 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v54], 1, v6);
  v58 = __swift_getEnumTagSinglePayload((uint64_t)v56, 1, v6);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v55, v56, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v55, 0, 1, v6);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v55, v6);
LABEL_42:
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_43;
  }
  v8(v55, v56, v6);
LABEL_43:
  v60 = a3[22];
  v61 = &a1[v60];
  v62 = &a2[v60];
  v63 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v60], 1, v6);
  v64 = __swift_getEnumTagSinglePayload((uint64_t)v62, 1, v6);
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v61, v62, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v61, 0, 1, v6);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v64)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v61, v6);
LABEL_48:
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    goto LABEL_49;
  }
  v8(v61, v62, v6);
LABEL_49:
  v66 = a3[23];
  v67 = &a1[v66];
  v68 = &a2[v66];
  v69 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v66], 1, v6);
  v70 = __swift_getEnumTagSinglePayload((uint64_t)v68, 1, v6);
  if (v69)
  {
    if (!v70)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v67, v68, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v6);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v70)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v67, v6);
LABEL_54:
    v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    goto LABEL_55;
  }
  v8(v67, v68, v6);
LABEL_55:
  v72 = a3[24];
  v73 = &a1[v72];
  v74 = &a2[v72];
  v75 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v72], 1, v6);
  v76 = __swift_getEnumTagSinglePayload((uint64_t)v74, 1, v6);
  if (v75)
  {
    if (!v76)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v73, v74, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v73, 0, 1, v6);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v76)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v73, v6);
LABEL_60:
    v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    goto LABEL_61;
  }
  v8(v73, v74, v6);
LABEL_61:
  v78 = a3[25];
  v79 = &a1[v78];
  v80 = &a2[v78];
  v81 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v78], 1, v6);
  v82 = __swift_getEnumTagSinglePayload((uint64_t)v80, 1, v6);
  if (v81)
  {
    if (!v82)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v79, v80, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v79, 0, 1, v6);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v82)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v79, v6);
LABEL_66:
    v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    goto LABEL_67;
  }
  v8(v79, v80, v6);
LABEL_67:
  v84 = a3[26];
  v85 = &a1[v84];
  v86 = &a2[v84];
  v87 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v84], 1, v6);
  v88 = __swift_getEnumTagSinglePayload((uint64_t)v86, 1, v6);
  if (v87)
  {
    if (!v88)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v85, v86, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v85, 0, 1, v6);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v88)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v85, v6);
LABEL_72:
    v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
    goto LABEL_73;
  }
  v8(v85, v86, v6);
LABEL_73:
  v90 = a3[28];
  *(_QWORD *)&a1[a3[27]] = *(_QWORD *)&a2[a3[27]];
  v91 = &a1[v90];
  v92 = &a2[v90];
  v93 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v90], 1, v6);
  v94 = __swift_getEnumTagSinglePayload((uint64_t)v92, 1, v6);
  if (v93)
  {
    if (!v94)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v91, v92, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v91, 0, 1, v6);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v94)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v91, v6);
LABEL_78:
    v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
    goto LABEL_79;
  }
  v8(v91, v92, v6);
LABEL_79:
  v96 = a3[30];
  *(_QWORD *)&a1[a3[29]] = *(_QWORD *)&a2[a3[29]];
  v97 = &a1[v96];
  v98 = &a2[v96];
  v99 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v96], 1, v6);
  v100 = __swift_getEnumTagSinglePayload((uint64_t)v98, 1, v6);
  if (!v99)
  {
    if (!v100)
    {
      v8(v97, v98, v6);
      goto LABEL_85;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v97, v6);
    goto LABEL_84;
  }
  if (v100)
  {
LABEL_84:
    v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
    memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
    goto LABEL_85;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v97, v98, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v97, 0, 1, v6);
LABEL_85:
  v102 = a3[31];
  v103 = a3[32];
  v104 = &a1[v102];
  v105 = &a2[v102];
  *(_QWORD *)v104 = *(_QWORD *)v105;
  v104[8] = v105[8];
  v106 = &a1[v103];
  v107 = &a2[v103];
  *(_QWORD *)v106 = *(_QWORD *)v107;
  v106[8] = v107[8];
  v108 = a3[33];
  v109 = a3[34];
  v110 = &a1[v108];
  v111 = &a2[v108];
  *(_QWORD *)v110 = *(_QWORD *)v111;
  v110[8] = v111[8];
  v112 = &a1[v109];
  v113 = &a2[v109];
  v112[8] = v113[8];
  *(_QWORD *)v112 = *(_QWORD *)v113;
  v114 = a3[35];
  v115 = a3[36];
  v116 = &a1[v114];
  v117 = &a2[v114];
  *(_QWORD *)v116 = *(_QWORD *)v117;
  v116[8] = v117[8];
  v118 = &a1[v115];
  v119 = &a2[v115];
  *v118 = a2[v115];
  *(_OWORD *)(v118 + 8) = *(_OWORD *)&a2[v115 + 8];
  *(_OWORD *)(v118 + 24) = *(_OWORD *)&a2[v115 + 24];
  v118[40] = a2[v115 + 40];
  v120 = *(_OWORD *)&a2[v115 + 64];
  *((_OWORD *)v118 + 3) = *(_OWORD *)&a2[v115 + 48];
  *((_OWORD *)v118 + 4) = v120;
  *((_QWORD *)v118 + 10) = *(_QWORD *)&a2[v115 + 80];
  v118[88] = a2[v115 + 88];
  *((_QWORD *)v118 + 12) = *(_QWORD *)&a2[v115 + 96];
  swift_bridgeObjectRelease();
  *((_QWORD *)v118 + 13) = *((_QWORD *)v119 + 13);
  v118[112] = v119[112];
  v118[128] = v119[128];
  *((_QWORD *)v118 + 15) = *((_QWORD *)v119 + 15);
  *(_OWORD *)(v118 + 136) = *(_OWORD *)(v119 + 136);
  *((_QWORD *)v118 + 19) = *((_QWORD *)v119 + 19);
  v118[160] = v119[160];
  *(_OWORD *)(v118 + 168) = *(_OWORD *)(v119 + 168);
  *((_QWORD *)v118 + 23) = *((_QWORD *)v119 + 23);
  v121 = a3[37];
  v122 = &a1[v121];
  v123 = &a2[v121];
  *v122 = a2[v121];
  *(_OWORD *)(v122 + 8) = *(_OWORD *)&a2[v121 + 8];
  *(_OWORD *)(v122 + 24) = *(_OWORD *)&a2[v121 + 24];
  v122[40] = a2[v121 + 40];
  v124 = *(_OWORD *)&a2[v121 + 64];
  *((_OWORD *)v122 + 3) = *(_OWORD *)&a2[v121 + 48];
  *((_OWORD *)v122 + 4) = v124;
  v122[88] = a2[v121 + 88];
  *((_QWORD *)v122 + 10) = *(_QWORD *)&a2[v121 + 80];
  *((_QWORD *)v122 + 12) = *(_QWORD *)&a2[v121 + 96];
  swift_bridgeObjectRelease();
  *((_QWORD *)v122 + 13) = *((_QWORD *)v123 + 13);
  v122[112] = v123[112];
  v122[128] = v123[128];
  *((_QWORD *)v122 + 15) = *((_QWORD *)v123 + 15);
  *(_OWORD *)(v122 + 136) = *(_OWORD *)(v123 + 136);
  *((_QWORD *)v122 + 19) = *((_QWORD *)v123 + 19);
  v122[160] = v123[160];
  *(_OWORD *)(v122 + 168) = *(_OWORD *)(v123 + 168);
  *((_QWORD *)v122 + 23) = *((_QWORD *)v123 + 23);
  v125 = a3[38];
  v126 = &a1[v125];
  v127 = &a2[v125];
  *v126 = *v127;
  *(_OWORD *)(v126 + 8) = *(_OWORD *)(v127 + 8);
  *(_OWORD *)(v126 + 24) = *(_OWORD *)(v127 + 24);
  v126[40] = v127[40];
  v128 = *((_OWORD *)v127 + 4);
  *((_OWORD *)v126 + 3) = *((_OWORD *)v127 + 3);
  *((_OWORD *)v126 + 4) = v128;
  v126[88] = v127[88];
  *((_QWORD *)v126 + 10) = *((_QWORD *)v127 + 10);
  *((_QWORD *)v126 + 12) = *((_QWORD *)v127 + 12);
  swift_bridgeObjectRelease();
  *((_QWORD *)v126 + 13) = *((_QWORD *)v127 + 13);
  v126[112] = v127[112];
  *((_QWORD *)v126 + 15) = *((_QWORD *)v127 + 15);
  v126[128] = v127[128];
  *(_OWORD *)(v126 + 136) = *(_OWORD *)(v127 + 136);
  *((_QWORD *)v126 + 19) = *((_QWORD *)v127 + 19);
  v126[160] = v127[160];
  *(_OWORD *)(v126 + 168) = *(_OWORD *)(v127 + 168);
  *((_QWORD *)v126 + 23) = *((_QWORD *)v127 + 23);
  return a1;
}

uint64_t sub_1A62A9408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v11;

  v6 = OUTLINED_FUNCTION_6();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v9;
    v8 = a1 + *(int *)(a3 + 40);
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 52));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

void sub_1A62A94A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = OUTLINED_FUNCTION_6();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
LABEL_5:
    __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
    return;
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D330);
  if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
  {
    v9 = v11;
    v10 = a1 + *(int *)(a4 + 40);
    goto LABEL_5;
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 52)) = (a2 - 1);
  OUTLINED_FUNCTION_3_1();
}

unint64_t sub_1A62A9540()
{
  unint64_t result;

  result = qword_1EE847FC0;
  if (!qword_1EE847FC0)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A634162C, &type metadata for DayForecast.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847FC0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_37_6()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 272);
}

double PrecipitationAmountRange.minimum.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double PrecipitationAmountRange.maximum.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double PrecipitationAmountRange.expected.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double PrecipitationAmountRange.minimumSnow.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

double PrecipitationAmountRange.maximumSnow.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double PrecipitationAmountRange.expectedSnow.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

BOOL static PrecipitationAmountRange.== infix(_:_:)(float64x2_t *a1, float64x2_t *a2)
{
  _BOOL8 result;

  result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*a1, *a2), (int32x4_t)vceqq_f64(a1[1], a2[1]))), 0xFuLL))) & 1) != 0&& a1[2].f64[0] == a2[2].f64[0])
  {
    return a1[2].f64[1] == a2[2].f64[1];
  }
  return result;
}

uint64_t sub_1A62A9614(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 0x6D756D696E696DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1A6335ABC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6D756D6978616DLL && a2 == 0xE700000000000000;
    if (v6 || (sub_1A6335ABC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6465746365707865 && a2 == 0xE800000000000000;
      if (v7 || (sub_1A6335ABC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x536D756D696E696DLL && a2 == 0xEB00000000776F6ELL;
        if (v8 || (sub_1A6335ABC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x536D756D6978616DLL && a2 == 0xEB00000000776F6ELL;
          if (v9 || (sub_1A6335ABC() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x6465746365707865 && a2 == 0xEC000000776F6E53)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v11 = sub_1A6335ABC();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 5;
            else
              return 6;
          }
        }
      }
    }
  }
}

uint64_t sub_1A62A98B4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A62A98E8 + 4 * byte_1A63416B0[a1]))(0x6D756D696E696DLL, 0xE700000000000000);
}

uint64_t sub_1A62A98E8()
{
  return 0x6D756D6978616DLL;
}

uint64_t sub_1A62A98FC()
{
  return 0x6465746365707865;
}

uint64_t sub_1A62A9950()
{
  unsigned __int8 *v0;

  return sub_1A62A98B4(*v0);
}

uint64_t sub_1A62A9958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A62A9614(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A62A997C()
{
  sub_1A62A9B58();
  return sub_1A6335C18();
}

uint64_t sub_1A62A99A4()
{
  sub_1A62A9B58();
  return sub_1A6335C24();
}

uint64_t PrecipitationAmountRange.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED219CA0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A62A9B58();
  sub_1A6335BF4();
  v8[15] = 0;
  OUTLINED_FUNCTION_7_1();
  if (!v1)
  {
    v8[14] = 1;
    OUTLINED_FUNCTION_7_1();
    v8[13] = 2;
    OUTLINED_FUNCTION_7_1();
    v8[12] = 3;
    OUTLINED_FUNCTION_7_1();
    v8[11] = 4;
    OUTLINED_FUNCTION_7_1();
    v8[10] = 5;
    OUTLINED_FUNCTION_7_1();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1A62A9B58()
{
  unint64_t result;

  result = qword_1ED219C78;
  if (!qword_1ED219C78)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A634187C, &type metadata for PrecipitationAmountRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED219C78);
  }
  return result;
}

uint64_t PrecipitationAmountRange.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED219C98);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A62A9B58();
  sub_1A6335BDC();
  if (!v2)
  {
    OUTLINED_FUNCTION_1_38();
    v7 = v6;
    OUTLINED_FUNCTION_1_38();
    v9 = v8;
    OUTLINED_FUNCTION_1_38();
    v11 = v10;
    OUTLINED_FUNCTION_1_38();
    v13 = v12;
    OUTLINED_FUNCTION_1_38();
    v16 = v15;
    OUTLINED_FUNCTION_1_38();
    v18 = v17;
    OUTLINED_FUNCTION_2_0();
    *a2 = v7;
    a2[1] = v9;
    a2[2] = v11;
    a2[3] = v13;
    a2[4] = v16;
    a2[5] = v18;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A62A9D3C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return PrecipitationAmountRange.init(from:)(a1, a2);
}

uint64_t sub_1A62A9D50(_QWORD *a1)
{
  return PrecipitationAmountRange.encode(to:)(a1);
}

uint64_t sub_1A62A9D68()
{
  return static PrecipitationAmountRange.read(from:)();
}

uint64_t sub_1A62A9D7C()
{
  return PrecipitationAmountRange.write(to:)();
}

uint64_t storeEnumTagSinglePayload for PrecipitationAmountRange.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A62A9DDC + 4 * byte_1A63416BB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A62A9E10 + 4 * byte_1A63416B6[v4]))();
}

uint64_t sub_1A62A9E10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A62A9E18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A62A9E20);
  return result;
}

uint64_t sub_1A62A9E2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A62A9E34);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A62A9E38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A62A9E40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PrecipitationAmountRange.CodingKeys()
{
  return &type metadata for PrecipitationAmountRange.CodingKeys;
}

unint64_t sub_1A62A9E60()
{
  unint64_t result;

  result = qword_1EE847FC8;
  if (!qword_1EE847FC8)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A6341854, &type metadata for PrecipitationAmountRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847FC8);
  }
  return result;
}

unint64_t sub_1A62A9EA0()
{
  unint64_t result;

  result = qword_1ED219C88;
  if (!qword_1ED219C88)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A63417C4, &type metadata for PrecipitationAmountRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED219C88);
  }
  return result;
}

unint64_t sub_1A62A9EE0()
{
  unint64_t result;

  result = qword_1ED219C80;
  if (!qword_1ED219C80)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A63417EC, &type metadata for PrecipitationAmountRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED219C80);
  }
  return result;
}

uint64_t WeatherRequestMarineHourlyRelativeRange.RelativeTo.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 7827310;
  else
    return 7954788;
}

WeatherDaemon::WeatherRequestMarineHourlyRelativeRange::RelativeTo_optional __swiftcall WeatherRequestMarineHourlyRelativeRange.RelativeTo.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  char v4;
  WeatherDaemon::WeatherRequestMarineHourlyRelativeRange::RelativeTo_optional result;

  v2 = v1;
  v3 = sub_1A6335918();
  swift_bridgeObjectRelease();
  if (v3 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v3)
    v4 = 0;
  *v2 = v4;
  OUTLINED_FUNCTION_3_1();
  return result;
}

WeatherDaemon::WeatherRequestMarineHourlyRelativeRange::RelativeTo_optional sub_1A62A9F98(Swift::String *a1)
{
  return WeatherRequestMarineHourlyRelativeRange.RelativeTo.init(rawValue:)(*a1);
}

uint64_t sub_1A62A9FA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = WeatherRequestMarineHourlyRelativeRange.RelativeTo.rawValue.getter();
  *a1 = result;
  a1[1] = 0xE300000000000000;
  return result;
}

uint64_t sub_1A62A9FCC()
{
  sub_1A62AAB78();
  return sub_1A63354F8();
}

uint64_t sub_1A62AA028()
{
  sub_1A62AAB78();
  return sub_1A63354BC();
}

uint64_t WeatherRequestMarineHourlyRelativeRange.init(start:end:relativeTo:now:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *a3;
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = v7;
  v8 = a5 + *(int *)(type metadata accessor for WeatherRequestMarineHourlyRelativeRange() + 28);
  v9 = OUTLINED_FUNCTION_6();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, a4, v9);
}

uint64_t type metadata accessor for WeatherRequestMarineHourlyRelativeRange()
{
  uint64_t result;

  result = qword_1ED21BBD0;
  if (!qword_1ED21BBD0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A62AA100()
{
  uint64_t v0;
  uint64_t v2;

  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
    sub_1A61F2FC0();
  else
    sub_1A61F2E5C();
  v2 = OUTLINED_FUNCTION_3_38();
  OUTLINED_FUNCTION_1_39();
  sub_1A63353F0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1_39();
  OUTLINED_FUNCTION_3_38();
  sub_1A63353F0();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1A62AA1BC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A62AA1EC + 4 * byte_1A63418D0[a1]))(0x7472617473, 0xE500000000000000);
}

uint64_t sub_1A62AA1EC()
{
  return 6581861;
}

uint64_t sub_1A62AA1FC()
{
  return 0x65766974616C6572;
}

uint64_t sub_1A62AA218()
{
  return 7827310;
}

uint64_t sub_1A62AA228()
{
  unsigned __int8 *v0;

  return sub_1A62AA1BC(*v0);
}

uint64_t sub_1A62AA230()
{
  sub_1A62AA3FC();
  return sub_1A6335C18();
}

uint64_t sub_1A62AA258()
{
  sub_1A62AA3FC();
  return sub_1A6335C24();
}

uint64_t WeatherRequestMarineHourlyRelativeRange.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847FD0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A62AA3FC();
  sub_1A6335BF4();
  OUTLINED_FUNCTION_0_38();
  if (!v1)
  {
    OUTLINED_FUNCTION_0_38();
    sub_1A62AA438();
    OUTLINED_FUNCTION_4_0();
    type metadata accessor for WeatherRequestMarineHourlyRelativeRange();
    sub_1A6332C24();
    sub_1A6189BFC(&qword_1ED21B898, MEMORY[0x1E0CB0890]);
    OUTLINED_FUNCTION_4_0();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

unint64_t sub_1A62AA3FC()
{
  unint64_t result;

  result = qword_1EE847FD8;
  if (!qword_1EE847FD8)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A6341B48, &type metadata for WeatherRequestMarineHourlyRelativeRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE847FD8);
  }
  return result;
}

unint64_t sub_1A62AA438()
{
  unint64_t result;

  result = qword_1EE847FE0;
  if (!qword_1EE847FE0)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for WeatherRequestMarineHourlyRelativeRange.RelativeTo, &type metadata for WeatherRequestMarineHourlyRelativeRange.RelativeTo);
    atomic_store(result, (unint64_t *)&qword_1EE847FE0);
  }
  return result;
}

uint64_t WeatherRequestMarineHourlyRelativeRange.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;

  v11 = a2;
  v14 = sub_1A6332C24();
  v12 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v13 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE847FE8);
  MEMORY[0x1E0C80A78](v15);
  v5 = type metadata accessor for WeatherRequestMarineHourlyRelativeRange();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A62AA3FC();
  v6 = v16;
  sub_1A6335BDC();
  if (!v6)
  {
    v16 = v5;
    v8 = v13;
    v7 = v14;
    v21 = 0;
    *(_QWORD *)v2 = sub_1A63359CC();
    v20 = 1;
    *(_QWORD *)(v2 + 8) = sub_1A63359CC();
    v18 = 2;
    sub_1A62AA6D8();
    sub_1A63359D8();
    *(_BYTE *)(v2 + 16) = v19;
    v17 = 3;
    sub_1A6189BFC(&qword_1ED21B8A0, MEMORY[0x1E0CB08C0]);
    sub_1A63359D8();
    OUTLINED_FUNCTION_0_8();
    v10 = v11;
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v2 + *(int *)(v16 + 28), v8, v7);
    sub_1A62AA714(v2, v10);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1A62AA6D8()
{
  unint64_t result;

  result = qword_1EE847FF0;
  if (!qword_1EE847FF0)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for WeatherRequestMarineHourlyRelativeRange.RelativeTo, &type metadata for WeatherRequestMarineHourlyRelativeRange.RelativeTo);
    atomic_store(result, (unint64_t *)&qword_1EE847FF0);
  }
  return result;
}

uint64_t sub_1A62AA714(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WeatherRequestMarineHourlyRelativeRange();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A62AA75C()
{
  unint64_t result;

  result = qword_1EE847FF8;
  if (!qword_1EE847FF8)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for WeatherRequestMarineHourlyRelativeRange.RelativeTo, &type metadata for WeatherRequestMarineHourlyRelativeRange.RelativeTo);
    atomic_store(result, (unint64_t *)&qword_1EE847FF8);
  }
  return result;
}

uint64_t sub_1A62AA798@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WeatherRequestMarineHourlyRelativeRange.init(from:)(a1, a2);
}

uint64_t sub_1A62AA7AC(_QWORD *a1)
{
  return WeatherRequestMarineHourlyRelativeRange.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for WeatherRequestMarineHourlyRelativeRange()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A62AA7CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 >= 2)
      return v4 - 1;
    else
      return 0;
  }
  else
  {
    v8 = OUTLINED_FUNCTION_6();
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for WeatherRequestMarineHourlyRelativeRange()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1A62AA840(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 254)
  {
    *(_BYTE *)(a1 + 16) = a2 + 1;
    OUTLINED_FUNCTION_3_1();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_6();
    __swift_storeEnumTagSinglePayload(a1 + *(int *)(a4 + 28), a2, a2, v7);
  }
}

uint64_t sub_1A62AA89C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A6332C24();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WeatherRequestMarineHourlyRelativeRange.RelativeTo(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A62AA96C + 4 * byte_1A63418D9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A62AA9A0 + 4 * byte_1A63418D4[v4]))();
}

uint64_t sub_1A62AA9A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A62AA9A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A62AA9B0);
  return result;
}

uint64_t sub_1A62AA9BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A62AA9C4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A62AA9C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A62AA9D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WeatherRequestMarineHourlyRelativeRange.RelativeTo()
{
  return &type metadata for WeatherRequestMarineHourlyRelativeRange.RelativeTo;
}

uint64_t storeEnumTagSinglePayload for WeatherRequestMarineHourlyRelativeRange.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A62AAA38 + 4 * byte_1A63418E3[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A62AAA6C + 4 * byte_1A63418DE[v4]))();
}

uint64_t sub_1A62AAA6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A62AAA74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A62AAA7CLL);
  return result;
}

uint64_t sub_1A62AAA88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A62AAA90);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A62AAA94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A62AAA9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WeatherRequestMarineHourlyRelativeRange.CodingKeys()
{
  return &type metadata for WeatherRequestMarineHourlyRelativeRange.CodingKeys;
}

unint64_t sub_1A62AAABC()
{
  unint64_t result;

  result = qword_1EE848000;
  if (!qword_1EE848000)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A6341B20, &type metadata for WeatherRequestMarineHourlyRelativeRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE848000);
  }
  return result;
}

unint64_t sub_1A62AAAFC()
{
  unint64_t result;

  result = qword_1EE848008;
  if (!qword_1EE848008)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A6341A90, &type metadata for WeatherRequestMarineHourlyRelativeRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE848008);
  }
  return result;
}

unint64_t sub_1A62AAB3C()
{
  unint64_t result;

  result = qword_1EE848010;
  if (!qword_1EE848010)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A6341AB8, &type metadata for WeatherRequestMarineHourlyRelativeRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE848010);
  }
  return result;
}

unint64_t sub_1A62AAB78()
{
  unint64_t result;

  result = qword_1EE848018;
  if (!qword_1EE848018)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for WeatherRequestMarineHourlyRelativeRange.RelativeTo, &type metadata for WeatherRequestMarineHourlyRelativeRange.RelativeTo);
    atomic_store(result, (unint64_t *)&qword_1EE848018);
  }
  return result;
}

uint64_t sub_1A62AABB4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  if (qword_1ED21D318 != -1)
    swift_once();
  v0 = sub_1A6334F04();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED22A3C0);
  v1 = sub_1A6334EEC();
  v2 = sub_1A633569C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_DWORD *)v3 = 141558275;
    v10 = v9;
    sub_1A6335774();
    *(_WORD *)(v3 + 12) = 2081;
    v4 = CLLocationCoordinate2D.id.getter();
    sub_1A61A6A1C(v4, v5, &v10);
    sub_1A6335774();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A6185000, v1, v2, "Fetching daily weather summary for location: %{private,mask.hash}s", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_0_5();
  }

  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A6334CDC();
  sub_1A61F81F8();
  v7 = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t type metadata accessor for DailySummaryService()
{
  return objc_opt_self();
}

Swift::String __swiftcall CLLocationCoordinate2D.storeKey(forCountryCode:)(Swift::String forCountryCode)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  Swift::String result;

  OUTLINED_FUNCTION_40();
  v2 = v1;
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21D210);
  v5 = OUTLINED_FUNCTION_0_4();
  *(_OWORD *)(v5 + 16) = xmmword_1A6338E40;
  OUTLINED_FUNCTION_8_25((_QWORD *)v5, MEMORY[0x1E0DEB070]);
  v6 = static Locale.languageIdentifier.getter();
  v8 = v7;
  v9 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 136) = MEMORY[0x1E0DEA968];
  v10 = sub_1A61AD1D4();
  *(_QWORD *)(v5 + 112) = v6;
  *(_QWORD *)(v5 + 120) = v8;
  *(_QWORD *)(v5 + 176) = v9;
  *(_QWORD *)(v5 + 184) = v10;
  *(_QWORD *)(v5 + 144) = v10;
  *(_QWORD *)(v5 + 152) = v4;
  *(_QWORD *)(v5 + 160) = v2;
  sub_1A6334CDC();
  v11 = sub_1A6335324();
  result._object = v12;
  result._countAndFlagsBits = v11;
  return result;
}

uint64_t sub_1A62AAEF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CLLocationCoordinate2D.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

double CLLocationCoordinate2D.init(from:)(_QWORD *a1)
{
  uint64_t v2;
  double v3;
  double v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED21A710);
  MEMORY[0x1E0C80A78](v2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A62AB040();
  sub_1A6335BDC();
  OUTLINED_FUNCTION_2_41();
  v4 = v3;
  OUTLINED_FUNCTION_2_41();
  OUTLINED_FUNCTION_5_31();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v4;
}

unint64_t sub_1A62AB040()
{
  unint64_t result;

  result = qword_1ED21A6F8;
  if (!qword_1ED21A6F8)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A6341D64, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED21A6F8);
  }
  return result;
}

uint64_t CLLocationCoordinate2D.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;

  OUTLINED_FUNCTION_40();
  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21A600);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1A62AB040();
  sub_1A6335BF4();
  v10 = 0;
  OUTLINED_FUNCTION_7_1();
  if (!v0)
  {
    v9 = 1;
    OUTLINED_FUNCTION_7_1();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1A62AB17C()
{
  return MEMORY[0x1E0DEA978];
}

uint64_t sub_1A62AB188()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_1A6335918();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_1A62AB1DC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x64757469676E6F6CLL;
  else
    return 0x656475746974616CLL;
}

void sub_1A62AB218(char *a1, char *a2)
{
  sub_1A62431BC(*a1, *a2);
}

void sub_1A62AB224()
{
  sub_1A62DE354();
}

uint64_t sub_1A62AB22C()
{
  return sub_1A61F42A8();
}

void sub_1A62AB234()
{
  sub_1A61F5E6C();
}

uint64_t sub_1A62AB23C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A62AB188();
  *a1 = result;
  return result;
}

uint64_t sub_1A62AB268@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1A62AB1DC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A62AB290()
{
  char *v0;

  return sub_1A62AB1DC(*v0);
}

uint64_t sub_1A62AB298@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A62AB1D8();
  *a1 = result;
  return result;
}

uint64_t sub_1A62AB2BC()
{
  sub_1A62AB040();
  return sub_1A6335C18();
}

uint64_t sub_1A62AB2E4()
{
  sub_1A62AB040();
  return sub_1A6335C24();
}

void sub_1A62AB30C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v4;
  uint64_t v5;

  v4 = CLLocationCoordinate2D.init(from:)(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
  }
}

uint64_t sub_1A62AB334()
{
  return CLLocationCoordinate2D.encode(to:)();
}

uint64_t _s10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A62AB398 + 4 * byte_1A6341BC9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A62AB3CC + 4 * asc_1A6341BC4[v4]))();
}

uint64_t sub_1A62AB3CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A62AB3D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A62AB3DCLL);
  return result;
}

uint64_t sub_1A62AB3E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A62AB3F0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A62AB3F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A62AB3FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10CodingKeysOMa()
{
  return &_s10CodingKeysON;
}

unint64_t sub_1A62AB41C()
{
  unint64_t result;

  result = qword_1EE8480C0;
  if (!qword_1EE8480C0)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A6341D3C, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE8480C0);
  }
  return result;
}

unint64_t sub_1A62AB45C()
{
  unint64_t result;

  result = qword_1ED21A708;
  if (!qword_1ED21A708)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A6341C74, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED21A708);
  }
  return result;
}

unint64_t sub_1A62AB49C()
{
  unint64_t result;

  result = qword_1ED21A700;
  if (!qword_1ED21A700)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A6341C9C, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED21A700);
  }
  return result;
}

uint64_t AirQualityScaleAqiGradient.stops.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*AirQualityScaleAqiGradient.stops.modify())(void)
{
  return nullsub_1;
}

uint64_t AirQualityScaleAqiGradient.init(stops:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1A62AB518(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x73706F7473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1A6335ABC();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1A62AB594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A62AB518(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A62AB5BC()
{
  sub_1A61BE314();
  return sub_1A6335C18();
}

uint64_t sub_1A62AB5E4()
{
  sub_1A61BE314();
  return sub_1A6335C24();
}

void AirQualityScaleAqiGradient.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21A168);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_36();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A61BE314();
  sub_1A6335BF4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21A130);
  sub_1A62AB6F0();
  sub_1A6335A44();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  OUTLINED_FUNCTION_1();
}

unint64_t sub_1A62AB6F0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1ED21A138;
  if (!qword_1ED21A138)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED21A130);
    v2 = sub_1A62AB754();
    result = MEMORY[0x1A85BEED0](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED21A138);
  }
  return result;
}

unint64_t sub_1A62AB754()
{
  unint64_t result;

  result = qword_1ED21A118;
  if (!qword_1ED21A118)
  {
    result = MEMORY[0x1A85BEED0](&protocol conformance descriptor for AirQualityScaleGradientStop, &type metadata for AirQualityScaleGradientStop);
    atomic_store(result, (unint64_t *)&qword_1ED21A118);
  }
  return result;
}

void sub_1A62AB790(_QWORD *a1)
{
  AirQualityScaleAqiGradient.encode(to:)(a1);
}

_QWORD *initializeBufferWithCopyOfBuffer for AirQualityScaleAqiGradient(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_1A6334CDC();
  return a1;
}

_QWORD *assignWithCopy for AirQualityScaleAqiGradient(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_1A6334CDC();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for AirQualityScaleAqiGradient(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t storeEnumTagSinglePayload for AirQualityScaleAqiGradient.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A62AB878 + 4 * byte_1A6341DC0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A62AB898 + 4 * byte_1A6341DC5[v4]))();
}

_BYTE *sub_1A62AB878(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A62AB898(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A62AB8A0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A62AB8A8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A62AB8B0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A62AB8B8(_DWORD *result)
{
  *result = 0;
  return result;
}

unint64_t sub_1A62AB8C8()
{
  unint64_t result;

  result = qword_1EE8480C8;
  if (!qword_1EE8480C8)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A6341ED8, &type metadata for AirQualityScaleAqiGradient.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8480C8);
  }
  return result;
}

double static CubicInterpolationMath.cubicInterpolate(ax:ay:bx:by:cx:cy:dx:dy:x:)(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  double v19;
  double v20;
  double v21;
  double v22;

  v19 = sub_1A62ABDA0(a1, a2, a3, a4, a5, a6, a7, a8);
  return v22 + (a9 - a3) / (a5 - a3) * (v21 + (a9 - a3) / (a5 - a3) * (v20 + (a9 - a3) / (a5 - a3) * v19));
}

void static CubicInterpolationMath.cubicMonotoneInterpolate(ax:ay:bx:by:cx:cy:dx:dy:x:)(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  double v23;
  double v24;
  double v25;
  double v27;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;

  v23 = sub_1A62ABE5C(a5, a6, a1, a2, a3, a4);
  v24 = a3 - a1;
  v25 = v23;
  if (a3 - a1 != 0.0)
    v25 = ((a4 - a2) * 3.0 / v24 - v23) * 0.5;
  if (a1 > a3)
  {
    __break(1u);
  }
  else
  {
    if (a1 <= a9 && a9 < a3)
    {
      v31 = v24 / 3.0 + a1;
      v32 = v24 / 3.0 * v25 + a2;
      v33 = a3 - v24 / 3.0;
      v34 = a4 - v24 / 3.0 * v23;
      v35 = (a9 - a1) / v24;
      v36 = a1;
      v37 = a2;
      v38 = a3;
LABEL_18:
      sub_1A62ABEE4(v35, v36, v37, v31, v32, v33, v34, v38);
      return;
    }
    v27 = sub_1A62ABE5C(a7, a8, a3, a4, a5, a6);
    if (a3 <= a5)
    {
      if (a3 <= a9 && a9 < a5)
      {
        v39 = (a5 - a3) / 3.0;
        v31 = v39 + a3;
        v32 = v39 * v23 + a4;
        v33 = a5 - v39;
        v34 = a6 - v39 * v27;
        v35 = (a9 - a3) / (a5 - a3);
        v36 = a3;
        v37 = a4;
        v38 = a5;
      }
      else
      {
        v29 = a7 - a5;
        v30 = v27;
        if (a7 - a5 != 0.0)
          v30 = ((a8 - a6) * 3.0 / v29 - v27) * 0.5;
        v31 = v29 / 3.0 + a5;
        v32 = v29 / 3.0 * v27 + a6;
        v33 = a7 - v29 / 3.0;
        v34 = a8 - v29 / 3.0 * v30;
        v35 = (a9 - a5) / v29;
        v36 = a5;
        v37 = a6;
        v38 = a7;
      }
      goto LABEL_18;
    }
  }
  __break(1u);
}

void static CubicInterpolationMath.cubicExtrema(ax:ay:bx:by:cx:cy:dx:dy:x1:x2:useMonotone:)(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>, double a10@<D3>, double a11@<D4>, double a12@<D5>, double a13@<D6>, double a14@<D7>)
{
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  BOOL v36;
  uint64_t v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  double v44;
  double v45;
  double v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  double v50;
  double v51;
  double v52;

  if ((a2 & 1) != 0)
    a1 = a9;
  if ((a4 & 1) != 0)
    a3 = a11;
  v25 = sub_1A62ABDA0(a7, a8, a9, a10, a11, a12, a13, a14);
  v26 = (a1 - a9) / (a11 - a9);
  v27 = (a3 - a9) / (a11 - a9);
  if (v24 + v27 * (v23 + v27 * (v22 + v27 * v25)) >= v24 + v26 * (v23 + v26 * (v22 + v26 * v25)))
    v28 = v24 + v26 * (v23 + v26 * (v22 + v26 * v25));
  else
    v28 = v24 + v27 * (v23 + v27 * (v22 + v27 * v25));
  if (v25 == 0.0)
  {
    v29 = -v23 / (v22 + v22);
    if (v26 >= v29 || v29 >= v27)
      goto LABEL_33;
    v31 = v22 * v29;
  }
  else
  {
    v32 = v25 * 3.0;
    v33 = v22 * v22 - v23 * (v25 * 3.0);
    if (v33 <= 0.0)
      goto LABEL_33;
    v34 = sqrt(v33);
    v35 = (-v22 - v34) / v32;
    v29 = (v34 - v22) / v32;
    v36 = v26 < v35 && v35 < v27;
    if (v36 && v24 + v35 * (v23 + v35 * (v22 + v25 * v35)) < v28)
      v28 = v24 + v35 * (v23 + v35 * (v22 + v25 * v35));
    if (v26 >= v29 || v29 >= v27)
      goto LABEL_33;
    v31 = v29 * (v22 + v25 * v29);
  }
  if (v24 + v29 * (v23 + v31) < v28)
  {
    OUTLINED_FUNCTION_0_54();
    v42 = v41;
    v44 = v43;
    goto LABEL_34;
  }
LABEL_33:
  OUTLINED_FUNCTION_0_54();
LABEL_34:
  v45 = v44 * v39 + (1.0 - v44) * a9;
  v46 = v40 * v39 + (1.0 - v40) * a9;
  if ((a5 & 1) != 0)
  {
    v48 = v39;
    v50 = v44 * v39 + (1.0 - v44) * a9;
    v51 = v44;
    v52 = v40;
    static CubicInterpolationMath.cubicMonotoneInterpolate(ax:ay:bx:by:cx:cy:dx:dy:x:)(a7, a8, a9, a3, v39, a10, a1, a12, v50);
    v49 = v47;
    static CubicInterpolationMath.cubicMonotoneInterpolate(ax:ay:bx:by:cx:cy:dx:dy:x:)(a7, a8, a9, a3, v48, a10, a1, a12, v46);
    v42 = v49;
    v45 = v50;
    v44 = v51;
    v40 = v52;
  }
  *(double *)a6 = v40;
  *(double *)(a6 + 8) = v46;
  *(_QWORD *)(a6 + 16) = v38;
  *(double *)(a6 + 24) = v44;
  *(double *)(a6 + 32) = v45;
  *(_QWORD *)(a6 + 40) = v42;
}

double sub_1A62ABDA0(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  double v8;
  double v9;
  double v10;

  v8 = a6 - a4;
  v9 = 0.0;
  if (((~*(_QWORD *)&a1 & 0x7FF0000000000000) != 0 || (*(_QWORD *)&a1 & 0xFFFFFFFFFFFFFLL) == 0)
    && ((~*(_QWORD *)&a2 & 0x7FF0000000000000) != 0 || (*(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL) == 0))
  {
    v9 = ((a4 - a2) * (a5 - a3) / (a3 - a1) - v8) * 0.5;
  }
  v10 = 0.0;
  if (((~*(_QWORD *)&a7 & 0x7FF0000000000000) != 0 || (*(_QWORD *)&a7 & 0xFFFFFFFFFFFFFLL) == 0)
    && ((~*(_QWORD *)&a8 & 0x7FF0000000000000) != 0 || (*(_QWORD *)&a8 & 0xFFFFFFFFFFFFFLL) == 0))
  {
    v10 = ((a5 - a3) * (a8 - a6) / (a7 - a5) - v8) * 0.5;
  }
  return v9 + v10;
}

double sub_1A62ABE5C(double a1, double a2, double a3, double a4, double a5, double a6)
{
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;

  v6 = a5 - a3;
  if (v6 == 0.0)
    v7 = 0.0;
  else
    v7 = v6;
  v8 = a1 - a5;
  v9 = (a6 - a4) / v7;
  if (v8 == 0.0)
    v10 = 0.0;
  else
    v10 = v8;
  v11 = (a2 - a6) / v10;
  v12 = 1.0;
  if (v9 >= 0.0)
    v13 = 1.0;
  else
    v13 = -1.0;
  if (v11 < 0.0)
    v12 = -1.0;
  v14 = (v8 * v9 + v6 * v11) / (v6 + v8);
  v15 = fabs(v9);
  v16 = fabs(v11);
  if (v16 >= v15)
    v16 = v15;
  v17 = fabs(v14) * 0.5;
  if (v17 >= v16)
    v17 = v16;
  return v17 * (v12 + v13);
}

double sub_1A62ABEE4(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  return (3.0 - a1 * 3.0) * a1 * a1 * a6
       + (((3.0 - a1) * a1 + -3.0) * a1 + 1.0) * a2
       + ((a1 * 3.0 + -6.0) * a1 + 3.0) * a1 * a4
       + a1 * a1 * a1 * a8;
}

ValueMetadata *type metadata accessor for CubicInterpolationMath()
{
  return &type metadata for CubicInterpolationMath;
}

void static CurrentWeatherDescriptor.name.getter()
{
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_53();
}

void static CurrentWeatherDescriptor.name.setter()
{
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_1_8();
}

uint64_t (*static CurrentWeatherDescriptor.name.modify())()
{
  OUTLINED_FUNCTION_0_11();
  return j__swift_endAccess;
}

uint64_t sub_1A62AC038()
{
  uint64_t result;

  sub_1A6334CDC();
  sub_1A63353F0();
  result = swift_bridgeObjectRelease();
  qword_1ED21C3C0 = 0x2E312E312E30;
  *(_QWORD *)algn_1ED21C3C8 = 0xE600000000000000;
  return result;
}

void static CurrentWeatherDescriptor.version.getter()
{
  if (qword_1ED21C3D0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_53();
}

void static CurrentWeatherDescriptor.version.setter()
{
  if (qword_1ED21C3D0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_1_8();
}

uint64_t (*static CurrentWeatherDescriptor.version.modify())()
{
  if (qword_1ED21C3D0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_11();
  return j_j__swift_endAccess;
}

ValueMetadata *type metadata accessor for CurrentWeatherDescriptor()
{
  return &type metadata for CurrentWeatherDescriptor;
}

uint64_t WDSAuthenticator.init(signer:)(uint64_t a1)
{
  return sub_1A61BFEE4(a1, (uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))sub_1A61BFE94);
}

void WDSAuthenticator.__allocating_init(signatureRoundingInterval:)(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (_QWORD *)swift_allocObject();
  v3 = type metadata accessor for WDSHMACSigner();
  OUTLINED_FUNCTION_3_0();
  WDSHMACSigner.init(signatureRoundingInterval:)(a1);
  v2[5] = v3;
  v2[6] = &protocol witness table for WDSHMACSigner;
  v2[2] = v4;
  OUTLINED_FUNCTION_3_1();
}

void WDSAuthenticator.init(signatureRoundingInterval:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;

  v2 = v1;
  v4 = type metadata accessor for WDSHMACSigner();
  OUTLINED_FUNCTION_3_0();
  WDSHMACSigner.init(signatureRoundingInterval:)(a1);
  v2[5] = v4;
  v2[6] = &protocol witness table for WDSHMACSigner;
  v2[2] = v5;
  OUTLINED_FUNCTION_3_1();
}

uint64_t WDSAuthenticator.createSignature(with:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[5];
  v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
}

uint64_t WDSAuthenticator.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t WDSAuthenticator.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t WDSAuthenticator.sign(request:session:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21B868);
  swift_allocObject();
  return sub_1A6334E8C();
}

void sub_1A62AC3B0(void (*a1)(char *), uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _BYTE *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  _QWORD *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v47 = a6;
  v42 = a2;
  v43 = a1;
  v9 = sub_1A6332810();
  v45 = *(_QWORD *)(v9 - 8);
  v46 = v9;
  MEMORY[0x1E0C80A78](v9);
  v44 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for WDSAuthenticationContext();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED21DA40);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1A6332A98();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A63327E0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17) == 1)
  {
    sub_1A625AE94((uint64_t)v16);
    sub_1A62AC798();
    v21 = swift_allocError();
    *v22 = 3;
    a3();
    v23 = (void *)v21;
  }
  else
  {
    v41 = a4;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    v24 = sub_1A6332798();
    if (v25)
    {
      v26 = v24;
      v27 = v25;
      sub_1A6332C18();
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(&v13[v11[6]], v20, v17);
      *(_QWORD *)v13 = 0xD00000000000002CLL;
      *((_QWORD *)v13 + 1) = 0x80000001A6349850;
      v28 = (uint64_t *)&v13[v11[7]];
      *v28 = v26;
      v28[1] = v27;
      v29 = &v13[v11[8]];
      *(_QWORD *)v29 = 0x79654B697061;
      *((_QWORD *)v29 + 1) = 0xE600000000000000;
      v30 = v47[5];
      v31 = v47[6];
      __swift_project_boxed_opaque_existential_1(v47 + 2, v30);
      (*(void (**)(uint64_t *__return_ptr, char *, uint64_t, uint64_t))(v31 + 8))(&v48, v13, v30, v31);
      v34 = v49;
      v47 = v49;
      v36 = v50;
      v35 = v51;
      v37 = v53;
      v40 = v52;
      v41 = v48;
      v38 = v44;
      (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v44, a5, v46);
      v48 = v41;
      v49 = v34;
      v50 = v36;
      v51 = v35;
      v52 = v40;
      v53 = v37;
      WDSSignature.header.getter();
      sub_1A63327EC();
      swift_bridgeObjectRelease();
      v43(v38);
      swift_bridgeObjectRelease();
      sub_1A61A68B8(v36, v35);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v38, v46);
      sub_1A62AC7D4((uint64_t)v13);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      return;
    }
    sub_1A62AC798();
    v32 = swift_allocError();
    *v33 = 2;
    a3();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    v23 = (void *)v32;
  }

}

uint64_t sub_1A62AC754()
{
  return WDSAuthenticator.sign(request:session:)();
}

void sub_1A62AC774(void (*a1)(char *), uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v4;

  sub_1A62AC3B0(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD **)(v4 + 24));
}

uint64_t method lookup function for WDSAuthenticator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WDSAuthenticator.__allocating_init(signer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of WDSAuthenticator.__allocating_init(signatureRoundingInterval:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

unint64_t sub_1A62AC798()
{
  unint64_t result;

  result = qword_1EE8480E0;
  if (!qword_1EE8480E0)
  {
    result = MEMORY[0x1A85BEED0](&unk_1A6342088, &type metadata for WDSAuthenticator.Error);
    atomic_store(result, (unint64_t *)&qword_1EE8480E0);
  }
  return result;
}

