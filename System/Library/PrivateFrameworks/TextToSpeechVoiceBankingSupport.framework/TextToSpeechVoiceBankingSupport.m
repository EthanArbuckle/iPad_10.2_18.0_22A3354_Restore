void sub_2486E8BE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getSiriTTSTrainerTaskClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;

  if (!SiriTTSTrainingLibraryCore_frameworkLibrary)
  {
    SiriTTSTrainingLibraryCore_frameworkLibrary = _sl_dlopen();
    if (!SiriTTSTrainingLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_6;
    }
  }
  while (1)
  {
    result = objc_getClass("SiriTTSTrainerTask");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
      break;
LABEL_6:
    v3 = (void *)__getSiriTTSTrainerTaskClass_block_invoke_cold_1();
    free(v3);
  }
  getSiriTTSTrainerTaskClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

id LogTTSVBTrain()
{
  if (LogTTSVBTrain_onceToken != -1)
    dispatch_once(&LogTTSVBTrain_onceToken, &__block_literal_global_0);
  return (id)LogTTSVBTrain__logObj;
}

id LogTTSVBSiri()
{
  if (LogTTSVBSiri_onceToken != -1)
    dispatch_once(&LogTTSVBSiri_onceToken, &__block_literal_global_2);
  return (id)LogTTSVBSiri__logObj;
}

uint64_t TTSVBProcessIsVoicebankingd()
{
  if (TTSVBProcessIsVoicebankingd_Once != -1)
    dispatch_once(&TTSVBProcessIsVoicebankingd_Once, &__block_literal_global_4);
  return TTSVBProcessIsVoicebankingd__TTSVBProcessIsVoicebankingd;
}

id TTSVBSupportBundle()
{
  void *v0;
  uint64_t v1;
  void *v2;

  v0 = (void *)TTSVBSupportBundle__ttsVBSupportBundle;
  if (!TTSVBSupportBundle__ttsVBSupportBundle)
  {
    objc_msgSend(MEMORY[0x24BDD1488], "bundleWithIdentifier:", CFSTR("com.apple.TextToSpeechVoiceBankingSupport"));
    v1 = objc_claimAutoreleasedReturnValue();
    v2 = (void *)TTSVBSupportBundle__ttsVBSupportBundle;
    TTSVBSupportBundle__ttsVBSupportBundle = v1;

    v0 = (void *)TTSVBSupportBundle__ttsVBSupportBundle;
  }
  return v0;
}

id TTSVBSupportLocString(void *a1)
{
  id v1;
  uint64_t Type;
  const __CFString *v3;
  const __CFString *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v1 = a1;
  Type = AXDeviceGetType();
  v3 = CFSTR("_MAC");
  if (Type == 3)
    v3 = CFSTR("_IPAD");
  if (Type == 1)
    v4 = CFSTR("_IPHONE");
  else
    v4 = v3;
  objc_msgSend(v1, "stringByAppendingString:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  TTSVBSupportBundle();
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "localizedStringForKey:value:table:", v5, &stru_251997C58, CFSTR("VoiceBankingSupport"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if ((objc_msgSend(v7, "isEqualToString:", v5) & 1) != 0)
  {
    TTSVBSupportBundle();
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "localizedStringForKey:value:table:", v1, &stru_251997C58, CFSTR("VoiceBankingSupport"));
    v9 = (id)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v9 = v7;
  }

  return v9;
}

uint64_t TTSVBIsInternalUIBuild()
{
  return os_variant_has_internal_ui();
}

BOOL TTSVBIsDeviceLocked()
{
  return MKBGetDeviceLockState() - 1 < 2;
}

BOOL TTSVBHasDeviceBeenUnlockedSinceBoot()
{
  return MKBDeviceUnlockedSinceBoot() != 0;
}

void TTSVBRegisterForFirstUnlockSinceBoot(void *a1)
{
  id v1;
  NSObject *v2;
  id v3;
  _QWORD v4[4];
  id v5;
  int out_token;

  v1 = a1;
  out_token = 0;
  dispatch_get_global_queue(0, 0);
  v2 = objc_claimAutoreleasedReturnValue();
  v4[0] = MEMORY[0x24BDAC760];
  v4[1] = 3221225472;
  v4[2] = __TTSVBRegisterForFirstUnlockSinceBoot_block_invoke;
  v4[3] = &unk_25198E510;
  v5 = v1;
  v3 = v1;
  notify_register_dispatch("com.apple.mobile.keybagd.first_unlock", &out_token, v2, v4);

}

uint64_t TTSVBSiriTTSTrainerTaskModeForString(void *a1)
{
  void *v1;
  int v2;

  objc_msgSend(a1, "lowercaseString");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "isEqualToString:", CFSTR("partial"));

  return v2 ^ 1u;
}

const __CFString *TTSVBSiriTTSTrainerTaskModeStringForMode(uint64_t a1)
{
  if (a1)
    return CFSTR("full");
  else
    return CFSTR("partial");
}

const __CFString *TTSVBSiriTTSTrainerTaskStatusDescription(unint64_t a1)
{
  if (a1 > 7)
    return CFSTR("Unknown");
  else
    return *(&off_25198E548 + a1);
}

void sub_2486E94AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getSiriTTSTrainerTaskClass_block_invoke_0(uint64_t a1)
{
  Class result;
  void *v3;

  if (!SiriTTSTrainingLibraryCore_frameworkLibrary_0)
  {
    SiriTTSTrainingLibraryCore_frameworkLibrary_0 = _sl_dlopen();
    if (!SiriTTSTrainingLibraryCore_frameworkLibrary_0)
    {
      abort_report_np();
      goto LABEL_6;
    }
  }
  while (1)
  {
    result = objc_getClass("SiriTTSTrainerTask");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
      break;
LABEL_6:
    v3 = (void *)__getSiriTTSTrainerTaskClass_block_invoke_cold_1();
    free(v3);
  }
  getSiriTTSTrainerTaskClass_softClass_0 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_2486E9A50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getSiriTTSTrainerAudioQualityHelperClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;

  if (!SiriTTSTrainingLibraryCore_frameworkLibrary_1)
  {
    SiriTTSTrainingLibraryCore_frameworkLibrary_1 = _sl_dlopen();
    if (!SiriTTSTrainingLibraryCore_frameworkLibrary_1)
    {
      abort_report_np();
      goto LABEL_6;
    }
  }
  while (1)
  {
    result = objc_getClass("SiriTTSTrainerAudioQualityHelper");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
      break;
LABEL_6:
    v3 = (void *)__getSiriTTSTrainerAudioQualityHelperClass_block_invoke_cold_1();
    free(v3);
  }
  getSiriTTSTrainerAudioQualityHelperClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_2486E9E44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getSiriTTSTrainerSessionClass_block_invoke(uint64_t a1)
{
  Class result;

  if (!SiriTTSTrainingLibraryCore_frameworkLibrary_2)
  {
    SiriTTSTrainingLibraryCore_frameworkLibrary_2 = _sl_dlopen();
    if (!SiriTTSTrainingLibraryCore_frameworkLibrary_2)
    {
      abort_report_np();
LABEL_6:
      __getSiriTTSTrainerSessionClass_block_invoke_cold_1();
    }
  }
  result = objc_getClass("SiriTTSTrainerSession");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    goto LABEL_6;
  getSiriTTSTrainerSessionClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void TTSVBPath.url.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD v14[18];

  v14[12] = a1;
  v2 = type metadata accessor for TTSVBVoiceModel();
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for TTSVBPath();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v14[11] = (char *)v14 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  sub_2486ED99C(v1, (uint64_t)v14 - v12);
  v13 = (char *)sub_2486EC364 + 4 * word_2487B7160[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2486EC364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int16 *v4;
  __int16 v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE v22[80];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C180);
  *(_QWORD *)(v2 - 168) = *(_QWORD *)(v0 + *(int *)(v3 + 48));
  v4 = (__int16 *)(v0 + *(int *)(v3 + 64));
  v5 = *v4;
  v6 = (void *)*((_QWORD *)v4 + 1);
  v7 = sub_2487B5228();
  *(_QWORD *)(v2 - 144) = v22;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 32))(v10, v0, v7);
  swift_storeEnumTagMultiPayload();
  v11 = sub_2487B50CC();
  *(_QWORD *)(v2 - 136) = v22;
  *(_QWORD *)(v2 - 160) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v2 - 152) = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  ((void (*)(uint64_t))TTSVBPath.url.getter)(v12);
  sub_2486EDA68(v1, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBPath);
  *(_QWORD *)(v2 - 96) = 0;
  *(_QWORD *)(v2 - 88) = 0xE000000000000000;
  sub_2487B5AA4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 - 96) = 0x6E6964726F636552;
  *(_QWORD *)(v2 - 88) = 0xEA00000000005F67;
  sub_2487B51EC();
  sub_2487B55AC();
  swift_bridgeObjectRelease();
  sub_2487B55AC();
  sub_2487B55AC();
  swift_bridgeObjectRelease();
  sub_2487B55AC();
  *(_WORD *)(v2 - 112) = v5;
  *(_QWORD *)(v2 - 104) = v6;
  v15 = v6;
  TTSVBAudioDescriptor.fileExtension.getter();
  sub_2487B55AC();
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v2 - 88);
  *(_QWORD *)(v2 - 96) = *(_QWORD *)(v2 - 96);
  *(_QWORD *)(v2 - 88) = v16;
  v17 = sub_2487B4FE8();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = &v22[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x24BDCD7A8], v17);
  sub_2486ED9E0();
  sub_2487B50C0();

  (*(void (**)(_BYTE *, uint64_t))(v18 + 8))(v20, v17);
  swift_bridgeObjectRelease();
  (*(void (**)(_BYTE *, _QWORD))(*(_QWORD *)(v2 - 160) + 8))(v14, *(_QWORD *)(v2 - 152));
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_2486ED628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  v9 = sub_2487B50CC();
  MEMORY[0x24BDAC7A8](v9);
  static TTSVBPath.requireGroupContainerURL()((uint64_t)&a9 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  JUMPOUT(0x2486ED684);
}

uint64_t static TTSVBPath.requireGroupContainerURL()@<X0>(uint64_t a1@<X8>)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[2];

  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v3 = (void *)sub_2487B5504();
  v4 = objc_msgSend(v2, sel_containerURLForSecurityApplicationGroupIdentifier_, v3);

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v4)
  {
    v8 = sub_2487B50CC();
    v9 = *(_QWORD *)(v8 - 8);
    MEMORY[0x24BDAC7A8](v8);
    v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2487B509C();

    v12 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v12(v7, v11, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v12)(a1, v7, v8);
  }
  else
  {
    v14 = sub_2487B50CC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 1, 1, v14);
  }
  sub_2486EDAE4((uint64_t)v7);
  type metadata accessor for TTSVBError(0);
  sub_2486EDB24();
  swift_allocError();
  TTSVBError.init(_:_:_:)(0xD00000000000002FLL, 0x80000002487C2490, 0, 0, 0, v15);
  return swift_willThrow();
}

uint64_t type metadata accessor for TTSVBPath()
{
  uint64_t result;

  result = qword_25445F990;
  if (!qword_25445F990)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2486ED99C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTSVBPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2486ED9E0()
{
  unint64_t result;

  result = qword_25445F110;
  if (!qword_25445F110)
  {
    result = MEMORY[0x24959AEB4](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_25445F110);
  }
  return result;
}

uint64_t sub_2486EDA24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTSVBVoiceModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2486EDA68(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24959AE9C]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_2486EDAE4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2486EDB24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25445ED48;
  if (!qword_25445ED48)
  {
    v1 = type metadata accessor for TTSVBError(255);
    result = MEMORY[0x24959AEB4](&protocol conformance descriptor for TTSVBError, v1);
    atomic_store(result, (unint64_t *)&qword_25445ED48);
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> TTSVBPath.markAsExcludedFromBackup()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD v23[2];
  uint8_t *v24;
  uint64_t v25;
  NSObject *v26;
  int v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32[5];

  v1 = sub_2487B533C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2487B50CC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTSVBPath.url.getter((uint64_t)v8);
  v9 = sub_2487B506C();
  if (v0 || (v9 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    v30 = sub_2487B4F40();
    v31 = v23;
    v29 = *(_QWORD *)(v30 - 8);
    MEMORY[0x24BDAC7A8](v30);
    v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2487B4F34();
    v28 = v11;
    sub_2487B4F10();
    v12 = sub_2487B0B90();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v12, v1);
    v13 = sub_2487B5324();
    v14 = sub_2487B57E0();
    v27 = v14;
    if (os_log_type_enabled(v13, v14))
    {
      v26 = v13;
      v15 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v32[0] = v25;
      *(_DWORD *)v15 = 136315138;
      v23[1] = v15 + 4;
      v24 = v15;
      swift_beginAccess();
      v16 = sub_2487B50B4();
      v32[4] = sub_2486EDE5C(v16, v17, v32);
      sub_2487B593C();
      swift_bridgeObjectRelease();
      v18 = v24;
      _os_log_impl(&dword_2486E6000, v26, (os_log_type_t)v27, "Marking path as excluded from backups: %s", v24, 0xCu);
      v19 = v25;
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v19, -1, -1);
      MEMORY[0x24959AF80](v18, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v21 = v29;
    v20 = v30;
    v22 = v28;
    swift_beginAccess();
    sub_2487B5024();
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v20);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_2486EDE5C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_2486EDF2C(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_2486F0814((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_2486F0814((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_2486EDF2C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_2487B5948();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_2486EE0E4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_2487B5AF8();
  if (!v8)
  {
    sub_2487B5B4C();
    __break(1u);
LABEL_17:
    result = sub_2487B5B94();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_2486EE0E4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_2486EE178(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_2486EE350(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_2486EE350(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_2486EE178(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_2486EE2EC(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_2487B5AB0();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_2487B5B4C();
      __break(1u);
LABEL_10:
      v2 = sub_2487B55C4();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_2487B5B94();
    __break(1u);
LABEL_14:
    result = sub_2487B5B4C();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_2486EE2EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1C0);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_2486EE350(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1C0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_2487B5B94();
  __break(1u);
  return result;
}

char *initializeBufferWithCopyOfBuffer for TTSVBPath(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(char *, uint64_t, uint64_t);
  const void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  unsigned int (*v101)(char *, uint64_t, uint64_t);
  uint64_t v102;
  void (*v103)(char *, char *, uint64_t);
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;
  uint64_t v109;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v19 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v19 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 4u:
        v7 = sub_2487B5228();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C180);
        v9 = *(int *)(v8 + 48);
        v10 = &a1[v9];
        v11 = (uint64_t *)&a2[v9];
        v13 = *v11;
        v12 = v11[1];
        *(_QWORD *)v10 = v13;
        *((_QWORD *)v10 + 1) = v12;
        v14 = *(int *)(v8 + 64);
        v15 = &a1[v14];
        v16 = &a2[v14];
        *(_WORD *)v15 = *(_WORD *)v16;
        v17 = (void *)*((_QWORD *)v16 + 1);
        *((_QWORD *)v15 + 1) = v17;
        swift_bridgeObjectRetain();
        v18 = v17;
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
      case 3u:
      case 5u:
      case 7u:
      case 8u:
        v102 = sub_2487B5228();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(a1, a2, v102);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        v21 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v21;
        v22 = (int *)type metadata accessor for TTSVBVoiceModel();
        v23 = v22[5];
        v24 = &a1[v23];
        v25 = &a2[v23];
        v26 = sub_2487B5228();
        v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
        swift_bridgeObjectRetain();
        v27(v24, v25, v26);
        v27(&a1[v22[6]], &a2[v22[6]], v26);
        v28 = v22[7];
        v29 = &a1[v28];
        v30 = &a2[v28];
        v109 = sub_2487B51D4();
        v31 = *(_QWORD *)(v109 - 8);
        v103 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
        v103(v29, v30, v109);
        v32 = v22[8];
        v33 = &a1[v32];
        v34 = &a2[v32];
        v35 = *((_QWORD *)v34 + 1);
        *(_QWORD *)v33 = *(_QWORD *)v34;
        *((_QWORD *)v33 + 1) = v35;
        v36 = v22[9];
        v37 = &a1[v36];
        v38 = &a2[v36];
        v106 = *((_QWORD *)v38 + 1);
        *(_QWORD *)v37 = *(_QWORD *)v38;
        *((_QWORD *)v37 + 1) = v106;
        v39 = v22[10];
        v40 = &a1[v39];
        v41 = &a2[v39];
        v42 = *((_QWORD *)v41 + 1);
        *(_QWORD *)v40 = *(_QWORD *)v41;
        *((_QWORD *)v40 + 1) = v42;
        v43 = v22[11];
        v44 = &a1[v43];
        v45 = &a2[v43];
        v46 = *((_QWORD *)v45 + 1);
        *(_QWORD *)v44 = *(_QWORD *)v45;
        *((_QWORD *)v44 + 1) = v46;
        v47 = v22[12];
        v48 = &a1[v47];
        v49 = &a2[v47];
        v50 = *((_QWORD *)v49 + 1);
        *(_QWORD *)v48 = *(_QWORD *)v49;
        *((_QWORD *)v48 + 1) = v50;
        *(_QWORD *)&a1[v22[13]] = *(_QWORD *)&a2[v22[13]];
        v51 = v22[14];
        v52 = &a1[v51];
        v53 = &a2[v51];
        v54 = *((_QWORD *)v53 + 1);
        *(_QWORD *)v52 = *(_QWORD *)v53;
        *((_QWORD *)v52 + 1) = v54;
        *(_QWORD *)&a1[v22[15]] = *(_QWORD *)&a2[v22[15]];
        *(_QWORD *)&a1[v22[16]] = *(_QWORD *)&a2[v22[16]];
        v55 = v22[17];
        v56 = &a1[v55];
        v57 = &a2[v55];
        v58 = *((_QWORD *)v57 + 1);
        *(_QWORD *)v56 = *(_QWORD *)v57;
        *((_QWORD *)v56 + 1) = v58;
        v59 = v22[18];
        __dst = &a1[v59];
        v104 = v31;
        v105 = &a2[v59];
        v60 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v61 = v105;
        swift_bridgeObjectRetain();
        if (!v60(v105, 1, v109))
          goto LABEL_12;
        goto LABEL_8;
      case 6u:
        v63 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v63;
        v22 = (int *)type metadata accessor for TTSVBVoiceModel();
        v64 = v22[5];
        v65 = &a1[v64];
        v66 = &a2[v64];
        v67 = sub_2487B5228();
        v68 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16);
        swift_bridgeObjectRetain();
        v68(v65, v66, v67);
        v68(&a1[v22[6]], &a2[v22[6]], v67);
        v69 = v22[7];
        v70 = &a1[v69];
        v71 = &a2[v69];
        v109 = sub_2487B51D4();
        v72 = *(_QWORD *)(v109 - 8);
        v103 = *(void (**)(char *, char *, uint64_t))(v72 + 16);
        v103(v70, v71, v109);
        v73 = v22[8];
        v74 = &a1[v73];
        v75 = &a2[v73];
        v76 = *((_QWORD *)v75 + 1);
        *(_QWORD *)v74 = *(_QWORD *)v75;
        *((_QWORD *)v74 + 1) = v76;
        v77 = v22[9];
        v78 = &a1[v77];
        v79 = &a2[v77];
        v107 = *((_QWORD *)v79 + 1);
        *(_QWORD *)v78 = *(_QWORD *)v79;
        *((_QWORD *)v78 + 1) = v107;
        v80 = v22[10];
        v81 = &a1[v80];
        v82 = &a2[v80];
        v83 = *((_QWORD *)v82 + 1);
        *(_QWORD *)v81 = *(_QWORD *)v82;
        *((_QWORD *)v81 + 1) = v83;
        v84 = v22[11];
        v85 = &a1[v84];
        v86 = &a2[v84];
        v87 = *((_QWORD *)v86 + 1);
        *(_QWORD *)v85 = *(_QWORD *)v86;
        *((_QWORD *)v85 + 1) = v87;
        v88 = v22[12];
        v89 = &a1[v88];
        v90 = &a2[v88];
        v91 = *((_QWORD *)v90 + 1);
        *(_QWORD *)v89 = *(_QWORD *)v90;
        *((_QWORD *)v89 + 1) = v91;
        *(_QWORD *)&a1[v22[13]] = *(_QWORD *)&a2[v22[13]];
        v92 = v22[14];
        v93 = &a1[v92];
        v94 = &a2[v92];
        v95 = *((_QWORD *)v94 + 1);
        *(_QWORD *)v93 = *(_QWORD *)v94;
        *((_QWORD *)v93 + 1) = v95;
        *(_QWORD *)&a1[v22[15]] = *(_QWORD *)&a2[v22[15]];
        *(_QWORD *)&a1[v22[16]] = *(_QWORD *)&a2[v22[16]];
        v96 = v22[17];
        v97 = &a1[v96];
        v98 = &a2[v96];
        v99 = *((_QWORD *)v98 + 1);
        *(_QWORD *)v97 = *(_QWORD *)v98;
        *((_QWORD *)v97 + 1) = v99;
        v100 = v22[18];
        __dst = &a1[v100];
        v104 = v72;
        v105 = &a2[v100];
        v101 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v61 = v105;
        swift_bridgeObjectRetain();
        if (v101(v105, 1, v109))
        {
LABEL_8:
          v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
          memcpy(__dst, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
LABEL_12:
          v103(__dst, v105, v109);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v104 + 56))(__dst, 0, 1, v109);
        }
        a1[v22[19]] = a2[v22[19]];
        *(_DWORD *)&a1[v22[20]] = *(_DWORD *)&a2[v22[20]];
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void destroy for TTSVBPath(uint64_t a1)
{
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 4u:
      v5 = sub_2487B5228();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
      v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C180);
      swift_bridgeObjectRelease();

      break;
    case 1u:
    case 3u:
    case 5u:
    case 7u:
    case 8u:
      v2 = sub_2487B5228();
      v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
      v4 = a1;
      goto LABEL_3;
    case 2u:
    case 6u:
      swift_bridgeObjectRelease();
      v7 = (int *)type metadata accessor for TTSVBVoiceModel();
      v8 = a1 + v7[5];
      v9 = sub_2487B5228();
      v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
      v10(v8, v9);
      v10(a1 + v7[6], v9);
      v11 = a1 + v7[7];
      v12 = sub_2487B51D4();
      v13 = *(_QWORD *)(v12 - 8);
      v15 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
      v15(v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = a1 + v7[18];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v14, 1, v12))
      {
        v4 = v14;
        v2 = v12;
        v3 = v15;
LABEL_3:
        v3(v4, v2);
      }
      break;
    default:
      return;
  }
}

char *initializeWithCopy for TTSVBPath(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  void *v16;
  id v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  unsigned int (*v98)(char *, uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  void (*v102)(char *, char *, uint64_t);
  void (*v103)(char *, char *, uint64_t);
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *__dst;
  char *__dsta;
  uint64_t v112;
  uint64_t v113;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 4u:
      v6 = sub_2487B5228();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C180);
      v8 = *(int *)(v7 + 48);
      v9 = &a1[v8];
      v10 = (uint64_t *)&a2[v8];
      v12 = *v10;
      v11 = v10[1];
      *(_QWORD *)v9 = v12;
      *((_QWORD *)v9 + 1) = v11;
      v13 = *(int *)(v7 + 64);
      v14 = &a1[v13];
      v15 = &a2[v13];
      *(_WORD *)v14 = *(_WORD *)v15;
      v16 = (void *)*((_QWORD *)v15 + 1);
      *((_QWORD *)v14 + 1) = v16;
      swift_bridgeObjectRetain();
      v17 = v16;
      goto LABEL_13;
    case 1u:
    case 3u:
    case 5u:
    case 7u:
    case 8u:
      v100 = sub_2487B5228();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(a1, a2, v100);
      goto LABEL_13;
    case 2u:
      v18 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v18;
      v19 = (int *)type metadata accessor for TTSVBVoiceModel();
      v20 = v19[5];
      v21 = &a1[v20];
      v22 = &a2[v20];
      v23 = sub_2487B5228();
      v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      v24(v21, v22, v23);
      v24(&a1[v19[6]], &a2[v19[6]], v23);
      v25 = v19[7];
      v26 = &a1[v25];
      v27 = &a2[v25];
      v112 = sub_2487B51D4();
      v28 = *(_QWORD *)(v112 - 8);
      v102 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
      v102(v26, v27, v112);
      v29 = v19[8];
      v30 = &a1[v29];
      v31 = &a2[v29];
      v32 = *((_QWORD *)v31 + 1);
      *(_QWORD *)v30 = *(_QWORD *)v31;
      *((_QWORD *)v30 + 1) = v32;
      v33 = v19[9];
      v34 = &a1[v33];
      v35 = &a2[v33];
      v108 = *((_QWORD *)v35 + 1);
      *(_QWORD *)v34 = *(_QWORD *)v35;
      *((_QWORD *)v34 + 1) = v108;
      v36 = v19[10];
      v37 = &a1[v36];
      v38 = &a2[v36];
      v39 = *((_QWORD *)v38 + 1);
      *(_QWORD *)v37 = *(_QWORD *)v38;
      *((_QWORD *)v37 + 1) = v39;
      v40 = v19[11];
      v41 = &a1[v40];
      v42 = &a2[v40];
      v43 = *((_QWORD *)v42 + 1);
      *(_QWORD *)v41 = *(_QWORD *)v42;
      *((_QWORD *)v41 + 1) = v43;
      v44 = v19[12];
      v45 = &a1[v44];
      v46 = &a2[v44];
      v47 = *((_QWORD *)v46 + 1);
      *(_QWORD *)v45 = *(_QWORD *)v46;
      *((_QWORD *)v45 + 1) = v47;
      *(_QWORD *)&a1[v19[13]] = *(_QWORD *)&a2[v19[13]];
      v48 = v19[14];
      v49 = &a1[v48];
      v50 = &a2[v48];
      v51 = *((_QWORD *)v50 + 1);
      *(_QWORD *)v49 = *(_QWORD *)v50;
      *((_QWORD *)v49 + 1) = v51;
      *(_QWORD *)&a1[v19[15]] = *(_QWORD *)&a2[v19[15]];
      *(_QWORD *)&a1[v19[16]] = *(_QWORD *)&a2[v19[16]];
      v52 = v19[17];
      v53 = &a1[v52];
      v54 = &a2[v52];
      v55 = *((_QWORD *)v54 + 1);
      *(_QWORD *)v53 = *(_QWORD *)v54;
      *((_QWORD *)v53 + 1) = v55;
      v56 = v19[18];
      __dst = &a1[v56];
      v104 = v28;
      v106 = &a2[v56];
      v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v57(v106, 1, v112))
      {
        v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
        memcpy(__dst, v106, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        v102(__dst, v106, v112);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v104 + 56))(__dst, 0, 1, v112);
      }
      a1[v19[19]] = a2[v19[19]];
      *(_DWORD *)&a1[v19[20]] = *(_DWORD *)&a2[v19[20]];
      goto LABEL_13;
    case 6u:
      v59 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v59;
      v60 = (int *)type metadata accessor for TTSVBVoiceModel();
      v61 = v60[5];
      v62 = &a1[v61];
      v63 = &a2[v61];
      v64 = sub_2487B5228();
      v65 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16);
      swift_bridgeObjectRetain();
      v65(v62, v63, v64);
      v65(&a1[v60[6]], &a2[v60[6]], v64);
      v66 = v60[7];
      v67 = &a1[v66];
      v68 = &a2[v66];
      v113 = sub_2487B51D4();
      v69 = *(_QWORD *)(v113 - 8);
      v103 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
      v103(v67, v68, v113);
      v70 = v60[8];
      v71 = &a1[v70];
      v72 = &a2[v70];
      v73 = *((_QWORD *)v72 + 1);
      *(_QWORD *)v71 = *(_QWORD *)v72;
      *((_QWORD *)v71 + 1) = v73;
      v74 = v60[9];
      v75 = &a1[v74];
      v76 = &a2[v74];
      v109 = *((_QWORD *)v76 + 1);
      *(_QWORD *)v75 = *(_QWORD *)v76;
      *((_QWORD *)v75 + 1) = v109;
      v77 = v60[10];
      v78 = &a1[v77];
      v79 = &a2[v77];
      v80 = *((_QWORD *)v79 + 1);
      *(_QWORD *)v78 = *(_QWORD *)v79;
      *((_QWORD *)v78 + 1) = v80;
      v81 = v60[11];
      v82 = &a1[v81];
      v83 = &a2[v81];
      v84 = *((_QWORD *)v83 + 1);
      *(_QWORD *)v82 = *(_QWORD *)v83;
      *((_QWORD *)v82 + 1) = v84;
      v85 = v60[12];
      v86 = &a1[v85];
      v87 = &a2[v85];
      v88 = *((_QWORD *)v87 + 1);
      *(_QWORD *)v86 = *(_QWORD *)v87;
      *((_QWORD *)v86 + 1) = v88;
      *(_QWORD *)&a1[v60[13]] = *(_QWORD *)&a2[v60[13]];
      v89 = v60[14];
      v90 = &a1[v89];
      v91 = &a2[v89];
      v92 = *((_QWORD *)v91 + 1);
      *(_QWORD *)v90 = *(_QWORD *)v91;
      *((_QWORD *)v90 + 1) = v92;
      *(_QWORD *)&a1[v60[15]] = *(_QWORD *)&a2[v60[15]];
      *(_QWORD *)&a1[v60[16]] = *(_QWORD *)&a2[v60[16]];
      v93 = v60[17];
      v94 = &a1[v93];
      v95 = &a2[v93];
      v96 = *((_QWORD *)v95 + 1);
      *(_QWORD *)v94 = *(_QWORD *)v95;
      *((_QWORD *)v94 + 1) = v96;
      v97 = v60[18];
      __dsta = &a1[v97];
      v105 = v69;
      v107 = &a2[v97];
      v98 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v98(v107, 1, v113))
      {
        v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
        memcpy(__dsta, v107, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
      }
      else
      {
        v103(__dsta, v107, v113);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(__dsta, 0, 1, v113);
      }
      a1[v60[19]] = a2[v60[19]];
      *(_DWORD *)&a1[v60[20]] = *(_DWORD *)&a2[v60[20]];
LABEL_13:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for TTSVBPath(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  void *v14;
  id v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  int *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  unsigned int (*v82)(char *, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  void (*v86)(char *, char *, uint64_t);
  void (*v87)(char *, char *, uint64_t);
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  char *__dst;
  char *__dsta;
  uint64_t v94;
  uint64_t v95;

  if (a1 != a2)
  {
    sub_2486EDA68((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBPath);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 4u:
        v6 = sub_2487B5228();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C180);
        v8 = *(int *)(v7 + 48);
        v9 = &a1[v8];
        v10 = &a2[v8];
        *(_QWORD *)v9 = *(_QWORD *)v10;
        *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
        v11 = *(int *)(v7 + 64);
        v12 = &a1[v11];
        v13 = &a2[v11];
        *v12 = *v13;
        v12[1] = v13[1];
        v14 = (void *)*((_QWORD *)v13 + 1);
        *((_QWORD *)v12 + 1) = v14;
        swift_bridgeObjectRetain();
        v15 = v14;
        goto LABEL_14;
      case 1u:
      case 3u:
      case 5u:
      case 7u:
      case 8u:
        v84 = sub_2487B5228();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(a1, a2, v84);
        goto LABEL_14;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        v16 = (int *)type metadata accessor for TTSVBVoiceModel();
        v17 = v16[5];
        v18 = &a1[v17];
        v19 = &a2[v17];
        v20 = sub_2487B5228();
        v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v21(v18, v19, v20);
        v21(&a1[v16[6]], &a2[v16[6]], v20);
        v22 = v16[7];
        v23 = &a1[v22];
        v24 = &a2[v22];
        v94 = sub_2487B51D4();
        v25 = *(_QWORD *)(v94 - 8);
        v86 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
        v86(v23, v24, v94);
        v26 = v16[8];
        v27 = &a1[v26];
        v28 = &a2[v26];
        *(_QWORD *)v27 = *(_QWORD *)v28;
        *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
        v29 = v16[9];
        v30 = &a1[v29];
        v31 = &a2[v29];
        *(_QWORD *)v30 = *(_QWORD *)v31;
        *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
        v32 = v16[10];
        v33 = &a1[v32];
        v34 = &a2[v32];
        *(_QWORD *)v33 = *(_QWORD *)v34;
        *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
        v35 = v16[11];
        v36 = &a1[v35];
        v37 = &a2[v35];
        *(_QWORD *)v36 = *(_QWORD *)v37;
        *((_QWORD *)v36 + 1) = *((_QWORD *)v37 + 1);
        v38 = v16[12];
        v39 = &a1[v38];
        v40 = &a2[v38];
        *(_QWORD *)v39 = *(_QWORD *)v40;
        *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
        *(_QWORD *)&a1[v16[13]] = *(_QWORD *)&a2[v16[13]];
        v41 = v16[14];
        v42 = &a1[v41];
        v43 = &a2[v41];
        *(_QWORD *)v42 = *(_QWORD *)v43;
        *((_QWORD *)v42 + 1) = *((_QWORD *)v43 + 1);
        *(_QWORD *)&a1[v16[15]] = *(_QWORD *)&a2[v16[15]];
        *(_QWORD *)&a1[v16[16]] = *(_QWORD *)&a2[v16[16]];
        v44 = v16[17];
        v45 = &a1[v44];
        v46 = &a2[v44];
        *(_QWORD *)v45 = *(_QWORD *)v46;
        *((_QWORD *)v45 + 1) = *((_QWORD *)v46 + 1);
        v47 = v16[18];
        __dst = &a1[v47];
        v88 = v25;
        v90 = &a2[v47];
        v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v48(v90, 1, v94))
        {
          v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
          memcpy(__dst, v90, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        }
        else
        {
          v86(__dst, v90, v94);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(__dst, 0, 1, v94);
        }
        a1[v16[19]] = a2[v16[19]];
        *(_DWORD *)&a1[v16[20]] = *(_DWORD *)&a2[v16[20]];
        goto LABEL_14;
      case 6u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        v50 = (int *)type metadata accessor for TTSVBVoiceModel();
        v51 = v50[5];
        v52 = &a1[v51];
        v53 = &a2[v51];
        v54 = sub_2487B5228();
        v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
        swift_bridgeObjectRetain();
        v55(v52, v53, v54);
        v55(&a1[v50[6]], &a2[v50[6]], v54);
        v56 = v50[7];
        v57 = &a1[v56];
        v58 = &a2[v56];
        v95 = sub_2487B51D4();
        v59 = *(_QWORD *)(v95 - 8);
        v87 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
        v87(v57, v58, v95);
        v60 = v50[8];
        v61 = &a1[v60];
        v62 = &a2[v60];
        *(_QWORD *)v61 = *(_QWORD *)v62;
        *((_QWORD *)v61 + 1) = *((_QWORD *)v62 + 1);
        v63 = v50[9];
        v64 = &a1[v63];
        v65 = &a2[v63];
        *(_QWORD *)v64 = *(_QWORD *)v65;
        *((_QWORD *)v64 + 1) = *((_QWORD *)v65 + 1);
        v66 = v50[10];
        v67 = &a1[v66];
        v68 = &a2[v66];
        *(_QWORD *)v67 = *(_QWORD *)v68;
        *((_QWORD *)v67 + 1) = *((_QWORD *)v68 + 1);
        v69 = v50[11];
        v70 = &a1[v69];
        v71 = &a2[v69];
        *(_QWORD *)v70 = *(_QWORD *)v71;
        *((_QWORD *)v70 + 1) = *((_QWORD *)v71 + 1);
        v72 = v50[12];
        v73 = &a1[v72];
        v74 = &a2[v72];
        *(_QWORD *)v73 = *(_QWORD *)v74;
        *((_QWORD *)v73 + 1) = *((_QWORD *)v74 + 1);
        *(_QWORD *)&a1[v50[13]] = *(_QWORD *)&a2[v50[13]];
        v75 = v50[14];
        v76 = &a1[v75];
        v77 = &a2[v75];
        *(_QWORD *)v76 = *(_QWORD *)v77;
        *((_QWORD *)v76 + 1) = *((_QWORD *)v77 + 1);
        *(_QWORD *)&a1[v50[15]] = *(_QWORD *)&a2[v50[15]];
        *(_QWORD *)&a1[v50[16]] = *(_QWORD *)&a2[v50[16]];
        v78 = v50[17];
        v79 = &a1[v78];
        v80 = &a2[v78];
        *(_QWORD *)v79 = *(_QWORD *)v80;
        *((_QWORD *)v79 + 1) = *((_QWORD *)v80 + 1);
        v81 = v50[18];
        __dsta = &a1[v81];
        v89 = v59;
        v91 = &a2[v81];
        v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v82(v91, 1, v95))
        {
          v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
          memcpy(__dsta, v91, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
        }
        else
        {
          v87(__dsta, v91, v95);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(__dsta, 0, 1, v95);
        }
        a1[v50[19]] = a2[v50[19]];
        *(_DWORD *)&a1[v50[20]] = *(_DWORD *)&a2[v50[20]];
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for TTSVBPath(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 4u:
      v6 = sub_2487B5228();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C180);
      *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
      *(_OWORD *)&a1[*(int *)(v7 + 64)] = *(_OWORD *)&a2[*(int *)(v7 + 64)];
      goto LABEL_13;
    case 1u:
    case 3u:
    case 5u:
    case 7u:
    case 8u:
      v40 = sub_2487B5228();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(a1, a2, v40);
      goto LABEL_13;
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v8 = (int *)type metadata accessor for TTSVBVoiceModel();
      v9 = v8[5];
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = sub_2487B5228();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
      v13(v10, v11, v12);
      v13(&a1[v8[6]], &a2[v8[6]], v12);
      v14 = v8[7];
      v15 = &a1[v14];
      v16 = &a2[v14];
      v17 = sub_2487B51D4();
      v18 = *(_QWORD *)(v17 - 8);
      v19 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
      v19(v15, v16, v17);
      *(_OWORD *)&a1[v8[8]] = *(_OWORD *)&a2[v8[8]];
      *(_OWORD *)&a1[v8[9]] = *(_OWORD *)&a2[v8[9]];
      *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
      *(_OWORD *)&a1[v8[11]] = *(_OWORD *)&a2[v8[11]];
      *(_OWORD *)&a1[v8[12]] = *(_OWORD *)&a2[v8[12]];
      *(_QWORD *)&a1[v8[13]] = *(_QWORD *)&a2[v8[13]];
      *(_OWORD *)&a1[v8[14]] = *(_OWORD *)&a2[v8[14]];
      *(_QWORD *)&a1[v8[15]] = *(_QWORD *)&a2[v8[15]];
      *(_QWORD *)&a1[v8[16]] = *(_QWORD *)&a2[v8[16]];
      *(_OWORD *)&a1[v8[17]] = *(_OWORD *)&a2[v8[17]];
      v20 = v8[18];
      v21 = &a1[v20];
      v22 = &a2[v20];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(&a2[v20], 1, v17))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        v19(v21, v22, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v21, 0, 1, v17);
      }
      a1[v8[19]] = a2[v8[19]];
      *(_DWORD *)&a1[v8[20]] = *(_DWORD *)&a2[v8[20]];
      goto LABEL_13;
    case 6u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v24 = (int *)type metadata accessor for TTSVBVoiceModel();
      v25 = v24[5];
      v26 = &a1[v25];
      v27 = &a2[v25];
      v28 = sub_2487B5228();
      v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32);
      v29(v26, v27, v28);
      v29(&a1[v24[6]], &a2[v24[6]], v28);
      v30 = v24[7];
      v31 = &a1[v30];
      v32 = &a2[v30];
      v33 = sub_2487B51D4();
      v34 = *(_QWORD *)(v33 - 8);
      v35 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
      v35(v31, v32, v33);
      *(_OWORD *)&a1[v24[8]] = *(_OWORD *)&a2[v24[8]];
      *(_OWORD *)&a1[v24[9]] = *(_OWORD *)&a2[v24[9]];
      *(_OWORD *)&a1[v24[10]] = *(_OWORD *)&a2[v24[10]];
      *(_OWORD *)&a1[v24[11]] = *(_OWORD *)&a2[v24[11]];
      *(_OWORD *)&a1[v24[12]] = *(_OWORD *)&a2[v24[12]];
      *(_QWORD *)&a1[v24[13]] = *(_QWORD *)&a2[v24[13]];
      *(_OWORD *)&a1[v24[14]] = *(_OWORD *)&a2[v24[14]];
      *(_QWORD *)&a1[v24[15]] = *(_QWORD *)&a2[v24[15]];
      *(_QWORD *)&a1[v24[16]] = *(_QWORD *)&a2[v24[16]];
      *(_OWORD *)&a1[v24[17]] = *(_OWORD *)&a2[v24[17]];
      v36 = v24[18];
      v37 = &a1[v36];
      v38 = &a2[v36];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(&a2[v36], 1, v33))
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        v35(v37, v38, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v37, 0, 1, v33);
      }
      a1[v24[19]] = a2[v24[19]];
      *(_DWORD *)&a1[v24[20]] = *(_DWORD *)&a2[v24[20]];
LABEL_13:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for TTSVBPath(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  if (a1 != a2)
  {
    sub_2486EDA68((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBPath);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 4u:
        v6 = sub_2487B5228();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C180);
        *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
        *(_OWORD *)&a1[*(int *)(v7 + 64)] = *(_OWORD *)&a2[*(int *)(v7 + 64)];
        goto LABEL_14;
      case 1u:
      case 3u:
      case 5u:
      case 7u:
      case 8u:
        v40 = sub_2487B5228();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(a1, a2, v40);
        goto LABEL_14;
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v8 = (int *)type metadata accessor for TTSVBVoiceModel();
        v9 = v8[5];
        v10 = &a1[v9];
        v11 = &a2[v9];
        v12 = sub_2487B5228();
        v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
        v13(v10, v11, v12);
        v13(&a1[v8[6]], &a2[v8[6]], v12);
        v14 = v8[7];
        v15 = &a1[v14];
        v16 = &a2[v14];
        v17 = sub_2487B51D4();
        v18 = *(_QWORD *)(v17 - 8);
        v19 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
        v19(v15, v16, v17);
        *(_OWORD *)&a1[v8[8]] = *(_OWORD *)&a2[v8[8]];
        *(_OWORD *)&a1[v8[9]] = *(_OWORD *)&a2[v8[9]];
        *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
        *(_OWORD *)&a1[v8[11]] = *(_OWORD *)&a2[v8[11]];
        *(_OWORD *)&a1[v8[12]] = *(_OWORD *)&a2[v8[12]];
        *(_QWORD *)&a1[v8[13]] = *(_QWORD *)&a2[v8[13]];
        *(_OWORD *)&a1[v8[14]] = *(_OWORD *)&a2[v8[14]];
        *(_QWORD *)&a1[v8[15]] = *(_QWORD *)&a2[v8[15]];
        *(_QWORD *)&a1[v8[16]] = *(_QWORD *)&a2[v8[16]];
        *(_OWORD *)&a1[v8[17]] = *(_OWORD *)&a2[v8[17]];
        v20 = v8[18];
        v21 = &a1[v20];
        v22 = &a2[v20];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(&a2[v20], 1, v17))
        {
          v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          v19(v21, v22, v17);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v21, 0, 1, v17);
        }
        a1[v8[19]] = a2[v8[19]];
        *(_DWORD *)&a1[v8[20]] = *(_DWORD *)&a2[v8[20]];
        goto LABEL_14;
      case 6u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v24 = (int *)type metadata accessor for TTSVBVoiceModel();
        v25 = v24[5];
        v26 = &a1[v25];
        v27 = &a2[v25];
        v28 = sub_2487B5228();
        v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32);
        v29(v26, v27, v28);
        v29(&a1[v24[6]], &a2[v24[6]], v28);
        v30 = v24[7];
        v31 = &a1[v30];
        v32 = &a2[v30];
        v33 = sub_2487B51D4();
        v34 = *(_QWORD *)(v33 - 8);
        v35 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
        v35(v31, v32, v33);
        *(_OWORD *)&a1[v24[8]] = *(_OWORD *)&a2[v24[8]];
        *(_OWORD *)&a1[v24[9]] = *(_OWORD *)&a2[v24[9]];
        *(_OWORD *)&a1[v24[10]] = *(_OWORD *)&a2[v24[10]];
        *(_OWORD *)&a1[v24[11]] = *(_OWORD *)&a2[v24[11]];
        *(_OWORD *)&a1[v24[12]] = *(_OWORD *)&a2[v24[12]];
        *(_QWORD *)&a1[v24[13]] = *(_QWORD *)&a2[v24[13]];
        *(_OWORD *)&a1[v24[14]] = *(_OWORD *)&a2[v24[14]];
        *(_QWORD *)&a1[v24[15]] = *(_QWORD *)&a2[v24[15]];
        *(_QWORD *)&a1[v24[16]] = *(_QWORD *)&a2[v24[16]];
        *(_OWORD *)&a1[v24[17]] = *(_OWORD *)&a2[v24[17]];
        v36 = v24[18];
        v37 = &a1[v36];
        v38 = &a2[v36];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(&a2[v36], 1, v33))
        {
          v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
          memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
        }
        else
        {
          v35(v37, v38, v33);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v37, 0, 1, v33);
        }
        a1[v24[19]] = a2[v24[19]];
        *(_DWORD *)&a1[v24[20]] = *(_DWORD *)&a2[v24[20]];
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TTSVBPath(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for TTSVBPath(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_2486F0710()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2486F0720()
{
  uint64_t result;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = sub_2487B5228();
  if (v1 <= 0x3F)
  {
    v2 = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout3();
    v7 = &v6;
    v8 = v2;
    result = type metadata accessor for TTSVBVoiceModel();
    if (v3 <= 0x3F)
    {
      v9 = *(_QWORD *)(result - 8) + 64;
      v4 = v9;
      v10 = v2;
      swift_getTupleTypeLayout3();
      v11 = &v5;
      v12 = v2;
      v13 = v4;
      v14 = v2;
      v15 = v2;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_2486F0814(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t static TTSVBService.serviceName.getter()
{
  return 0xD00000000000001FLL;
}

void sub_2486F0874(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF0]), sel_init);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = 0;
    do
    {
      ++v4;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25445F6C8);
      objc_msgSend(v2, sel_addObject_, sub_2487B5CFC());
      swift_unknownObjectRelease();
    }
    while (v3 != v4);
    swift_bridgeObjectRelease();
  }
  v5 = v2;
  sub_2487B5744();

  sub_2487B5B58();
  __break(1u);
}

id static TTSVBService.configuredClientInterface()()
{
  return objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_257797148);
}

uint64_t TTSVBService.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  TTSVBService.init()();
  return v0;
}

_QWORD *TTSVBService.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v1 = sub_2487B5828();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2487B5804();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v5);
  v7 = sub_2487B5408();
  MEMORY[0x24BDAC7A8](v7);
  v10[0] = sub_2486F47E4();
  sub_2487B53FC();
  v10[1] = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F6B0, v6, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F360);
  sub_2486F4954((unint64_t *)&unk_25445F6A0, (uint64_t *)&unk_25445F360);
  sub_2487B59FC();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE5758], v1);
  v0[2] = sub_2487B584C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED18);
  v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  v0[3] = v8;
  v0[4] = 0;
  return v0;
}

uint64_t TTSVBService.deinit()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);
  if (v1)
    objc_msgSend(v1, sel_invalidate);

  swift_release();
  return v0;
}

uint64_t TTSVBService.__deallocating_deinit()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);
  if (v1)
    objc_msgSend(v1, sel_invalidate);

  swift_release();
  return swift_deallocClassInstance();
}

id sub_2486F0CF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t aBlock;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  void *v28;
  uint64_t (*v29)();
  uint64_t v30;

  v1 = v0;
  v2 = sub_2487B533C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_unfair_lock_assert_owner((const os_unfair_lock *)(*(_QWORD *)(v1 + 24) + 16));
  v6 = *(void **)(v1 + 32);
  if (v6)
  {
    v7 = *(id *)(v1 + 32);
  }
  else
  {
    v8 = sub_2487B0FFC();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
    v9 = sub_2487B5324();
    v10 = sub_2487B57E0();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_2486E6000, v9, v10, "Creating VoiceBanking service connection.", v11, 2u);
      MEMORY[0x24959AF80](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v12 = objc_allocWithZone(MEMORY[0x24BDD1988]);
    v13 = (void *)sub_2487B5504();
    v14 = objc_msgSend(v12, sel_initWithMachServiceName_options_, v13, 0);

    v15 = _s31TextToSpeechVoiceBankingSupport12TTSVBServiceC26configuredServiceInterfaceSo14NSXPCInterfaceCyFZ_0();
    objc_msgSend(v14, sel_setRemoteObjectInterface_, v15);

    v16 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_257797148);
    objc_msgSend(v14, sel_setExportedInterface_, v16);

    v17 = swift_allocObject();
    swift_weakInit();
    v29 = sub_2486F50F4;
    v30 = v17;
    v18 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v26 = 1107296256;
    v27 = sub_2486F1008;
    v28 = &block_descriptor_227;
    v19 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v14, sel_setInterruptionHandler_, v19);
    _Block_release(v19);
    v20 = swift_allocObject();
    swift_weakInit();
    v29 = sub_2486F5114;
    v30 = v20;
    aBlock = v18;
    v26 = 1107296256;
    v27 = sub_2486F1008;
    v28 = &block_descriptor_231;
    v21 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v14, sel_setInvalidationHandler_, v21);
    _Block_release(v21);
    objc_msgSend(v14, sel_resume);
    v22 = *(void **)(v1 + 32);
    *(_QWORD *)(v1 + 32) = v14;
    v7 = v14;

    v6 = 0;
  }
  v23 = v6;
  return v7;
}

uint64_t sub_2486F100C(uint64_t a1, const char *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t result;
  uint64_t v12;
  os_unfair_lock_s *v13;
  void *v14;
  uint64_t v15;

  v3 = sub_2487B533C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2487B0FFC();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  v8 = sub_2487B5324();
  v9 = sub_2487B57D4();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_2486E6000, v8, v9, a2, v10, 2u);
    MEMORY[0x24959AF80](v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v12 = result;
    v13 = *(os_unfair_lock_s **)(result + 24);
    swift_retain();
    os_unfair_lock_lock(v13 + 4);
    v14 = *(void **)(v12 + 32);
    *(_QWORD *)(v12 + 32) = 0;

    os_unfair_lock_unlock(v13 + 4);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_2486F1180(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v5;
  _QWORD *v6;
  void *v7;
  id v8;
  uint64_t result;
  uint64_t v10;
  _QWORD v11[4];
  _QWORD aBlock[6];

  os_unfair_lock_assert_owner((const os_unfair_lock *)(*(_QWORD *)(v2 + 24) + 16));
  v5 = sub_2486F0CF4();
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v2;
  v6[3] = a1;
  v6[4] = a2;
  aBlock[4] = sub_2486F4868;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F18AC;
  aBlock[3] = &block_descriptor;
  v7 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  v8 = objc_msgSend(v5, sel_remoteObjectProxyWithErrorHandler_, v7);
  _Block_release(v7);

  sub_2487B59A8();
  swift_unknownObjectRelease();
  sub_2486F0814((uint64_t)aBlock, (uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED08);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
    return v10;
  }
  else
  {
    v11[0] = 0;
    v11[1] = 0xE000000000000000;
    sub_2487B5AA4();
    sub_2487B55AC();
    sub_2487B55AC();
    result = sub_2487B5B58();
    __break(1u);
  }
  return result;
}

uint64_t sub_2486F136C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char *v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  void *v37;
  id v38;
  char *v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t aBlock[7];

  v8 = sub_2487B53D8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2487B5408();
  v51 = *(_QWORD *)(v12 - 8);
  v52 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v50 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2487B533C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_2487B0FFC();
  v49 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v18, v14);
  v19 = a1;
  v20 = a1;
  v21 = sub_2487B5324();
  v22 = sub_2487B57D4();
  v48 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v47 = v9;
    v24 = v23;
    v43 = swift_slowAlloc();
    aBlock[0] = v43;
    *(_DWORD *)v24 = 136315394;
    v46 = a4;
    v53 = sub_2486EDE5C(0xD00000000000001CLL, 0x80000002487C27B0, aBlock);
    v45 = a3;
    sub_2487B593C();
    *(_WORD *)(v24 + 12) = 2080;
    v41 = v24 + 14;
    v25 = (void *)sub_2487B4F58();
    v44 = a2;
    v26 = v11;
    v27 = v8;
    v28 = v25;
    v29 = objc_msgSend(v25, sel_debugDescription);

    v30 = sub_2487B5528();
    v42 = v14;
    v32 = v31;

    a4 = v46;
    v33 = v30;
    v8 = v27;
    v11 = v26;
    v53 = sub_2486EDE5C(v33, v32, aBlock);
    a3 = v45;
    sub_2487B593C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2486E6000, v21, (os_log_type_t)v48, "%s - remoteObjectProxy error: %s", (uint8_t *)v24, 0x16u);
    v34 = v43;
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v34, -1, -1);
    v35 = v24;
    v9 = v47;
    MEMORY[0x24959AF80](v35, -1, -1);

    (*(void (**)(char *, uint64_t))(v49 + 8))(v17, v42);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v49 + 8))(v17, v14);
  }
  v36 = (_QWORD *)swift_allocObject();
  v36[2] = a3;
  v36[3] = a4;
  v36[4] = a1;
  aBlock[4] = (uint64_t)sub_2486F5070;
  aBlock[5] = (uint64_t)v36;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_2486F1008;
  aBlock[3] = (uint64_t)&block_descriptor_221;
  v37 = _Block_copy(aBlock);
  v38 = a1;
  swift_retain();
  v39 = v50;
  sub_2487B53E4();
  v53 = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
  sub_2486F4954((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680);
  sub_2487B59FC();
  MEMORY[0x24959A1AC](0, v39, v11, v37);
  _Block_release(v37);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v39, v52);
  return swift_release();
}

uint64_t sub_2486F17C0(void (*a1)(char *), uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  _QWORD v12[2];
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;

  v5 = type metadata accessor for TTSVBError(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2486F8E48((uint64_t)&v14);
  v8 = v14;
  v9 = v15;
  v10 = v16;
  v12[0] = v14;
  v12[1] = v15;
  v13 = v16;
  static TTSVBError.map(_:_:)(a3, (uint64_t)v12, (uint64_t)v7);
  sub_2486F507C(v8, v9, v10);
  a1(v7);
  return sub_2486F5094((uint64_t)v7);
}

uint64_t sub_2486F1880(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void sub_2486F18AC(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_2486F18FC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  void *v16;
  id v17;
  _QWORD v19[2];
  _QWORD aBlock[6];

  v7 = sub_2487B53D8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2487B5408();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = *(_QWORD *)(v3 + 16);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a3;
  v15[3] = a1;
  v15[4] = a2;
  aBlock[4] = sub_2486F4948;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F1008;
  aBlock[3] = &block_descriptor_32;
  v16 = _Block_copy(aBlock);
  v17 = a3;
  swift_retain();
  sub_2487B53E4();
  v19[1] = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
  sub_2486F4954((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680);
  sub_2487B59FC();
  MEMORY[0x24959A1AC](0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

uint64_t sub_2486F1AEC(_QWORD *a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(void);
  _QWORD *v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1C8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v7 = *(void (**)(void))((*MEMORY[0x24BEE4EA0] & *a1) + 0x70);
    v8 = a1;
    v7();
    swift_storeEnumTagMultiPayload();
    a2(v6);

  }
  else
  {
    swift_storeEnumTagMultiPayload();
    a2(v6);
  }
  return sub_2486F5008((uint64_t)v6, &qword_25445F1C8);
}

void TTSVBService.createVoice(named:localeID:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  os_unfair_lock_s *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  _QWORD v16[6];

  v9 = (os_unfair_lock_s *)(*(_QWORD *)(v6 + 24) + 16);
  os_unfair_lock_lock(v9);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a5;
  *(_QWORD *)(v10 + 24) = a6;
  swift_retain();
  v11 = (void *)sub_2486F1180((uint64_t)sub_2486F4DDC, v10);
  swift_release();
  v12 = (void *)sub_2487B5504();
  v13 = (void *)sub_2487B5504();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v6;
  v14[3] = a5;
  v14[4] = a6;
  v16[4] = sub_2486F4E2C;
  v16[5] = v14;
  v16[0] = MEMORY[0x24BDAC760];
  v16[1] = 1107296256;
  v16[2] = sub_2486F1F48;
  v16[3] = &block_descriptor_209;
  v15 = _Block_copy(v16);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_createVoiceWithNamed_localeID_reply_, v12, v13, v15);
  _Block_release(v15);
  swift_unknownObjectRelease();

  os_unfair_lock_unlock(v9);
}

uint64_t sub_2486F1D64(_QWORD *a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(void);
  _QWORD *v10;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a1)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C1D8);
    MEMORY[0x24BDAC7A8](v6);
    v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    v9 = *(void (**)(void))((*MEMORY[0x24BEE4EA0] & *a1) + 0x70);
    v10 = a1;
    v9();
    swift_storeEnumTagMultiPayload();
    a2(v8);

    return sub_2486F5008((uint64_t)v8, &qword_25777C1D8);
  }
  else
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C1D8);
    MEMORY[0x24BDAC7A8](v13);
    v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED40);
    MEMORY[0x24BDAC7A8](v16);
    v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2486F4E74(a4, (uint64_t)v18, &qword_25445ED40);
    v19 = sub_2487B5228();
    v20 = *(_QWORD *)(v19 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19);
    if ((_DWORD)result == 1)
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v15, v18, v19);
      swift_storeEnumTagMultiPayload();
      a2(v15);
      return sub_2486F5008((uint64_t)v15, &qword_25777C1D8);
    }
  }
  return result;
}

uint64_t sub_2486F1F48(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_2486F2DBC(a1, a2, a3, &qword_25445ED40, (void (*)(uint64_t))MEMORY[0x24BDCE9F0], (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA50]);
}

void TTSVBService.importTrainingData(fromDirectory:creatingVoiceName:localeID:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  _QWORD *v16;
  void *v17;
  os_unfair_lock_s *lock;
  _QWORD aBlock[6];

  v8 = v7;
  lock = (os_unfair_lock_s *)(*(_QWORD *)(v7 + 24) + 16);
  os_unfair_lock_lock(lock);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a6;
  *(_QWORD *)(v11 + 24) = a7;
  swift_retain();
  v12 = (void *)sub_2486F1180((uint64_t)sub_2486F5250, v11);
  swift_release();
  v13 = (void *)sub_2487B503C();
  v14 = (void *)sub_2487B5504();
  v15 = (void *)sub_2487B5504();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v8;
  v16[3] = a6;
  v16[4] = a7;
  aBlock[4] = sub_2486F4918;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F20F8;
  aBlock[3] = &block_descriptor_200;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_importTrainingDataFromDirectory_creatingVoiceName_localeID_reply_, v13, v14, v15, v17);
  _Block_release(v17);
  swift_unknownObjectRelease();

  os_unfair_lock_unlock(lock);
}

void sub_2486F20F8(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

void TTSVBService.importModel(fromDirectory:overrideLocaleID:addingToVoice:completion:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  os_unfair_lock_s *lock;
  _QWORD aBlock[6];

  v7 = v6;
  lock = (os_unfair_lock_s *)(*(_QWORD *)(v6 + 24) + 16);
  os_unfair_lock_lock(lock);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a5;
  *(_QWORD *)(v11 + 24) = a6;
  swift_retain();
  v12 = (void *)sub_2486F1180((uint64_t)sub_2486F5250, v11);
  swift_release();
  v13 = (void *)sub_2487B503C();
  if (a3)
    a3 = (void *)sub_2487B5504();
  v14 = (void *)sub_2487B51F8();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v7;
  v15[3] = a5;
  v15[4] = a6;
  aBlock[4] = sub_2486F4918;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F20F8;
  aBlock[3] = &block_descriptor_191;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_importModelFromDirectory_overrideLocaleID_addingToVoice_reply_, v13, a3, v14, v16);
  _Block_release(v16);
  swift_unknownObjectRelease();

  os_unfair_lock_unlock(lock);
}

uint64_t sub_2486F22E0(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2486F4994(a1, (uint64_t)v9);
  swift_storeEnumTagMultiPayload();
  a2(v9);
  return sub_2486F5008((uint64_t)v9, a4);
}

void TTSVBService.updateTCCCloudKitAccess(allowed:completion:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  os_unfair_lock_s *v7;
  uint64_t v8;
  void *v9;
  _QWORD *v10;
  void *v11;
  _QWORD v12[6];

  v7 = (os_unfair_lock_s *)(*(_QWORD *)(v3 + 24) + 16);
  os_unfair_lock_lock(v7);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  swift_retain();
  v9 = (void *)sub_2486F1180((uint64_t)sub_2486F5250, v8);
  swift_release();
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v3;
  v10[3] = a2;
  v10[4] = a3;
  v12[4] = sub_2486F4918;
  v12[5] = v10;
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 1107296256;
  v12[2] = sub_2486F20F8;
  v12[3] = &block_descriptor_182;
  v11 = _Block_copy(v12);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_updateTCCCloudKitAccessWithAllowed_reply_, a1 & 1, v11);
  _Block_release(v11);
  swift_unknownObjectRelease();
  os_unfair_lock_unlock(v7);
}

void TTSVBService.initializeCloudKitSchema(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  void *v9;
  _QWORD v10[6];

  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 24) + 16);
  os_unfair_lock_lock(v5);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  swift_retain();
  v7 = (void *)sub_2486F1180((uint64_t)sub_2486F5250, v6);
  swift_release();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v2;
  v8[3] = a1;
  v8[4] = a2;
  v10[4] = sub_2486F4918;
  v10[5] = v8;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_2486F20F8;
  v10[3] = &block_descriptor_173;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_initializeCloudKitSchemaWithReply_, v9);
  _Block_release(v9);
  swift_unknownObjectRelease();
  os_unfair_lock_unlock(v5);
}

void TTSVBService.synchronizeFileBackedFuturesForModelID(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  _QWORD *v11;
  void *v12;
  _QWORD v13[6];

  v4 = v3;
  v7 = (os_unfair_lock_s *)(*(_QWORD *)(v3 + 24) + 16);
  os_unfair_lock_lock(v7);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  swift_retain();
  v9 = (void *)sub_2486F1180((uint64_t)sub_2486F5250, v8);
  swift_release();
  v10 = (void *)sub_2487B51F8();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v4;
  v11[3] = a2;
  v11[4] = a3;
  v13[4] = sub_2486F4918;
  v13[5] = v11;
  v13[0] = MEMORY[0x24BDAC760];
  v13[1] = 1107296256;
  v13[2] = sub_2486F20F8;
  v13[3] = &block_descriptor_164;
  v12 = _Block_copy(v13);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_synchronizeModelFuturesWithModelID_reply_, v10, v12);
  _Block_release(v12);
  swift_unknownObjectRelease();

  os_unfair_lock_unlock(v7);
}

void TTSVBService.exportTrainingData(voiceID:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  _QWORD *v11;
  void *v12;
  _QWORD v13[6];

  v4 = v3;
  v7 = (os_unfair_lock_s *)(*(_QWORD *)(v3 + 24) + 16);
  os_unfair_lock_lock(v7);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  swift_retain();
  v9 = (void *)sub_2486F1180((uint64_t)sub_2486F4D08, v8);
  swift_release();
  v10 = (void *)sub_2487B51F8();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v4;
  v11[3] = a2;
  v11[4] = a3;
  v13[4] = sub_2486F4D2C;
  v13[5] = v11;
  v13[0] = MEMORY[0x24BDAC760];
  v13[1] = 1107296256;
  v13[2] = sub_2486F2DA0;
  v13[3] = &block_descriptor_149;
  v12 = _Block_copy(v13);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_exportTrainingDataWithVoiceID_reply_, v10, v12);
  _Block_release(v12);
  swift_unknownObjectRelease();

  os_unfair_lock_unlock(v7);
}

uint64_t sub_2486F288C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  id v27;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD aBlock[6];

  v30 = a4;
  v31 = a8;
  v29[1] = a7;
  v32 = a9;
  v14 = sub_2487B53D8();
  v36 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_2487B5408();
  v34 = *(_QWORD *)(v17 - 8);
  v35 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = *(_QWORD *)(a3 + 16);
  v20 = __swift_instantiateConcreteTypeFromMangledName(a6);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  MEMORY[0x24BDAC7A8](v20);
  sub_2486F4E74(a1, (uint64_t)v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), a6);
  v23 = (*(unsigned __int8 *)(v21 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v24 = (_QWORD *)swift_allocObject();
  v25 = v30;
  v24[2] = a2;
  v24[3] = v25;
  v24[4] = a5;
  sub_2486F4F70((uint64_t)v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v24 + v23, a6);
  aBlock[4] = v31;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F1008;
  aBlock[3] = v32;
  v26 = _Block_copy(aBlock);
  v27 = a2;
  swift_retain();
  sub_2487B53E4();
  v37 = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
  sub_2486F4954((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680);
  sub_2487B59FC();
  MEMORY[0x24959A1AC](0, v19, v16, v26);
  _Block_release(v26);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v14);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v35);
  return swift_release();
}

uint64_t sub_2486F2AF8(_QWORD *a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(void);
  _QWORD *v10;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;

  if (a1)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C1D0);
    MEMORY[0x24BDAC7A8](v6);
    v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    v9 = *(void (**)(void))((*MEMORY[0x24BEE4EA0] & *a1) + 0x70);
    v10 = a1;
    v9();
    swift_storeEnumTagMultiPayload();
    a2(v8);

    return sub_2486F5008((uint64_t)v8, &qword_25777C1D0);
  }
  else
  {
    v13 = sub_2487B50CC();
    v14 = *(_QWORD *)(v13 - 8);
    MEMORY[0x24BDAC7A8](v13);
    v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28);
    MEMORY[0x24BDAC7A8](v17);
    v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2486F4E74(a4, (uint64_t)v19, &qword_25445ED28);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v19, 1, v13) == 1)
    {
      sub_2486F5008((uint64_t)v19, &qword_25445ED28);
      result = sub_2487B5B58();
      __break(1u);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v19, v13);
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C1D0);
      MEMORY[0x24BDAC7A8](v20);
      v22 = (char *)&v23 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v22, v16, v13);
      swift_storeEnumTagMultiPayload();
      a2(v22);
      sub_2486F5008((uint64_t)v22, &qword_25777C1D0);
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }
  }
  return result;
}

uint64_t sub_2486F2DA0(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_2486F2DBC(a1, a2, a3, &qword_25445ED28, (void (*)(uint64_t))MEMORY[0x24BDCD9B8], (uint64_t (*)(_QWORD))MEMORY[0x24BDCDAB8]);
}

uint64_t sub_2486F2DBC(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4, void (*a5)(uint64_t), uint64_t (*a6)(_QWORD))
{
  void (*v11)(char *, void *);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v19;

  v11 = *(void (**)(char *, void *))(a1 + 32);
  v12 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    a5(a2);
    v15 = a6(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
  }
  else
  {
    v16 = a6(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v14, 1, 1, v16);
  }
  swift_retain();
  v17 = a3;
  v11(v14, a3);

  swift_release();
  return sub_2486F5008((uint64_t)v14, a4);
}

void TTSVBService.deleteVoice(withID:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  _QWORD *v11;
  void *v12;
  _QWORD v13[6];

  v4 = v3;
  v7 = (os_unfair_lock_s *)(*(_QWORD *)(v3 + 24) + 16);
  os_unfair_lock_lock(v7);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  swift_retain();
  v9 = (void *)sub_2486F1180((uint64_t)sub_2486F4CE4, v8);
  swift_release();
  v10 = (void *)sub_2487B51F8();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v4;
  v11[3] = a2;
  v11[4] = a3;
  v13[4] = sub_2486F4918;
  v13[5] = v11;
  v13[0] = MEMORY[0x24BDAC760];
  v13[1] = 1107296256;
  v13[2] = sub_2486F20F8;
  v13[3] = &block_descriptor_140;
  v12 = _Block_copy(v13);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_deleteVoiceWithVoiceID_reply_, v10, v12);
  _Block_release(v12);
  swift_unknownObjectRelease();

  os_unfair_lock_unlock(v7);
}

void TTSVBService.deleteModel(withID:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  _QWORD *v11;
  void *v12;
  _QWORD v13[6];

  v4 = v3;
  v7 = (os_unfair_lock_s *)(*(_QWORD *)(v3 + 24) + 16);
  os_unfair_lock_lock(v7);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  swift_retain();
  v9 = (void *)sub_2486F1180((uint64_t)sub_2486F5250, v8);
  swift_release();
  v10 = (void *)sub_2487B51F8();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v4;
  v11[3] = a2;
  v11[4] = a3;
  v13[4] = sub_2486F4918;
  v13[5] = v11;
  v13[0] = MEMORY[0x24BDAC760];
  v13[1] = 1107296256;
  v13[2] = sub_2486F20F8;
  v13[3] = &block_descriptor_131;
  v12 = _Block_copy(v13);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_deleteModelWithModelID_reply_, v10, v12);
  _Block_release(v12);
  swift_unknownObjectRelease();

  os_unfair_lock_unlock(v7);
}

void TTSVBService.fetchVoices(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  void *v9;
  _QWORD v10[6];

  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 24) + 16);
  os_unfair_lock_lock(v5);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  swift_retain();
  v7 = (void *)sub_2486F1180((uint64_t)sub_2486F4C0C, v6);
  swift_release();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v2;
  v8[3] = a1;
  v8[4] = a2;
  v10[4] = sub_2486F4C30;
  v10[5] = v8;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_2486F33A4;
  v10[3] = &block_descriptor_116;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_fetchVoicesWithCompletion_, v9);
  _Block_release(v9);
  swift_unknownObjectRelease();
  os_unfair_lock_unlock(v5);
}

uint64_t sub_2486F3290(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C1B8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for TTSVBVoice();
  v11 = sub_2486F4CA0(&qword_25777C1C0, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoice, (uint64_t)&protocol conformance descriptor for TTSVBVoice);
  sub_2486F4CA0(&qword_25777C1C8, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoice, (uint64_t)&protocol conformance descriptor for TTSVBVoice);
  *v9 = static Array<A>.fromData(_:)(a3, a4, v10, v11);
  swift_storeEnumTagMultiPayload();
  a1(v9);
  return sub_2486F5008((uint64_t)v9, &qword_25777C1B8);
}

uint64_t sub_2486F33A4(uint64_t a1, void *a2)
{
  void (*v3)(uint64_t, unint64_t);
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = *(void (**)(uint64_t, unint64_t))(a1 + 32);
  swift_retain();
  v4 = a2;
  v5 = sub_2487B50FC();
  v7 = v6;

  v3(v5, v7);
  sub_2486F4A28(v5, v7);
  return swift_release();
}

void TTSVBService.fetchVoiceModels(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  void *v9;
  _QWORD v10[6];

  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 24) + 16);
  os_unfair_lock_lock(v5);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  swift_retain();
  v7 = (void *)sub_2486F1180((uint64_t)sub_2486F4B80, v6);
  swift_release();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v2;
  v8[3] = a1;
  v8[4] = a2;
  v10[4] = sub_2486F4BA4;
  v10[5] = v8;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_2486F33A4;
  v10[3] = &block_descriptor_101;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_fetchVoiceModelsWithCompletion_, v9);
  _Block_release(v9);
  swift_unknownObjectRelease();
  os_unfair_lock_unlock(v5);
}

uint64_t sub_2486F3540(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v23 = a8;
  v13 = sub_2487B53D8();
  v26 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_2487B5408();
  v24 = *(_QWORD *)(v16 - 8);
  v25 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a4;
  v19[3] = a5;
  v19[4] = a1;
  v19[5] = a2;
  aBlock[4] = a7;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F1008;
  aBlock[3] = v23;
  v20 = _Block_copy(aBlock);
  swift_retain();
  sub_2486F4AD4(a1, a2);
  sub_2487B53E4();
  v27 = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
  sub_2486F4954((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680);
  sub_2487B59FC();
  MEMORY[0x24959A1AC](0, v18, v15, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v15, v13);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v18, v25);
  return swift_release();
}

uint64_t sub_2486F3740(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C1A0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for TTSVBVoiceModel();
  v11 = sub_2486F4CA0(&qword_25777C1A8, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModel);
  sub_2486F4CA0(&qword_25777C1B0, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModel);
  *v9 = static Array<A>.fromData(_:)(a3, a4, v10, v11);
  swift_storeEnumTagMultiPayload();
  a1(v9);
  return sub_2486F5008((uint64_t)v9, &qword_25777C1A0);
}

void TTSVBService.fetchInstalledVoiceModels(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  void *v9;
  _QWORD v10[6];

  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 24) + 16);
  os_unfair_lock_lock(v5);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  swift_retain();
  v7 = (void *)sub_2486F1180((uint64_t)sub_2486F4B18, v6);
  swift_release();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v2;
  v8[3] = a1;
  v8[4] = a2;
  v10[4] = sub_2486F4B3C;
  v10[5] = v8;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_2486F33A4;
  v10[3] = &block_descriptor_86;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_fetchInstalledVoiceModelsWithCompletion_, v9);
  _Block_release(v9);
  swift_unknownObjectRelease();
  os_unfair_lock_unlock(v5);
}

uint64_t sub_2486F3980(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED20);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for TTSVBInstalledVoiceModel();
  v11 = sub_2486F4CA0(&qword_25445ED00, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBInstalledVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBInstalledVoiceModel);
  sub_2486F4CA0(&qword_25445ECF8, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBInstalledVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBInstalledVoiceModel);
  *v9 = static Array<A>.fromData(_:)(a3, a4, v10, v11);
  swift_storeEnumTagMultiPayload();
  a1(v9);
  return sub_2486F5008((uint64_t)v9, &qword_25445ED20);
}

void TTSVBService.fetchTrainingMetadata(voiceID:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  _QWORD *v11;
  void *v12;
  _QWORD v13[6];

  v4 = v3;
  v7 = (os_unfair_lock_s *)(*(_QWORD *)(v3 + 24) + 16);
  os_unfair_lock_lock(v7);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  swift_retain();
  v9 = (void *)sub_2486F1180((uint64_t)sub_2486F49E4, v8);
  swift_release();
  v10 = (void *)sub_2487B51F8();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v4;
  v11[3] = a2;
  v11[4] = a3;
  v13[4] = sub_2486F4A08;
  v13[5] = v11;
  v13[0] = MEMORY[0x24BDAC760];
  v13[1] = 1107296256;
  v13[2] = sub_2486F3FE0;
  v13[3] = &block_descriptor_71;
  v12 = _Block_copy(v13);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_fetchTrainingMetadataWithVoiceID_completion_, v10, v12);
  _Block_release(v12);
  swift_unknownObjectRelease();

  os_unfair_lock_unlock(v7);
}

uint64_t sub_2486F3BE4(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  void *v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v12 = sub_2487B53D8();
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_2487B5408();
  v15 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(a4 + 16);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a1;
  v18[3] = a2;
  v18[4] = a5;
  v18[5] = a6;
  v18[6] = a3;
  aBlock[4] = sub_2486F4AB0;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F1008;
  aBlock[3] = &block_descriptor_77;
  v19 = _Block_copy(aBlock);
  sub_2486F4AC0(a1, a2);
  v20 = a3;
  swift_retain();
  sub_2487B53E4();
  v25 = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
  sub_2486F4954((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680);
  sub_2487B59FC();
  MEMORY[0x24959A1AC](0, v17, v14, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v12);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v23);
  return swift_release();
}

uint64_t sub_2486F3DF8(uint64_t a1, unint64_t a2, void (*a3)(uint64_t *), uint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  void (*v12)(void);
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C188);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2 >> 60 != 15)
  {
    sub_2486F4AD4(a1, a2);
    v14 = type metadata accessor for TTSVBVoiceSample();
    v15 = sub_2486F4CA0(&qword_25777C190, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceSample, (uint64_t)&protocol conformance descriptor for TTSVBVoiceSample);
    sub_2486F4CA0(&qword_25777C198, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceSample, (uint64_t)&protocol conformance descriptor for TTSVBVoiceSample);
    *v11 = static Array<A>.fromData(_:)(a1, a2, v14, v15);
    swift_storeEnumTagMultiPayload();
    a3(v11);
    sub_2486F4A14(a1, a2);
    return sub_2486F5008((uint64_t)v11, &qword_25777C188);
  }
  if (a5)
  {
    v12 = *(void (**)(void))((*MEMORY[0x24BEE4EA0] & *a5) + 0x70);
    v13 = a5;
    v12();
    swift_storeEnumTagMultiPayload();
    a3(v11);

    return sub_2486F5008((uint64_t)v11, &qword_25777C188);
  }
  result = sub_2487B5B58();
  __break(1u);
  return result;
}

uint64_t sub_2486F3FE0(uint64_t a1, void *a2, void *a3)
{
  void *v4;
  void (*v5)(void *, unint64_t, void *);
  id v6;
  unint64_t v7;
  unint64_t v8;
  id v9;

  v4 = a2;
  v5 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    v6 = v4;
    v4 = (void *)sub_2487B50FC();
    v8 = v7;

  }
  else
  {
    swift_retain();
    v8 = 0xF000000000000000;
  }
  v9 = a3;
  v5(v4, v8, a3);

  sub_2486F4A14((uint64_t)v4, v8);
  return swift_release();
}

void TTSVBService.trainModel(withID:mode:startImmediately:skipValidation:overrideMinimumPhraseCount:completion:)(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v15;
  void *v16;
  void *v17;
  __CFString *v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  os_unfair_lock_s *lock;
  _QWORD aBlock[6];

  v9 = v8;
  lock = (os_unfair_lock_s *)(*(_QWORD *)(v8 + 24) + 16);
  os_unfair_lock_lock(lock);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a7;
  *(_QWORD *)(v15 + 24) = a8;
  swift_retain();
  v16 = (void *)sub_2486F1180((uint64_t)sub_2486F5250, v15);
  swift_release();
  v17 = (void *)sub_2487B51F8();
  v18 = (id)TTSVBSiriTTSTrainerTaskModeStringForMode(a2);
  if (!v18)
  {
    sub_2487B5528();
    v18 = (__CFString *)sub_2487B5504();
    swift_bridgeObjectRelease();
  }
  if ((a6 & 1) != 0)
    v19 = -1;
  else
    v19 = a5;
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v9;
  v20[3] = a7;
  v20[4] = a8;
  aBlock[4] = sub_2486F4918;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F20F8;
  aBlock[3] = &block_descriptor_62;
  v21 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v16, sel_trainModelWithVoiceID_mode_startImmediately_skipValidation_overrideMinimumPhraseCount_reply_, v17, v18, a3 & 1, a4 & 1, v19, v21);
  swift_unknownObjectRelease();

  _Block_release(v21);
  os_unfair_lock_unlock(lock);
}

void TTSVBService.discardTrainingTasks(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  void *v9;
  _QWORD v10[6];

  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 24) + 16);
  os_unfair_lock_lock(v5);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  swift_retain();
  v7 = (void *)sub_2486F1180((uint64_t)sub_2486F5250, v6);
  swift_release();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v2;
  v8[3] = a1;
  v8[4] = a2;
  v10[4] = sub_2486F4918;
  v10[5] = v8;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_2486F20F8;
  v10[3] = &block_descriptor_53;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_discardTrainingTasksWithReply_, v9);
  _Block_release(v9);
  swift_unknownObjectRelease();
  os_unfair_lock_unlock(v5);
}

void TTSVBService.cancelTrainingTask(taskID:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  os_unfair_lock_s *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  _QWORD *v11;
  void *v12;
  _QWORD v13[6];

  v7 = (os_unfair_lock_s *)(*(_QWORD *)(v4 + 24) + 16);
  os_unfair_lock_lock(v7);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  swift_retain();
  v9 = (void *)sub_2486F1180((uint64_t)sub_2486F5250, v8);
  swift_release();
  v10 = (void *)sub_2487B5504();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v4;
  v11[3] = a3;
  v11[4] = a4;
  v13[4] = sub_2486F4918;
  v13[5] = v11;
  v13[0] = MEMORY[0x24BDAC760];
  v13[1] = 1107296256;
  v13[2] = sub_2486F20F8;
  v13[3] = &block_descriptor_44;
  v12 = _Block_copy(v13);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_cancelTrainingTaskWithTaskID_reply_, v10, v12);
  _Block_release(v12);
  swift_unknownObjectRelease();

  os_unfair_lock_unlock(v7);
}

void TTSVBService.requestVoiceCacheRebuildIfNeeded(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  uint64_t v6;
  void *v7;

  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 24) + 16);
  os_unfair_lock_lock(v5);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  swift_retain();
  v7 = (void *)sub_2486F1180((uint64_t)sub_2486F5250, v6);
  swift_release();
  objc_msgSend(v7, sel_requestVoiceCacheRebuildIfNeeded);
  sub_2486F18FC(a1, a2, 0);
  swift_unknownObjectRelease();
  os_unfair_lock_unlock(v5);
}

void TTSVBService.repairDatastoreFromFilesystem(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  void *v9;
  _QWORD v10[6];

  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 24) + 16);
  os_unfair_lock_lock(v5);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  swift_retain();
  v7 = (void *)sub_2486F1180((uint64_t)sub_2486F5250, v6);
  swift_release();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v2;
  v8[3] = a1;
  v8[4] = a2;
  v10[4] = sub_2486F4918;
  v10[5] = v8;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_2486F20F8;
  v10[3] = &block_descriptor_26;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_repairDatastoreFromFilesystemWithReply_, v9);
  _Block_release(v9);
  swift_unknownObjectRelease();
  os_unfair_lock_unlock(v5);
}

uint64_t sub_2486F4688()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445F6C8);
  if (swift_isClassType())
    v1 = v0;
  else
    v1 = 0;
  if (v1)
    v2 = (uint64_t *)&unk_25445F358;
  else
    v2 = (uint64_t *)&unk_25445F6D0;
  return __swift_instantiateConcreteTypeFromMangledName(v2);
}

id _s31TextToSpeechVoiceBankingSupport12TTSVBServiceC26configuredServiceInterfaceSo14NSXPCInterfaceCyFZ_0()
{
  id v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_2577971A8);
  sub_2486F4688();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2487B72B0;
  v2 = type metadata accessor for TTSVBBoxedError(0);
  *(_QWORD *)(inited + 32) = v2;
  sub_2486F0874(inited);
  swift_setDeallocating();
  sub_2486F4688();
  v3 = swift_initStackObject();
  *(_OWORD *)(v3 + 16) = xmmword_2487B72B0;
  *(_QWORD *)(v3 + 32) = v2;
  sub_2486F0874(v3);
  swift_setDeallocating();
  sub_2486F4688();
  v4 = swift_initStackObject();
  *(_OWORD *)(v4 + 16) = xmmword_2487B72B0;
  *(_QWORD *)(v4 + 32) = v2;
  sub_2486F0874(v4);
  swift_setDeallocating();
  return v0;
}

unint64_t sub_2486F47E4()
{
  unint64_t result;

  result = qword_25445F6C0;
  if (!qword_25445F6C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25445F6C0);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24959AEA8](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_2486F4868(void *a1)
{
  uint64_t *v1;

  return sub_2486F136C(a1, v1[2], v1[3], v1[4]);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t type metadata accessor for TTSVBService()
{
  return objc_opt_self();
}

uint64_t method lookup function for TTSVBService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TTSVBService.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

void type metadata accessor for os_unfair_lock_s()
{
  unint64_t ForeignTypeMetadata;
  uint64_t v1;

  if (!qword_25445ED10)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1)
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_25445ED10);
  }
}

uint64_t sub_2486F491C()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2486F4948()
{
  uint64_t v0;

  return sub_2486F1AEC(*(_QWORD **)(v0 + 16), *(void (**)(char *))(v0 + 24));
}

uint64_t sub_2486F4954(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24959AEB4](MEMORY[0x24BEE12C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2486F4994(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTSVBError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2486F49E4(uint64_t a1)
{
  uint64_t v1;

  return sub_2486F22E0(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), &qword_25777C188);
}

uint64_t sub_2486F4A08(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t *v3;

  return sub_2486F3BE4(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_2486F4A14(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_2486F4A28(a1, a2);
  return a1;
}

uint64_t sub_2486F4A28(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_2486F4A6C()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 >> 60 != 15)
    sub_2486F4A28(*(_QWORD *)(v0 + 16), v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2486F4AB0()
{
  uint64_t v0;

  return sub_2486F3DF8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(uint64_t *))(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD **)(v0 + 48));
}

uint64_t sub_2486F4AC0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_2486F4AD4(a1, a2);
  return a1;
}

uint64_t sub_2486F4AD4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_2486F4B18(uint64_t a1)
{
  uint64_t v1;

  return sub_2486F22E0(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), &qword_25445ED20);
}

uint64_t sub_2486F4B3C(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;

  return sub_2486F3540(a1, a2, v2[2], v2[3], v2[4], (uint64_t)&unk_25198ED58, (uint64_t)sub_2486F4B74, (uint64_t)&block_descriptor_92);
}

uint64_t sub_2486F4B74()
{
  uint64_t v0;

  return sub_2486F3980(*(void (**)(uint64_t *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_2486F4B80(uint64_t a1)
{
  uint64_t v1;

  return sub_2486F22E0(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), &qword_25777C1A0);
}

uint64_t sub_2486F4BA4(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;

  return sub_2486F3540(a1, a2, v2[2], v2[3], v2[4], (uint64_t)&unk_25198EE20, (uint64_t)sub_2486F4BDC, (uint64_t)&block_descriptor_107);
}

uint64_t sub_2486F4BDC()
{
  uint64_t v0;

  return sub_2486F3740(*(void (**)(uint64_t *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_2486F4BE8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2486F4C0C(uint64_t a1)
{
  uint64_t v1;

  return sub_2486F22E0(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), &qword_25777C1B8);
}

uint64_t sub_2486F4C30(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;

  return sub_2486F3540(a1, a2, v2[2], v2[3], v2[4], (uint64_t)&unk_25198EEE8, (uint64_t)sub_2486F4C94, (uint64_t)&block_descriptor_122);
}

uint64_t objectdestroy_88Tm()
{
  uint64_t v0;

  swift_release();
  sub_2486F4A28(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_2486F4C94()
{
  uint64_t v0;

  return sub_2486F3290(*(void (**)(uint64_t *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_2486F4CA0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x24959AEB4](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2486F4CE4(uint64_t a1)
{
  uint64_t v1;

  return sub_2486F22E0(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), &qword_25445F1C8);
}

uint64_t sub_2486F4D08(uint64_t a1)
{
  uint64_t v1;

  return sub_2486F22E0(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), &qword_25777C1D0);
}

uint64_t sub_2486F4D2C(uint64_t a1, void *a2)
{
  uint64_t *v2;

  return sub_2486F288C(a1, a2, v2[2], v2[3], v2[4], &qword_25445ED28, (uint64_t)&unk_25198F0A0, (uint64_t)sub_2486F4D88, (uint64_t)&block_descriptor_155);
}

uint64_t sub_2486F4D74()
{
  return objectdestroy_151Tm(&qword_25445ED28, (uint64_t (*)(_QWORD))MEMORY[0x24BDCDAB8]);
}

uint64_t sub_2486F4D88()
{
  return sub_2486F4FC8(&qword_25445ED28, (uint64_t (*)(_QWORD, _QWORD, _QWORD, char *))sub_2486F2AF8);
}

uint64_t sub_2486F4DB0(void *a1)
{
  uint64_t v1;

  return sub_2486F18FC(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_2486F4DDC(uint64_t a1)
{
  uint64_t v1;

  return sub_2486F22E0(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), &qword_25777C1D8);
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2486F4E2C(uint64_t a1, void *a2)
{
  uint64_t *v2;

  return sub_2486F288C(a1, a2, v2[2], v2[3], v2[4], &qword_25445ED40, (uint64_t)&unk_25198F3C0, (uint64_t)sub_2486F4FB4, (uint64_t)&block_descriptor_215);
}

uint64_t sub_2486F4E74(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2486F4EB8()
{
  return objectdestroy_151Tm(&qword_25445ED40, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA50]);
}

uint64_t objectdestroy_151Tm(uint64_t *a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8) + 80);
  v5 = (v4 + 40) & ~v4;

  swift_release();
  v6 = a2(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v2 + v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2 + v5, v6);
  return swift_deallocObject();
}

uint64_t sub_2486F4F70(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2486F4FB4()
{
  return sub_2486F4FC8(&qword_25445ED40, (uint64_t (*)(_QWORD, _QWORD, _QWORD, char *))sub_2486F1D64);
}

uint64_t sub_2486F4FC8(uint64_t *a1, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, char *))
{
  char *v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8) + 80);
  return a2(*((_QWORD *)v2 + 2), *((_QWORD *)v2 + 3), *((_QWORD *)v2 + 4), &v2[(v3 + 40) & ~v3]);
}

uint64_t sub_2486F5008(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2486F5044()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2486F5070()
{
  uint64_t v0;

  return sub_2486F17C0(*(void (**)(char *))(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_2486F507C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_2486F5094(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TTSVBError(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2486F50D0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2486F50F4()
{
  uint64_t v0;

  return sub_2486F100C(v0, "VoiceBanking connection interrupted.");
}

uint64_t sub_2486F5114()
{
  uint64_t v0;

  return sub_2486F100C(v0, "VoiceBanking connection invalidated.");
}

const char *sub_2486F5254()
{
  return "en-US";
}

uint64_t TTSVBCommonVoiceMO.immutableVoice()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = (*(uint64_t (**)(void))(a2 + 32))();
  if (!v7)
  {
    __break(1u);
    goto LABEL_11;
  }
  v8 = result;
  v9 = v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED40);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 80))(a1, a2);
  v13 = sub_2487B5228();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13);
  if ((_DWORD)result == 1)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56))(a1, a2);
  if (v15)
    v16 = v14;
  else
    v16 = 0x53552D6E65;
  if (v15)
    v17 = v15;
  else
    v17 = 0xE500000000000000;
  return TTSVBVoice.init(name:voiceID:localeID:)(v8, v9, (uint64_t)v12, v16, v17, a3);
}

uint64_t TTSVBCommonVoiceMO.displayName.getter(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v3;

  result = (*(uint64_t (**)(void))(a2 + 32))();
  if (!v3)
    return 0x6E776F6E6B6E753CLL;
  return result;
}

uint64_t sub_2486F53AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;

  ObjectType = swift_getObjectType();
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(ObjectType, a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 16))(v8, a3, a4);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(ObjectType, a2);
  (*(void (**)(uint64_t))(a4 + 40))(v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED40);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 80))(ObjectType, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(a4 + 88))(v12, a3, a4);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56))(ObjectType, a2);
  return (*(uint64_t (**)(uint64_t))(a4 + 64))(v13);
}

uint64_t dispatch thunk of TTSVBCommonVoiceMO.apiVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceMO.apiVersion.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceMO.apiVersion.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceMO.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceMO.name.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceMO.name.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceMO.localeID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceMO.localeID.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceMO.localeID.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceMO.voiceID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceMO.voiceID.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceMO.voiceID.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceMO.models.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceMO.models.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceMO.models.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceMO.samples.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceMO.samples.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceMO.samples.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceMO.getSamples.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceMO.getModels.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t static TTSVBBoxedError.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return byte_25777C1E0;
}

uint64_t static TTSVBBoxedError.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_25777C1E0 = a1;
  return result;
}

uint64_t (*static TTSVBBoxedError.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_2486F56C4(void *a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  void *v5;
  void *v6;

  sub_2487B4E50();
  swift_allocObject();
  sub_2487B4E44();
  type metadata accessor for TTSVBError(0);
  sub_2486F4CA0(&qword_25777C1E8, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
  v2 = sub_2487B4E38();
  v4 = v3;
  swift_release();
  v5 = (void *)sub_2487B50E4();
  v6 = (void *)sub_2487B5504();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

  return sub_2486F4A28(v2, v4);
}

uint64_t type metadata accessor for TTSVBError(uint64_t a1)
{
  return sub_2487095AC(a1, (uint64_t *)&unk_25445FBF0);
}

uint64_t TTSVBError.description.getter()
{
  __int128 *v0;
  uint64_t inited;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  unint64_t v80;
  __int128 v81;
  char v82;
  uint64_t v83;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25777C1F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2487B7370;
  v2 = *((_BYTE *)v0 + 16);
  v81 = *v0;
  v82 = v2;
  TTSVBError.Problem.description.getter();
  *(_QWORD *)(inited + 32) = v3;
  *(_QWORD *)(inited + 40) = v4;
  v5 = type metadata accessor for TTSVBError(0);
  TTSVBError.Reason.description.getter();
  *(_QWORD *)(inited + 48) = v6;
  *(_QWORD *)(inited + 56) = v7;
  v8 = *(void **)((char *)v0 + *(int *)(v5 + 24));
  if (!v8)
  {
    *(_QWORD *)(inited + 64) = 0;
    *(_QWORD *)(inited + 72) = 0;
    v19 = *(_QWORD *)(inited + 40);
    if (v19)
      goto LABEL_49;
LABEL_5:
    v20 = (char *)MEMORY[0x24BEE4AF8];
    v21 = *(_QWORD *)(inited + 56);
    if (!v21)
      goto LABEL_57;
    goto LABEL_52;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777C1F0);
  v9 = swift_initStackObject();
  *(_OWORD *)(v9 + 16) = xmmword_2487B7370;
  v10 = objc_msgSend(v8, sel_localizedDescription);
  v11 = sub_2487B5528();
  v13 = v12;

  *(_QWORD *)(v9 + 32) = v11;
  *(_QWORD *)(v9 + 40) = v13;
  v14 = objc_msgSend(v8, sel_localizedFailureReason);
  if (v14)
  {
    v15 = v14;
    v16 = sub_2487B5528();
    v18 = v17;

  }
  else
  {
    v16 = 0;
    v18 = 0;
  }
  *(_QWORD *)(v9 + 48) = v16;
  *(_QWORD *)(v9 + 56) = v18;
  v22 = objc_msgSend(v8, sel_userInfo);
  v23 = sub_2487B5474();

  if (*(_QWORD *)(v23 + 16) && (v24 = sub_248709700(0xD000000000000012, 0x80000002487C4A70), (v25 & 1) != 0))
  {
    sub_2486F0814(*(_QWORD *)(v23 + 56) + 32 * v24, (uint64_t)&v78);
  }
  else
  {
    v78 = 0u;
    v79 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v79 + 1))
  {
    sub_2486F5008((uint64_t)&v78, (uint64_t *)&unk_25777CBD0);
    goto LABEL_16;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    *(_QWORD *)(v9 + 64) = 0;
    *(_QWORD *)(v9 + 72) = 0;
  }
  v83 = v9;
  v80 = MEMORY[0x24BEE4AF8];
  v26 = objc_msgSend(v8, sel_underlyingErrors);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25445ECF0);
  v27 = sub_2487B5684();

  v28 = sub_248708FD4(v27);
  swift_bridgeObjectRelease();
  sub_2487090E4(v28);
  if (!(v80 >> 62))
  {
    if (!*(_QWORD *)((v80 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_37;
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  v74 = sub_2487B5B64();
  swift_bridgeObjectRelease();
  if (v74)
  {
LABEL_19:
    v75 = inited;
    while (1)
    {
      v29 = (void *)sub_248709394(0);
      v30 = swift_initStackObject();
      *(_OWORD *)(v30 + 16) = xmmword_2487B7370;
      v31 = objc_msgSend(v29, sel_localizedDescription);
      v32 = sub_2487B5528();
      v34 = v33;

      *(_QWORD *)(v30 + 32) = v32;
      *(_QWORD *)(v30 + 40) = v34;
      v35 = objc_msgSend(v29, sel_localizedFailureReason);
      if (v35)
      {
        v36 = v35;
        v37 = sub_2487B5528();
        v39 = v38;

      }
      else
      {
        v37 = 0;
        v39 = 0;
      }
      *(_QWORD *)(v30 + 48) = v37;
      *(_QWORD *)(v30 + 56) = v39;
      v40 = objc_msgSend(v29, sel_userInfo);
      v41 = sub_2487B5474();

      if (*(_QWORD *)(v41 + 16) && (v42 = sub_248709700(0xD000000000000012, 0x80000002487C4A70), (v43 & 1) != 0))
      {
        sub_2486F0814(*(_QWORD *)(v41 + 56) + 32 * v42, (uint64_t)&v76);
      }
      else
      {
        v76 = 0u;
        v77 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v77 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0)
          goto LABEL_32;
      }
      else
      {
        sub_2486F5008((uint64_t)&v76, (uint64_t *)&unk_25777CBD0);
      }
      *(_QWORD *)(v30 + 64) = 0;
      *(_QWORD *)(v30 + 72) = 0;
LABEL_32:
      sub_24870929C((_QWORD *)v30);
      v44 = objc_msgSend(v29, sel_underlyingErrors);
      v45 = sub_2487B5684();

      v46 = sub_248708FD4(v45);
      swift_bridgeObjectRelease();
      sub_2487090E4(v46);

      if (v80 >> 62)
      {
        swift_bridgeObjectRetain();
        v47 = sub_2487B5B64();
        swift_bridgeObjectRelease();
        if (!v47)
        {
LABEL_36:
          v9 = v83;
          inited = v75;
          break;
        }
      }
      else if (!*(_QWORD *)((v80 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_36;
      }
    }
  }
LABEL_37:
  v48 = *(_QWORD *)(v9 + 16);
  if (v48)
  {
    swift_bridgeObjectRetain_n();
    v49 = (uint64_t *)(v9 + 40);
    v50 = (char *)MEMORY[0x24BEE4AF8];
    do
    {
      v52 = *v49;
      if (*v49)
      {
        v53 = *(v49 - 1);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v50 = sub_248709428(0, *((_QWORD *)v50 + 2) + 1, 1, v50);
        v55 = *((_QWORD *)v50 + 2);
        v54 = *((_QWORD *)v50 + 3);
        if (v55 >= v54 >> 1)
          v50 = sub_248709428((char *)(v54 > 1), v55 + 1, 1, v50);
        *((_QWORD *)v50 + 2) = v55 + 1;
        v51 = &v50[16 * v55];
        *((_QWORD *)v51 + 4) = v53;
        *((_QWORD *)v51 + 5) = v52;
      }
      v49 += 2;
      --v48;
    }
    while (v48);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v50 = (char *)MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)&v76 = v50;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25445F138);
  sub_24871869C((unint64_t *)&qword_25445F140, &qword_25445F138, MEMORY[0x24BEE12B0]);
  v56 = sub_2487B5498();
  v58 = v57;
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 64) = v56;
  *(_QWORD *)(inited + 72) = v58;
  v19 = *(_QWORD *)(inited + 40);
  if (!v19)
    goto LABEL_5;
LABEL_49:
  v59 = *(_QWORD *)(inited + 32);
  swift_bridgeObjectRetain();
  v20 = sub_248709428(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v61 = *((_QWORD *)v20 + 2);
  v60 = *((_QWORD *)v20 + 3);
  if (v61 >= v60 >> 1)
    v20 = sub_248709428((char *)(v60 > 1), v61 + 1, 1, v20);
  *((_QWORD *)v20 + 2) = v61 + 1;
  v62 = &v20[16 * v61];
  *((_QWORD *)v62 + 4) = v59;
  *((_QWORD *)v62 + 5) = v19;
  v21 = *(_QWORD *)(inited + 56);
  if (v21)
  {
LABEL_52:
    v63 = *(_QWORD *)(inited + 48);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v20 = sub_248709428(0, *((_QWORD *)v20 + 2) + 1, 1, v20);
    v65 = *((_QWORD *)v20 + 2);
    v64 = *((_QWORD *)v20 + 3);
    if (v65 >= v64 >> 1)
      v20 = sub_248709428((char *)(v64 > 1), v65 + 1, 1, v20);
    *((_QWORD *)v20 + 2) = v65 + 1;
    v66 = &v20[16 * v65];
    *((_QWORD *)v66 + 4) = v63;
    *((_QWORD *)v66 + 5) = v21;
  }
LABEL_57:
  v67 = *(_QWORD *)(inited + 72);
  if (v67)
  {
    v68 = *(_QWORD *)(inited + 64);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v20 = sub_248709428(0, *((_QWORD *)v20 + 2) + 1, 1, v20);
    v70 = *((_QWORD *)v20 + 2);
    v69 = *((_QWORD *)v20 + 3);
    if (v70 >= v69 >> 1)
      v20 = sub_248709428((char *)(v69 > 1), v70 + 1, 1, v20);
    *((_QWORD *)v20 + 2) = v70 + 1;
    v71 = &v20[16 * v70];
    *((_QWORD *)v71 + 4) = v68;
    *((_QWORD *)v71 + 5) = v67;
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)&v81 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25445F138);
  sub_24871869C((unint64_t *)&qword_25445F140, &qword_25445F138, MEMORY[0x24BEE12B0]);
  v72 = sub_2487B5498();
  swift_bridgeObjectRelease();
  return v72;
}

id TTSVBBoxedError.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return TTSVBBoxedError.init(coder:)(a1);
}

id TTSVBBoxedError.init(coder:)(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  objc_class *v13;
  uint64_t v14;
  objc_super v15;
  __int128 v16;

  v3 = type metadata accessor for TTSVBError(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24870A34C(0, &qword_25777C1F8);
  v6 = v1;
  v7 = sub_2487B58DC();
  if (v7
    && (v8 = (void *)v7,
        v16 = xmmword_2487B7380,
        sub_2487B50F0(),
        v8,
        v9 = *((_QWORD *)&v16 + 1),
        *((_QWORD *)&v16 + 1) >> 60 != 15))
  {
    v10 = v16;
    sub_2487B4E2C();
    swift_allocObject();
    sub_2487B4E20();
    sub_2486F4CA0(&qword_25777C200, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
    sub_2487B4E14();
    sub_2486F4A14(v10, v9);
    swift_release();
    sub_24870A2C4((uint64_t)v5, (uint64_t)v6 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport15TTSVBBoxedError_ttsvbError, type metadata accessor for TTSVBError);

    v13 = (objc_class *)type metadata accessor for TTSVBBoxedError(0);
    v15.receiver = v6;
    v15.super_class = v13;
    v11 = objc_msgSendSuper2(&v15, sel_init);

  }
  else
  {

    type metadata accessor for TTSVBBoxedError(0);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v11;
}

id TTSVBBoxedError.__allocating_init(_:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;
  objc_super v6;

  v3 = objc_allocWithZone(v1);
  sub_248709554(a1, (uint64_t)v3 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport15TTSVBBoxedError_ttsvbError, type metadata accessor for TTSVBError);
  v6.receiver = v3;
  v6.super_class = v1;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  sub_2486EDA68(a1, type metadata accessor for TTSVBError);
  return v4;
}

id TTSVBBoxedError.init(_:)(uint64_t a1)
{
  void *v1;
  id v3;
  objc_super v5;

  sub_248709554(a1, (uint64_t)v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport15TTSVBBoxedError_ttsvbError, type metadata accessor for TTSVBError);
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for TTSVBBoxedError(0);
  v3 = objc_msgSendSuper2(&v5, sel_init);
  sub_2486EDA68(a1, type metadata accessor for TTSVBError);
  return v3;
}

uint64_t TTSVBBoxedError.ttsvbError.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_248709554(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport15TTSVBBoxedError_ttsvbError, a1, type metadata accessor for TTSVBError);
}

id TTSVBBoxedError.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void TTSVBBoxedError.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id TTSVBBoxedError.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTSVBBoxedError(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id TTSVBError.boxed.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  objc_class *v4;
  id v5;
  id v6;
  objc_super v8;

  v1 = type metadata accessor for TTSVBError(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_248709554(v0, (uint64_t)v3, type metadata accessor for TTSVBError);
  v4 = (objc_class *)type metadata accessor for TTSVBBoxedError(0);
  v5 = objc_allocWithZone(v4);
  sub_248709554((uint64_t)v3, (uint64_t)v5 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport15TTSVBBoxedError_ttsvbError, type metadata accessor for TTSVBError);
  v8.receiver = v5;
  v8.super_class = v4;
  v6 = objc_msgSendSuper2(&v8, sel_init);
  sub_2486EDA68((uint64_t)v3, type metadata accessor for TTSVBError);
  return v6;
}

uint64_t TTSVBError.problem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 16);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_24870953C(v2, v3, v4);
}

uint64_t TTSVBError.reason.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TTSVBError(0);
  return sub_248709554(v1 + *(int *)(v3 + 20), a1, type metadata accessor for TTSVBError.Reason);
}

void *TTSVBError.wrappedError.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for TTSVBError(0) + 24));
  v2 = v1;
  return v1;
}

uint64_t sub_2486F6704(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2486F6710(*a1, *a2);
}

uint64_t sub_2486F6710(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6E6F73616572;
    else
      v3 = 0x4564657070617277;
    if (v2 == 1)
      v4 = 0xE600000000000000;
    else
      v4 = 0xEC000000726F7272;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x6E6F73616572;
      else
        v6 = 0x4564657070617277;
      if (v5 == 1)
        v7 = 0xE600000000000000;
      else
        v7 = 0xEC000000726F7272;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6D656C626F7270;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6D656C626F7270)
  {
LABEL_21:
    v8 = sub_2487B5CE4();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2486F6830()
{
  sub_2487B5D5C();
  sub_2487B557C();
  swift_bridgeObjectRelease();
  return sub_2487B5D98();
}

uint64_t sub_2486F68D4()
{
  sub_2487B557C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2486F6954()
{
  sub_2487B5D5C();
  sub_2487B557C();
  swift_bridgeObjectRelease();
  return sub_2487B5D98();
}

uint64_t sub_2486F69F4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24870A1D0();
  *a1 = result;
  return result;
}

void sub_2486F6A20(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE600000000000000;
  v5 = 0x6E6F73616572;
  if (v2 != 1)
  {
    v5 = 0x4564657070617277;
    v4 = 0xEC000000726F7272;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6D656C626F7270;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_2486F6A84()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E6F73616572;
  if (*v0 != 1)
    v1 = 0x4564657070617277;
  if (*v0)
    return v1;
  else
    return 0x6D656C626F7270;
}

uint64_t sub_2486F6AE4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24870A1D0();
  *a1 = result;
  return result;
}

uint64_t sub_2486F6B08()
{
  return 0;
}

void sub_2486F6B14(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_2486F6B20()
{
  sub_24870A23C();
  return sub_2487B5DBC();
}

uint64_t sub_2486F6B48()
{
  sub_24870A23C();
  return sub_2487B5DC8();
}

uint64_t TTSVBError.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  __int128 v29;
  char v30;
  char v31;

  v25 = a2;
  v26 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v26);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C208);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTSVBError(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_24870A23C();
  v13 = v28;
  sub_2487B5DA4();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
  v14 = (uint64_t)v11;
  v31 = 0;
  sub_24870A280();
  v15 = v8;
  sub_2487B5C24();
  v17 = v30;
  *(_OWORD *)v11 = v29;
  v11[16] = v17;
  LOBYTE(v29) = 1;
  sub_2486F4CA0(&qword_25777C220, type metadata accessor for TTSVBError.Reason, (uint64_t)&protocol conformance descriptor for TTSVBError.Reason);
  sub_2487B5C24();
  sub_24870A2C4((uint64_t)v4, (uint64_t)&v11[*(int *)(v9 + 20)], type metadata accessor for TTSVBError.Reason);
  v31 = 2;
  sub_24870A308();
  sub_2487B5BDC();
  v28 = 0;
  v18 = v8;
  v19 = *((_QWORD *)&v29 + 1);
  if (*((_QWORD *)&v29 + 1) >> 60 == 15)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    v20 = 0;
    v21 = v25;
  }
  else
  {
    v26 = v5;
    v22 = v29;
    sub_24870A34C(0, (unint64_t *)&unk_25777C230);
    sub_24870A34C(0, qword_25445F708);
    v23 = v22;
    v24 = sub_2487B57F8();
    v21 = v25;
    v20 = v24;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v18, v26);
    sub_2486F4A14(v23, v19);
  }
  *(_QWORD *)(v14 + *(int *)(v9 + 24)) = v20;
  sub_248709554(v14, v21, type metadata accessor for TTSVBError);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
  return sub_2486EDA68(v14, type metadata accessor for TTSVBError);
}

uint64_t TTSVBError.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  uint64_t v21;
  char v22;
  __int128 v23;
  char v24;
  uint64_t v25;

  v3 = v1;
  v25 = *MEMORY[0x24BDAC8D0];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C240);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24870A23C();
  sub_2487B5DB0();
  v9 = *((_BYTE *)v3 + 16);
  v23 = *v3;
  v24 = v9;
  v22 = 0;
  sub_24870A384();
  sub_2487B5CA8();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v10 = type metadata accessor for TTSVBError(0);
  LOBYTE(v23) = 1;
  type metadata accessor for TTSVBError.Reason(0);
  sub_2486F4CA0(&qword_25777C250, type metadata accessor for TTSVBError.Reason, (uint64_t)&protocol conformance descriptor for TTSVBError.Reason);
  sub_2487B5CA8();
  v12 = *(void **)((char *)v3 + *(int *)(v10 + 24));
  if (!v12)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v13 = (void *)objc_opt_self();
  *(_QWORD *)&v23 = 0;
  v14 = v12;
  v15 = objc_msgSend(v13, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v14, 1, &v23);
  v16 = (id)v23;
  if (!v15)
  {
    v20 = v16;
    sub_2487B4F64();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v17 = sub_2487B50FC();
  v19 = v18;

  *(_QWORD *)&v23 = v17;
  *((_QWORD *)&v23 + 1) = v19;
  v22 = 2;
  sub_24870A3C8();
  sub_2487B5CA8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

  return sub_2486F4A28(v17, v19);
}

unint64_t TTSVBError.errorDescription.getter()
{
  return 0xD000000000000011;
}

uint64_t TTSVBError.failureReason.getter()
{
  _QWORD v1[2];

  strcpy((char *)v1, "Error Code: ");
  type metadata accessor for TTSVBError(0);
  TTSVBError.Reason.errorCode.getter();
  sub_2487B5CCC();
  sub_2487B55AC();
  swift_bridgeObjectRelease();
  return v1[0];
}

void TTSVBError.Reason.errorCode.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v1);
  sub_248709554(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_2486F72E0 + 4 * word_2487B7390[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2486F72E0()
{
  uint64_t v0;

  sub_2486EDA68(v0, type metadata accessor for TTSVBError.Reason);
  return 0;
}

void TTSVBError.Problem.description.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_2486F7740()
{
  uint64_t v0;

  swift_bridgeObjectRetain();
  return v0;
}

void TTSVBError.Reason.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v1);
  sub_248709554(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_2486F7AFC + 4 * word_2487B7428[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2486F7AFC()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_2486F8CA4()
{
  type metadata accessor for TTSVBError.Reason(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t TTSVBError.init(_:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v7;
  uint64_t v8;
  uint64_t result;

  v7 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(_BYTE *)(a4 + 16) = v7;
  v8 = type metadata accessor for TTSVBError(0);
  result = sub_24870A2C4(a2, a4 + *(int *)(v8 + 20), type metadata accessor for TTSVBError.Reason);
  *(_QWORD *)(a4 + *(int *)(v8 + 24)) = a3;
  return result;
}

uint64_t TTSVBError.init(_:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;

  type metadata accessor for TTSVBError.Reason(0);
  v12 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v14 = (uint64_t *)((char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v19 - v15;
  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = a2;
  *(_BYTE *)(a6 + 16) = 0;
  if (a4)
  {
    *v14 = a3;
    v14[1] = a4;
    swift_storeEnumTagMultiPayload();
    sub_24870A2C4((uint64_t)v14, (uint64_t)v16, type metadata accessor for TTSVBError.Reason);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
  }
  v17 = type metadata accessor for TTSVBError(0);
  result = sub_24870A2C4((uint64_t)v16, a6 + *(int *)(v17 + 20), type metadata accessor for TTSVBError.Reason);
  *(_QWORD *)(a6 + *(int *)(v17 + 24)) = a5;
  return result;
}

void sub_2486F8E48(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 3;
}

uint64_t static TTSVBError.map(_:_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  id v12;
  uint64_t v13;
  int v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  _QWORD v17[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)a2;
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(_BYTE *)(a2 + 16);
  v17[1] = a1;
  v12 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25445ECF0);
  v13 = type metadata accessor for TTSVBError(0);
  v14 = swift_dynamicCast();
  v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  if (v14)
  {
    v15(v8, 0, 1, v13);
    return sub_24870A2C4((uint64_t)v8, a3, type metadata accessor for TTSVBError);
  }
  else
  {
    v15(v8, 1, 1, v13);
    sub_2486F5008((uint64_t)v8, &qword_25445ED50);
    type metadata accessor for TTSVBError.Reason(0);
    swift_storeEnumTagMultiPayload();
    sub_24870953C(v9, v10, v11);
    result = sub_2487B4F58();
    *(_QWORD *)a3 = v9;
    *(_QWORD *)(a3 + 8) = v10;
    *(_BYTE *)(a3 + 16) = v11;
    *(_QWORD *)(a3 + *(int *)(v13 + 24)) = result;
  }
  return result;
}

void static TTSVBError.perform<A>(_:orThrow:)(void (*a1)(void), uint64_t a2, void (*a3)(void))
{
  void *v3;

  a1();
  if (v3)
  {
    type metadata accessor for TTSVBError(0);
    sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
    swift_allocError();
    a3();
    swift_willThrow();

  }
}

void static TTSVBError.perform<A>(_:errorTransform:)(void (*a1)(void), uint64_t a2, void (*a3)(void *))
{
  void *v3;

  a1();
  if (v3)
  {
    type metadata accessor for TTSVBError(0);
    sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
    swift_allocError();
    a3(v3);
    swift_willThrow();

  }
}

void static TTSVBError.perform<A>(_:problem:reason:)(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v19 = a4;
  v7 = type metadata accessor for TTSVBError.Reason(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)a3;
  v12 = *(_QWORD *)(a3 + 8);
  v13 = *(_BYTE *)(a3 + 16);
  a1(v8);
  if (v4)
  {
    sub_248709554(v19, (uint64_t)v10, type metadata accessor for TTSVBError.Reason);
    sub_24870953C(v11, v12, v13);
    v14 = sub_2487B4F58();
    v15 = type metadata accessor for TTSVBError(0);
    sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
    swift_allocError();
    v17 = v16;
    *(_QWORD *)v16 = v11;
    *(_QWORD *)(v16 + 8) = v12;
    *(_BYTE *)(v16 + 16) = v13;
    sub_24870A2C4((uint64_t)v10, v16 + *(int *)(v15 + 20), type metadata accessor for TTSVBError.Reason);
    *(_QWORD *)(v17 + *(int *)(v15 + 24)) = v14;
    swift_willThrow();

  }
}

uint64_t static TTSVBError.unwrap<A>(_:_:)@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v8 = sub_2487B5924();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v14 - v10, a1, v8);
  v12 = *(_QWORD *)(a3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, a3) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a4, v11, a3);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  type metadata accessor for TTSVBError(0);
  sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
  swift_allocError();
  a2();
  return swift_willThrow();
}

uint64_t static TTSVBError.unwrap<A>(_:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v24 = a5;
  v25 = a3;
  v8 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2487B5924();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v24 - v14;
  v16 = *(_QWORD *)(a2 + 8);
  v26 = *(_QWORD *)a2;
  v17 = *(_BYTE *)(a2 + 16);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16))((char *)&v24 - v14, a1, v11, v13);
  v18 = *(_QWORD *)(a4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v15, 1, a4) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(v24, v15, a4);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  sub_248709554(v25, (uint64_t)v10, type metadata accessor for TTSVBError.Reason);
  v19 = type metadata accessor for TTSVBError(0);
  sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
  swift_allocError();
  v21 = v20;
  v22 = v26;
  *(_QWORD *)v20 = v26;
  *(_QWORD *)(v20 + 8) = v16;
  *(_BYTE *)(v20 + 16) = v17;
  sub_24870A2C4((uint64_t)v10, v20 + *(int *)(v19 + 20), type metadata accessor for TTSVBError.Reason);
  *(_QWORD *)(v21 + *(int *)(v19 + 24)) = 0;
  sub_24870953C(v22, v16, v17);
  return swift_willThrow();
}

void __swiftcall TTSVBError.convertToNSError()(NSError *__return_ptr retstr)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  void *v22;
  _OWORD v23[2];
  __int128 v24;
  uint64_t v25;

  sub_2486F9814(MEMORY[0x24BEE4AF8]);
  v1 = sub_2487B5528();
  v3 = v2;
  v4 = MEMORY[0x24BEE0D00];
  v25 = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v24 = 0xD000000000000011;
  *((_QWORD *)&v24 + 1) = 0x80000002487C3070;
  sub_24870A40C(&v24, v23);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_248709BA8(v23, v1, v3, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  strcpy((char *)&v24, "Error Code: ");
  BYTE13(v24) = 0;
  HIWORD(v24) = -5120;
  type metadata accessor for TTSVBError(0);
  TTSVBError.Reason.errorCode.getter();
  *(_QWORD *)&v23[0] = v6;
  sub_2487B5CCC();
  sub_2487B55AC();
  swift_bridgeObjectRelease();
  v7 = v24;
  v8 = sub_2487B5528();
  v10 = v9;
  v25 = v4;
  v24 = v7;
  sub_24870A40C(&v24, v23);
  v11 = swift_isUniquelyReferenced_nonNull_native();
  sub_248709BA8(v23, v8, v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = sub_2487B5528();
  v14 = v13;
  v15 = TTSVBError.description.getter();
  v25 = v4;
  *(_QWORD *)&v24 = v15;
  *((_QWORD *)&v24 + 1) = v16;
  sub_24870A40C(&v24, v23);
  v17 = swift_isUniquelyReferenced_nonNull_native();
  sub_248709BA8(v23, v12, v14, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  TTSVBError.Reason.errorCode.getter();
  v19 = v18;
  v20 = objc_allocWithZone(MEMORY[0x24BDD1540]);
  v21 = (void *)sub_2487B5504();
  v22 = (void *)sub_2487B545C();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_initWithDomain_code_userInfo_, v21, v19, v22);

}

unint64_t sub_2486F9814(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777C908);
  v2 = sub_2487B5B88();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_248718654(v6, (uint64_t)&v15);
    v7 = v15;
    v8 = v16;
    result = sub_248709700(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_24870A40C(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void TTSVBError.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  TTSVBError.Problem.hash(into:)();
  v1 = type metadata accessor for TTSVBError(0);
  TTSVBError.Reason.hash(into:)();
  v2 = *(void **)(v0 + *(int *)(v1 + 24));
  sub_2487B5D74();
  if (v2)
  {
    v3 = v2;
    sub_2487B590C();

  }
}

uint64_t TTSVBError.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  sub_2487B5D5C();
  TTSVBError.Problem.hash(into:)();
  v1 = type metadata accessor for TTSVBError(0);
  TTSVBError.Reason.hash(into:)();
  v2 = *(void **)(v0 + *(int *)(v1 + 24));
  sub_2487B5D74();
  if (v2)
  {
    v3 = v2;
    sub_2487B590C();

  }
  return sub_2487B5D98();
}

unint64_t sub_2486F9AB4()
{
  return 0xD000000000000011;
}

uint64_t sub_2486F9AD0()
{
  _QWORD v1[2];

  strcpy((char *)v1, "Error Code: ");
  TTSVBError.Reason.errorCode.getter();
  sub_2487B5CCC();
  sub_2487B55AC();
  swift_bridgeObjectRelease();
  return v1[0];
}

uint64_t sub_2486F9B50()
{
  return sub_2487B4EC8();
}

uint64_t sub_2486F9B64()
{
  return sub_2487B4EBC();
}

void sub_2486F9B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  id v5;

  TTSVBError.Problem.hash(into:)();
  TTSVBError.Reason.hash(into:)();
  v4 = *(void **)(v2 + *(int *)(a2 + 24));
  sub_2487B5D74();
  if (v4)
  {
    v5 = v4;
    sub_2487B590C();

  }
}

uint64_t sub_2486F9C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  id v5;

  sub_2487B5D5C();
  TTSVBError.Problem.hash(into:)();
  TTSVBError.Reason.hash(into:)();
  v4 = *(void **)(v2 + *(int *)(a2 + 24));
  sub_2487B5D74();
  if (v4)
  {
    v5 = v4;
    sub_2487B590C();

  }
  return sub_2487B5D98();
}

uint64_t sub_2486F9CD4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TTSVBError.init(from:)(a1, a2);
}

uint64_t sub_2486F9CE8(_QWORD *a1)
{
  return TTSVBError.encode(to:)(a1);
}

void TTSVBError.Problem.hash(into:)()
{
  __asm { BR              X10 }
}

uint64_t sub_2486F9D48()
{
  sub_2487B5D68();
  return sub_2487B557C();
}

uint64_t sub_2486F9D78()
{
  sub_2487B5D68();
  return sub_2487B5D74();
}

uint64_t sub_2486F9E8C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2486F9EBC + 4 * byte_2487B74C0[a1]))(0x6D6F74737563, 0xE600000000000000);
}

uint64_t sub_2486F9EBC()
{
  return 0x6669636570736E75;
}

unint64_t sub_2486F9EDC()
{
  return 0xD000000000000018;
}

uint64_t sub_2486FA150()
{
  unsigned __int8 *v0;

  return sub_2486F9E8C(*v0);
}

uint64_t sub_2486FA158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2487166AC(a1, a2);
  *a3 = result;
  return result;
}

void sub_2486FA17C(_BYTE *a1@<X8>)
{
  *a1 = 29;
}

uint64_t sub_2486FA188()
{
  sub_24870C0A8();
  return sub_2487B5DBC();
}

uint64_t sub_2486FA1B0()
{
  sub_24870C0A8();
  return sub_2487B5DC8();
}

uint64_t sub_2486FA1D8()
{
  return 0;
}

void sub_2486FA1E4(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_2486FA1F0()
{
  sub_24870C708();
  return sub_2487B5DBC();
}

uint64_t sub_2486FA218()
{
  sub_24870C708();
  return sub_2487B5DC8();
}

uint64_t sub_2486FA240()
{
  sub_24870C680();
  return sub_2487B5DBC();
}

uint64_t sub_2486FA268()
{
  sub_24870C680();
  return sub_2487B5DC8();
}

uint64_t sub_2486FA290()
{
  sub_24870C1B8();
  return sub_2487B5DBC();
}

uint64_t sub_2486FA2B8()
{
  sub_24870C1B8();
  return sub_2487B5DC8();
}

uint64_t sub_2486FA2E0()
{
  sub_24870C174();
  return sub_2487B5DBC();
}

uint64_t sub_2486FA308()
{
  sub_24870C174();
  return sub_2487B5DC8();
}

uint64_t sub_2486FA330()
{
  sub_24870C52C();
  return sub_2487B5DBC();
}

uint64_t sub_2486FA358()
{
  sub_24870C52C();
  return sub_2487B5DC8();
}

uint64_t sub_2486FA380()
{
  sub_24870C30C();
  return sub_2487B5DBC();
}

uint64_t sub_2486FA3A8()
{
  sub_24870C30C();
  return sub_2487B5DC8();
}

uint64_t sub_2486FA3D0()
{
  sub_24870C350();
  return sub_2487B5DBC();
}

uint64_t sub_2486FA3F8()
{
  sub_24870C350();
  return sub_2487B5DC8();
}

uint64_t sub_2486FA420()
{
  sub_24870C284();
  return sub_2487B5DBC();
}

uint64_t sub_2486FA448()
{
  sub_24870C284();
  return sub_2487B5DC8();
}

uint64_t sub_2486FA470()
{
  sub_24870C6C4();
  return sub_2487B5DBC();
}

uint64_t sub_2486FA498()
{
  sub_24870C6C4();
  return sub_2487B5DC8();
}

uint64_t sub_2486FA4C0()
{
  sub_24870C3D8();
  return sub_2487B5DBC();
}

uint64_t sub_2486FA4E8()
{
  sub_24870C3D8();
  return sub_2487B5DC8();
}

uint64_t sub_2486FA510()
{
  sub_24870C394();
  return sub_2487B5DBC();
}

uint64_t sub_2486FA538()
{
  sub_24870C394();
  return sub_2487B5DC8();
}

uint64_t sub_2486FA560()
{
  sub_24870C1FC();
  return sub_2487B5DBC();
}

uint64_t sub_2486FA588()
{
  sub_24870C1FC();
  return sub_2487B5DC8();
}

uint64_t sub_2486FA5B0()
{
  sub_24870C5F8();
  return sub_2487B5DBC();
}

uint64_t sub_2486FA5D8()
{
  sub_24870C5F8();
  return sub_2487B5DC8();
}

uint64_t sub_2486FA600()
{
  sub_24870C570();
  return sub_2487B5DBC();
}

uint64_t sub_2486FA628()
{
  sub_24870C570();
  return sub_2487B5DC8();
}

uint64_t sub_2486FA650()
{
  sub_24870C2C8();
  return sub_2487B5DBC();
}

uint64_t sub_2486FA678()
{
  sub_24870C2C8();
  return sub_2487B5DC8();
}

uint64_t sub_2486FA6A0()
{
  sub_24870C4E8();
  return sub_2487B5DBC();
}

uint64_t sub_2486FA6C8()
{
  sub_24870C4E8();
  return sub_2487B5DC8();
}

uint64_t sub_2486FA6F0()
{
  sub_24870C240();
  return sub_2487B5DBC();
}

uint64_t sub_2486FA718()
{
  sub_24870C240();
  return sub_2487B5DC8();
}

uint64_t sub_2486FA740()
{
  sub_24870C41C();
  return sub_2487B5DBC();
}

uint64_t sub_2486FA768()
{
  sub_24870C41C();
  return sub_2487B5DC8();
}

uint64_t sub_2486FA790()
{
  sub_24870C63C();
  return sub_2487B5DBC();
}

uint64_t sub_2486FA7B8()
{
  sub_24870C63C();
  return sub_2487B5DC8();
}

uint64_t sub_2486FA7E0()
{
  sub_24870C5B4();
  return sub_2487B5DBC();
}

uint64_t sub_2486FA808()
{
  sub_24870C5B4();
  return sub_2487B5DC8();
}

uint64_t sub_2486FA830()
{
  return 1;
}

uint64_t sub_2486FA840()
{
  return 12383;
}

uint64_t sub_2486FA850()
{
  sub_24870C74C();
  return sub_2487B5DBC();
}

uint64_t sub_2486FA878()
{
  sub_24870C74C();
  return sub_2487B5DC8();
}

uint64_t sub_2486FA8A0()
{
  sub_24870C790();
  return sub_2487B5DBC();
}

uint64_t sub_2486FA8C8()
{
  sub_24870C790();
  return sub_2487B5DC8();
}

uint64_t sub_2486FA8F0()
{
  sub_24870C7D4();
  return sub_2487B5DBC();
}

uint64_t sub_2486FA918()
{
  sub_24870C7D4();
  return sub_2487B5DC8();
}

uint64_t sub_2486FA940()
{
  sub_24870C4A4();
  return sub_2487B5DBC();
}

uint64_t sub_2486FA968()
{
  sub_24870C4A4();
  return sub_2487B5DC8();
}

uint64_t sub_2486FA990()
{
  sub_24870C460();
  return sub_2487B5DBC();
}

uint64_t sub_2486FA9B8()
{
  sub_24870C460();
  return sub_2487B5DC8();
}

uint64_t sub_2486FA9E0()
{
  sub_24870C130();
  return sub_2487B5DBC();
}

uint64_t sub_2486FAA08()
{
  sub_24870C130();
  return sub_2487B5DC8();
}

uint64_t sub_2486FAA30()
{
  sub_24870C0EC();
  return sub_2487B5DBC();
}

uint64_t sub_2486FAA58()
{
  sub_24870C0EC();
  return sub_2487B5DC8();
}

uint64_t sub_2486FAA80()
{
  sub_24870C85C();
  return sub_2487B5DBC();
}

uint64_t sub_2486FAAA8()
{
  sub_24870C85C();
  return sub_2487B5DC8();
}

uint64_t sub_2486FAAD0()
{
  sub_24870C818();
  return sub_2487B5DBC();
}

uint64_t sub_2486FAAF8()
{
  sub_24870C818();
  return sub_2487B5DC8();
}

void TTSVBError.Problem.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  _QWORD v40[2];
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C270);
  v115 = *(_QWORD *)(v3 - 8);
  v116 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v114 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C278);
  v112 = *(_QWORD *)(v5 - 8);
  v113 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v111 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C280);
  v109 = *(_QWORD *)(v7 - 8);
  v110 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v108 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C288);
  v106 = *(_QWORD *)(v107 - 8);
  MEMORY[0x24BDAC7A8](v107);
  v105 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C290);
  v103 = *(_QWORD *)(v104 - 8);
  MEMORY[0x24BDAC7A8](v104);
  v102 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C298);
  v100 = *(_QWORD *)(v101 - 8);
  MEMORY[0x24BDAC7A8](v101);
  v99 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C2A0);
  v97 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98);
  v96 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C2A8);
  v94 = *(_QWORD *)(v95 - 8);
  MEMORY[0x24BDAC7A8](v95);
  v93 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C2B0);
  v91 = *(_QWORD *)(v92 - 8);
  MEMORY[0x24BDAC7A8](v92);
  v90 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C2B8);
  v88 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89);
  v87 = (char *)v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C2C0);
  v85 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v84 = (char *)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C2C8);
  v82 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v81 = (char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C2D0);
  v79 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v78 = (char *)v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C2D8);
  v76 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v75 = (char *)v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C2E0);
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v72 = (char *)v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C2E8);
  v70 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  v69 = (char *)v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C2F0);
  v67 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v66 = (char *)v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C2F8);
  v64 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v63 = (char *)v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C300);
  v61 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v60 = (char *)v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C308);
  v58 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v57 = (char *)v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C310);
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v54 = (char *)v40 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C318);
  v52 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v51 = (char *)v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C320);
  v49 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v48 = (char *)v40 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C328);
  v46 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v45 = (char *)v40 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C330);
  v121 = *(_QWORD *)(v30 - 8);
  v122 = v30;
  MEMORY[0x24BDAC7A8](v30);
  v120 = (char *)v40 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C338);
  v118 = *(_QWORD *)(v32 - 8);
  v119 = v32;
  MEMORY[0x24BDAC7A8](v32);
  v117 = (char *)v40 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C340);
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v42 = (char *)v40 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C348);
  v40[1] = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v40[0] = (char *)v40 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C350);
  MEMORY[0x24BDAC7A8](v36);
  v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C358);
  v124 = *(_QWORD *)(v126 - 8);
  MEMORY[0x24BDAC7A8](v126);
  v38 = (char *)v40 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = *(_QWORD *)(v1 + 8);
  v39 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24870C0A8();
  v125 = v38;
  sub_2487B5DB0();
  __asm { BR              X9 }
}

uint64_t sub_2486FB490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 65) = 0;
  sub_24870C85C();
  v5 = *(_QWORD *)(v3 - 112);
  v4 = *(_QWORD *)(v3 - 104);
  sub_2487B5C48();
  sub_2487B5C6C();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 120) + 8))(v5, v4);
}

void sub_2486FBD28()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 25;
  sub_24870C1B8();
  sub_2487B5C48();
  JUMPOUT(0x2486FBCE8);
}

void sub_2486FBD78()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 26;
  sub_24870C174();
  sub_2487B5C48();
  JUMPOUT(0x2486FBCE8);
}

uint64_t TTSVBError.Problem.hashValue.getter()
{
  sub_2487B5D5C();
  TTSVBError.Problem.hash(into:)();
  return sub_2487B5D98();
}

uint64_t TTSVBError.Problem.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD v49[5];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;

  v129 = a2;
  v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C360);
  v105 = *(_QWORD *)(v134 - 8);
  MEMORY[0x24BDAC7A8](v134);
  v133 = (char *)v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C368);
  v103 = *(_QWORD *)(v104 - 8);
  MEMORY[0x24BDAC7A8](v104);
  v128 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C370);
  v101 = *(_QWORD *)(v102 - 8);
  MEMORY[0x24BDAC7A8](v102);
  v127 = (char *)v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C378);
  v99 = *(_QWORD *)(v100 - 8);
  MEMORY[0x24BDAC7A8](v100);
  v126 = (char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C380);
  v97 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98);
  v125 = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C388);
  v95 = *(_QWORD *)(v96 - 8);
  MEMORY[0x24BDAC7A8](v96);
  v124 = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C390);
  v93 = *(_QWORD *)(v94 - 8);
  MEMORY[0x24BDAC7A8](v94);
  v123 = (char *)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C398);
  v91 = *(_QWORD *)(v92 - 8);
  MEMORY[0x24BDAC7A8](v92);
  v122 = (char *)v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C3A0);
  v89 = *(_QWORD *)(v90 - 8);
  MEMORY[0x24BDAC7A8](v90);
  v121 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C3A8);
  v87 = *(_QWORD *)(v88 - 8);
  MEMORY[0x24BDAC7A8](v88);
  v120 = (char *)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C3B0);
  v85 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v119 = (char *)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C3B8);
  v83 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v118 = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C3C0);
  v81 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82);
  v117 = (char *)v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C3C8);
  v79 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v116 = (char *)v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C3D0);
  v77 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v115 = (char *)v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C3D8);
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v114 = (char *)v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C3E0);
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v132 = (char *)v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C3E8);
  v65 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v113 = (char *)v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C3F0);
  v68 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  v112 = (char *)v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C3F8);
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v110 = (char *)v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C400);
  v66 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v131 = (char *)v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C408);
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v111 = (char *)v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C410);
  v61 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v130 = (char *)v49 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C418);
  v58 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v108 = (char *)v49 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C420);
  v57 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v109 = (char *)v49 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C428);
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v107 = (char *)v49 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C430);
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v106 = (char *)v49 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C438);
  v51 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v31 = (char *)v49 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C440);
  v33 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v35 = (char *)v49 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C448);
  v36 = *(_QWORD *)(v135 - 8);
  MEMORY[0x24BDAC7A8](v135);
  v38 = (char *)v49 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = a1[3];
  v136 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v39);
  sub_24870C0A8();
  v40 = v137;
  sub_2487B5DA4();
  v137 = v40;
  if (!v40)
  {
    v49[3] = v31;
    v49[4] = v35;
    v49[1] = v33;
    v50 = v36;
    v41 = v38;
    v42 = sub_2487B5C3C();
    if (*(_QWORD *)(v42 + 16) == 1)
    {
      v49[2] = v38;
      __asm { BR              X10 }
    }
    v43 = sub_2487B5AEC();
    v44 = swift_allocError();
    v46 = v45;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25777C450);
    *v46 = &type metadata for TTSVBError.Problem;
    v47 = v135;
    sub_2487B5BC4();
    sub_2487B5AE0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v43 - 8) + 104))(v46, *MEMORY[0x24BEE26D0], v43);
    v137 = v44;
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v41, v47);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v136);
}

uint64_t sub_2486FDB6C()
{
  sub_2487B5D5C();
  TTSVBError.Problem.hash(into:)();
  return sub_2487B5D98();
}

uint64_t sub_2486FDBC0()
{
  sub_2487B5D5C();
  TTSVBError.Problem.hash(into:)();
  return sub_2487B5D98();
}

uint64_t sub_2486FDC0C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TTSVBError.Problem.init(from:)(a1, a2);
}

void sub_2486FDC20(_QWORD *a1)
{
  TTSVBError.Problem.encode(to:)(a1);
}

uint64_t TTSVBError.Reason.localizedTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v9;

  v1 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_248709554(v0, (uint64_t)v3, v4);
  switch(swift_getEnumCaseMultiPayload())
  {
    case '/':
    case '8':
    case '9':
    case ':':
    case ';':
      v6 = (void *)sub_2487B5504();
      v7 = TTSVBSupportLocString(v6);

      v5 = sub_2487B5528();
      break;
    default:
      sub_2486EDA68((uint64_t)v3, type metadata accessor for TTSVBError.Reason);
      v5 = 0;
      break;
  }
  return v5;
}

uint64_t TTSVBError.Reason.localizedDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  unsigned int EnumCaseMultiPayload;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v10;

  v1 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_248709554(v0, (uint64_t)v3, v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload <= 0x3B
    && (((1 << EnumCaseMultiPayload) & 0xD00800000000000) != 0 || EnumCaseMultiPayload == 57))
  {
    v6 = (void *)sub_2487B5504();
    v7 = TTSVBSupportLocString(v6);

    v8 = sub_2487B5528();
  }
  else
  {
    sub_2486EDA68((uint64_t)v3, type metadata accessor for TTSVBError.Reason);
    return 0;
  }
  return v8;
}

uint64_t TTSVBError.Reason.localizedActionTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  unsigned int EnumCaseMultiPayload;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v12;

  v1 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_248709554(v0, (uint64_t)v3, v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload > 0x3B)
    goto LABEL_9;
  if (((1 << EnumCaseMultiPayload) & 0xD00800000000000) != 0)
  {
    v6 = (id)MobileGestalt_get_current_device();
    if (v6)
    {
      v7 = v6;
      MobileGestalt_get_wapiCapability();

    }
    goto LABEL_7;
  }
  if (EnumCaseMultiPayload != 57)
  {
LABEL_9:
    sub_2486EDA68((uint64_t)v3, type metadata accessor for TTSVBError.Reason);
    return 0;
  }
LABEL_7:
  v8 = (void *)sub_2487B5504();
  v9 = TTSVBSupportLocString(v8);

  v10 = sub_2487B5528();
  return v10;
}

void TTSVBError.Reason.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v1);
  sub_248709554(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_2486FE150 + 4 * word_2487B7550[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2486FE150()
{
  sub_2487B5D68();
  sub_2487B557C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2486FED4C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2486FED7C + 4 * word_2487B75CA[a1]))(0x6D6F74737563, 0xE600000000000000);
}

uint64_t sub_2486FED7C()
{
  return 0x6669636570736E75;
}

uint64_t sub_2486FED9C()
{
  return 0x456E776F6E6B6E75;
}

unint64_t sub_2486FEDBC()
{
  return 0xD000000000000010;
}

unint64_t sub_2486FF27C()
{
  return 0xD000000000000016;
}

unint64_t sub_2486FF294()
{
  return 0xD000000000000016;
}

unint64_t sub_2486FF2AC()
{
  return 0xD000000000000011;
}

unint64_t sub_2486FF2C4()
{
  return 0xD00000000000001DLL;
}

unint64_t sub_2486FF2E0()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_2486FF2FC()
{
  return 0xD000000000000017;
}

void sub_2486FF314()
{
  JUMPOUT(0x2486FF328);
}

uint64_t sub_2486FF334()
{
  sub_24870D808();
  return sub_2487B5DBC();
}

uint64_t sub_2486FF35C()
{
  sub_24870D808();
  return sub_2487B5DC8();
}

uint64_t sub_2486FF384()
{
  sub_24870CA7C();
  return sub_2487B5DBC();
}

uint64_t sub_2486FF3AC()
{
  sub_24870CA7C();
  return sub_2487B5DC8();
}

uint64_t sub_2486FF3D4()
{
  sub_24870D1EC();
  return sub_2487B5DBC();
}

uint64_t sub_2486FF3FC()
{
  sub_24870D1EC();
  return sub_2487B5DC8();
}

uint64_t sub_2486FF424()
{
  sub_24870D560();
  return sub_2487B5DBC();
}

uint64_t sub_2486FF44C()
{
  sub_24870D560();
  return sub_2487B5DC8();
}

uint64_t sub_2486FF474()
{
  sub_24870D73C();
  return sub_2487B5DBC();
}

uint64_t sub_2486FF49C()
{
  sub_24870D73C();
  return sub_2487B5DC8();
}

uint64_t sub_2486FF4C4()
{
  sub_24870D6F8();
  return sub_2487B5DBC();
}

uint64_t sub_2486FF4EC()
{
  sub_24870D6F8();
  return sub_2487B5DC8();
}

uint64_t sub_2486FF514()
{
  return 25705;
}

uint64_t sub_2486FF520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2487B5CE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2486FF59C()
{
  sub_24870C96C();
  return sub_2487B5DBC();
}

uint64_t sub_2486FF5C4()
{
  sub_24870C96C();
  return sub_2487B5DC8();
}

uint64_t sub_2486FF5EC()
{
  return 1701667182;
}

uint64_t sub_2486FF600()
{
  sub_24870C9B0();
  return sub_2487B5DBC();
}

uint64_t sub_2486FF628()
{
  sub_24870C9B0();
  return sub_2487B5DC8();
}

BOOL sub_2486FF650(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2486FF664()
{
  sub_2487B5D5C();
  sub_2487B5D68();
  return sub_2487B5D98();
}

uint64_t sub_2486FF6A8()
{
  return sub_2487B5D68();
}

uint64_t sub_2486FF6D0()
{
  sub_2487B5D5C();
  sub_2487B5D68();
  return sub_2487B5D98();
}

uint64_t sub_2486FF710()
{
  unsigned __int8 *v0;

  return sub_2486FED4C(*v0);
}

uint64_t sub_2486FF718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2487170A8(a1, a2);
  *a3 = result;
  return result;
}

void sub_2486FF73C(_BYTE *a1@<X8>)
{
  *a1 = 61;
}

uint64_t sub_2486FF748()
{
  sub_24870C8A0();
  return sub_2487B5DBC();
}

uint64_t sub_2486FF770()
{
  sub_24870C8A0();
  return sub_2487B5DC8();
}

uint64_t sub_2486FF798@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_2486FF7C4()
{
  sub_24870CCE0();
  return sub_2487B5DBC();
}

uint64_t sub_2486FF7EC()
{
  sub_24870CCE0();
  return sub_2487B5DC8();
}

BOOL sub_2486FF814(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_2486FF82C()
{
  _BYTE *v0;

  if (*v0)
    return 12639;
  else
    return 12383;
}

uint64_t sub_2486FF848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_248718594(a1, a2);
  *a3 = result;
  return result;
}

void sub_2486FF86C(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_2486FF878()
{
  sub_24870D0DC();
  return sub_2487B5DBC();
}

uint64_t sub_2486FF8A0()
{
  sub_24870D0DC();
  return sub_2487B5DC8();
}

uint64_t sub_2486FF8C8()
{
  sub_24870CD24();
  return sub_2487B5DBC();
}

uint64_t sub_2486FF8F0()
{
  sub_24870CD24();
  return sub_2487B5DC8();
}

uint64_t sub_2486FF918()
{
  sub_24870D5A4();
  return sub_2487B5DBC();
}

uint64_t sub_2486FF940()
{
  sub_24870D5A4();
  return sub_2487B5DC8();
}

uint64_t sub_2486FF968()
{
  sub_24870D670();
  return sub_2487B5DBC();
}

uint64_t sub_2486FF990()
{
  sub_24870D670();
  return sub_2487B5DC8();
}

uint64_t sub_2486FF9B8()
{
  sub_24870D5E8();
  return sub_2487B5DBC();
}

uint64_t sub_2486FF9E0()
{
  sub_24870D5E8();
  return sub_2487B5DC8();
}

uint64_t sub_2486FFA08()
{
  sub_24870CF44();
  return sub_2487B5DBC();
}

uint64_t sub_2486FFA30()
{
  sub_24870CF44();
  return sub_2487B5DC8();
}

uint64_t sub_2486FFA58()
{
  sub_24870D62C();
  return sub_2487B5DBC();
}

uint64_t sub_2486FFA80()
{
  sub_24870D62C();
  return sub_2487B5DC8();
}

uint64_t sub_2486FFAA8()
{
  sub_24870D054();
  return sub_2487B5DBC();
}

uint64_t sub_2486FFAD0()
{
  sub_24870D054();
  return sub_2487B5DC8();
}

uint64_t sub_2486FFAF8()
{
  sub_24870D2B8();
  return sub_2487B5DBC();
}

uint64_t sub_2486FFB20()
{
  sub_24870D2B8();
  return sub_2487B5DC8();
}

uint64_t sub_2486FFB48()
{
  sub_24870CE78();
  return sub_2487B5DBC();
}

uint64_t sub_2486FFB70()
{
  sub_24870CE78();
  return sub_2487B5DC8();
}

uint64_t sub_2486FFB98()
{
  sub_24870D120();
  return sub_2487B5DBC();
}

uint64_t sub_2486FFBC0()
{
  sub_24870D120();
  return sub_2487B5DC8();
}

uint64_t sub_2486FFBE8()
{
  sub_24870D010();
  return sub_2487B5DBC();
}

uint64_t sub_2486FFC10()
{
  sub_24870D010();
  return sub_2487B5DC8();
}

uint64_t sub_2486FFC38()
{
  sub_24870CB48();
  return sub_2487B5DBC();
}

uint64_t sub_2486FFC60()
{
  sub_24870CB48();
  return sub_2487B5DC8();
}

uint64_t sub_2486FFC88()
{
  sub_24870CE34();
  return sub_2487B5DBC();
}

uint64_t sub_2486FFCB0()
{
  sub_24870CE34();
  return sub_2487B5DC8();
}

uint64_t sub_2486FFCD8()
{
  sub_24870CF00();
  return sub_2487B5DBC();
}

uint64_t sub_2486FFD00()
{
  sub_24870CF00();
  return sub_2487B5DC8();
}

uint64_t sub_2486FFD28()
{
  sub_24870CEBC();
  return sub_2487B5DBC();
}

uint64_t sub_2486FFD50()
{
  sub_24870CEBC();
  return sub_2487B5DC8();
}

uint64_t sub_2486FFD78()
{
  sub_24870D40C();
  return sub_2487B5DBC();
}

uint64_t sub_2486FFDA0()
{
  sub_24870D40C();
  return sub_2487B5DC8();
}

uint64_t sub_2486FFDC8()
{
  sub_24870D3C8();
  return sub_2487B5DBC();
}

uint64_t sub_2486FFDF0()
{
  sub_24870D3C8();
  return sub_2487B5DC8();
}

uint64_t sub_2486FFE18()
{
  sub_24870D098();
  return sub_2487B5DBC();
}

uint64_t sub_2486FFE40()
{
  sub_24870D098();
  return sub_2487B5DC8();
}

uint64_t sub_2486FFE68()
{
  sub_24870CF88();
  return sub_2487B5DBC();
}

uint64_t sub_2486FFE90()
{
  sub_24870CF88();
  return sub_2487B5DC8();
}

uint64_t sub_2486FFEB8()
{
  sub_24870D2FC();
  return sub_2487B5DBC();
}

uint64_t sub_2486FFEE0()
{
  sub_24870D2FC();
  return sub_2487B5DC8();
}

uint64_t sub_2486FFF08()
{
  sub_24870CB8C();
  return sub_2487B5DBC();
}

uint64_t sub_2486FFF30()
{
  sub_24870CB8C();
  return sub_2487B5DC8();
}

uint64_t sub_2486FFF58()
{
  sub_24870D494();
  return sub_2487B5DBC();
}

uint64_t sub_2486FFF80()
{
  sub_24870D494();
  return sub_2487B5DC8();
}

uint64_t sub_2486FFFA8()
{
  sub_24870CDAC();
  return sub_2487B5DBC();
}

uint64_t sub_2486FFFD0()
{
  sub_24870CDAC();
  return sub_2487B5DC8();
}

uint64_t sub_2486FFFF8()
{
  sub_24870CD68();
  return sub_2487B5DBC();
}

uint64_t sub_248700020()
{
  sub_24870CD68();
  return sub_2487B5DC8();
}

uint64_t sub_248700048()
{
  sub_24870D4D8();
  return sub_2487B5DBC();
}

uint64_t sub_248700070()
{
  sub_24870D4D8();
  return sub_2487B5DC8();
}

uint64_t sub_248700098()
{
  sub_24870CFCC();
  return sub_2487B5DBC();
}

uint64_t sub_2487000C0()
{
  sub_24870CFCC();
  return sub_2487B5DC8();
}

uint64_t sub_2487000E8()
{
  sub_24870D8D4();
  return sub_2487B5DBC();
}

uint64_t sub_248700110()
{
  sub_24870D8D4();
  return sub_2487B5DC8();
}

uint64_t sub_248700138()
{
  sub_24870D384();
  return sub_2487B5DBC();
}

uint64_t sub_248700160()
{
  sub_24870D384();
  return sub_2487B5DC8();
}

uint64_t sub_248700188()
{
  sub_24870D1A8();
  return sub_2487B5DBC();
}

uint64_t sub_2487001B0()
{
  sub_24870D1A8();
  return sub_2487B5DC8();
}

uint64_t sub_2487001D8()
{
  sub_24870CAC0();
  return sub_2487B5DBC();
}

uint64_t sub_248700200()
{
  sub_24870CAC0();
  return sub_2487B5DC8();
}

uint64_t sub_248700228()
{
  sub_24870D164();
  return sub_2487B5DBC();
}

uint64_t sub_248700250()
{
  sub_24870D164();
  return sub_2487B5DC8();
}

uint64_t sub_248700278()
{
  sub_24870CA38();
  return sub_2487B5DBC();
}

uint64_t sub_2487002A0()
{
  sub_24870CA38();
  return sub_2487B5DC8();
}

uint64_t sub_2487002C8()
{
  sub_24870C9F4();
  return sub_2487B5DBC();
}

uint64_t sub_2487002F0()
{
  sub_24870C9F4();
  return sub_2487B5DC8();
}

uint64_t sub_248700318()
{
  sub_24870CB04();
  return sub_2487B5DBC();
}

uint64_t sub_248700340()
{
  sub_24870CB04();
  return sub_2487B5DC8();
}

uint64_t sub_248700368()
{
  sub_24870D6B4();
  return sub_2487B5DBC();
}

uint64_t sub_248700390()
{
  sub_24870D6B4();
  return sub_2487B5DC8();
}

uint64_t sub_2487003B8()
{
  sub_24870D450();
  return sub_2487B5DBC();
}

uint64_t sub_2487003E0()
{
  sub_24870D450();
  return sub_2487B5DC8();
}

uint64_t sub_248700408()
{
  sub_24870D7C4();
  return sub_2487B5DBC();
}

uint64_t sub_248700430()
{
  sub_24870D7C4();
  return sub_2487B5DC8();
}

uint64_t sub_248700458()
{
  sub_24870C8E4();
  return sub_2487B5DBC();
}

uint64_t sub_248700480()
{
  sub_24870C8E4();
  return sub_2487B5DC8();
}

uint64_t sub_2487004A8()
{
  return sub_2487B5D68();
}

uint64_t sub_2487004CC()
{
  sub_24870C928();
  return sub_2487B5DBC();
}

uint64_t sub_2487004F4()
{
  sub_24870C928();
  return sub_2487B5DC8();
}

uint64_t sub_24870051C()
{
  sub_24870D780();
  return sub_2487B5DBC();
}

uint64_t sub_248700544()
{
  sub_24870D780();
  return sub_2487B5DC8();
}

uint64_t sub_24870056C()
{
  sub_24870CC14();
  return sub_2487B5DBC();
}

uint64_t sub_248700594()
{
  sub_24870CC14();
  return sub_2487B5DC8();
}

uint64_t sub_2487005BC()
{
  sub_24870D274();
  return sub_2487B5DBC();
}

uint64_t sub_2487005E4()
{
  sub_24870D274();
  return sub_2487B5DC8();
}

uint64_t sub_24870060C()
{
  sub_24870D340();
  return sub_2487B5DBC();
}

uint64_t sub_248700634()
{
  sub_24870D340();
  return sub_2487B5DC8();
}

uint64_t sub_24870065C()
{
  sub_24870CDF0();
  return sub_2487B5DBC();
}

uint64_t sub_248700684()
{
  sub_24870CDF0();
  return sub_2487B5DC8();
}

uint64_t sub_2487006AC()
{
  sub_24870CC9C();
  return sub_2487B5DBC();
}

uint64_t sub_2487006D4()
{
  sub_24870CC9C();
  return sub_2487B5DC8();
}

uint64_t sub_2487006FC()
{
  sub_24870D51C();
  return sub_2487B5DBC();
}

uint64_t sub_248700724()
{
  sub_24870D51C();
  return sub_2487B5DC8();
}

uint64_t sub_24870074C()
{
  sub_24870D84C();
  return sub_2487B5DBC();
}

uint64_t sub_248700774()
{
  sub_24870D84C();
  return sub_2487B5DC8();
}

uint64_t sub_24870079C()
{
  sub_24870D890();
  return sub_2487B5DBC();
}

uint64_t sub_2487007C4()
{
  sub_24870D890();
  return sub_2487B5DC8();
}

uint64_t sub_2487007EC()
{
  sub_24870CBD0();
  return sub_2487B5DBC();
}

uint64_t sub_248700814()
{
  sub_24870CBD0();
  return sub_2487B5DC8();
}

uint64_t sub_24870083C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2487B5CE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2487008B8()
{
  sub_24870CC58();
  return sub_2487B5DBC();
}

uint64_t sub_2487008E0()
{
  sub_24870CC58();
  return sub_2487B5DC8();
}

uint64_t sub_248700908()
{
  sub_2487B5D5C();
  sub_2487B5D68();
  return sub_2487B5D98();
}

uint64_t sub_248700948()
{
  sub_2487B5D5C();
  sub_2487B5D68();
  return sub_2487B5D98();
}

uint64_t sub_248700984@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2487B5CE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_248700A08()
{
  sub_24870D230();
  return sub_2487B5DBC();
}

uint64_t sub_248700A30()
{
  sub_24870D230();
  return sub_2487B5DC8();
}

void TTSVBError.Reason.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  _QWORD v71[2];
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C468);
  v249 = *(_QWORD *)(v2 - 8);
  v250 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v248 = (char *)v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v245 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C470);
  v243 = *(_QWORD *)(v245 - 8);
  MEMORY[0x24BDAC7A8](v245);
  v242 = (char *)v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C478);
  v246 = *(_QWORD *)(v5 - 8);
  v247 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v244 = (char *)v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C480);
  v240 = *(_QWORD *)(v7 - 8);
  v241 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v239 = (char *)v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v235 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C488);
  v234 = *(_QWORD *)(v235 - 8);
  MEMORY[0x24BDAC7A8](v235);
  v233 = (char *)v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C490);
  v237 = *(_QWORD *)(v10 - 8);
  v238 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v236 = (char *)v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v232 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C498);
  v231 = *(_QWORD *)(v232 - 8);
  MEMORY[0x24BDAC7A8](v232);
  v230 = (char *)v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v229 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C4A0);
  v227 = *(_QWORD *)(v229 - 8);
  MEMORY[0x24BDAC7A8](v229);
  v225 = (char *)v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v223 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C4A8);
  v221 = *(_QWORD *)(v223 - 8);
  MEMORY[0x24BDAC7A8](v223);
  v219 = (char *)v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C4B0);
  v216 = *(_QWORD *)(v217 - 8);
  MEMORY[0x24BDAC7A8](v217);
  v215 = (char *)v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v228 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C4B8);
  v226 = *(_QWORD *)(v228 - 8);
  MEMORY[0x24BDAC7A8](v228);
  v224 = (char *)v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v222 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C4C0);
  v220 = *(_QWORD *)(v222 - 8);
  MEMORY[0x24BDAC7A8](v222);
  v218 = (char *)v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v212 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C4C8);
  v210 = *(_QWORD *)(v212 - 8);
  MEMORY[0x24BDAC7A8](v212);
  v209 = (char *)v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v214 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C4D0);
  v213 = *(_QWORD *)(v214 - 8);
  MEMORY[0x24BDAC7A8](v214);
  v211 = (char *)v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v205 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C4D8);
  v204 = *(_QWORD *)(v205 - 8);
  MEMORY[0x24BDAC7A8](v205);
  v203 = (char *)v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v202 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C4E0);
  v200 = *(_QWORD *)(v202 - 8);
  MEMORY[0x24BDAC7A8](v202);
  v198 = (char *)v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C4E8);
  v207 = *(_QWORD *)(v208 - 8);
  MEMORY[0x24BDAC7A8](v208);
  v206 = (char *)v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v196 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C4F0);
  v195 = *(_QWORD *)(v196 - 8);
  MEMORY[0x24BDAC7A8](v196);
  v194 = (char *)v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v201 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C4F8);
  v199 = *(_QWORD *)(v201 - 8);
  MEMORY[0x24BDAC7A8](v201);
  v197 = (char *)v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C500);
  v191 = *(_QWORD *)(v193 - 8);
  MEMORY[0x24BDAC7A8](v193);
  v189 = (char *)v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C508);
  v185 = *(_QWORD *)(v187 - 8);
  MEMORY[0x24BDAC7A8](v187);
  v183 = (char *)v71 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C510);
  v180 = *(_QWORD *)(v181 - 8);
  MEMORY[0x24BDAC7A8](v181);
  v179 = (char *)v71 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v192 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C518);
  v190 = *(_QWORD *)(v192 - 8);
  MEMORY[0x24BDAC7A8](v192);
  v188 = (char *)v71 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v186 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C520);
  v184 = *(_QWORD *)(v186 - 8);
  MEMORY[0x24BDAC7A8](v186);
  v182 = (char *)v71 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C528);
  v168 = *(_QWORD *)(v170 - 8);
  MEMORY[0x24BDAC7A8](v170);
  v166 = (char *)v71 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C530);
  v177 = *(_QWORD *)(v178 - 8);
  MEMORY[0x24BDAC7A8](v178);
  v176 = (char *)v71 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C538);
  v173 = *(_QWORD *)(v175 - 8);
  MEMORY[0x24BDAC7A8](v175);
  v172 = (char *)v71 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C540);
  v159 = *(_QWORD *)(v160 - 8);
  MEMORY[0x24BDAC7A8](v160);
  v158 = (char *)v71 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C548);
  v162 = *(_QWORD *)(v164 - 8);
  MEMORY[0x24BDAC7A8](v164);
  v161 = (char *)v71 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C550);
  v171 = *(_QWORD *)(v174 - 8);
  MEMORY[0x24BDAC7A8](v174);
  v169 = (char *)v71 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C558);
  v165 = *(_QWORD *)(v167 - 8);
  MEMORY[0x24BDAC7A8](v167);
  v163 = (char *)v71 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C560);
  v156 = *(_QWORD *)(v157 - 8);
  MEMORY[0x24BDAC7A8](v157);
  v155 = (char *)v71 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C568);
  v153 = *(_QWORD *)(v154 - 8);
  MEMORY[0x24BDAC7A8](v154);
  v152 = (char *)v71 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C570);
  v150 = *(_QWORD *)(v151 - 8);
  MEMORY[0x24BDAC7A8](v151);
  v149 = (char *)v71 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C578);
  v147 = *(_QWORD *)(v148 - 8);
  MEMORY[0x24BDAC7A8](v148);
  v146 = (char *)v71 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C580);
  v144 = *(_QWORD *)(v145 - 8);
  MEMORY[0x24BDAC7A8](v145);
  v143 = (char *)v71 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C588);
  v141 = *(_QWORD *)(v142 - 8);
  MEMORY[0x24BDAC7A8](v142);
  v140 = (char *)v71 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C590);
  v138 = *(_QWORD *)(v139 - 8);
  MEMORY[0x24BDAC7A8](v139);
  v137 = (char *)v71 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C598);
  v134 = *(_QWORD *)(v136 - 8);
  MEMORY[0x24BDAC7A8](v136);
  v132 = (char *)v71 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C5A0);
  v128 = *(_QWORD *)(v130 - 8);
  MEMORY[0x24BDAC7A8](v130);
  v126 = (char *)v71 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C5A8);
  v123 = *(_QWORD *)(v124 - 8);
  MEMORY[0x24BDAC7A8](v124);
  v122 = (char *)v71 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C5B0);
  v133 = *(_QWORD *)(v135 - 8);
  MEMORY[0x24BDAC7A8](v135);
  v131 = (char *)v71 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C5B8);
  v127 = *(_QWORD *)(v129 - 8);
  MEMORY[0x24BDAC7A8](v129);
  v125 = (char *)v71 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C5C0);
  v114 = *(_QWORD *)(v115 - 8);
  MEMORY[0x24BDAC7A8](v115);
  v113 = (char *)v71 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C5C8);
  v120 = *(_QWORD *)(v121 - 8);
  MEMORY[0x24BDAC7A8](v121);
  v119 = (char *)v71 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C5D0);
  v117 = *(_QWORD *)(v118 - 8);
  MEMORY[0x24BDAC7A8](v118);
  v116 = (char *)v71 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C5D8);
  v110 = *(_QWORD *)(v112 - 8);
  MEMORY[0x24BDAC7A8](v112);
  v108 = (char *)v71 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C5E0);
  v104 = *(_QWORD *)(v106 - 8);
  MEMORY[0x24BDAC7A8](v106);
  v102 = (char *)v71 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C5E8);
  v99 = *(_QWORD *)(v100 - 8);
  MEMORY[0x24BDAC7A8](v100);
  v98 = (char *)v71 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C5F0);
  v109 = *(_QWORD *)(v111 - 8);
  MEMORY[0x24BDAC7A8](v111);
  v107 = (char *)v71 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C5F8);
  v103 = *(_QWORD *)(v105 - 8);
  MEMORY[0x24BDAC7A8](v105);
  v101 = (char *)v71 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C600);
  v96 = *(_QWORD *)(v97 - 8);
  MEMORY[0x24BDAC7A8](v97);
  v95 = (char *)v71 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C608);
  v93 = *(_QWORD *)(v94 - 8);
  MEMORY[0x24BDAC7A8](v94);
  v92 = (char *)v71 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C610);
  v90 = *(_QWORD *)(v91 - 8);
  MEMORY[0x24BDAC7A8](v91);
  v89 = (char *)v71 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C618);
  v87 = *(_QWORD *)(v88 - 8);
  MEMORY[0x24BDAC7A8](v88);
  v86 = (char *)v71 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C620);
  v84 = *(_QWORD *)(v85 - 8);
  MEMORY[0x24BDAC7A8](v85);
  v83 = (char *)v71 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C628);
  v81 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82);
  v80 = (char *)v71 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C630);
  v78 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v77 = (char *)v71 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C638);
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v74 = (char *)v71 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C640);
  v71[1] = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C648);
  MEMORY[0x24BDAC7A8](v72);
  v65 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v65);
  v67 = (char *)v71 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  v254 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C650);
  v251 = *(_QWORD *)(v254 - 8);
  MEMORY[0x24BDAC7A8](v254);
  v69 = (char *)v71 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24870C8A0();
  v252 = v69;
  sub_2487B5DB0();
  sub_248709554(v253, (uint64_t)v67, type metadata accessor for TTSVBError.Reason);
  v70 = (char *)sub_248701E28 + 4 * word_2487B7644[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_248701E28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v2 - 89) = 0;
  sub_24870D8D4();
  v3 = *(_QWORD *)(v2 - 104);
  v4 = *(_QWORD *)(v2 - 120);
  sub_2487B5C48();
  v5 = *(_QWORD *)(v2 - 1568);
  sub_2487B5C6C();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 136) + 8))(v4, v3);
}

uint64_t TTSVBError.Reason.hashValue.getter()
{
  sub_2487B5D5C();
  TTSVBError.Reason.hash(into:)();
  return sub_2487B5D98();
}

uint64_t TTSVBError.Reason.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  uint64_t *v140;
  uint64_t v141;
  _QWORD v143[16];
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  char *v262;
  char *v263;
  char *v264;
  char *v265;
  char *v266;
  char *v267;
  char *v268;
  char *v269;
  char *v270;
  char *v271;
  char *v272;
  char *v273;
  char *v274;
  char *v275;
  char *v276;
  char *v277;
  char *v278;
  char *v279;
  char *v280;
  char *v281;
  char *v282;
  char *v283;
  char *v284;
  char *v285;
  char *v286;
  char *v287;
  char *v288;
  char *v289;
  char *v290;
  char *v291;
  char *v292;
  char *v293;
  char *v294;
  char *v295;
  char *v296;
  char *v297;
  char *v298;
  char *v299;
  char *v300;
  char *v301;
  char *v302;
  char *v303;
  char *v304;
  char *v305;
  char *v306;
  char *v307;
  char *v308;
  char *v309;
  char *v310;
  char *v311;
  char *v312;
  char *v313;
  char *v314;
  char *v315;
  char *v316;
  char *v317;
  char *v318;
  char *v319;
  char *v320;
  char *v321;
  char *v322;
  char *v323;
  char *v324;
  char *v325;
  char *v326;
  char *v327;
  char *v328;
  char *v329;
  char *v330;
  char *v331;
  char *v332;
  char *v333;
  char *v334;
  char *v335;
  char *v336;
  char *v337;
  char *v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  char *v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  _QWORD *v347;
  uint64_t v348;
  char *v349;

  v339 = a2;
  v259 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C668);
  v260 = *(_QWORD *)(v259 - 8);
  MEMORY[0x24BDAC7A8](v259);
  v338 = (char *)v143 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v256 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C670);
  v257 = *(_QWORD *)(v256 - 8);
  MEMORY[0x24BDAC7A8](v256);
  v335 = (char *)v143 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v258 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C678);
  v344 = *(_QWORD *)(v258 - 8);
  MEMORY[0x24BDAC7A8](v258);
  v337 = (char *)v143 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v255 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C680);
  v254 = *(_QWORD *)(v255 - 8);
  MEMORY[0x24BDAC7A8](v255);
  v336 = (char *)v143 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v343 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C688);
  v252 = *(_QWORD *)(v343 - 8);
  MEMORY[0x24BDAC7A8](v343);
  v333 = (char *)v143 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v253 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C690);
  v340 = *(_QWORD *)(v253 - 8);
  MEMORY[0x24BDAC7A8](v253);
  v334 = (char *)v143 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v251 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C698);
  v250 = *(_QWORD *)(v251 - 8);
  MEMORY[0x24BDAC7A8](v251);
  v332 = (char *)v143 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v249 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C6A0);
  v248 = *(_QWORD *)(v249 - 8);
  MEMORY[0x24BDAC7A8](v249);
  v331 = (char *)v143 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v246 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C6A8);
  v244 = *(_QWORD *)(v246 - 8);
  MEMORY[0x24BDAC7A8](v246);
  v329 = (char *)v143 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v242 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C6B0);
  v240 = *(_QWORD *)(v242 - 8);
  MEMORY[0x24BDAC7A8](v242);
  v327 = (char *)v143 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v247 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C6B8);
  v245 = *(_QWORD *)(v247 - 8);
  MEMORY[0x24BDAC7A8](v247);
  v330 = (char *)v143 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v243 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C6C0);
  v241 = *(_QWORD *)(v243 - 8);
  MEMORY[0x24BDAC7A8](v243);
  v328 = (char *)v143 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v239 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C6C8);
  v237 = *(_QWORD *)(v239 - 8);
  MEMORY[0x24BDAC7A8](v239);
  v326 = (char *)v143 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v238 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C6D0);
  v236 = *(_QWORD *)(v238 - 8);
  MEMORY[0x24BDAC7A8](v238);
  v325 = (char *)v143 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v234 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C6D8);
  v232 = *(_QWORD *)(v234 - 8);
  MEMORY[0x24BDAC7A8](v234);
  v323 = (char *)v143 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v231 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C6E0);
  v230 = *(_QWORD *)(v231 - 8);
  MEMORY[0x24BDAC7A8](v231);
  v322 = (char *)v143 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v235 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C6E8);
  v233 = *(_QWORD *)(v235 - 8);
  MEMORY[0x24BDAC7A8](v235);
  v324 = (char *)v143 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v227 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C6F0);
  v226 = *(_QWORD *)(v227 - 8);
  MEMORY[0x24BDAC7A8](v227);
  v320 = (char *)v143 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v229 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C6F8);
  v228 = *(_QWORD *)(v229 - 8);
  MEMORY[0x24BDAC7A8](v229);
  v321 = (char *)v143 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v225 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C700);
  v224 = *(_QWORD *)(v225 - 8);
  MEMORY[0x24BDAC7A8](v225);
  v319 = (char *)v143 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v222 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C708);
  v220 = *(_QWORD *)(v222 - 8);
  MEMORY[0x24BDAC7A8](v222);
  v317 = (char *)v143 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v218 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C710);
  v216 = *(_QWORD *)(v218 - 8);
  MEMORY[0x24BDAC7A8](v218);
  v315 = (char *)v143 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v223 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C718);
  v221 = *(_QWORD *)(v223 - 8);
  MEMORY[0x24BDAC7A8](v223);
  v318 = (char *)v143 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C720);
  v217 = *(_QWORD *)(v219 - 8);
  MEMORY[0x24BDAC7A8](v219);
  v316 = (char *)v143 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v212 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C728);
  v210 = *(_QWORD *)(v212 - 8);
  MEMORY[0x24BDAC7A8](v212);
  v312 = (char *)v143 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v215 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C730);
  v214 = *(_QWORD *)(v215 - 8);
  MEMORY[0x24BDAC7A8](v215);
  v314 = (char *)v143 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C738);
  v211 = *(_QWORD *)(v213 - 8);
  MEMORY[0x24BDAC7A8](v213);
  v313 = (char *)v143 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v203 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C740);
  v202 = *(_QWORD *)(v203 - 8);
  MEMORY[0x24BDAC7A8](v203);
  v308 = (char *)v143 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v206 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C748);
  v204 = *(_QWORD *)(v206 - 8);
  MEMORY[0x24BDAC7A8](v206);
  v309 = (char *)v143 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v209 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C750);
  v208 = *(_QWORD *)(v209 - 8);
  MEMORY[0x24BDAC7A8](v209);
  v311 = (char *)v143 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v207 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C758);
  v205 = *(_QWORD *)(v207 - 8);
  MEMORY[0x24BDAC7A8](v207);
  v310 = (char *)v143 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v201 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C760);
  v200 = *(_QWORD *)(v201 - 8);
  MEMORY[0x24BDAC7A8](v201);
  v307 = (char *)v143 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v199 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C768);
  v198 = *(_QWORD *)(v199 - 8);
  MEMORY[0x24BDAC7A8](v199);
  v306 = (char *)v143 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v197 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C770);
  v196 = *(_QWORD *)(v197 - 8);
  MEMORY[0x24BDAC7A8](v197);
  v305 = (char *)v143 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v195 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C778);
  v194 = *(_QWORD *)(v195 - 8);
  MEMORY[0x24BDAC7A8](v195);
  v304 = (char *)v143 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C780);
  v192 = *(_QWORD *)(v193 - 8);
  MEMORY[0x24BDAC7A8](v193);
  v303 = (char *)v143 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v191 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C788);
  v190 = *(_QWORD *)(v191 - 8);
  MEMORY[0x24BDAC7A8](v191);
  v302 = (char *)v143 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C790);
  v188 = *(_QWORD *)(v189 - 8);
  MEMORY[0x24BDAC7A8](v189);
  v301 = (char *)v143 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C798);
  v186 = *(_QWORD *)(v187 - 8);
  MEMORY[0x24BDAC7A8](v187);
  v300 = (char *)v143 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C7A0);
  v182 = *(_QWORD *)(v184 - 8);
  MEMORY[0x24BDAC7A8](v184);
  v298 = (char *)v143 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C7A8);
  v178 = *(_QWORD *)(v180 - 8);
  MEMORY[0x24BDAC7A8](v180);
  v296 = (char *)v143 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C7B0);
  v183 = *(_QWORD *)(v185 - 8);
  MEMORY[0x24BDAC7A8](v185);
  v299 = (char *)v143 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C7B8);
  v179 = *(_QWORD *)(v181 - 8);
  MEMORY[0x24BDAC7A8](v181);
  v297 = (char *)v143 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C7C0);
  v172 = *(_QWORD *)(v174 - 8);
  MEMORY[0x24BDAC7A8](v174);
  v293 = (char *)v143 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C7C8);
  v176 = *(_QWORD *)(v177 - 8);
  MEMORY[0x24BDAC7A8](v177);
  v295 = (char *)v143 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C7D0);
  v173 = *(_QWORD *)(v175 - 8);
  MEMORY[0x24BDAC7A8](v175);
  v294 = (char *)v143 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C7D8);
  v170 = *(_QWORD *)(v171 - 8);
  MEMORY[0x24BDAC7A8](v171);
  v292 = (char *)v143 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C7E0);
  v166 = *(_QWORD *)(v168 - 8);
  MEMORY[0x24BDAC7A8](v168);
  v290 = (char *)v143 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C7E8);
  v162 = *(_QWORD *)(v164 - 8);
  MEMORY[0x24BDAC7A8](v164);
  v288 = (char *)v143 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C7F0);
  v167 = *(_QWORD *)(v169 - 8);
  MEMORY[0x24BDAC7A8](v169);
  v291 = (char *)v143 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C7F8);
  v163 = *(_QWORD *)(v165 - 8);
  MEMORY[0x24BDAC7A8](v165);
  v289 = (char *)v143 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C800);
  v160 = *(_QWORD *)(v161 - 8);
  MEMORY[0x24BDAC7A8](v161);
  v287 = (char *)v143 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C808);
  v158 = *(_QWORD *)(v159 - 8);
  MEMORY[0x24BDAC7A8](v159);
  v286 = (char *)v143 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C810);
  v156 = *(_QWORD *)(v157 - 8);
  MEMORY[0x24BDAC7A8](v157);
  v342 = (char *)v143 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C818);
  v154 = *(_QWORD *)(v155 - 8);
  MEMORY[0x24BDAC7A8](v155);
  v285 = (char *)v143 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C820);
  v152 = *(_QWORD *)(v153 - 8);
  MEMORY[0x24BDAC7A8](v153);
  v284 = (char *)v143 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C828);
  v150 = *(_QWORD *)(v151 - 8);
  MEMORY[0x24BDAC7A8](v151);
  v283 = (char *)v143 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C830);
  v148 = *(_QWORD *)(v149 - 8);
  MEMORY[0x24BDAC7A8](v149);
  v282 = (char *)v143 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C838);
  v146 = *(_QWORD *)(v147 - 8);
  MEMORY[0x24BDAC7A8](v147);
  v281 = (char *)v143 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C840);
  v143[14] = *(_QWORD *)(v144 - 8);
  MEMORY[0x24BDAC7A8](v144);
  v279 = (char *)v143 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C848);
  v143[15] = *(_QWORD *)(v145 - 8);
  MEMORY[0x24BDAC7A8](v145);
  v280 = (char *)v143 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  v346 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C850);
  v341 = *(_QWORD *)(v346 - 8);
  MEMORY[0x24BDAC7A8](v346);
  v349 = (char *)v143 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  v345 = type metadata accessor for TTSVBError.Reason(0);
  v65 = MEMORY[0x24BDAC7A8](v345);
  v143[13] = (char *)v143 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = MEMORY[0x24BDAC7A8](v65);
  v143[11] = (char *)v143 - v68;
  v69 = MEMORY[0x24BDAC7A8](v67);
  v143[12] = (char *)v143 - v70;
  v71 = MEMORY[0x24BDAC7A8](v69);
  v143[10] = (char *)v143 - v72;
  v73 = MEMORY[0x24BDAC7A8](v71);
  v143[7] = (char *)v143 - v74;
  v75 = MEMORY[0x24BDAC7A8](v73);
  v278 = (char *)v143 - v76;
  v77 = MEMORY[0x24BDAC7A8](v75);
  v277 = (char *)v143 - v78;
  v79 = MEMORY[0x24BDAC7A8](v77);
  v143[9] = (char *)v143 - v80;
  v81 = MEMORY[0x24BDAC7A8](v79);
  v276 = (char *)v143 - v82;
  v83 = MEMORY[0x24BDAC7A8](v81);
  v274 = (char *)v143 - v84;
  v85 = MEMORY[0x24BDAC7A8](v83);
  v272 = (char *)v143 - v86;
  v87 = MEMORY[0x24BDAC7A8](v85);
  v271 = (char *)v143 - v88;
  v89 = MEMORY[0x24BDAC7A8](v87);
  v270 = (char *)v143 - v90;
  v91 = MEMORY[0x24BDAC7A8](v89);
  v269 = (char *)v143 - v92;
  v93 = MEMORY[0x24BDAC7A8](v91);
  v268 = (char *)v143 - v94;
  v95 = MEMORY[0x24BDAC7A8](v93);
  v267 = (char *)v143 - v96;
  v97 = MEMORY[0x24BDAC7A8](v95);
  v275 = (char *)v143 - v98;
  v99 = MEMORY[0x24BDAC7A8](v97);
  v273 = (char *)v143 - v100;
  v101 = MEMORY[0x24BDAC7A8](v99);
  v266 = (char *)v143 - v102;
  v103 = MEMORY[0x24BDAC7A8](v101);
  v265 = (char *)v143 - v104;
  v105 = MEMORY[0x24BDAC7A8](v103);
  v264 = (char *)v143 - v106;
  v107 = MEMORY[0x24BDAC7A8](v105);
  v263 = (char *)v143 - v108;
  v109 = MEMORY[0x24BDAC7A8](v107);
  v143[8] = (char *)v143 - v110;
  v111 = MEMORY[0x24BDAC7A8](v109);
  v262 = (char *)v143 - v112;
  v113 = MEMORY[0x24BDAC7A8](v111);
  v261 = (char *)v143 - v114;
  v115 = MEMORY[0x24BDAC7A8](v113);
  v117 = (char *)v143 - v116;
  v118 = MEMORY[0x24BDAC7A8](v115);
  v120 = (char *)v143 - v119;
  v121 = MEMORY[0x24BDAC7A8](v118);
  v123 = (char *)v143 - v122;
  v124 = MEMORY[0x24BDAC7A8](v121);
  v126 = (char *)v143 - v125;
  v127 = MEMORY[0x24BDAC7A8](v124);
  v129 = (char *)v143 - v128;
  MEMORY[0x24BDAC7A8](v127);
  v131 = (char *)v143 - v130;
  v132 = a1[3];
  v347 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v132);
  sub_24870C8A0();
  v133 = v348;
  sub_2487B5DA4();
  if (!v133)
  {
    v143[1] = v129;
    v143[2] = v126;
    v143[3] = v123;
    v143[4] = v120;
    v143[5] = v117;
    v134 = v345;
    v348 = 0;
    v143[6] = v131;
    v135 = v349;
    v136 = sub_2487B5C3C();
    if (*(_QWORD *)(v136 + 16) == 1)
    {
      v137 = *(unsigned __int8 *)(v136 + 32);
      if ((_DWORD)v137 != 61)
        __asm { BR              X10 }
    }
    v138 = sub_2487B5AEC();
    swift_allocError();
    v140 = v139;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25777C450);
    *v140 = v134;
    v141 = v346;
    sub_2487B5BC4();
    sub_2487B5AE0();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v138 - 8) + 104))(v140, *MEMORY[0x24BEE26D0], v138);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v341 + 8))(v135, v141);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v347);
}

void sub_248708250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;

  *(_BYTE *)(v1 - 89) = 59;
  sub_24870C928();
  v2 = *(_QWORD *)(v1 - 216);
  v3 = *(_QWORD *)(v1 - 128);
  v4 = *(_QWORD *)(v1 - 112);
  sub_2487B5BB8();
  if (v4)
    JUMPOUT(0x248708298);
  v5 = *(_QWORD *)(v1 - 848);
  v6 = sub_2487B5BE8();
  v7 = v2;
  v8 = *(_QWORD *)(v1 - 168);
  v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 840) + 8))(v7, v5);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0, v3);
  v11 = *(uint64_t **)(v1 - 1784);
  *v11 = v6;
  v11[1] = v10;
  JUMPOUT(0x248708EE4);
}

void sub_2487082B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v1 - 89) = 60;
  sub_24870C8E4();
  v2 = *(_QWORD *)(v1 - 192);
  v3 = *(_QWORD *)(v1 - 128);
  v4 = *(_QWORD *)(v1 - 112);
  sub_2487B5BB8();
  if (v4)
  {
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 168) + 8))(v0, v3);
    JUMPOUT(0x248708224);
  }
  sub_2487B5228();
  sub_2486F4CA0(&qword_25777C858, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA50], MEMORY[0x24BDCEAA0]);
  v5 = *(_QWORD *)(v1 - 1768);
  v6 = *(_QWORD *)(v1 - 824);
  sub_2487B5C24();
  v7 = *(_QWORD *)(v1 - 168);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 816) + 8))(v2, v6);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0, v3);
  swift_storeEnumTagMultiPayload();
  sub_24870A2C4(v5, *(_QWORD *)(v1 - 1824), type metadata accessor for TTSVBError.Reason);
  JUMPOUT(0x248708F0CLL);
}

uint64_t sub_248708F2C()
{
  sub_2487B5D5C();
  TTSVBError.Reason.hash(into:)();
  return sub_2487B5D98();
}

uint64_t sub_248708F6C()
{
  sub_2487B5D5C();
  TTSVBError.Reason.hash(into:)();
  return sub_2487B5D98();
}

uint64_t sub_248708FA4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TTSVBError.Reason.init(from:)(a1, a2);
}

void sub_248708FB8(_QWORD *a1)
{
  TTSVBError.Reason.encode(to:)(a1);
}

uint64_t sub_248708FD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  void **v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    sub_2487B5B1C();
    v4 = (void **)(a1 + 32);
    do
    {
      v5 = *v4++;
      v6 = v5;
      v7 = v5;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25445ECF0);
      sub_24870A34C(0, qword_25445F708);
      swift_dynamicCast();

      sub_2487B5B04();
      sub_2487B5B28();
      sub_2487B5B34();
      sub_2487B5B10();
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_2487090E4(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_2487B5B64();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_2487B5B64();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x24959A440](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_248709F24(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_2487B5B64();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_2487B5690();
  }
  __break(1u);
  return result;
}

_QWORD *sub_24870929C(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  int64_t v10;

  v2 = result[2];
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = result;
  result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v5 <= v3[3] >> 1)
  {
    if (v6[2])
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v10 = v4 + v2;
  else
    v10 = v4;
  result = sub_2487095E0(result, v10, 1, v3);
  v3 = result;
  if (!v6[2])
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  if ((v3[3] >> 1) - v3[2] < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777C920);
  result = (_QWORD *)swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    result = (_QWORD *)swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v7 = v3[2];
  v8 = __OFADD__(v7, v2);
  v9 = v7 + v2;
  if (!v8)
  {
    v3[2] = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_248709394(unint64_t a1)
{
  unint64_t *v1;
  unint64_t v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v3;
  if (!(_DWORD)result || (v3 & 0x8000000000000000) != 0 || (v3 & 0x4000000000000000) != 0)
    sub_248709764(v3);
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v5 + 8 * a1;
    v9 = *(_QWORD *)(v8 + 32);
    memmove((void *)(v8 + 32), (const void *)(v8 + 40), 8 * (v6 - 1 - a1));
    *(_QWORD *)(v5 + 16) = v7;
    sub_2487B5690();
    return v9;
  }
  return result;
}

char *sub_248709428(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1A8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t type metadata accessor for TTSVBBoxedError(uint64_t a1)
{
  return sub_2487095AC(a1, (uint64_t *)&unk_25445FBB0);
}

uint64_t sub_24870953C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_248709554(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for TTSVBError.Reason(uint64_t a1)
{
  return sub_2487095AC(a1, qword_25445FB20);
}

uint64_t sub_2487095AC(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *sub_2487095E0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25777C1F0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[2 * v8 + 4])
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25777C920);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_248709700(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2487B5D5C();
  sub_2487B557C();
  v4 = sub_2487B5D98();
  return sub_2487097CC(a1, a2, v4);
}

void sub_248709764(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_2487B5B64();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x24959A440);
}

unint64_t sub_2487097CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_2487B5CE4() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_2487B5CE4() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_2487098AC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777C908);
  v6 = sub_2487B5B7C();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_24870A40C(v24, v35);
      }
      else
      {
        sub_2486F0814((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_2487B5D5C();
      sub_2487B557C();
      result = sub_2487B5D98();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_24870A40C(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

_OWORD *sub_248709BA8(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_248709700(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
        return sub_24870A40C(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_248709D40();
      goto LABEL_7;
    }
    sub_2487098AC(v15, a4 & 1);
    v21 = sub_248709700(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_248709CD8(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_2487B5D14();
  __break(1u);
  return result;
}

_OWORD *sub_248709CD8(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_24870A40C(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

void *sub_248709D40()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777C908);
  v2 = *v0;
  v3 = sub_2487B5B70();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_2486F0814(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_24870A40C(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_248709F24(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t i;
  void (*v10)(_QWORD *);
  id *v11;
  id v12;
  void (*v13[4])(id *);

  v5 = result;
  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_2487B5B64();
    result = swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      v8 = sub_2487B5B64();
      result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          sub_24871869C((unint64_t *)&unk_25777C930, &qword_25777C928, MEMORY[0x24BEE12E0]);
          swift_bridgeObjectRetain();
          for (i = 0; i != v7; ++i)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_25777C928);
            v10 = sub_24870A0DC(v13, i, a3);
            v12 = *v11;
            ((void (*)(void (**)(id *), _QWORD))v10)(v13, 0);
            *(_QWORD *)(v5 + 8 * i) = v12;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        sub_24870A34C(0, qword_25445F708);
        swift_arrayInitWithCopy();
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

void (*sub_24870A0DC(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *a1)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_24870A15C(v6, a2, a3);
  return sub_24870A130;
}

void sub_24870A130(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_24870A15C(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x24959A434](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_24870A1C8;
  }
  __break(1u);
  return result;
}

void sub_24870A1C8(id *a1)
{

}

uint64_t sub_24870A1D0()
{
  unint64_t v0;

  v0 = sub_2487B5BAC();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_24870A23C()
{
  unint64_t result;

  result = qword_25777C210;
  if (!qword_25777C210)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B7B48, &type metadata for TTSVBError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777C210);
  }
  return result;
}

unint64_t sub_24870A280()
{
  unint64_t result;

  result = qword_25777C218;
  if (!qword_25777C218)
  {
    result = MEMORY[0x24959AEB4](&protocol conformance descriptor for TTSVBError.Problem, &type metadata for TTSVBError.Problem);
    atomic_store(result, (unint64_t *)&qword_25777C218);
  }
  return result;
}

uint64_t sub_24870A2C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_24870A308()
{
  unint64_t result;

  result = qword_25777C228;
  if (!qword_25777C228)
  {
    result = MEMORY[0x24959AEB4](MEMORY[0x24BDCDE30], MEMORY[0x24BDCDDF0]);
    atomic_store(result, (unint64_t *)&qword_25777C228);
  }
  return result;
}

uint64_t sub_24870A34C(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_24870A384()
{
  unint64_t result;

  result = qword_25777C248;
  if (!qword_25777C248)
  {
    result = MEMORY[0x24959AEB4](&protocol conformance descriptor for TTSVBError.Problem, &type metadata for TTSVBError.Problem);
    atomic_store(result, (unint64_t *)&qword_25777C248);
  }
  return result;
}

unint64_t sub_24870A3C8()
{
  unint64_t result;

  result = qword_25777C258;
  if (!qword_25777C258)
  {
    result = MEMORY[0x24959AEB4](MEMORY[0x24BDCDE00], MEMORY[0x24BDCDDF0]);
    atomic_store(result, (unint64_t *)&qword_25777C258);
  }
  return result;
}

_OWORD *sub_24870A40C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void _s31TextToSpeechVoiceBankingSupport10TTSVBErrorV7ProblemO2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_24870A458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  int v5;
  char v7;

  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_24870953C(v2, v3, v5);
    sub_2486F507C(v1, v0, v4);
    sub_2486F507C(v2, v3, v5);
    v7 = 0;
  }
  else
  {
    if (v1 == v2 && v0 == v3)
      v7 = 1;
    else
      v7 = sub_2487B5CE4();
    sub_24870953C(v2, v3, 0);
    sub_24870953C(v1, v0, 0);
    sub_2486F507C(v1, v0, 0);
    sub_2486F507C(v2, v3, 0);
  }
  return v7 & 1;
}

void _s31TextToSpeechVoiceBankingSupport10TTSVBErrorV6ReasonO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  _QWORD v60[24];
  uint64_t v61;
  uint64_t v62;
  char *v63;

  v62 = a1;
  v63 = (char *)a2;
  v61 = type metadata accessor for TTSVBError.Reason(0);
  v2 = MEMORY[0x24BDAC7A8](v61);
  v60[23] = (char *)v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v60[19] = (char *)v60 - v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v60[22] = (char *)v60 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v60[15] = (char *)v60 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v60[16] = (char *)v60 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v60[21] = (char *)v60 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v60[20] = (char *)v60 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v60[8] = (char *)v60 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v60[18] = (char *)v60 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v60[17] = (char *)v60 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v60[13] = (char *)v60 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v60[11] = (char *)v60 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v60[10] = (char *)v60 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v60[9] = (char *)v60 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v60[7] = (char *)v60 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v60[6] = (char *)v60 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v60[14] = (char *)v60 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v60[12] = (char *)v60 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v60[5] = (char *)v60 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v60[4] = (char *)v60 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v60[3] = (char *)v60 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v60[2] = (char *)v60 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v47 = MEMORY[0x24BDAC7A8](v46);
  v60[1] = (char *)v60 - v48;
  v49 = MEMORY[0x24BDAC7A8](v47);
  v50 = MEMORY[0x24BDAC7A8](v49);
  v51 = MEMORY[0x24BDAC7A8](v50);
  v52 = MEMORY[0x24BDAC7A8](v51);
  v53 = MEMORY[0x24BDAC7A8](v52);
  MEMORY[0x24BDAC7A8](v53);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C900);
  v55 = MEMORY[0x24BDAC7A8](v54);
  v57 = (char *)v60 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = (uint64_t)&v57[*(int *)(v55 + 48)];
  sub_248709554(v62, (uint64_t)v57, type metadata accessor for TTSVBError.Reason);
  v62 = v58;
  sub_248709554((uint64_t)v63, v58, type metadata accessor for TTSVBError.Reason);
  v63 = v57;
  v59 = (char *)sub_24870AEB8 + 4 * word_2487B7770[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_24870AEB8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  sub_248709554(*(_QWORD *)(v1 - 96), (uint64_t)v0, type metadata accessor for TTSVBError.Reason);
  v3 = *v0;
  v2 = v0[1];
  v4 = *(uint64_t **)(v1 - 104);
  if (!swift_getEnumCaseMultiPayload())
  {
    v7 = *v4;
    v8 = v4[1];
    if (v3 == v7 && v2 == v8)
    {
      swift_bridgeObjectRelease_n();
      v9 = *(_QWORD *)(v1 - 96);
    }
    else
    {
      v10 = sub_2487B5CE4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = *(_QWORD *)(v1 - 96);
      if ((v10 & 1) == 0)
      {
        sub_2486EDA68(v9, type metadata accessor for TTSVBError.Reason);
        goto LABEL_3;
      }
    }
    sub_2486EDA68(v9, type metadata accessor for TTSVBError.Reason);
    v5 = 1;
    return v5 & 1;
  }
  swift_bridgeObjectRelease();
  sub_2486F5008(*(_QWORD *)(v1 - 96), &qword_25777C900);
LABEL_3:
  v5 = 0;
  return v5 & 1;
}

uint64_t _s31TextToSpeechVoiceBankingSupport10TTSVBErrorV2eeoiySbAC_ACtFZ_0(__int128 *a1, uint64_t a2)
{
  char v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  char v13;
  __int128 v15;
  char v16;

  v4 = *((_BYTE *)a1 + 16);
  v15 = *a1;
  v16 = v4;
  _s31TextToSpeechVoiceBankingSupport10TTSVBErrorV7ProblemO2eeoiySbAE_AEtFZ_0((uint64_t)&v15);
  if ((v5 & 1) != 0)
  {
    v6 = type metadata accessor for TTSVBError(0);
    _s31TextToSpeechVoiceBankingSupport10TTSVBErrorV6ReasonO2eeoiySbAE_AEtFZ_0((uint64_t)a1 + *(int *)(v6 + 20), a2 + *(int *)(v6 + 20));
    if ((v7 & 1) != 0)
    {
      v8 = *(int *)(v6 + 24);
      v9 = *(void **)((char *)a1 + v8);
      v10 = *(void **)(a2 + v8);
      if (v9)
      {
        if (v10)
        {
          sub_24870A34C(0, qword_25445F708);
          v11 = v10;
          v12 = v9;
          v13 = sub_2487B5900();

          if ((v13 & 1) != 0)
            return 1;
        }
      }
      else if (!v10)
      {
        return 1;
      }
    }
  }
  return 0;
}

unint64_t sub_24870C0A8()
{
  unint64_t result;

  result = qword_25777E1F0;
  if (!qword_25777E1F0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BD748, &type metadata for TTSVBError.Problem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E1F0);
  }
  return result;
}

unint64_t sub_24870C0EC()
{
  unint64_t result;

  result = qword_25777E1F8;
  if (!qword_25777E1F8)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BD6F8, &type metadata for TTSVBError.Problem.CouldNotUpdatePhraseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E1F8);
  }
  return result;
}

unint64_t sub_24870C130()
{
  unint64_t result;

  result = qword_25777E200;
  if (!qword_25777E200)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BD6A8, &type metadata for TTSVBError.Problem.CouldNotUpdateCategoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E200);
  }
  return result;
}

unint64_t sub_24870C174()
{
  unint64_t result;

  result = qword_25777E208;
  if (!qword_25777E208)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BD658, &type metadata for TTSVBError.Problem.CouldNotCreatePhraseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E208);
  }
  return result;
}

unint64_t sub_24870C1B8()
{
  unint64_t result;

  result = qword_25777E210;
  if (!qword_25777E210)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BD608, &type metadata for TTSVBError.Problem.CouldNotCreateCategoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E210);
  }
  return result;
}

unint64_t sub_24870C1FC()
{
  unint64_t result;

  result = qword_25777E218;
  if (!qword_25777E218)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BD5B8, &type metadata for TTSVBError.Problem.CouldNotInstallAudioTapCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E218);
  }
  return result;
}

unint64_t sub_24870C240()
{
  unint64_t result;

  result = qword_25777E220;
  if (!qword_25777E220)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BD568, &type metadata for TTSVBError.Problem.CouldNotRecognizeSpeechCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E220);
  }
  return result;
}

unint64_t sub_24870C284()
{
  unint64_t result;

  result = qword_25777E228;
  if (!qword_25777E228)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BD518, &type metadata for TTSVBError.Problem.CouldNotEndAudioPlaybackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E228);
  }
  return result;
}

unint64_t sub_24870C2C8()
{
  unint64_t result;

  result = qword_25777E230;
  if (!qword_25777E230)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BD4C8, &type metadata for TTSVBError.Problem.CouldNotMoveDataArchiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E230);
  }
  return result;
}

unint64_t sub_24870C30C()
{
  unint64_t result;

  result = qword_25777E238;
  if (!qword_25777E238)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BD478, &type metadata for TTSVBError.Problem.CouldNotDeleteDataArchiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E238);
  }
  return result;
}

unint64_t sub_24870C350()
{
  unint64_t result;

  result = qword_25777E240;
  if (!qword_25777E240)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BD428, &type metadata for TTSVBError.Problem.CouldNotDeleteVoiceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E240);
  }
  return result;
}

unint64_t sub_24870C394()
{
  unint64_t result;

  result = qword_25777E248;
  if (!qword_25777E248)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BD3D8, &type metadata for TTSVBError.Problem.CouldNotImportTrainingDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E248);
  }
  return result;
}

unint64_t sub_24870C3D8()
{
  unint64_t result;

  result = qword_25777E250;
  if (!qword_25777E250)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BD388, &type metadata for TTSVBError.Problem.CouldNotExportTrainingDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E250);
  }
  return result;
}

unint64_t sub_24870C41C()
{
  unint64_t result;

  result = qword_25777E258;
  if (!qword_25777E258)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BD338, &type metadata for TTSVBError.Problem.CouldNotRetrieveTrainingScriptsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E258);
  }
  return result;
}

unint64_t sub_24870C460()
{
  unint64_t result;

  result = qword_25777E260;
  if (!qword_25777E260)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BD2E8, &type metadata for TTSVBError.Problem.CouldNotTrainModelWithDaemonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E260);
  }
  return result;
}

unint64_t sub_24870C4A4()
{
  unint64_t result;

  result = qword_25777E268;
  if (!qword_25777E268)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BD298, &type metadata for TTSVBError.Problem.CouldNotTrainModelInProcessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E268);
  }
  return result;
}

unint64_t sub_24870C4E8()
{
  unint64_t result;

  result = qword_25777E270;
  if (!qword_25777E270)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BD248, &type metadata for TTSVBError.Problem.CouldNotPrepareForTrainingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E270);
  }
  return result;
}

unint64_t sub_24870C52C()
{
  unint64_t result;

  result = qword_25777E278;
  if (!qword_25777E278)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BD1F8, &type metadata for TTSVBError.Problem.CouldNotCreateVoiceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E278);
  }
  return result;
}

unint64_t sub_24870C570()
{
  unint64_t result;

  result = qword_25777E280;
  if (!qword_25777E280)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BD1A8, &type metadata for TTSVBError.Problem.CouldNotLoadSiriTrainingAssetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E280);
  }
  return result;
}

unint64_t sub_24870C5B4()
{
  unint64_t result;

  result = qword_25777E288;
  if (!qword_25777E288)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BD158, &type metadata for TTSVBError.Problem.CouldNotSaveDataStoresCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E288);
  }
  return result;
}

unint64_t sub_24870C5F8()
{
  unint64_t result;

  result = qword_25777E290;
  if (!qword_25777E290)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BD108, &type metadata for TTSVBError.Problem.CouldNotLoadDataStoresCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E290);
  }
  return result;
}

unint64_t sub_24870C63C()
{
  unint64_t result;

  result = qword_25777E298;
  if (!qword_25777E298)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BD0B8, &type metadata for TTSVBError.Problem.CouldNotSaveAudioToSampleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E298);
  }
  return result;
}

unint64_t sub_24870C680()
{
  unint64_t result;

  result = qword_25777E2A0;
  if (!qword_25777E2A0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BD068, &type metadata for TTSVBError.Problem.CouldNotCreateAudioFileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E2A0);
  }
  return result;
}

unint64_t sub_24870C6C4()
{
  unint64_t result;

  result = qword_25777E2A8;
  if (!qword_25777E2A8)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BD018, &type metadata for TTSVBError.Problem.CouldNotEndRecordingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E2A8);
  }
  return result;
}

unint64_t sub_24870C708()
{
  unint64_t result;

  result = qword_25777E2B0;
  if (!qword_25777E2B0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BCFC8, &type metadata for TTSVBError.Problem.CouldNotBeginRecordingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E2B0);
  }
  return result;
}

unint64_t sub_24870C74C()
{
  unint64_t result;

  result = qword_25777E2B8;
  if (!qword_25777E2B8)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BCF78, &type metadata for TTSVBError.Problem.CouldNotSetAudioSessionActiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E2B8);
  }
  return result;
}

unint64_t sub_24870C790()
{
  unint64_t result;

  result = qword_25777E2C0;
  if (!qword_25777E2C0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BCF28, &type metadata for TTSVBError.Problem.CouldNotSetAudioSessionCategoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E2C0);
  }
  return result;
}

unint64_t sub_24870C7D4()
{
  unint64_t result;

  result = qword_25777E2C8;
  if (!qword_25777E2C8)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BCED8, &type metadata for TTSVBError.Problem.CouldNotStartAudioEngineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E2C8);
  }
  return result;
}

unint64_t sub_24870C818()
{
  unint64_t result;

  result = qword_25777E2D0;
  if (!qword_25777E2D0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BCE88, &type metadata for TTSVBError.Problem.UnspecifiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E2D0);
  }
  return result;
}

unint64_t sub_24870C85C()
{
  unint64_t result;

  result = qword_25777E2D8;
  if (!qword_25777E2D8)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BCE38, &type metadata for TTSVBError.Problem.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E2D8);
  }
  return result;
}

unint64_t sub_24870C8A0()
{
  unint64_t result;

  result = qword_25777E2E0;
  if (!qword_25777E2E0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BCDE8, &type metadata for TTSVBError.Reason.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E2E0);
  }
  return result;
}

unint64_t sub_24870C8E4()
{
  unint64_t result;

  result = qword_25777E2E8;
  if (!qword_25777E2E8)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BCD98, &type metadata for TTSVBError.Reason.PhraseWithIDDoesNotExistCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E2E8);
  }
  return result;
}

unint64_t sub_24870C928()
{
  unint64_t result;

  result = qword_25777E2F0;
  if (!qword_25777E2F0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BCD48, &type metadata for TTSVBError.Reason.PhraseWithTextDoesExistCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E2F0);
  }
  return result;
}

unint64_t sub_24870C96C()
{
  unint64_t result;

  result = qword_25777E2F8;
  if (!qword_25777E2F8)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BCCF8, &type metadata for TTSVBError.Reason.CategoryWithIDDoesNotExistCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E2F8);
  }
  return result;
}

unint64_t sub_24870C9B0()
{
  unint64_t result;

  result = qword_25777E300;
  if (!qword_25777E300)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BCCA8, &type metadata for TTSVBError.Reason.CategoryWithNameAlreadyExistsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E300);
  }
  return result;
}

unint64_t sub_24870C9F4()
{
  unint64_t result;

  result = qword_25777E308;
  if (!qword_25777E308)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BCC58, &type metadata for TTSVBError.Reason.InputNotAvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E308);
  }
  return result;
}

unint64_t sub_24870CA38()
{
  unint64_t result;

  result = qword_25777E310;
  if (!qword_25777E310)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BCC08, &type metadata for TTSVBError.Reason.InputNodeFormatInvalidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E310);
  }
  return result;
}

unint64_t sub_24870CA7C()
{
  unint64_t result;

  result = qword_25777E318;
  if (!qword_25777E318)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BCBB8, &type metadata for TTSVBError.Reason.AsrAssetDownloadFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E318);
  }
  return result;
}

unint64_t sub_24870CAC0()
{
  unint64_t result;

  result = qword_25777E320;
  if (!qword_25777E320)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BCB68, &type metadata for TTSVBError.Reason.DownloadTimedOutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E320);
  }
  return result;
}

unint64_t sub_24870CB04()
{
  unint64_t result;

  result = qword_25777E328;
  if (!qword_25777E328)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BCB18, &type metadata for TTSVBError.Reason.LowDiskSpaceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E328);
  }
  return result;
}

unint64_t sub_24870CB48()
{
  unint64_t result;

  result = qword_25777E330;
  if (!qword_25777E330)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BCAC8, &type metadata for TTSVBError.Reason.CouldNotEstablishNetworkConnectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E330);
  }
  return result;
}

unint64_t sub_24870CB8C()
{
  unint64_t result;

  result = qword_25777E338;
  if (!qword_25777E338)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BCA78, &type metadata for TTSVBError.Reason.CouldNotReadFileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E338);
  }
  return result;
}

unint64_t sub_24870CBD0()
{
  unint64_t result;

  result = qword_25777E340;
  if (!qword_25777E340)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BCA28, &type metadata for TTSVBError.Reason.VoiceModelWithIDDoesNotExistCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E340);
  }
  return result;
}

unint64_t sub_24870CC14()
{
  unint64_t result;

  result = qword_25777E348;
  if (!qword_25777E348)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC9D8, &type metadata for TTSVBError.Reason.SampleWithIDDoesNotExistCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E348);
  }
  return result;
}

unint64_t sub_24870CC58()
{
  unint64_t result;

  result = qword_25777E350;
  if (!qword_25777E350)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC988, &type metadata for TTSVBError.Reason.VoiceWithIDDoesNotExistCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E350);
  }
  return result;
}

unint64_t sub_24870CC9C()
{
  unint64_t result;

  result = qword_25777E358;
  if (!qword_25777E358)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC938, &type metadata for TTSVBError.Reason.SpeechRecognitionSilenceThresholdCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E358);
  }
  return result;
}

unint64_t sub_24870CCE0()
{
  unint64_t result;

  result = qword_25777E360;
  if (!qword_25777E360)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC8E8, &type metadata for TTSVBError.Reason.CouldNotAuthorizeSpeechRecognitionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E360);
  }
  return result;
}

unint64_t sub_24870CD24()
{
  unint64_t result;

  result = qword_25777E368;
  if (!qword_25777E368)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC898, &type metadata for TTSVBError.Reason.CouldNotCreateArchiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E368);
  }
  return result;
}

unint64_t sub_24870CD68()
{
  unint64_t result;

  result = qword_25777E370;
  if (!qword_25777E370)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC848, &type metadata for TTSVBError.Reason.CouldNotStartDaemonTrainingTaskCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E370);
  }
  return result;
}

unint64_t sub_24870CDAC()
{
  unint64_t result;

  result = qword_25777E378;
  if (!qword_25777E378)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC7F8, &type metadata for TTSVBError.Reason.CouldNotSetFileAttributesOnItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E378);
  }
  return result;
}

unint64_t sub_24870CDF0()
{
  unint64_t result;

  result = qword_25777E380;
  if (!qword_25777E380)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC7A8, &type metadata for TTSVBError.Reason.SiriTrainingAssetNotInstalledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E380);
  }
  return result;
}

unint64_t sub_24870CE34()
{
  unint64_t result;

  result = qword_25777E388;
  if (!qword_25777E388)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC758, &type metadata for TTSVBError.Reason.CouldNotInstallTrainingAssetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E388);
  }
  return result;
}

unint64_t sub_24870CE78()
{
  unint64_t result;

  result = qword_25777E390;
  if (!qword_25777E390)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC708, &type metadata for TTSVBError.Reason.CouldNotDecodeValueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E390);
  }
  return result;
}

unint64_t sub_24870CEBC()
{
  unint64_t result;

  result = qword_25777E398;
  if (!qword_25777E398)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC6B8, &type metadata for TTSVBError.Reason.CouldNotLoadContentsOfFileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E398);
  }
  return result;
}

unint64_t sub_24870CF00()
{
  unint64_t result;

  result = qword_25777E3A0;
  if (!qword_25777E3A0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC668, &type metadata for TTSVBError.Reason.CouldNotListContentsOfDirectoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E3A0);
  }
  return result;
}

unint64_t sub_24870CF44()
{
  unint64_t result;

  result = qword_25777E3A8;
  if (!qword_25777E3A8)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC618, &type metadata for TTSVBError.Reason.CouldNotCreateAudioFormatCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E3A8);
  }
  return result;
}

unint64_t sub_24870CF88()
{
  unint64_t result;

  result = qword_25777E3B0;
  if (!qword_25777E3B0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC5C8, &type metadata for TTSVBError.Reason.CouldNotOpenAVAudioFileForReadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E3B0);
  }
  return result;
}

unint64_t sub_24870CFCC()
{
  unint64_t result;

  result = qword_25777E3B8;
  if (!qword_25777E3B8)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC578, &type metadata for TTSVBError.Reason.CouldNotWriteToFileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E3B8);
  }
  return result;
}

unint64_t sub_24870D010()
{
  unint64_t result;

  result = qword_25777E3C0;
  if (!qword_25777E3C0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC528, &type metadata for TTSVBError.Reason.CouldNotEncodeValueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E3C0);
  }
  return result;
}

unint64_t sub_24870D054()
{
  unint64_t result;

  result = qword_25777E3C8;
  if (!qword_25777E3C8)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC4D8, &type metadata for TTSVBError.Reason.CouldNotCreateFileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E3C8);
  }
  return result;
}

unint64_t sub_24870D098()
{
  unint64_t result;

  result = qword_25777E3D0;
  if (!qword_25777E3D0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC488, &type metadata for TTSVBError.Reason.CouldNotMoveItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E3D0);
  }
  return result;
}

unint64_t sub_24870D0DC()
{
  unint64_t result;

  result = qword_25777E3D8;
  if (!qword_25777E3D8)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC438, &type metadata for TTSVBError.Reason.CouldNotCopyItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E3D8);
  }
  return result;
}

unint64_t sub_24870D120()
{
  unint64_t result;

  result = qword_25777E3E0;
  if (!qword_25777E3E0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC3E8, &type metadata for TTSVBError.Reason.CouldNotDeleteItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E3E0);
  }
  return result;
}

unint64_t sub_24870D164()
{
  unint64_t result;

  result = qword_25777E3E8;
  if (!qword_25777E3E8)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC398, &type metadata for TTSVBError.Reason.FileDoesNotExistCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E3E8);
  }
  return result;
}

unint64_t sub_24870D1A8()
{
  unint64_t result;

  result = qword_25777E3F0;
  if (!qword_25777E3F0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC348, &type metadata for TTSVBError.Reason.DirectoryDoesNotExistCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E3F0);
  }
  return result;
}

unint64_t sub_24870D1EC()
{
  unint64_t result;

  result = qword_25777E3F8;
  if (!qword_25777E3F8)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC2F8, &type metadata for TTSVBError.Reason.AssetInferenceDirectoryDoesNotExistCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E3F8);
  }
  return result;
}

unint64_t sub_24870D230()
{
  unint64_t result;

  result = qword_25777E400;
  if (!qword_25777E400)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC2A8, &type metadata for TTSVBError.Reason.VoiceWithNameAlreadyExistsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E400);
  }
  return result;
}

unint64_t sub_24870D274()
{
  unint64_t result;

  result = qword_25777E408;
  if (!qword_25777E408)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC258, &type metadata for TTSVBError.Reason.SiriTTSMetaDataFileDoesNotExistCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E408);
  }
  return result;
}

unint64_t sub_24870D2B8()
{
  unint64_t result;

  result = qword_25777E410;
  if (!qword_25777E410)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC208, &type metadata for TTSVBError.Reason.CouldNotDecodeSiriTTSAssetMetadataJsonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E410);
  }
  return result;
}

unint64_t sub_24870D2FC()
{
  unint64_t result;

  result = qword_25777E418;
  if (!qword_25777E418)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC1B8, &type metadata for TTSVBError.Reason.CouldNotParseSiriTTSAssetMetadataLineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E418);
  }
  return result;
}

unint64_t sub_24870D340()
{
  unint64_t result;

  result = qword_25777E420;
  if (!qword_25777E420)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC168, &type metadata for TTSVBError.Reason.SiriTTSTrainingFrameworkNotAvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E420);
  }
  return result;
}

unint64_t sub_24870D384()
{
  unint64_t result;

  result = qword_25777E428;
  if (!qword_25777E428)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC118, &type metadata for TTSVBError.Reason.DataStoreErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E428);
  }
  return result;
}

unint64_t sub_24870D3C8()
{
  unint64_t result;

  result = qword_25777E430;
  if (!qword_25777E430)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC0C8, &type metadata for TTSVBError.Reason.CouldNotLoadPersistentStoresCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E430);
  }
  return result;
}

unint64_t sub_24870D40C()
{
  unint64_t result;

  result = qword_25777E438;
  if (!qword_25777E438)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC078, &type metadata for TTSVBError.Reason.CouldNotLoadManagedObjectModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E438);
  }
  return result;
}

unint64_t sub_24870D450()
{
  unint64_t result;

  result = qword_25777E440;
  if (!qword_25777E440)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BC028, &type metadata for TTSVBError.Reason.NoCurrentVoiceSampleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E440);
  }
  return result;
}

unint64_t sub_24870D494()
{
  unint64_t result;

  result = qword_25777E448;
  if (!qword_25777E448)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BBFD8, &type metadata for TTSVBError.Reason.CouldNotReadFromAudioFileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E448);
  }
  return result;
}

unint64_t sub_24870D4D8()
{
  unint64_t result;

  result = qword_25777E450;
  if (!qword_25777E450)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BBF88, &type metadata for TTSVBError.Reason.CouldNotWriteToAudioFileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E450);
  }
  return result;
}

unint64_t sub_24870D51C()
{
  unint64_t result;

  result = qword_25777E458;
  if (!qword_25777E458)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BBF38, &type metadata for TTSVBError.Reason.UnexpectedAudioConversionStateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E458);
  }
  return result;
}

unint64_t sub_24870D560()
{
  unint64_t result;

  result = qword_25777E460;
  if (!qword_25777E460)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BBEE8, &type metadata for TTSVBError.Reason.AudioConversionErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E460);
  }
  return result;
}

unint64_t sub_24870D5A4()
{
  unint64_t result;

  result = qword_25777E468;
  if (!qword_25777E468)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BBE98, &type metadata for TTSVBError.Reason.CouldNotCreateAudioBufferCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E468);
  }
  return result;
}

unint64_t sub_24870D5E8()
{
  unint64_t result;

  result = qword_25777E470;
  if (!qword_25777E470)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BBE48, &type metadata for TTSVBError.Reason.CouldNotCreateAudioFileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E470);
  }
  return result;
}

unint64_t sub_24870D62C()
{
  unint64_t result;

  result = qword_25777E478;
  if (!qword_25777E478)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BBDF8, &type metadata for TTSVBError.Reason.CouldNotCreateDirectoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E478);
  }
  return result;
}

unint64_t sub_24870D670()
{
  unint64_t result;

  result = qword_25777E480;
  if (!qword_25777E480)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BBDA8, &type metadata for TTSVBError.Reason.CouldNotCreateAudioConverterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E480);
  }
  return result;
}

unint64_t sub_24870D6B4()
{
  unint64_t result;

  result = qword_25777E488;
  if (!qword_25777E488)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BBD58, &type metadata for TTSVBError.Reason.NoAudioBuffersAvailableForWritingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E488);
  }
  return result;
}

unint64_t sub_24870D6F8()
{
  unint64_t result;

  result = qword_25777E490;
  if (!qword_25777E490)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BBD08, &type metadata for TTSVBError.Reason.AudioSessionErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E490);
  }
  return result;
}

unint64_t sub_24870D73C()
{
  unint64_t result;

  result = qword_25777E498;
  if (!qword_25777E498)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BBCB8, &type metadata for TTSVBError.Reason.AudioEngineErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E498);
  }
  return result;
}

unint64_t sub_24870D780()
{
  unint64_t result;

  result = qword_25777E4A0;
  if (!qword_25777E4A0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BBC68, &type metadata for TTSVBError.Reason.RecordingStateMisconfiguredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E4A0);
  }
  return result;
}

unint64_t sub_24870D7C4()
{
  unint64_t result;

  result = qword_25777E4A8;
  if (!qword_25777E4A8)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BBC18, &type metadata for TTSVBError.Reason.NoRecordingInProgressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E4A8);
  }
  return result;
}

unint64_t sub_24870D808()
{
  unint64_t result;

  result = qword_25777E4B0;
  if (!qword_25777E4B0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BBBC8, &type metadata for TTSVBError.Reason.AlreadyRecordingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E4B0);
  }
  return result;
}

unint64_t sub_24870D84C()
{
  unint64_t result;

  result = qword_25777E4B8;
  if (!qword_25777E4B8)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BBB78, &type metadata for TTSVBError.Reason.UnknownErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E4B8);
  }
  return result;
}

unint64_t sub_24870D890()
{
  unint64_t result;

  result = qword_25777E4C0;
  if (!qword_25777E4C0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BBB28, &type metadata for TTSVBError.Reason.UnspecifiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777E4C0);
  }
  return result;
}

unint64_t sub_24870D8D4()
{
  unint64_t result;

  result = qword_25777E4C8[0];
  if (!qword_25777E4C8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BBAD8, &type metadata for TTSVBError.Reason.CustomCodingKeys);
    atomic_store(result, qword_25777E4C8);
  }
  return result;
}

unint64_t sub_24870D91C()
{
  unint64_t result;

  result = qword_25777C868;
  if (!qword_25777C868)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B7AA8, &type metadata for TTSVBError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777C868);
  }
  return result;
}

unint64_t sub_24870D964()
{
  unint64_t result;

  result = qword_25777C870;
  if (!qword_25777C870)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B7BC0, &type metadata for TTSVBError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777C870);
  }
  return result;
}

unint64_t sub_24870D9AC()
{
  unint64_t result;

  result = qword_25777C878;
  if (!qword_25777C878)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B7B98, &type metadata for TTSVBError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777C878);
  }
  return result;
}

uint64_t sub_24870D9F0()
{
  return sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
}

uint64_t sub_24870DA1C()
{
  return sub_2486F4CA0(&qword_25777C880, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
}

unint64_t sub_24870DA4C()
{
  unint64_t result;

  result = qword_25777C888;
  if (!qword_25777C888)
  {
    result = MEMORY[0x24959AEB4](&protocol conformance descriptor for TTSVBError.Problem, &type metadata for TTSVBError.Problem);
    atomic_store(result, (unint64_t *)&qword_25777C888);
  }
  return result;
}

uint64_t sub_24870DA90()
{
  return sub_2486F4CA0((unint64_t *)&unk_25777C890, type metadata accessor for TTSVBError.Reason, (uint64_t)&protocol conformance descriptor for TTSVBError.Reason);
}

uint64_t sub_24870DABC()
{
  return type metadata accessor for TTSVBBoxedError(0);
}

uint64_t sub_24870DAC4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for TTSVBError(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for TTSVBBoxedError()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TTSVBBoxedError.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x58))();
}

uint64_t dispatch thunk of TTSVBBoxedError.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of TTSVBBoxedError.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of TTSVBBoxedError.unboxed.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

unint64_t initializeBufferWithCopyOfBuffer for TTSVBError(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_BYTE *)(a2 + 16);
    sub_24870953C(*(_QWORD *)a2, v8, v9);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = v9;
    v10 = *(int *)(a3 + 20);
    v11 = (_QWORD *)(a1 + v10);
    v12 = (_QWORD *)(a2 + v10);
    v13 = type metadata accessor for TTSVBError.Reason(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 7u:
      case 0x16u:
      case 0x1Au:
      case 0x1Cu:
        v14 = v12[1];
        *v11 = *v12;
        v11[1] = v14;
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xEu:
      case 0xFu:
      case 0x10u:
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x18u:
        v16 = sub_2487B50CC();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v11, v12, v16);
        goto LABEL_9;
      case 0xCu:
      case 0xDu:
        v17 = sub_2487B50CC();
        v18 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
        v18(v11, v12, v17);
        v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25777C260);
        v18((_QWORD *)((char *)v11 + *(int *)(v19 + 48)), (_QWORD *)((char *)v12 + *(int *)(v19 + 48)), v17);
        goto LABEL_9;
      case 0x15u:
      case 0x17u:
      case 0x1Bu:
      case 0x1Du:
        v20 = sub_2487B5228();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v11, v12, v20);
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        break;
    }
    v21 = *(int *)(a3 + 24);
    v22 = *(void **)(a2 + v21);
    *(_QWORD *)(a1 + v21) = v22;
    v23 = v22;
  }
  return a1;
}

void destroy for TTSVBError(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  sub_2486F507C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for TTSVBError.Reason(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 7u:
    case 0x16u:
    case 0x1Au:
    case 0x1Cu:
      swift_bridgeObjectRelease();
      break;
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xEu:
    case 0xFu:
    case 0x10u:
    case 0x11u:
    case 0x12u:
    case 0x13u:
    case 0x14u:
    case 0x18u:
      v5 = sub_2487B50CC();
      goto LABEL_3;
    case 0xCu:
    case 0xDu:
      v6 = sub_2487B50CC();
      v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
      v7(v4, v6);
      v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25777C260);
      v7(v4 + *(int *)(v8 + 48), v6);
      break;
    case 0x15u:
    case 0x17u:
    case 0x1Bu:
    case 0x1Du:
      v5 = sub_2487B5228();
LABEL_3:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      break;
    default:
      break;
  }

}

uint64_t initializeWithCopy for TTSVBError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_24870953C(*(_QWORD *)a2, v7, v8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v9 = *(int *)(a3 + 20);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = type metadata accessor for TTSVBError.Reason(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 7u:
    case 0x16u:
    case 0x1Au:
    case 0x1Cu:
      v13 = v11[1];
      *v10 = *v11;
      v10[1] = v13;
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xEu:
    case 0xFu:
    case 0x10u:
    case 0x11u:
    case 0x12u:
    case 0x13u:
    case 0x14u:
    case 0x18u:
      v14 = sub_2487B50CC();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v10, v11, v14);
      goto LABEL_7;
    case 0xCu:
    case 0xDu:
      v15 = sub_2487B50CC();
      v16 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      v16(v10, v11, v15);
      v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25777C260);
      v16((_QWORD *)((char *)v10 + *(int *)(v17 + 48)), (_QWORD *)((char *)v11 + *(int *)(v17 + 48)), v15);
      goto LABEL_7;
    case 0x15u:
    case 0x17u:
    case 0x1Bu:
    case 0x1Du:
      v18 = sub_2487B5228();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v10, v11, v18);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      break;
  }
  v19 = *(int *)(a3 + 24);
  v20 = *(void **)(a2 + v19);
  *(_QWORD *)(a1 + v19) = v20;
  v21 = v20;
  return a1;
}

uint64_t assignWithCopy for TTSVBError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_24870953C(*(_QWORD *)a2, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  v11 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v8;
  sub_2486F507C(v9, v10, v11);
  if (a1 != a2)
  {
    v12 = *(int *)(a3 + 20);
    v13 = (_QWORD *)(a1 + v12);
    v14 = (_QWORD *)(a2 + v12);
    sub_2486EDA68(a1 + v12, type metadata accessor for TTSVBError.Reason);
    v15 = type metadata accessor for TTSVBError.Reason(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 7u:
      case 0x16u:
      case 0x1Au:
      case 0x1Cu:
        *v13 = *v14;
        v13[1] = v14[1];
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xEu:
      case 0xFu:
      case 0x10u:
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x18u:
        v16 = sub_2487B50CC();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
        goto LABEL_8;
      case 0xCu:
      case 0xDu:
        v17 = sub_2487B50CC();
        v18 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
        v18(v13, v14, v17);
        v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25777C260);
        v18((_QWORD *)((char *)v13 + *(int *)(v19 + 48)), (_QWORD *)((char *)v14 + *(int *)(v19 + 48)), v17);
        goto LABEL_8;
      case 0x15u:
      case 0x17u:
      case 0x1Bu:
      case 0x1Du:
        v20 = sub_2487B5228();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v13, v14, v20);
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        break;
    }
  }
  v21 = *(int *)(a3 + 24);
  v22 = *(void **)(a1 + v21);
  v23 = *(void **)(a2 + v21);
  *(_QWORD *)(a1 + v21) = v23;
  v24 = v23;

  return a1;
}

uint64_t initializeWithTake for TTSVBError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 20);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for TTSVBError.Reason(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xEu:
    case 0xFu:
    case 0x10u:
    case 0x11u:
    case 0x12u:
    case 0x13u:
    case 0x14u:
    case 0x18u:
      v10 = sub_2487B50CC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      goto LABEL_6;
    case 0xCu:
    case 0xDu:
      v11 = sub_2487B50CC();
      v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
      v12(v7, v8, v11);
      v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25777C260);
      v12(&v7[*(int *)(v13 + 48)], &v8[*(int *)(v13 + 48)], v11);
      goto LABEL_6;
    case 0x15u:
    case 0x17u:
    case 0x1Bu:
    case 0x1Du:
      v14 = sub_2487B5228();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v7, v8, v14);
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      break;
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for TTSVBError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v9 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  sub_2486F507C(v7, v8, v9);
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 20);
    v11 = (char *)(a1 + v10);
    v12 = (char *)(a2 + v10);
    sub_2486EDA68(a1 + v10, type metadata accessor for TTSVBError.Reason);
    v13 = type metadata accessor for TTSVBError.Reason(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xEu:
      case 0xFu:
      case 0x10u:
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x18u:
        v14 = sub_2487B50CC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
        goto LABEL_7;
      case 0xCu:
      case 0xDu:
        v15 = sub_2487B50CC();
        v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
        v16(v11, v12, v15);
        v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25777C260);
        v16(&v11[*(int *)(v17 + 48)], &v12[*(int *)(v17 + 48)], v15);
        goto LABEL_7;
      case 0x15u:
      case 0x17u:
      case 0x1Bu:
      case 0x1Du:
        v18 = sub_2487B5228();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v11, v12, v18);
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        break;
    }
  }
  v19 = *(int *)(a3 + 24);
  v20 = *(void **)(a1 + v19);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);

  return a1;
}

uint64_t getEnumTagSinglePayload for TTSVBError()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24870FAB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for TTSVBError.Reason(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for TTSVBError()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24870FB48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for TTSVBError.Reason(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
  return result;
}

uint64_t sub_24870FBC4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for TTSVBError.Reason(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for TTSVBError.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TTSVBError.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24870FD2C + 4 * byte_2487B7935[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24870FD60 + 4 * byte_2487B7930[v4]))();
}

uint64_t sub_24870FD60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24870FD68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24870FD70);
  return result;
}

uint64_t sub_24870FD7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24870FD84);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24870FD88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24870FD90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24870FD9C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_24870FDA4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for TTSVBError.CodingKeys()
{
  return &type metadata for TTSVBError.CodingKeys;
}

uint64_t destroy for TTSVBError.Problem(uint64_t a1)
{
  return sub_2486F507C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s31TextToSpeechVoiceBankingSupport10TTSVBErrorV7ProblemOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_24870953C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for TTSVBError.Problem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_24870953C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_2486F507C(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for TTSVBError.Problem(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_2486F507C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTSVBError.Problem(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTSVBError.Problem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_24870FF50(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_24870FF68(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem()
{
  return &type metadata for TTSVBError.Problem;
}

uint64_t *initializeBufferWithCopyOfBuffer for TTSVBError.Reason(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 7u:
      case 0x16u:
      case 0x1Au:
      case 0x1Cu:
        v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xEu:
      case 0xFu:
      case 0x10u:
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x18u:
        v10 = sub_2487B50CC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xCu:
      case 0xDu:
        v11 = sub_2487B50CC();
        v12 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
        v12(a1, a2, v11);
        v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25777C260);
        v12((uint64_t *)((char *)a1 + *(int *)(v13 + 48)), (uint64_t *)((char *)a2 + *(int *)(v13 + 48)), v11);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x15u:
      case 0x17u:
      case 0x1Bu:
      case 0x1Du:
        v14 = sub_2487B5228();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for TTSVBError.Reason(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 7:
    case 22:
    case 26:
    case 28:
      return swift_bridgeObjectRelease();
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 8:
    case 9:
    case 10:
    case 11:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 24:
      v3 = sub_2487B50CC();
      goto LABEL_3;
    case 12:
    case 13:
      v7 = sub_2487B50CC();
      v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
      v8(a1, v7);
      v6 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25777C260) + 48);
      v4 = v7;
      v5 = (uint64_t (*)(uint64_t, uint64_t))v8;
      goto LABEL_4;
    case 21:
    case 23:
    case 27:
    case 29:
      v3 = sub_2487B5228();
LABEL_3:
      v4 = v3;
      v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v6 = a1;
LABEL_4:
      result = v5(v6, v4);
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *initializeWithCopy for TTSVBError.Reason(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v10;
  uint64_t v11;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 7u:
    case 0x16u:
    case 0x1Au:
    case 0x1Cu:
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xEu:
    case 0xFu:
    case 0x10u:
    case 0x11u:
    case 0x12u:
    case 0x13u:
    case 0x14u:
    case 0x18u:
      v7 = sub_2487B50CC();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_7;
    case 0xCu:
    case 0xDu:
      v8 = sub_2487B50CC();
      v9 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
      v9(a1, a2, v8);
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25777C260);
      v9((_QWORD *)((char *)a1 + *(int *)(v10 + 48)), (_QWORD *)((char *)a2 + *(int *)(v10 + 48)), v8);
      goto LABEL_7;
    case 0x15u:
    case 0x17u:
    case 0x1Bu:
    case 0x1Du:
      v11 = sub_2487B5228();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *assignWithCopy for TTSVBError.Reason(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_2486EDA68((uint64_t)a1, type metadata accessor for TTSVBError.Reason);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 7u:
      case 0x16u:
      case 0x1Au:
      case 0x1Cu:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xEu:
      case 0xFu:
      case 0x10u:
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x18u:
        v6 = sub_2487B50CC();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_8;
      case 0xCu:
      case 0xDu:
        v7 = sub_2487B50CC();
        v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
        v8(a1, a2, v7);
        v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25777C260);
        v8((_QWORD *)((char *)a1 + *(int *)(v9 + 48)), (_QWORD *)((char *)a2 + *(int *)(v9 + 48)), v7);
        goto LABEL_8;
      case 0x15u:
      case 0x17u:
      case 0x1Bu:
      case 0x1Du:
        v10 = sub_2487B5228();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for TTSVBError.Reason(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xEu:
    case 0xFu:
    case 0x10u:
    case 0x11u:
    case 0x12u:
    case 0x13u:
    case 0x14u:
    case 0x18u:
      v6 = sub_2487B50CC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_6;
    case 0xCu:
    case 0xDu:
      v7 = sub_2487B50CC();
      v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
      v8(a1, a2, v7);
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25777C260);
      v8(&a1[*(int *)(v9 + 48)], &a2[*(int *)(v9 + 48)], v7);
      goto LABEL_6;
    case 0x15u:
    case 0x17u:
    case 0x1Bu:
    case 0x1Du:
      v10 = sub_2487B5228();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for TTSVBError.Reason(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_2486EDA68((uint64_t)a1, type metadata accessor for TTSVBError.Reason);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xEu:
      case 0xFu:
      case 0x10u:
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x18u:
        v6 = sub_2487B50CC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        goto LABEL_7;
      case 0xCu:
      case 0xDu:
        v7 = sub_2487B50CC();
        v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
        v8(a1, a2, v7);
        v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25777C260);
        v8(&a1[*(int *)(v9 + 48)], &a2[*(int *)(v9 + 48)], v7);
        goto LABEL_7;
      case 0x15u:
      case 0x17u:
      case 0x1Bu:
      case 0x1Du:
        v10 = sub_2487B5228();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_248711D68()
{
  uint64_t result;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;

  v6 = &unk_2487B8020;
  result = sub_2487B50CC();
  if (v1 <= 0x3F)
  {
    v2 = *(_QWORD *)(result - 8) + 64;
    v7 = v2;
    v8 = v2;
    v9 = v2;
    v10 = v2;
    v11 = v2;
    v12 = v2;
    v13 = &unk_2487B8020;
    v14 = v2;
    v15 = v2;
    v16 = v2;
    v17 = v2;
    swift_getTupleTypeLayout2();
    v18 = &v5;
    swift_getTupleTypeLayout2();
    v19 = &v4;
    v20 = v2;
    v21 = v2;
    v22 = v2;
    v23 = v2;
    v24 = v2;
    v25 = v2;
    v26 = v2;
    result = sub_2487B5228();
    if (v3 <= 0x3F)
    {
      v27 = *(_QWORD *)(result - 8) + 64;
      v28 = &unk_2487B8020;
      v29 = v27;
      v30 = v2;
      v31 = &unk_2487B8038;
      v32 = &unk_2487B8020;
      v33 = v27;
      v34 = &unk_2487B8020;
      v35 = v27;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TTSVBError.Reason.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xC4)
    goto LABEL_17;
  if (a2 + 60 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 60) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 60;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 60;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 60;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x3D;
  v8 = v6 - 61;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TTSVBError.Reason.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 60 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 60) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xC4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xC3)
    return ((uint64_t (*)(void))((char *)&loc_248711F48 + 4 * byte_2487B7A85[v4]))();
  *a1 = a2 + 60;
  return ((uint64_t (*)(void))((char *)sub_248711F7C + 4 * byte_2487B7A80[v4]))();
}

uint64_t sub_248711F7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248711F84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248711F8CLL);
  return result;
}

uint64_t sub_248711F98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248711FA0);
  *(_BYTE *)result = a2 + 60;
  return result;
}

uint64_t sub_248711FA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248711FAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CodingKeys()
{
  return &type metadata for TTSVBError.Reason.CodingKeys;
}

uint64_t sub_248711FD4()
{
  return 0;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CustomCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CustomCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.UnspecifiedCodingKeys()
{
  return &type metadata for TTSVBError.Reason.UnspecifiedCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.UnknownErrorCodingKeys()
{
  return &type metadata for TTSVBError.Reason.UnknownErrorCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.AlreadyRecordingCodingKeys()
{
  return &type metadata for TTSVBError.Reason.AlreadyRecordingCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.NoRecordingInProgressCodingKeys()
{
  return &type metadata for TTSVBError.Reason.NoRecordingInProgressCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.RecordingStateMisconfiguredCodingKeys()
{
  return &type metadata for TTSVBError.Reason.RecordingStateMisconfiguredCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.AudioEngineErrorCodingKeys()
{
  return &type metadata for TTSVBError.Reason.AudioEngineErrorCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.AudioSessionErrorCodingKeys()
{
  return &type metadata for TTSVBError.Reason.AudioSessionErrorCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.NoAudioBuffersAvailableForWritingCodingKeys()
{
  return &type metadata for TTSVBError.Reason.NoAudioBuffersAvailableForWritingCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CouldNotCreateAudioConverterCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CouldNotCreateAudioConverterCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CouldNotCreateDirectoryCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CouldNotCreateDirectoryCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CouldNotCreateAudioFileCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CouldNotCreateAudioFileCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CouldNotCreateAudioBufferCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CouldNotCreateAudioBufferCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.AudioConversionErrorCodingKeys()
{
  return &type metadata for TTSVBError.Reason.AudioConversionErrorCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.UnexpectedAudioConversionStateCodingKeys()
{
  return &type metadata for TTSVBError.Reason.UnexpectedAudioConversionStateCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CouldNotWriteToAudioFileCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CouldNotWriteToAudioFileCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CouldNotReadFromAudioFileCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CouldNotReadFromAudioFileCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.NoCurrentVoiceSampleCodingKeys()
{
  return &type metadata for TTSVBError.Reason.NoCurrentVoiceSampleCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CouldNotLoadManagedObjectModelCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CouldNotLoadManagedObjectModelCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CouldNotLoadPersistentStoresCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CouldNotLoadPersistentStoresCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.DataStoreErrorCodingKeys()
{
  return &type metadata for TTSVBError.Reason.DataStoreErrorCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.SiriTTSTrainingFrameworkNotAvailableCodingKeys()
{
  return &type metadata for TTSVBError.Reason.SiriTTSTrainingFrameworkNotAvailableCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CouldNotParseSiriTTSAssetMetadataLineCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CouldNotParseSiriTTSAssetMetadataLineCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CouldNotDecodeSiriTTSAssetMetadataJsonCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CouldNotDecodeSiriTTSAssetMetadataJsonCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.SiriTTSMetaDataFileDoesNotExistCodingKeys()
{
  return &type metadata for TTSVBError.Reason.SiriTTSMetaDataFileDoesNotExistCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.VoiceWithNameAlreadyExistsCodingKeys()
{
  return &type metadata for TTSVBError.Reason.VoiceWithNameAlreadyExistsCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.AssetInferenceDirectoryDoesNotExistCodingKeys()
{
  return &type metadata for TTSVBError.Reason.AssetInferenceDirectoryDoesNotExistCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.DirectoryDoesNotExistCodingKeys()
{
  return &type metadata for TTSVBError.Reason.DirectoryDoesNotExistCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.FileDoesNotExistCodingKeys()
{
  return &type metadata for TTSVBError.Reason.FileDoesNotExistCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CouldNotDeleteItemCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CouldNotDeleteItemCodingKeys;
}

_BYTE *sub_2487121C4(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CouldNotCopyItemCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CouldNotCopyItemCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CouldNotMoveItemCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CouldNotMoveItemCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CouldNotCreateFileCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CouldNotCreateFileCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CouldNotEncodeValueCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CouldNotEncodeValueCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CouldNotWriteToFileCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CouldNotWriteToFileCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CouldNotOpenAVAudioFileForReadingCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CouldNotOpenAVAudioFileForReadingCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CouldNotCreateAudioFormatCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CouldNotCreateAudioFormatCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CouldNotListContentsOfDirectoryCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CouldNotListContentsOfDirectoryCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CouldNotLoadContentsOfFileCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CouldNotLoadContentsOfFileCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CouldNotDecodeValueCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CouldNotDecodeValueCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CouldNotInstallTrainingAssetCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CouldNotInstallTrainingAssetCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.SiriTrainingAssetNotInstalledCodingKeys()
{
  return &type metadata for TTSVBError.Reason.SiriTrainingAssetNotInstalledCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CouldNotSetFileAttributesOnItemCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CouldNotSetFileAttributesOnItemCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CouldNotStartDaemonTrainingTaskCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CouldNotStartDaemonTrainingTaskCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CouldNotCreateArchiveCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CouldNotCreateArchiveCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CouldNotAuthorizeSpeechRecognitionCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CouldNotAuthorizeSpeechRecognitionCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.SpeechRecognitionSilenceThresholdCodingKeys()
{
  return &type metadata for TTSVBError.Reason.SpeechRecognitionSilenceThresholdCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.VoiceWithIDDoesNotExistCodingKeys()
{
  return &type metadata for TTSVBError.Reason.VoiceWithIDDoesNotExistCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.SampleWithIDDoesNotExistCodingKeys()
{
  return &type metadata for TTSVBError.Reason.SampleWithIDDoesNotExistCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.VoiceModelWithIDDoesNotExistCodingKeys()
{
  return &type metadata for TTSVBError.Reason.VoiceModelWithIDDoesNotExistCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CouldNotReadFileCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CouldNotReadFileCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CouldNotEstablishNetworkConnectionCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CouldNotEstablishNetworkConnectionCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.LowDiskSpaceCodingKeys()
{
  return &type metadata for TTSVBError.Reason.LowDiskSpaceCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.DownloadTimedOutCodingKeys()
{
  return &type metadata for TTSVBError.Reason.DownloadTimedOutCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.AsrAssetDownloadFailedCodingKeys()
{
  return &type metadata for TTSVBError.Reason.AsrAssetDownloadFailedCodingKeys;
}

uint64_t getEnumTagSinglePayload for TTSVBAccessManager.Event(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s31TextToSpeechVoiceBankingSupport10TTSVBErrorV6ReasonO26CouldNotCopyItemCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24871243C + 4 * byte_2487B7A8F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_248712470 + 4 * byte_2487B7A8A[v4]))();
}

uint64_t sub_248712470(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248712478(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248712480);
  return result;
}

uint64_t sub_24871248C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248712494);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_248712498(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2487124A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.InputNodeFormatInvalidCodingKeys()
{
  return &type metadata for TTSVBError.Reason.InputNodeFormatInvalidCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.InputNotAvailableCodingKeys()
{
  return &type metadata for TTSVBError.Reason.InputNotAvailableCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CategoryWithNameAlreadyExistsCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CategoryWithNameAlreadyExistsCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.CategoryWithIDDoesNotExistCodingKeys()
{
  return &type metadata for TTSVBError.Reason.CategoryWithIDDoesNotExistCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.PhraseWithTextDoesExistCodingKeys()
{
  return &type metadata for TTSVBError.Reason.PhraseWithTextDoesExistCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Reason.PhraseWithIDDoesNotExistCodingKeys()
{
  return &type metadata for TTSVBError.Reason.PhraseWithIDDoesNotExistCodingKeys;
}

uint64_t getEnumTagSinglePayload for TTSVBError.Problem.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE4)
    goto LABEL_17;
  if (a2 + 28 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 28) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 28;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 28;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 28;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1D;
  v8 = v6 - 29;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TTSVBError.Problem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 28 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 28) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE3)
    return ((uint64_t (*)(void))((char *)&loc_2487125E8 + 4 * byte_2487B7A99[v4]))();
  *a1 = a2 + 28;
  return ((uint64_t (*)(void))((char *)sub_24871261C + 4 * byte_2487B7A94[v4]))();
}

uint64_t sub_24871261C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248712624(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24871262CLL);
  return result;
}

uint64_t sub_248712638(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248712640);
  *(_BYTE *)result = a2 + 28;
  return result;
}

uint64_t sub_248712644(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24871264C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.CodingKeys()
{
  return &type metadata for TTSVBError.Problem.CodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.CustomCodingKeys()
{
  return &type metadata for TTSVBError.Problem.CustomCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.UnspecifiedCodingKeys()
{
  return &type metadata for TTSVBError.Problem.UnspecifiedCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.CouldNotStartAudioEngineCodingKeys()
{
  return &type metadata for TTSVBError.Problem.CouldNotStartAudioEngineCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.CouldNotSetAudioSessionCategoryCodingKeys()
{
  return &type metadata for TTSVBError.Problem.CouldNotSetAudioSessionCategoryCodingKeys;
}

uint64_t getEnumTagSinglePayload for TTSVBInstalledVoiceModel.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s31TextToSpeechVoiceBankingSupport10TTSVBErrorV6ReasonO16CustomCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_248712738 + 4 * byte_2487B7A9E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_248712758 + 4 * byte_2487B7AA3[v4]))();
}

_BYTE *sub_248712738(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_248712758(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_248712760(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_248712768(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_248712770(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_248712778(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.CouldNotSetAudioSessionActiveCodingKeys()
{
  return &type metadata for TTSVBError.Problem.CouldNotSetAudioSessionActiveCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.CouldNotBeginRecordingCodingKeys()
{
  return &type metadata for TTSVBError.Problem.CouldNotBeginRecordingCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.CouldNotEndRecordingCodingKeys()
{
  return &type metadata for TTSVBError.Problem.CouldNotEndRecordingCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.CouldNotCreateAudioFileCodingKeys()
{
  return &type metadata for TTSVBError.Problem.CouldNotCreateAudioFileCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.CouldNotSaveAudioToSampleCodingKeys()
{
  return &type metadata for TTSVBError.Problem.CouldNotSaveAudioToSampleCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.CouldNotLoadDataStoresCodingKeys()
{
  return &type metadata for TTSVBError.Problem.CouldNotLoadDataStoresCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.CouldNotSaveDataStoresCodingKeys()
{
  return &type metadata for TTSVBError.Problem.CouldNotSaveDataStoresCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.CouldNotLoadSiriTrainingAssetCodingKeys()
{
  return &type metadata for TTSVBError.Problem.CouldNotLoadSiriTrainingAssetCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.CouldNotCreateVoiceCodingKeys()
{
  return &type metadata for TTSVBError.Problem.CouldNotCreateVoiceCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.CouldNotPrepareForTrainingCodingKeys()
{
  return &type metadata for TTSVBError.Problem.CouldNotPrepareForTrainingCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.CouldNotTrainModelInProcessCodingKeys()
{
  return &type metadata for TTSVBError.Problem.CouldNotTrainModelInProcessCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.CouldNotTrainModelWithDaemonCodingKeys()
{
  return &type metadata for TTSVBError.Problem.CouldNotTrainModelWithDaemonCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.CouldNotRetrieveTrainingScriptsCodingKeys()
{
  return &type metadata for TTSVBError.Problem.CouldNotRetrieveTrainingScriptsCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.CouldNotExportTrainingDataCodingKeys()
{
  return &type metadata for TTSVBError.Problem.CouldNotExportTrainingDataCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.CouldNotImportTrainingDataCodingKeys()
{
  return &type metadata for TTSVBError.Problem.CouldNotImportTrainingDataCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.CouldNotDeleteVoiceCodingKeys()
{
  return &type metadata for TTSVBError.Problem.CouldNotDeleteVoiceCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.CouldNotDeleteDataArchiveCodingKeys()
{
  return &type metadata for TTSVBError.Problem.CouldNotDeleteDataArchiveCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.CouldNotMoveDataArchiveCodingKeys()
{
  return &type metadata for TTSVBError.Problem.CouldNotMoveDataArchiveCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.CouldNotEndAudioPlaybackCodingKeys()
{
  return &type metadata for TTSVBError.Problem.CouldNotEndAudioPlaybackCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.CouldNotRecognizeSpeechCodingKeys()
{
  return &type metadata for TTSVBError.Problem.CouldNotRecognizeSpeechCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.CouldNotInstallAudioTapCodingKeys()
{
  return &type metadata for TTSVBError.Problem.CouldNotInstallAudioTapCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.CouldNotCreateCategoryCodingKeys()
{
  return &type metadata for TTSVBError.Problem.CouldNotCreateCategoryCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.CouldNotCreatePhraseCodingKeys()
{
  return &type metadata for TTSVBError.Problem.CouldNotCreatePhraseCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.CouldNotUpdateCategoryCodingKeys()
{
  return &type metadata for TTSVBError.Problem.CouldNotUpdateCategoryCodingKeys;
}

ValueMetadata *type metadata accessor for TTSVBError.Problem.CouldNotUpdatePhraseCodingKeys()
{
  return &type metadata for TTSVBError.Problem.CouldNotUpdatePhraseCodingKeys;
}

unint64_t sub_248712918()
{
  unint64_t result;

  result = qword_2577808D0[0];
  if (!qword_2577808D0[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B97F0, &type metadata for TTSVBError.Problem.CouldNotSetAudioSessionActiveCodingKeys);
    atomic_store(result, qword_2577808D0);
  }
  return result;
}

unint64_t sub_248712960()
{
  unint64_t result;

  result = qword_257780AE0[0];
  if (!qword_257780AE0[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B98A8, &type metadata for TTSVBError.Problem.CouldNotSetAudioSessionCategoryCodingKeys);
    atomic_store(result, qword_257780AE0);
  }
  return result;
}

unint64_t sub_2487129A8()
{
  unint64_t result;

  result = qword_257780EF0[0];
  if (!qword_257780EF0[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9A00, &type metadata for TTSVBError.Problem.CustomCodingKeys);
    atomic_store(result, qword_257780EF0);
  }
  return result;
}

unint64_t sub_2487129F0()
{
  unint64_t result;

  result = qword_257781100[0];
  if (!qword_257781100[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9AB8, &type metadata for TTSVBError.Problem.CodingKeys);
    atomic_store(result, qword_257781100);
  }
  return result;
}

unint64_t sub_248712A38()
{
  unint64_t result;

  result = qword_257781310[0];
  if (!qword_257781310[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9B70, &type metadata for TTSVBError.Reason.PhraseWithIDDoesNotExistCodingKeys);
    atomic_store(result, qword_257781310);
  }
  return result;
}

unint64_t sub_248712A80()
{
  unint64_t result;

  result = qword_257781520[0];
  if (!qword_257781520[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9C28, &type metadata for TTSVBError.Reason.PhraseWithTextDoesExistCodingKeys);
    atomic_store(result, qword_257781520);
  }
  return result;
}

unint64_t sub_248712AC8()
{
  unint64_t result;

  result = qword_257781730[0];
  if (!qword_257781730[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9CE0, &type metadata for TTSVBError.Reason.CategoryWithIDDoesNotExistCodingKeys);
    atomic_store(result, qword_257781730);
  }
  return result;
}

unint64_t sub_248712B10()
{
  unint64_t result;

  result = qword_257781940[0];
  if (!qword_257781940[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9D98, &type metadata for TTSVBError.Reason.CategoryWithNameAlreadyExistsCodingKeys);
    atomic_store(result, qword_257781940);
  }
  return result;
}

unint64_t sub_248712B58()
{
  unint64_t result;

  result = qword_257781C50[0];
  if (!qword_257781C50[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9EA0, &type metadata for TTSVBError.Reason.InputNodeFormatInvalidCodingKeys);
    atomic_store(result, qword_257781C50);
  }
  return result;
}

unint64_t sub_248712BA0()
{
  unint64_t result;

  result = qword_257782260[0];
  if (!qword_257782260[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA098, &type metadata for TTSVBError.Reason.CouldNotReadFileCodingKeys);
    atomic_store(result, qword_257782260);
  }
  return result;
}

unint64_t sub_248712BE8()
{
  unint64_t result;

  result = qword_257782470[0];
  if (!qword_257782470[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA150, &type metadata for TTSVBError.Reason.VoiceModelWithIDDoesNotExistCodingKeys);
    atomic_store(result, qword_257782470);
  }
  return result;
}

unint64_t sub_248712C30()
{
  unint64_t result;

  result = qword_257782680[0];
  if (!qword_257782680[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA208, &type metadata for TTSVBError.Reason.SampleWithIDDoesNotExistCodingKeys);
    atomic_store(result, qword_257782680);
  }
  return result;
}

unint64_t sub_248712C78()
{
  unint64_t result;

  result = qword_257782890[0];
  if (!qword_257782890[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA2C0, &type metadata for TTSVBError.Reason.VoiceWithIDDoesNotExistCodingKeys);
    atomic_store(result, qword_257782890);
  }
  return result;
}

unint64_t sub_248712CC0()
{
  unint64_t result;

  result = qword_257782CA0[0];
  if (!qword_257782CA0[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA418, &type metadata for TTSVBError.Reason.CouldNotCreateArchiveCodingKeys);
    atomic_store(result, qword_257782CA0);
  }
  return result;
}

unint64_t sub_248712D08()
{
  unint64_t result;

  result = qword_257782FB0[0];
  if (!qword_257782FB0[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA520, &type metadata for TTSVBError.Reason.CouldNotSetFileAttributesOnItemCodingKeys);
    atomic_store(result, qword_257782FB0);
  }
  return result;
}

unint64_t sub_248712D50()
{
  unint64_t result;

  result = qword_2577834C0[0];
  if (!qword_2577834C0[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA6C8, &type metadata for TTSVBError.Reason.CouldNotLoadContentsOfFileCodingKeys);
    atomic_store(result, qword_2577834C0);
  }
  return result;
}

unint64_t sub_248712D98()
{
  unint64_t result;

  result = qword_2577836D0[0];
  if (!qword_2577836D0[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA780, &type metadata for TTSVBError.Reason.CouldNotListContentsOfDirectoryCodingKeys);
    atomic_store(result, qword_2577836D0);
  }
  return result;
}

unint64_t sub_248712DE0()
{
  unint64_t result;

  result = qword_2577839E0[0];
  if (!qword_2577839E0[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA888, &type metadata for TTSVBError.Reason.CouldNotOpenAVAudioFileForReadingCodingKeys);
    atomic_store(result, qword_2577839E0);
  }
  return result;
}

unint64_t sub_248712E28()
{
  unint64_t result;

  result = qword_257783BF0[0];
  if (!qword_257783BF0[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA940, &type metadata for TTSVBError.Reason.CouldNotWriteToFileCodingKeys);
    atomic_store(result, qword_257783BF0);
  }
  return result;
}

unint64_t sub_248712E70()
{
  unint64_t result;

  result = qword_257783F00[0];
  if (!qword_257783F00[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BAA48, &type metadata for TTSVBError.Reason.CouldNotCreateFileCodingKeys);
    atomic_store(result, qword_257783F00);
  }
  return result;
}

unint64_t sub_248712EB8()
{
  unint64_t result;

  result = qword_257784110[0];
  if (!qword_257784110[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BAB00, &type metadata for TTSVBError.Reason.CouldNotMoveItemCodingKeys);
    atomic_store(result, qword_257784110);
  }
  return result;
}

unint64_t sub_248712F00()
{
  unint64_t result;

  result = qword_257784320[0];
  if (!qword_257784320[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BABB8, &type metadata for TTSVBError.Reason.CouldNotCopyItemCodingKeys);
    atomic_store(result, qword_257784320);
  }
  return result;
}

unint64_t sub_248712F48()
{
  unint64_t result;

  result = qword_257784530[0];
  if (!qword_257784530[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BAC70, &type metadata for TTSVBError.Reason.CouldNotDeleteItemCodingKeys);
    atomic_store(result, qword_257784530);
  }
  return result;
}

unint64_t sub_248712F90()
{
  unint64_t result;

  result = qword_257784740[0];
  if (!qword_257784740[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BAD28, &type metadata for TTSVBError.Reason.FileDoesNotExistCodingKeys);
    atomic_store(result, qword_257784740);
  }
  return result;
}

unint64_t sub_248712FD8()
{
  unint64_t result;

  result = qword_257784950[0];
  if (!qword_257784950[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BADE0, &type metadata for TTSVBError.Reason.DirectoryDoesNotExistCodingKeys);
    atomic_store(result, qword_257784950);
  }
  return result;
}

unint64_t sub_248713020()
{
  unint64_t result;

  result = qword_257784B60[0];
  if (!qword_257784B60[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BAE98, &type metadata for TTSVBError.Reason.AssetInferenceDirectoryDoesNotExistCodingKeys);
    atomic_store(result, qword_257784B60);
  }
  return result;
}

unint64_t sub_248713068()
{
  unint64_t result;

  result = qword_257784D70[0];
  if (!qword_257784D70[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BAF50, &type metadata for TTSVBError.Reason.VoiceWithNameAlreadyExistsCodingKeys);
    atomic_store(result, qword_257784D70);
  }
  return result;
}

unint64_t sub_2487130B0()
{
  unint64_t result;

  result = qword_257785480[0];
  if (!qword_257785480[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB198, &type metadata for TTSVBError.Reason.CouldNotLoadPersistentStoresCodingKeys);
    atomic_store(result, qword_257785480);
  }
  return result;
}

unint64_t sub_2487130F8()
{
  unint64_t result;

  result = qword_257785690[0];
  if (!qword_257785690[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB250, &type metadata for TTSVBError.Reason.CouldNotLoadManagedObjectModelCodingKeys);
    atomic_store(result, qword_257785690);
  }
  return result;
}

unint64_t sub_248713140()
{
  unint64_t result;

  result = qword_2577859A0[0];
  if (!qword_2577859A0[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB358, &type metadata for TTSVBError.Reason.CouldNotReadFromAudioFileCodingKeys);
    atomic_store(result, qword_2577859A0);
  }
  return result;
}

unint64_t sub_248713188()
{
  unint64_t result;

  result = qword_257785BB0[0];
  if (!qword_257785BB0[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB410, &type metadata for TTSVBError.Reason.CouldNotWriteToAudioFileCodingKeys);
    atomic_store(result, qword_257785BB0);
  }
  return result;
}

unint64_t sub_2487131D0()
{
  unint64_t result;

  result = qword_2577860C0[0];
  if (!qword_2577860C0[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB5B8, &type metadata for TTSVBError.Reason.CouldNotCreateAudioFileCodingKeys);
    atomic_store(result, qword_2577860C0);
  }
  return result;
}

unint64_t sub_248713218()
{
  unint64_t result;

  result = qword_2577862D0[0];
  if (!qword_2577862D0[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB670, &type metadata for TTSVBError.Reason.CouldNotCreateDirectoryCodingKeys);
    atomic_store(result, qword_2577862D0);
  }
  return result;
}

unint64_t sub_248713260()
{
  unint64_t result;

  result = qword_257786DE0[0];
  if (!qword_257786DE0[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB9F8, &type metadata for TTSVBError.Reason.CustomCodingKeys);
    atomic_store(result, qword_257786DE0);
  }
  return result;
}

unint64_t sub_2487132A8()
{
  unint64_t result;

  result = qword_257786FF0[0];
  if (!qword_257786FF0[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BBAB0, &type metadata for TTSVBError.Reason.CodingKeys);
    atomic_store(result, qword_257786FF0);
  }
  return result;
}

unint64_t sub_2487132F0()
{
  unint64_t result;

  result = qword_257787100;
  if (!qword_257787100)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB968, &type metadata for TTSVBError.Reason.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257787100);
  }
  return result;
}

unint64_t sub_248713338()
{
  unint64_t result;

  result = qword_257787108[0];
  if (!qword_257787108[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB990, &type metadata for TTSVBError.Reason.CustomCodingKeys);
    atomic_store(result, qword_257787108);
  }
  return result;
}

unint64_t sub_248713380()
{
  unint64_t result;

  result = qword_257787190;
  if (!qword_257787190)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB918, &type metadata for TTSVBError.Reason.UnspecifiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257787190);
  }
  return result;
}

unint64_t sub_2487133C8()
{
  unint64_t result;

  result = qword_257787198[0];
  if (!qword_257787198[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB940, &type metadata for TTSVBError.Reason.UnspecifiedCodingKeys);
    atomic_store(result, qword_257787198);
  }
  return result;
}

unint64_t sub_248713410()
{
  unint64_t result;

  result = qword_257787220;
  if (!qword_257787220)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB8C8, &type metadata for TTSVBError.Reason.UnknownErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257787220);
  }
  return result;
}

unint64_t sub_248713458()
{
  unint64_t result;

  result = qword_257787228[0];
  if (!qword_257787228[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB8F0, &type metadata for TTSVBError.Reason.UnknownErrorCodingKeys);
    atomic_store(result, qword_257787228);
  }
  return result;
}

unint64_t sub_2487134A0()
{
  unint64_t result;

  result = qword_2577872B0;
  if (!qword_2577872B0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB878, &type metadata for TTSVBError.Reason.AlreadyRecordingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577872B0);
  }
  return result;
}

unint64_t sub_2487134E8()
{
  unint64_t result;

  result = qword_2577872B8[0];
  if (!qword_2577872B8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB8A0, &type metadata for TTSVBError.Reason.AlreadyRecordingCodingKeys);
    atomic_store(result, qword_2577872B8);
  }
  return result;
}

unint64_t sub_248713530()
{
  unint64_t result;

  result = qword_257787340;
  if (!qword_257787340)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB828, &type metadata for TTSVBError.Reason.NoRecordingInProgressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257787340);
  }
  return result;
}

unint64_t sub_248713578()
{
  unint64_t result;

  result = qword_257787348[0];
  if (!qword_257787348[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB850, &type metadata for TTSVBError.Reason.NoRecordingInProgressCodingKeys);
    atomic_store(result, qword_257787348);
  }
  return result;
}

unint64_t sub_2487135C0()
{
  unint64_t result;

  result = qword_2577873D0;
  if (!qword_2577873D0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB7D8, &type metadata for TTSVBError.Reason.RecordingStateMisconfiguredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577873D0);
  }
  return result;
}

unint64_t sub_248713608()
{
  unint64_t result;

  result = qword_2577873D8[0];
  if (!qword_2577873D8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB800, &type metadata for TTSVBError.Reason.RecordingStateMisconfiguredCodingKeys);
    atomic_store(result, qword_2577873D8);
  }
  return result;
}

unint64_t sub_248713650()
{
  unint64_t result;

  result = qword_257787460;
  if (!qword_257787460)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB788, &type metadata for TTSVBError.Reason.AudioEngineErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257787460);
  }
  return result;
}

unint64_t sub_248713698()
{
  unint64_t result;

  result = qword_257787468[0];
  if (!qword_257787468[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB7B0, &type metadata for TTSVBError.Reason.AudioEngineErrorCodingKeys);
    atomic_store(result, qword_257787468);
  }
  return result;
}

unint64_t sub_2487136E0()
{
  unint64_t result;

  result = qword_2577874F0;
  if (!qword_2577874F0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB738, &type metadata for TTSVBError.Reason.AudioSessionErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577874F0);
  }
  return result;
}

unint64_t sub_248713728()
{
  unint64_t result;

  result = qword_2577874F8[0];
  if (!qword_2577874F8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB760, &type metadata for TTSVBError.Reason.AudioSessionErrorCodingKeys);
    atomic_store(result, qword_2577874F8);
  }
  return result;
}

unint64_t sub_248713770()
{
  unint64_t result;

  result = qword_257787580;
  if (!qword_257787580)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB6E8, &type metadata for TTSVBError.Reason.NoAudioBuffersAvailableForWritingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257787580);
  }
  return result;
}

unint64_t sub_2487137B8()
{
  unint64_t result;

  result = qword_257787588[0];
  if (!qword_257787588[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB710, &type metadata for TTSVBError.Reason.NoAudioBuffersAvailableForWritingCodingKeys);
    atomic_store(result, qword_257787588);
  }
  return result;
}

unint64_t sub_248713800()
{
  unint64_t result;

  result = qword_257787610;
  if (!qword_257787610)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB698, &type metadata for TTSVBError.Reason.CouldNotCreateAudioConverterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257787610);
  }
  return result;
}

unint64_t sub_248713848()
{
  unint64_t result;

  result = qword_257787618[0];
  if (!qword_257787618[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB6C0, &type metadata for TTSVBError.Reason.CouldNotCreateAudioConverterCodingKeys);
    atomic_store(result, qword_257787618);
  }
  return result;
}

unint64_t sub_248713890()
{
  unint64_t result;

  result = qword_2577876A0;
  if (!qword_2577876A0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB5E0, &type metadata for TTSVBError.Reason.CouldNotCreateDirectoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577876A0);
  }
  return result;
}

unint64_t sub_2487138D8()
{
  unint64_t result;

  result = qword_2577876A8[0];
  if (!qword_2577876A8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB608, &type metadata for TTSVBError.Reason.CouldNotCreateDirectoryCodingKeys);
    atomic_store(result, qword_2577876A8);
  }
  return result;
}

unint64_t sub_248713920()
{
  unint64_t result;

  result = qword_257787730;
  if (!qword_257787730)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB528, &type metadata for TTSVBError.Reason.CouldNotCreateAudioFileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257787730);
  }
  return result;
}

unint64_t sub_248713968()
{
  unint64_t result;

  result = qword_257787738[0];
  if (!qword_257787738[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB550, &type metadata for TTSVBError.Reason.CouldNotCreateAudioFileCodingKeys);
    atomic_store(result, qword_257787738);
  }
  return result;
}

unint64_t sub_2487139B0()
{
  unint64_t result;

  result = qword_2577877C0;
  if (!qword_2577877C0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB4D8, &type metadata for TTSVBError.Reason.CouldNotCreateAudioBufferCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577877C0);
  }
  return result;
}

unint64_t sub_2487139F8()
{
  unint64_t result;

  result = qword_2577877C8[0];
  if (!qword_2577877C8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB500, &type metadata for TTSVBError.Reason.CouldNotCreateAudioBufferCodingKeys);
    atomic_store(result, qword_2577877C8);
  }
  return result;
}

unint64_t sub_248713A40()
{
  unint64_t result;

  result = qword_257787850;
  if (!qword_257787850)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB488, &type metadata for TTSVBError.Reason.AudioConversionErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257787850);
  }
  return result;
}

unint64_t sub_248713A88()
{
  unint64_t result;

  result = qword_257787858[0];
  if (!qword_257787858[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB4B0, &type metadata for TTSVBError.Reason.AudioConversionErrorCodingKeys);
    atomic_store(result, qword_257787858);
  }
  return result;
}

unint64_t sub_248713AD0()
{
  unint64_t result;

  result = qword_2577878E0;
  if (!qword_2577878E0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB438, &type metadata for TTSVBError.Reason.UnexpectedAudioConversionStateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577878E0);
  }
  return result;
}

unint64_t sub_248713B18()
{
  unint64_t result;

  result = qword_2577878E8[0];
  if (!qword_2577878E8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB460, &type metadata for TTSVBError.Reason.UnexpectedAudioConversionStateCodingKeys);
    atomic_store(result, qword_2577878E8);
  }
  return result;
}

unint64_t sub_248713B60()
{
  unint64_t result;

  result = qword_257787970;
  if (!qword_257787970)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB380, &type metadata for TTSVBError.Reason.CouldNotWriteToAudioFileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257787970);
  }
  return result;
}

unint64_t sub_248713BA8()
{
  unint64_t result;

  result = qword_257787978;
  if (!qword_257787978)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB3A8, &type metadata for TTSVBError.Reason.CouldNotWriteToAudioFileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257787978);
  }
  return result;
}

unint64_t sub_248713BF0()
{
  unint64_t result;

  result = qword_257787A00;
  if (!qword_257787A00)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB2C8, &type metadata for TTSVBError.Reason.CouldNotReadFromAudioFileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257787A00);
  }
  return result;
}

unint64_t sub_248713C38()
{
  unint64_t result;

  result = qword_257787A08[0];
  if (!qword_257787A08[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB2F0, &type metadata for TTSVBError.Reason.CouldNotReadFromAudioFileCodingKeys);
    atomic_store(result, qword_257787A08);
  }
  return result;
}

unint64_t sub_248713C80()
{
  unint64_t result;

  result = qword_257787A90;
  if (!qword_257787A90)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB278, &type metadata for TTSVBError.Reason.NoCurrentVoiceSampleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257787A90);
  }
  return result;
}

unint64_t sub_248713CC8()
{
  unint64_t result;

  result = qword_257787A98[0];
  if (!qword_257787A98[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB2A0, &type metadata for TTSVBError.Reason.NoCurrentVoiceSampleCodingKeys);
    atomic_store(result, qword_257787A98);
  }
  return result;
}

unint64_t sub_248713D10()
{
  unint64_t result;

  result = qword_257787B20;
  if (!qword_257787B20)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB1C0, &type metadata for TTSVBError.Reason.CouldNotLoadManagedObjectModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257787B20);
  }
  return result;
}

unint64_t sub_248713D58()
{
  unint64_t result;

  result = qword_257787B28[0];
  if (!qword_257787B28[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB1E8, &type metadata for TTSVBError.Reason.CouldNotLoadManagedObjectModelCodingKeys);
    atomic_store(result, qword_257787B28);
  }
  return result;
}

unint64_t sub_248713DA0()
{
  unint64_t result;

  result = qword_257787BB0;
  if (!qword_257787BB0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB108, &type metadata for TTSVBError.Reason.CouldNotLoadPersistentStoresCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257787BB0);
  }
  return result;
}

unint64_t sub_248713DE8()
{
  unint64_t result;

  result = qword_257787BB8[0];
  if (!qword_257787BB8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB130, &type metadata for TTSVBError.Reason.CouldNotLoadPersistentStoresCodingKeys);
    atomic_store(result, qword_257787BB8);
  }
  return result;
}

unint64_t sub_248713E30()
{
  unint64_t result;

  result = qword_257787C40;
  if (!qword_257787C40)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB0B8, &type metadata for TTSVBError.Reason.DataStoreErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257787C40);
  }
  return result;
}

unint64_t sub_248713E78()
{
  unint64_t result;

  result = qword_257787C48[0];
  if (!qword_257787C48[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB0E0, &type metadata for TTSVBError.Reason.DataStoreErrorCodingKeys);
    atomic_store(result, qword_257787C48);
  }
  return result;
}

unint64_t sub_248713EC0()
{
  unint64_t result;

  result = qword_257787CD0;
  if (!qword_257787CD0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB068, &type metadata for TTSVBError.Reason.SiriTTSTrainingFrameworkNotAvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257787CD0);
  }
  return result;
}

unint64_t sub_248713F08()
{
  unint64_t result;

  result = qword_257787CD8[0];
  if (!qword_257787CD8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB090, &type metadata for TTSVBError.Reason.SiriTTSTrainingFrameworkNotAvailableCodingKeys);
    atomic_store(result, qword_257787CD8);
  }
  return result;
}

unint64_t sub_248713F50()
{
  unint64_t result;

  result = qword_257787D60;
  if (!qword_257787D60)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB018, &type metadata for TTSVBError.Reason.CouldNotParseSiriTTSAssetMetadataLineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257787D60);
  }
  return result;
}

unint64_t sub_248713F98()
{
  unint64_t result;

  result = qword_257787D68[0];
  if (!qword_257787D68[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BB040, &type metadata for TTSVBError.Reason.CouldNotParseSiriTTSAssetMetadataLineCodingKeys);
    atomic_store(result, qword_257787D68);
  }
  return result;
}

unint64_t sub_248713FE0()
{
  unint64_t result;

  result = qword_257787DF0;
  if (!qword_257787DF0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BAFC8, &type metadata for TTSVBError.Reason.CouldNotDecodeSiriTTSAssetMetadataJsonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257787DF0);
  }
  return result;
}

unint64_t sub_248714028()
{
  unint64_t result;

  result = qword_257787DF8[0];
  if (!qword_257787DF8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BAFF0, &type metadata for TTSVBError.Reason.CouldNotDecodeSiriTTSAssetMetadataJsonCodingKeys);
    atomic_store(result, qword_257787DF8);
  }
  return result;
}

unint64_t sub_248714070()
{
  unint64_t result;

  result = qword_257787E80;
  if (!qword_257787E80)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BAF78, &type metadata for TTSVBError.Reason.SiriTTSMetaDataFileDoesNotExistCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257787E80);
  }
  return result;
}

unint64_t sub_2487140B8()
{
  unint64_t result;

  result = qword_257787E88[0];
  if (!qword_257787E88[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BAFA0, &type metadata for TTSVBError.Reason.SiriTTSMetaDataFileDoesNotExistCodingKeys);
    atomic_store(result, qword_257787E88);
  }
  return result;
}

unint64_t sub_248714100()
{
  unint64_t result;

  result = qword_257787F10;
  if (!qword_257787F10)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BAEC0, &type metadata for TTSVBError.Reason.VoiceWithNameAlreadyExistsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257787F10);
  }
  return result;
}

unint64_t sub_248714148()
{
  unint64_t result;

  result = qword_257787F18[0];
  if (!qword_257787F18[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BAEE8, &type metadata for TTSVBError.Reason.VoiceWithNameAlreadyExistsCodingKeys);
    atomic_store(result, qword_257787F18);
  }
  return result;
}

unint64_t sub_248714190()
{
  unint64_t result;

  result = qword_257787FA0;
  if (!qword_257787FA0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BAE08, &type metadata for TTSVBError.Reason.AssetInferenceDirectoryDoesNotExistCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257787FA0);
  }
  return result;
}

unint64_t sub_2487141D8()
{
  unint64_t result;

  result = qword_257787FA8[0];
  if (!qword_257787FA8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BAE30, &type metadata for TTSVBError.Reason.AssetInferenceDirectoryDoesNotExistCodingKeys);
    atomic_store(result, qword_257787FA8);
  }
  return result;
}

unint64_t sub_248714220()
{
  unint64_t result;

  result = qword_257788030;
  if (!qword_257788030)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BAD50, &type metadata for TTSVBError.Reason.DirectoryDoesNotExistCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257788030);
  }
  return result;
}

unint64_t sub_248714268()
{
  unint64_t result;

  result = qword_257788038[0];
  if (!qword_257788038[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BAD78, &type metadata for TTSVBError.Reason.DirectoryDoesNotExistCodingKeys);
    atomic_store(result, qword_257788038);
  }
  return result;
}

unint64_t sub_2487142B0()
{
  unint64_t result;

  result = qword_2577880C0;
  if (!qword_2577880C0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BAC98, &type metadata for TTSVBError.Reason.FileDoesNotExistCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577880C0);
  }
  return result;
}

unint64_t sub_2487142F8()
{
  unint64_t result;

  result = qword_2577880C8[0];
  if (!qword_2577880C8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BACC0, &type metadata for TTSVBError.Reason.FileDoesNotExistCodingKeys);
    atomic_store(result, qword_2577880C8);
  }
  return result;
}

unint64_t sub_248714340()
{
  unint64_t result;

  result = qword_257788150;
  if (!qword_257788150)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BABE0, &type metadata for TTSVBError.Reason.CouldNotDeleteItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257788150);
  }
  return result;
}

unint64_t sub_248714388()
{
  unint64_t result;

  result = qword_257788158[0];
  if (!qword_257788158[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BAC08, &type metadata for TTSVBError.Reason.CouldNotDeleteItemCodingKeys);
    atomic_store(result, qword_257788158);
  }
  return result;
}

unint64_t sub_2487143D0()
{
  unint64_t result;

  result = qword_2577881E0;
  if (!qword_2577881E0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BAB28, &type metadata for TTSVBError.Reason.CouldNotCopyItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577881E0);
  }
  return result;
}

unint64_t sub_248714418()
{
  unint64_t result;

  result = qword_2577881E8[0];
  if (!qword_2577881E8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BAB50, &type metadata for TTSVBError.Reason.CouldNotCopyItemCodingKeys);
    atomic_store(result, qword_2577881E8);
  }
  return result;
}

unint64_t sub_248714460()
{
  unint64_t result;

  result = qword_257788270;
  if (!qword_257788270)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BAA70, &type metadata for TTSVBError.Reason.CouldNotMoveItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257788270);
  }
  return result;
}

unint64_t sub_2487144A8()
{
  unint64_t result;

  result = qword_257788278;
  if (!qword_257788278)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BAA98, &type metadata for TTSVBError.Reason.CouldNotMoveItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257788278);
  }
  return result;
}

unint64_t sub_2487144F0()
{
  unint64_t result;

  result = qword_257788300;
  if (!qword_257788300)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA9B8, &type metadata for TTSVBError.Reason.CouldNotCreateFileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257788300);
  }
  return result;
}

unint64_t sub_248714538()
{
  unint64_t result;

  result = qword_257788308[0];
  if (!qword_257788308[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA9E0, &type metadata for TTSVBError.Reason.CouldNotCreateFileCodingKeys);
    atomic_store(result, qword_257788308);
  }
  return result;
}

unint64_t sub_248714580()
{
  unint64_t result;

  result = qword_257788390;
  if (!qword_257788390)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA968, &type metadata for TTSVBError.Reason.CouldNotEncodeValueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257788390);
  }
  return result;
}

unint64_t sub_2487145C8()
{
  unint64_t result;

  result = qword_257788398[0];
  if (!qword_257788398[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA990, &type metadata for TTSVBError.Reason.CouldNotEncodeValueCodingKeys);
    atomic_store(result, qword_257788398);
  }
  return result;
}

unint64_t sub_248714610()
{
  unint64_t result;

  result = qword_257788420;
  if (!qword_257788420)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA8B0, &type metadata for TTSVBError.Reason.CouldNotWriteToFileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257788420);
  }
  return result;
}

unint64_t sub_248714658()
{
  unint64_t result;

  result = qword_257788428[0];
  if (!qword_257788428[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA8D8, &type metadata for TTSVBError.Reason.CouldNotWriteToFileCodingKeys);
    atomic_store(result, qword_257788428);
  }
  return result;
}

unint64_t sub_2487146A0()
{
  unint64_t result;

  result = qword_2577884B0;
  if (!qword_2577884B0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA7F8, &type metadata for TTSVBError.Reason.CouldNotOpenAVAudioFileForReadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577884B0);
  }
  return result;
}

unint64_t sub_2487146E8()
{
  unint64_t result;

  result = qword_2577884B8[0];
  if (!qword_2577884B8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA820, &type metadata for TTSVBError.Reason.CouldNotOpenAVAudioFileForReadingCodingKeys);
    atomic_store(result, qword_2577884B8);
  }
  return result;
}

unint64_t sub_248714730()
{
  unint64_t result;

  result = qword_257788540;
  if (!qword_257788540)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA7A8, &type metadata for TTSVBError.Reason.CouldNotCreateAudioFormatCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257788540);
  }
  return result;
}

unint64_t sub_248714778()
{
  unint64_t result;

  result = qword_257788548[0];
  if (!qword_257788548[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA7D0, &type metadata for TTSVBError.Reason.CouldNotCreateAudioFormatCodingKeys);
    atomic_store(result, qword_257788548);
  }
  return result;
}

unint64_t sub_2487147C0()
{
  unint64_t result;

  result = qword_2577885D0;
  if (!qword_2577885D0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA6F0, &type metadata for TTSVBError.Reason.CouldNotListContentsOfDirectoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577885D0);
  }
  return result;
}

unint64_t sub_248714808()
{
  unint64_t result;

  result = qword_2577885D8[0];
  if (!qword_2577885D8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA718, &type metadata for TTSVBError.Reason.CouldNotListContentsOfDirectoryCodingKeys);
    atomic_store(result, qword_2577885D8);
  }
  return result;
}

unint64_t sub_248714850()
{
  unint64_t result;

  result = qword_257788660;
  if (!qword_257788660)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA638, &type metadata for TTSVBError.Reason.CouldNotLoadContentsOfFileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257788660);
  }
  return result;
}

unint64_t sub_248714898()
{
  unint64_t result;

  result = qword_257788668[0];
  if (!qword_257788668[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA660, &type metadata for TTSVBError.Reason.CouldNotLoadContentsOfFileCodingKeys);
    atomic_store(result, qword_257788668);
  }
  return result;
}

unint64_t sub_2487148E0()
{
  unint64_t result;

  result = qword_2577886F0;
  if (!qword_2577886F0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA5E8, &type metadata for TTSVBError.Reason.CouldNotDecodeValueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577886F0);
  }
  return result;
}

unint64_t sub_248714928()
{
  unint64_t result;

  result = qword_2577886F8[0];
  if (!qword_2577886F8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA610, &type metadata for TTSVBError.Reason.CouldNotDecodeValueCodingKeys);
    atomic_store(result, qword_2577886F8);
  }
  return result;
}

unint64_t sub_248714970()
{
  unint64_t result;

  result = qword_257788780;
  if (!qword_257788780)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA598, &type metadata for TTSVBError.Reason.CouldNotInstallTrainingAssetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257788780);
  }
  return result;
}

unint64_t sub_2487149B8()
{
  unint64_t result;

  result = qword_257788788[0];
  if (!qword_257788788[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA5C0, &type metadata for TTSVBError.Reason.CouldNotInstallTrainingAssetCodingKeys);
    atomic_store(result, qword_257788788);
  }
  return result;
}

unint64_t sub_248714A00()
{
  unint64_t result;

  result = qword_257788810;
  if (!qword_257788810)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA548, &type metadata for TTSVBError.Reason.SiriTrainingAssetNotInstalledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257788810);
  }
  return result;
}

unint64_t sub_248714A48()
{
  unint64_t result;

  result = qword_257788818[0];
  if (!qword_257788818[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA570, &type metadata for TTSVBError.Reason.SiriTrainingAssetNotInstalledCodingKeys);
    atomic_store(result, qword_257788818);
  }
  return result;
}

unint64_t sub_248714A90()
{
  unint64_t result;

  result = qword_2577888A0;
  if (!qword_2577888A0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA490, &type metadata for TTSVBError.Reason.CouldNotSetFileAttributesOnItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577888A0);
  }
  return result;
}

unint64_t sub_248714AD8()
{
  unint64_t result;

  result = qword_2577888A8[0];
  if (!qword_2577888A8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA4B8, &type metadata for TTSVBError.Reason.CouldNotSetFileAttributesOnItemCodingKeys);
    atomic_store(result, qword_2577888A8);
  }
  return result;
}

unint64_t sub_248714B20()
{
  unint64_t result;

  result = qword_257788930;
  if (!qword_257788930)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA440, &type metadata for TTSVBError.Reason.CouldNotStartDaemonTrainingTaskCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257788930);
  }
  return result;
}

unint64_t sub_248714B68()
{
  unint64_t result;

  result = qword_257788938[0];
  if (!qword_257788938[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA468, &type metadata for TTSVBError.Reason.CouldNotStartDaemonTrainingTaskCodingKeys);
    atomic_store(result, qword_257788938);
  }
  return result;
}

unint64_t sub_248714BB0()
{
  unint64_t result;

  result = qword_2577889C0;
  if (!qword_2577889C0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA388, &type metadata for TTSVBError.Reason.CouldNotCreateArchiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577889C0);
  }
  return result;
}

unint64_t sub_248714BF8()
{
  unint64_t result;

  result = qword_2577889C8[0];
  if (!qword_2577889C8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA3B0, &type metadata for TTSVBError.Reason.CouldNotCreateArchiveCodingKeys);
    atomic_store(result, qword_2577889C8);
  }
  return result;
}

unint64_t sub_248714C40()
{
  unint64_t result;

  result = qword_257788A50;
  if (!qword_257788A50)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA338, &type metadata for TTSVBError.Reason.CouldNotAuthorizeSpeechRecognitionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257788A50);
  }
  return result;
}

unint64_t sub_248714C88()
{
  unint64_t result;

  result = qword_257788A58[0];
  if (!qword_257788A58[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA360, &type metadata for TTSVBError.Reason.CouldNotAuthorizeSpeechRecognitionCodingKeys);
    atomic_store(result, qword_257788A58);
  }
  return result;
}

unint64_t sub_248714CD0()
{
  unint64_t result;

  result = qword_257788AE0;
  if (!qword_257788AE0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA2E8, &type metadata for TTSVBError.Reason.SpeechRecognitionSilenceThresholdCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257788AE0);
  }
  return result;
}

unint64_t sub_248714D18()
{
  unint64_t result;

  result = qword_257788AE8[0];
  if (!qword_257788AE8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA310, &type metadata for TTSVBError.Reason.SpeechRecognitionSilenceThresholdCodingKeys);
    atomic_store(result, qword_257788AE8);
  }
  return result;
}

unint64_t sub_248714D60()
{
  unint64_t result;

  result = qword_257788B70;
  if (!qword_257788B70)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA230, &type metadata for TTSVBError.Reason.VoiceWithIDDoesNotExistCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257788B70);
  }
  return result;
}

unint64_t sub_248714DA8()
{
  unint64_t result;

  result = qword_257788B78;
  if (!qword_257788B78)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA258, &type metadata for TTSVBError.Reason.VoiceWithIDDoesNotExistCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257788B78);
  }
  return result;
}

unint64_t sub_248714DF0()
{
  unint64_t result;

  result = qword_257788C00;
  if (!qword_257788C00)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA178, &type metadata for TTSVBError.Reason.SampleWithIDDoesNotExistCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257788C00);
  }
  return result;
}

unint64_t sub_248714E38()
{
  unint64_t result;

  result = qword_257788C08[0];
  if (!qword_257788C08[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA1A0, &type metadata for TTSVBError.Reason.SampleWithIDDoesNotExistCodingKeys);
    atomic_store(result, qword_257788C08);
  }
  return result;
}

unint64_t sub_248714E80()
{
  unint64_t result;

  result = qword_257788C90;
  if (!qword_257788C90)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA0C0, &type metadata for TTSVBError.Reason.VoiceModelWithIDDoesNotExistCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257788C90);
  }
  return result;
}

unint64_t sub_248714EC8()
{
  unint64_t result;

  result = qword_257788C98[0];
  if (!qword_257788C98[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA0E8, &type metadata for TTSVBError.Reason.VoiceModelWithIDDoesNotExistCodingKeys);
    atomic_store(result, qword_257788C98);
  }
  return result;
}

unint64_t sub_248714F10()
{
  unint64_t result;

  result = qword_257788D20;
  if (!qword_257788D20)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA008, &type metadata for TTSVBError.Reason.CouldNotReadFileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257788D20);
  }
  return result;
}

unint64_t sub_248714F58()
{
  unint64_t result;

  result = qword_257788D28[0];
  if (!qword_257788D28[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BA030, &type metadata for TTSVBError.Reason.CouldNotReadFileCodingKeys);
    atomic_store(result, qword_257788D28);
  }
  return result;
}

unint64_t sub_248714FA0()
{
  unint64_t result;

  result = qword_257788DB0;
  if (!qword_257788DB0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9FB8, &type metadata for TTSVBError.Reason.CouldNotEstablishNetworkConnectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257788DB0);
  }
  return result;
}

unint64_t sub_248714FE8()
{
  unint64_t result;

  result = qword_257788DB8[0];
  if (!qword_257788DB8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9FE0, &type metadata for TTSVBError.Reason.CouldNotEstablishNetworkConnectionCodingKeys);
    atomic_store(result, qword_257788DB8);
  }
  return result;
}

unint64_t sub_248715030()
{
  unint64_t result;

  result = qword_257788E40;
  if (!qword_257788E40)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9F68, &type metadata for TTSVBError.Reason.LowDiskSpaceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257788E40);
  }
  return result;
}

unint64_t sub_248715078()
{
  unint64_t result;

  result = qword_257788E48[0];
  if (!qword_257788E48[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9F90, &type metadata for TTSVBError.Reason.LowDiskSpaceCodingKeys);
    atomic_store(result, qword_257788E48);
  }
  return result;
}

unint64_t sub_2487150C0()
{
  unint64_t result;

  result = qword_257788ED0;
  if (!qword_257788ED0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9F18, &type metadata for TTSVBError.Reason.DownloadTimedOutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257788ED0);
  }
  return result;
}

unint64_t sub_248715108()
{
  unint64_t result;

  result = qword_257788ED8[0];
  if (!qword_257788ED8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9F40, &type metadata for TTSVBError.Reason.DownloadTimedOutCodingKeys);
    atomic_store(result, qword_257788ED8);
  }
  return result;
}

unint64_t sub_248715150()
{
  unint64_t result;

  result = qword_257788F60;
  if (!qword_257788F60)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9EC8, &type metadata for TTSVBError.Reason.AsrAssetDownloadFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257788F60);
  }
  return result;
}

unint64_t sub_248715198()
{
  unint64_t result;

  result = qword_257788F68[0];
  if (!qword_257788F68[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9EF0, &type metadata for TTSVBError.Reason.AsrAssetDownloadFailedCodingKeys);
    atomic_store(result, qword_257788F68);
  }
  return result;
}

unint64_t sub_2487151E0()
{
  unint64_t result;

  result = qword_257788FF0;
  if (!qword_257788FF0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9E10, &type metadata for TTSVBError.Reason.InputNodeFormatInvalidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257788FF0);
  }
  return result;
}

unint64_t sub_248715228()
{
  unint64_t result;

  result = qword_257788FF8[0];
  if (!qword_257788FF8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9E38, &type metadata for TTSVBError.Reason.InputNodeFormatInvalidCodingKeys);
    atomic_store(result, qword_257788FF8);
  }
  return result;
}

unint64_t sub_248715270()
{
  unint64_t result;

  result = qword_257789080;
  if (!qword_257789080)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9DC0, &type metadata for TTSVBError.Reason.InputNotAvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257789080);
  }
  return result;
}

unint64_t sub_2487152B8()
{
  unint64_t result;

  result = qword_257789088[0];
  if (!qword_257789088[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9DE8, &type metadata for TTSVBError.Reason.InputNotAvailableCodingKeys);
    atomic_store(result, qword_257789088);
  }
  return result;
}

unint64_t sub_248715300()
{
  unint64_t result;

  result = qword_257789110;
  if (!qword_257789110)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9D08, &type metadata for TTSVBError.Reason.CategoryWithNameAlreadyExistsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257789110);
  }
  return result;
}

unint64_t sub_248715348()
{
  unint64_t result;

  result = qword_257789118[0];
  if (!qword_257789118[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9D30, &type metadata for TTSVBError.Reason.CategoryWithNameAlreadyExistsCodingKeys);
    atomic_store(result, qword_257789118);
  }
  return result;
}

unint64_t sub_248715390()
{
  unint64_t result;

  result = qword_2577891A0;
  if (!qword_2577891A0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9C50, &type metadata for TTSVBError.Reason.CategoryWithIDDoesNotExistCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577891A0);
  }
  return result;
}

unint64_t sub_2487153D8()
{
  unint64_t result;

  result = qword_2577891A8[0];
  if (!qword_2577891A8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9C78, &type metadata for TTSVBError.Reason.CategoryWithIDDoesNotExistCodingKeys);
    atomic_store(result, qword_2577891A8);
  }
  return result;
}

unint64_t sub_248715420()
{
  unint64_t result;

  result = qword_257789230;
  if (!qword_257789230)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9B98, &type metadata for TTSVBError.Reason.PhraseWithTextDoesExistCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257789230);
  }
  return result;
}

unint64_t sub_248715468()
{
  unint64_t result;

  result = qword_257789238[0];
  if (!qword_257789238[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9BC0, &type metadata for TTSVBError.Reason.PhraseWithTextDoesExistCodingKeys);
    atomic_store(result, qword_257789238);
  }
  return result;
}

unint64_t sub_2487154B0()
{
  unint64_t result;

  result = qword_2577892C0;
  if (!qword_2577892C0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9AE0, &type metadata for TTSVBError.Reason.PhraseWithIDDoesNotExistCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577892C0);
  }
  return result;
}

unint64_t sub_2487154F8()
{
  unint64_t result;

  result = qword_2577892C8[0];
  if (!qword_2577892C8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9B08, &type metadata for TTSVBError.Reason.PhraseWithIDDoesNotExistCodingKeys);
    atomic_store(result, qword_2577892C8);
  }
  return result;
}

unint64_t sub_248715540()
{
  unint64_t result;

  result = qword_257789350;
  if (!qword_257789350)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BBA20, &type metadata for TTSVBError.Reason.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257789350);
  }
  return result;
}

unint64_t sub_248715588()
{
  unint64_t result;

  result = qword_257789358[0];
  if (!qword_257789358[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BBA48, &type metadata for TTSVBError.Reason.CodingKeys);
    atomic_store(result, qword_257789358);
  }
  return result;
}

unint64_t sub_2487155D0()
{
  unint64_t result;

  result = qword_2577893E0;
  if (!qword_2577893E0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9970, &type metadata for TTSVBError.Problem.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577893E0);
  }
  return result;
}

unint64_t sub_248715618()
{
  unint64_t result;

  result = qword_2577893E8[0];
  if (!qword_2577893E8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9998, &type metadata for TTSVBError.Problem.CustomCodingKeys);
    atomic_store(result, qword_2577893E8);
  }
  return result;
}

unint64_t sub_248715660()
{
  unint64_t result;

  result = qword_257789470;
  if (!qword_257789470)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9920, &type metadata for TTSVBError.Problem.UnspecifiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257789470);
  }
  return result;
}

unint64_t sub_2487156A8()
{
  unint64_t result;

  result = qword_257789478;
  if (!qword_257789478)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9948, &type metadata for TTSVBError.Problem.UnspecifiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257789478);
  }
  return result;
}

unint64_t sub_2487156F0()
{
  unint64_t result;

  result = qword_257789500;
  if (!qword_257789500)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B98D0, &type metadata for TTSVBError.Problem.CouldNotStartAudioEngineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257789500);
  }
  return result;
}

unint64_t sub_248715738()
{
  unint64_t result;

  result = qword_257789508[0];
  if (!qword_257789508[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B98F8, &type metadata for TTSVBError.Problem.CouldNotStartAudioEngineCodingKeys);
    atomic_store(result, qword_257789508);
  }
  return result;
}

unint64_t sub_248715780()
{
  unint64_t result;

  result = qword_257789590;
  if (!qword_257789590)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9818, &type metadata for TTSVBError.Problem.CouldNotSetAudioSessionCategoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257789590);
  }
  return result;
}

unint64_t sub_2487157C8()
{
  unint64_t result;

  result = qword_257789598[0];
  if (!qword_257789598[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9840, &type metadata for TTSVBError.Problem.CouldNotSetAudioSessionCategoryCodingKeys);
    atomic_store(result, qword_257789598);
  }
  return result;
}

unint64_t sub_248715810()
{
  unint64_t result;

  result = qword_257789620;
  if (!qword_257789620)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9760, &type metadata for TTSVBError.Problem.CouldNotSetAudioSessionActiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257789620);
  }
  return result;
}

unint64_t sub_248715858()
{
  unint64_t result;

  result = qword_257789628[0];
  if (!qword_257789628[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9788, &type metadata for TTSVBError.Problem.CouldNotSetAudioSessionActiveCodingKeys);
    atomic_store(result, qword_257789628);
  }
  return result;
}

unint64_t sub_2487158A0()
{
  unint64_t result;

  result = qword_2577896B0;
  if (!qword_2577896B0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9710, &type metadata for TTSVBError.Problem.CouldNotBeginRecordingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577896B0);
  }
  return result;
}

unint64_t sub_2487158E8()
{
  unint64_t result;

  result = qword_2577896B8[0];
  if (!qword_2577896B8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9738, &type metadata for TTSVBError.Problem.CouldNotBeginRecordingCodingKeys);
    atomic_store(result, qword_2577896B8);
  }
  return result;
}

unint64_t sub_248715930()
{
  unint64_t result;

  result = qword_257789740;
  if (!qword_257789740)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B96C0, &type metadata for TTSVBError.Problem.CouldNotEndRecordingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257789740);
  }
  return result;
}

unint64_t sub_248715978()
{
  unint64_t result;

  result = qword_257789748[0];
  if (!qword_257789748[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B96E8, &type metadata for TTSVBError.Problem.CouldNotEndRecordingCodingKeys);
    atomic_store(result, qword_257789748);
  }
  return result;
}

unint64_t sub_2487159C0()
{
  unint64_t result;

  result = qword_2577897D0;
  if (!qword_2577897D0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9670, &type metadata for TTSVBError.Problem.CouldNotCreateAudioFileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577897D0);
  }
  return result;
}

unint64_t sub_248715A08()
{
  unint64_t result;

  result = qword_2577897D8[0];
  if (!qword_2577897D8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9698, &type metadata for TTSVBError.Problem.CouldNotCreateAudioFileCodingKeys);
    atomic_store(result, qword_2577897D8);
  }
  return result;
}

unint64_t sub_248715A50()
{
  unint64_t result;

  result = qword_257789860;
  if (!qword_257789860)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9620, &type metadata for TTSVBError.Problem.CouldNotSaveAudioToSampleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257789860);
  }
  return result;
}

unint64_t sub_248715A98()
{
  unint64_t result;

  result = qword_257789868[0];
  if (!qword_257789868[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9648, &type metadata for TTSVBError.Problem.CouldNotSaveAudioToSampleCodingKeys);
    atomic_store(result, qword_257789868);
  }
  return result;
}

unint64_t sub_248715AE0()
{
  unint64_t result;

  result = qword_2577898F0;
  if (!qword_2577898F0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B95D0, &type metadata for TTSVBError.Problem.CouldNotLoadDataStoresCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577898F0);
  }
  return result;
}

unint64_t sub_248715B28()
{
  unint64_t result;

  result = qword_2577898F8[0];
  if (!qword_2577898F8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B95F8, &type metadata for TTSVBError.Problem.CouldNotLoadDataStoresCodingKeys);
    atomic_store(result, qword_2577898F8);
  }
  return result;
}

unint64_t sub_248715B70()
{
  unint64_t result;

  result = qword_257789980;
  if (!qword_257789980)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9580, &type metadata for TTSVBError.Problem.CouldNotSaveDataStoresCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257789980);
  }
  return result;
}

unint64_t sub_248715BB8()
{
  unint64_t result;

  result = qword_257789988[0];
  if (!qword_257789988[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B95A8, &type metadata for TTSVBError.Problem.CouldNotSaveDataStoresCodingKeys);
    atomic_store(result, qword_257789988);
  }
  return result;
}

unint64_t sub_248715C00()
{
  unint64_t result;

  result = qword_257789A10;
  if (!qword_257789A10)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9530, &type metadata for TTSVBError.Problem.CouldNotLoadSiriTrainingAssetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257789A10);
  }
  return result;
}

unint64_t sub_248715C48()
{
  unint64_t result;

  result = qword_257789A18[0];
  if (!qword_257789A18[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9558, &type metadata for TTSVBError.Problem.CouldNotLoadSiriTrainingAssetCodingKeys);
    atomic_store(result, qword_257789A18);
  }
  return result;
}

unint64_t sub_248715C90()
{
  unint64_t result;

  result = qword_257789AA0;
  if (!qword_257789AA0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B94E0, &type metadata for TTSVBError.Problem.CouldNotCreateVoiceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257789AA0);
  }
  return result;
}

unint64_t sub_248715CD8()
{
  unint64_t result;

  result = qword_257789AA8[0];
  if (!qword_257789AA8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9508, &type metadata for TTSVBError.Problem.CouldNotCreateVoiceCodingKeys);
    atomic_store(result, qword_257789AA8);
  }
  return result;
}

unint64_t sub_248715D20()
{
  unint64_t result;

  result = qword_257789B30;
  if (!qword_257789B30)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9490, &type metadata for TTSVBError.Problem.CouldNotPrepareForTrainingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257789B30);
  }
  return result;
}

unint64_t sub_248715D68()
{
  unint64_t result;

  result = qword_257789B38[0];
  if (!qword_257789B38[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B94B8, &type metadata for TTSVBError.Problem.CouldNotPrepareForTrainingCodingKeys);
    atomic_store(result, qword_257789B38);
  }
  return result;
}

unint64_t sub_248715DB0()
{
  unint64_t result;

  result = qword_257789BC0;
  if (!qword_257789BC0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9440, &type metadata for TTSVBError.Problem.CouldNotTrainModelInProcessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257789BC0);
  }
  return result;
}

unint64_t sub_248715DF8()
{
  unint64_t result;

  result = qword_257789BC8[0];
  if (!qword_257789BC8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9468, &type metadata for TTSVBError.Problem.CouldNotTrainModelInProcessCodingKeys);
    atomic_store(result, qword_257789BC8);
  }
  return result;
}

unint64_t sub_248715E40()
{
  unint64_t result;

  result = qword_257789C50;
  if (!qword_257789C50)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B93F0, &type metadata for TTSVBError.Problem.CouldNotTrainModelWithDaemonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257789C50);
  }
  return result;
}

unint64_t sub_248715E88()
{
  unint64_t result;

  result = qword_257789C58[0];
  if (!qword_257789C58[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9418, &type metadata for TTSVBError.Problem.CouldNotTrainModelWithDaemonCodingKeys);
    atomic_store(result, qword_257789C58);
  }
  return result;
}

unint64_t sub_248715ED0()
{
  unint64_t result;

  result = qword_257789CE0;
  if (!qword_257789CE0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B93A0, &type metadata for TTSVBError.Problem.CouldNotRetrieveTrainingScriptsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257789CE0);
  }
  return result;
}

unint64_t sub_248715F18()
{
  unint64_t result;

  result = qword_257789CE8[0];
  if (!qword_257789CE8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B93C8, &type metadata for TTSVBError.Problem.CouldNotRetrieveTrainingScriptsCodingKeys);
    atomic_store(result, qword_257789CE8);
  }
  return result;
}

unint64_t sub_248715F60()
{
  unint64_t result;

  result = qword_257789D70;
  if (!qword_257789D70)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9350, &type metadata for TTSVBError.Problem.CouldNotExportTrainingDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257789D70);
  }
  return result;
}

unint64_t sub_248715FA8()
{
  unint64_t result;

  result = qword_257789D78;
  if (!qword_257789D78)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9378, &type metadata for TTSVBError.Problem.CouldNotExportTrainingDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257789D78);
  }
  return result;
}

unint64_t sub_248715FF0()
{
  unint64_t result;

  result = qword_257789E00;
  if (!qword_257789E00)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9300, &type metadata for TTSVBError.Problem.CouldNotImportTrainingDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257789E00);
  }
  return result;
}

unint64_t sub_248716038()
{
  unint64_t result;

  result = qword_257789E08[0];
  if (!qword_257789E08[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9328, &type metadata for TTSVBError.Problem.CouldNotImportTrainingDataCodingKeys);
    atomic_store(result, qword_257789E08);
  }
  return result;
}

unint64_t sub_248716080()
{
  unint64_t result;

  result = qword_257789E90;
  if (!qword_257789E90)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B92B0, &type metadata for TTSVBError.Problem.CouldNotDeleteVoiceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257789E90);
  }
  return result;
}

unint64_t sub_2487160C8()
{
  unint64_t result;

  result = qword_257789E98[0];
  if (!qword_257789E98[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B92D8, &type metadata for TTSVBError.Problem.CouldNotDeleteVoiceCodingKeys);
    atomic_store(result, qword_257789E98);
  }
  return result;
}

unint64_t sub_248716110()
{
  unint64_t result;

  result = qword_257789F20;
  if (!qword_257789F20)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9260, &type metadata for TTSVBError.Problem.CouldNotDeleteDataArchiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257789F20);
  }
  return result;
}

unint64_t sub_248716158()
{
  unint64_t result;

  result = qword_257789F28[0];
  if (!qword_257789F28[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9288, &type metadata for TTSVBError.Problem.CouldNotDeleteDataArchiveCodingKeys);
    atomic_store(result, qword_257789F28);
  }
  return result;
}

unint64_t sub_2487161A0()
{
  unint64_t result;

  result = qword_257789FB0;
  if (!qword_257789FB0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9210, &type metadata for TTSVBError.Problem.CouldNotMoveDataArchiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257789FB0);
  }
  return result;
}

unint64_t sub_2487161E8()
{
  unint64_t result;

  result = qword_257789FB8[0];
  if (!qword_257789FB8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9238, &type metadata for TTSVBError.Problem.CouldNotMoveDataArchiveCodingKeys);
    atomic_store(result, qword_257789FB8);
  }
  return result;
}

unint64_t sub_248716230()
{
  unint64_t result;

  result = qword_25778A040;
  if (!qword_25778A040)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B91C0, &type metadata for TTSVBError.Problem.CouldNotEndAudioPlaybackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25778A040);
  }
  return result;
}

unint64_t sub_248716278()
{
  unint64_t result;

  result = qword_25778A048[0];
  if (!qword_25778A048[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B91E8, &type metadata for TTSVBError.Problem.CouldNotEndAudioPlaybackCodingKeys);
    atomic_store(result, qword_25778A048);
  }
  return result;
}

unint64_t sub_2487162C0()
{
  unint64_t result;

  result = qword_25778A0D0;
  if (!qword_25778A0D0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9170, &type metadata for TTSVBError.Problem.CouldNotRecognizeSpeechCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25778A0D0);
  }
  return result;
}

unint64_t sub_248716308()
{
  unint64_t result;

  result = qword_25778A0D8[0];
  if (!qword_25778A0D8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9198, &type metadata for TTSVBError.Problem.CouldNotRecognizeSpeechCodingKeys);
    atomic_store(result, qword_25778A0D8);
  }
  return result;
}

unint64_t sub_248716350()
{
  unint64_t result;

  result = qword_25778A160;
  if (!qword_25778A160)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9120, &type metadata for TTSVBError.Problem.CouldNotInstallAudioTapCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25778A160);
  }
  return result;
}

unint64_t sub_248716398()
{
  unint64_t result;

  result = qword_25778A168[0];
  if (!qword_25778A168[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9148, &type metadata for TTSVBError.Problem.CouldNotInstallAudioTapCodingKeys);
    atomic_store(result, qword_25778A168);
  }
  return result;
}

unint64_t sub_2487163E0()
{
  unint64_t result;

  result = qword_25778A1F0;
  if (!qword_25778A1F0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B90D0, &type metadata for TTSVBError.Problem.CouldNotCreateCategoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25778A1F0);
  }
  return result;
}

unint64_t sub_248716428()
{
  unint64_t result;

  result = qword_25778A1F8[0];
  if (!qword_25778A1F8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B90F8, &type metadata for TTSVBError.Problem.CouldNotCreateCategoryCodingKeys);
    atomic_store(result, qword_25778A1F8);
  }
  return result;
}

unint64_t sub_248716470()
{
  unint64_t result;

  result = qword_25778A280;
  if (!qword_25778A280)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9080, &type metadata for TTSVBError.Problem.CouldNotCreatePhraseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25778A280);
  }
  return result;
}

unint64_t sub_2487164B8()
{
  unint64_t result;

  result = qword_25778A288[0];
  if (!qword_25778A288[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B90A8, &type metadata for TTSVBError.Problem.CouldNotCreatePhraseCodingKeys);
    atomic_store(result, qword_25778A288);
  }
  return result;
}

unint64_t sub_248716500()
{
  unint64_t result;

  result = qword_25778A310;
  if (!qword_25778A310)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9030, &type metadata for TTSVBError.Problem.CouldNotUpdateCategoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25778A310);
  }
  return result;
}

unint64_t sub_248716548()
{
  unint64_t result;

  result = qword_25778A318[0];
  if (!qword_25778A318[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9058, &type metadata for TTSVBError.Problem.CouldNotUpdateCategoryCodingKeys);
    atomic_store(result, qword_25778A318);
  }
  return result;
}

unint64_t sub_248716590()
{
  unint64_t result;

  result = qword_25778A3A0;
  if (!qword_25778A3A0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B8FE0, &type metadata for TTSVBError.Problem.CouldNotUpdatePhraseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25778A3A0);
  }
  return result;
}

unint64_t sub_2487165D8()
{
  unint64_t result;

  result = qword_25778A3A8[0];
  if (!qword_25778A3A8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9008, &type metadata for TTSVBError.Problem.CouldNotUpdatePhraseCodingKeys);
    atomic_store(result, qword_25778A3A8);
  }
  return result;
}

unint64_t sub_248716620()
{
  unint64_t result;

  result = qword_25778A430;
  if (!qword_25778A430)
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9A28, &type metadata for TTSVBError.Problem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25778A430);
  }
  return result;
}

unint64_t sub_248716668()
{
  unint64_t result;

  result = qword_25778A438[0];
  if (!qword_25778A438[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487B9A50, &type metadata for TTSVBError.Problem.CodingKeys);
    atomic_store(result, qword_25778A438);
  }
  return result;
}

uint64_t sub_2487166AC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D6F74737563 && a2 == 0xE600000000000000;
  if (v2 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6669636570736E75 && a2 == 0xEB00000000646569 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000002487C3FA0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000002487C3FC0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000002487C3FE0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000002487C4000 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002487C4020 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002487C4040 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000002487C4060 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000002487C4080 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000002487C40A0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000002487C40C0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002487C40E0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000002487C4100 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000002487C4120 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000002487C4140 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000002487C4160 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000002487C4180 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000002487C41A0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002487C41C0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000002487C41E0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002487C4200 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000002487C4220 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002487C4240 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002487C4260 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000002487C4280 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002487C42A0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000002487C42C0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002487C42E0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else
  {
    v6 = sub_2487B5CE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 28;
    else
      return 29;
  }
}

uint64_t sub_2487170A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D6F74737563 && a2 == 0xE600000000000000;
  if (v2 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6669636570736E75 && a2 == 0xEB00000000646569 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x456E776F6E6B6E75 && a2 == 0xEC000000726F7272 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002487C4300 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002487C4320 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000002487C4340 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002487C4360 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002487C4380 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000002487C43A0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000002487C43D0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002487C43F0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002487C4040 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000002487C4410 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002487C4430 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000002487C4450 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000002487C4470 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000002487C4490 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002487C44B0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000002487C44D0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000002487C44F0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x726F745361746164 && a2 == 0xEE00726F72724565 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000002487C4510 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x80000002487C4540 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x80000002487C4570 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000002487C45A0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000002487C45C0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000002487C45E0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002487C4610 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002487C4630 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002487C4650 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002487C4670 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002487C4690 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002487C46B0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002487C46D0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 33;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002487C46F0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 34;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000002487C4710 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 35;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000002487C4740 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 36;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000002487C4760 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 37;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000002487C4780 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 38;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002487C47A0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 39;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000002487C47C0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 40;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000002487C47E0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 41;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000002487C4800 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 42;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000002487C4820 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 43;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002487C4840 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 44;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000002487C4860 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 45;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000002487C4890 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 46;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002487C48C0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 47;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000002487C48E0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 48;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000002487C4900 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 49;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002487C4920 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 50;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000002487C4940 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 51;
  }
  else if (a1 == 0x536B736944776F6CLL && a2 == 0xEC00000065636170 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 52;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002487C4970 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 53;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000002487C4990 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 54;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000002487C49B0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 55;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002487C49D0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 56;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000002487C49F0 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 57;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000002487C4A10 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 58;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002487C4A30 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 59;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000002487C4A50)
  {
    swift_bridgeObjectRelease();
    return 60;
  }
  else
  {
    v6 = sub_2487B5CE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 60;
    else
      return 61;
  }
}

uint64_t sub_248718594(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2487B5CE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_248718654(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25777C910);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24871869C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24959AEB4](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

id sub_248718710()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v1 = (void *)sub_2487B5504();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

id static TTSVBCloudVoiceMO.allVoicesRequest.getter()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;

  v0 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v1 = (void *)sub_2487B5504();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  __swift_instantiateConcreteTypeFromMangledName(&qword_25445F358);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_2487BD7A0;
  sub_24870A34C(0, &qword_25777C9A0);
  swift_getKeyPath();
  *(_QWORD *)(v3 + 32) = sub_2487B57EC();
  sub_2487B5690();
  v4 = (void *)sub_2487B566C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setSortDescriptors_, v4);

  return v2;
}

char *keypath_get_selector_name()
{
  return sel_name;
}

void sub_2487188A4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24871916C(a1, (SEL *)&selRef_name, a2);
}

void sub_2487188B0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2487191D8(a1, a2, a3, a4, (SEL *)&selRef_setName_);
}

uint64_t static TTSVBCloudVoiceMO.findOrFetch(voiceID:moc:)(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_24870A34C(0, &qword_25777C9A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777C9B0);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_2487BD7B0;
  *(_QWORD *)(v3 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v3 + 64) = sub_2487189D4();
  *(_QWORD *)(v3 + 32) = 0x44496563696F76;
  *(_QWORD *)(v3 + 40) = 0xE700000000000000;
  v4 = sub_2487B51F8();
  *(_QWORD *)(v3 + 96) = sub_24870A34C(0, &qword_25777C9C0);
  *(_QWORD *)(v3 + 104) = sub_248718A18();
  *(_QWORD *)(v3 + 72) = v4;
  v5 = (void *)sub_2487B578C();
  v6 = type metadata accessor for TTSVBCloudVoiceMO();
  static DSO<>.findOrFetch(in:matching:)(a2, v5, v6, (uint64_t)&protocol witness table for TTSVBCloudVoiceMO);
  v8 = v7;

  return v8;
}

unint64_t sub_2487189D4()
{
  unint64_t result;

  result = qword_25777C9B8;
  if (!qword_25777C9B8)
  {
    result = MEMORY[0x24959AEB4](MEMORY[0x24BDCFB48], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_25777C9B8);
  }
  return result;
}

unint64_t sub_248718A18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25777C9C8;
  if (!qword_25777C9C8)
  {
    v1 = sub_24870A34C(255, &qword_25777C9C0);
    result = MEMORY[0x24959AEB4](MEMORY[0x24BEE5BE8], v1);
    atomic_store(result, (unint64_t *)&qword_25777C9C8);
  }
  return result;
}

uint64_t type metadata accessor for TTSVBCloudVoiceMO()
{
  return objc_opt_self();
}

BOOL static TTSVBCloudVoiceMO.voiceExists(withID:moc:)(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;

  sub_24870A34C(0, &qword_25777C9A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777C9B0);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_2487BD7B0;
  *(_QWORD *)(v3 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v3 + 64) = sub_2487189D4();
  *(_QWORD *)(v3 + 32) = 0x44496563696F76;
  *(_QWORD *)(v3 + 40) = 0xE700000000000000;
  v4 = sub_2487B51F8();
  *(_QWORD *)(v3 + 96) = sub_24870A34C(0, &qword_25777C9C0);
  *(_QWORD *)(v3 + 104) = sub_248718A18();
  *(_QWORD *)(v3 + 72) = v4;
  v5 = (void *)sub_2487B578C();
  v6 = type metadata accessor for TTSVBCloudVoiceMO();
  static DSO<>.findOrFetch(in:matching:)(a2, v5, v6, (uint64_t)&protocol witness table for TTSVBCloudVoiceMO);
  v8 = v7;

  if (v8)
  return v8 != 0;
}

uint64_t static TTSVBCloudVoiceMO.requireVoiceWithID(_:moc:)(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v17[2];
  char v18;

  v4 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v17[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24870A34C(0, &qword_25777C9A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777C9B0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_2487BD7B0;
  *(_QWORD *)(v7 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v7 + 64) = sub_2487189D4();
  *(_QWORD *)(v7 + 32) = 0x44496563696F76;
  *(_QWORD *)(v7 + 40) = 0xE700000000000000;
  v8 = sub_2487B51F8();
  *(_QWORD *)(v7 + 96) = sub_24870A34C(0, &qword_25777C9C0);
  *(_QWORD *)(v7 + 104) = sub_248718A18();
  *(_QWORD *)(v7 + 72) = v8;
  v9 = (void *)sub_2487B578C();
  v10 = type metadata accessor for TTSVBCloudVoiceMO();
  static DSO<>.findOrFetch(in:matching:)(a2, v9, v10, (uint64_t)&protocol witness table for TTSVBCloudVoiceMO);
  v12 = v11;

  if (!v12)
  {
    v17[0] = 0;
    v17[1] = 0;
    v18 = 3;
    v13 = sub_2487B5228();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v6, a1, v13);
    swift_storeEnumTagMultiPayload();
    v12 = type metadata accessor for TTSVBError(0);
    sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
    swift_allocError();
    TTSVBError.init(_:_:_:)((uint64_t)v17, (uint64_t)v6, 0, v14);
    swift_willThrow();
  }
  return v12;
}

id static TTSVBCloudVoiceMO.batchDeleteRequest(forVoiceID:)()
{
  id v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  type metadata accessor for TTSVBCloudVoiceMO();
  v0 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entityName);
  sub_2487B5528();

  v1 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v2 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithEntityName_, v2);

  sub_24870A34C(0, &qword_25777C9A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777C9B0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2487BD7B0;
  *(_QWORD *)(v4 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v4 + 64) = sub_2487189D4();
  *(_QWORD *)(v4 + 32) = 0x44496563696F76;
  *(_QWORD *)(v4 + 40) = 0xE700000000000000;
  v5 = sub_2487B51F8();
  *(_QWORD *)(v4 + 96) = sub_24870A34C(0, &qword_25777C9C0);
  *(_QWORD *)(v4 + 104) = sub_248718A18();
  *(_QWORD *)(v4 + 72) = v5;
  v6 = (void *)sub_2487B578C();
  objc_msgSend(v3, sel_setPredicate_, v6);

  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBB5E8]), sel_initWithFetchRequest_, v3);
  objc_msgSend(v7, sel_setResultType_, 1);

  return v7;
}

uint64_t static TTSVBCloudVoiceMO.voiceForNamePredicate(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  sub_24870A34C(0, &qword_25777C9A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777C9B0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2487BD7B0;
  v5 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v4 + 56) = MEMORY[0x24BEE0D00];
  v6 = sub_2487189D4();
  *(_QWORD *)(v4 + 32) = 1701667182;
  *(_QWORD *)(v4 + 40) = 0xE400000000000000;
  *(_QWORD *)(v4 + 96) = v5;
  *(_QWORD *)(v4 + 104) = v6;
  *(_QWORD *)(v4 + 64) = v6;
  *(_QWORD *)(v4 + 72) = a1;
  *(_QWORD *)(v4 + 80) = a2;
  swift_bridgeObjectRetain();
  return sub_2487B578C();
}

uint64_t static TTSVBCloudVoiceMO.voiceForIDPredicate(_:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_24870A34C(0, &qword_25777C9A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777C9B0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2487BD7B0;
  *(_QWORD *)(v0 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v0 + 64) = sub_2487189D4();
  *(_QWORD *)(v0 + 32) = 0x44496563696F76;
  *(_QWORD *)(v0 + 40) = 0xE700000000000000;
  v1 = sub_2487B51F8();
  *(_QWORD *)(v0 + 96) = sub_24870A34C(0, &qword_25777C9C0);
  *(_QWORD *)(v0 + 104) = sub_248718A18();
  *(_QWORD *)(v0 + 72) = v1;
  return sub_2487B578C();
}

id sub_24871911C@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_apiVersion);
  *a2 = (_WORD)result;
  return result;
}

id sub_24871914C(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setApiVersion_, *a1);
}

void sub_248719160(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24871916C(a1, (SEL *)&selRef_localeID, a2);
}

void sub_24871916C(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = objc_msgSend(*a1, *a2);
  if (v4)
  {
    v5 = v4;
    v6 = sub_2487B5528();
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  *a3 = v6;
  a3[1] = v8;
}

void sub_2487191CC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2487191D8(a1, a2, a3, a4, (SEL *)&selRef_setLocaleID_);
}

void sub_2487191D8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void *v6;
  uint64_t v7;
  id v8;

  v6 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v7 = sub_2487B5504();
  else
    v7 = 0;
  v8 = (id)v7;
  objc_msgSend(v6, *a5);

}

uint64_t sub_248719234@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(*a1, sel_voiceID);
  if (v3)
  {
    v4 = v3;
    sub_2487B5210();

    v5 = sub_2487B5228();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a2;
    v8 = 0;
  }
  else
  {
    v5 = sub_2487B5228();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a2;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

void sub_2487192B8(uint64_t a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED40);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24871A444(a1, (uint64_t)v6);
  v7 = *a2;
  v8 = sub_2487B5228();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    v10 = (void *)sub_2487B51F8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setVoiceID_, v10);

}

id sub_248719394@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_models);
  *a2 = result;
  return result;
}

id sub_2487193CC(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setModels_, *a1);
}

id sub_2487193E0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_samples);
  *a2 = result;
  return result;
}

id sub_248719418(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSamples_, *a1);
}

uint64_t sub_24871942C()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = objc_msgSend(v0, sel_samples);
  if (!v1
    || (v2 = v1,
        v3 = objc_msgSend(v1, sel_allObjects),
        v2,
        v4 = sub_2487B5684(),
        v3,
        v5 = sub_24871950C(v4, (void (*)(_QWORD))type metadata accessor for TTSVBCloudVoiceSampleMO),
        swift_bridgeObjectRelease(),
        !v5))
  {
    swift_bridgeObjectRelease();
    v5 = MEMORY[0x24BEE4AF8];
  }
  v6 = sub_248719610(v5, (void (*)(BOOL, unint64_t, uint64_t))sub_24871A514, &qword_25777C9E8, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBCloudVoiceSampleMO, (uint64_t)&protocol conformance descriptor for TTSVBCloudVoiceSampleMO);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_24871950C(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v4;
  uint64_t i;
  _BYTE v7[32];
  uint64_t v8;

  v8 = MEMORY[0x24BEE4AF8];
  v4 = *(_QWORD *)(a1 + 16);
  sub_2487B5B1C();
  if (!v4)
    return v8;
  for (i = a1 + 32; ; i += 32)
  {
    sub_2486F0814(i, (uint64_t)v7);
    a2(0);
    if (!swift_dynamicCast())
      break;
    sub_2487B5B04();
    sub_2487B5B28();
    sub_2487B5B34();
    sub_2487B5B10();
    if (!--v4)
      return v8;
  }
  swift_release();

  return 0;
}

uint64_t sub_248719610(unint64_t a1, void (*a2)(BOOL, unint64_t, uint64_t), unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id *v19;
  unint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(BOOL, unint64_t, uint64_t);
  uint64_t v26;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_2487B5B64();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v11 = MEMORY[0x24BEE4AF8];
  if (!v10)
    return v11;
  v26 = MEMORY[0x24BEE4AF8];
  result = ((uint64_t (*)(_QWORD, uint64_t, _QWORD))a2)(0, v10 & ~(v10 >> 63), 0);
  if ((v10 & 0x8000000000000000) == 0)
  {
    v25 = a2;
    v11 = v26;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v13 = 0;
      do
      {
        v14 = MEMORY[0x24959A434](v13, a1);
        v16 = *(_QWORD *)(v26 + 16);
        v15 = *(_QWORD *)(v26 + 24);
        if (v16 >= v15 >> 1)
          v25(v15 > 1, v16 + 1, 1);
        ++v13;
        v17 = sub_2486F4CA0(a3, a4, a5);
        *(_QWORD *)(v26 + 16) = v16 + 1;
        v18 = v26 + 16 * v16;
        *(_QWORD *)(v18 + 32) = v14;
        *(_QWORD *)(v18 + 40) = v17;
      }
      while (v10 != v13);
    }
    else
    {
      v19 = (id *)(a1 + 32);
      do
      {
        v21 = *(_QWORD *)(v26 + 16);
        v20 = *(_QWORD *)(v26 + 24);
        v22 = *v19;
        if (v21 >= v20 >> 1)
          v25(v20 > 1, v21 + 1, 1);
        v23 = sub_2486F4CA0(a3, a4, a5);
        *(_QWORD *)(v26 + 16) = v21 + 1;
        v24 = v26 + 16 * v21;
        *(_QWORD *)(v24 + 32) = v22;
        *(_QWORD *)(v24 + 40) = v23;
        ++v19;
        --v10;
      }
      while (v10);
    }
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_2487197CC()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = objc_msgSend(v0, sel_models);
  if (!v1
    || (v2 = v1,
        v3 = objc_msgSend(v1, sel_allObjects),
        v2,
        v4 = sub_2487B5684(),
        v3,
        v5 = sub_24871950C(v4, (void (*)(_QWORD))type metadata accessor for TTSVBCloudVoiceModelMO),
        swift_bridgeObjectRelease(),
        !v5))
  {
    swift_bridgeObjectRelease();
    v5 = MEMORY[0x24BEE4AF8];
  }
  v6 = sub_248719610(v5, (void (*)(BOOL, unint64_t, uint64_t))sub_24871A540, &qword_25777C9D0, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBCloudVoiceModelMO, (uint64_t)&protocol conformance descriptor for TTSVBCloudVoiceModelMO);
  swift_bridgeObjectRelease();
  return v6;
}

id TTSVBCloudVoiceMO.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id TTSVBCloudVoiceMO.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for TTSVBCloudVoiceMO();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id TTSVBCloudVoiceMO.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTSVBCloudVoiceMO();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2487199E4()
{
  return MEMORY[0x24BEE0948];
}

uint64_t sub_2487199F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for TTSVBCloudVoiceMO();
  result = sub_2487B5ABC();
  *a1 = result;
  return result;
}

id sub_248719A34()
{
  void *v0;

  return objc_msgSend(v0, sel_apiVersion);
}

id sub_248719A54(__int16 a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setApiVersion_, a1);
}

id (*sub_248719A68(uint64_t a1))(uint64_t a1)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_WORD *)(a1 + 8) = (unsigned __int16)objc_msgSend(v1, sel_apiVersion);
  return sub_248719AA8;
}

id sub_248719AA8(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setApiVersion_, *(__int16 *)(a1 + 8));
}

uint64_t sub_248719AC0(uint64_t a1, uint64_t a2)
{
  return sub_248719BAC(a1, a2, (SEL *)&selRef_name);
}

void sub_248719ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_248719C18(a1, a2, a3, a4, (SEL *)&selRef_setName_);
}

void (*sub_248719AD8(uint64_t **a1))(_QWORD *)
{
  uint64_t *v2;

  v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_248719B20(v2);
  return sub_248719B1C;
}

void (*sub_248719B20(uint64_t *a1))(uint64_t a1, char a2)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = (uint64_t)v1;
  v3 = objc_msgSend(v1, sel_name);
  if (v3)
  {
    v4 = v3;
    v5 = sub_2487B5528();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_248719B94;
}

void sub_248719B94(uint64_t a1, char a2)
{
  sub_248719D3C(a1, a2, (SEL *)&selRef_setName_);
}

uint64_t sub_248719BA0(uint64_t a1, uint64_t a2)
{
  return sub_248719BAC(a1, a2, (SEL *)&selRef_localeID);
}

uint64_t sub_248719BAC(uint64_t a1, uint64_t a2, SEL *a3)
{
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;

  v4 = objc_msgSend(v3, *a3);
  if (!v4)
    return 0;
  v5 = v4;
  v6 = sub_2487B5528();

  return v6;
}

void sub_248719C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_248719C18(a1, a2, a3, a4, (SEL *)&selRef_setLocaleID_);
}

void sub_248719C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void *v5;
  id v7;

  if (a2)
  {
    v7 = (id)sub_2487B5504();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  objc_msgSend(v5, *a5, v7);

}

void (*sub_248719C78(uint64_t **a1))(_QWORD *)
{
  uint64_t *v2;

  v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_248719CBC(v2);
  return sub_248719B1C;
}

void (*sub_248719CBC(uint64_t *a1))(uint64_t a1, char a2)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = (uint64_t)v1;
  v3 = objc_msgSend(v1, sel_localeID);
  if (v3)
  {
    v4 = v3;
    v5 = sub_2487B5528();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_248719D30;
}

void sub_248719D30(uint64_t a1, char a2)
{
  sub_248719D3C(a1, a2, (SEL *)&selRef_setLocaleID_);
}

void sub_248719D3C(uint64_t a1, char a2, SEL *a3)
{
  uint64_t v5;
  id v6;

  v5 = *(_QWORD *)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    if (v5)
    {
      swift_bridgeObjectRetain();
      v6 = (id)sub_2487B5504();
      swift_bridgeObjectRelease();
    }
    else
    {
      v6 = 0;
    }
    objc_msgSend(*(id *)(a1 + 16), *a3, v6);
    swift_bridgeObjectRelease();
  }
  else if (v5)
  {
    v6 = (id)sub_2487B5504();
    swift_bridgeObjectRelease();
    objc_msgSend(*(id *)(a1 + 16), *a3, v6);
  }
  else
  {
    v6 = 0;
    objc_msgSend(*(id *)(a1 + 16), *a3, 0);
  }

}

uint64_t sub_248719DF8@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(v1, sel_voiceID);
  if (v3)
  {
    v4 = v3;
    sub_2487B5210();

    v5 = sub_2487B5228();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 0;
  }
  else
  {
    v5 = sub_2487B5228();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

void sub_248719E7C(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  int v6;
  id v7;
  id v8;
  id v9;

  v2 = v1;
  v4 = sub_2487B5228();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4);
  v7 = 0;
  if (v6 != 1)
  {
    v8 = (id)sub_2487B51F8();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    v7 = v8;
  }
  v9 = v7;
  objc_msgSend(v2, sel_setVoiceID_);

}

void (*sub_248719F10(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_248719F54(v2);
  return sub_248719B1C;
}

void (*sub_248719F54(_QWORD *a1))(uint64_t a1, char a2)
{
  void *v1;
  size_t v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25445ED40) - 8) + 64);
  a1[1] = v3;
  v4 = malloc(v3);
  a1[2] = v4;
  v5 = objc_msgSend(v1, sel_voiceID);
  v6 = malloc(v3);
  a1[3] = v6;
  if (v5)
  {
    sub_2487B5210();

    v7 = sub_2487B5228();
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 0, 1, v7);
  }
  else
  {
    v8 = sub_2487B5228();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
  }
  sub_24871A48C((uint64_t)v6, (uint64_t)v4);
  return sub_24871A048;
}

void sub_24871A048(uint64_t a1, char a2)
{
  void *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;

  v3 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    MEMORY[0x24BDAC7A8](a1);
    v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_24871A444((uint64_t)v3, (uint64_t)v5);
    v6 = sub_2487B5228();
    v7 = *(_QWORD *)(v6 - 8);
    v8 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      v8 = (void *)sub_2487B51F8();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
      v3 = *(void **)(a1 + 16);
    }
    v9 = *(void **)(a1 + 24);
    objc_msgSend(*(id *)a1, sel_setVoiceID_, v8);

    free(v9);
    sub_24871A4D4((uint64_t)v3);
    free(v3);
  }
  else
  {
    v10 = sub_2487B5228();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v3, 1, v10) == 1)
    {
      v12 = 0;
    }
    else
    {
      v12 = (void *)sub_2487B51F8();
      (*(void (**)(void *, uint64_t))(v11 + 8))(v3, v10);
      v3 = *(void **)(a1 + 16);
    }
    v13 = *(void **)(a1 + 24);
    objc_msgSend(*(id *)a1, sel_setVoiceID_, v12);

    free(v13);
    free(v3);
  }
}

id sub_24871A1DC()
{
  void *v0;

  return objc_msgSend(v0, sel_models);
}

void sub_24871A200(void *a1)
{
  void *v1;

  objc_msgSend(v1, sel_setModels_, a1);

}

void (*sub_24871A234(_QWORD *a1))(id *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_models);
  return sub_24871A27C;
}

void sub_24871A27C(id *a1)
{
  id v1;

  v1 = *a1;
  objc_msgSend(a1[1], sel_setModels_);

}

id sub_24871A2B0()
{
  void *v0;

  return objc_msgSend(v0, sel_samples);
}

void sub_24871A2D4(void *a1)
{
  void *v1;

  objc_msgSend(v1, sel_setSamples_, a1);

}

void (*sub_24871A308(_QWORD *a1))(id *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_samples);
  return sub_24871A350;
}

void sub_24871A350(id *a1)
{
  id v1;

  v1 = *a1;
  objc_msgSend(a1[1], sel_setSamples_);

}

uint64_t sub_24871A384()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x58))();
}

uint64_t sub_24871A3A0()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

char *keypath_get_selector_apiVersion()
{
  return sel_apiVersion;
}

char *keypath_get_selector_localeID()
{
  return sel_localeID;
}

char *keypath_get_selector_voiceID()
{
  return sel_voiceID;
}

char *keypath_get_selector_models()
{
  return sel_models;
}

char *keypath_get_selector_samples()
{
  return sel_samples;
}

uint64_t method lookup function for TTSVBCloudVoiceMO()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static TTSVBCloudVoiceMO.fetchRequest()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of TTSVBCloudVoiceMO.getSamples.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x58))();
}

uint64_t dispatch thunk of TTSVBCloudVoiceMO.getModels.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t sub_24871A444(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24871A48C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24871A4D4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_24871A514(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_24871A56C(a1, a2, a3, *v3, &qword_25777C9F0, &qword_25777C9F8);
  *v3 = result;
  return result;
}

_QWORD *sub_24871A540(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_24871A56C(a1, a2, a3, *v3, &qword_25777C9D8, &qword_25777C9E0);
  *v3 = result;
  return result;
}

_QWORD *sub_24871A56C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;

  v8 = (char)result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 17;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 4);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v8 & 1) != 0)
  {
    if (v13 != a4 || v13 + 4 >= &a4[2 * v11 + 4])
      memmove(v13 + 4, a4 + 4, 16 * v11);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v13;
}

uint64_t TTSVBCommonVoiceModelMO.status.getter(uint64_t a1, uint64_t a2)
{
  return (*(__int16 (**)(void))(a2 + 232))();
}

uint64_t sub_24871A6AC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = TTSVBCommonVoiceModelMO.status.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_24871A6E0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return TTSVBCommonVoiceModelMO.status.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t TTSVBCommonVoiceModelMO.status.setter(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result < -32768)
  {
    __break(1u);
  }
  else if (result < 0x8000)
  {
    return (*(uint64_t (**)(void))(a3 + 240))();
  }
  __break(1u);
  return result;
}

uint64_t (*TTSVBCommonVoiceModelMO.status.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  uint64_t v3;

  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  *a1 = (*(__int16 (**)(uint64_t, uint64_t))(a3 + 232))(a2, a3);
  return sub_24871A778;
}

uint64_t sub_24871A778(uint64_t *a1, char a2)
{
  uint64_t result;
  BOOL v4;

  result = *a1;
  v4 = result < -32768;
  if ((a2 & 1) != 0)
  {
    if (result < -32768)
    {
      __break(1u);
      goto LABEL_9;
    }
    v4 = result < 0x8000;
    if (result < 0x8000)
      return (*(uint64_t (**)(void))(a1[2] + 240))();
    __break(1u);
  }
  if (v4)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (result < 0x8000)
    return (*(uint64_t (**)(void))(a1[2] + 240))();
LABEL_10:
  __break(1u);
  return result;
}

uint64_t TTSVBCommonVoiceModelMO.trainingStatus.getter(uint64_t a1, uint64_t a2)
{
  return (*(__int16 (**)(void))(a2 + 304))();
}

uint64_t sub_24871A7F4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = TTSVBCommonVoiceModelMO.trainingStatus.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_24871A828(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return TTSVBCommonVoiceModelMO.trainingStatus.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t TTSVBCommonVoiceModelMO.trainingStatus.setter(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result < -32768)
  {
    __break(1u);
  }
  else if (result < 0x8000)
  {
    return (*(uint64_t (**)(void))(a3 + 312))();
  }
  __break(1u);
  return result;
}

uint64_t (*TTSVBCommonVoiceModelMO.trainingStatus.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  uint64_t v3;

  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  *a1 = (*(__int16 (**)(uint64_t, uint64_t))(a3 + 304))(a2, a3);
  return sub_24871A8C0;
}

uint64_t sub_24871A8C0(uint64_t *a1, char a2)
{
  uint64_t result;
  BOOL v4;

  result = *a1;
  v4 = result < -32768;
  if ((a2 & 1) != 0)
  {
    if (result < -32768)
    {
      __break(1u);
      goto LABEL_9;
    }
    v4 = result < 0x8000;
    if (result < 0x8000)
      return (*(uint64_t (**)(void))(a1[2] + 312))();
    __break(1u);
  }
  if (v4)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (result < 0x8000)
    return (*(uint64_t (**)(void))(a1[2] + 312))();
LABEL_10:
  __break(1u);
  return result;
}

uint64_t TTSVBCommonVoiceModelMO.flags.getter@<X0>(uint64_t a1@<X1>, _DWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = (*(uint64_t (**)(void))(a1 + 160))();
  return TTSVBVoiceModelFlags.init(rawValue:)(v3, a2);
}

uint64_t sub_24871A948@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _DWORD *a3@<X8>)
{
  uint64_t result;
  int v5;

  result = TTSVBCommonVoiceModelMO.flags.getter(*(_QWORD *)(a2 + a1 - 8), &v5);
  *a3 = v5;
  return result;
}

uint64_t sub_24871A98C(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v7;

  v5 = *(_QWORD *)(a4 + a3 - 16);
  v4 = *(_QWORD *)(a4 + a3 - 8);
  v7 = *a1;
  return TTSVBCommonVoiceModelMO.flags.setter(&v7, v5, v4);
}

uint64_t TTSVBCommonVoiceModelMO.flags.setter(unsigned int *a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD))(a3 + 168))(*a1);
}

uint64_t (*TTSVBCommonVoiceModelMO.flags.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3;
  _DWORD *v4;
  uint64_t v5;

  v4 = a1 + 3;
  a1[1] = a3;
  a1[2] = v3;
  *a1 = a2;
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 160))(a2, a3);
  TTSVBVoiceModelFlags.init(rawValue:)(v5, v4);
  return sub_24871AA20;
}

uint64_t sub_24871AA20(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 8) + 168))(*(unsigned int *)(a1 + 24), *(_QWORD *)a1);
}

uint64_t TTSVBCommonVoiceModelMO.trainingTaskID.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED40);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 208))(a1, a2);
  v7 = sub_2487B5228();
  v8 = *(_QWORD *)(v7 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v10 = sub_2487B51EC();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    return v10;
  }
  return result;
}

uint64_t TTSVBCommonVoiceModelMO.update(withInfo:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  int *v44;
  int v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  void (*v71)(uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v72;
  int *v73;
  uint64_t *v74;
  unint64_t v75;
  uint64_t v76;
  int *v77;
  uint64_t *v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t result;
  uint64_t v93;
  const char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  double v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t (*v143)(char *, uint64_t, int *);
  uint64_t v144;
  unsigned int v145;

  v141 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_25445EDE8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v131 = (char *)&v122 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v130 = (uint64_t)&v122 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v122 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v128 = (uint64_t)&v122 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v127 = (uint64_t)&v122 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v132 = (uint64_t)&v122 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v139 = (uint64_t)&v122 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v137 = (uint64_t)&v122 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v136 = (uint64_t)&v122 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v135 = (uint64_t)&v122 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v134 = (char *)&v122 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v133 = (uint64_t)&v122 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v140 = (uint64_t *)((char *)&v122 - v32);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v122 - v34;
  MEMORY[0x24BDAC7A8](v33);
  v37 = (char *)&v122 - v36;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED40);
  v39 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v122 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v39);
  v43 = (char *)&v122 - v42;
  v142 = a1;
  sub_2486F4E74(a1, (uint64_t)v37, qword_25445EDE8);
  v44 = (int *)type metadata accessor for TTSVBVoiceModel();
  v143 = *(uint64_t (**)(char *, uint64_t, int *))(*((_QWORD *)v44 - 1) + 48);
  v45 = v143(v37, 1, v44);
  v129 = v12;
  if (v45 == 1)
  {
    sub_2486F5008((uint64_t)v37, qword_25445EDE8);
    v46 = sub_2487B5228();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v43, 1, 1, v46);
LABEL_4:
    sub_2487B521C();
    sub_2486F5008((uint64_t)v43, &qword_25445ED40);
    goto LABEL_6;
  }
  v47 = &v37[v44[6]];
  v48 = sub_2487B5228();
  v49 = *(_QWORD *)(v48 - 8);
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v43, v47, v48);
  sub_24871BA28((uint64_t)v37);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v43, 0, 1, v48);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v43, 1, v48) == 1)
    goto LABEL_4;
  (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v41, v43, v48);
LABEL_6:
  v50 = sub_2487B5228();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v41, 0, 1, v50);
  (*(void (**)(char *, uint64_t, uint64_t))(a3 + 216))(v41, v141, a3);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
  v52 = MEMORY[0x24BDAC7A8](v51);
  v54 = (char *)&v122 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = v53;
  MEMORY[0x24BDAC7A8](v52);
  v56 = (char *)&v122 - v55;
  sub_2486F4E74(v142, (uint64_t)v35, qword_25445EDE8);
  if (v143(v35, 1, v44) == 1)
  {
    sub_2486F5008((uint64_t)v35, qword_25445EDE8);
    v57 = sub_2487B51D4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v56, 1, 1, v57);
LABEL_9:
    sub_2487B51C8();
    sub_2486F5008((uint64_t)v56, &qword_25445ED38);
    goto LABEL_11;
  }
  v58 = &v35[v44[7]];
  v59 = sub_2487B51D4();
  v60 = *(_QWORD *)(v59 - 8);
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v56, v58, v59);
  sub_24871BA28((uint64_t)v35);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v56, 0, 1, v59);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v56, 1, v59) == 1)
    goto LABEL_9;
  (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v54, v56, v59);
LABEL_11:
  v61 = v141;
  v138 = 0x6E776F6E6B6E55;
  v62 = sub_2487B51D4();
  v123 = *(_QWORD *)(v62 - 8);
  v63 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v123 + 56);
  v125 = v62;
  v124 = v63;
  ((void (*)(char *, _QWORD, uint64_t))v63)(v54, 0, 1);
  (*(void (**)(char *, uint64_t, uint64_t))(a3 + 48))(v54, v61, a3);
  v64 = v142;
  v65 = (uint64_t)v140;
  sub_2486F4E74(v142, (uint64_t)v140, qword_25445EDE8);
  v66 = v143((char *)v65, 1, v44);
  v67 = (uint64_t)v134;
  if (v66 == 1)
  {
    sub_2486F5008(v65, qword_25445EDE8);
    v68 = 0xE700000000000000;
    v69 = 0x6E776F6E6B6E55;
  }
  else
  {
    v70 = (uint64_t *)(v65 + v44[8]);
    v69 = *v70;
    v68 = v70[1];
    swift_bridgeObjectRetain();
    sub_24871BA28(v65);
  }
  v71 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(a3 + 144);
  v140 = (uint64_t *)a3;
  v71(v69, v68, v61, a3);
  v72 = v133;
  sub_2486F4E74(v64, v133, qword_25445EDE8);
  if (v143((char *)v72, 1, v44) == 1)
  {
    v73 = v44;
    sub_2486F5008(v72, qword_25445EDE8);
  }
  else
  {
    v73 = v44;
    v74 = (uint64_t *)(v72 + v44[9]);
    v76 = *v74;
    v75 = v74[1];
    swift_bridgeObjectRetain();
    sub_24871BA28(v72);
    if (v75)
      goto LABEL_18;
  }
  swift_bridgeObjectRelease();
  v75 = 0xE700000000000000;
  v76 = 0x6E776F6E6B6E55;
LABEL_18:
  ((void (*)(uint64_t, unint64_t, uint64_t))v140[12])(v76, v75, v61);
  sub_2486F4E74(v64, v67, qword_25445EDE8);
  v77 = v73;
  if (v143((char *)v67, 1, v73) == 1)
  {
    sub_2486F5008(v67, qword_25445EDE8);
  }
  else
  {
    v78 = (uint64_t *)(v67 + v73[10]);
    v80 = *v78;
    v79 = v78[1];
    swift_bridgeObjectRetain();
    sub_24871BA28(v67);
    if (v79)
      goto LABEL_22;
  }
  swift_bridgeObjectRelease();
  v79 = 0xE700000000000000;
  v80 = 0x6E776F6E6B6E55;
LABEL_22:
  v81 = (uint64_t)v140;
  ((void (*)(uint64_t, unint64_t, uint64_t, uint64_t *))v140[15])(v80, v79, v61, v140);
  v82 = v135;
  sub_2486F4E74(v64, v135, qword_25445EDE8);
  if (v143((char *)v82, 1, v77) == 1)
  {
    sub_2486F5008(v82, qword_25445EDE8);
  }
  else
  {
    v83 = (uint64_t *)(v82 + v77[11]);
    v85 = *v83;
    v84 = v83[1];
    swift_bridgeObjectRetain();
    sub_24871BA28(v82);
    if (v84)
      goto LABEL_26;
  }
  swift_bridgeObjectRelease();
  v84 = 0xE700000000000000;
  v85 = 0x6E776F6E6B6E55;
LABEL_26:
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v81 + 72))(v85, v84, v61, v81);
  v86 = v136;
  sub_2486F4E74(v64, v136, qword_25445EDE8);
  if (v143((char *)v86, 1, v77) == 1)
  {
    sub_2486F5008(v86, qword_25445EDE8);
    v87 = 0xE700000000000000;
    v88 = 0x6E776F6E6B6E55;
  }
  else
  {
    v89 = (uint64_t *)(v86 + v77[12]);
    v88 = *v89;
    v87 = v89[1];
    swift_bridgeObjectRetain();
    sub_24871BA28(v86);
  }
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v81 + 360))(v88, v87, v61, v81);
  v90 = v137;
  sub_2486F4E74(v64, v137, qword_25445EDE8);
  if (v143((char *)v90, 1, v77) == 1)
  {
    sub_2486F5008(v90, qword_25445EDE8);
    v91 = 7;
    goto LABEL_33;
  }
  v91 = *(_QWORD *)(v90 + v77[13]);
  result = sub_24871BA28(v90);
  if (v91 < -32768)
  {
    __break(1u);
    goto LABEL_59;
  }
  if (v91 >= 0x8000)
  {
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
LABEL_33:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 240))(v91, v61, v81);
  v93 = v139;
  sub_2486F4E74(v64, v139, qword_25445EDE8);
  if (v143((char *)v93, 1, v77) == 1)
  {
    sub_2486F5008(v139, qword_25445EDE8);
    v94 = sub_2486F5254();
    v95 = *(_QWORD *)v94;
    v96 = *((_QWORD *)v94 + 1);
    swift_bridgeObjectRetain();
  }
  else
  {
    v97 = v139;
    v98 = (uint64_t *)(v139 + v77[14]);
    v95 = *v98;
    v96 = v98[1];
    swift_bridgeObjectRetain();
    sub_24871BA28(v97);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 384))(v95, v96, v61, v81);
  v99 = v132;
  sub_2486F4E74(v64, v132, qword_25445EDE8);
  if (v143((char *)v99, 1, v77) == 1)
  {
    sub_2486F5008(v99, qword_25445EDE8);
    v100 = 4;
    goto LABEL_40;
  }
  v100 = *(_QWORD *)(v99 + v77[15]);
  result = sub_24871BA28(v99);
  if (v100 < -32768)
    goto LABEL_60;
  if (v100 >= 0x8000)
  {
LABEL_61:
    __break(1u);
    return result;
  }
LABEL_40:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 312))(v100, v61, v81);
  v101 = v127;
  sub_2486F4E74(v64, v127, qword_25445EDE8);
  if (v143((char *)v101, 1, v77) == 1)
  {
    sub_2486F5008(v101, qword_25445EDE8);
    v102 = 0.0;
  }
  else
  {
    v102 = *(double *)(v101 + v77[16]);
    sub_24871BA28(v101);
  }
  (*(void (**)(uint64_t, uint64_t, double))(v81 + 336))(v61, v81, v102);
  v103 = v128;
  sub_2486F4E74(v64, v128, qword_25445EDE8);
  if (v143((char *)v103, 1, v77) == 1)
  {
    sub_2486F5008(v103, qword_25445EDE8);
    v104 = 0xE700000000000000;
  }
  else
  {
    v105 = (uint64_t *)(v103 + v77[17]);
    v104 = v105[1];
    v138 = *v105;
    swift_bridgeObjectRetain();
    sub_24871BA28(v103);
  }
  v106 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v81 + 288))(v138, v104, v61, v81);
  v140 = &v122;
  v107 = MEMORY[0x24BDAC7A8](v106);
  v109 = (char *)&v122 - ((v108 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v107);
  v111 = (char *)&v122 - v110;
  v112 = (uint64_t)v129;
  sub_2486F4E74(v142, (uint64_t)v129, qword_25445EDE8);
  if (v143((char *)v112, 1, v77) == 1)
  {
    sub_2486F5008(v112, qword_25445EDE8);
    v113 = v125;
    v114 = v124;
    v124(v111, 1, 1, v125);
  }
  else
  {
    sub_2486F4E74(v112 + v77[18], (uint64_t)v111, &qword_25445ED38);
    sub_24871BA28(v112);
    v114 = v124;
    v115 = v123;
    v113 = v125;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48))(v111, 1, v125) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v109, v111, v113);
      v114(v109, 0, 1, v113);
      goto LABEL_51;
    }
  }
  v114(v109, 1, 1, v113);
  sub_2486F5008((uint64_t)v111, &qword_25445ED38);
LABEL_51:
  v116 = v141;
  (*(void (**)(char *, uint64_t, uint64_t))(v81 + 264))(v109, v141, v81);
  v117 = v142;
  v118 = v130;
  sub_2486F4E74(v142, v130, qword_25445EDE8);
  if (v143((char *)v118, 1, v77) == 1)
    sub_2486F5008(v118, qword_25445EDE8);
  else
    sub_24871BA28(v118);
  v119 = (uint64_t)v131;
  v120 = sub_2487B56D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 192))(v120, v116, v81);
  sub_2486F4E74(v117, v119, qword_25445EDE8);
  if (v143((char *)v119, 1, v77) == 1)
  {
    sub_2486F5008(v119, qword_25445EDE8);
    v144 = MEMORY[0x24BEE4AF8];
    sub_24871B998();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25777CA08);
    sub_24871B9DC();
    sub_2487B59FC();
    v121 = v145;
  }
  else
  {
    v121 = *(unsigned int *)(v119 + v77[20]);
    sub_24871BA28(v119);
    v145 = v121;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v81 + 168))(v121, v116, v81);
}

unint64_t sub_24871B998()
{
  unint64_t result;

  result = qword_25777CA00;
  if (!qword_25777CA00)
  {
    result = MEMORY[0x24959AEB4](&protocol conformance descriptor for TTSVBVoiceModelFlags, &type metadata for TTSVBVoiceModelFlags);
    atomic_store(result, (unint64_t *)&qword_25777CA00);
  }
  return result;
}

unint64_t sub_24871B9DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25777CA10;
  if (!qword_25777CA10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25777CA08);
    result = MEMORY[0x24959AEB4](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_25777CA10);
  }
  return result;
}

uint64_t sub_24871BA28(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TTSVBVoiceModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t TTSVBCommonVoiceModelMO.shallowUpdate(fromModel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  ObjectType = swift_getObjectType();
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(ObjectType, a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 24))(v8, a3, a4);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  (*(void (**)(uint64_t, uint64_t))(a2 + 40))(ObjectType, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(a4 + 48))((char *)&v28 - v11, a3, a4);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 64))(ObjectType, a2);
  (*(void (**)(uint64_t))(a4 + 72))(v12);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 88))(ObjectType, a2);
  (*(void (**)(uint64_t))(a4 + 96))(v13);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 112))(ObjectType, a2);
  (*(void (**)(uint64_t))(a4 + 120))(v14);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 136))(ObjectType, a2);
  (*(void (**)(uint64_t))(a4 + 144))(v15);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 160))(ObjectType, a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 168))(v16, a3, a4);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 184))(ObjectType, a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 192))(v17, a3, a4);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED40);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 208))(ObjectType, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(a4 + 216))(v20, a3, a4);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 232))(ObjectType, a2);
  v22 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 240))(v21, a3, a4);
  MEMORY[0x24BDAC7A8](v22);
  (*(void (**)(uint64_t, uint64_t))(a2 + 256))(ObjectType, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(a4 + 264))((char *)&v28 - v11, a3, a4);
  v23 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 280))(ObjectType, a2);
  (*(void (**)(uint64_t))(a4 + 288))(v23);
  v24 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 304))(ObjectType, a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 312))(v24, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(a2 + 328))(ObjectType, a2);
  (*(void (**)(uint64_t, uint64_t))(a4 + 336))(a3, a4);
  v25 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 352))(ObjectType, a2);
  (*(void (**)(uint64_t))(a4 + 360))(v25);
  v26 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 376))(ObjectType, a2);
  return (*(uint64_t (**)(uint64_t))(a4 + 384))(v26);
}

uint64_t TTSVBCommonVoiceModelMO.immutableModel(voiceName:voiceID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, char *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  void (*v15)(double);
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  double v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  double v39;
  char *v40;
  __int16 v41;
  __int16 v42;
  double v43;
  void *v44;
  void *v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[2];
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  int v71[3];

  v10 = sub_2487B5228();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void (**)(double))(v11 + 16);
  v70 = v14;
  v15(v12);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED40);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, double))(a4 + 208))(a3, a4, v17);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v19, 1, v10);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    goto LABEL_14;
  }
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
  v22 = *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, double))(a4 + 40))(a3, a4, v23);
  v25 = sub_2487B51D4();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v24, 1, v25);
  if ((_DWORD)result == 1)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  result = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 136))(a3, a4);
  v68 = v26;
  v69 = result;
  if (!v26)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v27 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 88))(a3, a4);
  v66 = v28;
  v67 = v27;
  v29 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 112))(a3, a4);
  v64 = v30;
  v65 = v29;
  v31 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 64))(a3, a4);
  v62 = v32;
  v63 = v31;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 352))(a3, a4);
  v60 = v33;
  v61 = result;
  if (!v33)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v59 = v52;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 280))(a3, a4);
  v57 = v34;
  v58 = result;
  if (!v34)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  v35 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 376))(a3, a4);
  v55 = a2;
  v56 = a5;
  v53 = v19;
  v54 = a1;
  if (v36)
  {
    v37 = v36;
    v52[0] = v35;
  }
  else
  {
    v38 = (uint64_t *)sub_2486F5254();
    v37 = v38[1];
    v52[0] = *v38;
    v35 = swift_bridgeObjectRetain();
  }
  v52[1] = (uint64_t)v52;
  v39 = MEMORY[0x24BDAC7A8](v35);
  v40 = (char *)v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, double))(a4 + 256))(a3, a4, v39);
  v41 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 232))(a3, a4);
  v42 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 304))(a3, a4);
  v43 = (*(double (**)(uint64_t, uint64_t))(a4 + 328))(a3, a4);
  v44 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 184))(a3, a4);
  if (v44)
  {
    v45 = v44;
    v46 = objc_msgSend(v44, sel_BOOLValue);

  }
  else
  {
    v46 = 0;
  }
  v47 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 160))(a3, a4);
  TTSVBVoiceModelFlags.init(rawValue:)(v47, v71);
  v48 = v55;
  swift_bridgeObjectRetain();
  v51 = v42;
  v49 = v56;
  TTSVBVoiceModel.init(name:voiceID:modelID:creationDate:creationOSBuild:creationDeviceName:creationDeviceUDID:creationDeviceModel:version:trainingMode:trainingLocaleID:trainingFinishedDate:status:trainingStatus:trainingTaskProgress:isDownloaded:flags:)(v54, v48, (uint64_t)v70, (uint64_t)v53, (uint64_t)v24, v69, v68, v67, v56, v43, v66, v65, v64, v63, v62, v61, v60, v58, v57,
    v52[0],
    v37,
    (uint64_t)v40,
    v41,
    v51,
    v46,
    v71);
  v50 = type metadata accessor for TTSVBVoiceModel();
  return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v49, 0, 1, v50);
}

uint64_t sub_24871C1F4()
{
  return 16;
}

__n128 sub_24871C200(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24871C20C()
{
  return 16;
}

__n128 sub_24871C218(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24871C224()
{
  return 16;
}

__n128 sub_24871C230(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.apiVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.apiVersion.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.apiVersion.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.creationDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.creationDate.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.creationDate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.creationDeviceModel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.creationDeviceModel.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.creationDeviceModel.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.creationDeviceName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.creationDeviceName.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.creationDeviceName.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.creationDeviceUDID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.creationDeviceUDID.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 120))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.creationDeviceUDID.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.creationOSBuild.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.creationOSBuild.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 144))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.creationOSBuild.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 152))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.flags_.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.flags_.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 168))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.flags_.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 176))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.isDownloaded.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.isDownloaded.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 192))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.isDownloaded.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 200))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.modelID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 208))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.modelID.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 216))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.modelID.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 224))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.status_.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 232))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.status_.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 240))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.status_.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 248))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.trainingFinishedDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 256))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.trainingFinishedDate.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 264))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.trainingFinishedDate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 272))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.trainingMode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 280))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.trainingMode.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 288))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.trainingMode.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 296))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.trainingStatus_.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 304))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.trainingStatus_.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 312))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.trainingStatus_.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 320))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.trainingTaskProgress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 328))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.trainingTaskProgress.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 336))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.trainingTaskProgress.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 344))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.version.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 352))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.version.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 360))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.version.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 368))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.trainingLocaleID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 376))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.trainingLocaleID.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 384))();
}

uint64_t dispatch thunk of TTSVBCommonVoiceModelMO.trainingLocaleID.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 392))();
}

uint64_t TTSVBVoiceSampleFlags.rawValue.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t TTSVBVoiceSampleFlags.init(rawValue:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

unint64_t sub_24871C3D0()
{
  unint64_t result;

  result = qword_25777CA18;
  if (!qword_25777CA18)
  {
    result = MEMORY[0x24959AEB4](&protocol conformance descriptor for TTSVBVoiceSampleFlags, &type metadata for TTSVBVoiceSampleFlags);
    atomic_store(result, (unint64_t *)&qword_25777CA18);
  }
  return result;
}

unint64_t sub_24871C418()
{
  unint64_t result;

  result = qword_25777CA20;
  if (!qword_25777CA20)
  {
    result = MEMORY[0x24959AEB4](&protocol conformance descriptor for TTSVBVoiceSampleFlags, &type metadata for TTSVBVoiceSampleFlags);
    atomic_store(result, (unint64_t *)&qword_25777CA20);
  }
  return result;
}

_DWORD *sub_24871C45C@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unint64_t sub_24871C46C()
{
  unint64_t result;

  result = qword_25777CA28;
  if (!qword_25777CA28)
  {
    result = MEMORY[0x24959AEB4](&protocol conformance descriptor for TTSVBVoiceSampleFlags, &type metadata for TTSVBVoiceSampleFlags);
    atomic_store(result, (unint64_t *)&qword_25777CA28);
  }
  return result;
}

uint64_t sub_24871C4B0()
{
  sub_2487B5D5C();
  sub_2487B5D80();
  return sub_2487B5D98();
}

uint64_t sub_24871C4F4()
{
  return sub_2487B5D80();
}

uint64_t sub_24871C51C()
{
  sub_2487B5D5C();
  sub_2487B5D80();
  return sub_2487B5D98();
}

uint64_t sub_24871C55C()
{
  sub_24871C3D0();
  return sub_2487B5654();
}

uint64_t sub_24871C5B8()
{
  sub_24871C3D0();
  return sub_2487B563C();
}

unint64_t sub_24871C608()
{
  unint64_t result;

  result = qword_25777CA30;
  if (!qword_25777CA30)
  {
    result = MEMORY[0x24959AEB4](&protocol conformance descriptor for TTSVBVoiceSampleFlags, &type metadata for TTSVBVoiceSampleFlags);
    atomic_store(result, (unint64_t *)&qword_25777CA30);
  }
  return result;
}

void sub_24871C64C(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_24871C654@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_24871C668@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_24871C67C@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_24871C690(_DWORD *a1, int *a2)
{
  _DWORD *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_24871C6C0@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  _DWORD *v2;
  int v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_DWORD *)a2 = v3;
  *(_BYTE *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_24871C6EC@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_24871C710(_DWORD *result)
{
  _DWORD *v1;

  *v1 |= *result;
  return result;
}

_DWORD *sub_24871C724(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= *result;
  return result;
}

_DWORD *sub_24871C738(_DWORD *result)
{
  _DWORD *v1;

  *v1 ^= *result;
  return result;
}

_DWORD *sub_24871C74C@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_24871C760(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_24871C774(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_24871C788(_DWORD *a1)
{
  _DWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_24871C79C()
{
  _DWORD *v0;

  return *v0 == 0;
}

uint64_t sub_24871C7AC()
{
  return sub_2487B59E4();
}

_DWORD *sub_24871C7C4(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= ~*result;
  return result;
}

_DWORD *sub_24871C7D8@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_24871C7E8(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

BOOL sub_24871C7F4(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

ValueMetadata *type metadata accessor for TTSVBVoiceSampleFlags()
{
  return &type metadata for TTSVBVoiceSampleFlags;
}

uint64_t sub_24871C81C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3;
  int v4;
  int *v5;
  int v6;
  int v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (int *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t TTSVBVoiceModel.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TTSVBVoiceModel.voiceID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TTSVBVoiceModel() + 20);
  v4 = sub_2487B5228();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for TTSVBVoiceModel()
{
  uint64_t result;

  result = qword_25445FBC0;
  if (!qword_25445FBC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t TTSVBVoiceModel.creationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TTSVBVoiceModel() + 28);
  v4 = sub_2487B51D4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TTSVBVoiceModel.creationOSBuild.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TTSVBVoiceModel() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TTSVBVoiceModel.creationDeviceName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TTSVBVoiceModel() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TTSVBVoiceModel.creationDeviceUDID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TTSVBVoiceModel() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TTSVBVoiceModel.creationDeviceModel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TTSVBVoiceModel() + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TTSVBVoiceModel.version.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TTSVBVoiceModel() + 48));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TTSVBVoiceModel.status.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for TTSVBVoiceModel() + 52));
}

uint64_t TTSVBVoiceModel.trainingLocaleID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TTSVBVoiceModel() + 56));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TTSVBVoiceModel.trainingLocaleID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for TTSVBVoiceModel() + 56));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TTSVBVoiceModel.trainingLocaleID.modify())()
{
  type metadata accessor for TTSVBVoiceModel();
  return nullsub_1;
}

uint64_t TTSVBVoiceModel.trainingStatus.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for TTSVBVoiceModel() + 60));
}

double TTSVBVoiceModel.trainingTaskProgress.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for TTSVBVoiceModel() + 64));
}

uint64_t TTSVBVoiceModel.trainingMode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TTSVBVoiceModel() + 68));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TTSVBVoiceModel.trainingFinishedDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for TTSVBVoiceModel() + 72);
  return sub_24871CC10(v3, a1);
}

uint64_t sub_24871CC10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t TTSVBVoiceModel.isDownloaded.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TTSVBVoiceModel() + 76));
}

uint64_t TTSVBVoiceModel.flags.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for TTSVBVoiceModel();
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 80));
  return result;
}

uint64_t sub_24871CCA8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24871CCD4 + 4 * aA[a1]))(1701667182, 0xE400000000000000);
}

uint64_t sub_24871CCD4()
{
  return 0x44496563696F76;
}

uint64_t sub_24871CCEC()
{
  return 0x44496C65646F6DLL;
}

uint64_t sub_24871CD04()
{
  return 0x6E6F697461657263;
}

unint64_t sub_24871CD38()
{
  return 0xD000000000000012;
}

unint64_t sub_24871CD60()
{
  return 0xD000000000000013;
}

uint64_t sub_24871CE28()
{
  return 0x6F6C6E776F447369;
}

uint64_t sub_24871CE48()
{
  return 0x7367616C66;
}

uint64_t sub_24871CE5C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24871CE88 + 4 * byte_2487BDB11[a1]))(1701667182, 0xE400000000000000);
}

uint64_t sub_24871CE88()
{
  return 0x44496563696F76;
}

uint64_t sub_24871CEA0()
{
  return 0x44496C65646F6DLL;
}

uint64_t sub_24871CEB8()
{
  return 0x6E6F697461657263;
}

unint64_t sub_24871CEEC()
{
  return 0xD000000000000012;
}

unint64_t sub_24871CF14()
{
  return 0xD000000000000013;
}

uint64_t sub_24871CFDC()
{
  return 0x6F6C6E776F447369;
}

uint64_t sub_24871CFFC()
{
  return 0x7367616C66;
}

uint64_t sub_24871D010(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_24871CCA8(*a1);
  v5 = v4;
  if (v3 == sub_24871CCA8(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_2487B5CE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24871D098()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_2487B5D5C();
  sub_24871CCA8(v1);
  sub_2487B557C();
  swift_bridgeObjectRelease();
  return sub_2487B5D98();
}

uint64_t sub_24871D0F8()
{
  unsigned __int8 *v0;

  sub_24871CCA8(*v0);
  sub_2487B557C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24871D138()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_2487B5D5C();
  sub_24871CCA8(v1);
  sub_2487B557C();
  swift_bridgeObjectRelease();
  return sub_2487B5D98();
}

uint64_t sub_24871D194@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24871F8E0();
  *a1 = result;
  return result;
}

uint64_t sub_24871D1C0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_24871CCA8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_24871D1E8()
{
  unsigned __int8 *v0;

  return sub_24871CE5C(*v0);
}

uint64_t sub_24871D1F0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24871F8E0();
  *a1 = result;
  return result;
}

void sub_24871D214(_BYTE *a1@<X8>)
{
  *a1 = 17;
}

uint64_t sub_24871D220()
{
  sub_24871F930();
  return sub_2487B5DBC();
}

uint64_t sub_24871D248()
{
  sub_24871F930();
  return sub_2487B5DC8();
}

uint64_t TTSVBVoiceModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t result;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, char *, uint64_t);
  char *v31;
  uint64_t (*v32)(uint64_t);
  int *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t (*v41)(uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  unint64_t v74;
  unint64_t v75;
  char v76;
  unint64_t v77;
  int v78;
  uint64_t (*v79)(char *, char *, uint64_t);
  uint64_t (**v80)(char *, char *, uint64_t);
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  int *v86;
  int v87;
  char v88;
  int v89;
  uint64_t v90;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777CA38);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = (int *)type metadata accessor for TTSVBVoiceModel();
  MEMORY[0x24BDAC7A8](v86);
  v10 = (uint64_t *)((char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = a1[3];
  v84 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_24871F930();
  sub_2487B5DA4();
  if (v2)
  {
    v85 = v2;
    LODWORD(v83) = 0;
    v12 = 0;
LABEL_4:
    result = __swift_destroy_boxed_opaque_existential_0(v84);
    v14 = (v12 >> 2) & 1;
    v15 = (v12 >> 3) & 1;
    v16 = (v12 >> 4) & 1;
    v17 = (v12 >> 5) & 1;
    v18 = (v12 >> 6) & 1;
    v19 = (v12 >> 7) & 1;
    if ((v12 & 1) != 0)
      result = swift_bridgeObjectRelease();
    v20 = v86;
    if ((v12 & 2) == 0)
    {
      LODWORD(v84) = 0;
      LODWORD(v81) = 0;
      LODWORD(v82) = 0;
      if ((v12 & 4) == 0)
        goto LABEL_8;
      goto LABEL_20;
    }
    LODWORD(v82) = 0;
    LODWORD(v81) = 0;
    LODWORD(v84) = 0;
LABEL_19:
    v23 = (char *)v10 + v20[5];
    v24 = sub_2487B5228();
    result = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
    if ((v14 & 1) == 0)
    {
LABEL_8:
      if (v15)
        goto LABEL_9;
      goto LABEL_21;
    }
LABEL_20:
    v25 = (char *)v10 + v20[6];
    v26 = sub_2487B5228();
    result = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
    if ((v15 & 1) != 0)
    {
LABEL_9:
      v21 = (char *)v10 + v20[7];
      v22 = sub_2487B51D4();
      result = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
      if ((v16 & 1) == 0)
        goto LABEL_10;
      goto LABEL_22;
    }
LABEL_21:
    if (!v16)
    {
LABEL_10:
      if (v17)
        goto LABEL_11;
      goto LABEL_23;
    }
LABEL_22:
    result = swift_bridgeObjectRelease();
    if ((v17 & 1) != 0)
    {
LABEL_11:
      result = swift_bridgeObjectRelease();
      if ((v18 & 1) == 0)
        goto LABEL_12;
      goto LABEL_24;
    }
LABEL_23:
    if (!v18)
    {
LABEL_12:
      if (v19)
        goto LABEL_13;
      goto LABEL_25;
    }
LABEL_24:
    result = swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
    {
LABEL_13:
      result = swift_bridgeObjectRelease();
      if ((v83 & 1) == 0)
        goto LABEL_14;
      goto LABEL_26;
    }
LABEL_25:
    if (!(_DWORD)v83)
    {
LABEL_14:
      if ((_DWORD)v84)
        goto LABEL_15;
      goto LABEL_27;
    }
LABEL_26:
    result = swift_bridgeObjectRelease();
    if ((v84 & 1) != 0)
    {
LABEL_15:
      result = swift_bridgeObjectRelease();
      if ((v81 & 1) == 0)
        goto LABEL_16;
      goto LABEL_28;
    }
LABEL_27:
    if (!(_DWORD)v81)
    {
LABEL_16:
      if (!(_DWORD)v82)
        return result;
      return sub_2486F5008((uint64_t)v10 + v20[18], &qword_25445ED38);
    }
LABEL_28:
    result = swift_bridgeObjectRelease();
    if ((v82 & 1) == 0)
      return result;
    return sub_2486F5008((uint64_t)v10 + v20[18], &qword_25445ED38);
  }
  v82 = a2;
  v83 = v6;
  LOBYTE(v90) = 0;
  *v10 = sub_2487B5BE8();
  v10[1] = v27;
  v28 = v5;
  v29 = sub_2487B5228();
  v80 = *(uint64_t (***)(char *, char *, uint64_t))(v29 - 8);
  v30 = v80[8];
  MEMORY[0x24BDAC7A8](v29);
  v85 = ((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF0;
  v31 = (char *)&v79 - v85;
  LOBYTE(v90) = 1;
  sub_2486F4CA0(&qword_25777C858, v32, MEMORY[0x24BDCEAA0]);
  v81 = v8;
  sub_2487B5C24();
  v33 = v86;
  v34 = (char *)v10 + v86[5];
  v79 = v80[4];
  v35 = v79(v34, v31, v29);
  v80 = &v79;
  MEMORY[0x24BDAC7A8](v35);
  v36 = (char *)&v79 - v85;
  LOBYTE(v90) = 2;
  sub_2487B5C24();
  v79((char *)v10 + v33[6], v36, v29);
  v37 = sub_2487B51D4();
  v80 = &v79;
  v38 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v79 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v90) = 3;
  v42 = sub_2486F4CA0(&qword_25777CA48, v41, MEMORY[0x24BDCE968]);
  sub_2487B5C24();
  v79 = (uint64_t (*)(char *, char *, uint64_t))v42;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))((char *)v10 + v86[7], v40, v37);
  LOBYTE(v90) = 4;
  v43 = sub_2487B5BE8();
  v44 = (uint64_t *)((char *)v10 + v86[8]);
  *v44 = v43;
  v44[1] = v45;
  LOBYTE(v90) = 5;
  v46 = sub_2487B5BD0();
  v47 = (uint64_t *)((char *)v10 + v86[9]);
  *v47 = v46;
  v47[1] = v48;
  LOBYTE(v90) = 6;
  v49 = sub_2487B5BD0();
  v50 = (uint64_t *)((char *)v10 + v86[10]);
  *v50 = v49;
  v50[1] = v51;
  LOBYTE(v90) = 7;
  v52 = sub_2487B5BD0();
  v53 = (uint64_t *)((char *)v10 + v86[11]);
  *v53 = v52;
  v53[1] = v54;
  LOBYTE(v90) = 8;
  v55 = sub_2487B5BE8();
  v85 = 0;
  v57 = (uint64_t *)((char *)v10 + v86[12]);
  *v57 = v55;
  v57[1] = v56;
  type metadata accessor for TTSVBVoiceStatus(0);
  LOBYTE(v87) = 9;
  sub_2486F4CA0(&qword_25777CA50, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceStatus, (uint64_t)&protocol conformance descriptor for TTSVBVoiceStatus);
  v58 = v28;
  v59 = v81;
  v60 = v85;
  sub_2487B5C24();
  v85 = v60;
  if (v60)
  {
    (*(void (**)(char *, uint64_t))(v83 + 8))(v59, v58);
    v12 = 511;
    LODWORD(v83) = 1;
    goto LABEL_4;
  }
  *(uint64_t *)((char *)v10 + v86[13]) = v90;
  LOBYTE(v90) = 10;
  v61 = sub_2487B5BD0();
  v85 = 0;
  v63 = v61;
  v64 = v62;
  if (!v62)
  {
    v63 = *(_QWORD *)sub_2486F5254();
    v64 = swift_bridgeObjectRetain();
  }
  v65 = (uint64_t *)((char *)v10 + v86[14]);
  *v65 = v63;
  v65[1] = v64;
  type metadata accessor for TTSVBVoiceTrainingStatus(0);
  LOBYTE(v87) = 11;
  sub_2486F4CA0(&qword_25777CA58, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceTrainingStatus, (uint64_t)&protocol conformance descriptor for TTSVBVoiceTrainingStatus);
  v66 = v85;
  sub_2487B5C24();
  v85 = v66;
  if (v66)
  {
    (*(void (**)(char *, uint64_t))(v83 + 8))(v59, v58);
    LODWORD(v81) = 0;
LABEL_39:
    LODWORD(v82) = 0;
LABEL_40:
    __swift_destroy_boxed_opaque_existential_0(v84);
    swift_bridgeObjectRelease();
    LODWORD(v84) = 1;
    LODWORD(v83) = 1;
    v19 = 1;
    v18 = 1;
    v17 = 1;
    v16 = 1;
    v15 = 1;
    LOBYTE(v14) = 1;
    v20 = v86;
    goto LABEL_19;
  }
  *(uint64_t *)((char *)v10 + v86[15]) = v90;
  LOBYTE(v90) = 12;
  sub_2487B5C00();
  v85 = 0;
  *(uint64_t *)((char *)v10 + v86[16]) = v67;
  LOBYTE(v90) = 13;
  v68 = sub_2487B5BE8();
  v85 = 0;
  v70 = (uint64_t *)((char *)v10 + v86[17]);
  *v70 = v68;
  v70[1] = v69;
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
  MEMORY[0x24BDAC7A8](v71);
  v73 = (char *)&v79 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v90) = 14;
  v74 = v85;
  sub_2487B5BDC();
  v85 = v74;
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v83 + 8))(v59, v58);
    LODWORD(v81) = 1;
    goto LABEL_39;
  }
  sub_24871F9E0((uint64_t)v73, (uint64_t)v10 + v86[18]);
  LOBYTE(v90) = 15;
  v75 = v85;
  v76 = sub_2487B5BF4();
  v85 = v75;
  if (v75
    || (*((_BYTE *)v10 + v86[19]) = v76 & 1,
        LOBYTE(v90) = 16,
        sub_24871FA28(),
        v77 = v85,
        sub_2487B5BDC(),
        (v85 = v77) != 0))
  {
    (*(void (**)(char *, uint64_t))(v83 + 8))(v59, v58);
    LODWORD(v81) = 1;
    LODWORD(v82) = 1;
    goto LABEL_40;
  }
  if ((v88 & 1) != 0)
  {
    v90 = MEMORY[0x24BEE4AF8];
    sub_24871B998();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25777CA08);
    sub_24871B9DC();
    sub_2487B59FC();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v59, v58);
    v78 = v89;
  }
  else
  {
    v78 = v87;
    (*(void (**)(char *, uint64_t))(v83 + 8))(v59, v58);
  }
  *(_DWORD *)((char *)v10 + v86[20]) = v78;
  sub_24871FA6C((uint64_t)v10, v82);
  __swift_destroy_boxed_opaque_existential_0(v84);
  return sub_2486EDA68((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
}

unint64_t TTSVBVoiceModel.qualifiedVoiceIdentifier.getter()
{
  sub_2487B5AA4();
  swift_bridgeObjectRelease();
  type metadata accessor for TTSVBVoiceModel();
  sub_2487B51EC();
  sub_2487B55AC();
  swift_bridgeObjectRelease();
  return 0xD00000000000001FLL;
}

uint64_t TTSVBVoiceModel.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v3 = type metadata accessor for TTSVBPath();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24871FA6C(v1, (uint64_t)v5);
  swift_storeEnumTagMultiPayload();
  TTSVBPath.url.getter(a1);
  return sub_2486EDA68((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBPath);
}

uint64_t TTSVBVoiceModel.init(name:voiceID:modelID:creationDate:creationOSBuild:creationDeviceName:creationDeviceUDID:creationDeviceModel:version:trainingMode:trainingLocaleID:trainingFinishedDate:status:trainingStatus:trainingTaskProgress:isDownloaded:flags:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,int *a26)
{
  int *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t result;
  int v48;

  v48 = *a26;
  *(_QWORD *)a9 = a1;
  *((_QWORD *)a9 + 1) = a2;
  v30 = (int *)type metadata accessor for TTSVBVoiceModel();
  v31 = &a9[v30[5]];
  v32 = sub_2487B5228();
  v33 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 32);
  v33(v31, a3, v32);
  v33(&a9[v30[6]], a4, v32);
  v34 = &a9[v30[14]];
  *(_QWORD *)v34 = a20;
  *((_QWORD *)v34 + 1) = a21;
  v35 = &a9[v30[7]];
  v36 = sub_2487B51D4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v35, a5, v36);
  v37 = &a9[v30[8]];
  *(_QWORD *)v37 = a6;
  *((_QWORD *)v37 + 1) = a7;
  v38 = &a9[v30[9]];
  *(_QWORD *)v38 = a8;
  *((_QWORD *)v38 + 1) = a11;
  v39 = &a9[v30[10]];
  *(_QWORD *)v39 = a12;
  *((_QWORD *)v39 + 1) = a13;
  v40 = &a9[v30[11]];
  *(_QWORD *)v40 = a14;
  *((_QWORD *)v40 + 1) = a15;
  v41 = &a9[v30[12]];
  *(_QWORD *)v41 = a16;
  *((_QWORD *)v41 + 1) = a17;
  v42 = &a9[v30[17]];
  *(_QWORD *)v42 = a18;
  *((_QWORD *)v42 + 1) = a19;
  result = sub_24871F9E0(a22, (uint64_t)&a9[v30[18]]);
  *(_QWORD *)&a9[v30[13]] = a23;
  *(_QWORD *)&a9[v30[15]] = a24;
  *(double *)&a9[v30[16]] = a10;
  a9[v30[19]] = a25;
  *(_DWORD *)&a9[v30[20]] = v48;
  return result;
}

uint64_t _s31TextToSpeechVoiceBankingSupport15TTSVBVoiceModelV7modelID10Foundation4UUIDVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TTSVBVoiceModel() + 24);
  v4 = sub_2487B5228();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TTSVBVoiceModel.trainingDuration.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TTSVBVoiceModel();
  sub_24871CC10(v0 + *(int *)(v4 + 72), (uint64_t)v3);
  v5 = sub_2487B51D4();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5) == 1)
  {
    sub_2486F5008((uint64_t)v3, &qword_25445ED38);
    return 0;
  }
  else
  {
    sub_2487B5168();
    v9 = v8;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v3, v5);
    return v9;
  }
}

Swift::String __swiftcall TTSVBVoiceModel.preparingString(charging:)(Swift::Bool charging)
{
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  Swift::String result;
  _QWORD v26[6];

  v2 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v3 = TTSVBSupportLocString(v2);

  v4 = sub_2487B5528();
  v26[3] = v5;
  v26[4] = v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25777C9B0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2487B72B0;
  v26[2] = v6 + 32;
  v26[5] = *(_QWORD *)(v1 + *(int *)(type metadata accessor for TTSVBVoiceModel() + 64));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777CA68);
  v26[1] = v26;
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26[0] = v26;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v26 - v12;
  v14 = sub_2487B5270();
  MEMORY[0x24BDAC7A8](v14);
  sub_2487B5258();
  sub_24871FAB0();
  sub_2487B4F70();
  v15 = sub_2487B4FB8();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2487B4FAC();
  MEMORY[0x2495998E8](v18, v7);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  v19 = *(void (**)(char *, uint64_t))(v8 + 8);
  v19(v13, v7);
  *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v6 + 64) = sub_2487189D4();
  sub_24871FAF4();
  sub_2487B5450();
  v19(v11, v7);
  v20 = sub_2487B5540();
  v22 = v21;
  swift_bridgeObjectRelease();
  v23 = v20;
  v24 = v22;
  result._object = v24;
  result._countAndFlagsBits = v23;
  return result;
}

uint64_t static TTSVBVoiceModel.< infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if (!v2 && (sub_2487B5CE4() & 1) == 0)
    return sub_2487B5CE4();
  type metadata accessor for TTSVBVoiceModel();
  return sub_2487B5180() & 1;
}

uint64_t TTSVBVoiceModel.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  unint64_t v10;

  v1 = type metadata accessor for TTSVBPath();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  v10 = 0xE000000000000000;
  sub_2487B5AA4();
  swift_bridgeObjectRelease();
  v9 = 0x3D656D614ELL;
  v10 = 0xE500000000000000;
  swift_bridgeObjectRetain();
  sub_2487B55AC();
  swift_bridgeObjectRelease();
  sub_2487B55AC();
  type metadata accessor for TTSVBVoiceModel();
  sub_2487B51EC();
  sub_2487B55AC();
  swift_bridgeObjectRelease();
  sub_2487B55AC();
  sub_2487B51EC();
  sub_2487B55AC();
  swift_bridgeObjectRelease();
  sub_2487B55AC();
  swift_bridgeObjectRetain();
  sub_2487B55AC();
  swift_bridgeObjectRelease();
  sub_2487B55AC();
  v4 = sub_2487B50CC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24871FA6C(v0, (uint64_t)v3);
  swift_storeEnumTagMultiPayload();
  TTSVBPath.url.getter((uint64_t)v7);
  sub_2486EDA68((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBPath);
  sub_2487B50B4();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_2487B55AC();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t TTSVBVoiceModel.convertToData()()
{
  uint64_t v0;

  sub_2487B4E50();
  swift_allocObject();
  sub_2487B4E44();
  type metadata accessor for TTSVBVoiceModel();
  sub_2486F4CA0(&qword_25777C1B0, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModel);
  v0 = sub_2487B4E38();
  swift_release();
  return v0;
}

uint64_t TTSVBVoiceModel.init(data:)(uint64_t a1, unint64_t a2)
{
  sub_2487B4E2C();
  swift_allocObject();
  sub_2487B4E20();
  type metadata accessor for TTSVBVoiceModel();
  sub_2486F4CA0(&qword_25777C1A8, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModel);
  sub_2487B4E14();
  sub_2486F4A28(a1, a2);
  return swift_release();
}

Swift::Bool __swiftcall TTSVBVoiceModel.isTraining()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Bool v13;
  uint64_t v15;
  uint64_t v16;

  v1 = type metadata accessor for TTSVBVoiceModel();
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)&v16 - v6;
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v16 - v9;
  v11 = *(_QWORD *)(v0 + *(int *)(v8 + 52));
  sub_24871FA6C(v0, (uint64_t)&v16 - v9);
  if (v11 == 1)
  {
    sub_2486EDA68((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
    sub_24871FA6C(v0, (uint64_t)v7);
LABEL_4:
    sub_2486EDA68((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
    sub_24871FA6C(v0, (uint64_t)v4);
    goto LABEL_5;
  }
  v12 = *(_QWORD *)&v10[*(int *)(v1 + 52)];
  sub_2486EDA68((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
  sub_24871FA6C(v0, (uint64_t)v7);
  if (v12 == 2)
    goto LABEL_4;
  v15 = *(_QWORD *)&v7[*(int *)(v1 + 52)];
  sub_2486EDA68((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
  sub_24871FA6C(v0, (uint64_t)v4);
  if (v15 != 3)
  {
    v13 = *(_QWORD *)&v4[*(int *)(v1 + 52)] == 6;
    goto LABEL_6;
  }
LABEL_5:
  v13 = 1;
LABEL_6:
  sub_2486EDA68((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
  return v13;
}

uint64_t TTSVBVoiceModel.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;

  v1 = v0;
  swift_bridgeObjectRetain();
  sub_2487B557C();
  swift_bridgeObjectRelease();
  v2 = (int *)type metadata accessor for TTSVBVoiceModel();
  sub_2487B5228();
  sub_2486F4CA0((unint64_t *)&qword_25777C458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA50], MEMORY[0x24BDCEA80]);
  sub_2487B5480();
  sub_2487B5480();
  v3 = sub_2487B51D4();
  sub_2486F4CA0(&qword_25777CA80, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE908], MEMORY[0x24BDCE938]);
  sub_2487B5480();
  swift_bridgeObjectRetain();
  sub_2487B557C();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v2[9] + 8))
  {
    sub_2487B5D74();
    swift_bridgeObjectRetain();
    sub_2487B557C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2487B5D74();
  }
  if (*(_QWORD *)(v0 + v2[10] + 8))
  {
    sub_2487B5D74();
    swift_bridgeObjectRetain();
    sub_2487B557C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2487B5D74();
  }
  if (*(_QWORD *)(v0 + v2[11] + 8))
  {
    sub_2487B5D74();
    swift_bridgeObjectRetain();
    sub_2487B557C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2487B5D74();
  }
  swift_bridgeObjectRetain();
  sub_2487B557C();
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v0 + v2[13]);
  type metadata accessor for TTSVBVoiceStatus(0);
  sub_2486F4CA0(&qword_25777CA88, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceStatus, (uint64_t)&protocol conformance descriptor for TTSVBVoiceStatus);
  sub_2487B5480();
  swift_bridgeObjectRetain();
  sub_2487B557C();
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v0 + v2[15]);
  type metadata accessor for TTSVBVoiceTrainingStatus(0);
  sub_2486F4CA0(&qword_25777CA90, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceTrainingStatus, (uint64_t)&protocol conformance descriptor for TTSVBVoiceTrainingStatus);
  sub_2487B5480();
  sub_2487B5D8C();
  swift_bridgeObjectRetain();
  sub_2487B557C();
  swift_bridgeObjectRelease();
  v4 = v0 + v2[18];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24871CC10(v4, (uint64_t)v7);
  v8 = *(_QWORD *)(v3 - 8);
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v3);
  if ((_DWORD)v9 == 1)
  {
    sub_2487B5D74();
  }
  else
  {
    MEMORY[0x24BDAC7A8](v9);
    v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v7, v3);
    sub_2487B5D74();
    sub_2487B5480();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v3);
  }
  sub_2487B5D74();
  LODWORD(v14) = *(_DWORD *)(v1 + v2[20]);
  sub_24871FB40();
  return sub_2487B5480();
}

uint64_t TTSVBVoiceModel.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777CAA0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24871F930();
  sub_2487B5DB0();
  LOBYTE(v13) = 0;
  sub_2487B5C6C();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for TTSVBVoiceModel();
    LOBYTE(v13) = 1;
    sub_2487B5228();
    sub_2486F4CA0(&qword_25777C658, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA50], MEMORY[0x24BDCEA78]);
    sub_2487B5CA8();
    LOBYTE(v13) = 2;
    sub_2487B5CA8();
    LOBYTE(v13) = 3;
    sub_2487B51D4();
    sub_2486F4CA0(&qword_25777CAA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE908], MEMORY[0x24BDCE928]);
    sub_2487B5CA8();
    LOBYTE(v13) = 4;
    sub_2487B5C6C();
    LOBYTE(v13) = 5;
    sub_2487B5C54();
    LOBYTE(v13) = 6;
    sub_2487B5C54();
    LOBYTE(v13) = 7;
    sub_2487B5C54();
    LOBYTE(v13) = 8;
    sub_2487B5C6C();
    v13 = *(_QWORD *)(v3 + v9[13]);
    v12 = 9;
    type metadata accessor for TTSVBVoiceStatus(0);
    sub_2486F4CA0(&qword_25777CAB0, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceStatus, (uint64_t)&protocol conformance descriptor for TTSVBVoiceStatus);
    sub_2487B5CA8();
    LOBYTE(v13) = 10;
    sub_2487B5C6C();
    v13 = *(_QWORD *)(v3 + v9[15]);
    v12 = 11;
    type metadata accessor for TTSVBVoiceTrainingStatus(0);
    sub_2486F4CA0(&qword_25777CAB8, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceTrainingStatus, (uint64_t)&protocol conformance descriptor for TTSVBVoiceTrainingStatus);
    sub_2487B5CA8();
    LOBYTE(v13) = 12;
    sub_2487B5C84();
    LOBYTE(v13) = 13;
    sub_2487B5C6C();
    LOBYTE(v13) = 14;
    sub_2487B5C60();
    LOBYTE(v13) = 15;
    sub_2487B5C78();
    LODWORD(v13) = *(_DWORD *)(v3 + v9[20]);
    v12 = 16;
    sub_2487201D8();
    sub_2487B5CA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t TTSVBVoiceModel.hashValue.getter()
{
  sub_2487B5D5C();
  TTSVBVoiceModel.hash(into:)();
  return sub_2487B5D98();
}

uint64_t sub_24871F544@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TTSVBVoiceModel.init(from:)(a1, a2);
}

uint64_t sub_24871F558(_QWORD *a1)
{
  return TTSVBVoiceModel.encode(to:)(a1);
}

uint64_t sub_24871F56C()
{
  sub_2487B5D5C();
  TTSVBVoiceModel.hash(into:)();
  return sub_2487B5D98();
}

uint64_t sub_24871F5AC()
{
  sub_2487B5D5C();
  TTSVBVoiceModel.hash(into:)();
  return sub_2487B5D98();
}

uint64_t sub_24871F5E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 24);
  v5 = sub_2487B5228();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_24871F624(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (sub_2487B5CE4() & 1) != 0)
    return sub_2487B5180() & 1;
  else
    return sub_2487B5CE4();
}

BOOL sub_24871F6D4(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;
  char v3;

  v2 = *a2 == *a1 && a2[1] == a1[1];
  if (v2 || (sub_2487B5CE4() & 1) != 0)
  {
    type metadata accessor for TTSVBVoiceModel();
    v3 = sub_2487B5180();
  }
  else
  {
    v3 = sub_2487B5CE4();
  }
  return (v3 & 1) == 0;
}

BOOL sub_24871F774(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;
  char v3;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (sub_2487B5CE4() & 1) != 0)
  {
    type metadata accessor for TTSVBVoiceModel();
    v3 = sub_2487B5180();
  }
  else
  {
    v3 = sub_2487B5CE4();
  }
  return (v3 & 1) == 0;
}

uint64_t sub_24871F810(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;

  v2 = *a2 == *a1 && a2[1] == a1[1];
  if (v2 || (sub_2487B5CE4() & 1) != 0)
    return sub_2487B5180() & 1;
  else
    return sub_2487B5CE4();
}

_QWORD *sub_24871F8C4@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_24871F8D4(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_24871F8E0()
{
  unint64_t v0;

  v0 = sub_2487B5CF0();
  swift_bridgeObjectRelease();
  if (v0 >= 0x11)
    return 17;
  else
    return v0;
}

unint64_t sub_24871F930()
{
  unint64_t result;

  result = qword_25777CA40;
  if (!qword_25777CA40)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BDBCC, &type metadata for TTSVBVoiceModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777CA40);
  }
  return result;
}

void type metadata accessor for TTSVBVoiceStatus(uint64_t a1)
{
  sub_24871F99C(a1, &qword_25777CAF0);
}

void type metadata accessor for TTSVBVoiceTrainingStatus(uint64_t a1)
{
  sub_24871F99C(a1, &qword_25777CAE8);
}

void sub_24871F99C(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_24871F9E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24871FA28()
{
  unint64_t result;

  result = qword_25777CA60;
  if (!qword_25777CA60)
  {
    result = MEMORY[0x24959AEB4](&protocol conformance descriptor for TTSVBVoiceModelFlags, &type metadata for TTSVBVoiceModelFlags);
    atomic_store(result, (unint64_t *)&qword_25777CA60);
  }
  return result;
}

uint64_t sub_24871FA6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTSVBVoiceModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24871FAB0()
{
  unint64_t result;

  result = qword_25777CA70;
  if (!qword_25777CA70)
  {
    result = MEMORY[0x24959AEB4](MEMORY[0x24BEE13D0], MEMORY[0x24BEE13C8]);
    atomic_store(result, (unint64_t *)&qword_25777CA70);
  }
  return result;
}

unint64_t sub_24871FAF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25777CA78;
  if (!qword_25777CA78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25777CA68);
    result = MEMORY[0x24959AEB4](MEMORY[0x24BDCD488], v1);
    atomic_store(result, (unint64_t *)&qword_25777CA78);
  }
  return result;
}

unint64_t sub_24871FB40()
{
  unint64_t result;

  result = qword_25777CA98;
  if (!qword_25777CA98)
  {
    result = MEMORY[0x24959AEB4](&protocol conformance descriptor for TTSVBVoiceModelFlags, &type metadata for TTSVBVoiceModelFlags);
    atomic_store(result, (unint64_t *)&qword_25777CA98);
  }
  return result;
}

BOOL _s31TextToSpeechVoiceBankingSupport15TTSVBVoiceModelV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  char v5;
  _BOOL8 result;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t *v75;
  uint64_t *v76;
  uint64_t v77;
  int v78;
  int v79;
  int v80;
  int v81;

  if (*a1 != *a2 || a1[1] != a2[1])
  {
    v5 = sub_2487B5CE4();
    result = 0;
    if ((v5 & 1) == 0)
      return result;
  }
  v7 = (int *)type metadata accessor for TTSVBVoiceModel();
  if ((sub_2487B5204() & 1) == 0 || (sub_2487B5204() & 1) == 0 || (sub_2487B5198() & 1) == 0)
    return 0;
  v8 = v7[8];
  v9 = *(_QWORD *)((char *)a1 + v8);
  v10 = *(_QWORD *)((char *)a1 + v8 + 8);
  v11 = (_QWORD *)((char *)a2 + v8);
  if (v9 != *v11 || v10 != v11[1])
  {
    v13 = sub_2487B5CE4();
    result = 0;
    if ((v13 & 1) == 0)
      return result;
  }
  v14 = v7[9];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = *(_QWORD *)((char *)a1 + v14 + 8);
  v17 = (_QWORD *)((char *)a2 + v14);
  v18 = v17[1];
  if (v16)
  {
    if (!v18)
      return 0;
    if (*v15 != *v17 || v16 != v18)
    {
      v20 = sub_2487B5CE4();
      result = 0;
      if ((v20 & 1) == 0)
        return result;
    }
  }
  else if (v18)
  {
    return 0;
  }
  v21 = v7[10];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = *(_QWORD *)((char *)a1 + v21 + 8);
  v24 = (_QWORD *)((char *)a2 + v21);
  v25 = v24[1];
  if (v23)
  {
    if (!v25)
      return 0;
    if (*v22 != *v24 || v23 != v25)
    {
      v26 = sub_2487B5CE4();
      result = 0;
      if ((v26 & 1) == 0)
        return result;
    }
  }
  else if (v25)
  {
    return 0;
  }
  v27 = v7[11];
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = *(_QWORD *)((char *)a1 + v27 + 8);
  v30 = (_QWORD *)((char *)a2 + v27);
  v31 = v30[1];
  if (v29)
  {
    if (!v31)
      return 0;
    if (*v28 != *v30 || v29 != v31)
    {
      v32 = sub_2487B5CE4();
      result = 0;
      if ((v32 & 1) == 0)
        return result;
    }
  }
  else if (v31)
  {
    return 0;
  }
  v33 = v7[12];
  v34 = *(_QWORD *)((char *)a1 + v33);
  v35 = *(_QWORD *)((char *)a1 + v33 + 8);
  v36 = (_QWORD *)((char *)a2 + v33);
  if (v34 == *v36 && v35 == v36[1] || (v37 = sub_2487B5CE4(), result = 0, (v37 & 1) != 0))
  {
    if (*(_QWORD *)((char *)a1 + v7[13]) != *(_QWORD *)((char *)a2 + v7[13]))
      return 0;
    if ((v38 = v7[14],
          v39 = *(_QWORD *)((char *)a1 + v38),
          v40 = *(_QWORD *)((char *)a1 + v38 + 8),
          v41 = (_QWORD *)((char *)a2 + v38),
          v39 == *v41)
      && v40 == v41[1]
      || (v42 = sub_2487B5CE4(), result = 0, (v42 & 1) != 0))
    {
      if (*(_QWORD *)((char *)a1 + v7[15]) != *(_QWORD *)((char *)a2 + v7[15])
        || *(double *)((char *)a1 + v7[16]) != *(double *)((char *)a2 + v7[16]))
      {
        return 0;
      }
      if ((v43 = v7[17],
            v44 = *(_QWORD *)((char *)a1 + v43),
            v45 = *(_QWORD *)((char *)a1 + v43 + 8),
            v46 = (_QWORD *)((char *)a2 + v43),
            v44 == *v46)
        && v45 == v46[1]
        || (v47 = sub_2487B5CE4(), result = 0, (v47 & 1) != 0))
      {
        v48 = (uint64_t)a1 + v7[18];
        v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
        v76 = &v70;
        v50 = *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64);
        MEMORY[0x24BDAC7A8](v49);
        v51 = (v50 + 15) & 0xFFFFFFFFFFFFFFF0;
        sub_24871CC10(v48, (uint64_t)&v70 - v51);
        v75 = &v70;
        v52 = MEMORY[0x24BDAC7A8]((char *)a2 + v7[18]);
        v53 = (char *)&v70 - v51;
        sub_24871CC10(v52, (uint64_t)&v70 - v51);
        v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777CAF8);
        v74 = &v70;
        v55 = MEMORY[0x24BDAC7A8](v54);
        v57 = (char *)&v70 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
        v58 = (uint64_t)&v57[*(int *)(v55 + 48)];
        sub_24871CC10((uint64_t)&v70 - v51, (uint64_t)v57);
        v77 = v58;
        sub_24871CC10((uint64_t)&v70 - v51, v58);
        v59 = sub_2487B51D4();
        v73 = *(_QWORD *)(v59 - 8);
        v60 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v73 + 48);
        v61 = v60(v57, 1, v59);
        if ((_DWORD)v61 == 1)
        {
          sub_2486F5008((uint64_t)&v70 - v51, &qword_25445ED38);
          sub_2486F5008((uint64_t)&v70 - v51, &qword_25445ED38);
          if (v60((char *)v77, 1, v59) == 1)
          {
            sub_2486F5008((uint64_t)v57, &qword_25445ED38);
            goto LABEL_56;
          }
          goto LABEL_54;
        }
        v71 = (uint64_t)&v70 - v51;
        v72 = &v70;
        MEMORY[0x24BDAC7A8](v61);
        v62 = (char *)&v70 - v51;
        sub_24871CC10((uint64_t)v57, (uint64_t)&v70 - v51);
        v63 = v60((char *)v77, 1, v59);
        if ((_DWORD)v63 == 1)
        {
          sub_2486F5008((uint64_t)&v70 - v51, &qword_25445ED38);
          sub_2486F5008(v71, &qword_25445ED38);
          (*(void (**)(char *, uint64_t))(v73 + 8))((char *)&v70 - v51, v59);
LABEL_54:
          sub_2486F5008((uint64_t)v57, &qword_25777CAF8);
          return 0;
        }
        v70 = (uint64_t)&v70;
        v64 = v73;
        MEMORY[0x24BDAC7A8](v63);
        v66 = (char *)&v70 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v66, v77, v59);
        sub_2486F4CA0(&qword_25777CB08, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE908], MEMORY[0x24BDCE950]);
        LODWORD(v77) = sub_2487B54D4();
        v67 = *(void (**)(char *, uint64_t))(v64 + 8);
        v67(v66, v59);
        sub_2486F5008((uint64_t)v53, &qword_25445ED38);
        sub_2486F5008(v71, &qword_25445ED38);
        v67(v62, v59);
        sub_2486F5008((uint64_t)v57, &qword_25445ED38);
        if ((v77 & 1) != 0)
        {
LABEL_56:
          if (*((unsigned __int8 *)a1 + v7[19]) == *((unsigned __int8 *)a2 + v7[19]))
          {
            v68 = v7[20];
            v69 = *(_DWORD *)((char *)a1 + v68);
            v80 = *(_DWORD *)((char *)a2 + v68);
            v81 = v69;
            sub_2487214B8();
            sub_2487B5624();
            sub_2487B5624();
            return v79 == v78;
          }
        }
        return 0;
      }
    }
  }
  return result;
}

unint64_t sub_2487201D8()
{
  unint64_t result;

  result = qword_25777CAC0;
  if (!qword_25777CAC0)
  {
    result = MEMORY[0x24959AEB4](&protocol conformance descriptor for TTSVBVoiceModelFlags, &type metadata for TTSVBVoiceModelFlags);
    atomic_store(result, (unint64_t *)&qword_25777CAC0);
  }
  return result;
}

unint64_t sub_248720220()
{
  unint64_t result;

  result = qword_25777CAC8;
  if (!qword_25777CAC8)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BDB2C, &type metadata for TTSVBVoiceModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777CAC8);
  }
  return result;
}

unint64_t sub_248720268()
{
  unint64_t result;

  result = qword_25777CAD0;
  if (!qword_25777CAD0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BDC44, &type metadata for TTSVBVoiceModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777CAD0);
  }
  return result;
}

unint64_t sub_2487202B0()
{
  unint64_t result;

  result = qword_25777CAD8;
  if (!qword_25777CAD8)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BDC1C, &type metadata for TTSVBVoiceModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25777CAD8);
  }
  return result;
}

uint64_t sub_2487202F4()
{
  return sub_2486F4CA0(&qword_25777CAE0, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModel);
}

uint64_t sub_248720320()
{
  return sub_2486F4CA0((unint64_t *)&qword_25777C458, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA50], MEMORY[0x24BDCEA80]);
}

char *initializeBufferWithCopyOfBuffer for TTSVBVoiceModel(char *a1, char *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  char *__dst;
  uint64_t v57;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v50 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v50 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v7;
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_2487B5228();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v12(&v4[a3[6]], &a2[a3[6]], v11);
    v13 = a3[7];
    v14 = &v4[v13];
    v15 = &a2[v13];
    v57 = sub_2487B51D4();
    v16 = *(_QWORD *)(v57 - 8);
    v53 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v53(v14, v15, v57);
    v17 = a3[8];
    v18 = a3[9];
    v19 = &v4[v17];
    v20 = &a2[v17];
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    v22 = &v4[v18];
    v23 = &a2[v18];
    v55 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v55;
    v24 = a3[10];
    v25 = a3[11];
    v26 = &v4[v24];
    v27 = &a2[v24];
    v28 = *((_QWORD *)v27 + 1);
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *((_QWORD *)v26 + 1) = v28;
    v29 = &v4[v25];
    v30 = &a2[v25];
    v31 = *((_QWORD *)v30 + 1);
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *((_QWORD *)v29 + 1) = v31;
    v32 = a3[12];
    v33 = a3[13];
    v34 = &v4[v32];
    v35 = &a2[v32];
    v36 = *((_QWORD *)v35 + 1);
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *((_QWORD *)v34 + 1) = v36;
    *(_QWORD *)&v4[v33] = *(_QWORD *)&a2[v33];
    v37 = a3[14];
    v38 = a3[15];
    v39 = &v4[v37];
    v40 = &a2[v37];
    v41 = *((_QWORD *)v40 + 1);
    *(_QWORD *)v39 = *(_QWORD *)v40;
    *((_QWORD *)v39 + 1) = v41;
    *(_QWORD *)&v4[v38] = *(_QWORD *)&a2[v38];
    v42 = a3[17];
    *(_QWORD *)&v4[a3[16]] = *(_QWORD *)&a2[a3[16]];
    v43 = &v4[v42];
    v44 = &a2[v42];
    v45 = *((_QWORD *)v44 + 1);
    *(_QWORD *)v43 = *(_QWORD *)v44;
    *((_QWORD *)v43 + 1) = v45;
    v46 = a3[18];
    __dst = &v4[v46];
    v47 = &a2[v46];
    v54 = v16;
    v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v48(v47, 1, v57))
    {
      v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
      memcpy(__dst, v47, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      v53(__dst, v47, v57);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(__dst, 0, 1, v57);
    }
    v51 = a3[20];
    v4[a3[19]] = a2[a3[19]];
    *(_DWORD *)&v4[v51] = *(_DWORD *)&a2[v51];
  }
  return v4;
}

uint64_t destroy for TTSVBVoiceModel(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  void (*v12)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_2487B5228();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[6], v5);
  v7 = a1 + a2[7];
  v8 = sub_2487B51D4();
  v9 = *(_QWORD *)(v8 - 8);
  v12 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v12(v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = a1 + a2[18];
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v10, v8);
  return result;
}

char *initializeWithCopy for TTSVBVoiceModel(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  unsigned int (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  char *__dst;
  uint64_t v55;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_2487B5228();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  v12 = a3[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v55 = sub_2487B51D4();
  v15 = *(_QWORD *)(v55 - 8);
  v51 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v51(v13, v14, v55);
  v16 = a3[8];
  v17 = a3[9];
  v18 = &a1[v16];
  v19 = &a2[v16];
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = v20;
  v21 = &a1[v17];
  v22 = &a2[v17];
  v53 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = v53;
  v23 = a3[10];
  v24 = a3[11];
  v25 = &a1[v23];
  v26 = &a2[v23];
  v27 = *((_QWORD *)v26 + 1);
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *((_QWORD *)v25 + 1) = v27;
  v28 = &a1[v24];
  v29 = &a2[v24];
  v30 = *((_QWORD *)v29 + 1);
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *((_QWORD *)v28 + 1) = v30;
  v31 = a3[12];
  v32 = a3[13];
  v33 = &a1[v31];
  v34 = &a2[v31];
  v35 = *((_QWORD *)v34 + 1);
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *((_QWORD *)v33 + 1) = v35;
  *(_QWORD *)&a1[v32] = *(_QWORD *)&a2[v32];
  v36 = a3[14];
  v37 = a3[15];
  v38 = &a1[v36];
  v39 = &a2[v36];
  v40 = *((_QWORD *)v39 + 1);
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *((_QWORD *)v38 + 1) = v40;
  *(_QWORD *)&a1[v37] = *(_QWORD *)&a2[v37];
  v41 = a3[17];
  *(_QWORD *)&a1[a3[16]] = *(_QWORD *)&a2[a3[16]];
  v42 = &a1[v41];
  v43 = &a2[v41];
  v44 = *((_QWORD *)v43 + 1);
  *(_QWORD *)v42 = *(_QWORD *)v43;
  *((_QWORD *)v42 + 1) = v44;
  v45 = a3[18];
  __dst = &a1[v45];
  v46 = &a2[v45];
  v52 = v15;
  v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v47(v46, 1, v55))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
    memcpy(__dst, v46, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    v51(__dst, v46, v55);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(__dst, 0, 1, v55);
  }
  v49 = a3[20];
  a1[a3[19]] = a2[a3[19]];
  *(_DWORD *)&a1[v49] = *(_DWORD *)&a2[v49];
  return a1;
}

char *assignWithCopy for TTSVBVoiceModel(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t (*v41)(char *, uint64_t, uint64_t);
  int v42;
  uint64_t v43;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_2487B5228();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v11 = a3[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_2487B51D4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(void (**)(char *, char *, uint64_t))(v15 + 24);
  v16(v12, v13, v14);
  v17 = a3[8];
  v18 = &a1[v17];
  v19 = &a2[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = a3[9];
  v21 = &a1[v20];
  v22 = &a2[v20];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = a3[10];
  v24 = &a1[v23];
  v25 = &a2[v23];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = a3[11];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = a3[12];
  v30 = &a1[v29];
  v31 = &a2[v29];
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  v32 = a3[14];
  v33 = &a1[v32];
  v34 = &a2[v32];
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[15]] = *(_QWORD *)&a2[a3[15]];
  *(_QWORD *)&a1[a3[16]] = *(_QWORD *)&a2[a3[16]];
  v35 = a3[17];
  v36 = &a1[v35];
  v37 = &a2[v35];
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *((_QWORD *)v36 + 1) = *((_QWORD *)v37 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = a3[18];
  v39 = &a1[v38];
  v40 = &a2[v38];
  v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v10) = v41(&a1[v38], 1, v14);
  v42 = v41(v40, 1, v14);
  if (!(_DWORD)v10)
  {
    if (!v42)
    {
      v16(v39, v40, v14);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v39, v14);
    goto LABEL_6;
  }
  if (v42)
  {
LABEL_6:
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v39, v40, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v39, 0, 1, v14);
LABEL_7:
  a1[a3[19]] = a2[a3[19]];
  *(_DWORD *)&a1[a3[20]] = *(_DWORD *)&a2[a3[20]];
  return a1;
}

char *initializeWithTake for TTSVBVoiceModel(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_2487B5228();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v11 = a3[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_2487B51D4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v16(v12, v13, v14);
  v17 = a3[9];
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  *(_OWORD *)&a1[v17] = *(_OWORD *)&a2[v17];
  v18 = a3[11];
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  *(_OWORD *)&a1[v18] = *(_OWORD *)&a2[v18];
  v19 = a3[13];
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  *(_QWORD *)&a1[v19] = *(_QWORD *)&a2[v19];
  v20 = a3[15];
  *(_OWORD *)&a1[a3[14]] = *(_OWORD *)&a2[a3[14]];
  *(_QWORD *)&a1[v20] = *(_QWORD *)&a2[v20];
  v21 = a3[17];
  *(_QWORD *)&a1[a3[16]] = *(_QWORD *)&a2[a3[16]];
  *(_OWORD *)&a1[v21] = *(_OWORD *)&a2[v21];
  v22 = a3[18];
  v23 = &a1[v22];
  v24 = &a2[v22];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(&a2[v22], 1, v14))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v16(v23, v24, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v23, 0, 1, v14);
  }
  v26 = a3[20];
  a1[a3[19]] = a2[a3[19]];
  *(_DWORD *)&a1[v26] = *(_DWORD *)&a2[v26];
  return a1;
}

char *assignWithTake for TTSVBVoiceModel(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t (*v57)(char *, uint64_t, uint64_t);
  int v58;
  uint64_t v59;
  uint64_t v60;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_2487B5228();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  v12 = a3[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_2487B51D4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(void (**)(char *, char *, uint64_t))(v16 + 40);
  v17(v13, v14, v15);
  v18 = a3[8];
  v19 = &a1[v18];
  v20 = (uint64_t *)&a2[v18];
  v22 = *v20;
  v21 = v20[1];
  *(_QWORD *)v19 = v22;
  *((_QWORD *)v19 + 1) = v21;
  swift_bridgeObjectRelease();
  v23 = a3[9];
  v24 = &a1[v23];
  v25 = (uint64_t *)&a2[v23];
  v27 = *v25;
  v26 = v25[1];
  *(_QWORD *)v24 = v27;
  *((_QWORD *)v24 + 1) = v26;
  swift_bridgeObjectRelease();
  v28 = a3[10];
  v29 = &a1[v28];
  v30 = (uint64_t *)&a2[v28];
  v32 = *v30;
  v31 = v30[1];
  *(_QWORD *)v29 = v32;
  *((_QWORD *)v29 + 1) = v31;
  swift_bridgeObjectRelease();
  v33 = a3[11];
  v34 = &a1[v33];
  v35 = (uint64_t *)&a2[v33];
  v37 = *v35;
  v36 = v35[1];
  *(_QWORD *)v34 = v37;
  *((_QWORD *)v34 + 1) = v36;
  swift_bridgeObjectRelease();
  v38 = a3[12];
  v39 = &a1[v38];
  v40 = (uint64_t *)&a2[v38];
  v42 = *v40;
  v41 = v40[1];
  *(_QWORD *)v39 = v42;
  *((_QWORD *)v39 + 1) = v41;
  swift_bridgeObjectRelease();
  v43 = a3[14];
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  v44 = &a1[v43];
  v45 = (uint64_t *)&a2[v43];
  v47 = *v45;
  v46 = v45[1];
  *(_QWORD *)v44 = v47;
  *((_QWORD *)v44 + 1) = v46;
  swift_bridgeObjectRelease();
  v48 = a3[16];
  *(_QWORD *)&a1[a3[15]] = *(_QWORD *)&a2[a3[15]];
  *(_QWORD *)&a1[v48] = *(_QWORD *)&a2[v48];
  v49 = a3[17];
  v50 = &a1[v49];
  v51 = (uint64_t *)&a2[v49];
  v53 = *v51;
  v52 = v51[1];
  *(_QWORD *)v50 = v53;
  *((_QWORD *)v50 + 1) = v52;
  swift_bridgeObjectRelease();
  v54 = a3[18];
  v55 = &a1[v54];
  v56 = &a2[v54];
  v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v11) = v57(&a1[v54], 1, v15);
  v58 = v57(v56, 1, v15);
  if (!(_DWORD)v11)
  {
    if (!v58)
    {
      v17(v55, v56, v15);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v55, v15);
    goto LABEL_6;
  }
  if (v58)
  {
LABEL_6:
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v55, v56, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v55, 0, 1, v15);
LABEL_7:
  v60 = a3[20];
  a1[a3[19]] = a2[a3[19]];
  *(_DWORD *)&a1[v60] = *(_DWORD *)&a2[v60];
  return a1;
}

uint64_t getEnumTagSinglePayload for TTSVBVoiceModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_248721084(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2487B5228();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = sub_2487B51D4();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[7];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[18];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for TTSVBVoiceModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_248721158(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_2487B5228();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = sub_2487B51D4();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[7];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[18];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_24872121C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_2487B5228();
  if (v0 <= 0x3F)
  {
    sub_2487B51D4();
    if (v1 <= 0x3F)
    {
      sub_248721308();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_248721308()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25445F398)
  {
    sub_2487B51D4();
    v0 = sub_2487B5924();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25445F398);
  }
}

uint64_t getEnumTagSinglePayload for TTSVBVoiceModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF0)
    goto LABEL_17;
  if (a2 + 16 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 16) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 16;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 16;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 16;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x11;
  v8 = v6 - 17;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TTSVBVoiceModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 16 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 16) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEF)
    return ((uint64_t (*)(void))((char *)&loc_248721438 + 4 * byte_2487BDB27[v4]))();
  *a1 = a2 + 16;
  return ((uint64_t (*)(void))((char *)sub_24872146C + 4 * byte_2487BDB22[v4]))();
}

uint64_t sub_24872146C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248721474(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24872147CLL);
  return result;
}

uint64_t sub_248721488(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248721490);
  *(_BYTE *)result = a2 + 16;
  return result;
}

uint64_t sub_248721494(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24872149C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTSVBVoiceModel.CodingKeys()
{
  return &type metadata for TTSVBVoiceModel.CodingKeys;
}

unint64_t sub_2487214B8()
{
  unint64_t result;

  result = qword_25777CB00;
  if (!qword_25777CB00)
  {
    result = MEMORY[0x24959AEB4](&protocol conformance descriptor for TTSVBVoiceModelFlags, &type metadata for TTSVBVoiceModelFlags);
    atomic_store(result, (unint64_t *)&qword_25777CB00);
  }
  return result;
}

float sub_248721548()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_spl;
  swift_beginAccess();
  return *(float *)v1;
}

uint64_t sub_2487215DC(float a1)
{
  uint64_t v1;
  float *v3;
  uint64_t result;

  v3 = (float *)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_spl);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

void sub_24872162C(_QWORD **a1@<X0>, float *a2@<X8>)
{
  *a2 = (*(float (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0xA0))();
}

uint64_t sub_24872166C(float *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(float))((*MEMORY[0x24BEE4EA0] & **a2) + 0xA8))(*a1);
}

uint64_t (*sub_2487216A8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float sub_248721730()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_splEnd;
  swift_beginAccess();
  return *(float *)v1;
}

uint64_t sub_2487217C4(float a1)
{
  uint64_t v1;
  float *v3;
  uint64_t result;

  v3 = (float *)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_splEnd);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

void sub_248721814(_QWORD **a1@<X0>, float *a2@<X8>)
{
  *a2 = (*(float (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0xB8))();
}

uint64_t sub_248721854(float *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(float))((*MEMORY[0x24BEE4EA0] & **a2) + 0xC0))(*a1);
}

uint64_t (*sub_248721890())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float sub_248721918()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_splUnnormalized;
  swift_beginAccess();
  return *(float *)v1;
}

uint64_t sub_2487219AC(float a1)
{
  uint64_t v1;
  float *v3;
  uint64_t result;

  v3 = (float *)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_splUnnormalized);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

void sub_2487219FC(_QWORD **a1@<X0>, float *a2@<X8>)
{
  *a2 = (*(float (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0xD0))();
}

uint64_t sub_248721A3C(float *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(float))((*MEMORY[0x24BEE4EA0] & **a2) + 0xD8))(*a1);
}

uint64_t (*sub_248721A78())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float sub_248721B00()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_splEndUnnormalized;
  swift_beginAccess();
  return *(float *)v1;
}

uint64_t sub_248721B94(float a1)
{
  uint64_t v1;
  float *v3;
  uint64_t result;

  v3 = (float *)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_splEndUnnormalized);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

void sub_248721BE4(_QWORD **a1@<X0>, float *a2@<X8>)
{
  *a2 = (*(float (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0xE8))();
}

uint64_t sub_248721C24(float *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(float))((*MEMORY[0x24BEE4EA0] & **a2) + 0xF0))(*a1);
}

uint64_t (*sub_248721C60())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float sub_248721CE8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_splThreshold;
  swift_beginAccess();
  return *(float *)v1;
}

uint64_t sub_248721D7C(float a1)
{
  uint64_t v1;
  float *v3;
  uint64_t result;

  v3 = (float *)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_splThreshold);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

void sub_248721DCC(_QWORD **a1@<X0>, float *a2@<X8>)
{
  *a2 = (*(float (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x100))();
}

uint64_t sub_248721E0C(float *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(float))((*MEMORY[0x24BEE4EA0] & **a2) + 0x108))(*a1);
}

uint64_t (*sub_248721E48())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float sub_248721ED0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_snr;
  swift_beginAccess();
  return *(float *)v1;
}

uint64_t sub_248721F64(float a1)
{
  uint64_t v1;
  float *v3;
  uint64_t result;

  v3 = (float *)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_snr);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

void sub_248721FB4(_QWORD **a1@<X0>, float *a2@<X8>)
{
  *a2 = (*(float (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x118))();
}

uint64_t sub_248721FF4(float *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(float))((*MEMORY[0x24BEE4EA0] & **a2) + 0x120))(*a1);
}

uint64_t (*sub_248722030())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float sub_2487220B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_snrEnd;
  swift_beginAccess();
  return *(float *)v1;
}

uint64_t sub_24872214C(float a1)
{
  uint64_t v1;
  float *v3;
  uint64_t result;

  v3 = (float *)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_snrEnd);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

void sub_24872219C(_QWORD **a1@<X0>, float *a2@<X8>)
{
  *a2 = (*(float (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x130))();
}

uint64_t sub_2487221DC(float *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(float))((*MEMORY[0x24BEE4EA0] & **a2) + 0x138))(*a1);
}

uint64_t (*sub_248722218())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float sub_2487222A0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_snrUnnormalized;
  swift_beginAccess();
  return *(float *)v1;
}

uint64_t sub_248722334(float a1)
{
  uint64_t v1;
  float *v3;
  uint64_t result;

  v3 = (float *)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_snrUnnormalized);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

void sub_248722384(_QWORD **a1@<X0>, float *a2@<X8>)
{
  *a2 = (*(float (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x148))();
}

uint64_t sub_2487223C4(float *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(float))((*MEMORY[0x24BEE4EA0] & **a2) + 0x150))(*a1);
}

uint64_t (*sub_248722400())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float sub_248722488()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_snrEndUnnormalized;
  swift_beginAccess();
  return *(float *)v1;
}

uint64_t sub_24872251C(float a1)
{
  uint64_t v1;
  float *v3;
  uint64_t result;

  v3 = (float *)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_snrEndUnnormalized);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

void sub_24872256C(_QWORD **a1@<X0>, float *a2@<X8>)
{
  *a2 = (*(float (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x160))();
}

uint64_t sub_2487225AC(float *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(float))((*MEMORY[0x24BEE4EA0] & **a2) + 0x168))(*a1);
}

uint64_t (*sub_2487225E8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float sub_248722670()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_snrThreshold;
  swift_beginAccess();
  return *(float *)v1;
}

uint64_t sub_248722704(float a1)
{
  uint64_t v1;
  float *v3;
  uint64_t result;

  v3 = (float *)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_snrThreshold);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

void sub_248722754(_QWORD **a1@<X0>, float *a2@<X8>)
{
  *a2 = (*(float (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x178))();
}

uint64_t sub_248722794(float *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(float))((*MEMORY[0x24BEE4EA0] & **a2) + 0x180))(*a1);
}

uint64_t (*sub_2487227D0())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id TTSVBAudioQualityMeasurement.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id TTSVBAudioQualityMeasurement.init()()
{
  char *v0;
  objc_super v2;

  *(_DWORD *)&v0[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_spl] = 0;
  *(_DWORD *)&v0[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_splEnd] = 0;
  *(_DWORD *)&v0[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_splUnnormalized] = 0;
  *(_DWORD *)&v0[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_splEndUnnormalized] = 0;
  *(_DWORD *)&v0[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_splThreshold] = 0;
  *(_DWORD *)&v0[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_snr] = 0;
  *(_DWORD *)&v0[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_snrEnd] = 0;
  *(_DWORD *)&v0[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_snrUnnormalized] = 0;
  *(_DWORD *)&v0[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_snrEndUnnormalized] = 0;
  *(_DWORD *)&v0[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport28TTSVBAudioQualityMeasurement_snrThreshold] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTSVBAudioQualityMeasurement();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for TTSVBAudioQualityMeasurement()
{
  return objc_opt_self();
}

uint64_t sub_248722970()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_2487B5AA4();
  v1 = sub_2487B55AC();
  v2 = (_QWORD *)MEMORY[0x24BEE4EA0];
  (*(void (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))(v1);
  sub_2487B572C();
  v3 = sub_2487B55AC();
  (*(void (**)(uint64_t))((*v2 & *v0) + 0xB8))(v3);
  sub_2487B572C();
  v4 = sub_2487B55AC();
  (*(void (**)(uint64_t))((*v2 & *v0) + 0xD0))(v4);
  sub_2487B572C();
  v5 = sub_2487B55AC();
  (*(void (**)(uint64_t))((*v2 & *v0) + 0xE8))(v5);
  sub_2487B572C();
  v6 = sub_2487B55AC();
  (*(void (**)(uint64_t))((*v2 & *v0) + 0x100))(v6);
  sub_2487B572C();
  v7 = sub_2487B55AC();
  (*(void (**)(uint64_t))((*v2 & *v0) + 0x118))(v7);
  sub_2487B572C();
  v8 = sub_2487B55AC();
  (*(void (**)(uint64_t))((*v2 & *v0) + 0x130))(v8);
  sub_2487B572C();
  v9 = sub_2487B55AC();
  (*(void (**)(uint64_t))((*v2 & *v0) + 0x148))(v9);
  sub_2487B572C();
  v10 = sub_2487B55AC();
  (*(void (**)(uint64_t))((*v2 & *v0) + 0x160))(v10);
  sub_2487B572C();
  v11 = sub_2487B55AC();
  (*(void (**)(uint64_t))((*v2 & *v0) + 0x178))(v11);
  sub_2487B572C();
  sub_2487B55AC();
  return 0;
}

id TTSVBAudioQualityMeasurement.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTSVBAudioQualityMeasurement();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for TTSVBAudioQualityMeasurement()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.spl.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.spl.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.spl.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.splEnd.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.splEnd.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.splEnd.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.splUnnormalized.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.splUnnormalized.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.splUnnormalized.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.splEndUnnormalized.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.splEndUnnormalized.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.splEndUnnormalized.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.splThreshold.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.splThreshold.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.splThreshold.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x110))();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.snr.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x118))();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.snr.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x120))();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.snr.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x128))();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.snrEnd.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x130))();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.snrEnd.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x138))();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.snrEnd.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x140))();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.snrUnnormalized.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x148))();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.snrUnnormalized.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x150))();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.snrUnnormalized.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x158))();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.snrEndUnnormalized.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x160))();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.snrEndUnnormalized.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x168))();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.snrEndUnnormalized.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x170))();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.snrThreshold.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x178))();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.snrThreshold.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x180))();
}

uint64_t dispatch thunk of TTSVBAudioQualityMeasurement.snrThreshold.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x188))();
}

uint64_t TTSVBTCCCloudKitAccess.rawValue.getter(char a1)
{
  return *(_QWORD *)&aUnset_1[8 * a1];
}

uint64_t sub_248723064(char *a1, char *a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = TTSVBTCCCloudKitAccess.rawValue.getter(*a1);
  v5 = v4;
  if (v3 == TTSVBTCCCloudKitAccess.rawValue.getter(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_2487B5CE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2487230EC()
{
  char *v0;
  char v1;

  v1 = *v0;
  sub_2487B5D5C();
  TTSVBTCCCloudKitAccess.rawValue.getter(v1);
  sub_2487B557C();
  swift_bridgeObjectRelease();
  return sub_2487B5D98();
}

uint64_t sub_24872314C()
{
  char *v0;

  TTSVBTCCCloudKitAccess.rawValue.getter(*v0);
  sub_2487B557C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24872318C()
{
  char *v0;
  char v1;

  v1 = *v0;
  sub_2487B5D5C();
  TTSVBTCCCloudKitAccess.rawValue.getter(v1);
  sub_2487B557C();
  swift_bridgeObjectRelease();
  return sub_2487B5D98();
}

uint64_t sub_2487231E8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s31TextToSpeechVoiceBankingSupport22TTSVBTCCCloudKitAccessO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_248723214@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = TTSVBTCCCloudKitAccess.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

BOOL static TTSVBAccessManager.Event.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t TTSVBAccessManager.Event.hash(into:)()
{
  return sub_2487B5D68();
}

uint64_t TTSVBAccessManager.Event.hashValue.getter()
{
  sub_2487B5D5C();
  sub_2487B5D68();
  return sub_2487B5D98();
}

uint64_t sub_2487232B4@<X0>(_QWORD **a1@<X0>, uint64_t (**a2)(unsigned __int8 *a1)@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(unsigned __int8 *);

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x88))();
  if (result)
  {
    v5 = result;
    v6 = v4;
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v5;
    *(_QWORD *)(result + 24) = v6;
    v7 = sub_248727328;
  }
  else
  {
    v7 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(unsigned __int8 *))result;
  return result;
}

uint64_t sub_248723330(uint64_t *a1, _QWORD **a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char);
  uint64_t (*v7)(uint64_t (*)(char), uint64_t);

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_2487272F4;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(uint64_t (**)(uint64_t (*)(char), uint64_t))((*MEMORY[0x24BEE4EA0] & **a2) + 0x90);
  sub_24872697C(v3);
  return v7(v6, v5);
}

uint64_t sub_2487233C8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport18TTSVBAccessManager_eventHandler);
  swift_beginAccess();
  v2 = *v1;
  sub_24872697C(*v1);
  return v2;
}

uint64_t sub_248723420(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport18TTSVBAccessManager_eventHandler);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return sub_24872698C(v6);
}

uint64_t (*sub_24872347C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id TTSVBAccessManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id TTSVBAccessManager.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  char *v11;
  char *v12;
  uint64_t v13;
  objc_class *v14;
  _QWORD v16[4];
  char *v17;
  uint64_t v18;
  uint64_t v19;
  objc_super v20;
  uint64_t v21;

  v19 = sub_2487B5828();
  v1 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2487B5804();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v4);
  v6 = sub_2487B5408();
  MEMORY[0x24BDAC7A8](v6);
  v7 = &v0[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport18TTSVBAccessManager_eventHandler];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v17 = v0;
  v18 = OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport18TTSVBAccessManager_calloutQueue;
  sub_24870A34C(0, (unint64_t *)&qword_25445F6C0);
  v8 = v0;
  sub_2487B53F0();
  v21 = MEMORY[0x24BEE4AF8];
  v16[2] = sub_2486F4CA0((unint64_t *)&unk_25445F6B0, v5, MEMORY[0x24BEE5698]);
  v16[1] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F360);
  v16[3] = sub_2486F4954((unint64_t *)&unk_25445F6A0, (uint64_t *)&unk_25445F360);
  sub_2487B59FC();
  v9 = *MEMORY[0x24BEE5750];
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v11 = v3;
  v12 = v3;
  v13 = v19;
  v10(v12, v9, v19);
  *(_QWORD *)&v17[v18] = sub_2487B584C();
  v18 = OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport18TTSVBAccessManager_operationQueue;
  sub_2487B53F0();
  v21 = MEMORY[0x24BEE4AF8];
  sub_2487B59FC();
  v10(v11, v9, v13);
  *(_QWORD *)&v8[v18] = sub_2487B584C();
  *(_DWORD *)&v8[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport18TTSVBAccessManager_tccNotifyToken] = 0;
  v8[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport18TTSVBAccessManager_isMonitoringAccountChanges] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport18TTSVBAccessManager____lazy_storage___accountStore] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport18TTSVBAccessManager_currentChallengeContext] = 0;

  v14 = (objc_class *)type metadata accessor for TTSVBAccessManager();
  v20.receiver = v8;
  v20.super_class = v14;
  return objc_msgSendSuper2(&v20, sel_init);
}

id TTSVBAccessManager.__deallocating_deinit()
{
  char *v0;
  int *v1;
  objc_super v3;

  v1 = (int *)&v0[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport18TTSVBAccessManager_tccNotifyToken];
  swift_beginAccess();
  if (*v1)
  {
    notify_cancel(*v1);
    *v1 = 0;
  }
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for TTSVBAccessManager();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

id sub_248723948()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport18TTSVBAccessManager____lazy_storage___accountStore;
  v2 = *(void **)&v0[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport18TTSVBAccessManager____lazy_storage___accountStore];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport18TTSVBAccessManager____lazy_storage___accountStore];
  }
  else
  {
    v4 = sub_2487239A8(v0);
    v5 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_2487239A8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t inited;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = sub_2487B533C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1A8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2487B72B0;
  *(_QWORD *)(inited + 32) = sub_2487B5528();
  *(_QWORD *)(inited + 40) = v7;
  sub_248727154(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  v8 = objc_allocWithZone(MEMORY[0x24BDB43D0]);
  v9 = a1;
  v10 = (void *)sub_2487B5738();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v8, sel_initWithAccountTypes_delegate_, v10, v9);

  v12 = sub_2487B0DB0();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v12, v2);
  v13 = v11;
  v14 = sub_2487B5324();
  v15 = sub_2487B57E0();
  if (os_log_type_enabled(v14, v15))
  {
    v26 = v2;
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v25 = v3;
    v18 = v17;
    v28 = v17;
    *(_DWORD *)v16 = 136315138;
    v24[1] = v16 + 4;
    v19 = objc_msgSend(v13, sel_debugDescription);
    v20 = sub_2487B5528();
    v22 = v21;

    v27 = sub_2486EDE5C(v20, v22, &v28);
    sub_2487B593C();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2486E6000, v14, v15, "Creating account store. %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v18, -1, -1);
    MEMORY[0x24959AF80](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v26);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v13;
}

uint64_t sub_248723C70()
{
  return sub_248723C94();
}

uint64_t sub_248723C7C()
{
  return sub_248723C94();
}

uint64_t sub_248723C88()
{
  return sub_248723C94();
}

uint64_t sub_248723C94()
{
  unsigned __int8 v1;

  sub_2487B5834();
  return v1;
}

uint64_t sub_248723CEC()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25777C920);
  sub_2487B5834();
  return v1;
}

uint64_t sub_248723D54(char a1, int a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t result;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  int v37;
  int v38;
  uint64_t v39;
  _QWORD *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  _BYTE v52[4];
  _BOOL4 v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  void *v57;
  int v58;
  uint64_t v59;
  uint64_t v60;

  v58 = a2;
  v4 = sub_2487B533C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v52[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = &v52[-v10];
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = &v52[-v13];
  MEMORY[0x24BDAC7A8](v12);
  v16 = &v52[-v15];
  if (a1 == 1)
  {
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v18 = sub_2487B5CE4();
    result = swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
      goto LABEL_17;
  }
  v19 = (_QWORD *)MEMORY[0x24BEE4EA0];
  if (((*(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v2) + 0xE8))(result) & 1) == 0)
  {
    v24 = sub_2487B0DB0();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v16, v24, v4);
    v25 = sub_2487B5324();
    v26 = sub_2487B57D4();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_2486E6000, v25, v26, "Cannot set CloudKit access to 'allowed', isCloudSyncAvailable=false", v27, 2u);
      MEMORY[0x24959AF80](v27, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v16, v4);
    return 0;
  }
  if (((*(uint64_t (**)(void))((*v19 & *v2) + 0xF0))() & 1) != 0)
  {
    v20 = sub_2487B0DB0();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v14, v20, v4);
    v21 = sub_2487B5324();
    v22 = sub_2487B57D4();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_2486E6000, v21, v22, "Cannot set CloudKit access to 'allowed', iCloudAccountIsBeneficiaryAccount=true", v23, 2u);
      MEMORY[0x24959AF80](v23, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v14, v4);
    return 0;
  }
  result = (*(uint64_t (**)(void))((*v19 & *v2) + 0xF8))();
  if ((result & 1) != 0)
  {
    v29 = sub_2487B0DB0();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v11, v29, v4);
    v30 = sub_2487B5324();
    v31 = sub_2487B57D4();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_2486E6000, v30, v31, "Cannot set CloudKit access to 'allowed', iCloudAccountIsManagedAppleAccount=true", v32, 2u);
      MEMORY[0x24959AF80](v32, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v11, v4);
    return 0;
  }
LABEL_17:
  if (*MEMORY[0x24BEB38B0])
  {
    v33 = (id)*MEMORY[0x24BEB38B0];
    v34 = v33;
    if (a1)
    {
      v33;
      sub_248728F40();
      swift_bridgeObjectRetain();
      v35 = (void *)sub_2487B5504();
      swift_bridgeObjectRelease();
      v37 = TCCAccessSetForBundleId();
    }
    else
    {
      v36 = v33;
      sub_248728F40();
      swift_bridgeObjectRetain();
      v35 = (void *)sub_2487B5504();
      swift_bridgeObjectRelease();
      v37 = TCCAccessResetForBundleId();
    }
    v38 = v37;

    v39 = sub_2487B0DB0();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v8, v39, v4);
    v40 = v2;
    v41 = sub_2487B5324();
    v42 = sub_2487B57E0();
    if (os_log_type_enabled(v41, v42))
    {
      v53 = v38 != 0;
      v43 = swift_slowAlloc();
      v55 = v5;
      v44 = v43;
      v45 = swift_slowAlloc();
      v56 = v38;
      v46 = v45;
      v60 = v45;
      v47 = a1;
      v48 = *(_QWORD *)&aUnset_1[v47 * 8];
      *(_DWORD *)v44 = 136315650;
      v59 = sub_2486EDE5C(v48, qword_2487BE138[v47], &v60);
      v54 = v4;
      v57 = v34;
      sub_2487B593C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 12) = 1024;
      LODWORD(v59) = v53;
      v49 = sub_2487B593C();
      *(_WORD *)(v44 + 18) = 2080;
      v50 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v40) + 0x110))(v49);
      v59 = sub_2486EDE5C(*(_QWORD *)&aUnset_1[8 * v50], qword_2487BE138[v50], &v60);
      v34 = v57;
      sub_2487B593C();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2486E6000, v41, v42, "Did attempt changing cloud access to '%s' result=%{BOOL}d. ValueAfterSetting=%s", (uint8_t *)v44, 0x1Cu);
      swift_arrayDestroy();
      v51 = v46;
      LODWORD(v46) = v56;
      MEMORY[0x24959AF80](v51, -1, -1);
      MEMORY[0x24959AF80](v44, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v55 + 8))(v8, v54);
      if (!(_DWORD)v46)
      {
LABEL_23:

        return 0;
      }
    }
    else
    {

      (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
      if (!v38)
        goto LABEL_23;
    }
    if ((v58 & 1) != 0)
    {
      v28 = 1;
      static TTSVBPreferences.hasUserMadeiCloudOptInChoice.setter(1);

    }
    else
    {

      return 1;
    }
    return v28;
  }
  __break(1u);
  return result;
}

void sub_248724400()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;

  if (!*MEMORY[0x24BEB38B0])
  {
    __break(1u);
    goto LABEL_37;
  }
  v0 = (id)*MEMORY[0x24BEB38B0];
  v27 = sub_2487B5528();
  v2 = v1;

  if (!*MEMORY[0x24BEB3828])
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v26 = v2;
  v3 = (id)*MEMORY[0x24BEB3828];
  v4 = sub_2487B5528();
  v6 = v5;

  if (!*MEMORY[0x24BEB3818])
  {
LABEL_38:
    __break(1u);
    return;
  }
  v7 = (id)*MEMORY[0x24BEB3818];
  v8 = sub_2487B5528();
  v10 = v9;

  sub_248728F40();
  swift_bridgeObjectRetain();
  v11 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v12 = (void *)TCCAccessCopyInformationForBundleId();

  if (v12)
  {
    *(_QWORD *)&v30 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25445F120);
    sub_2487B5678();

  }
  swift_bridgeObjectRelease();
  v19 = MEMORY[0x24BEE4AF8];
  v20 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
  if (!v20)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_24:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  v23 = v8;
  v24 = v10;
  swift_bridgeObjectRetain();
  v13 = 0;
  v14 = v26;
  v25 = v19;
  while (1)
  {
    v15 = *(_QWORD *)(v19 + 8 * v13 + 32);
    if (*(_QWORD *)(v15 + 16))
      break;
    v30 = 0u;
    v31 = 0u;
    swift_bridgeObjectRetain();
LABEL_8:
    sub_2486F5008((uint64_t)&v30, (uint64_t *)&unk_25777CBD0);
LABEL_9:
    swift_bridgeObjectRelease();
LABEL_10:
    if (v20 == ++v13)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = sub_248709700(v4, v6);
  if ((v17 & 1) != 0)
  {
    sub_2486F0814(*(_QWORD *)(v15 + 56) + 32 * v16, (uint64_t)&v30);
  }
  else
  {
    v30 = 0u;
    v31 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v31 + 1))
    goto LABEL_8;
  if (!swift_dynamicCast())
    goto LABEL_9;
  if (v28 == (id)v27 && v29 == v14)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  v18 = sub_2487B5CE4();
  swift_bridgeObjectRelease();
  if ((v18 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    v19 = v25;
    v14 = v26;
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_27:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v15 + 16) && (v21 = sub_248709700(v23, v24), (v22 & 1) != 0))
  {
    sub_2486F0814(*(_QWORD *)(v15 + 56) + 32 * v21, (uint64_t)&v30);
  }
  else
  {
    v30 = 0u;
    v31 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v31 + 1))
  {
    sub_24870A34C(0, &qword_25445F178);
    if ((swift_dynamicCast() & 1) != 0)
    {
      objc_msgSend(v28, sel_BOOLValue);

    }
  }
  else
  {
    sub_2486F5008((uint64_t)&v30, (uint64_t *)&unk_25777CBD0);
  }
}

uint64_t sub_2487247FC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  char *v23;
  uint8_t *v24;
  uint8_t *v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  char *v44;
  uint8_t *v45;
  uint8_t *v46;
  uint64_t v47;
  char *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  char v56;
  uint64_t result;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73[3];
  unsigned __int8 v74;

  v1 = v0;
  v2 = sub_2487B533C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v68 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v69 = (char *)&v65 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v65 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v65 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v65 - v15;
  v17 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v18 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v0) + 0x110))(v14);
  v19 = v18;
  v71 = v18;
  v74 = v18;
  LODWORD(v70) = static TTSVBPreferences.hasUserMadeiCloudOptInChoice.getter();
  if ((AXDeviceSupportsVoiceBankingSpeech() & 1) == 0 && (AXDeviceSupportsVoiceBankingTraining() & 1) == 0)
  {
    v20 = sub_2487B0EEC();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v16, v20, v2);
    v21 = sub_2487B5324();
    v22 = sub_2487B57E0();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = v10;
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_2486E6000, v21, v22, "VoiceBanking speaking and training not supported on this platform. Forcing icloud tcc to denied.", v24, 2u);
      v25 = v24;
      v10 = v23;
      MEMORY[0x24959AF80](v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v16, v2);
    v19 = 2;
    v74 = 2;
  }
  v26 = v71;
  if ((_BYTE)v71)
  {
    v27 = sub_2487B5CE4();
    v28 = swift_bridgeObjectRelease();
    if ((v27 & 1) == 0 && ((v70 ^ 1) & 1) == 0)
      goto LABEL_15;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v29 = sub_2487B0EEC();
  v30 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v13, v29, v2);
  v31 = sub_2487B5324();
  v32 = sub_2487B57E0();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = swift_slowAlloc();
    v34 = swift_slowAlloc();
    v67 = v10;
    v35 = v34;
    v73[0] = v34;
    *(_DWORD *)v33 = 136315394;
    v36 = (char)v71;
    v37 = *(_QWORD *)&aUnset_1[v36 * 8];
    v38 = qword_2487BE138[v36];
    v66 = v30;
    v72 = sub_2486EDE5C(v37, v38, v73);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 1024;
    LODWORD(v72) = v70 & 1;
    sub_2487B593C();
    _os_log_impl(&dword_2486E6000, v31, v32, "iCloud TCC access is set to '%s' hasUserMadeiCloudOptInChoice=%{BOOL}d. Forcing it to denied until user approves", (uint8_t *)v33, 0x12u);
    swift_arrayDestroy();
    v39 = v35;
    v10 = v67;
    MEMORY[0x24959AF80](v39, -1, -1);
    v40 = v33;
    v26 = v71;
    MEMORY[0x24959AF80](v40, -1, -1);

    v28 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v66, v2);
  }
  else
  {

    v28 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v13, v2);
  }
  v19 = 2;
  v74 = 2;
LABEL_15:
  if (((*(uint64_t (**)(uint64_t))((*v17 & *v1) + 0xF0))(v28) & 1) != 0)
  {
    v41 = sub_2487B0EEC();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v10, v41, v2);
    v42 = sub_2487B5324();
    v43 = sub_2487B57E0();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = v10;
      v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v45 = 0;
      _os_log_impl(&dword_2486E6000, v42, v43, "iCloud account is beneficiary. Forcing icloud tcc to denied", v45, 2u);
      v46 = v45;
      v10 = v44;
      MEMORY[0x24959AF80](v46, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    v19 = 2;
    v74 = 2;
  }
  if (((*(uint64_t (**)(void))((*v17 & *v1) + 0xF8))() & 1) != 0)
  {
    v47 = sub_2487B0EEC();
    v48 = v69;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v69, v47, v2);
    v49 = sub_2487B5324();
    v50 = sub_2487B57E0();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v51 = 0;
      _os_log_impl(&dword_2486E6000, v49, v50, "iCloud account is a Managed-ID account. Forcing icloud tcc to denied", v51, 2u);
      MEMORY[0x24959AF80](v51, -1, -1);
    }
    v52 = 0x6465696E6564;

    (*(void (**)(char *, uint64_t))(v3 + 8))(v48, v2);
    v19 = 2;
    v74 = 2;
    v53 = 0xE600000000000000;
  }
  else
  {
    v54 = v19;
    v52 = *(_QWORD *)&aUnset_1[v54 * 8];
    v53 = qword_2487BE138[v54];
  }
  if (v52 == *(_QWORD *)&aUnset_1[8 * v26] && v53 == qword_2487BE138[v26])
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v56 = sub_2487B5CE4();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v56 & 1) == 0)
    {
      v58 = sub_2487B0EEC();
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v68, v58, v2);
      v59 = sub_2487B5324();
      v60 = sub_2487B57E0();
      if (os_log_type_enabled(v59, v60))
      {
        v61 = swift_slowAlloc();
        v71 = v3;
        v62 = v61;
        v63 = swift_slowAlloc();
        v70 = v2;
        v64 = v63;
        v73[0] = v63;
        *(_DWORD *)v62 = 136315650;
        v72 = sub_2486EDE5C(0xD000000000000029, 0x80000002487C4F90, v73);
        sub_2487B593C();
        *(_WORD *)(v62 + 12) = 2080;
        v72 = sub_2486EDE5C(*(_QWORD *)&aUnset_1[8 * v26], qword_2487BE138[v26], v73);
        sub_2487B593C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v62 + 22) = 2080;
        v72 = sub_2486EDE5C(*(_QWORD *)&aUnset_1[8 * v19], qword_2487BE138[v19], v73);
        v17 = (_QWORD *)MEMORY[0x24BEE4EA0];
        sub_2487B593C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2486E6000, v59, v60, "%s current=%s target=%s", (uint8_t *)v62, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x24959AF80](v64, -1, -1);
        MEMORY[0x24959AF80](v62, -1, -1);

        (*(void (**)(char *, uint64_t))(v71 + 8))(v68, v70);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v3 + 8))(v68, v2);
      }
      swift_beginAccess();
      return (*(uint64_t (**)(_QWORD, _QWORD))((*v17 & *v1) + 0x108))(v74, 0);
    }
  }
  return result;
}

uint64_t sub_248725034(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  void *v15;
  char *v16;
  _QWORD v18[2];
  _QWORD aBlock[6];

  v5 = sub_2487B53D8();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2487B5408();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(_QWORD *)&v2[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport18TTSVBAccessManager_operationQueue];
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v2;
  v14[3] = a1;
  v14[4] = a2;
  aBlock[4] = sub_248726BE8;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F1008;
  aBlock[3] = &block_descriptor_0;
  v15 = _Block_copy(aBlock);
  v16 = v2;
  swift_retain();
  sub_2487B53E4();
  v18[1] = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F670, v6, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
  sub_2486F4954((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680);
  sub_2487B59FC();
  MEMORY[0x24959A1AC](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t sub_24872522C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint8_t *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  NSObject *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char *v49;
  char *v50;
  void *v51;
  _QWORD *v52;
  uint64_t v53;
  void *v54;
  id v55;
  char *v56;
  char *v57;
  _QWORD v58[2];
  uint8_t *v59;
  uint64_t v60;
  int v61;
  void *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t aBlock;
  uint64_t v72;
  void *v73;
  void *v74;
  void *v75;
  _QWORD *v76;

  v66 = a3;
  v67 = a4;
  v6 = sub_2487B53D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2487B5408();
  v69 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v68 = (char *)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2487B533C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v58 - v17;
  swift_beginAccess();
  result = MEMORY[0x24959B01C](a2 + 16);
  if (result)
  {
    v64 = v9;
    v65 = v7;
    if (a1)
    {
      v62 = (void *)result;
      v63 = v10;
      v20 = a1;
      v21 = sub_2487B0DB0();
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v21, v12);
      v22 = a1;
      v23 = a1;
      v24 = sub_2487B5324();
      v25 = sub_2487B57D4();
      v26 = v25;
      if (os_log_type_enabled(v24, v25))
      {
        v61 = v26;
        v27 = (uint8_t *)swift_slowAlloc();
        v60 = swift_slowAlloc();
        aBlock = v60;
        v59 = v27;
        *(_DWORD *)v27 = 136315138;
        v58[1] = v27 + 4;
        v28 = (void *)sub_2487B4F58();
        v29 = objc_msgSend(v28, sel_debugDescription);

        v30 = sub_2487B5528();
        v31 = v6;
        v33 = v32;

        v70 = sub_2486EDE5C(v30, v33, &aBlock);
        sub_2487B593C();
        v6 = v31;
        swift_bridgeObjectRelease();

        v34 = v59;
        _os_log_impl(&dword_2486E6000, v24, (os_log_type_t)v61, "Error occurred registering for store changes: %s", v59, 0xCu);
        v35 = v60;
        swift_arrayDestroy();
        MEMORY[0x24959AF80](v35, -1, -1);
        MEMORY[0x24959AF80](v34, -1, -1);
      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
      v51 = v62;
      v52 = (_QWORD *)swift_allocObject();
      v53 = v67;
      v52[2] = v66;
      v52[3] = v53;
      v52[4] = a1;
      v75 = sub_2487273E8;
      v76 = v52;
      aBlock = MEMORY[0x24BDAC760];
      v72 = 1107296256;
      v73 = sub_2486F1008;
      v74 = &block_descriptor_61;
      v54 = _Block_copy(&aBlock);
      v55 = a1;
      swift_retain();
      v56 = v68;
      sub_2487B53E4();
      v70 = MEMORY[0x24BEE4AF8];
      sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
      sub_2486F4954((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680);
      v57 = v64;
      sub_2487B59FC();
      MEMORY[0x24959A1AC](0, v56, v57, v54);
      _Block_release(v54);

      (*(void (**)(char *, uint64_t))(v65 + 8))(v57, v6);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v56, v63);

    }
    else
    {
      v36 = (char *)result;
      v37 = sub_2487B0DB0();
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v18, v37, v12);
      v38 = sub_2487B5324();
      v39 = sub_2487B57BC();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v40 = 0;
        _os_log_impl(&dword_2486E6000, v38, v39, "Did register for account store changes", v40, 2u);
        MEMORY[0x24959AF80](v40, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
      v41 = *(NSObject **)&v36[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport18TTSVBAccessManager_operationQueue];
      v42 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v75 = sub_2487273AC;
      v76 = (_QWORD *)v42;
      v43 = MEMORY[0x24BDAC760];
      aBlock = MEMORY[0x24BDAC760];
      v72 = 1107296256;
      v73 = sub_248725E5C;
      v74 = &block_descriptor_49;
      v44 = _Block_copy(&aBlock);
      swift_release();
      v45 = (int *)&v36[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport18TTSVBAccessManager_tccNotifyToken];
      swift_beginAccess();
      notify_register_dispatch("com.apple.tcc.access.changed", v45, v41, v44);
      swift_endAccess();
      _Block_release(v44);
      v46 = swift_allocObject();
      v47 = v67;
      *(_QWORD *)(v46 + 16) = v66;
      *(_QWORD *)(v46 + 24) = v47;
      v75 = sub_2487273B4;
      v76 = (_QWORD *)v46;
      aBlock = v43;
      v72 = 1107296256;
      v73 = sub_2486F1008;
      v74 = &block_descriptor_55;
      v48 = _Block_copy(&aBlock);
      swift_retain();
      v49 = v68;
      sub_2487B53E4();
      v70 = MEMORY[0x24BEE4AF8];
      sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
      sub_2486F4954((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680);
      v50 = v64;
      sub_2487B59FC();
      MEMORY[0x24959A1AC](0, v49, v50, v48);
      _Block_release(v48);
      (*(void (**)(char *, uint64_t))(v65 + 8))(v50, v6);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v49, v10);

    }
    return swift_release();
  }
  return result;
}

uint64_t sub_24872592C(void (*a1)(char *))
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1C8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2487B4F58();
  TTSVBError.init(_:_:_:)(0xD00000000000002CLL, 0x80000002487C5110, 0, 0, v5, (uint64_t)v4);
  swift_storeEnumTagMultiPayload();
  a1(v4);
  return sub_2486F5008((uint64_t)v4, &qword_25445F1C8);
}

void sub_2487259FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  _QWORD *v14;
  void *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t aBlock[10];

  v2 = sub_2487B53D8();
  v38 = *(_QWORD *)(v2 - 8);
  v39 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v37 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2487B5408();
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v34 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2487B533C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2487B0DB0();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  swift_retain_n();
  v11 = sub_2487B5324();
  v12 = sub_2487B57BC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v33 = swift_slowAlloc();
    aBlock[0] = v33;
    *(_DWORD *)v13 = 136315138;
    swift_beginAccess();
    v14 = (_QWORD *)MEMORY[0x24959B01C](a1 + 16);
    if (v14)
    {
      v15 = v14;
      v16 = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v14) + 0x110))();

      v17 = v16;
      v18 = *(_QWORD *)&aUnset_1[v17 * 8];
      v19 = qword_2487BE138[v17];
    }
    else
    {
      v19 = 0xE90000000000003ELL;
      v18 = 0x6E776F6E6B6E753CLL;
    }
    aBlock[6] = sub_2486EDE5C(v18, v19, aBlock);
    sub_2487B593C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2486E6000, v11, v12, "Did get TCC access changed. Voicebanking cloud access = %s", v13, 0xCu);
    v20 = v33;
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v20, -1, -1);
    MEMORY[0x24959AF80](v13, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_beginAccess();
  v21 = (_QWORD *)MEMORY[0x24959B01C](a1 + 16);
  if (v21)
  {
    v22 = v21;
    v23 = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v21) + 0x88))();
    if (v23)
    {
      v25 = v23;
      v26 = v24;
      v27 = swift_allocObject();
      *(_QWORD *)(v27 + 16) = v25;
      *(_QWORD *)(v27 + 24) = v26;
      aBlock[4] = (uint64_t)sub_2487273F4;
      aBlock[5] = v27;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_2486F1008;
      aBlock[3] = (uint64_t)&block_descriptor_67;
      v28 = _Block_copy(aBlock);
      swift_retain();
      v29 = v34;
      sub_2487B53E4();
      v40 = MEMORY[0x24BEE4AF8];
      sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
      sub_2486F4954((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680);
      v30 = v37;
      v31 = v39;
      sub_2487B59FC();
      MEMORY[0x24959A1AC](0, v29, v30, v28);
      _Block_release(v28);
      sub_24872698C(v25);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v30, v31);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v29, v36);

      swift_release();
    }
    else
    {

    }
  }
}

uint64_t sub_248725E5C(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_248725E98(void (*a1)(char *))
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1C8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_storeEnumTagMultiPayload();
  a1(v4);
  return sub_2486F5008((uint64_t)v4, &qword_25445F1C8);
}

uint64_t sub_248725F24(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_24870A34C(0, &qword_25445F180);
    v4 = sub_2487B5684();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_248725FB0()
{
  id result;
  void *v1;
  id v2;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, sel_isPasscodeSet);

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_24872600C()
{
  return TTSVBIsDeviceLocked();
}

void sub_248726020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  _QWORD *v13;
  void *v14;
  char *v15;
  _QWORD v16[6];

  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDA938]), sel_init);
  v8 = OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport18TTSVBAccessManager_currentChallengeContext;
  v9 = *(void **)&v4[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport18TTSVBAccessManager_currentChallengeContext];
  *(_QWORD *)&v4[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport18TTSVBAccessManager_currentChallengeContext] = v7;

  v10 = *(void **)&v4[v8];
  if (v10)
  {
    v11 = v10;
    v12 = (void *)sub_2487B5504();
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = v4;
    v13[3] = a3;
    v13[4] = a4;
    v16[4] = sub_248726D44;
    v16[5] = v13;
    v16[0] = MEMORY[0x24BDAC760];
    v16[1] = 1107296256;
    v16[2] = sub_2487262E4;
    v16[3] = &block_descriptor_6;
    v14 = _Block_copy(v16);
    v15 = v4;
    swift_retain();
    swift_release();
    objc_msgSend(v11, sel_evaluatePolicy_localizedReason_reply_, 2, v12, v14);
    _Block_release(v14);

  }
}

void sub_248726150(char a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  void *v18;
  _QWORD v19[2];
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;

  v8 = type metadata accessor for TTSVBError(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1C8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    swift_storeEnumTagMultiPayload();
    a4(v13);
    sub_2486F5008((uint64_t)v13, &qword_25445F1C8);
LABEL_5:
    v18 = *(void **)(a3 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport18TTSVBAccessManager_currentChallengeContext);
    *(_QWORD *)(a3 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport18TTSVBAccessManager_currentChallengeContext) = 0;

    return;
  }
  if (a2)
  {
    v14 = (void *)sub_2487B4F58();
    sub_2486F8E48((uint64_t)&v21);
    v15 = v21;
    v16 = v22;
    v17 = v23;
    v19[0] = v21;
    v19[1] = v22;
    v20 = v23;
    static TTSVBError.map(_:_:)(v14, (uint64_t)v19, (uint64_t)v10);

    sub_2486F507C(v15, v16, v17);
    sub_2486F4994((uint64_t)v10, (uint64_t)v13);
    swift_storeEnumTagMultiPayload();
    a4(v13);
    sub_2486F5008((uint64_t)v13, &qword_25445F1C8);
    sub_2486F5094((uint64_t)v10);
    goto LABEL_5;
  }
  __break(1u);
}

void sub_2487262E4(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

Swift::Void __swiftcall TTSVBAccessManager.accountWasAdded(_:)(ACAccount a1)
{
  sub_2487263E0(a1.super.isa, "Did get accountWasAdded %s", (uint64_t)&unk_251991AE8, (uint64_t)sub_248726D50, (uint64_t)&block_descriptor_12);
}

Swift::Void __swiftcall TTSVBAccessManager.accountWasModified(_:)(ACAccount a1)
{
  sub_2487263E0(a1.super.isa, "Did get accountWasModified %s", (uint64_t)&unk_251991B38, (uint64_t)sub_248727484, (uint64_t)&block_descriptor_18);
}

uint64_t sub_2487263E0(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  uint8_t *v22;
  uint64_t v23;
  id v24;
  _QWORD *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t aBlock[7];

  v47 = a3;
  v48 = a5;
  v46 = a2;
  v7 = v5;
  v9 = sub_2487B53D8();
  v50 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v53 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2487B5408();
  v51 = *(_QWORD *)(v11 - 8);
  v52 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v49 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2487B533C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_2487B0DB0();
  v54 = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  v18 = a1;
  v19 = sub_2487B5324();
  v20 = sub_2487B57BC();
  v21 = v20;
  if (os_log_type_enabled(v19, v20))
  {
    v44 = v21;
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    aBlock[0] = v23;
    v45 = a4;
    *(_DWORD *)v22 = 136315138;
    v42 = v22;
    v24 = objc_msgSend(v18, sel_description, v22 + 4);
    v43 = v13;
    v25 = v7;
    v26 = v9;
    v27 = v24;
    v28 = sub_2487B5528();
    v30 = v29;

    v9 = v26;
    v7 = v25;
    v55 = sub_2486EDE5C(v28, v30, aBlock);
    a4 = v45;
    sub_2487B593C();

    swift_bridgeObjectRelease();
    v31 = v42;
    _os_log_impl(&dword_2486E6000, v19, (os_log_type_t)v44, v46, v42, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v23, -1, -1);
    MEMORY[0x24959AF80](v31, -1, -1);

    v32 = (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v16, v43);
  }
  else
  {

    v32 = (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v16, v13);
  }
  result = (*(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v7) + 0x88))(v32);
  if (result)
  {
    v35 = result;
    v36 = v34;
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = v35;
    *(_QWORD *)(v37 + 24) = v36;
    aBlock[4] = a4;
    aBlock[5] = v37;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_2486F1008;
    aBlock[3] = v48;
    v38 = _Block_copy(aBlock);
    swift_retain();
    v39 = v49;
    sub_2487B53E4();
    v55 = MEMORY[0x24BEE4AF8];
    sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
    sub_2486F4954((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680);
    v40 = v53;
    sub_2487B59FC();
    MEMORY[0x24959A1AC](0, v39, v40, v38);
    _Block_release(v38);
    sub_24872698C(v35);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v40, v9);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v39, v52);
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall TTSVBAccessManager.accountWasRemoved(_:)(ACAccount a1)
{
  sub_2487263E0(a1.super.isa, "Did get accountWasRemoved %s", (uint64_t)&unk_251991B88, (uint64_t)sub_248727484, (uint64_t)&block_descriptor_24);
}

Swift::Void __swiftcall TTSVBAccessManager.accountCredentialChanged(_:)(ACAccount a1)
{
  sub_2487263E0(a1.super.isa, "Did get accountCredentialChanged %s", (uint64_t)&unk_251991BD8, (uint64_t)sub_248727484, (uint64_t)&block_descriptor_30);
}

uint64_t _s31TextToSpeechVoiceBankingSupport22TTSVBTCCCloudKitAccessO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_2487B5BAC();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_24872697C(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_24872698C(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t type metadata accessor for TTSVBAccessManager()
{
  return objc_opt_self();
}

void sub_2487269BC(unsigned __int8 *a1@<X8>)
{
  id v2;
  unsigned __int8 v3;

  v2 = sub_248723948();
  v3 = objc_msgSend(v2, sel_aa_isUsingiCloud);

  *a1 = v3;
}

void sub_248726A0C(unsigned __int8 *a1@<X8>)
{
  id v2;
  id v3;
  id v4;
  unsigned __int8 v5;

  v2 = sub_248723948();
  v3 = objc_msgSend(v2, sel_aa_primaryAppleAccount);

  if (v3)
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v5 = objc_msgSend(v4, sel_isBeneficiaryForAccount_, v3);

  }
  else
  {
    v5 = 0;
  }
  *a1 = v5;
}

void sub_248726AB8(unsigned __int8 *a1@<X8>)
{
  id v2;
  id v3;
  unsigned __int8 v4;

  v2 = sub_248723948();
  v3 = objc_msgSend(v2, sel_aa_primaryAppleAccount);

  if (v3)
  {
    v4 = objc_msgSend(v3, sel_aa_isManagedAppleID);

  }
  else
  {
    v4 = 0;
  }
  *a1 = v4;
}

void sub_248726B34(uint64_t *a1@<X8>)
{
  id v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = sub_248723948();
  v3 = objc_msgSend(v2, sel_aa_primaryAppleAccount);

  if (v3)
  {
    v4 = objc_msgSend(v3, sel_aa_firstName);
    if (v4)
    {
      v5 = v4;
      v6 = sub_2487B5528();
      v8 = v7;

    }
    else
    {

      v6 = 0;
      v8 = 0;
    }
    *a1 = v6;
    a1[1] = v8;
  }
  else
  {
    *a1 = 0;
    a1[1] = 0;
  }
}

void sub_248726BE8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  _QWORD v8[6];

  v1 = v0[2];
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport18TTSVBAccessManager_isMonitoringAccountChanges) & 1) == 0)
  {
    v3 = v0[3];
    v2 = v0[4];
    *(_BYTE *)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport18TTSVBAccessManager_isMonitoringAccountChanges) = 1;
    v4 = sub_248723948();
    v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v6 = (_QWORD *)swift_allocObject();
    v6[2] = v5;
    v6[3] = v3;
    v6[4] = v2;
    v8[4] = sub_24872739C;
    v8[5] = v6;
    v8[0] = MEMORY[0x24BDAC760];
    v8[1] = 1107296256;
    v8[2] = sub_248725F24;
    v8[3] = &block_descriptor_45;
    v7 = _Block_copy(v8);
    swift_retain();
    swift_release();
    objc_msgSend(v4, sel_registerWithCompletion_, v7);
    _Block_release(v7);

  }
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_248726D44(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_248726150(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(char *))(v2 + 24));
}

uint64_t sub_248726D50()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(0);
}

uint64_t sub_248726D74()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_248726D9C()
{
  unint64_t result;

  result = qword_25777CBE0;
  if (!qword_25777CBE0)
  {
    result = MEMORY[0x24959AEB4](&protocol conformance descriptor for TTSVBTCCCloudKitAccess, &type metadata for TTSVBTCCCloudKitAccess);
    atomic_store(result, (unint64_t *)&qword_25777CBE0);
  }
  return result;
}

unint64_t sub_248726DE4()
{
  unint64_t result;

  result = qword_25777CBE8;
  if (!qword_25777CBE8)
  {
    result = MEMORY[0x24959AEB4](&protocol conformance descriptor for TTSVBAccessManager.Event, &type metadata for TTSVBAccessManager.Event);
    atomic_store(result, (unint64_t *)&qword_25777CBE8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TTSVBTCCCloudKitAccess(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_248726E74 + 4 * byte_2487BDF95[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_248726EA8 + 4 * byte_2487BDF90[v4]))();
}

uint64_t sub_248726EA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248726EB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248726EB8);
  return result;
}

uint64_t sub_248726EC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248726ECCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_248726ED0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248726ED8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTSVBTCCCloudKitAccess()
{
  return &type metadata for TTSVBTCCCloudKitAccess;
}

uint64_t method lookup function for TTSVBAccessManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TTSVBAccessManager.eventHandler.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of TTSVBAccessManager.eventHandler.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of TTSVBAccessManager.eventHandler.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of TTSVBAccessManager.isCloudSyncAvailable.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of TTSVBAccessManager.iCloudAccountIsBeneficiaryAccount.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of TTSVBAccessManager.iCloudAccountIsManagedAppleAccount.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of TTSVBAccessManager.iCloudFirstName.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of TTSVBAccessManager.updateTCCCloudKitAccess(_:userInitiated:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of TTSVBAccessManager.tccCloudKitAccess.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x110))();
}

uint64_t dispatch thunk of TTSVBAccessManager.applyCloudKitAccessForCurrentConditions()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x118))();
}

uint64_t dispatch thunk of TTSVBAccessManager.startMonitoringForAccountChanges(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x120))();
}

uint64_t dispatch thunk of TTSVBAccessManager.hasDevicePasscode.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x128))();
}

uint64_t dispatch thunk of TTSVBAccessManager.isDeviceLocked.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x130))();
}

uint64_t dispatch thunk of TTSVBAccessManager.presentAuthenticationChallenge(localizedReason:_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x150))();
}

uint64_t storeEnumTagSinglePayload for TTSVBAccessManager.Event(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2487270D4 + 4 * byte_2487BDF9F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_248727108 + 4 * byte_2487BDF9A[v4]))();
}

uint64_t sub_248727108(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248727110(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248727118);
  return result;
}

uint64_t sub_248727124(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24872712CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_248727130(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248727138(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTSVBAccessManager.Event()
{
  return &type metadata for TTSVBAccessManager.Event;
}

uint64_t sub_248727154(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25445F190);
    v3 = sub_2487B5A98();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_2487B5D5C();
      swift_bridgeObjectRetain();
      sub_2487B557C();
      result = sub_2487B5D98();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_2487B5CE4(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_2487B5CE4();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_2487272F4(char a1)
{
  uint64_t v1;
  uint64_t (*v2)(char *);
  char v4;

  v2 = *(uint64_t (**)(char *))(v1 + 16);
  v4 = a1 & 1;
  return v2(&v4);
}

uint64_t sub_248727328(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_24872734C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_248727370()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24872739C(uint64_t a1, void *a2)
{
  uint64_t *v2;

  return sub_24872522C(a2, v2[2], v2[3], v2[4]);
}

void sub_2487273AC()
{
  uint64_t v0;

  sub_2487259FC(v0);
}

uint64_t sub_2487273B4()
{
  uint64_t v0;

  return sub_248725E98(*(void (**)(char *))(v0 + 16));
}

uint64_t sub_2487273BC()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2487273E8()
{
  uint64_t v0;

  return sub_24872592C(*(void (**)(char *))(v0 + 16));
}

uint64_t sub_2487273F4()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1);
}

void sub_248727488()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_2487B5504();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
    qword_25445F9A0 = (uint64_t)v2;
  else
    __break(1u);
}

uint64_t *sub_2487274FC()
{
  if (qword_25445F9A8 != -1)
    swift_once();
  return &qword_25445F9A0;
}

id static NSUserDefaults.voicebankingShared.getter()
{
  if (qword_25445F9A8 != -1)
    swift_once();
  return (id)qword_25445F9A0;
}

void sub_24872757C()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_2487B5504();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  qword_25445F9B0 = (uint64_t)v2;
}

uint64_t static NSUserDefaults.voicebankingSandboxedShared.getter()
{
  uint64_t v0;
  id v1;

  if (qword_25445F9B8 != -1)
    swift_once();
  v0 = qword_25445F9B0;
  v1 = (id)qword_25445F9B0;
  return v0;
}

id NSUserDefaults.ttsvb_showInternalAnalysisDuringMicCheck.getter()
{
  return sub_2487285F8();
}

void sub_248727654(void **a1@<X0>, unsigned __int8 *a2@<X8>)
{
  sub_248728678(a1, a2);
}

void sub_248727670(unsigned __int8 *a1, void **a2)
{
  sub_248728704(a1, a2);
}

void NSUserDefaults.ttsvb_showInternalAnalysisDuringMicCheck.setter(char a1)
{
  sub_248728794(a1);
}

void (*NSUserDefaults.ttsvb_showInternalAnalysisDuringMicCheck.modify(uint64_t a1))(uint64_t a1)
{
  void *v1;
  void *v3;
  unsigned __int8 v4;

  *(_QWORD *)a1 = v1;
  swift_bridgeObjectRetain();
  v3 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v1, sel_BOOLForKey_, v3);

  *(_BYTE *)(a1 + 8) = v4;
  return sub_248727730;
}

void sub_248727730(uint64_t a1)
{
  sub_2487288A8(a1);
}

id NSUserDefaults.ttsvb_internalPhraseCountOverride.getter()
{
  void *v0;
  void *v1;
  id v2;

  swift_bridgeObjectRetain();
  v1 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_integerForKey_, v1);

  if (!v2)
    return *(id *)sub_248728F10();
  return v2;
}

void sub_2487277CC(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a1;
  swift_bridgeObjectRetain();
  v4 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_integerForKey_, v4);

  if (!v5)
    v5 = *(id *)sub_248728F10();
  *a2 = v5;
}

void sub_248727854(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  id v4;

  v2 = *a1;
  v3 = *a2;
  swift_bridgeObjectRetain();
  v4 = (id)sub_2487B5504();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setInteger_forKey_, v2, v4);

}

void NSUserDefaults.ttsvb_internalPhraseCountOverride.setter(uint64_t a1)
{
  void *v1;
  id v3;

  swift_bridgeObjectRetain();
  v3 = (id)sub_2487B5504();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setInteger_forKey_, a1, v3);

}

void (*NSUserDefaults.ttsvb_internalPhraseCountOverride.modify(_QWORD *a1))(uint64_t *a1)
{
  void *v1;
  void *v3;
  id v4;

  a1[1] = v1;
  swift_bridgeObjectRetain();
  v3 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v1, sel_integerForKey_, v3);

  if (!v4)
    v4 = *(id *)sub_248728F10();
  *a1 = v4;
  return sub_2487279E4;
}

void sub_2487279E4(uint64_t *a1)
{
  void *v1;
  uint64_t v2;
  id v3;

  v2 = *a1;
  v1 = (void *)a1[1];
  swift_bridgeObjectRetain();
  v3 = (id)sub_2487B5504();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setInteger_forKey_, v2, v3);

}

id NSUserDefaults.ttsvb_bypassOSSchedulingWhileTraining.getter()
{
  return sub_2487285F8();
}

void sub_248727A7C(void **a1@<X0>, unsigned __int8 *a2@<X8>)
{
  sub_248728678(a1, a2);
}

void sub_248727A98(unsigned __int8 *a1, void **a2)
{
  sub_248728704(a1, a2);
}

void NSUserDefaults.ttsvb_bypassOSSchedulingWhileTraining.setter(char a1)
{
  sub_248728794(a1);
}

void (*NSUserDefaults.ttsvb_bypassOSSchedulingWhileTraining.modify(uint64_t a1))(uint64_t a1)
{
  void *v1;
  void *v3;
  unsigned __int8 v4;

  *(_QWORD *)a1 = v1;
  swift_bridgeObjectRetain();
  v3 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v1, sel_BOOLForKey_, v3);

  *(_BYTE *)(a1 + 8) = v4;
  return sub_248727B58;
}

void sub_248727B58(uint64_t a1)
{
  sub_2487288A8(a1);
}

id NSUserDefaults.ttsvb_overrideBuiltInMicPolarPattern.getter()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  id v13;
  char v15;

  swift_bridgeObjectRetain();
  v1 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_stringForKey_, v1);

  if (v2)
  {
    v3 = sub_2487B5528();
    v5 = v4;

    v2 = (id)*MEMORY[0x24BDB1690];
    if (sub_2487B5528() == v3 && v6 == v5)
      goto LABEL_14;
    v8 = sub_2487B5CE4();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
      v2 = (id)*MEMORY[0x24BDB16A0];
      if (sub_2487B5528() == v3 && v9 == v5)
        goto LABEL_14;
      v11 = sub_2487B5CE4();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        v2 = (id)*MEMORY[0x24BDB1698];
        if (sub_2487B5528() == v3 && v12 == v5)
        {
LABEL_14:
          swift_bridgeObjectRelease();
          goto LABEL_15;
        }
        v15 = sub_2487B5CE4();
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0)
        {
          v2 = 0;
          goto LABEL_16;
        }
      }
    }
LABEL_15:
    v13 = v2;
LABEL_16:
    swift_bridgeObjectRelease();
  }
  return v2;
}

id sub_248727D00@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = NSUserDefaults.ttsvb_overrideBuiltInMicPolarPattern.getter();
  *a1 = result;
  return result;
}

void sub_248727D28(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  NSUserDefaults.ttsvb_overrideBuiltInMicPolarPattern.setter(v1);
}

void NSUserDefaults.ttsvb_overrideBuiltInMicPolarPattern.setter(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  char v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD v20[2];

  if (!a1)
    goto LABEL_18;
  v3 = sub_2487B5528();
  v5 = v4;
  v6 = (void *)*MEMORY[0x24BDB1690];
  if (sub_2487B5528() == v3 && v7 == v5)
    goto LABEL_19;
  v9 = sub_2487B5CE4();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    goto LABEL_20;
  v6 = (void *)*MEMORY[0x24BDB16A0];
  if (sub_2487B5528() == v3 && v10 == v5)
    goto LABEL_19;
  v12 = sub_2487B5CE4();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
    goto LABEL_20;
  v6 = (void *)*MEMORY[0x24BDB1698];
  if (sub_2487B5528() == v3 && v13 == v5)
  {
LABEL_19:
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = sub_2487B5CE4();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_18:
      v6 = 0;
LABEL_22:
      v18 = 0;
      goto LABEL_23;
    }
  }
LABEL_20:
  v16 = v6;
  swift_bridgeObjectRelease();
  if (!v6)
    goto LABEL_22;
  v20[0] = sub_2487B5528();
  v20[1] = v17;
  v18 = sub_2487B5CD8();
  sub_248727F28((uint64_t)v20);
LABEL_23:
  swift_bridgeObjectRetain();
  v19 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setObject_forKey_, v18, v19);
  swift_unknownObjectRelease();

}

uint64_t sub_248727F28(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE0D00] - 8) + 8))();
  return a1;
}

void (*NSUserDefaults.ttsvb_overrideBuiltInMicPolarPattern.modify(id *a1))(void **a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = NSUserDefaults.ttsvb_overrideBuiltInMicPolarPattern.getter();
  return sub_248727F90;
}

void sub_248727F90(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    NSUserDefaults.ttsvb_overrideBuiltInMicPolarPattern.setter(v2);

  }
  else
  {
    NSUserDefaults.ttsvb_overrideBuiltInMicPolarPattern.setter(*a1);
  }
}

TextToSpeechVoiceBankingSupport::RecordingMode_optional NSUserDefaults.ttsvb_recordingMode.getter()
{
  void *v0;
  void *v1;
  id v2;

  swift_bridgeObjectRetain();
  v1 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_integerForKey_, v1);

  return RecordingMode.init(rawValue:)((Swift::Int)v2);
}

TextToSpeechVoiceBankingSupport::RecordingMode_optional sub_248728060@<W0>(void **a1@<X0>, _BYTE *a2@<X8>)
{
  void *v3;
  void *v4;
  id v5;
  TextToSpeechVoiceBankingSupport::RecordingMode_optional result;
  char v7;

  v3 = *a1;
  swift_bridgeObjectRetain();
  v4 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_integerForKey_, v4);

  result.value = RecordingMode.init(rawValue:)((Swift::Int)v5).value;
  *a2 = v7;
  return result;
}

void sub_2487280F4(char *a1)
{
  char v1;

  v1 = *a1;
  NSUserDefaults.ttsvb_recordingMode.setter(&v1);
}

void NSUserDefaults.ttsvb_recordingMode.setter(_BYTE *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = v1;
  if (*a1 == 2)
  {
    v3 = 0;
  }
  else
  {
    RecordingMode.rawValue.getter();
    v3 = sub_2487B5CD8();
  }
  swift_bridgeObjectRetain();
  v4 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setObject_forKey_, v3, v4);
  swift_unknownObjectRelease();

}

void (*NSUserDefaults.ttsvb_recordingMode.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  void *v1;
  void *v2;
  id v3;

  *a1 = v1;
  swift_bridgeObjectRetain();
  v2 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_integerForKey_, v2);

  RecordingMode.init(rawValue:)((Swift::Int)v3);
  return sub_248728278;
}

void sub_248728278(uint64_t a1, char a2)
{
  char *v2;
  char v3;
  char v4;

  if ((a2 & 1) != 0)
  {
    v3 = *(_BYTE *)(a1 + 8);
    v2 = &v3;
  }
  else
  {
    v4 = *(_BYTE *)(a1 + 8);
    v2 = &v4;
  }
  NSUserDefaults.ttsvb_recordingMode.setter(v2);
}

BOOL NSUserDefaults.ttsvb_recordingModeExists.getter()
{
  void *v0;
  void *v1;
  id v2;
  _OWORD v4[2];

  swift_bridgeObjectRetain();
  v1 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_objectForKey_, v1);

  if (v2)
  {
    sub_2487B59A8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_248728374((uint64_t)v4);
  return v2 != 0;
}

uint64_t sub_248728374(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25777CBD0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id NSUserDefaults.ttsvb_hasUserMadeiCloudOptInChoice.getter()
{
  return sub_2487285F8();
}

void sub_2487283D0(void **a1@<X0>, unsigned __int8 *a2@<X8>)
{
  sub_248728678(a1, a2);
}

void sub_2487283EC(unsigned __int8 *a1, void **a2)
{
  sub_248728704(a1, a2);
}

void NSUserDefaults.ttsvb_hasUserMadeiCloudOptInChoice.setter(char a1)
{
  sub_248728794(a1);
}

void (*NSUserDefaults.ttsvb_hasUserMadeiCloudOptInChoice.modify(uint64_t a1))(uint64_t a1)
{
  void *v1;
  void *v3;
  unsigned __int8 v4;

  *(_QWORD *)a1 = v1;
  swift_bridgeObjectRetain();
  v3 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v1, sel_BOOLForKey_, v3);

  *(_BYTE *)(a1 + 8) = v4;
  return sub_2487284AC;
}

void sub_2487284AC(uint64_t a1)
{
  sub_2487288A8(a1);
}

id NSUserDefaults.ttsvb_hasPerformVoiceDatastoreMigrationV1.getter()
{
  return sub_2487285F8();
}

void sub_2487284E4(void **a1@<X0>, unsigned __int8 *a2@<X8>)
{
  sub_248728678(a1, a2);
}

void sub_248728500(unsigned __int8 *a1, void **a2)
{
  sub_248728704(a1, a2);
}

void NSUserDefaults.ttsvb_hasPerformVoiceDatastoreMigrationV1.setter(char a1)
{
  sub_248728794(a1);
}

void (*NSUserDefaults.ttsvb_hasPerformVoiceDatastoreMigrationV1.modify(uint64_t a1))(uint64_t a1)
{
  void *v1;
  void *v3;
  unsigned __int8 v4;

  *(_QWORD *)a1 = v1;
  swift_bridgeObjectRetain();
  v3 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v1, sel_BOOLForKey_, v3);

  *(_BYTE *)(a1 + 8) = v4;
  return sub_2487285C0;
}

void sub_2487285C0(uint64_t a1)
{
  sub_2487288A8(a1);
}

id NSUserDefaults.ttsvb_internalUseServerBasedASR.getter()
{
  return sub_2487285F8();
}

id sub_2487285F8()
{
  void *v0;
  void *v1;
  id v2;

  swift_bridgeObjectRetain();
  v1 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  return v2;
}

void sub_24872865C(void **a1@<X0>, unsigned __int8 *a2@<X8>)
{
  sub_248728678(a1, a2);
}

void sub_248728678(void **a1@<X0>, unsigned __int8 *a2@<X8>)
{
  void *v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *a1;
  swift_bridgeObjectRetain();
  v4 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_BOOLForKey_, v4);

  *a2 = v5;
}

void sub_2487286E8(unsigned __int8 *a1, void **a2)
{
  sub_248728704(a1, a2);
}

void sub_248728704(unsigned __int8 *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  id v4;

  v2 = *a1;
  v3 = *a2;
  swift_bridgeObjectRetain();
  v4 = (id)sub_2487B5504();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setBool_forKey_, v2, v4);

}

void NSUserDefaults.ttsvb_internalUseServerBasedASR.setter(char a1)
{
  sub_248728794(a1);
}

void sub_248728794(char a1)
{
  void *v1;
  id v3;

  swift_bridgeObjectRetain();
  v3 = (id)sub_2487B5504();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setBool_forKey_, a1 & 1, v3);

}

void (*NSUserDefaults.ttsvb_internalUseServerBasedASR.modify(uint64_t a1))(uint64_t a1)
{
  void *v1;
  void *v3;
  unsigned __int8 v4;

  *(_QWORD *)a1 = v1;
  swift_bridgeObjectRetain();
  v3 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v1, sel_BOOLForKey_, v3);

  *(_BYTE *)(a1 + 8) = v4;
  return sub_24872888C;
}

void sub_24872888C(uint64_t a1)
{
  sub_2487288A8(a1);
}

void sub_2487288A8(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  id v3;

  v1 = *(void **)a1;
  v2 = *(unsigned __int8 *)(a1 + 8);
  swift_bridgeObjectRetain();
  v3 = (id)sub_2487B5504();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setBool_forKey_, v2, v3);

}

unint64_t static TTSVBPreferences.hasUserMadeiCloudOptInChoice.getter()
{
  return (unint64_t)sub_248728BF4() & 1;
}

void static TTSVBPreferences.hasUserMadeiCloudOptInChoice.setter(char a1)
{
  sub_248728A1C(a1);
}

void (*static TTSVBPreferences.hasUserMadeiCloudOptInChoice.modify(_BYTE *a1))(unsigned __int8 *a1)
{
  *a1 = sub_248728BF4() & 1;
  return sub_2487289B4;
}

void sub_2487289B4(unsigned __int8 *a1)
{
  sub_248728B3C(a1);
}

unint64_t static TTSVBPreferences.hasPerformVoiceDatastoreMigrationV1.getter()
{
  return (unint64_t)sub_248728BF4() & 1;
}

void static TTSVBPreferences.hasPerformVoiceDatastoreMigrationV1.setter(char a1)
{
  sub_248728A1C(a1);
}

void sub_248728A1C(char a1)
{
  void *v2;
  id v3;

  if (qword_25445F9B8 != -1)
    swift_once();
  v2 = (void *)qword_25445F9B0;
  if (qword_25445F9B0)
  {
    swift_bridgeObjectRetain();
    v3 = (id)sub_2487B5504();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setBool_forKey_, a1 & 1, v3);

  }
}

void (*static TTSVBPreferences.hasPerformVoiceDatastoreMigrationV1.modify(_BYTE *a1))(unsigned __int8 *a1)
{
  *a1 = sub_248728BF4() & 1;
  return sub_248728B20;
}

void sub_248728B20(unsigned __int8 *a1)
{
  sub_248728B3C(a1);
}

void sub_248728B3C(unsigned __int8 *a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v1 = *a1;
  if (qword_25445F9B8 != -1)
    swift_once();
  v2 = (void *)qword_25445F9B0;
  if (qword_25445F9B0)
  {
    swift_bridgeObjectRetain();
    v3 = (id)sub_2487B5504();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setBool_forKey_, v1, v3);

  }
}

id sub_248728BF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v12;

  v0 = sub_2487B533C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25445F9B8 != -1)
    swift_once();
  v4 = (void *)qword_25445F9B0;
  if (qword_25445F9B0)
  {
    swift_bridgeObjectRetain();
    v5 = (void *)sub_2487B5504();
    swift_bridgeObjectRelease();
    v6 = objc_msgSend(v4, sel_BOOLForKey_, v5);

  }
  else
  {
    v7 = sub_2487B0B90();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v7, v0);
    v8 = sub_2487B5324();
    v9 = sub_2487B57D4();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_2486E6000, v8, v9, "voicebankingSandboxedShared domain unexpectedly nil", v10, 2u);
      MEMORY[0x24959AF80](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 0;
  }
  return v6;
}

ValueMetadata *type metadata accessor for TTSVBPreferences()
{
  return &type metadata for TTSVBPreferences;
}

uint64_t TTSVBVoiceModelFlags.rawValue.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t TTSVBVoiceModelFlags.init(rawValue:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void *sub_248728D90()
{
  return &unk_2487BE180;
}

void static TTSVBVoiceModelFlags.trainedWithUnvalidatedData.getter(_DWORD *a1@<X8>)
{
  *a1 = 1;
}

void *sub_248728DA8()
{
  return &unk_2487BE184;
}

void static TTSVBVoiceModelFlags.trainedWithLowerQualityData.getter(_DWORD *a1@<X8>)
{
  *a1 = 2;
}

unint64_t sub_248728DCC()
{
  unint64_t result;

  result = qword_25777CCC0;
  if (!qword_25777CCC0)
  {
    result = MEMORY[0x24959AEB4](&protocol conformance descriptor for TTSVBVoiceModelFlags, &type metadata for TTSVBVoiceModelFlags);
    atomic_store(result, (unint64_t *)&qword_25777CCC0);
  }
  return result;
}

uint64_t sub_248728E10()
{
  sub_2487214B8();
  return sub_2487B5654();
}

uint64_t sub_248728E6C()
{
  sub_2487214B8();
  return sub_2487B563C();
}

unint64_t sub_248728EBC()
{
  unint64_t result;

  result = qword_25777CCC8;
  if (!qword_25777CCC8)
  {
    result = MEMORY[0x24959AEB4](&protocol conformance descriptor for TTSVBVoiceModelFlags, &type metadata for TTSVBVoiceModelFlags);
    atomic_store(result, (unint64_t *)&qword_25777CCC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSVBVoiceModelFlags()
{
  return &type metadata for TTSVBVoiceModelFlags;
}

void *sub_248728F10()
{
  return &unk_2487BE3C8;
}

uint64_t TTSVBMinimumPhraseCount.getter()
{
  return 150;
}

void *sub_248728F24()
{
  return &unk_2487BE3D0;
}

uint64_t TTSVBMaximumUserEditScore.getter()
{
  return 25;
}

double TTSVBBackgroundNoiseThreshold.getter()
{
  return 0.75;
}

void *sub_248728F40()
{
  return &unk_2519921A8;
}

unint64_t TTSVBDaemonBundleID.getter()
{
  return 0xD000000000000017;
}

uint64_t TTSVBMaximumVoiceCount.getter()
{
  return 3;
}

uint64_t sub_248728F70()
{
  uint64_t result;

  result = sub_2487B5504();
  qword_25445F9D0 = result;
  return result;
}

uint64_t *sub_248728FA4()
{
  if (qword_25445F9D8 != -1)
    swift_once();
  return &qword_25445F9D0;
}

id static NSNotificationName.ttsvbDidImportVoiceModel.getter()
{
  return sub_248729120(&qword_25445F9D8, (id *)&qword_25445F9D0);
}

uint64_t sub_248729000()
{
  uint64_t result;

  result = sub_2487B5504();
  qword_25445F9C0 = result;
  return result;
}

uint64_t *sub_248729034()
{
  if (qword_25445F9C8 != -1)
    swift_once();
  return &qword_25445F9C0;
}

id static NSNotificationName.ttsvbDidDeleteVoice.getter()
{
  return sub_248729120(&qword_25445F9C8, (id *)&qword_25445F9C0);
}

uint64_t sub_248729090()
{
  uint64_t result;

  result = sub_2487B5504();
  qword_25445F9E0 = result;
  return result;
}

uint64_t *sub_2487290C4()
{
  if (qword_25445F9E8 != -1)
    swift_once();
  return &qword_25445F9E0;
}

id static NSNotificationName.ttsvbDidPotentiallyDownloadVoiceModel.getter()
{
  return sub_248729120(&qword_25445F9E8, (id *)&qword_25445F9E0);
}

id sub_248729120(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

Swift::Int __swiftcall String.ttsvb_editDistance(to:)(Swift::String to)
{
  _QWORD *v1;
  unint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  Swift::Int v5;
  Swift::Int result;
  Swift::Int v7;
  Swift::Int v8;
  char isUniquelyReferenced_nonNull_native;
  Swift::Int v10;
  unint64_t v11;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v14;
  BOOL v15;
  _BOOL8 v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  Swift::Int v34;
  Swift::Int v35;

  v5 = sub_2487B5588();
  result = sub_2487B5588();
  v7 = result;
  v35 = v5;
  if (v5 < 1 || result <= 0)
  {
    if (result <= v5)
      return v5;
    return result;
  }
  v8 = result + 1;
  if (__OFADD__(result, 1))
    goto LABEL_74;
  if (v8 < 0)
    goto LABEL_75;
  v2 = sub_2487B56B4();
  *(_QWORD *)(v2 + 16) = v8;
  bzero((void *)(v2 + 32), 8 * v7 + 8);
  if (__OFADD__(v5, 1))
    goto LABEL_76;
  v1 = sub_2487295C4((_QWORD *)v2, v5 + 1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_77;
  while (1)
  {
    if (v1[2] < 2uLL)
    {
      __break(1u);
    }
    else
    {
      v2 = v1[5];
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v1[5] = v2;
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if (!*(_QWORD *)(v2 + 16))
          goto LABEL_80;
        goto LABEL_10;
      }
    }
    v2 = (unint64_t)sub_24872A028(v2);
    if (!*(_QWORD *)(v2 + 16))
    {
LABEL_80:
      __break(1u);
      goto LABEL_81;
    }
LABEL_10:
    *(_QWORD *)(v2 + 32) = 1;
    v1[5] = v2;
    v10 = v35 - 1;
    if (v35 != 1)
    {
      v28 = 0;
      v3 = v1 + 6;
      while (1)
      {
        v4 = v28 + 2;
        if ((unint64_t)(v28 + 2) >= v1[2])
          break;
        v2 = v3[v28];
        v29 = swift_isUniquelyReferenced_nonNull_native();
        v3[v28] = v2;
        if ((v29 & 1) != 0)
        {
          if (!*(_QWORD *)(v2 + 16))
            goto LABEL_52;
        }
        else
        {
          v2 = (unint64_t)sub_24872A028(v2);
          v3[v28] = v2;
          if (!*(_QWORD *)(v2 + 16))
          {
LABEL_52:
            __break(1u);
            goto LABEL_53;
          }
        }
        *(_QWORD *)(v2 + 32) = v4;
        if (v10 == ++v28)
          goto LABEL_11;
      }
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
LABEL_11:
    if (v1[2])
    {
      v3 = v1 + 4;
      v4 = v1[4];
      result = swift_isUniquelyReferenced_nonNull_native();
      v1[4] = v4;
      if ((result & 1) != 0)
        goto LABEL_13;
      goto LABEL_82;
    }
LABEL_81:
    __break(1u);
LABEL_82:
    result = (Swift::Int)sub_24872A028(v4);
    v4 = result;
LABEL_13:
    if (*(_QWORD *)(v4 + 16) < 2uLL)
    {
      __break(1u);
      goto LABEL_84;
    }
    *(_QWORD *)(v4 + 40) = 1;
    *v3 = v4;
    v10 = v7 - 1;
    if (v7 == 1)
      break;
LABEL_53:
    v2 = 0;
    while (v1[2])
    {
      v30 = swift_isUniquelyReferenced_nonNull_native();
      *v3 = v4;
      if ((v30 & 1) == 0)
        v4 = (unint64_t)sub_24872A028(v4);
      if (v2 + 2 >= *(_QWORD *)(v4 + 16))
        goto LABEL_73;
      *(_QWORD *)(v4 + 8 * v2 + 48) = v2 + 2;
      *v3 = v4;
      if (v10 == ++v2)
        goto LABEL_15;
    }
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    v1 = sub_24872A03C(v1);
  }
LABEL_15:
  v11 = 1;
  while (2)
  {
    v4 = 0;
    do
    {
      v12 = v7;
      sub_2487B55A0();
      v2 = sub_2487B55E8();
      v7 = v13;
      sub_2487B55A0();
      v15 = v2 == sub_2487B55E8() && v7 == v14;
      if (v15)
      {
        swift_bridgeObjectRelease_n();
        v16 = 0;
      }
      else
      {
        v2 = sub_2487B5CE4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v16 = (v2 & 1) == 0;
      }
      v17 = v1[2];
      if (v11 > v17)
      {
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
        goto LABEL_71;
      }
      v2 = v4 + 1;
      v18 = v3[v11 - 1];
      if (v4 + 1 >= *(_QWORD *)(v18 + 16))
        goto LABEL_64;
      v19 = *(_QWORD *)(v18 + 8 * v4 + 40);
      v20 = __OFADD__(v19, 1);
      v21 = v19 + 1;
      if (v20)
        goto LABEL_65;
      if (v11 >= v17)
        goto LABEL_66;
      v7 = v3[v11];
      if (v4 >= *(_QWORD *)(v7 + 16))
        goto LABEL_67;
      v22 = *(_QWORD *)(v7 + 8 * v4 + 32);
      v20 = __OFADD__(v22, 1);
      v23 = v22 + 1;
      if (v20)
        goto LABEL_68;
      v24 = *(_QWORD *)(v18 + 8 * v4 + 32);
      v20 = __OFADD__(v24, v16);
      v25 = v24 + v16;
      if (v20)
        goto LABEL_69;
      if (v23 >= v21)
        v26 = v21;
      else
        v26 = v23;
      if (v25 >= v26)
        v27 = v26;
      else
        v27 = v25;
      result = swift_isUniquelyReferenced_nonNull_native();
      v3[v11] = v7;
      if ((result & 1) == 0)
      {
        result = (Swift::Int)sub_24872A028(v7);
        v7 = result;
        v3[v11] = result;
      }
      if (v2 >= *(_QWORD *)(v7 + 16))
        goto LABEL_70;
      *(_QWORD *)(v7 + 8 * v4++ + 40) = v27;
      v7 = v12;
    }
    while (v12 != v4);
    v15 = v11++ == v35;
    if (!v15)
      continue;
    break;
  }
  v31 = v1[2];
  if (v31)
  {
    v32 = v3[v31 - 1];
    v33 = *(_QWORD *)(v32 + 16);
    if (!v33)
      goto LABEL_85;
    v34 = *(_QWORD *)(v32 + 8 * v33 + 24);
    swift_bridgeObjectRelease();
    return v34;
  }
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
  return result;
}

_QWORD *sub_2487295C4(_QWORD *result, uint64_t a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;

  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = result;
    if (a2)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25777CCF0);
      v4 = (_QWORD *)sub_2487B56B4();
      v5 = v4;
      v4[2] = a2;
      v4[4] = v3;
      if (a2 != 1)
      {
        v4[5] = v3;
        v6 = a2 - 2;
        if (v6)
        {
          v7 = v4 + 6;
          do
          {
            *v7++ = v3;
            swift_bridgeObjectRetain();
            --v6;
          }
          while (v6);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    return v5;
  }
  return result;
}

uint64_t String.ttsvb_normalizedForSpeechComparison.getter(uint64_t a1, unint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  swift_bridgeObjectRetain();
  v4 = sub_2487297A0(0x7FFFFFFFFFFFFFFFLL, 1, a1, a2);
  sub_248729BB0((uint64_t)v4);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25445F138);
  sub_24872A050();
  v5 = sub_2487B5498();
  v7 = v6;
  swift_bridgeObjectRelease();
  v14[0] = v5;
  v14[1] = v7;
  v8 = sub_2487B4E74();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2487B4E68();
  sub_2486ED9E0();
  v12 = sub_2487B5978();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_bridgeObjectRelease();
  return v12;
}

char *sub_2487297A0(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v38;

  if (a1 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v6 = a3;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = MEMORY[0x24BEE4AF8];
  v11 = swift_allocObject();
  v8 = v11;
  *(_QWORD *)(v11 + 16) = 15;
  v12 = HIBYTE(a4) & 0xF;
  if (!a1 || ((a4 & 0x2000000000000000) != 0 ? (v13 = HIBYTE(a4) & 0xF) : (v13 = v6 & 0xFFFFFFFFFFFFLL), !v13))
  {
    if ((a4 & 0x2000000000000000) == 0)
      v12 = v6 & 0xFFFFFFFFFFFFLL;
    v25 = 7;
    if (((a4 >> 60) & ((v6 & 0x800000000000000) == 0)) != 0)
      v25 = 11;
    sub_24872A3B4(v25 | (v12 << 16), v11, a2 & 1, v7);
    swift_bridgeObjectRelease();
    v5 = *(char **)(v7 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    swift_release();
    return v5;
  }
  v33 = a1;
  v38 = 4 * v13;
  v5 = (char *)MEMORY[0x24BEE4AF8];
  v14 = 15;
  v4 = 15;
  v34 = v11;
  v35 = v7;
  while (1)
  {
    sub_2487B55E8();
    v15 = sub_2487B548C();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
      break;
    v14 = sub_2487B5594();
LABEL_9:
    if (v38 == v14 >> 14)
      goto LABEL_26;
  }
  if (v4 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    v14 = sub_2487B5594();
    *(_QWORD *)(v8 + 16) = v14;
    v4 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v4 >> 14)
  {
    __break(1u);
    goto LABEL_37;
  }
  v36 = sub_2487B55F4();
  v17 = v16;
  v19 = v18;
  v21 = v20;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_24872A2B4(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
  v23 = *((_QWORD *)v5 + 2);
  v22 = *((_QWORD *)v5 + 3);
  if (v23 >= v22 >> 1)
    v5 = sub_24872A2B4((char *)(v22 > 1), v23 + 1, 1, v5);
  *((_QWORD *)v5 + 2) = v23 + 1;
  v24 = &v5[32 * v23];
  *((_QWORD *)v24 + 4) = v36;
  *((_QWORD *)v24 + 5) = v17;
  *((_QWORD *)v24 + 6) = v19;
  *((_QWORD *)v24 + 7) = v21;
  v7 = v35;
  *(_QWORD *)(v35 + 16) = v5;
  v4 = sub_2487B5594();
  v8 = v34;
  *(_QWORD *)(v34 + 16) = v4;
  v14 = v4;
  if (*((_QWORD *)v5 + 2) != v33)
    goto LABEL_9;
LABEL_26:
  if (v38 == v4 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_34;
  }
  if (v38 >= v4 >> 14)
  {
    v4 = sub_2487B55F4();
    v6 = v26;
    v7 = v27;
    v8 = v28;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      goto LABEL_39;
    goto LABEL_31;
  }
LABEL_38:
  __break(1u);
LABEL_39:
  v5 = sub_24872A2B4(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
LABEL_31:
  v30 = *((_QWORD *)v5 + 2);
  v29 = *((_QWORD *)v5 + 3);
  if (v30 >= v29 >> 1)
    v5 = sub_24872A2B4((char *)(v29 > 1), v30 + 1, 1, v5);
  *((_QWORD *)v5 + 2) = v30 + 1;
  v31 = &v5[32 * v30];
  *((_QWORD *)v31 + 4) = v4;
  *((_QWORD *)v31 + 5) = v6;
  *((_QWORD *)v31 + 6) = v7;
  *((_QWORD *)v31 + 7) = v8;
  *(_QWORD *)(v35 + 16) = v5;
LABEL_34:
  swift_bridgeObjectRetain();
  swift_release();
  swift_release();
  return v5;
}

uint64_t sub_248729B60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_24872A4E0();
  result = sub_2487B596C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_248729BB0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_24872A4C0(0, v1, 0);
    v2 = v11;
    v4 = a1 + 56;
    do
    {
      swift_getKeyPath();
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();
      swift_bridgeObjectRelease();
      swift_release();
      v6 = *(_QWORD *)(v11 + 16);
      v5 = *(_QWORD *)(v11 + 24);
      if (v6 >= v5 >> 1)
        sub_24872A4C0((char *)(v5 > 1), v6 + 1, 1);
      *(_QWORD *)(v11 + 16) = v6 + 1;
      v7 = v11 + 16 * v6;
      *(_QWORD *)(v7 + 32) = v9;
      *(_QWORD *)(v7 + 40) = v10;
      v4 += 32;
      --v1;
    }
    while (v1);
  }
  return v2;
}

Swift::UInt64 __swiftcall TTSVBTimestampInNanoseconds(when:)(Swift::UInt64_optional when)
{
  Swift::Bool is_nil;
  Swift::UInt64 value;
  mach_timebase_info v4[2];

  is_nil = when.is_nil;
  value = when.value;
  v4[1] = *(mach_timebase_info *)MEMORY[0x24BDAC8D0];
  v4[0] = 0;
  mach_timebase_info(v4);
  if (is_nil)
    value = mach_absolute_time();
  if (!is_mul_ok(value, v4[0].numer))
  {
    __break(1u);
LABEL_7:
    __break(1u);
  }
  if (!v4[0].denom)
    goto LABEL_7;
  return value * v4[0].numer / v4[0].denom;
}

Swift::Double __swiftcall TTSVBTimestampInSeconds(when:)(Swift::UInt64_optional when)
{
  Swift::Bool is_nil;
  Swift::UInt64 value;
  mach_timebase_info v4[2];

  is_nil = when.is_nil;
  value = when.value;
  v4[1] = *(mach_timebase_info *)MEMORY[0x24BDAC8D0];
  v4[0] = 0;
  mach_timebase_info(v4);
  if (is_nil)
    value = mach_absolute_time();
  if (!is_mul_ok(value, v4[0].numer))
  {
    __break(1u);
LABEL_7:
    __break(1u);
  }
  if (!v4[0].denom)
    goto LABEL_7;
  return (double)(value * v4[0].numer / v4[0].denom) / 1000000000.0;
}

uint64_t sub_248729E14(double a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25777C9B0);
  v2 = swift_allocObject();
  v3 = MEMORY[0x24BEE13C8];
  *(_OWORD *)(v2 + 16) = xmmword_2487B72B0;
  v4 = MEMORY[0x24BEE1448];
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 64) = v4;
  *(double *)(v2 + 32) = a1;
  return sub_2487B5540();
}

uint64_t static Array<A>.fromData(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  _QWORD v7[3];

  sub_2487B4E2C();
  swift_allocObject();
  sub_2487B4E20();
  v5 = sub_2487B56CC();
  v7[0] = a4;
  MEMORY[0x24959AEB4](MEMORY[0x24BEE12D0], v5, v7);
  sub_2487B4E14();
  swift_release();
  return v7[2];
}

uint64_t Array<A>.toData()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];

  sub_2487B4E50();
  swift_allocObject();
  sub_2487B4E44();
  v9[2] = a1;
  v6 = sub_2487B56CC();
  v9[0] = a4;
  MEMORY[0x24959AEB4](MEMORY[0x24BEE12A0], v6, v9);
  v7 = sub_2487B4E38();
  swift_release();
  return v7;
}

char *sub_24872A028(uint64_t a1)
{
  return sub_24872A09C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

_QWORD *sub_24872A03C(_QWORD *a1)
{
  return sub_24872A194(0, a1[2], 0, a1);
}

unint64_t sub_24872A050()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25445F140;
  if (!qword_25445F140)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25445F138);
    result = MEMORY[0x24959AEB4](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_25445F140);
  }
  return result;
}

char *sub_24872A09C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25777CCE0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

_QWORD *sub_24872A194(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25777CCE8);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[v8 + 4])
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25777CCF0);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_24872A2B4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25777CCD8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_24872A3B4(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  char *v18;

  v10 = *(_QWORD *)(a2 + 16) >> 14;
  v11 = (v10 == a1 >> 14) & a3;
  if (v11 == 1)
    return v11 ^ 1u;
  if (a1 >> 14 < v10)
  {
    __break(1u);
    goto LABEL_9;
  }
  v4 = a4;
  v5 = sub_2487B55F4();
  v6 = v12;
  v7 = v13;
  v8 = v14;
  v9 = *(char **)(v4 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v4 + 16) = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_9:
    v9 = sub_24872A2B4(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    *(_QWORD *)(v4 + 16) = v9;
  }
  v17 = *((_QWORD *)v9 + 2);
  v16 = *((_QWORD *)v9 + 3);
  if (v17 >= v16 >> 1)
  {
    v9 = sub_24872A2B4((char *)(v16 > 1), v17 + 1, 1, v9);
    *(_QWORD *)(v4 + 16) = v9;
  }
  *((_QWORD *)v9 + 2) = v17 + 1;
  v18 = &v9[32 * v17];
  *((_QWORD *)v18 + 4) = v5;
  *((_QWORD *)v18 + 5) = v6;
  *((_QWORD *)v18 + 6) = v7;
  *((_QWORD *)v18 + 7) = v8;
  return v11 ^ 1u;
}

char *sub_24872A4C0(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_24872A524(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

unint64_t sub_24872A4E0()
{
  unint64_t result;

  result = qword_25777CCD0;
  if (!qword_25777CCD0)
  {
    result = MEMORY[0x24959AEB4](MEMORY[0x24BEE1E38], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_25777CCD0);
  }
  return result;
}

char *sub_24872A524(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1A8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

uint64_t sub_24872A624()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24872A648()
{
  return swift_deallocObject();
}

void sub_24872A658()
{
  uint64_t v0;
  float v1;
  float v2;

  if (*(_BYTE *)(v0 + 24) == 1)
  {
    v1 = (*(float (**)(void))(*(_QWORD *)v0 + 448))();
    v2 = ceilf(v1 / (*(float (**)(void))(*(_QWORD *)v0 + 472))());
    if ((~LODWORD(v2) & 0x7F800000) != 0)
    {
      if (v2 > -9.2234e18)
      {
        if (v2 < 9.2234e18)
        {
          *(_QWORD *)(v0 + 16) = (uint64_t)v2;
          *(_BYTE *)(v0 + 24) = 0;
          return;
        }
        goto LABEL_9;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_9:
    __break(1u);
  }
}

uint64_t sub_24872A6F0(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  *(_BYTE *)(v1 + 24) = 0;
  return result;
}

_QWORD *(*sub_24872A6FC(_QWORD *a1))(_QWORD *result)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  sub_24872A658();
  *a1 = v3;
  return sub_24872A730;
}

_QWORD *sub_24872A730(_QWORD *result)
{
  uint64_t v1;

  v1 = result[1];
  *(_QWORD *)(v1 + 16) = *result;
  *(_BYTE *)(v1 + 24) = 0;
  return result;
}

void sub_24872A740()
{
  uint64_t v0;
  uint64_t v1;
  double v2;

  if (*(_BYTE *)(v0 + 40) == 1)
  {
    v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
    v2 = round(log2((double)v1));
    if ((~*(_QWORD *)&v2 & 0x7FF0000000000000) != 0)
    {
      if (v2 > -1.0)
      {
        if (v2 < 1.84467441e19)
        {
          *(_QWORD *)(v0 + 32) = (unint64_t)v2;
          *(_BYTE *)(v0 + 40) = 0;
          return;
        }
        goto LABEL_9;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_9:
    __break(1u);
  }
}

uint64_t sub_24872A7C4(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  *(_BYTE *)(v1 + 40) = 0;
  return result;
}

_QWORD *(*sub_24872A7D0(_QWORD *a1))(_QWORD *result)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  sub_24872A740();
  *a1 = v3;
  return sub_24872A804;
}

_QWORD *sub_24872A804(_QWORD *result)
{
  uint64_t v1;

  v1 = result[1];
  *(_QWORD *)(v1 + 32) = *result;
  *(_BYTE *)(v1 + 40) = 0;
  return result;
}

uint64_t sub_24872A814()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;

  if (*(_BYTE *)(v0 + 56) != 1)
    return *(_QWORD *)(v0 + 48);
  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
  if (v1 >= 0x40)
    result = 0;
  else
    result = 1 << v1;
  *(_QWORD *)(v0 + 48) = result;
  *(_BYTE *)(v0 + 56) = 0;
  return result;
}

uint64_t sub_24872A860(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = result;
  *(_BYTE *)(v1 + 56) = 0;
  return result;
}

_QWORD *(*sub_24872A86C(uint64_t *a1))(_QWORD *result)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_24872A814();
  return sub_24872A8A0;
}

_QWORD *sub_24872A8A0(_QWORD *result)
{
  uint64_t v1;

  v1 = result[1];
  *(_QWORD *)(v1 + 48) = *result;
  *(_BYTE *)(v1 + 56) = 0;
  return result;
}

uint64_t sub_24872A8B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  if (*(_BYTE *)(v0 + 72) != 1)
    return *(_QWORD *)(v0 + 64);
  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
  if (v1 >= 0)
    v2 = v1;
  else
    v2 = v1 + 1;
  result = v2 >> 1;
  *(_QWORD *)(v0 + 64) = v2 >> 1;
  *(_BYTE *)(v0 + 72) = 0;
  return result;
}

uint64_t sub_24872A8F8(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = result;
  *(_BYTE *)(v1 + 72) = 0;
  return result;
}

_QWORD *(*sub_24872A904(uint64_t *a1))(_QWORD *result)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_24872A8B0();
  return sub_24872A938;
}

_QWORD *sub_24872A938(_QWORD *result)
{
  uint64_t v1;

  v1 = result[1];
  *(_QWORD *)(v1 + 64) = *result;
  *(_BYTE *)(v1 + 72) = 0;
  return result;
}

float sub_24872A948()
{
  uint64_t v0;
  float result;

  if ((*(_BYTE *)(v0 + 80) & 1) == 0)
    return *(float *)(v0 + 76);
  result = 2.0 / (float)(*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
  *(float *)(v0 + 76) = result;
  *(_BYTE *)(v0 + 80) = 0;
  return result;
}

void sub_24872A98C(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 76) = a1;
  *(_BYTE *)(v1 + 80) = 0;
}

uint64_t *(*sub_24872A998(uint64_t a1))(uint64_t *result)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(float *)(a1 + 8) = sub_24872A948();
  return sub_24872A9CC;
}

uint64_t *sub_24872A9CC(uint64_t *result)
{
  uint64_t v1;

  v1 = *result;
  *(_DWORD *)(v1 + 76) = *((_DWORD *)result + 2);
  *(_BYTE *)(v1 + 80) = 0;
  return result;
}

uint64_t sub_24872A9E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  if (v0[11])
  {
    v1 = v0[11];
LABEL_8:
    swift_bridgeObjectRetain();
    return v1;
  }
  result = (*(uint64_t (**)(void))(*v0 + 256))();
  if ((result & 0x8000000000000000) == 0)
  {
    v3 = result;
    if (result)
    {
      v1 = sub_2487B56B4();
      *(_QWORD *)(v1 + 16) = v3;
      bzero((void *)(v1 + 32), 4 * v3);
    }
    else
    {
      v1 = MEMORY[0x24BEE4AF8];
    }
    v0[11] = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_24872AA80(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_24872AA90(uint64_t *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_24872A9E0();
  return sub_24872AAC4;
}

uint64_t sub_24872AAC4(_QWORD *a1)
{
  *(_QWORD *)(a1[1] + 88) = *a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_24872AAD4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  if (v0[12])
  {
    v1 = v0[12];
LABEL_8:
    swift_bridgeObjectRetain();
    return v1;
  }
  result = (*(uint64_t (**)(void))(*v0 + 256))();
  if ((result & 0x8000000000000000) == 0)
  {
    v3 = result;
    if (result)
    {
      v1 = sub_2487B56B4();
      *(_QWORD *)(v1 + 16) = v3;
      bzero((void *)(v1 + 32), 4 * v3);
    }
    else
    {
      v1 = MEMORY[0x24BEE4AF8];
    }
    v0[12] = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_24872AB74(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_24872AB84(uint64_t *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_24872AAD4();
  return sub_24872ABB8;
}

uint64_t sub_24872ABB8(_QWORD *a1)
{
  *(_QWORD *)(a1[1] + 96) = *a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_24872ABC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  if (v0[13])
  {
    v1 = v0[13];
LABEL_8:
    swift_bridgeObjectRetain();
    return v1;
  }
  result = (*(uint64_t (**)(void))(*v0 + 232))();
  if ((result & 0x8000000000000000) == 0)
  {
    v3 = result;
    if (result)
    {
      v1 = sub_2487B56B4();
      *(_QWORD *)(v1 + 16) = v3;
      bzero((void *)(v1 + 32), 4 * v3);
    }
    else
    {
      v1 = MEMORY[0x24BEE4AF8];
    }
    v0[13] = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_24872AC68(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_24872AC78(uint64_t *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_24872ABC8();
  return sub_24872ACAC;
}

uint64_t sub_24872ACAC(_QWORD *a1)
{
  *(_QWORD *)(a1[1] + 104) = *a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_24872ACBC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  if (v0[14])
  {
    v1 = v0[14];
LABEL_8:
    swift_bridgeObjectRetain();
    return v1;
  }
  result = (*(uint64_t (**)(void))(*v0 + 256))();
  if ((result & 0x8000000000000000) == 0)
  {
    v3 = result;
    if (result)
    {
      v1 = sub_2487B56B4();
      *(_QWORD *)(v1 + 16) = v3;
      bzero((void *)(v1 + 32), 4 * v3);
    }
    else
    {
      v1 = MEMORY[0x24BEE4AF8];
    }
    v0[14] = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_24872AD5C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_24872AD6C(uint64_t *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_24872ACBC();
  return sub_24872ADA0;
}

uint64_t sub_24872ADA0(_QWORD *a1)
{
  *(_QWORD *)(a1[1] + 112) = *a1;
  return swift_bridgeObjectRelease();
}

vDSP_Length sub_24872ADB0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  vDSP_Length result;
  vDSP_Length v4;

  if (v0[15])
  {
    v1 = v0[15];
LABEL_7:
    swift_bridgeObjectRetain();
    return v1;
  }
  v2 = *(uint64_t (**)(void))(*v0 + 232);
  result = v2();
  if ((result & 0x8000000000000000) == 0)
  {
    v4 = result;
    if (result)
    {
      v1 = sub_2487B56B4();
      *(_QWORD *)(v1 + 16) = v4;
      bzero((void *)(v1 + 32), 4 * v4);
      result = v2();
      if ((result & 0x8000000000000000) == 0)
      {
LABEL_6:
        vDSP_hann_window((float *)(v1 + 32), result, 2);
        v0[15] = v1;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    else
    {
      v1 = MEMORY[0x24BEE4AF8];
      result = v2();
      if ((result & 0x8000000000000000) == 0)
        goto LABEL_6;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24872AE70(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_24872AE80(vDSP_Length *a1))(_QWORD *a1)
{
  vDSP_Length v1;

  a1[1] = v1;
  *a1 = sub_24872ADB0();
  return sub_24872AEB4;
}

uint64_t sub_24872AEB4(_QWORD *a1)
{
  *(_QWORD *)(a1[1] + 120) = *a1;
  return swift_bridgeObjectRelease();
}

FFTSetup sub_24872AEC4()
{
  uint64_t v0;
  vDSP_Length v1;
  FFTSetup result;

  if (*(_BYTE *)(v0 + 136) != 1)
    return *(FFTSetup *)(v0 + 128);
  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
  result = vDSP_create_fftsetup(v1, 0);
  *(_QWORD *)(v0 + 128) = result;
  *(_BYTE *)(v0 + 136) = 0;
  return result;
}

uint64_t sub_24872AF08(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = result;
  *(_BYTE *)(v1 + 136) = 0;
  return result;
}

_QWORD *(*sub_24872AF14(FFTSetup *a1))(_QWORD *result)
{
  OpaqueFFTSetup *v1;

  a1[1] = v1;
  *a1 = sub_24872AEC4();
  return sub_24872AF48;
}

_QWORD *sub_24872AF48(_QWORD *result)
{
  uint64_t v1;

  v1 = result[1];
  *(_QWORD *)(v1 + 128) = *result;
  *(_BYTE *)(v1 + 136) = 0;
  return result;
}

float sub_24872AF58()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 140);
}

uint64_t sub_24872AF88(float a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(float *)(v1 + 140) = a1;
  return result;
}

uint64_t (*sub_24872AFC4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

float sub_24872B000()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 144);
}

uint64_t sub_24872B030(float a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(float *)(v1 + 144) = a1;
  return result;
}

uint64_t (*sub_24872B06C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_24872B0A8()
{
  uint64_t v0;
  OpaqueFFTSetup *v1;

  v1 = (OpaqueFFTSetup *)(*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
  vDSP_destroy_fftsetup(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_24872B0FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 512))(a1, 1024);
  v2 = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 504))();
  swift_bridgeObjectRelease();
  return v2;
}

void sub_24872B154(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  float32x4_t *v5;
  float32x4_t *v6;
  unint64_t v7;
  float (*v8)(void);
  float v9;
  uint64_t v10;
  float v11;
  float v12;
  uint64_t v13;
  unint64_t v14;
  float v15;
  unint64_t v17;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v28;
  float32x4_t v29;
  float v30;
  float32x4_t v31;
  float v32;
  float32x4_t v33;
  float32x4_t v34;
  float v35;
  float32x4_t v36;
  float v37;
  float32x4_t v38;
  float32x4_t v39;
  float32x4_t v40;
  int64x2_t v41;
  float *v42;
  float v43;
  float v44;
  float v45;
  float32x4_t v46;
  float32x4_t v47;
  float32x4_t v48;
  float32x4_t v49;
  float32x4_t v50;
  int64x2_t v51;
  int64x2_t v52;
  float v53;
  float32x4_t v54;
  float32x4_t v55;
  float32x4_t v56;
  float32x4_t v57;
  float32x4_t v58;
  float32x4_t v59;

  if (a2 < 0)
  {
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  if (!a2)
  {
LABEL_66:
    __break(1u);
    return;
  }
  v5 = (float32x4_t *)sub_2487B56B4();
  v5[1].i64[0] = a2;
  v6 = v5 + 2;
  bzero(&v5[2], 4 * a2);
  v5[2].i32[0] = 0;
  v7 = a2 - 1;
  if (a2 != 1)
    bzero(&v5[2].i32[1], 4 * a2 - 4);
  v8 = *(float (**)(void))(*(_QWORD *)v2 + 448);
  v9 = v8();
  v10 = *(_QWORD *)(a1 + 16);
  v11 = (float)(100.0 / v9) * (float)v10;
  if ((~LODWORD(v11) & 0x7F800000) == 0)
    goto LABEL_58;
  if (v11 <= -9.2234e18)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  if (v11 >= 9.2234e18)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  v12 = (float)(8000.0 / v8()) * (float)v10;
  if ((~LODWORD(v12) & 0x7F800000) == 0)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  if (v12 <= -9.2234e18)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (v12 >= 9.2234e18)
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  v13 = (uint64_t)v11;
  if ((uint64_t)v12 < (uint64_t)v11)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  if (__OFSUB__((uint64_t)v12, (uint64_t)v11))
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  v14 = (uint64_t)v11;
  do
  {
    if (__OFSUB__(v14, v13))
    {
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    v15 = (float)((float)a2 * (float)(uint64_t)(v14 - v13)) / (float)((uint64_t)v12 - (uint64_t)v11);
    if ((LODWORD(v15) & 0x7F800000) != 0x7F800000 || (LODWORD(v15) & 0x7FFFFF) == 0)
    {
      if ((LODWORD(v15) & 0x7F800000) == 0x7F800000)
        goto LABEL_51;
      if (v15 <= -9.2234e18)
        goto LABEL_52;
      if (v15 >= 9.2234e18)
        goto LABEL_53;
      v17 = (uint64_t)v15;
      if ((uint64_t)v15 < a2)
      {
        if (v14 >= v10)
          goto LABEL_54;
        if ((v17 & 0x8000000000000000) != 0)
          goto LABEL_55;
        if (v5[1].i64[0] <= v17)
          goto LABEL_56;
        v6->f32[v17] = *(float *)(a1 + 32 + 4 * v14) + v6->f32[v17];
      }
    }
    if ((uint64_t)v12 == v14)
      goto LABEL_32;
  }
  while (!__OFADD__(v14++, 1));
  __break(1u);
LABEL_32:
  v19 = v5[1].u64[0];
  if (v19)
  {
    v20 = v19 - 1;
    if (v19 - 1 >= v7)
      v20 = a2 - 1;
    v21 = v20 + 1;
    if (v21 > 4)
    {
      v23 = v21 & 3;
      if ((v21 & 3) == 0)
        v23 = 4;
      v22 = v21 - v23;
      v52 = (int64x2_t)xmmword_2487BE420;
      __asm
      {
        FMOV            V2.4S, #6.0
        FMOV            V0.4S, #1.0
      }
      v50 = _Q0;
      v51 = (int64x2_t)xmmword_2487BE430;
      v47 = (float32x4_t)vdupq_n_s32(0x3ECCCCCDu);
      v48 = _Q2;
      v46 = (float32x4_t)vdupq_n_s32(0x40266666u);
      v28 = v21 - v23;
      do
      {
        v58 = vmulq_f32(*v6, v48);
        v53 = powf(v58.f32[1], 0.66667);
        v29.f32[0] = powf(v58.f32[0], 0.66667);
        v29.f32[1] = v53;
        v54 = v29;
        v30 = powf(v58.f32[2], 0.66667);
        v31 = v54;
        v31.f32[2] = v30;
        v55 = v31;
        v32 = powf(v58.f32[3], 0.66667);
        v33 = v55;
        v33.f32[3] = v32;
        v49 = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v33, v50), (int8x16_t)v50, (int8x16_t)v33);
        v59 = vmulq_f32(vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vcvtq_f64_s64(v51)), vcvtq_f64_s64(v52)), v47);
        v55.i32[0] = powf(v59.f32[1], 0.33333);
        v34.f32[0] = powf(v59.f32[0], 0.33333);
        v34.i32[1] = v55.i32[0];
        v56 = v34;
        v35 = powf(v59.f32[2], 0.33333);
        v36 = v56;
        v36.f32[2] = v35;
        v57 = v36;
        v37 = powf(v59.f32[3], 0.33333);
        v38 = v57;
        v38.f32[3] = v37;
        v39 = vmulq_f32(v38, v46);
        v38.i64[0] = 0x3F0000003F000000;
        v38.i64[1] = 0x3F0000003F000000;
        v40 = vmulq_f32(v49, vaddq_f32(v39, v38));
        *(int8x16_t *)v6++ = vbslq_s8((int8x16_t)vcgtq_f32(v40, v50), (int8x16_t)v50, (int8x16_t)v40);
        v41 = vdupq_n_s64(4uLL);
        v51 = vaddq_s64(v51, v41);
        v52 = vaddq_s64(v52, v41);
        v28 -= 4;
      }
      while (v28);
    }
    else
    {
      v22 = 0;
    }
    while (1)
    {
      v42 = &v5->f32[v22];
      v43 = powf(v42[8] * 6.0, 0.66667);
      v44 = v43 <= 1.0 ? v43 : 1.0;
      v45 = v44 * (float)((float)(powf((float)v22 * 0.4, 0.33333) * 2.6) + 0.5);
      if (v45 > 1.0)
        v45 = 1.0;
      v42[8] = v45;
      if (v7 == v22)
        break;
      if (++v22 >= v19)
        goto LABEL_48;
    }
  }
  else
  {
LABEL_48:
    __break(1u);
  }
}

char *sub_24872B604(const float *a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t v5;
  void (*v6)(_BYTE *, _QWORD);
  char **v7;
  char **v8;
  char *v9;
  char isUniquelyReferenced_nonNull_native;
  float *v11;
  void (*v12)(_BYTE *, _QWORD);
  char **v13;
  char **v14;
  char *v15;
  char v16;
  float *v17;
  float *v19[2];
  _BYTE v20[32];
  float *v21[2];
  _BYTE v22[32];
  char *v23;

  if (a2)
  {
    v5 = sub_2487B56B4();
    *(_QWORD *)(v5 + 16) = a2;
    bzero((void *)(v5 + 32), 4 * a2);
  }
  else
  {
    v5 = MEMORY[0x24BEE4AF8];
  }
  v23 = (char *)v5;
  v6 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))(*(_QWORD *)v2 + 320))(v22);
  v8 = v7;
  v9 = *v7;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v8 = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v9 = sub_24872BC20((uint64_t)v9);
    *v8 = v9;
  }
  v11 = (float *)*((_QWORD *)v9 + 2);
  v21[0] = (float *)(v9 + 32);
  v21[1] = v11;
  v12 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))(*(_QWORD *)v2 + 344))(v20);
  v14 = v13;
  v15 = *v13;
  v16 = swift_isUniquelyReferenced_nonNull_native();
  *v14 = v15;
  if ((v16 & 1) == 0)
  {
    v15 = sub_24872BC20((uint64_t)v15);
    *v14 = v15;
  }
  v17 = (float *)*((_QWORD *)v15 + 2);
  v19[0] = (float *)(v15 + 32);
  v19[1] = v17;
  sub_24872B764(v19, v21, a1, v2, a2, &v23);
  *v14 = v15;
  v12(v20, 0);
  *v8 = v9;
  v6(v22, 0);
  return v23;
}

uint64_t sub_24872B764(float **a1, float **a2, const float *a3, uint64_t a4, unsigned int a5, char **a6)
{
  float *v6;
  const float *v10;
  uint64_t (*v11)(_QWORD *);
  void (*v12)(_QWORD *, _QWORD);
  char **v13;
  char **v14;
  char *v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t (*v17)(_QWORD *, _QWORD);
  char **v18;
  char **v19;
  char *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  OpaqueFFTSetup *v24;
  vDSP_Length v25;
  void (*v26)(_QWORD *, _QWORD);
  char **v27;
  char **v28;
  char *v29;
  char v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char v38;
  DSPSplitComplex __Z;
  _QWORD __B[5];

  __B[4] = *MEMORY[0x24BDAC8D0];
  if (!*a2)
  {
    __break(1u);
    goto LABEL_14;
  }
  v6 = *a1;
  if (!*a1)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __Z.realp = *a2;
  __Z.imagp = v6;
  v10 = (const float *)((*(uint64_t (**)(void))(*(_QWORD *)a4 + 400))() + 32);
  v11 = *(uint64_t (**)(_QWORD *))(*(_QWORD *)a4 + 368);
  v12 = (void (*)(_QWORD *, _QWORD))v11(__B);
  v14 = v13;
  v15 = *v13;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v14 = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v15 = sub_24872BB28(0, *((_QWORD *)v15 + 2), 0, v15);
  *v14 = v15;
  swift_bridgeObjectRetain();
  vDSP_vmul(a3, 1, v10, 1, (float *)v15 + 8, 1, a5);
  v12(__B, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = (uint64_t (*)(_QWORD *, _QWORD))v11(__B);
  v19 = v18;
  v20 = *v18;
  v21 = swift_isUniquelyReferenced_nonNull_native();
  *v19 = v20;
  if ((v21 & 1) == 0)
  {
    v20 = sub_24872BC20((uint64_t)v20);
    *v19 = v20;
  }
  (*(void (**)(void))(*(_QWORD *)a4 + 352))();
  swift_bridgeObjectRelease();
  vDSP_ctoz((const DSPComplex *)v20 + 4, 2, &__Z, 1, a5);
  *v19 = v20;
  v22 = v17(__B, 0);
  v23 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a4 + 424))(v22);
  if (!v23)
LABEL_15:
    __break(1u);
  v24 = (OpaqueFFTSetup *)v23;
  v25 = (*(uint64_t (**)(void))(*(_QWORD *)a4 + 208))();
  vDSP_fft_zrip(v24, &__Z, 1, v25, 1);
  v26 = (void (*)(_QWORD *, _QWORD))(*(uint64_t (**)(_QWORD *))(*(_QWORD *)a4 + 392))(__B);
  v28 = v27;
  v29 = *v27;
  v30 = swift_isUniquelyReferenced_nonNull_native();
  *v28 = v29;
  if ((v30 & 1) == 0)
    v29 = sub_24872BB28(0, *((_QWORD *)v29 + 2), 0, v29);
  *v28 = v29;
  swift_bridgeObjectRetain();
  vDSP_zvmags(&__Z, 1, (float *)v29 + 8, 1, a5);
  v26(__B, 0);
  v31 = swift_bridgeObjectRelease();
  v32 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a4 + 376);
  __B[0] = v32(v31);
  v33 = MEMORY[0x24BDAC7A8](*(_QWORD *)(__B[0] + 16));
  v34 = sub_24872BC54(v33, (uint64_t (*)(_QWORD *, uint64_t *))sub_24872BDD0);
  swift_bridgeObjectRelease();
  v35 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a4 + 384))(v34);
  v36 = v32(v35);
  LODWORD(__B[0]) = (*(float (**)(void))(*(_QWORD *)a4 + 280))();
  v37 = *a6;
  v38 = swift_isUniquelyReferenced_nonNull_native();
  *a6 = v37;
  if ((v38 & 1) == 0)
    v37 = sub_24872BB28(0, *((_QWORD *)v37 + 2), 0, v37);
  *a6 = v37;
  vDSP_vsmul((const float *)(v36 + 32), 1, (const float *)__B, (float *)v37 + 8, 1, a5);
  return swift_bridgeObjectRelease();
}

double sub_24872BABC()
{
  uint64_t v0;
  double result;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 24) = 1;
  *(_QWORD *)(v0 + 32) = 0;
  *(_BYTE *)(v0 + 40) = 1;
  *(_QWORD *)(v0 + 48) = 0;
  *(_BYTE *)(v0 + 56) = 1;
  *(_QWORD *)(v0 + 64) = 0;
  *(_BYTE *)(v0 + 72) = 1;
  *(_DWORD *)(v0 + 76) = 0;
  *(_BYTE *)(v0 + 80) = 1;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 120) = 0u;
  *(_BYTE *)(v0 + 136) = 1;
  result = 134217764.0;
  *(_QWORD *)(v0 + 140) = 0x41A00000473B8000;
  return result;
}

char *sub_24872BB28(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25777CF48);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 29;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8])
      memmove(v13, v14, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 4 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_24872BC20(uint64_t a1)
{
  return sub_24872BB28(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t type metadata accessor for AudioPowerLevelNormalizer()
{
  return objc_opt_self();
}

uint64_t sub_24872BC54(uint64_t result, uint64_t (*a2)(_QWORD *, uint64_t *))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[2];
  uint64_t v8;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  v4 = result;
  if (result)
  {
    v5 = sub_2487B56B4();
    *(_QWORD *)(v5 + 16) = v4;
  }
  else
  {
    v5 = MEMORY[0x24BEE4AF8];
  }
  v6 = v5 + 32;
  v7[1] = v4;
  v8 = 0;
  v7[0] = v5 + 32;
  result = a2(v7, &v8);
  if (v2)
  {
    if (v8 <= v4)
    {
      if (!v7[0])
      {
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      if (v6 == v7[0])
      {
        *(_QWORD *)(v5 + 16) = v8;
        swift_bridgeObjectRelease();
        return v5;
      }
      goto LABEL_17;
    }
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v8 > v4)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v7[0])
  {
    if (v6 == v7[0])
    {
      *(_QWORD *)(v5 + 16) = v8;
      return v5;
    }
    goto LABEL_19;
  }
LABEL_21:
  __break(1u);
  return result;
}

void sub_24872BD4C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  int v3;
  uint64_t v4;

  v4 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 8))
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v2 >> 31)
  {
LABEL_6:
    __break(1u);
LABEL_7:
    __break(1u);
  }
  v3 = *(_QWORD *)(a1 + 16);
  if (!*(_QWORD *)a2)
    goto LABEL_7;
  vvsqrtf(*(float **)a2, (const float *)(a1 + 32), &v3);
}

void sub_24872BDD0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = **(_QWORD **)(v2 + 16);
  sub_24872BD4C(v4, a1);
  *a2 = *(_QWORD *)(v4 + 16);
}

id sub_24872BE18()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v1 = (void *)sub_2487B5504();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_24872BE80(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_msgSend(*a1, sel_relativePath);
  if (v3)
  {
    v4 = v3;
    v5 = sub_2487B5528();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_24872BEE4(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v3 = sub_2487B5504();
  else
    v3 = 0;
  v4 = (id)v3;
  objc_msgSend(v2, sel_setRelativePath_);

}

id sub_24872BF40@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_model);
  *a2 = result;
  return result;
}

id sub_24872BF78(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setModel_, *a1);
}

id sub_24872BF8C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_fileFuture);
  *a2 = result;
  return result;
}

id sub_24872BFC4(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFileFuture_, *a1);
}

id TTSVBCloudVoiceModelFileMO.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id TTSVBCloudVoiceModelFileMO.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for TTSVBCloudVoiceModelFileMO();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for TTSVBCloudVoiceModelFileMO()
{
  return objc_opt_self();
}

id TTSVBCloudVoiceModelFileMO.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTSVBCloudVoiceModelFileMO();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24872C130@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for TTSVBCloudVoiceModelFileMO();
  result = sub_2487B5ABC();
  *a1 = result;
  return result;
}

char *keypath_get_selector_relativePath()
{
  return sel_relativePath;
}

char *keypath_get_selector_model()
{
  return sel_model;
}

char *keypath_get_selector_fileFuture()
{
  return sel_fileFuture;
}

uint64_t method lookup function for TTSVBCloudVoiceModelFileMO()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static TTSVBCloudVoiceModelFileMO.fetchRequest()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

_QWORD *sub_24872C1A4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)swift_allocObject();
  v2[4] = 0;
  v2[5] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED18);
  v3 = swift_allocObject();
  *(_DWORD *)(v3 + 16) = 0;
  v2[6] = v3;
  v2[2] = a1;
  v2[3] = sub_24872C214(0, 0, a1);
  return v2;
}

_QWORD *sub_24872C214(_QWORD *result, void *a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  id v11;

  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    if (a3)
    {
      v5 = result;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25777D0B0);
      v6 = (_QWORD *)sub_2487B56B4();
      v7 = v6;
      v6[2] = a3;
      v6[4] = v5;
      v6[5] = a2;
      if (a3 != 1)
      {
        v6[6] = v5;
        v6[7] = a2;
        v8 = a3 - 2;
        if (v8)
        {
          v9 = v6 + 9;
          do
          {
            *(v9 - 1) = v5;
            *v9 = a2;
            v10 = a2;
            v9 += 2;
            --v8;
          }
          while (v8);
        }
        v11 = a2;
      }
    }
    else
    {

      return (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    return v7;
  }
  return result;
}

uint64_t sub_24872C2BC()
{
  uint64_t *v0;
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;

  v1 = (os_unfair_lock_s *)v0[6];
  swift_retain();
  os_unfair_lock_lock(v1 + 4);
  swift_release();
  v0[3] = (uint64_t)sub_24872C214(0, 0, v0[2]);
  swift_bridgeObjectRelease();
  v0[4] = 0;
  v0[5] = 0;
  v2 = (os_unfair_lock_s *)v0[6];
  swift_retain();
  os_unfair_lock_unlock(v2 + 4);
  return swift_release();
}

void sub_24872C33C(void *a1, double a2)
{
  _QWORD *v2;
  os_unfair_lock_s *v5;
  unint64_t v6;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;
  double *v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_unfair_lock_s *v19;

  v5 = (os_unfair_lock_s *)v2[6];
  swift_retain();
  os_unfair_lock_lock(v5 + 4);
  swift_release();
  v6 = v2[5];
  v7 = (_QWORD *)v2[3];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v2[3] = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    if ((v6 & 0x8000000000000000) == 0)
      goto LABEL_3;
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v7 = sub_24872C638(v7);
  v2[3] = v7;
  if ((v6 & 0x8000000000000000) != 0)
    goto LABEL_11;
LABEL_3:
  if (v6 >= v7[2])
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v9 = (double *)&v7[2 * v6];
  v10 = (void *)*((_QWORD *)v9 + 5);
  v9[4] = a2;
  *((_QWORD *)v9 + 5) = a1;
  v11 = v2[3];
  v12 = a1;

  v13 = v2[5];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v16 = *(_QWORD *)(v11 + 16);
  if (!v16)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v17 = v15 % v16;
  v2[5] = v17;
  if (v17 != v2[4])
  {
LABEL_9:
    v19 = (os_unfair_lock_s *)v2[6];
    swift_retain();
    os_unfair_lock_unlock(v19 + 4);
    swift_release();
    return;
  }
  v18 = *(_QWORD *)(v11 + 16);
  if (v18)
  {
    v2[4] = (v17 + 1) % v18;
    goto LABEL_9;
  }
LABEL_15:
  __break(1u);
}

void sub_24872C458(void *a1, double a2)
{
  uint64_t v2;
  void (*v4)(double);
  id v5;

  v4 = *(void (**)(double))(*(_QWORD *)v2 + 256);
  v5 = a1;
  v4(a2);

}

void sub_24872C4A0(double a1, double a2)
{
  _QWORD *v2;
  os_unfair_lock_s *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  double v11;
  id v13;
  os_unfair_lock_s *v14;
  uint64_t v15;

  v15 = MEMORY[0x24BEE4AF8];
  v5 = (os_unfair_lock_s *)v2[6];
  swift_retain();
  os_unfair_lock_lock(v5 + 4);
  swift_release();
  v6 = v2[4];
  if (v6 == v2[5])
  {
LABEL_15:
    v14 = (os_unfair_lock_s *)v2[6];
    swift_retain();
    os_unfair_lock_unlock(v14 + 4);
    swift_release();
  }
  else
  {
    v7 = v2[3];
    while ((v6 & 0x8000000000000000) == 0)
    {
      v8 = *(_QWORD *)(v7 + 16);
      if (v6 >= v8)
        goto LABEL_17;
      v9 = v7 + 16 * v6;
      v10 = *(void **)(v9 + 40);
      if (v10)
      {
        v11 = *(double *)(v9 + 32);
        if (v11 >= a1 && v11 <= a2)
        {
          v13 = v10;
          MEMORY[0x249599FCC]();
          if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_2487B569C();
          sub_2487B56C0();
          sub_2487B5690();

          v7 = v2[3];
          v8 = *(_QWORD *)(v7 + 16);
          if (!v8)
            goto LABEL_18;
        }
      }
      v6 = (v6 + 1) % v8;
      if (v6 == v2[5])
        goto LABEL_15;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
}

uint64_t sub_24872C60C()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

_QWORD *sub_24872C638(_QWORD *a1)
{
  return sub_24872C7B4(0, a1[2], 0, a1);
}

_QWORD *initializeBufferWithCopyOfBuffer for TTSVBAudioBufferHistoryItem(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = v3;
  return a1;
}

void destroy for TTSVBAudioBufferHistoryItem(uint64_t a1)
{

}

_QWORD *assignWithCopy for TTSVBAudioBufferHistoryItem(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;

  *a1 = *a2;
  v3 = (void *)a2[1];
  v4 = (void *)a1[1];
  a1[1] = v3;
  v5 = v3;

  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for TTSVBAudioBufferHistoryItem(_QWORD *a1, _QWORD *a2)
{
  void *v3;

  *a1 = *a2;
  v3 = (void *)a1[1];
  a1[1] = a2[1];

  return a1;
}

uint64_t getEnumTagSinglePayload for TTSVBAudioBufferHistoryItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTSVBAudioBufferHistoryItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSVBAudioBufferHistoryItem()
{
  return &type metadata for TTSVBAudioBufferHistoryItem;
}

uint64_t type metadata accessor for TTSVBAudioBufferHistory()
{
  return objc_opt_self();
}

_QWORD *sub_24872C7B4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25777D0A8);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[2 * v8 + 4])
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25777D0B0);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

id sub_24872C8D8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager____lazy_storage___trainerSession;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager____lazy_storage___trainerSession);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager____lazy_storage___trainerSession);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)TTSVBSiriTTSTrainerSession), sel_init);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id TTSVBVoiceBankingManager.audioService.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager____lazy_storage___audioService;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager____lazy_storage___audioService);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager____lazy_storage___audioService);
  }
  else
  {
    v4 = v0;
    type metadata accessor for TTSVBAudioService();
    v5 = TTSVBAudioService.__allocating_init()();
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_24872C9B4@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = TTSVBVoiceBankingManager.audioService.getter();
  *a1 = result;
  return result;
}

void sub_24872C9DC(void **a1, _QWORD *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *a1;
  v4 = *(id *)(*a2
             + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager____lazy_storage___audioService);
  *(_QWORD *)(*a2
            + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager____lazy_storage___audioService) = *a1;
  v3 = v2;

}

void TTSVBVoiceBankingManager.audioService.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1
                + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager____lazy_storage___audioService);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager____lazy_storage___audioService) = a1;

}

void (*TTSVBVoiceBankingManager.audioService.modify(id *a1))(uint64_t *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = TTSVBVoiceBankingManager.audioService.getter();
  return sub_24872CA60;
}

void sub_24872CA60(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *a1;
  v1 = a1[1];
  v3 = *(void **)(v1
                + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager____lazy_storage___audioService);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager____lazy_storage___audioService) = v2;

}

id TTSVBVoiceBankingManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

char *TTSVBVoiceBankingManager.init()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  _QWORD v23[5];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  objc_class *ObjectType;
  char *v28;
  uint64_t v29;
  objc_super v30;
  uint64_t v31;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v29 = type metadata accessor for TTSVBPath();
  MEMORY[0x24BDAC7A8](v29);
  v28 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_2487B5828();
  v3 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2487B5804();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v6);
  v8 = sub_2487B5408();
  MEMORY[0x24BDAC7A8](v8);
  v26 = OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_calloutQueue;
  v23[4] = sub_24870A34C(0, (unint64_t *)&qword_25445F6C0);
  v9 = v1;
  sub_2487B53F0();
  v31 = MEMORY[0x24BEE4AF8];
  v23[2] = sub_2486F4CA0((unint64_t *)&unk_25445F6B0, v7, MEMORY[0x24BEE5698]);
  v23[1] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F360);
  v23[3] = sub_24871869C((unint64_t *)&unk_25445F6A0, (uint64_t *)&unk_25445F360, MEMORY[0x24BEE12C8]);
  sub_2487B59FC();
  v10 = *MEMORY[0x24BEE5750];
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v12 = v5;
  v13 = v5;
  v14 = v24;
  v11(v13, v10, v24);
  *(_QWORD *)(v25 + v26) = sub_2487B584C();
  v26 = OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue;
  sub_2487B53F0();
  v31 = MEMORY[0x24BEE4AF8];
  sub_2487B59FC();
  v11(v12, v10, v14);
  *(_QWORD *)&v9[v26] = sub_2487B584C();
  *(_QWORD *)&v9[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager____lazy_storage___trainerSession] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager____lazy_storage___audioService] = 0;

  v30.receiver = v9;
  v30.super_class = ObjectType;
  v15 = (char *)objc_msgSendSuper2(&v30, sel_init);
  LOBYTE(v12) = TTSVBProcessIsVoicebankingd();
  type metadata accessor for TTSVBDataStore(0);
  LOBYTE(v31) = (_BYTE)v12;
  v16 = (uint64_t)v28;
  swift_storeEnumTagMultiPayload();
  v17 = sub_2487B50CC();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTSVBPath.url.getter((uint64_t)v19);
  sub_2486EDA68(v16, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBPath);
  v20 = sub_24877359C((unsigned __int8 *)&v31, v19);

  v21 = *(void **)&v15[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore];
  *(_QWORD *)&v15[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore] = v20;

  return v15;
}

uint64_t TTSVBVoiceBankingManager.voiceBankingName.getter()
{
  return 0x6563696F56535454;
}

uint64_t TTSVBVoiceBankingManager.loadStores(_:)(uint64_t a1, uint64_t a2)
{
  return sub_24872CF30(a1, a2, (uint64_t)&unk_251992320, (uint64_t)sub_24872CEE0, (void (*)(uint64_t, _QWORD *))sub_2487746C4);
}

uint64_t sub_24872CEE0(uint64_t a1)
{
  uint64_t *v1;

  return sub_24872CFCC(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_251993750, (uint64_t)sub_248750D58, (uint64_t)&block_descriptor_395);
}

uint64_t TTSVBVoiceBankingManager.initializeCloudKitSchema(_:)(uint64_t a1, uint64_t a2)
{
  return sub_24872CF30(a1, a2, (uint64_t)&unk_251992348, (uint64_t)sub_24872D238, (void (*)(uint64_t, _QWORD *))sub_248776350);
}

uint64_t sub_24872CF30(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, _QWORD *))
{
  char *v5;
  void *v6;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  char *v13;

  v6 = *(void **)&v5[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore];
  if (v6)
  {
    v10 = result;
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = v5;
    v11[3] = v10;
    v11[4] = a2;
    v12 = v6;
    v13 = v5;
    swift_retain();
    a5(a4, v11);

    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24872CFCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v24 = a6;
  v25 = a7;
  v22 = a5;
  v23 = a3;
  v9 = sub_2487B53D8();
  v28 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2487B5408();
  v26 = *(_QWORD *)(v12 - 8);
  v27 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1C8);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v15);
  sub_2486F4E74(a1, (uint64_t)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_25445F1C8);
  v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v23;
  *(_QWORD *)(v19 + 24) = a4;
  sub_2486F4F70((uint64_t)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18, &qword_25445F1C8);
  aBlock[4] = v24;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F1008;
  aBlock[3] = v25;
  v20 = _Block_copy(aBlock);
  swift_retain();
  sub_2487B53E4();
  v29 = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
  sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
  sub_2487B59FC();
  MEMORY[0x24959A1AC](0, v14, v11, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v27);
  return swift_release();
}

uint64_t sub_24872D238(uint64_t a1)
{
  uint64_t *v1;

  return sub_24872CFCC(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_251993700, (uint64_t)sub_248750D58, (uint64_t)&block_descriptor_389);
}

void TTSVBVoiceBankingManager.dataStoreEventPublisher.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore);
  if (v1)
  {
    v2 = v1;
    TTSVBDataStore.eventPublisher.getter();

  }
  else
  {
    __break(1u);
  }
}

void TTSVBVoiceBankingManager.viewContext.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  char v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore);
  if (v1)
  {
    v3 = 0;
    v2 = v1;
    sub_2487749A0(&v3);

  }
  else
  {
    __break(1u);
  }
}

void TTSVBVoiceBankingManager.fetchVoices(completion:)(uint64_t a1, uint64_t a2)
{
  sub_248730A88(a1, a2, (uint64_t)&unk_251992370, (uint64_t)sub_24872D700, (uint64_t)&block_descriptor_1);
}

uint64_t sub_24872D320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)();
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD aBlock[6];

  v33 = a3;
  v34 = a4;
  v32[1] = a2;
  v5 = type metadata accessor for TTSVBVoice();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (_QWORD *)((char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_2487B53D8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v38 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2487B5408();
  v36 = *(_QWORD *)(v12 - 8);
  v37 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v35 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TTSVBLocalVoiceMO();
  v15 = sub_248787BD4(v14, (uint64_t)&protocol witness table for TTSVBLocalVoiceMO);
  v41 = v14;
  v17 = static DSO<>.fetch(in:config:)(a1, (void (*)(id))v15, v16, v14, (uint64_t)&protocol witness table for TTSVBLocalVoiceMO);
  swift_release();
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    v18 = sub_2487B5B64();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v39 = v10;
  v40 = v9;
  if (!v18)
  {
    swift_bridgeObjectRelease();
    v21 = MEMORY[0x24BEE4AF8];
LABEL_14:
    v26 = (_QWORD *)swift_allocObject();
    v27 = v34;
    v26[2] = v33;
    v26[3] = v27;
    v26[4] = v21;
    aBlock[4] = sub_248750AF8;
    aBlock[5] = v26;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2486F1008;
    aBlock[3] = &block_descriptor_383;
    v28 = _Block_copy(aBlock);
    swift_retain();
    v29 = v35;
    sub_2487B53E4();
    v42 = MEMORY[0x24BEE4AF8];
    sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
    sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
    v30 = v38;
    v31 = v40;
    sub_2487B59FC();
    MEMORY[0x24959A1AC](0, v29, v30, v28);
    _Block_release(v28);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v30, v31);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v29, v37);
    return swift_release();
  }
  aBlock[0] = MEMORY[0x24BEE4AF8];
  result = sub_24874C554(0, v18 & ~(v18 >> 63), 0);
  if ((v18 & 0x8000000000000000) == 0)
  {
    v20 = 0;
    v21 = aBlock[0];
    do
    {
      if ((v17 & 0xC000000000000001) != 0)
        v22 = (id)MEMORY[0x24959A434](v20, v17);
      else
        v22 = *(id *)(v17 + 8 * v20 + 32);
      v23 = v22;
      TTSVBCommonVoiceMO.immutableVoice()(v41, (uint64_t)&protocol witness table for TTSVBLocalVoiceMO, v8);

      aBlock[0] = v21;
      v25 = *(_QWORD *)(v21 + 16);
      v24 = *(_QWORD *)(v21 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_24874C554(v24 > 1, v25 + 1, 1);
        v21 = aBlock[0];
      }
      ++v20;
      *(_QWORD *)(v21 + 16) = v25 + 1;
      sub_24870A2C4((uint64_t)v8, v21+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v25, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoice);
    }
    while (v18 != v20);
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_24872D700()
{
  uint64_t *v0;

  return sub_24872D320(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t TTSVBVoiceBankingManager.createVoice(named:localeID:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  uint64_t result;
  _QWORD *v14;
  id v15;

  result = TTSVBProcessIsVoicebankingd();
  if ((_DWORD)result)
  {
    v14 = (_QWORD *)swift_allocObject();
    v14[2] = v6;
    v14[3] = a1;
    v14[4] = a2;
    v14[5] = a3;
    v14[6] = a4;
    v15 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24872DB98((uint64_t)v14, a5, a6);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24872D7C8()
{
  return objectdestroy_8Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

void sub_24872D7D4(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_24872D800(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), a1);
}

void sub_24872D800(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v38 = a1;
  v6 = v5;
  v39 = a3;
  v10 = sub_2487B533C();
  v40 = *(_QWORD *)(v10 - 8);
  v41 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2487B542C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (uint64_t *)((char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(void **)(v6 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue);
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BEE5610], v13);
  v18 = v17;
  LOBYTE(v17) = sub_2487B5444();
  (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) != 0)
  {
    v19 = sub_2487B0D54();
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v12, v19, v41);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v20 = sub_2487B5324();
    v21 = sub_2487B57BC();
    v22 = os_log_type_enabled(v20, v21);
    v37 = a4;
    if (v22)
    {
      v23 = swift_slowAlloc();
      v35 = v6;
      v24 = v23;
      v25 = swift_slowAlloc();
      v36 = a5;
      v26 = v25;
      v43 = v25;
      *(_DWORD *)v24 = 136315394;
      swift_bridgeObjectRetain();
      v42 = sub_2486EDE5C(v38, a2, &v43);
      sub_2487B593C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v24 + 12) = 2080;
      swift_bridgeObjectRetain();
      v42 = sub_2486EDE5C(v39, a4, &v43);
      sub_2487B593C();
      v6 = v35;
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2486E6000, v20, v21, "Will create voice datastore entry with name: %s (locale: %s)", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v26, -1, -1);
      MEMORY[0x24959AF80](v24, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v41);
    v27 = *(void **)(v6 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore);
    if (v27)
    {
      LOBYTE(v43) = 1;
      v28 = v27;
      v29 = sub_2487749A0(&v43);

      type metadata accessor for TTSVBLocalVoiceMO();
      v30 = v38;
      v31 = (void *)static TTSVBLocalVoiceMO.voiceForNamePredicate(_:)(v38, a2);
      v32 = MEMORY[0x24BDAC7A8](v31);
      *(&v34 - 6) = (uint64_t)v29;
      *(&v34 - 5) = v32;
      *(&v34 - 4) = v30;
      *(&v34 - 3) = a2;
      v33 = v37;
      *(&v34 - 2) = v39;
      *(&v34 - 1) = v33;
      sub_2487B5228();
      sub_2487B58A0();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_24872DB98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  void *v16;
  char *v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v7 = sub_2487B53D8();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v20 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2487B5408();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(_QWORD *)&v3[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue];
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = sub_24872D7D4;
  v15[3] = a1;
  v15[4] = v3;
  v15[5] = a2;
  v15[6] = a3;
  aBlock[4] = sub_248750BCC;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F1008;
  aBlock[3] = &block_descriptor_365;
  v16 = _Block_copy(aBlock);
  swift_retain();
  v17 = v3;
  swift_retain();
  sub_2487B53E4();
  v21 = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F670, v8, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
  sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
  sub_2487B59FC();
  MEMORY[0x24959A1AC](0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

uint64_t sub_24872DDB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  void *v16;
  char *v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v7 = sub_2487B53D8();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v20 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2487B5408();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(_QWORD *)&v3[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue];
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = sub_24874C3D8;
  v15[3] = a1;
  v15[4] = v3;
  v15[5] = a2;
  v15[6] = a3;
  aBlock[4] = sub_24875069C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F1008;
  aBlock[3] = &block_descriptor_257;
  v16 = _Block_copy(aBlock);
  swift_retain();
  v17 = v3;
  swift_retain();
  sub_2487B53E4();
  v21 = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F670, v8, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
  sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
  sub_2487B59FC();
  MEMORY[0x24959A1AC](0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

uint64_t sub_24872DFD8@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint8_t *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t (*v46)(char *, uint64_t);
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56[16];
  void *v57;
  __int128 v58;
  char v59;
  uint64_t v60;

  v51 = a6;
  v50 = a5;
  v54 = a7;
  v55 = a4;
  v53 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v53);
  v11 = (uint64_t *)((char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_2487B533C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v48 - v17;
  v19 = type metadata accessor for TTSVBLocalVoiceMO();
  v57 = a2;
  if (static DSO<>.count(in:configure:)((uint64_t)a1, (void (*)(void))sub_248750308, (uint64_t)v56, v19, (uint64_t)&protocol witness table for TTSVBLocalVoiceMO) < 1)
  {
    v49 = v16;
    v27 = v54;
    v28 = sub_2487B521C();
    MEMORY[0x24BDAC7A8](v28);
    v29 = v55;
    *(&v48 - 6) = a3;
    *(&v48 - 5) = v29;
    v30 = v50;
    *(&v48 - 4) = v27;
    *(&v48 - 3) = v30;
    *(&v48 - 2) = v51;

    NSManagedObjectContext.trySave()();
    if (v31)
    {
      v32 = sub_2487B5228();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v27, v32);
    }
    else
    {
      v54 = a3;
      v37 = sub_2487B0D54();
      v38 = v49;
      v39 = v12;
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v49, v37, v12);
      swift_bridgeObjectRetain_n();
      v40 = sub_2487B5324();
      v41 = sub_2487B57BC();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = swift_slowAlloc();
        v52 = v13;
        v43 = (uint8_t *)v42;
        v44 = swift_slowAlloc();
        *(_QWORD *)&v58 = v44;
        *(_DWORD *)v43 = 136315138;
        v45 = v55;
        swift_bridgeObjectRetain();
        v60 = sub_2486EDE5C(v54, v45, (uint64_t *)&v58);
        sub_2487B593C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_2486E6000, v40, v41, "Did create voice datastore entry with name: %s", v43, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24959AF80](v44, -1, -1);
        MEMORY[0x24959AF80](v43, -1, -1);

        v46 = *(uint64_t (**)(char *, uint64_t))(v52 + 8);
        v47 = v49;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        v46 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
        v47 = v38;
      }
      return v46(v47, v39);
    }
  }
  else
  {
    v54 = a3;
    v20 = sub_2487B0D54();
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v18, v20, v12);
    swift_bridgeObjectRetain_n();
    v21 = sub_2487B5324();
    v22 = sub_2487B57BC();
    if (os_log_type_enabled(v21, v22))
    {
      v51 = v12;
      v23 = swift_slowAlloc();
      v52 = v13;
      v24 = (uint8_t *)v23;
      v25 = swift_slowAlloc();
      *(_QWORD *)&v58 = v25;
      *(_DWORD *)v24 = 136315138;
      v26 = v55;
      swift_bridgeObjectRetain();
      v60 = sub_2486EDE5C(v54, v26, (uint64_t *)&v58);
      sub_2487B593C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2486E6000, v21, v22, "Datastore already contains voice with name: %s. Bailing on create voice", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v25, -1, -1);
      MEMORY[0x24959AF80](v24, -1, -1);

      (*(void (**)(char *, uint64_t))(v52 + 8))(v18, v51);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    }
    v58 = xmmword_2487BE5F0;
    v59 = 3;
    v34 = v55;
    *v11 = v54;
    v11[1] = v34;
    swift_storeEnumTagMultiPayload();
    type metadata accessor for TTSVBError(0);
    sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
    swift_allocError();
    v36 = v35;
    swift_bridgeObjectRetain();
    TTSVBError.init(_:_:_:)((uint64_t)&v58, (uint64_t)v11, 0, v36);
    return swift_willThrow();
  }
}

uint64_t TTSVBVoiceBankingManager.deleteVoice(withID:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_248734494(a1, a2, a3, (uint64_t)&unk_2519923E8, (uint64_t)sub_24872E51C);
}

uint64_t sub_24872E51C()
{
  return sub_248735EA4((uint64_t (*)(uint64_t))sub_24872E538);
}

void sub_24872E538(id **a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  id v22;
  char v23;
  uint64_t v24;
  void (*v25)(id **, uint64_t, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  void (*v29)(char *, id **, uint64_t);
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint8_t *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  void *v43;
  id **v44;
  id v45;
  id *v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  id **v50;
  uint64_t v51;
  id **v52;
  NSObject *v53;
  os_log_type_t v54;
  _BOOL4 v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  id **v60;
  uint64_t v61;
  uint64_t *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  id **v67;
  uint64_t v68;
  void (*v69)(char *);
  uint64_t v70;
  id v71;
  _QWORD *v72;
  void (*v73)(char *, uint64_t);
  void (*v74)(char *, uint64_t);
  id **v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  _BOOL4 v82;
  uint8_t *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  unint64_t v91;
  id **v92;
  uint64_t v93;
  void (*v94)(char *, id **, uint64_t);
  id v95;
  _QWORD *v96;
  id **v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id **v101;
  id **v102;
  NSObject *v103;
  os_log_type_t v104;
  uint8_t *v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  id **v110;
  uint64_t v111;
  id v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  id v116;
  _QWORD *v117;
  void (*v118)(id **, uint64_t);
  uint64_t v119;
  uint64_t v120;
  char *v121;
  NSObject *v122;
  os_log_type_t v123;
  uint8_t *v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  id *v131;
  id v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  void (*v136)(char *, id **, uint64_t);
  id v137;
  _QWORD *v138;
  void (*v139)(id **, uint64_t);
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  id v143;
  id v144;
  _QWORD *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  NSObject *v151;
  os_log_type_t v152;
  uint64_t v153;
  uint8_t *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  id **v159;
  id v160;
  id *v161;
  void (*v162)(char *, id **, uint64_t);
  __int128 v163;
  id *v164;
  id **v165;
  uint64_t v166;
  uint64_t v167;
  void (*v168)(char *, uint64_t);
  uint64_t v169;
  char *v170;
  char *v171;
  id **v172;
  char *v173;
  void (*v174)(char *, id **, uint64_t);
  id **v175;
  uint64_t v176;
  void (*v177)(id **, uint64_t, uint64_t);
  uint64_t v178;
  char *v179;
  id **v180;
  void (*v181)(char *, uint64_t);
  uint64_t v182;
  uint64_t v183;
  id **v184;
  uint64_t v185;
  _QWORD *v186;
  uint64_t v187;
  __int128 v188;
  char v189;
  uint64_t v190[2];
  id v191;

  v178 = type metadata accessor for TTSVBPath();
  MEMORY[0x24BDAC7A8](v178);
  v179 = (char *)&v161 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2487B533C();
  v186 = *(_QWORD **)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v170 = (char *)&v161 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v171 = (char *)&v161 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v172 = (id **)((char *)&v161 - v10);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v173 = (char *)&v161 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v175 = (id **)((char *)&v161 - v14);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v161 - v15;
  v17 = sub_2487B542C();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (id **)((char *)&v161 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v182 = v1;
  v21 = *(void **)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue);
  *v20 = v21;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x24BEE5610], v17);
  v22 = v21;
  v23 = sub_2487B5444();
  (*(void (**)(_QWORD *, uint64_t))(v18 + 8))(v20, v17);
  if ((v23 & 1) == 0)
  {
    __break(1u);
LABEL_35:
    __break(1u);
    return;
  }
  v24 = sub_2487B0B90();
  v25 = (void (*)(id **, uint64_t, uint64_t))v186[2];
  v176 = v24;
  v177 = v25;
  ((void (*)(char *))v25)(v16);
  v26 = sub_2487B5228();
  v180 = &v161;
  v27 = *(_QWORD **)(v26 - 8);
  v28 = v27[8];
  MEMORY[0x24BDAC7A8](v26);
  v183 = v4;
  v184 = a1;
  v29 = (void (*)(char *, id **, uint64_t))v27[2];
  v29((char *)&v161 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v26);
  v30 = sub_2487B5324();
  v31 = sub_2487B57E0();
  v32 = os_log_type_enabled(v30, v31);
  v169 = v28;
  if (v32)
  {
    v33 = swift_slowAlloc();
    v185 = v26;
    v34 = (uint8_t *)v33;
    v35 = swift_slowAlloc();
    v174 = v29;
    v36 = v35;
    v190[0] = v35;
    *(_DWORD *)v34 = 136315138;
    v168 = (void (*)(char *, uint64_t))(v34 + 4);
    sub_2486F4CA0(&qword_25777D0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA50], MEMORY[0x24BDCEAC0]);
    v37 = sub_2487B5CCC();
    v187 = sub_2486EDE5C(v37, v38, v190);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    v168 = (void (*)(char *, uint64_t))v27[1];
    v168((char *)&v161 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), v185);
    _os_log_impl(&dword_2486E6000, v30, v31, "Will delete voice and all related data with VoiceID: %s", v34, 0xCu);
    swift_arrayDestroy();
    v39 = v36;
    v29 = v174;
    MEMORY[0x24959AF80](v39, -1, -1);
    v40 = v34;
    v26 = v185;
    MEMORY[0x24959AF80](v40, -1, -1);
  }
  else
  {
    v168 = (void (*)(char *, uint64_t))v27[1];
    v168((char *)&v161 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), v26);
  }

  v41 = (void (*)(char *, uint64_t))v186[1];
  v42 = v183;
  v41(v16, v183);
  v43 = *(void **)(v182 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore);
  v44 = v184;
  if (!v43)
    goto LABEL_35;
  LOBYTE(v190[0]) = 1;
  v45 = v43;
  v46 = (id *)sub_2487749A0(v190);

  MEMORY[0x24BDAC7A8](v47);
  *(&v161 - 2) = (id *)v44;
  *(&v161 - 1) = v46;
  v48 = v181;
  sub_2487B58A0();
  v186 = v48;
  if (v48)
  {

    return;
  }
  v181 = v41;
  v164 = v46;
  v182 = sub_2487B50CC();
  v166 = *(_QWORD *)(v182 - 8);
  MEMORY[0x24BDAC7A8](v182);
  v167 = v49;
  v50 = (id **)((char *)&v161 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
  v51 = (uint64_t)v179;
  v29(v179, v44, v26);
  swift_storeEnumTagMultiPayload();
  TTSVBPath.url.getter((uint64_t)v50);
  sub_2486EDA68(v51, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBPath);
  v52 = v175;
  v177(v175, v176, v42);
  v53 = sub_2487B5324();
  v54 = sub_2487B57E0();
  v55 = os_log_type_enabled(v53, v54);
  v165 = &v161;
  v185 = v26;
  if (v55)
  {
    v56 = (uint8_t *)swift_slowAlloc();
    v57 = swift_slowAlloc();
    v190[0] = v57;
    *(_DWORD *)v56 = 136315138;
    swift_beginAccess();
    v58 = sub_2487B50B4();
    *(_QWORD *)&v188 = sub_2486EDE5C(v58, v59, v190);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2486E6000, v53, v54, "Deleting any staged trainings: %s", v56, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v57, -1, -1);
    MEMORY[0x24959AF80](v56, -1, -1);

    v60 = v175;
    v61 = v183;
  }
  else
  {

    v60 = v52;
    v61 = v42;
  }
  v181((char *)v60, v61);
  v62 = sub_24876D91C();
  v191 = (id)*v62;
  v63 = v191;
  v64 = swift_beginAccess();
  v175 = &v161;
  v65 = v167;
  MEMORY[0x24BDAC7A8](v64);
  v66 = (v65 + 15) & 0xFFFFFFFFFFFFFFF0;
  v67 = v50;
  v68 = v166;
  v69 = *(void (**)(char *))(v166 + 16);
  v180 = v67;
  v70 = v182;
  v69((char *)&v161 - v66);
  v163 = xmmword_2487BE600;
  v188 = xmmword_2487BE600;
  v189 = 3;
  v71 = v63;
  v72 = v186;
  _TTSVBFileManager.removeItem(_:problem:)((uint64_t)&v161 - v66, (uint64_t)&v188);
  v186 = v72;
  if (v72)
  {

    v73 = *(void (**)(char *, uint64_t))(v68 + 8);
    v73((char *)&v161 - v66, v70);

    v73((char *)v180, v70);
    return;
  }
  v162 = (void (*)(char *, id **, uint64_t))v69;
  v161 = (id *)v62;
  v74 = *(void (**)(char *, uint64_t))(v68 + 8);
  v75 = v184;
  v74((char *)&v161 - v66, v70);

  v76 = (uint64_t)v179;
  v29(v179, v75, v185);
  v77 = swift_storeEnumTagMultiPayload();
  MEMORY[0x24BDAC7A8](v77);
  TTSVBPath.url.getter((uint64_t)&v161 - v66);
  sub_2486EDA68(v76, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBPath);
  v175 = *(id ***)(v68 + 40);
  ((void (*)(id **, char *, uint64_t))v175)(v180, (char *)&v161 - v66, v70);
  v78 = v173;
  v79 = v183;
  v177((id **)v173, v176, v183);
  v80 = sub_2487B5324();
  v81 = sub_2487B57E0();
  v82 = os_log_type_enabled(v80, v81);
  v174 = v29;
  if (v82)
  {
    v83 = (uint8_t *)swift_slowAlloc();
    v84 = swift_slowAlloc();
    *(_QWORD *)&v188 = v84;
    *(_DWORD *)v83 = 136315138;
    v85 = sub_2487B50B4();
    v191 = (id)sub_2486EDE5C(v85, v86, (uint64_t *)&v188);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2486E6000, v80, v81, "Deleting user recordings: %s", v83, 0xCu);
    swift_arrayDestroy();
    v87 = v84;
    v79 = v183;
    MEMORY[0x24959AF80](v87, -1, -1);
    MEMORY[0x24959AF80](v83, -1, -1);
  }

  v88 = ((uint64_t (*)(char *, uint64_t))v181)(v78, v79);
  v191 = *v161;
  v89 = v191;
  v90 = v167;
  MEMORY[0x24BDAC7A8](v88);
  v91 = (v90 + 15) & 0xFFFFFFFFFFFFFFF0;
  v92 = v180;
  v93 = v182;
  v94((char *)&v161 - v91, v180, v182);
  v188 = v163;
  v189 = 3;
  v95 = v89;
  v96 = v186;
  _TTSVBFileManager.removeItem(_:problem:)((uint64_t)&v161 - v91, (uint64_t)&v188);
  v186 = v96;
  if (v96)
  {

    v74((char *)&v161 - v91, v93);
    v97 = v92;
    v98 = v93;
LABEL_17:
    v74((char *)v97, v98);
    return;
  }
  v173 = (char *)v74;
  v74((char *)&v161 - v91, v93);

  v99 = (uint64_t)v179;
  v174(v179, v184, v185);
  v100 = swift_storeEnumTagMultiPayload();
  v101 = v92;
  MEMORY[0x24BDAC7A8](v100);
  TTSVBPath.url.getter((uint64_t)&v161 - v91);
  sub_2486EDA68(v99, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBPath);
  ((void (*)(id **, char *, uint64_t))v175)(v92, (char *)&v161 - v91, v93);
  v102 = v172;
  v177(v172, v176, v79);
  v103 = sub_2487B5324();
  v104 = sub_2487B57E0();
  if (os_log_type_enabled(v103, v104))
  {
    v105 = (uint8_t *)swift_slowAlloc();
    v106 = swift_slowAlloc();
    *(_QWORD *)&v188 = v106;
    *(_DWORD *)v105 = 136315138;
    v107 = sub_2487B50B4();
    v191 = (id)sub_2486EDE5C(v107, v108, (uint64_t *)&v188);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2486E6000, v103, v104, "Deleting created models: %s", v105, 0xCu);
    swift_arrayDestroy();
    v109 = v106;
    v79 = v183;
    MEMORY[0x24959AF80](v109, -1, -1);
    MEMORY[0x24959AF80](v105, -1, -1);

    v110 = v172;
  }
  else
  {

    v110 = v102;
  }
  v111 = ((uint64_t (*)(id **, uint64_t))v181)(v110, v79);
  v191 = *v161;
  v112 = v191;
  v113 = v167;
  MEMORY[0x24BDAC7A8](v111);
  v114 = (v113 + 15) & 0xFFFFFFFFFFFFFFF0;
  v115 = v182;
  v162((char *)&v161 - v114, v92, v182);
  v188 = v163;
  v189 = 3;
  v116 = v112;
  v117 = v186;
  _TTSVBFileManager.removeItem(_:problem:)((uint64_t)&v161 - v114, (uint64_t)&v188);
  v186 = v117;
  if (v117)
  {

    v118 = (void (*)(id **, uint64_t))v173;
    ((void (*)(char *, uint64_t))v173)((char *)&v161 - v114, v115);

    v118(v92, v115);
  }
  else
  {
    ((void (*)(char *, uint64_t))v173)((char *)&v161 - v114, v115);

    v119 = (uint64_t)v179;
    v174(v179, v184, v185);
    v120 = swift_storeEnumTagMultiPayload();
    MEMORY[0x24BDAC7A8](v120);
    TTSVBPath.url.getter((uint64_t)&v161 - v114);
    sub_2486EDA68(v119, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBPath);
    ((void (*)(id **, char *, uint64_t))v175)(v92, (char *)&v161 - v114, v115);
    v121 = v171;
    v177((id **)v171, v176, v79);
    v122 = sub_2487B5324();
    v123 = sub_2487B57E0();
    if (os_log_type_enabled(v122, v123))
    {
      v124 = (uint8_t *)swift_slowAlloc();
      v125 = swift_slowAlloc();
      *(_QWORD *)&v188 = v125;
      *(_DWORD *)v124 = 136315138;
      v126 = sub_2487B50B4();
      v191 = (id)sub_2486EDE5C(v126, v127, (uint64_t *)&v188);
      sub_2487B593C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2486E6000, v122, v123, "Deleting exported items: %s", v124, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v125, -1, -1);
      MEMORY[0x24959AF80](v124, -1, -1);

      v128 = v171;
      v129 = v183;
    }
    else
    {

      v128 = v121;
      v129 = v79;
    }
    v130 = ((uint64_t (*)(char *, uint64_t))v181)(v128, v129);
    v131 = v161;
    v172 = &v161;
    v191 = *v161;
    v132 = v191;
    v133 = v167;
    MEMORY[0x24BDAC7A8](v130);
    v134 = (v133 + 15) & 0xFFFFFFFFFFFFFFF0;
    v135 = v182;
    v136 = v162;
    v162((char *)&v161 - v134, v101, v182);
    v188 = v163;
    v189 = 3;
    v137 = v132;
    v138 = v186;
    _TTSVBFileManager.removeItem(_:problem:)((uint64_t)&v161 - v134, (uint64_t)&v188);
    v186 = v138;
    if (v138)
    {

      v139 = (void (*)(id **, uint64_t))v173;
      ((void (*)(char *, uint64_t))v173)((char *)&v161 - v134, v135);

      v139(v101, v135);
    }
    else
    {
      ((void (*)(char *, uint64_t))v173)((char *)&v161 - v134, v135);

      v140 = (uint64_t)v179;
      v174(v179, v184, v185);
      v141 = swift_storeEnumTagMultiPayload();
      MEMORY[0x24BDAC7A8](v141);
      TTSVBPath.url.getter((uint64_t)&v161 - v134);
      sub_2486EDA68(v140, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBPath);
      v142 = ((uint64_t (*)(id **, char *, uint64_t))v175)(v101, (char *)&v161 - v134, v135);
      v191 = *v131;
      v143 = v191;
      MEMORY[0x24BDAC7A8](v142);
      v136((char *)&v161 - v134, v101, v135);
      v188 = v163;
      v189 = 3;
      v144 = v143;
      v145 = v186;
      _TTSVBFileManager.removeItem(_:problem:)((uint64_t)&v161 - v134, (uint64_t)&v188);
      v186 = v145;
      if (v145)
      {

        v74 = (void (*)(char *, uint64_t))v173;
        ((void (*)(char *, uint64_t))v173)((char *)&v161 - v134, v135);

        v97 = v101;
        v98 = v135;
        goto LABEL_17;
      }
      ((void (*)(char *, uint64_t))v173)((char *)&v161 - v134, v135);

      v146 = v170;
      v147 = v183;
      v148 = ((uint64_t (*)(char *, uint64_t, uint64_t))v177)(v170, v176, v183);
      MEMORY[0x24BDAC7A8](v148);
      v150 = (char *)&v161 - ((v149 + 15) & 0xFFFFFFFFFFFFFFF0);
      v174(v150, v184, v185);
      v151 = sub_2487B5324();
      v152 = sub_2487B57E0();
      if (os_log_type_enabled(v151, v152))
      {
        v153 = swift_slowAlloc();
        v184 = &v161;
        v154 = (uint8_t *)v153;
        v155 = swift_slowAlloc();
        *(_QWORD *)&v188 = v155;
        v156 = v185;
        *(_DWORD *)v154 = 136315138;
        v179 = (char *)(v154 + 4);
        sub_2486F4CA0(&qword_25777D0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA50], MEMORY[0x24BDCEAC0]);
        v157 = sub_2487B5CCC();
        v191 = (id)sub_2486EDE5C(v157, v158, (uint64_t *)&v188);
        sub_2487B593C();
        swift_bridgeObjectRelease();
        v168(v150, v156);
        _os_log_impl(&dword_2486E6000, v151, v152, "Finished deleting voice and all related data with VoiceID: %s", v154, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24959AF80](v155, -1, -1);
        MEMORY[0x24959AF80](v154, -1, -1);

        v181(v170, v147);
      }
      else
      {
        v168(v150, v185);

        v181(v146, v147);
      }
      v159 = v180;
      v160 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
      objc_msgSend(v160, sel_postNotificationName_object_, *sub_248729034(), 0);

      ((void (*)(id **, uint64_t))v173)(v159, v182);
    }
  }
}

uint64_t sub_24872F8CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  void *v17;
  char *v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v9 = sub_2487B53D8();
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2487B5408();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(_QWORD *)&v4[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue];
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = v4;
  v16[5] = a3;
  v16[6] = a4;
  aBlock[4] = sub_248750B14;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F1008;
  aBlock[3] = &block_descriptor_347;
  v17 = _Block_copy(aBlock);
  swift_retain();
  v18 = v4;
  swift_retain();
  sub_2487B53E4();
  v22 = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
  sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
  sub_2487B59FC();
  MEMORY[0x24959A1AC](0, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

void sub_24872FAE4(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint8_t *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  id v39[2];

  v37 = a2;
  v39[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = sub_2487B533C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2487B0B90();
  v35 = v5;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_2487B5228();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v36 = a1;
  v13(v12, a1, v9);
  v14 = sub_2487B5324();
  v15 = sub_2487B57E0();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v34 = v2;
    v17 = (uint8_t *)v16;
    v32 = (void *)swift_slowAlloc();
    v39[0] = v32;
    v33 = v4;
    *(_DWORD *)v17 = 136315138;
    v31 = v17 + 4;
    sub_2486F4CA0(&qword_25777D0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA50], MEMORY[0x24BDCEAC0]);
    v18 = sub_2487B5CCC();
    v38 = sub_2486EDE5C(v18, v19, (uint64_t *)v39);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    _os_log_impl(&dword_2486E6000, v14, v15, "Will delete voice with ID from datastore: %s", v17, 0xCu);
    v20 = v32;
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v20, -1, -1);
    MEMORY[0x24959AF80](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v33);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v4);
  }
  type metadata accessor for TTSVBLocalVoiceMO();
  v21 = static TTSVBLocalVoiceMO.batchDeleteRequest(forVoiceID:)();
  v39[0] = 0;
  v22 = v37;
  v23 = objc_msgSend(v37, sel_executeRequest_error_, v21, v39);
  v24 = v39[0];
  if (!v23)
    goto LABEL_8;
  v25 = v23;
  v26 = v39[0];

  type metadata accessor for TTSVBCloudVoiceMO();
  v27 = static TTSVBCloudVoiceMO.batchDeleteRequest(forVoiceID:)();

  v39[0] = 0;
  v28 = objc_msgSend(v22, sel_executeRequest_error_, v27, v39);
  v24 = v39[0];
  if (!v28)
  {
    v21 = v27;
LABEL_8:
    v30 = v24;
    sub_2487B4F64();

    swift_willThrow();
    goto LABEL_9;
  }
  v21 = v28;
  v29 = v39[0];

LABEL_9:
}

void TTSVBVoiceBankingManager.recordedPhraseCount(forVoice:validDataOnly:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v5 = sub_2487B542C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (uint64_t *)((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(v2 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v6 + 104))(v9, *MEMORY[0x24BEE5610], v5, v7);
  v11 = v10;
  LOBYTE(v10) = sub_2487B5444();
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v9, v5);
  if ((v10 & 1) != 0)
  {
    v12 = *(void **)(v2 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore);
    if (v12)
    {
      v17 = 1;
      v13 = v12;
      v14 = sub_2487749A0(&v17);

      MEMORY[0x24BDAC7A8](v15);
      *(&v16 - 4) = a1;
      *(&v16 - 3) = (uint64_t)v14;
      *((_BYTE *)&v16 - 16) = a2 & 1;
      sub_2487B58A0();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void *sub_24872FFC0@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  int v6;
  void *result;
  void *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t i;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t j;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  char v31;
  unint64_t *v32;
  void *v33;
  int v34;
  unint64_t v35;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(void **)(v1 + 24);
  v6 = *(unsigned __int8 *)(v1 + 32);
  type metadata accessor for TTSVBLocalVoiceMO();
  result = (void *)static TTSVBLocalVoiceMO.requireVoiceWithID(_:moc:)(v4, v5);
  if (v2)
    return result;
  v8 = result;
  v9 = objc_msgSend(result, sel_samples);
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, sel_allObjects);

    v12 = sub_2487B5684();
    v13 = sub_248730448(v12);
    result = (void *)swift_bridgeObjectRelease();
    if (v13)
    {
      v33 = v8;
      if (!v6)
        goto LABEL_26;
LABEL_7:
      v35 = MEMORY[0x24BEE4AF8];
      if (v13 >> 62)
      {
        swift_bridgeObjectRetain();
        v14 = sub_2487B5B64();
        result = (void *)swift_bridgeObjectRelease();
        if (v14)
          goto LABEL_9;
      }
      else
      {
        v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v14)
        {
LABEL_9:
          if (v14 < 1)
          {
LABEL_46:
            __break(1u);
            return result;
          }
          if ((v13 & 0xC000000000000001) != 0)
          {
            for (i = 0; i != v14; ++i)
            {
              MEMORY[0x24959A434](i, v13);
              v16 = type metadata accessor for TTSVBLocalVoiceSampleMO();
              v17 = sub_2486F4CA0(&qword_25777D128, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBLocalVoiceSampleMO, (uint64_t)&protocol conformance descriptor for TTSVBLocalVoiceSampleMO);
              TTSVBCommonVoiceSampleMO.trainingValidity.getter(v16, v17, &v34);
              if (TTSVBVoiceSampleTrainingValidity.isValid.getter())
              {
                sub_2487B5B04();
                sub_2487B5B28();
                sub_2487B5B34();
                sub_2487B5B10();
              }
              else
              {
                swift_unknownObjectRelease();
              }
            }
          }
          else
          {
            v18 = type metadata accessor for TTSVBLocalVoiceSampleMO();
            v19 = sub_2486F4CA0(&qword_25777D128, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBLocalVoiceSampleMO, (uint64_t)&protocol conformance descriptor for TTSVBLocalVoiceSampleMO);
            for (j = 0; j != v14; ++j)
            {
              v21 = *(id *)(v13 + 8 * j + 32);
              TTSVBCommonVoiceSampleMO.trainingValidity.getter(v18, v19, &v34);
              if (TTSVBVoiceSampleTrainingValidity.isValid.getter())
              {
                sub_2487B5B04();
                sub_2487B5B28();
                sub_2487B5B34();
                sub_2487B5B10();
              }
              else
              {

              }
            }
          }
          swift_bridgeObjectRelease();
          v8 = v33;
          goto LABEL_25;
        }
      }
      swift_bridgeObjectRelease();
LABEL_25:
      v13 = v35;
      goto LABEL_26;
    }
  }
  result = (void *)swift_bridgeObjectRelease();
  v13 = MEMORY[0x24BEE4AF8];
  v33 = v8;
  if (v6)
    goto LABEL_7;
LABEL_26:
  if (v13 >> 62)
    goto LABEL_41;
  v22 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = (void *)swift_bridgeObjectRetain();
  if (v22)
  {
    while (v22 >= 1)
    {
      if ((v13 & 0xC000000000000001) != 0)
      {
        v32 = a1;
        v23 = 0;
        v24 = 0;
        v8 = type metadata accessor for TTSVBLocalVoiceSampleMO;
        a1 = &qword_25777D128;
        while (1)
        {
          MEMORY[0x24959A434](v23, v13);
          v25 = type metadata accessor for TTSVBLocalVoiceSampleMO();
          v26 = sub_2486F4CA0(&qword_25777D128, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBLocalVoiceSampleMO, (uint64_t)&protocol conformance descriptor for TTSVBLocalVoiceSampleMO);
          LOBYTE(v25) = TTSVBCommonVoiceSampleMO.hasVoiceRecording.getter(v25, v26);
          swift_unknownObjectRelease();
          v27 = __OFADD__(v24, v25 & 1);
          v24 += v25 & 1;
          if (v27)
            break;
          if (v22 == ++v23)
          {
            swift_bridgeObjectRelease();
            a1 = v32;
            goto LABEL_38;
          }
        }
        __break(1u);
      }
      else
      {
        v28 = type metadata accessor for TTSVBLocalVoiceSampleMO();
        v8 = (void *)sub_2486F4CA0(&qword_25777D128, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBLocalVoiceSampleMO, (uint64_t)&protocol conformance descriptor for TTSVBLocalVoiceSampleMO);
        v29 = 0;
        v24 = 0;
        while (1)
        {
          v30 = *(id *)(v13 + 8 * v29 + 32);
          v31 = TTSVBCommonVoiceSampleMO.hasVoiceRecording.getter(v28, (uint64_t)v8);

          v27 = __OFADD__(v24, v31 & 1);
          v24 += v31 & 1;
          if (v27)
            break;
          if (v22 == ++v29)
          {
            swift_bridgeObjectRelease();
LABEL_38:
            v8 = v33;
            goto LABEL_43;
          }
        }
      }
      __break(1u);
LABEL_41:
      swift_bridgeObjectRetain();
      result = (void *)sub_2487B5B64();
      v22 = (uint64_t)result;
      if (!result)
        goto LABEL_42;
    }
    __break(1u);
    goto LABEL_46;
  }
LABEL_42:
  swift_bridgeObjectRelease();
  v24 = 0;
LABEL_43:

  result = (void *)swift_bridgeObjectRelease();
  *a1 = v24;
  return result;
}

uint64_t sub_248730448(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  _BYTE v5[32];
  uint64_t v6;

  v6 = MEMORY[0x24BEE4AF8];
  v2 = *(_QWORD *)(a1 + 16);
  sub_2487B5B1C();
  if (!v2)
    return v6;
  for (i = a1 + 32; ; i += 32)
  {
    sub_2486F0814(i, (uint64_t)v5);
    type metadata accessor for TTSVBLocalVoiceSampleMO();
    if (!swift_dynamicCast())
      break;
    sub_2487B5B04();
    sub_2487B5B28();
    sub_2487B5B34();
    sub_2487B5B10();
    if (!--v2)
      return v6;
  }
  swift_release();

  return 0;
}

void TTSVBVoiceBankingManager.durationOfRecordingData(forVoice:validDataOnly:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v5 = sub_2487B542C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (uint64_t *)((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(v2 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v6 + 104))(v9, *MEMORY[0x24BEE5610], v5, v7);
  v11 = v10;
  LOBYTE(v10) = sub_2487B5444();
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v9, v5);
  if ((v10 & 1) != 0)
  {
    v12 = *(void **)(v2 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore);
    if (v12)
    {
      v17 = 1;
      v13 = v12;
      v14 = sub_2487749A0(&v17);

      MEMORY[0x24BDAC7A8](v15);
      *(&v16 - 4) = a1;
      *(&v16 - 3) = (uint64_t)v14;
      *((_BYTE *)&v16 - 16) = a2 & 1;
      sub_2487B58A0();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_2487306AC(double *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  int v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t i;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t j;
  id v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  id v25;
  void *v26;
  double v27;
  double v28;
  double *v29;
  void *v30;
  int v31;
  unint64_t v32;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(void **)(v1 + 24);
  v6 = *(unsigned __int8 *)(v1 + 32);
  type metadata accessor for TTSVBLocalVoiceMO();
  v7 = (void *)static TTSVBLocalVoiceMO.requireVoiceWithID(_:moc:)(v4, v5);
  if (!v2)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, sel_samples);
    if (v9
      && (v10 = v9,
          v11 = objc_msgSend(v9, sel_allObjects),
          v10,
          v12 = sub_2487B5684(),
          v11,
          v13 = sub_248730448(v12),
          swift_bridgeObjectRelease(),
          v13))
    {
      if (!v6)
      {
LABEL_26:
        if (v13 >> 62)
        {
          swift_bridgeObjectRetain();
          v22 = sub_2487B5B64();
          if (v22)
            goto LABEL_28;
        }
        else
        {
          v22 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v22)
          {
LABEL_28:
            if (v22 >= 1)
            {
              v23 = 0;
              v24 = 0.0;
              do
              {
                if ((v13 & 0xC000000000000001) != 0)
                  v25 = (id)MEMORY[0x24959A434](v23, v13);
                else
                  v25 = *(id *)(v13 + 8 * v23 + 32);
                v26 = v25;
                ++v23;
                objc_msgSend(v25, sel_recordingDuration, v29);
                v28 = v27;

                v24 = v24 + v28;
              }
              while (v22 != v23);
              goto LABEL_36;
            }
            __break(1u);
LABEL_39:
            __break(1u);
            return;
          }
        }
        v24 = 0.0;
LABEL_36:
        swift_bridgeObjectRelease_n();

        *a1 = v24;
        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      v13 = MEMORY[0x24BEE4AF8];
      if (!v6)
        goto LABEL_26;
    }
    v32 = MEMORY[0x24BEE4AF8];
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      v14 = sub_2487B5B64();
      swift_bridgeObjectRelease();
      if (v14)
        goto LABEL_9;
    }
    else
    {
      v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v14)
      {
LABEL_9:
        if (v14 < 1)
          goto LABEL_39;
        v30 = v8;
        if ((v13 & 0xC000000000000001) != 0)
        {
          v29 = a1;
          for (i = 0; i != v14; ++i)
          {
            MEMORY[0x24959A434](i, v13);
            v16 = type metadata accessor for TTSVBLocalVoiceSampleMO();
            v17 = sub_2486F4CA0(&qword_25777D128, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBLocalVoiceSampleMO, (uint64_t)&protocol conformance descriptor for TTSVBLocalVoiceSampleMO);
            TTSVBCommonVoiceSampleMO.trainingValidity.getter(v16, v17, &v31);
            if (TTSVBVoiceSampleTrainingValidity.isValid.getter())
            {
              sub_2487B5B04();
              sub_2487B5B28();
              sub_2487B5B34();
              sub_2487B5B10();
            }
            else
            {
              swift_unknownObjectRelease();
            }
          }
        }
        else
        {
          v18 = type metadata accessor for TTSVBLocalVoiceSampleMO();
          v19 = sub_2486F4CA0(&qword_25777D128, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBLocalVoiceSampleMO, (uint64_t)&protocol conformance descriptor for TTSVBLocalVoiceSampleMO);
          for (j = 0; j != v14; ++j)
          {
            v21 = *(id *)(v13 + 8 * j + 32);
            TTSVBCommonVoiceSampleMO.trainingValidity.getter(v18, v19, &v31);
            if (TTSVBVoiceSampleTrainingValidity.isValid.getter())
            {
              sub_2487B5B04();
              sub_2487B5B28();
              sub_2487B5B34();
              sub_2487B5B10();
            }
            else
            {

            }
          }
        }
        swift_bridgeObjectRelease();
        v8 = v30;
        goto LABEL_25;
      }
    }
    swift_bridgeObjectRelease();
LABEL_25:
    v13 = v32;
    goto LABEL_26;
  }
}

void TTSVBVoiceBankingManager.fetchVoiceModels(completion:)(uint64_t a1, uint64_t a2)
{
  sub_248730A88(a1, a2, (uint64_t)&unk_251992410, (uint64_t)sub_248731064, (uint64_t)&block_descriptor_18_0);
}

void sub_248730A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  void *v6;
  void *v9;
  id v12;
  id v13;
  _QWORD *v14;
  void *v15;
  id v16;
  id v17;
  _QWORD v18[6];

  v6 = *(void **)&v5[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore];
  if (v6)
  {
    v9 = v5;
    LOBYTE(v18[0]) = 1;
    v12 = v6;
    v13 = sub_2487749A0(v18);

    v14 = (_QWORD *)swift_allocObject();
    v14[2] = v13;
    v14[3] = v9;
    v14[4] = a1;
    v14[5] = a2;
    v18[4] = a4;
    v18[5] = v14;
    v18[0] = MEMORY[0x24BDAC760];
    v18[1] = 1107296256;
    v18[2] = sub_2486F1008;
    v18[3] = a5;
    v15 = _Block_copy(v18);
    v16 = v13;
    v17 = v9;
    swift_retain();
    swift_release();
    objc_msgSend(v16, sel_performBlock_, v15);
    _Block_release(v15);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_248730B98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)();
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  void *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD aBlock[7];

  v40 = a4;
  v36 = a2;
  v37 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_25445EDE8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTSVBVoiceModel();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v47 = (uint64_t)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v46 = (uint64_t)&v36 - v12;
  v13 = sub_2487B53D8();
  v43 = *(_QWORD *)(v13 - 8);
  v44 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v42 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2487B5408();
  v39 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v38 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TTSVBLocalVoiceModelMO();
  v18 = sub_248787BD4(v17, (uint64_t)&protocol witness table for TTSVBLocalVoiceModelMO);
  v20 = static DSO<>.fetch(in:config:)(a1, (void (*)(id))v18, v19, v17, (uint64_t)&protocol witness table for TTSVBLocalVoiceModelMO);
  swift_release();
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_2487B5B64();
    v21 = result;
  }
  else
  {
    v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
  }
  v23 = MEMORY[0x24BEE4AF8];
  v41 = v15;
  if (!v21)
  {
LABEL_17:
    swift_bridgeObjectRelease_n();
    v30 = (_QWORD *)swift_allocObject();
    v31 = v40;
    v30[2] = v37;
    v30[3] = v31;
    v30[4] = v23;
    aBlock[4] = sub_248750AF8;
    aBlock[5] = v30;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2486F1008;
    aBlock[3] = &block_descriptor_341;
    v32 = _Block_copy(aBlock);
    swift_retain();
    v33 = v38;
    sub_2487B53E4();
    v48 = MEMORY[0x24BEE4AF8];
    sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
    sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
    v34 = v42;
    v35 = v44;
    sub_2487B59FC();
    MEMORY[0x24959A1AC](0, v33, v34, v32);
    _Block_release(v32);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v34, v35);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v33, v41);
    return swift_release();
  }
  if (v21 >= 1)
  {
    v24 = 0;
    v45 = v8;
    do
    {
      if ((v20 & 0xC000000000000001) != 0)
        v25 = (_QWORD *)MEMORY[0x24959A434](v24, v20);
      else
        v25 = *(id *)(v20 + 8 * v24 + 32);
      v26 = v25;
      (*(void (**)(_QWORD))((*MEMORY[0x24BEE4EA0] & *v25) + 0x58))(0);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
      {
        sub_2486F5008((uint64_t)v7, qword_25445EDE8);
      }
      else
      {
        v27 = v46;
        sub_24870A2C4((uint64_t)v7, v46, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
        sub_24870A2C4(v27, v47, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v23 = sub_24874BBD0(0, *(_QWORD *)(v23 + 16) + 1, 1, v23, &qword_25777D1F8, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
        v29 = *(_QWORD *)(v23 + 16);
        v28 = *(_QWORD *)(v23 + 24);
        if (v29 >= v28 >> 1)
          v23 = sub_24874BBD0(v28 > 1, v29 + 1, 1, v23, &qword_25777D1F8, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
        *(_QWORD *)(v23 + 16) = v29 + 1;
        sub_24870A2C4(v47, v23+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v29, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
        v8 = v45;
      }
      ++v24;
    }
    while (v21 != v24);
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_248731064()
{
  uint64_t *v0;

  return sub_248730B98(v0[2], v0[3], v0[4], v0[5]);
}

void TTSVBVoiceBankingManager.fetchInstalledVoiceModels(completion:)(uint64_t a1, uint64_t a2)
{
  sub_248730A88(a1, a2, (uint64_t)&unk_251992460, (uint64_t)sub_248731950, (uint64_t)&block_descriptor_24_0);
}

uint64_t sub_24873108C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t i;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)();
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t result;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  void *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  int64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  void *v66;
  char *v67;
  unint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD aBlock[7];

  v73 = a4;
  v72 = a3;
  v71 = a2;
  v5 = type metadata accessor for TTSVBInstalledVoiceModel();
  v85 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v86 = (uint64_t)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2487B53D8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  i = (unint64_t)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2487B5408();
  v75 = *(_QWORD *)(v11 - 8);
  v76 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v74 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(qword_25445EDE8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = type metadata accessor for TTSVBVoiceModel();
  v16 = *(char **)(v87 - 8);
  v17 = MEMORY[0x24BDAC7A8](v87);
  v84 = (uint64_t)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v83 = (char *)&v69 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v80 = (uint64_t)&v69 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v82 = (uint64_t)&v69 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v88 = (uint64_t)&v69 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v69 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v70 = (char *)&v69 - v30;
  v31 = type metadata accessor for TTSVBLocalVoiceModelMO();
  v32 = sub_248787BD4(v31, (uint64_t)&protocol witness table for TTSVBLocalVoiceModelMO);
  v34 = static DSO<>.fetch(in:config:)(a1, (void (*)(id))v32, v33, v31, (uint64_t)&protocol witness table for TTSVBLocalVoiceModelMO);
  swift_release();
  v81 = v34;
  if (v34 >> 62)
  {
LABEL_42:
    swift_bridgeObjectRetain();
    result = sub_2487B5B64();
    v35 = result;
  }
  else
  {
    v35 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
  }
  v37 = MEMORY[0x24BEE4AF8];
  v78 = v8;
  v79 = v7;
  v77 = i;
  if (v35)
  {
    if (v35 < 1)
    {
      __break(1u);
      return result;
    }
    v38 = 0;
    v7 = v81;
    v39 = v81 & 0xC000000000000001;
    v8 = (unint64_t)v70;
    do
    {
      if (v39)
        v40 = (_QWORD *)MEMORY[0x24959A434](v38, v7);
      else
        v40 = *(id *)(v7 + 8 * v38 + 32);
      v41 = v40;
      (*(void (**)(_QWORD))((*MEMORY[0x24BEE4EA0] & *v40) + 0x58))(0);

      if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v16 + 6))(v15, 1, v87) == 1)
      {
        sub_2486F5008((uint64_t)v15, qword_25445EDE8);
      }
      else
      {
        sub_24870A2C4((uint64_t)v15, v8, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
        sub_24870A2C4(v8, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v37 = sub_24874BBD0(0, *(_QWORD *)(v37 + 16) + 1, 1, v37, &qword_25777D1F8, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
        v43 = *(_QWORD *)(v37 + 16);
        v42 = *(_QWORD *)(v37 + 24);
        if (v43 >= v42 >> 1)
          v37 = sub_24874BBD0(v42 > 1, v43 + 1, 1, v37, &qword_25777D1F8, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
        *(_QWORD *)(v37 + 16) = v43 + 1;
        sub_24870A2C4((uint64_t)v29, v37+ ((v16[80] + 32) & ~(unint64_t)v16[80])+ *((_QWORD *)v16 + 9) * v43, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
        v7 = v81;
      }
      ++v38;
    }
    while (v35 != v38);
  }
  else
  {
    v7 = v81;
  }
  swift_bridgeObjectRelease_n();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  v44 = v86;
  v15 = (char *)v87;
  v81 = *(_QWORD *)(v37 + 16);
  if (v81)
  {
    for (i = 0; v81 != i; ++i)
    {
      if (i >= *(_QWORD *)(v37 + 16))
      {
        __break(1u);
        goto LABEL_42;
      }
      v8 = (v16[80] + 32) & ~(unint64_t)v16[80];
      v29 = v16;
      v7 = *((_QWORD *)v16 + 9);
      v45 = v88;
      sub_248709554(v37 + v8 + v7 * i, v88, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
      v46 = *(_QWORD *)(v45 + *((int *)v15 + 13));
      v47 = v45;
      v48 = v82;
      sub_248709554(v47, v82, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
      if (v46 == 7)
      {
        v49 = *(_BYTE *)(v48 + *((int *)v15 + 19));
        sub_2486EDA68(v48, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
        if ((v49 & 1) != 0)
        {
          sub_24870A2C4(v88, v80, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
          v50 = aBlock[0];
          v16 = v29;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_24874C5AC(0, *(_QWORD *)(v50 + 16) + 1, 1);
            v50 = aBlock[0];
          }
          v52 = *(_QWORD *)(v50 + 16);
          v51 = *(_QWORD *)(v50 + 24);
          if (v52 >= v51 >> 1)
          {
            sub_24874C5AC(v51 > 1, v52 + 1, 1);
            v50 = aBlock[0];
          }
          *(_QWORD *)(v50 + 16) = v52 + 1;
          sub_24870A2C4(v80, v50 + v8 + v52 * v7, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
          v44 = v86;
          v15 = (char *)v87;
          continue;
        }
      }
      else
      {
        sub_2486EDA68(v48, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
      }
      sub_2486EDA68(v88, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
      v16 = v29;
    }
  }
  swift_bridgeObjectRelease();
  v53 = aBlock[0];
  v54 = *(_QWORD *)(aBlock[0] + 16);
  if (v54)
  {
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_24874C580(0, v54, 0);
    v55 = v53 + ((v16[80] + 32) & ~(unint64_t)v16[80]);
    v56 = *((_QWORD *)v16 + 9);
    v57 = aBlock[0];
    v58 = (uint64_t)v83;
    do
    {
      sub_248709554(v55, v58, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
      v59 = v84;
      sub_248709554(v58, v84, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
      TTSVBInstalledVoiceModel.init(model:)(v59, v44);
      sub_2486EDA68(v58, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24874C580(0, *(_QWORD *)(v57 + 16) + 1, 1);
        v57 = aBlock[0];
      }
      v61 = *(_QWORD *)(v57 + 16);
      v60 = *(_QWORD *)(v57 + 24);
      if (v61 >= v60 >> 1)
      {
        sub_24874C580(v60 > 1, v61 + 1, 1);
        v57 = aBlock[0];
      }
      *(_QWORD *)(v57 + 16) = v61 + 1;
      v62 = v57
          + ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80))
          + *(_QWORD *)(v85 + 72) * v61;
      v44 = v86;
      sub_24870A2C4(v86, v62, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBInstalledVoiceModel);
      v55 += v56;
      --v54;
    }
    while (v54);
    swift_release();
  }
  else
  {
    swift_release();
    v57 = MEMORY[0x24BEE4AF8];
  }
  v63 = v79;
  v64 = (_QWORD *)swift_allocObject();
  v65 = v73;
  v64[2] = v72;
  v64[3] = v65;
  v64[4] = v57;
  aBlock[4] = sub_248750AF8;
  aBlock[5] = v64;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F1008;
  aBlock[3] = &block_descriptor_335;
  v66 = _Block_copy(aBlock);
  swift_retain();
  v67 = v74;
  sub_2487B53E4();
  v89 = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
  sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
  v68 = v77;
  sub_2487B59FC();
  MEMORY[0x24959A1AC](0, v67, v68, v66);
  _Block_release(v66);
  (*(void (**)(unint64_t, uint64_t))(v78 + 8))(v68, v63);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v67, v76);
  return swift_release();
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_248731950()
{
  uint64_t *v0;

  return sub_24873108C(v0[2], v0[3], v0[4], v0[5]);
}

void sub_24873195C(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, unsigned int a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  id v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  unsigned int v62;
  unsigned int v63;

  v15 = __swift_instantiateConcreteTypeFromMangledName(qword_25445EDE8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TTSVBLocalVoiceMO();
  v18 = static TTSVBLocalVoiceMO.requireVoiceWithID(_:moc:)(a1, a2);
  if (!v7)
  {
    v19 = (void *)v18;
    v55 = v17;
    v56 = 0;
    v61 = a3;
    v59 = a5;
    v62 = a6;
    v54 = a7;
    v20 = type metadata accessor for TTSVBLocalVoiceModelMO();
    v57 = a2;
    v58 = v20;
    v21 = (_QWORD *)NSManagedObjectContext.insertDSO<A>(_:)(v20, v20, (uint64_t)&protocol witness table for TTSVBLocalVoiceModelMO);
    objc_msgSend(v21, sel_setVoice_, v19);
    v22 = sub_2487B5228();
    v23 = v19;
    v24 = *(_QWORD *)(v22 - 8);
    MEMORY[0x24BDAC7A8](v22);
    v26 = (char *)&v54 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2487B521C();
    v27 = (void *)sub_2487B51F8();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v22);
    objc_msgSend(v21, sel_setModelID_, v27);

    v60 = v23;
    v28 = objc_msgSend(v23, sel_localeID);
    objc_msgSend(v21, sel_setTrainingLocaleID_, v28);

    v29 = sub_2487B51D4();
    v30 = *(_QWORD *)(v29 - 8);
    MEMORY[0x24BDAC7A8](v29);
    v32 = (char *)&v54 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2487B51C8();
    v33 = (void *)sub_2487B5174();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
    objc_msgSend(v21, sel_setCreationDate_, v33);

    v34 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
    v35 = objc_msgSend(v34, sel_operatingSystemVersionString);

    if (!v35)
    {
      sub_2487B5528();
      v35 = (id)sub_2487B5504();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v21, sel_setCreationOSBuild_, v35);

    v36 = (id)MobileGestalt_get_current_device();
    if (v36)
    {
      v37 = (id)MobileGestalt_copy_computerName_obj();

      if (v37)
      {
        sub_2487B5528();

        v36 = (id)sub_2487B5504();
        swift_bridgeObjectRelease();
      }
      else
      {
        v36 = 0;
      }
    }
    objc_msgSend(v21, sel_setCreationDeviceName_, v36);

    v38 = (id)MobileGestalt_get_current_device();
    v39 = v61;
    if (v38)
    {
      v40 = (id)MobileGestalt_copy_uniqueDeviceID_obj();

      if (v40)
      {
        sub_2487B5528();

        v38 = (id)sub_2487B5504();
        v39 = v61;
        swift_bridgeObjectRelease();
      }
      else
      {
        v38 = 0;
      }
    }
    objc_msgSend(v21, sel_setCreationDeviceUDID_, v38);

    v41 = (id)MobileGestalt_get_current_device();
    if (v41)
    {
      v42 = (id)MobileGestalt_copy_hwModelStr_obj();

      if (v42)
      {
        sub_2487B5528();

        v41 = (id)sub_2487B5504();
        v39 = v61;
        swift_bridgeObjectRelease();
      }
      else
      {
        v41 = 0;
      }
    }
    objc_msgSend(v21, sel_setCreationDeviceModel_, v41);

    v43 = (void *)sub_2487B5504();
    objc_msgSend(v21, sel_setVersion_, v43);

    if ((a4 & 1) != 0)
      v44 = 0;
    else
      v44 = v39;
    v45 = sub_2486F4CA0(&qword_25777D138, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBLocalVoiceModelMO, (uint64_t)&protocol conformance descriptor for TTSVBLocalVoiceModelMO);
    v46 = v58;
    TTSVBCommonVoiceModelMO.status.setter(v44, v58, v45);
    v47 = (void *)sub_2487B5504();
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_setTrainingMode_, v47);

    v63 = v62;
    TTSVBCommonVoiceModelMO.flags.setter(&v63, v46, v45);
    sub_24870A34C(0, &qword_25445F178);
    v48 = (void *)sub_2487B58E8();
    objc_msgSend(v21, sel_setIsDownloaded_, v48);

    NSManagedObjectContext.trySave()();
    if (v49)
    {

    }
    else
    {
      v50 = (uint64_t)v55;
      (*(void (**)(_QWORD))((*MEMORY[0x24BEE4EA0] & *v21) + 0x58))(0);
      v51 = type metadata accessor for TTSVBVoiceModel();
      v52 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v50, 1, v51);
      v53 = v60;
      if (v52 == 1)
      {
        __break(1u);
      }
      else
      {

        sub_24870A2C4(v50, v54, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
      }
    }
  }
}

uint64_t TTSVBVoiceBankingManager.refreshModels(completion:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  _QWORD *v14;
  void *v15;
  char *v16;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v5 = sub_2487B53D8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2487B5408();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = TTSVBProcessIsVoicebankingd();
  if ((_DWORD)result)
  {
    v17[0] = *(_QWORD *)&v2[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue];
    v14 = (_QWORD *)swift_allocObject();
    v14[2] = v2;
    v14[3] = a1;
    v14[4] = a2;
    aBlock[4] = sub_2487328E8;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2486F1008;
    aBlock[3] = &block_descriptor_30_0;
    v15 = _Block_copy(aBlock);
    v16 = v2;
    swift_retain();
    sub_2487B53E4();
    v17[1] = MEMORY[0x24BEE4AF8];
    sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
    sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
    sub_2487B59FC();
    MEMORY[0x24959A1AC](0, v12, v8, v15);
    _Block_release(v15);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_248732178(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  void (*v22)(char *, uint64_t);
  void *v23;
  id v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  char *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char *v38;
  char *v39;
  char *v40;
  void *v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  void *v60;
  id v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t aBlock;
  uint64_t v78;
  uint64_t (*v79)(uint64_t);
  void *v80;
  void *v81;
  _QWORD *v82;

  v71 = a2;
  v72 = a3;
  v73 = a1;
  v75 = type metadata accessor for TTSVBVoiceModel();
  v69 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v74 = (uint64_t)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2487B53D8();
  v68 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v67 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2487B5408();
  v65 = *(_QWORD *)(v6 - 8);
  v66 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v64 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2487B533C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v63 = (char *)&v63 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v63 - v15;
  v17 = sub_2487B0DFC();
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v18(v16, v17, v8);
  v19 = sub_2487B5324();
  v20 = sub_2487B57BC();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_2486E6000, v19, v20, "Request training status refresh for models", v21, 2u);
    MEMORY[0x24959AF80](v21, -1, -1);
  }

  v22 = *(void (**)(char *, uint64_t))(v9 + 8);
  v22(v16, v8);
  v23 = *(void **)&v73[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore];
  if (v23)
  {
    LOBYTE(aBlock) = 1;
    v24 = v23;
    v25 = (char *)sub_2487749A0(&aBlock);

    MEMORY[0x24BDAC7A8](v26);
    *(&v63 - 2) = v25;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F128);
    v70 = v25;
    sub_2487B58A0();
    v27 = aBlock;
    if (*(_QWORD *)(aBlock + 16))
    {
      v18(v12, v17, v8);
      swift_bridgeObjectRetain();
      v28 = sub_2487B5324();
      v29 = sub_2487B57BC();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v30 = 134217984;
        aBlock = *(_QWORD *)(v27 + 16);
        sub_2487B593C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2486E6000, v28, v29, "%ld models exist that require refresh. requesting getTasksByIDs for them now.", v30, 0xCu);
        MEMORY[0x24959AF80](v30, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease();
      }
      v22(v12, v8);
      v40 = (char *)sub_24872C8D8();
      v41 = v40;
      v42 = *(_QWORD *)(v27 + 16);
      if (v42)
      {
        v67 = v40;
        aBlock = MEMORY[0x24BEE4AF8];
        sub_24872A4C0(0, v42, 0);
        v43 = *(unsigned __int8 *)(v69 + 80);
        v68 = v27;
        v44 = v27 + ((v43 + 32) & ~v43);
        v45 = *(_QWORD *)(v69 + 72);
        v46 = aBlock;
        do
        {
          v47 = v74;
          sub_248709554(v44, v74, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
          v48 = sub_2487B51EC();
          v50 = v49;
          sub_2486EDA68(v47, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_24872A4C0(0, *(_QWORD *)(v46 + 16) + 1, 1);
            v46 = aBlock;
          }
          v52 = *(_QWORD *)(v46 + 16);
          v51 = *(_QWORD *)(v46 + 24);
          if (v52 >= v51 >> 1)
          {
            sub_24872A4C0((char *)(v51 > 1), v52 + 1, 1);
            v46 = aBlock;
          }
          *(_QWORD *)(v46 + 16) = v52 + 1;
          v53 = v46 + 16 * v52;
          *(_QWORD *)(v53 + 32) = v48;
          *(_QWORD *)(v53 + 40) = v50;
          v44 += v45;
          --v42;
        }
        while (v42);
        v41 = v67;
        v27 = v68;
      }
      v54 = (void *)sub_2487B566C();
      swift_bridgeObjectRelease();
      v55 = v73;
      v56 = *(_QWORD *)&v73[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue];
      v57 = (_QWORD *)swift_allocObject();
      v57[2] = v55;
      v57[3] = v27;
      v59 = v70;
      v58 = v71;
      v57[4] = v70;
      v57[5] = v58;
      v57[6] = v72;
      v81 = sub_248750AB8;
      v82 = v57;
      aBlock = MEMORY[0x24BDAC760];
      v78 = 1107296256;
      v79 = sub_2487338D0;
      v80 = &block_descriptor_323;
      v60 = _Block_copy(&aBlock);
      swift_retain();
      v61 = v55;
      v62 = v59;
      swift_release();
      objc_msgSend(v41, sel_getTasksByIDs_replyOnQueue_statusHandler_, v54, v56, v60);

      _Block_release(v60);
    }
    else
    {
      swift_bridgeObjectRelease();
      v31 = v63;
      v18(v63, v17, v8);
      v32 = sub_2487B5324();
      v33 = sub_2487B57BC();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v34 = 0;
        _os_log_impl(&dword_2486E6000, v32, v33, "No models exist that require refresh. completing successfully", v34, 2u);
        MEMORY[0x24959AF80](v34, -1, -1);
      }

      v22(v31, v8);
      v35 = swift_allocObject();
      v36 = v72;
      *(_QWORD *)(v35 + 16) = v71;
      *(_QWORD *)(v35 + 24) = v36;
      v81 = sub_248750AC8;
      v82 = (_QWORD *)v35;
      aBlock = MEMORY[0x24BDAC760];
      v78 = 1107296256;
      v79 = sub_2486F1008;
      v80 = &block_descriptor_329;
      v37 = _Block_copy(&aBlock);
      swift_retain();
      v38 = v64;
      sub_2487B53E4();
      v76 = MEMORY[0x24BEE4AF8];
      sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
      sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
      v39 = v67;
      sub_2487B59FC();
      MEMORY[0x24959A1AC](0, v38, v39, v37);
      _Block_release(v37);

      (*(void (**)(char *, uint64_t))(v68 + 8))(v39, v4);
      (*(void (**)(char *, uint64_t))(v65 + 8))(v38, v66);
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_2487328E8()
{
  uint64_t v0;

  sub_248732178(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_2487328F4@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v32 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_25445EDE8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for TTSVBVoiceModel();
  v6 = *(_QWORD *)(v36 - 8);
  v7 = MEMORY[0x24BDAC7A8](v36);
  v35 = (uint64_t)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v34 = (uint64_t)&v32 - v9;
  v10 = type metadata accessor for TTSVBLocalVoiceModelMO();
  v11 = sub_248787BD4(v10, (uint64_t)&protocol witness table for TTSVBLocalVoiceModelMO);
  v13 = static DSO<>.fetch(in:config:)(a1, (void (*)(id))v11, v12, v10, (uint64_t)&protocol witness table for TTSVBLocalVoiceModelMO);
  result = swift_release();
  v37 = MEMORY[0x24BEE4AF8];
  if (!(v13 >> 62))
  {
    v15 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v15)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease();
    v22 = MEMORY[0x24BEE4AF8];
    if ((MEMORY[0x24BEE4AF8] & 0x8000000000000000) != 0)
      goto LABEL_31;
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  v15 = sub_2487B5B64();
  result = swift_bridgeObjectRelease();
  if (!v15)
    goto LABEL_15;
LABEL_3:
  if (v15 < 1)
  {
    __break(1u);
    goto LABEL_35;
  }
  v16 = 0;
  v17 = v13 & 0xC000000000000001;
  v33 = v13 & 0xC000000000000001;
  do
  {
    if (v17)
      v18 = (id)MEMORY[0x24959A434](v16, v13);
    else
      v18 = *(id *)(v13 + 8 * v16 + 32);
    v19 = v18;
    v20 = sub_2486F4CA0(&qword_25777D138, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBLocalVoiceModelMO, (uint64_t)&protocol conformance descriptor for TTSVBLocalVoiceModelMO);
    v21 = TTSVBCommonVoiceModelMO.status.getter(v10, v20);
    if (TTSVBVoiceStatus.isFinal.getter(v21))
    {

    }
    else
    {
      sub_2487B5B04();
      sub_2487B5B28();
      v17 = v33;
      sub_2487B5B34();
      sub_2487B5B10();
    }
    ++v16;
  }
  while (v15 != v16);
  swift_bridgeObjectRelease();
  v22 = v37;
  if (v37 < 0)
    goto LABEL_31;
LABEL_16:
  if ((v22 & 0x4000000000000000) == 0)
  {
    v23 = *(_QWORD *)(v22 + 16);
    result = swift_retain();
    if (!v23)
    {
LABEL_32:
      v25 = MEMORY[0x24BEE4AF8];
LABEL_33:
      result = swift_release_n();
      *v32 = v25;
      return result;
    }
    goto LABEL_18;
  }
LABEL_31:
  swift_retain();
  result = sub_2487B5B64();
  v23 = result;
  if (!result)
    goto LABEL_32;
LABEL_18:
  if (v23 >= 1)
  {
    v24 = 0;
    v25 = MEMORY[0x24BEE4AF8];
    v26 = (_QWORD *)MEMORY[0x24BEE4EA0];
    do
    {
      if ((v22 & 0xC000000000000001) != 0)
        v27 = (_QWORD *)MEMORY[0x24959A434](v24, v22);
      else
        v27 = *(id *)(v22 + 8 * v24 + 32);
      v28 = v27;
      (*(void (**)(_QWORD))((*v26 & *v27) + 0x58))(0);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v36) == 1)
      {
        sub_2486F5008((uint64_t)v5, qword_25445EDE8);
      }
      else
      {
        v29 = v34;
        sub_24870A2C4((uint64_t)v5, v34, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
        sub_24870A2C4(v29, v35, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v25 = sub_24874BBD0(0, *(_QWORD *)(v25 + 16) + 1, 1, v25, &qword_25777D1F8, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
        v31 = *(_QWORD *)(v25 + 16);
        v30 = *(_QWORD *)(v25 + 24);
        if (v31 >= v30 >> 1)
          v25 = sub_24874BBD0(v30 > 1, v31 + 1, 1, v25, &qword_25777D1F8, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
        *(_QWORD *)(v25 + 16) = v31 + 1;
        sub_24870A2C4(v35, v25+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v31, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
        v26 = (_QWORD *)MEMORY[0x24BEE4EA0];
      }
      ++v24;
    }
    while (v23 != v24);
    goto LABEL_33;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_248732D34(void (*a1)(_QWORD *))
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1D0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v4 = MEMORY[0x24BEE4AF8];
  swift_storeEnumTagMultiPayload();
  a1(v4);
  return sub_2486F5008((uint64_t)v4, &qword_25445F1D0);
}

uint64_t sub_248732DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *), uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t *);
  uint64_t v37;

  v35 = a6;
  v36 = a5;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1D0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (_QWORD *)((char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_2487B542C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (_QWORD *)((char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(void **)(a2 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue);
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BEE5610], v13);
  v18 = v17;
  LOBYTE(v17) = sub_2487B5444();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) != 0)
  {
    v20 = sub_2487330B4(a3, a1, a4);
    v37 = v20;
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777D200);
    v22 = sub_24871869C(&qword_25777D208, &qword_25777D200, MEMORY[0x24BEE12C8]);
    v23 = Sequence<>.transitionsToFinished.getter(v21);
    v24 = *(_QWORD *)(v23 + 16);
    if (v24)
    {
      v33[1] = v22;
      v34 = v21;
      v25 = *(_QWORD *)(type metadata accessor for TTSVBVoiceModelStateTransition() - 8);
      v26 = (uint64_t *)(v23
                      + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80)));
      v27 = *(_QWORD *)(v25 + 72);
      do
      {
        sub_2487331F8(v26);
        v26 = (uint64_t *)((char *)v26 + v27);
        --v24;
      }
      while (v24);
      swift_bridgeObjectRelease();
      v21 = v34;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v37 = v20;
    v28 = Sequence<>.transitionsToAnyFinalState.getter(v21);
    v29 = *(_QWORD *)(v28 + 16);
    if (v29)
    {
      v30 = *(_QWORD *)(type metadata accessor for TTSVBVoiceModelStateTransition() - 8);
      v31 = v28 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
      v32 = *(_QWORD *)(v30 + 72);
      do
      {
        sub_248733604(v31);
        v31 += v32;
        --v29;
      }
      while (v29);
    }
    swift_bridgeObjectRelease();
    *v12 = v20;
    swift_storeEnumTagMultiPayload();
    v36(v12);
    return sub_2486F5008((uint64_t)v12, &qword_25445F1D0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2487330B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  void *v13;
  id v14;
  _QWORD v15[2];

  v8 = sub_2487B542C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (_QWORD *)((char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = TTSVBProcessIsVoicebankingd();
  if (!(_DWORD)result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v13 = *(void **)(v3 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue);
  *v11 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE5610], v8);
  v14 = v13;
  LOBYTE(v13) = sub_2487B5444();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v13 & 1) == 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  MEMORY[0x24BDAC7A8](result);
  v15[-4] = a1;
  v15[-3] = a3;
  v15[-2] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777D200);
  result = sub_2487B58A0();
  if (!v4)
    return v15[1];
  return result;
}

uint64_t sub_2487331F8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t result;
  void *v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  double v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t *v35;
  id v36;
  id v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  id v48;

  v3 = v1;
  v44 = a1;
  v42 = type metadata accessor for TTSVBVoiceModel();
  MEMORY[0x24BDAC7A8](v42);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2487B533C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2487B542C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = TTSVBProcessIsVoicebankingd();
  if (!(_DWORD)result)
  {
    __break(1u);
    goto LABEL_12;
  }
  v43 = v2;
  v15 = *(void **)(v3 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue);
  *v13 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BEE5610], v10);
  v16 = v15;
  LOBYTE(v15) = sub_2487B5444();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v15 & 1) == 0)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  v17 = sub_2487B0B90();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v17, v6);
  v18 = sub_2487B5324();
  v19 = sub_2487B57E0();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_2486E6000, v18, v19, "Voice model has moved to 'finished' status. Performing cleanup tasks", v20, 2u);
    MEMORY[0x24959AF80](v20, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v21 = type metadata accessor for TTSVBVoiceModelStateTransition();
  sub_248709554((uint64_t)v44 + *(int *)(v21 + 20), (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
  sub_2487341B0();
  v22 = TTSVBVoiceModel.trainingDuration.getter();
  if ((v23 & 1) == 0)
  {
    v24 = *(double *)&v22;
    v25 = (uint64_t *)&v5[*(int *)(v42 + 48)];
    v27 = *v25;
    v26 = v25[1];
    v28 = (uint64_t *)&v5[*(int *)(v42 + 56)];
    v29 = *v28;
    v30 = v28[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    static TTSVBAnalytics.modelTrained(version:duration:trainingLocaleID:)(v27, v26, v29, v30, v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v31 = sub_2487B50CC();
  v44 = &v41;
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(_QWORD *)(v32 + 64);
  MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v41 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_24876D91C();
  v48 = (id)*v35;
  MEMORY[0x24BDAC7A8](v35);
  v37 = v36;
  TTSVBVoiceModel.url.getter((uint64_t)v34);
  v45 = 0;
  v46 = 0;
  v47 = -1;
  v38 = v43;
  _TTSVBFileManager.getOrCreateFile(in:named:problem:)((uint64_t)v34, 0xD000000000000012, 0x80000002487C5A00, (uint64_t)&v45, (uint64_t)v34);
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);

  }
  else
  {
    v39 = *(void (**)(char *, uint64_t))(v32 + 8);
    v39(v34, v31);

    v48 = (id)*v35;
    v45 = 0;
    v46 = 0;
    v47 = -1;
    v40 = sub_2486F4CA0(&qword_25777C1B0, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModel);
    _TTSVBFileManager.write<A>(item:toFile:problem:)((uint64_t)v5, (uint64_t)v34, (uint64_t)&v45, v42, v40);
    v39(v34, v31);
  }
  return sub_2486EDA68((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
}

uint64_t sub_248733604(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t result;
  void *v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = type metadata accessor for TTSVBVoiceModelStateTransition();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2487B533C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2487B542C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = TTSVBProcessIsVoicebankingd();
  if (!(_DWORD)result)
  {
    __break(1u);
    goto LABEL_8;
  }
  v15 = *(void **)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue);
  *v13 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BEE5610], v10);
  v16 = v15;
  LOBYTE(v15) = sub_2487B5444();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v15 & 1) == 0)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v17 = sub_2487B0B90();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v17, v6);
  sub_248709554(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
  v18 = sub_2487B5324();
  v19 = sub_2487B57E0();
  if (os_log_type_enabled(v18, v19))
  {
    v25 = v6;
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v27 = v21;
    *(_DWORD *)v20 = 136315138;
    type metadata accessor for TTSVBVoiceModel();
    v22 = TTSVBVoiceTrainingStatus.localizedTitle.getter();
    v26 = sub_2486EDE5C(v22, v23, &v27);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    sub_2486EDA68((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
    _os_log_impl(&dword_2486E6000, v18, v19, "Voice model has moved to '%s' status. Performing cleanup tasks", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v21, -1, -1);
    MEMORY[0x24959AF80](v20, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v25);
  }
  else
  {
    sub_2486EDA68((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_2487338D0(uint64_t a1)
{
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  sub_24870A34C(0, &qword_25777D158);
  v2 = sub_2487B5684();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25445ECF0);
  v3 = sub_2487B5684();
  swift_retain();
  v1(v2, v3);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_248733974(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  char v35;
  id v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  unsigned int (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  id v64;
  unsigned int v65;
  uint64_t v66;
  unint64_t v67;
  _QWORD v68[3];
  unint64_t *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  unint64_t v79;
  void *v80;
  int v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  unint64_t v90;
  uint64_t v91;

  v9 = type metadata accessor for TTSVBVoiceModelStateTransition();
  v74 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v78 = (uint64_t)v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(qword_25445EDE8);
  MEMORY[0x24BDAC7A8](v11);
  v77 = (char *)v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = type metadata accessor for TTSVBVoiceModel();
  v13 = *(_QWORD *)(v87 - 8);
  v14 = MEMORY[0x24BDAC7A8](v87);
  v73 = (uint64_t)v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v72 = (uint64_t)v68 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v76 = (uint64_t)v68 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)v68 - v20;
  v86 = *(_QWORD *)(a1 + 16);
  if (!v86)
  {
    v67 = MEMORY[0x24BEE4AF8];
    goto LABEL_53;
  }
  v69 = a4;
  v70 = v4;
  v88 = type metadata accessor for TTSVBLocalVoiceModelMO();
  v85 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  v75 = v13;
  v84 = *(_QWORD *)(v13 + 72);
  v22 = a3 & 0xFFFFFFFFFFFFFF8;
  v82 = a3 & 0xFFFFFFFFFFFFFF8;
  if (a3 < 0)
    v22 = a3;
  v68[1] = v22;
  v90 = a3 & 0xC000000000000001;
  v68[2] = a1;
  swift_bridgeObjectRetain();
  v81 = 0;
  v23 = 0;
  v79 = MEMORY[0x24BEE4AF8];
  v91 = a3;
  v80 = a2;
  v83 = v21;
  do
  {
    sub_248709554(v85 + v84 * v23, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
    v89 = (id)static TTSVBLocalVoiceModelMO.findOrFetch(modelID:moc:)((uint64_t)&v21[*(int *)(v87 + 24)], a2);
    if (!v89)
      goto LABEL_7;
    if ((unint64_t)a3 >> 62)
    {
      swift_bridgeObjectRetain();
      v24 = sub_2487B5B64();
      if (!v24)
        goto LABEL_5;
LABEL_11:
      v25 = 4;
      while (1)
      {
        if (v90)
          v26 = (id)MEMORY[0x24959A434](v25 - 4, a3);
        else
          v26 = *(id *)(a3 + 8 * v25);
        v27 = v26;
        v28 = v25 - 3;
        if (__OFADD__(v25 - 4, 1))
        {
          __break(1u);
          return;
        }
        v29 = objc_msgSend(v26, sel_taskID);
        v30 = sub_2487B5528();
        v32 = v31;

        v34 = v30 == sub_2487B51EC() && v32 == v33;
        if (v34)
        {
          a3 = v91;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_26;
        }
        v35 = sub_2487B5CE4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v35 & 1) != 0)
          break;

        ++v25;
        v34 = v28 == v24;
        a3 = v91;
        if (v34)
        {

          swift_bridgeObjectRelease();
          a2 = v80;
          goto LABEL_6;
        }
      }
      a3 = v91;
LABEL_26:
      a2 = v80;
      v21 = v83;
      swift_bridgeObjectRelease();
      v36 = objc_msgSend(v27, sel_status);
      v37 = sub_2486F4CA0(&qword_25777D138, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBLocalVoiceModelMO, (uint64_t)&protocol conformance descriptor for TTSVBLocalVoiceModelMO);
      TTSVBCommonVoiceModelMO.status.setter((uint64_t)v36, v88, v37);
      if (objc_msgSend(v27, (SEL)&stru_25199A840.attr) != (id)7)
      {
LABEL_33:
        if (objc_msgSend(v27, sel_status) == (id)7)
          v52 = 4;
        else
          v52 = (uint64_t)objc_msgSend(v27, sel_trainingStatus);
        v53 = (uint64_t)v77;
        v54 = v89;
        TTSVBCommonVoiceModelMO.trainingStatus.setter(v52, v88, v37);
        objc_msgSend(v27, sel_normalizedProgressValue);
        objc_msgSend(v54, sel_setTrainingTaskProgress_);
        (*(void (**)(_QWORD))((*MEMORY[0x24BEE4EA0] & *v54) + 0x58))(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v53, 1, v87) == 1)
        {
          sub_2486F5008(v53, qword_25445EDE8);
        }
        else
        {
          v55 = v53;
          v56 = v76;
          sub_24870A2C4(v55, v76, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
          v57 = v72;
          sub_248709554((uint64_t)v21, v72, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
          v58 = v56;
          v59 = v73;
          sub_248709554(v58, v73, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
          TTSVBVoiceModelStateTransition.init(previous:current:)(v57, v59, v78);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            v60 = v79;
          else
            v60 = sub_24874BBD0(0, *(_QWORD *)(v79 + 16) + 1, 1, v79, &qword_25777D210, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
          v62 = *(_QWORD *)(v60 + 16);
          v61 = *(_QWORD *)(v60 + 24);
          if (v62 >= v61 >> 1)
            v60 = sub_24874BBD0(v61 > 1, v62 + 1, 1, v60, &qword_25777D210, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
          *(_QWORD *)(v60 + 16) = v62 + 1;
          v63 = (*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
          v79 = v60;
          sub_24870A2C4(v78, v60 + v63 + *(_QWORD *)(v74 + 72) * v62, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
          sub_2486EDA68(v76, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
        }
        v64 = v89;
        v65 = objc_msgSend(v89, sel_hasPersistentChangedValues);

        v81 |= v65;
        goto LABEL_7;
      }
      v38 = objc_msgSend(v89, sel_trainingFinishedDate);
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
      MEMORY[0x24BDAC7A8](v39);
      v41 = (char *)v68 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (v38)
      {
        v42 = sub_2487B51D4();
        v71 = v68;
        v43 = *(_QWORD *)(v42 - 8);
        MEMORY[0x24BDAC7A8](v42);
        v45 = (char *)v68 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_2487B51A4();

        (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v41, v45, v42);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v41, 0, 1, v42);
        v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
        a3 = v91;
        if (v46(v41, 1, v42) != 1)
        {
          sub_2486F5008((uint64_t)v41, &qword_25445ED38);
LABEL_32:
          a2 = v80;
          v21 = v83;
          goto LABEL_33;
        }
      }
      else
      {
        v42 = sub_2487B51D4();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v41, 1, 1, v42);
      }
      sub_2486F5008((uint64_t)v41, &qword_25445ED38);
      v47 = sub_2487B51D4();
      v48 = *(_QWORD *)(v42 - 8);
      MEMORY[0x24BDAC7A8](v47);
      v50 = (char *)v68 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_2487B51C8();
      v51 = (void *)sub_2487B5174();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v42);
      objc_msgSend(v89, sel_setTrainingFinishedDate_, v51);

      goto LABEL_32;
    }
    v24 = *(_QWORD *)(v82 + 16);
    swift_bridgeObjectRetain();
    if (v24)
      goto LABEL_11;
LABEL_5:

    swift_bridgeObjectRelease();
LABEL_6:
    v21 = v83;
LABEL_7:
    ++v23;
    sub_2486EDA68((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
  }
  while (v23 != v86);
  swift_bridgeObjectRelease();
  if ((v81 & 1) != 0)
  {
    NSManagedObjectContext.trySave()();
    a4 = v69;
    if (v66)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    a4 = v69;
  }
  v67 = v79;
LABEL_53:
  *a4 = v67;
}

uint64_t sub_2487341B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;
  void *v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_2487B533C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2487B542C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (_QWORD *)((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = TTSVBProcessIsVoicebankingd();
  if (!(_DWORD)result)
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = *(void **)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue);
  *v9 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5610], v6);
  v12 = v11;
  LOBYTE(v11) = sub_2487B5444();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v11 & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v13 = sub_2487B0D54();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v13, v2);
  v14 = sub_2487B5324();
  v15 = sub_2487B57E0();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_2486E6000, v14, v15, "Will mirror local voices into cloud datastore", v16, 2u);
    MEMORY[0x24959AF80](v16, -1, -1);
  }

  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v17 = *(void **)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore);
  if (!v17)
    goto LABEL_11;
  LOBYTE(aBlock[0]) = 1;
  v18 = v17;
  v19 = sub_2487749A0(aBlock);

  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v19;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_248750920;
  *(_QWORD *)(v21 + 24) = v20;
  aBlock[4] = sub_248750F08;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2487490FC;
  aBlock[3] = &block_descriptor_315;
  v22 = _Block_copy(aBlock);
  v23 = v19;
  swift_retain();
  swift_release();
  objc_msgSend(v23, sel_performBlockAndWait_, v22);

  _Block_release(v22);
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v23 & 1) != 0)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
  }
  return result;
}

uint64_t TTSVBVoiceBankingManager.synchronizeFileBackedFuturesForModelID(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_248734494(a1, a2, a3, (uint64_t)&unk_251992500, (uint64_t)sub_248734590);
}

uint64_t sub_248734494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v17;

  v10 = sub_2487B5228();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v5;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  v15 = v5;
  sub_24872F8CC(a5, v14, a2, a3);
  return swift_release();
}

uint64_t sub_248734590()
{
  return sub_248735EA4((uint64_t (*)(uint64_t))sub_2487345AC);
}

void sub_2487345AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v3 = sub_2487B542C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!TTSVBProcessIsVoicebankingd())
  {
    __break(1u);
    goto LABEL_6;
  }
  v7 = *(void **)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue);
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEE5610], v3);
  v8 = v7;
  LOBYTE(v7) = sub_2487B5444();
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) == 0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v9 = *(void **)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore);
  if (v9)
  {
    v14 = 1;
    v10 = v9;
    v11 = sub_2487749A0(&v14);

    MEMORY[0x24BDAC7A8](v12);
    *(&v13 - 2) = a1;
    *(&v13 - 1) = (uint64_t)v11;
    sub_2487B58A0();

    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t TTSVBVoiceBankingManager.synchronizeFileBackedFuturesForAllModels(completion:)(uint64_t a1, uint64_t a2)
{
  return sub_248738760(a1, a2, (uint64_t)&unk_251992528, (uint64_t)sub_248734CE4);
}

uint64_t sub_24873471C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t (*v19)();
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  void *v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int v62;
  char v63;
  char v64;

  v3 = sub_2487B542C();
  v55 = *(_QWORD *)(v3 - 8);
  v56 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v54 = (id *)((char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_25445EDE8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for TTSVBVoiceModel();
  v8 = *(_QWORD *)(v60 - 8);
  v9 = MEMORY[0x24BDAC7A8](v60);
  v59 = (uint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v53 = (uint64_t)&v48 - v12;
  result = MEMORY[0x24BDAC7A8](v11);
  v57 = a1;
  v58 = (uint64_t)&v48 - v14;
  v52 = OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore;
  v15 = *(void **)(a1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore);
  if (v15)
  {
    v64 = 1;
    v16 = v15;
    v17 = sub_2487749A0(&v64);

    v18 = type metadata accessor for TTSVBCloudVoiceModelMO();
    v19 = sub_248787BD4(v18, (uint64_t)&protocol witness table for TTSVBCloudVoiceModelMO);
    v48 = v17;
    v21 = static DSO<>.fetch(in:config:)((uint64_t)v17, (void (*)(id))v19, v20, v18, (uint64_t)&protocol witness table for TTSVBCloudVoiceModelMO);
    swift_release();
    if (v21 >> 62)
    {
      swift_bridgeObjectRetain();
      result = sub_2487B5B64();
      v22 = result;
      v61 = v1;
      if (result)
        goto LABEL_4;
    }
    else
    {
      v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
      v61 = v1;
      if (v22)
      {
LABEL_4:
        if (v22 < 1)
        {
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
        v23 = 0;
        v24 = MEMORY[0x24BEE4AF8];
        v25 = (_QWORD *)MEMORY[0x24BEE4EA0];
        do
        {
          if ((v21 & 0xC000000000000001) != 0)
            v26 = (_QWORD *)MEMORY[0x24959A434](v23, v21);
          else
            v26 = *(id *)(v21 + 8 * v23 + 32);
          v27 = v26;
          (*(void (**)(_QWORD))((*v25 & *v26) + 0x60))(0);

          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v60) == 1)
          {
            sub_2486F5008((uint64_t)v7, qword_25445EDE8);
          }
          else
          {
            v28 = v53;
            sub_24870A2C4((uint64_t)v7, v53, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
            sub_24870A2C4(v28, v59, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v24 = sub_24874BBD0(0, *(_QWORD *)(v24 + 16) + 1, 1, v24, &qword_25777D1F8, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
            v30 = *(_QWORD *)(v24 + 16);
            v29 = *(_QWORD *)(v24 + 24);
            if (v30 >= v29 >> 1)
              v24 = sub_24874BBD0(v29 > 1, v30 + 1, 1, v24, &qword_25777D1F8, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
            *(_QWORD *)(v24 + 16) = v30 + 1;
            sub_24870A2C4(v59, v24+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v30, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
            v25 = (_QWORD *)MEMORY[0x24BEE4EA0];
          }
          ++v23;
        }
        while (v22 != v23);
LABEL_19:
        swift_bridgeObjectRelease_n();
        v31 = *(_QWORD *)(v24 + 16);
        if (!v31)
        {
LABEL_26:

          return swift_bridgeObjectRelease();
        }
        v53 = v58 + *(int *)(v60 + 24);
        v51 = *(void **)(v57 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue);
        v32 = v24 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
        v49 = *(_QWORD *)(v8 + 72);
        v62 = *MEMORY[0x24BEE5610];
        v50 = MEMORY[0x24BEE4AE0] + 8;
        v33 = v55;
        while (1)
        {
          v60 = v32;
          v34 = v58;
          sub_248709554(v32, v58, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
          v35 = sub_2487B5228();
          v36 = *(_QWORD *)(v35 - 8);
          MEMORY[0x24BDAC7A8](v35);
          v38 = (char *)&v48 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v38, v53, v35);
          sub_2486EDA68(v34, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
          result = TTSVBProcessIsVoicebankingd();
          if (!(_DWORD)result)
            break;
          v59 = v31;
          v39 = v54;
          v40 = v51;
          *v54 = v51;
          v41 = v56;
          (*(void (**)(_QWORD *, _QWORD, uint64_t))(v33 + 104))(v39, v62, v56);
          v42 = v40;
          LOBYTE(v40) = sub_2487B5444();
          result = (*(uint64_t (**)(_QWORD *, uint64_t))(v33 + 8))(v39, v41);
          if ((v40 & 1) == 0)
            goto LABEL_29;
          v43 = *(void **)(v57 + v52);
          if (!v43)
            goto LABEL_31;
          v63 = 1;
          v44 = v43;
          v45 = sub_2487749A0(&v63);

          MEMORY[0x24BDAC7A8](v46);
          *(&v48 - 2) = v38;
          *(&v48 - 1) = v45;
          v47 = v61;
          sub_2487B58A0();
          v61 = v47;
          if (v47)
          {

            (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
            return swift_bridgeObjectRelease();
          }

          (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
          v32 = v60 + v49;
          v31 = v59 - 1;
          if (v59 == 1)
            goto LABEL_26;
        }
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
    }
    v24 = MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_248734CE4()
{
  uint64_t v0;

  return sub_24873471C(*(_QWORD *)(v0 + 16));
}

void sub_248734CFC(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_QWORD);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  NSObject *v38;
  os_log_type_t v39;
  _BOOL4 v40;
  uint8_t *v41;
  uint64_t v42;
  unint64_t v43;
  NSObject *v44;
  uint64_t *v45;
  uint64_t v46;
  uint8_t *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t (*__ptr32 *v57)();
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  unint64_t v64;
  char *v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  id v72;
  void *v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  unsigned __int8 v83;
  void *v84;
  id v85;
  unsigned __int8 v86;
  void (*v87)(char *, uint64_t);
  BOOL v88;
  char *v89;
  NSObject *v90;
  os_log_type_t v91;
  uint64_t v92;
  id v93;
  void *v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  void (*v101)(char *, uint64_t);
  _BOOL4 v102;
  void (*v103)(char *, uint64_t);
  void *v104;
  id v105;
  uint64_t v106;
  _BOOL4 v107;
  char *v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  NSObject *v115;
  os_log_type_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  void (*v123)(char *, uint64_t, uint64_t);
  uint64_t v124;
  void (*v125)(char *, uint64_t);
  uint64_t v126;
  NSObject *v127;
  NSObject *v128;
  uint64_t *v129;
  uint64_t *v130;
  uint64_t v131;
  void *v132;
  char *v133;
  void (*v134)(char *, char *, uint64_t);
  uint64_t v135;
  char *v136;
  uint64_t *v137;
  uint64_t v138;
  char *v139;
  __int128 v140;
  uint64_t v141;
  id v142;
  unsigned int (*v143)(char *, uint64_t, uint64_t);
  uint64_t v144;
  void (*v145)(char *, uint64_t, uint64_t);
  uint64_t (*v146)(char *, uint64_t);
  uint64_t v147;
  unint64_t v148;
  uint8_t *v149;
  uint64_t v150;
  void (*v151)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  NSObject *v156;
  char *v157;
  uint64_t *v158;
  uint64_t *v159;
  uint64_t v160;
  unint64_t v161;
  NSObject *v162;

  v4 = sub_2487B533C();
  v5 = *(uint64_t **)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v122 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v122 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v122 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(qword_25445EDE8);
  MEMORY[0x24BDAC7A8](v14);
  v158 = (uint64_t *)((char *)&v122 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for TTSVBCloudVoiceModelMO();
  v16 = v159;
  v17 = static TTSVBCloudVoiceModelMO.requireModelWithID(_:moc:)(a1, a2);
  if (v16)
    return;
  v18 = (_QWORD *)v17;
  v154 = v4;
  v155 = v11;
  v157 = v13;
  v159 = v5;
  v132 = a2;
  v138 = a1;
  v133 = v8;
  v135 = 0;
  v19 = sub_2487B50CC();
  v137 = &v122;
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v153 = v21;
  v136 = (char *)&v122 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28);
  v23 = *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64);
  MEMORY[0x24BDAC7A8](v22);
  v24 = *(void (**)(_QWORD))((*MEMORY[0x24BEE4EA0] & *v18) + 0x60);
  v25 = (uint64_t)v158;
  v142 = v18;
  v24(0);
  v26 = type metadata accessor for TTSVBVoiceModel();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v25, 1, v26) == 1)
  {
    sub_2486F5008(v25, qword_25445EDE8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))((char *)&v122 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v19);
LABEL_5:
    sub_2486F5008((uint64_t)&v122 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_25445ED28);
    v160 = 0;
    v161 = 0xE000000000000000;
    sub_2487B5AA4();
    sub_2487B55AC();
    sub_2487B51EC();
    sub_2487B55AC();
    swift_bridgeObjectRelease();
    sub_2487B55AC();
    v27 = v160;
    v28 = v161;
    type metadata accessor for TTSVBError(0);
    sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
    swift_allocError();
    TTSVBError.init(_:_:_:)(v27, v28, 0, 0, 0, v29);
    swift_willThrow();

    return;
  }
  TTSVBVoiceModel.url.getter((uint64_t)&v122 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2486EDA68(v25, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
  v151 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  v151((char *)&v122 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v19);
  v143 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v143((char *)&v122 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v19) == 1)
    goto LABEL_5;
  v141 = v20;
  v134 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v134(v136, (char *)&v122 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), v19);
  v30 = sub_2487B0D54();
  v31 = (void (*)(char *, uint64_t, uint64_t))v159[2];
  v32 = v157;
  v144 = v30;
  v145 = v31;
  v33 = v154;
  ((void (*)(char *))v31)(v157);
  v34 = sub_2487B5228();
  v158 = &v122;
  v35 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v124 = v36;
  v37 = (char *)&v122 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 16);
  v123(v37, v138, v34);
  v38 = sub_2487B5324();
  v39 = sub_2487B57BC();
  v156 = v38;
  v40 = os_log_type_enabled(v38, v39);
  v152 = v19;
  v126 = v34;
  if (v40)
  {
    v41 = (uint8_t *)swift_slowAlloc();
    v150 = swift_slowAlloc();
    v160 = v150;
    *(_DWORD *)v41 = 136315138;
    v149 = v41 + 4;
    v42 = sub_2487B51EC();
    v162 = sub_2486EDE5C(v42, v43, &v160);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    v125 = *(void (**)(char *, uint64_t))(v35 + 8);
    v125(v37, v34);
    v44 = v156;
    _os_log_impl(&dword_2486E6000, v156, v39, "Beginning file-backed future sync for model: %s", v41, 0xCu);
    v45 = (uint64_t *)MEMORY[0x24BEE4AD8];
    v46 = v150;
    swift_arrayDestroy();
    v33 = v154;
    MEMORY[0x24959AF80](v46, -1, -1);
    v47 = v41;
    v19 = v152;
    MEMORY[0x24959AF80](v47, -1, -1);

    v146 = (uint64_t (*)(char *, uint64_t))v159[1];
    v48 = v146(v32, v33);
    v49 = v142;
    v50 = v45;
  }
  else
  {
    v125 = *(void (**)(char *, uint64_t))(v35 + 8);
    v125(v37, v34);

    v146 = (uint64_t (*)(char *, uint64_t))v159[1];
    v48 = v146(v32, v33);
    v49 = v142;
    v50 = (uint64_t *)MEMORY[0x24BEE4AD8];
  }
  v51 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v49) + 0x58);
  v52 = ((uint64_t (*)(uint64_t))v51)(v48);
  v53 = (uint64_t *)v141;
  if (v52 >> 62)
LABEL_55:
    v122 = sub_2487B5B64();
  else
    v122 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
  v54 = swift_bridgeObjectRelease();
  v51 = ((uint64_t (*)(uint64_t))v51)(v54);
  if (v51 >> 62)
  {
    swift_bridgeObjectRetain();
    v56 = sub_2487B5B64();
    swift_bridgeObjectRelease();
    v57 = &off_2487B7000;
    if (v56)
      goto LABEL_13;
  }
  else
  {
    v56 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
    v57 = &off_2487B7000;
    if (v56)
    {
LABEL_13:
      v149 = (uint8_t *)v23;
      v128 = 0;
      v127 = 0;
      v131 = 0;
      v156 = 0;
      v150 = v51 & 0xC000000000000001;
      v23 = 4;
      *(_QWORD *)&v55 = *((_QWORD *)v57 + 83);
      v140 = v55;
      v139 = (char *)(v50 + 1);
      v147 = v56;
      v148 = v51;
      while (1)
      {
        v58 = v23 - 4;
        if (v150)
        {
          v59 = (id)MEMORY[0x24959A434](v23 - 4, v51);
          v60 = v23 - 3;
          if (__OFADD__(v58, 1))
            goto LABEL_53;
        }
        else
        {
          v59 = *(id *)(v51 + 8 * v23);
          v60 = v23 - 3;
          if (__OFADD__(v58, 1))
          {
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
            goto LABEL_55;
          }
        }
        v157 = (char *)v60;
        v158 = &v122;
        v61 = MEMORY[0x24BDAC7A8](v59);
        v63 = (char *)&v122 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
        v64 = (unint64_t)(v149 + 15) & 0xFFFFFFFFFFFFFFF0;
        v65 = (char *)&v122 - v64;
        v159 = (uint64_t *)MEMORY[0x24BDAC7A8](v61);
        v66 = objc_msgSend(v159, sel_fileFuture);
        if (!v66)
          break;
        v67 = objc_msgSend(v66, sel_fileURL);
        v68 = swift_unknownObjectRelease();
        MEMORY[0x24BDAC7A8](v68);
        v53 = (uint64_t *)((char *)&v122 - v64);
        if (v67)
        {
          sub_2487B509C();

          v69 = 0;
        }
        else
        {
          v69 = 1;
        }
        v33 = v154;
        v70 = (char *)&v122 - v64;
        v71 = v152;
        v151(v70, v69, 1, v152);
        sub_2486F4F70((uint64_t)v53, (uint64_t)v65, &qword_25445ED28);
        v19 = v71;
        if (v143(v65, 1, v71) == 1)
          goto LABEL_25;
        v134(v63, v65, v71);
        v53 = sub_24876D91C();
        v160 = *v53;
        if ((_TTSVBFileManager.fileExists(_:)() & 1) == 0
          || (v72 = objc_msgSend(v159, sel_relativePath)) == 0)
        {
          (*(void (**)(char *, uint64_t))(v141 + 8))(v63, v71);
          goto LABEL_34;
        }
        v73 = v72;
        v74 = sub_2487B5528();
        v50 = v75;

        v129 = &v122;
        MEMORY[0x24BDAC7A8](v76);
        v78 = (char *)&v122 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
        v160 = v74;
        v161 = (unint64_t)v50;
        v79 = sub_2487B4FE8();
        v130 = &v122;
        v80 = *(_QWORD *)(v79 - 8);
        MEMORY[0x24BDAC7A8](v79);
        v82 = (char *)&v122 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, _QWORD, uint64_t))(v80 + 104))(v82, *MEMORY[0x24BDCD7A8], v79);
        sub_2486ED9E0();
        sub_2487B50C0();
        (*(void (**)(char *, uint64_t))(v80 + 8))(v82, v79);
        swift_bridgeObjectRelease();
        v160 = *v53;
        v83 = _TTSVBFileManager.fileExists(_:)();
        v84 = (void *)*v53;
        if ((v83 & 1) != 0)
        {
          v160 = *v53;
          v85 = v84;
          v86 = _TTSVBFileManager.filesAtURLsAreEqual(_:_:)();

          v87 = *(void (**)(char *, uint64_t))(v141 + 8);
          v19 = v152;
          v87(v78, v152);
          v87(v63, v19);
          if ((v86 & 1) != 0)
          {
            v88 = __OFADD__(v127, 1);
            v127 = ((char *)v127 + 1);
            v33 = v154;
            v51 = v148;
            if (v88)
              goto LABEL_73;
          }
          else
          {
            v88 = __OFADD__(v128, 1);
            v128 = ((char *)v128 + 1);
            v33 = v154;
            v51 = v148;
            if (v88)
              goto LABEL_74;
          }
        }
        else
        {
          v160 = *v53;
          v53 = v84;
          v100 = v135;
          _TTSVBFileManager.cloneFile(from:to:)((uint64_t)v63, v78);
          v135 = v100;
          v19 = v152;
          if (v100)
          {

            v103 = *(void (**)(char *, uint64_t))(v141 + 8);
            v103(v78, v19);
            v103(v63, v19);
            swift_bridgeObjectRelease();
            v103(v136, v19);
            return;
          }

          v101 = *(void (**)(char *, uint64_t))(v141 + 8);
          v101(v78, v19);
          v101(v63, v19);
          v88 = __OFADD__(v131++, 1);
          if (v88)
          {
            __break(1u);
LABEL_73:
            __break(1u);
LABEL_74:
            __break(1u);
            return;
          }
          v33 = v154;
          v51 = v148;
        }
        v98 = v147;
        v99 = v157;
LABEL_42:
        ++v23;
        if (v99 == (char *)v98)
        {
          swift_bridgeObjectRelease();
          if (v156)
          {
            v102 = 0;
            v53 = (uint64_t *)v141;
            goto LABEL_59;
          }
          v53 = (uint64_t *)v141;
          goto LABEL_58;
        }
      }
      v151((char *)&v122 - v64, 1, 1, v19);
LABEL_25:
      sub_2486F5008((uint64_t)v65, &qword_25445ED28);
LABEL_34:
      v89 = v155;
      v145(v155, v144, v33);
      v50 = v159;
      v90 = sub_2487B5324();
      v91 = sub_2487B57C8();
      if (os_log_type_enabled(v90, v91))
      {
        v53 = (uint64_t *)swift_slowAlloc();
        v92 = swift_slowAlloc();
        v160 = v92;
        *(_DWORD *)v53 = v140;
        v93 = objc_msgSend(v50, sel_relativePath);
        if (v93)
        {
          v94 = v93;
          v95 = sub_2487B5528();
          v97 = v96;

        }
        else
        {
          v97 = 0xE600000000000000;
          v95 = 0x3E656E6F6E3CLL;
        }
        v51 = v148;
        *(uint64_t *)((char *)v53 + 4) = sub_2486EDE5C(v95, v97, &v160);

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2486E6000, v90, v91, "Future not downloaded: %s", (uint8_t *)v53, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24959AF80](v92, -1, -1);
        MEMORY[0x24959AF80](v53, -1, -1);

        v33 = v154;
        v146(v155, v154);
        v19 = v152;
      }
      else
      {

        v146(v89, v33);
        v51 = v148;
      }
      v88 = __OFADD__(v156, 1);
      v156 = ((char *)v156 + 1);
      if (v88)
        goto LABEL_54;
      v98 = v147;
      v99 = v157;
      goto LABEL_42;
    }
  }
  swift_bridgeObjectRelease();
  v128 = 0;
  v127 = 0;
  v131 = 0;
LABEL_58:
  v156 = 0;
  v102 = v122 > 0;
LABEL_59:
  v104 = (void *)sub_2487B56D8();
  v105 = v142;
  objc_msgSend(v142, sel_setIsDownloaded_, v104);

  if (objc_msgSend(v105, sel_hasPersistentChangedValues)
    && (NSManagedObjectContext.trySave()(), (v135 = v106) != 0))
  {
    ((void (*)(char *, uint64_t))v53[1])(v136, v19);

  }
  else
  {
    v107 = v131 > 0 && v102;
    v108 = v133;
    if (v107)
    {
      v109 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
      objc_msgSend(v109, sel_postNotificationName_object_, *sub_2487290C4(), 0);

    }
    v110 = ((uint64_t (*)(char *, uint64_t, uint64_t))v145)(v108, v144, v33);
    MEMORY[0x24BDAC7A8](v110);
    v112 = v108;
    v113 = (char *)&v122 - ((v111 + 15) & 0xFFFFFFFFFFFFFFF0);
    v114 = v126;
    v123(v113, v138, v126);
    v115 = sub_2487B5324();
    v116 = sub_2487B57BC();
    if (os_log_type_enabled(v115, v116))
    {
      v117 = swift_slowAlloc();
      v159 = &v122;
      v118 = v117;
      v119 = swift_slowAlloc();
      v160 = v119;
      *(_DWORD *)v118 = 136316162;
      v120 = sub_2487B51EC();
      v162 = sub_2486EDE5C(v120, v121, &v160);
      sub_2487B593C();
      swift_bridgeObjectRelease();
      v125(v113, v114);
      *(_WORD *)(v118 + 12) = 2048;
      v162 = v156;
      sub_2487B593C();
      *(_WORD *)(v118 + 22) = 2048;
      v162 = v131;
      sub_2487B593C();
      *(_WORD *)(v118 + 32) = 2048;
      v162 = v127;
      sub_2487B593C();
      *(_WORD *)(v118 + 42) = 2048;
      v162 = v128;
      sub_2487B593C();
      _os_log_impl(&dword_2486E6000, v115, v116, "Finished file-backed future sync for model: %s. undownloaded=%ld cloned=%ld existingEqual=%ld existingUnequal=%ld", (uint8_t *)v118, 0x34u);
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v119, -1, -1);
      MEMORY[0x24959AF80](v118, -1, -1);

      v146(v133, v154);
    }
    else
    {

      v125(v113, v114);
      v146(v112, v33);
    }
    (*(void (**)(char *, uint64_t))(v141 + 8))(v136, v152);
  }
}

uint64_t TTSVBVoiceBankingManager.deleteModel(withID:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_248734494(a1, a2, a3, (uint64_t)&unk_251992550, (uint64_t)sub_248735E88);
}

uint64_t sub_248735E88()
{
  return sub_248735EA4((uint64_t (*)(uint64_t))sub_248735EF8);
}

uint64_t sub_248735EA4(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_2487B5228() - 8) + 80);
  return a1(v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_248735EF8(uint64_t *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  id v23;
  uint64_t result;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t *v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint8_t *v39;
  uint64_t (*v40)(char *, uint64_t);
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void (*v55)(_QWORD, _QWORD);
  char *v56;
  NSObject *v57;
  os_log_type_t v58;
  _BOOL4 v59;
  uint64_t v60;
  uint8_t *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint8_t *v67;
  uint64_t *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  void (*v74)(char *, char *, uint64_t);
  id v75;
  char *v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  char *v91;
  void (*v92)(char *, uint64_t);
  id v93;
  uint64_t v94;
  char *v95;
  id v96;
  char *v97;
  uint64_t *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  NSObject *v105;
  void (*v106)(char *, uint64_t);
  os_log_type_t v107;
  uint8_t *v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  void (*v113)(char *, char *, uint64_t);
  uint64_t (*v114)(uint64_t, uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  void (*v117)(char *, uint64_t *, uint64_t);
  void (*v118)(char *, uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  void (*v124)(_QWORD, _QWORD);
  char *v125;
  __int128 v126;
  uint64_t *v127;
  uint64_t v128;
  void (*v129)(char *, uint64_t, uint64_t);
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  __int128 v138;
  char v139;
  uint64_t v140;
  uint64_t v141;
  id v142;

  v134 = a1;
  v131 = __swift_instantiateConcreteTypeFromMangledName(qword_25445EDE8);
  v2 = MEMORY[0x24BDAC7A8](v131);
  v121 = (uint64_t)&v112 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v127 = (uint64_t *)((char *)&v112 - v4);
  *(_QWORD *)&v126 = type metadata accessor for TTSVBPath();
  MEMORY[0x24BDAC7A8](v126);
  v6 = (char *)&v112 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2487B533C();
  v136 = *(_QWORD *)(v7 - 8);
  v137 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v112 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v112 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v135 = (char *)&v112 - v17;
  v18 = sub_2487B542C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (uint64_t *)((char *)&v112 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v133 = v1;
  v22 = *(void **)&v1[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue];
  *v21 = v22;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v19 + 104))(v21, *MEMORY[0x24BEE5610], v18);
  v23 = v22;
  LOBYTE(v22) = sub_2487B5444();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v19 + 8))(v21, v18);
  if ((v22 & 1) == 0)
  {
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    return result;
  }
  v124 = (void (*)(_QWORD, _QWORD))v6;
  v122 = v10;
  v25 = sub_2487B0B90();
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v136 + 16);
  v128 = v25;
  v129 = v26;
  ((void (*)(char *))v26)(v135);
  v27 = sub_2487B5228();
  v130 = &v112;
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v119 = v29;
  v30 = (char *)&v112 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = v134;
  v117 = *(void (**)(char *, uint64_t *, uint64_t))(v28 + 16);
  v117(v30, v134, v27);
  v32 = sub_2487B5324();
  v33 = sub_2487B57E0();
  v34 = os_log_type_enabled(v32, v33);
  v120 = v27;
  v123 = v13;
  v125 = v16;
  if (v34)
  {
    v35 = (uint8_t *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    v141 = v36;
    *(_DWORD *)v35 = 136315138;
    v118 = (void (*)(char *, uint64_t))(v35 + 4);
    sub_2486F4CA0(&qword_25777D0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA50], MEMORY[0x24BDCEAC0]);
    v37 = sub_2487B5CCC();
    v140 = sub_2486EDE5C(v37, v38, &v141);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    v118 = *(void (**)(char *, uint64_t))(v28 + 8);
    v118(v30, v27);
    _os_log_impl(&dword_2486E6000, v32, v33, "Will delete model and all related data with ID: %s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v36, -1, -1);
    v39 = v35;
    v31 = v134;
    MEMORY[0x24959AF80](v39, -1, -1);
  }
  else
  {
    v118 = *(void (**)(char *, uint64_t))(v28 + 8);
    v118(v30, v27);
  }

  v40 = *(uint64_t (**)(char *, uint64_t))(v136 + 8);
  result = v40(v135, v137);
  v41 = *(void **)&v133[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore];
  if (!v41)
    goto LABEL_24;
  LOBYTE(v141) = 1;
  v42 = v41;
  v43 = sub_2487749A0(&v141);

  v44 = swift_allocBox();
  v46 = v45;
  v47 = type metadata accessor for TTSVBVoiceModel();
  v48 = *(_QWORD *)(v47 - 8);
  v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56))(v46, 1, 1, v47);
  MEMORY[0x24BDAC7A8](v49);
  *(&v112 - 4) = (uint64_t)v31;
  *(&v112 - 3) = (uint64_t)v43;
  *(&v112 - 2) = v44;
  v50 = v132;
  sub_2487B58A0();
  if (v50)
  {

    return swift_release();
  }
  v130 = (uint64_t *)v43;
  v133 = (char *)v40;
  v135 = 0;
  v51 = &v112;
  v136 = sub_2487B50CC();
  v131 = *(_QWORD *)(v136 - 8);
  MEMORY[0x24BDAC7A8](v136);
  v132 = v52;
  v53 = (char *)&v112 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v115 = v46;
  v54 = (uint64_t)v127;
  sub_2486F4E74(v46, (uint64_t)v127, qword_25445EDE8);
  v114 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
  result = v114(v54, 1, v47);
  if ((_DWORD)result == 1)
    goto LABEL_25;
  v55 = v124;
  sub_24870A2C4(v54, (uint64_t)v124, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
  swift_storeEnumTagMultiPayload();
  TTSVBPath.url.getter((uint64_t)v53);
  sub_2486EDA68((uint64_t)v55, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBPath);
  v56 = v125;
  v129(v125, v128, v137);
  v57 = sub_2487B5324();
  v58 = sub_2487B57E0();
  v59 = os_log_type_enabled(v57, v58);
  v116 = v44;
  if (v59)
  {
    v60 = swift_slowAlloc();
    v127 = &v112;
    v61 = (uint8_t *)v60;
    v62 = v53;
    v63 = swift_slowAlloc();
    v140 = v63;
    *(_DWORD *)v61 = 136315138;
    *(_QWORD *)&v126 = v61 + 4;
    swift_beginAccess();
    v64 = sub_2487B50B4();
    *(_QWORD *)&v138 = sub_2486EDE5C(v64, v65, &v140);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2486E6000, v57, v58, "Deleting any staged trainings: %s", v61, 0xCu);
    swift_arrayDestroy();
    v66 = v63;
    v53 = v62;
    MEMORY[0x24959AF80](v66, -1, -1);
    v67 = v61;
    v51 = v127;
    MEMORY[0x24959AF80](v67, -1, -1);
  }

  ((void (*)(char *, uint64_t))v133)(v56, v137);
  v68 = sub_24876D91C();
  v142 = (id)*v68;
  v69 = v142;
  v70 = swift_beginAccess();
  v127 = &v112;
  v71 = v132;
  MEMORY[0x24BDAC7A8](v70);
  v72 = v131;
  v73 = v53;
  v74 = *(void (**)(char *, char *, uint64_t))(v131 + 16);
  v74((char *)&v112 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0), v73, v136);
  v126 = xmmword_2487BE600;
  v138 = xmmword_2487BE600;
  v139 = 3;
  v75 = v69;
  v76 = v135;
  _TTSVBFileManager.removeItem(_:problem:)((uint64_t)&v112 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)&v138);
  if (v76)
  {

    v77 = *(void (**)(char *, uint64_t))(v72 + 8);
    v78 = v136;
    v77((char *)&v112 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0), v136);

    v77(v73, v78);
    return swift_release();
  }
  v113 = v74;
  v125 = v73;
  v135 = 0;
  v124 = *(void (**)(_QWORD, _QWORD))(v72 + 8);
  v124((char *)&v112 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0), v136);

  v79 = v121;
  sub_2486F4E74(v115, v121, qword_25445EDE8);
  result = v114(v79, 1, v47);
  if ((_DWORD)result == 1)
    goto LABEL_26;
  v127 = v51;
  MEMORY[0x24BDAC7A8](result);
  TTSVBVoiceModel.url.getter((uint64_t)&v112 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2486EDA68(v79, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
  v80 = v125;
  (*(void (**)(char *, char *, uint64_t))(v72 + 40))(v125, (char *)&v112 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0), v136);
  v81 = v123;
  v129(v123, v128, v137);
  v82 = sub_2487B5324();
  v83 = sub_2487B57E0();
  if (os_log_type_enabled(v82, v83))
  {
    v84 = (uint8_t *)swift_slowAlloc();
    v85 = swift_slowAlloc();
    *(_QWORD *)&v138 = v85;
    *(_DWORD *)v84 = 136315138;
    v86 = sub_2487B50B4();
    v142 = (id)sub_2486EDE5C(v86, v87, (uint64_t *)&v138);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2486E6000, v82, v83, "Deleting model: %s", v84, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v85, -1, -1);
    MEMORY[0x24959AF80](v84, -1, -1);

    v88 = v123;
  }
  else
  {

    v88 = v81;
  }
  v89 = (void (*)(char *, uint64_t))v133;
  v90 = ((uint64_t (*)(char *, uint64_t))v133)(v88, v137);
  v91 = v122;
  v92 = (void (*)(char *, uint64_t))v124;
  v142 = (id)*v68;
  v93 = v142;
  MEMORY[0x24BDAC7A8](v90);
  v95 = (char *)&v112 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113(v95, v80, v136);
  v138 = v126;
  v139 = 3;
  v96 = v93;
  v97 = v135;
  _TTSVBFileManager.removeItem(_:problem:)((uint64_t)v95, (uint64_t)&v138);
  v98 = v130;
  if (v97)
  {

    v99 = v95;
    v100 = v136;
    v92(v99, v136);

    v92(v80, v100);
    return swift_release();
  }
  else
  {
    v135 = 0;
    v92(v95, v136);

    v101 = ((uint64_t (*)(char *, uint64_t, uint64_t))v129)(v91, v128, v137);
    MEMORY[0x24BDAC7A8](v101);
    v103 = (char *)&v112 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0);
    v104 = v120;
    v117(v103, v134, v120);
    v105 = sub_2487B5324();
    v106 = v92;
    v107 = sub_2487B57E0();
    if (os_log_type_enabled(v105, v107))
    {
      v108 = (uint8_t *)swift_slowAlloc();
      v109 = swift_slowAlloc();
      *(_QWORD *)&v138 = v109;
      *(_DWORD *)v108 = 136315138;
      v134 = &v112;
      sub_2486F4CA0(&qword_25777D0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA50], MEMORY[0x24BDCEAC0]);
      v110 = sub_2487B5CCC();
      v142 = (id)sub_2486EDE5C(v110, v111, (uint64_t *)&v138);
      sub_2487B593C();
      swift_bridgeObjectRelease();
      v118(v103, v104);
      _os_log_impl(&dword_2486E6000, v105, v107, "Finished deleting model and all related data with ModelID: %s", v108, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v109, -1, -1);
      MEMORY[0x24959AF80](v108, -1, -1);

      ((void (*)(char *, uint64_t))v133)(v122, v137);
      v124(v125, v136);
    }
    else
    {
      v118(v103, v104);

      v89(v91, v137);
      v106(v125, v136);
    }
    return swift_release();
  }
}

void sub_248736CF0(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  _BYTE *v14;
  _QWORD *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  int v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  os_log_t v27;
  _BYTE v28[4];
  int v29;
  os_log_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v5 = sub_2487B533C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v28[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_25445EDE8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (uint64_t *)&v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v14 = &v28[-v13];
  v35 = swift_projectBox();
  type metadata accessor for TTSVBLocalVoiceModelMO();
  v15 = (_QWORD *)static TTSVBLocalVoiceModelMO.requireModelWithID(_:moc:)(a1, a2);
  if (!v2)
  {
    v34 = a2;
    v16 = v15;
    (*(void (**)(_QWORD))((*MEMORY[0x24BEE4EA0] & *v15) + 0x58))(0);
    v17 = v35;
    swift_beginAccess();
    sub_2487509F4((uint64_t)v14, v17);
    v18 = sub_2487B0B90();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v8, v18, v5);
    swift_retain();
    v19 = sub_2487B5324();
    v20 = sub_2487B57E0();
    if (os_log_type_enabled(v19, (os_log_type_t)v20))
    {
      v29 = v20;
      v30 = v19;
      v31 = v8;
      v32 = v6;
      v33 = v5;
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v37 = v22;
      *(_DWORD *)v21 = 136315138;
      v23 = v35;
      swift_beginAccess();
      sub_2486F4E74(v23, (uint64_t)v12, qword_25445EDE8);
      v24 = type metadata accessor for TTSVBVoiceModel();
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v12, 1, v24) == 1)
      {
        swift_release();
        __break(1u);
        return;
      }
      v26 = *v12;
      v25 = v12[1];
      swift_bridgeObjectRetain();
      sub_2486EDA68((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
      v36 = sub_2486EDE5C(v26, v25, &v37);
      sub_2487B593C();
      swift_release();
      swift_bridgeObjectRelease();
      v27 = v30;
      _os_log_impl(&dword_2486E6000, v30, (os_log_type_t)v29, "Deleting model for voice=%s from store", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v22, -1, -1);
      MEMORY[0x24959AF80](v21, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v32 + 8))(v31, v33);
    }
    else
    {

      swift_release();
      (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    }
    objc_msgSend(v34, sel_deleteObject_, v16);
    NSManagedObjectContext.trySave()();

  }
}

uint64_t TTSVBVoiceBankingManager.importModel(fromDirectory:overrideLocaleID:addingToVoice:completion:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  _BOOL4 v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  os_log_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t *v59;
  unint64_t v60;
  id v61;
  uint64_t v62;
  os_log_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  void (*v68)(char *, uint64_t, uint64_t);
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t *v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t aBlock[7];

  v79 = a4;
  v83 = a3;
  v77 = a1;
  v10 = sub_2487B53D8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2487B5408();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_2487B533C();
  v81 = *(_QWORD *)(v18 - 8);
  v82 = (uint64_t *)v18;
  MEMORY[0x24BDAC7A8](v18);
  v80 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (TTSVBIsInternalUIBuild())
  {
    v76 = a2;
    v71 = v6;
    v72 = a5;
    v73 = a6;
    v20 = sub_2487B0B90();
    (*(void (**)(char *, uint64_t, uint64_t *))(v81 + 16))(v80, v20, v82);
    v21 = sub_2487B5228();
    v75 = &v62;
    v22 = *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64);
    MEMORY[0x24BDAC7A8](v21);
    v78 = v23;
    v24 = v79;
    v69 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
    v69((char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), v79, v21);
    v25 = sub_2487B50CC();
    v74 = &v62;
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(_QWORD *)(v26 + 64);
    MEMORY[0x24BDAC7A8](v25);
    v28 = v77;
    v68 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
    v68((char *)&v62 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), v77, v25);
    swift_bridgeObjectRetain_n();
    v29 = sub_2487B5324();
    v30 = sub_2487B57E0();
    v67 = v30;
    v31 = os_log_type_enabled(v29, v30);
    v70 = v21;
    if (v31)
    {
      v32 = swift_slowAlloc();
      v64 = swift_slowAlloc();
      aBlock[0] = v64;
      *(_DWORD *)v32 = 136315650;
      v65 = v26;
      v63 = v29;
      v33 = sub_2487B51EC();
      v84 = sub_2486EDE5C(v33, v34, aBlock);
      v66 = v25;
      sub_2487B593C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v78 + 8))((char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), v21);
      *(_WORD *)(v32 + 12) = 2080;
      if (v83)
        v35 = v76;
      else
        v35 = 0x3E6C696E3CLL;
      if (v83)
        v36 = v83;
      else
        v36 = 0xE500000000000000;
      swift_bridgeObjectRetain();
      v84 = sub_2486EDE5C(v35, v36, aBlock);
      v26 = v65;
      sub_2487B593C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 22) = 2080;
      v37 = sub_2487B50B4();
      v84 = sub_2486EDE5C(v37, v38, aBlock);
      v25 = v66;
      sub_2487B593C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))((char *)&v62 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), v25);
      v39 = v63;
      _os_log_impl(&dword_2486E6000, v63, (os_log_type_t)v67, "Will import model, adding to voice '%s' overrideLocaleID=%s with data from: %s", (uint8_t *)v32, 0x20u);
      v40 = v64;
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v40, -1, -1);
      v41 = v32;
      v24 = v79;
      MEMORY[0x24959AF80](v41, -1, -1);

      v42 = (*(uint64_t (**)(char *, uint64_t *))(v81 + 8))(v80, v82);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v78 + 8))((char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), v21);
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v26 + 8))((char *)&v62 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), v25);

      v42 = (*(uint64_t (**)(char *, uint64_t *))(v81 + 8))(v80, v82);
    }
    v82 = &v62;
    MEMORY[0x24BDAC7A8](v42);
    v46 = (char *)&v62 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
    v47 = ((uint64_t (*)(char *, uint64_t, uint64_t))v68)(v46, v28, v25);
    MEMORY[0x24BDAC7A8](v47);
    v48 = (char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    v49 = v70;
    v69(v48, v24, v70);
    v50 = (*(unsigned __int8 *)(v26 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    v51 = (v27 + v50 + 7) & 0xFFFFFFFFFFFFFFF8;
    v52 = v78;
    v53 = (*(unsigned __int8 *)(v78 + 80) + v51 + 16) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
    v54 = swift_allocObject();
    v55 = v25;
    v56 = v54;
    v57 = v26;
    v58 = v71;
    *(_QWORD *)(v54 + 16) = v71;
    (*(void (**)(unint64_t, char *, uint64_t))(v57 + 32))(v54 + v50, v46, v55);
    v59 = (uint64_t *)(v56 + v51);
    v60 = v83;
    *v59 = v76;
    v59[1] = v60;
    (*(void (**)(unint64_t, char *, uint64_t))(v52 + 32))(v56 + v53, v48, v49);
    swift_bridgeObjectRetain();
    v61 = v58;
    sub_24872F8CC((uint64_t)sub_24874BEC8, v56, v72, v73);
    return swift_release();
  }
  else
  {
    v83 = *(_QWORD *)&v6[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_calloutQueue];
    v43 = swift_allocObject();
    *(_QWORD *)(v43 + 16) = a5;
    *(_QWORD *)(v43 + 24) = a6;
    aBlock[4] = (uint64_t)sub_24874BDDC;
    aBlock[5] = v43;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_2486F1008;
    aBlock[3] = (uint64_t)&block_descriptor_45_0;
    v44 = _Block_copy(aBlock);
    swift_retain();
    sub_2487B53E4();
    v84 = MEMORY[0x24BEE4AF8];
    sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
    sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
    sub_2487B59FC();
    MEMORY[0x24959A1AC](0, v17, v13, v44);
    _Block_release(v44);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    return swift_release();
  }
}

void sub_24873777C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  char *v44;
  id v45;
  id v46;
  _QWORD v47[4];
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55[2];
  char v56;
  void *v57;

  v6 = v4;
  v53 = a4;
  v54 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_25445EDE8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2487B542C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (_QWORD *)((char *)v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(void **)(v6 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue);
  *v15 = v16;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BEE5610], v12);
  v17 = v16;
  LOBYTE(v16) = sub_2487B5444();
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) != 0)
  {
    v18 = *(void **)(v6 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore);
    if (v18)
    {
      LOBYTE(v55[0]) = 1;
      v19 = v18;
      v20 = sub_2487749A0(v55);

      v21 = sub_24876D91C();
      v55[0] = (id)*v21;
      sub_24876F62C(a1);
      if (v5)
      {

        return;
      }
      v47[3] = v6;
      v51 = v20;
      v52 = a3;
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28);
      v49 = v47;
      v23 = a1;
      v24 = *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64);
      MEMORY[0x24BDAC7A8](v22);
      v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF0;
      v55[0] = (id)*v21;
      v26 = v55[0];
      v50 = v23;
      _TTSVBFileManager.getFileIfExists(in:named:)(0xD000000000000012, 0x80000002487C5A00, (uint64_t)v47 - v25);

      MEMORY[0x24BDAC7A8](v27);
      v48 = (uint64_t)v47 - v25;
      sub_2486F4E74((uint64_t)v47 - v25, (uint64_t)v47 - v25, &qword_25445ED28);
      v28 = sub_2487B50CC();
      v29 = *(_QWORD *)(v28 - 8);
      v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48))((char *)v47 - v25, 1, v28);
      if ((_DWORD)v30 == 1)
      {
        v31 = type metadata accessor for TTSVBVoiceModel();
        v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v11, 1, 1, v31);
        v34 = v51;
        v33 = v52;
        v35 = v50;
        v36 = v54;
        if (!v52)
          goto LABEL_11;
      }
      else
      {
        v47[1] = v47;
        v47[2] = v47;
        MEMORY[0x24BDAC7A8](v30);
        v38 = (char *)v47 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v38, (char *)v47 - v25, v28);
        v39 = (void *)*sub_24876D91C();
        v57 = v39;
        v40 = type metadata accessor for TTSVBVoiceModel();
        v55[0] = 0;
        v55[1] = 0;
        v56 = -1;
        v41 = sub_2486F4CA0(&qword_25777C1A8, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModel);
        v42 = v39;
        _TTSVBFileManager.load<A>(_:fromFile:problem:)(v40, (unint64_t)v38, (uint64_t)v55, v40, v41, (uint64_t)v11);

        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v11, 0, 1, v40);
        v32 = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v38, v28);
        v34 = v51;
        v33 = v52;
        v35 = v50;
        v36 = v54;
        if (!v52)
        {
LABEL_11:
          MEMORY[0x24BDAC7A8](v32);
          v47[-6] = v53;
          v47[-5] = v34;
          v47[-4] = v11;
          v47[-3] = v36;
          v47[-2] = v33;
          v47[-1] = v35;
          sub_2487B58A0();
          sub_2487341B0();
          v45 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
          v46 = (id)*sub_248728FA4();
          objc_msgSend(v45, sel_postNotificationName_object_, v46, 0);

          sub_2486F5008(v48, &qword_25445ED28);
          sub_2486F5008((uint64_t)v11, qword_25445EDE8);
          return;
        }
      }
      v43 = type metadata accessor for TTSVBVoiceModel();
      v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v11, 1, v43);
      if (!(_DWORD)v32)
      {
        v44 = &v11[*(int *)(v43 + 56)];
        *(_QWORD *)v44 = v36;
        *((_QWORD *)v44 + 1) = v33;
        swift_bridgeObjectRetain();
        v32 = swift_bridgeObjectRelease();
      }
      goto LABEL_11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, a3);
  __break(1u);
}

void sub_248737CAC(uint64_t a1, void *a2, void (*a3)(_QWORD, _QWORD), void (*a4)(uint64_t *), uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  void *v29;
  id v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  _QWORD *v34;
  void (*v35)(_QWORD, _QWORD);
  uint64_t v36;
  _QWORD *v37;
  uint64_t (*v38)(char *, uint64_t, _QWORD *);
  int v39;
  uint64_t v40;
  void *v41;
  void *v42;
  void *v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t *v49;
  NSObject *v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  void (*v57)(uint64_t *);
  char *v58;
  uint64_t v59;
  NSObject *v60;
  uint64_t v61;
  char *v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t *v64;
  NSObject *v65;
  os_log_type_t v66;
  _BOOL4 v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t *);
  uint64_t v74;
  id v75;
  uint64_t v76;
  char *v77;
  uint64_t *v78;
  id v79;
  char v80;
  uint64_t v81;
  void (*v82)(uint64_t *);
  char *v83;
  void (*v84)(char *, char *, uint64_t);
  uint64_t v85;
  char *v86;
  NSObject *v87;
  os_log_type_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  os_log_type_t v92;
  void (*v93)(char *, uint64_t);
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  os_log_t v98;
  void (*v99)(char *, char *, uint64_t);
  uint64_t v100;
  void (*v101)(char *, uint64_t);
  id v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  id v107;
  void *v108;
  NSObject *v109;
  uint64_t v110;
  char *v111;
  void (*v112)(char *, char *, uint64_t);
  uint64_t *v113;
  uint64_t v114;
  void (*v115)(uint64_t *);
  char *v116;
  uint64_t *v117;
  _QWORD *v118;
  void (*v119)(_QWORD, _QWORD);
  char *v120;
  uint64_t v121;
  uint64_t *v122;
  id v123;
  void (*v124)(_QWORD, _QWORD, _QWORD);
  uint64_t v125;
  char v126;
  id v127;

  v114 = a6;
  v115 = a4;
  v119 = a3;
  v120 = (char *)a5;
  v8 = sub_2487B533C();
  v9 = *(uint64_t **)(v8 - 8);
  v121 = v8;
  v122 = v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v116 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v106 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = ((char *)&v106 - v15);
  v17 = type metadata accessor for TTSVBVoiceModel();
  v117 = *(uint64_t **)(v17 - 8);
  v118 = (_QWORD *)v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(qword_25445EDE8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (void (*)(char *, char *, uint64_t))((char *)&v106 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)&v106 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v106 - v27;
  type metadata accessor for TTSVBLocalVoiceMO();
  v29 = a2;
  v30 = v123;
  v31 = static TTSVBLocalVoiceMO.requireVoiceWithID(_:moc:)(a1, a2);
  if (!v30)
  {
    v32 = (void *)v31;
    v112 = v23;
    v113 = (uint64_t *)v14;
    v109 = v16;
    v110 = 0;
    v111 = v19;
    v33 = type metadata accessor for TTSVBLocalVoiceModelMO();
    v108 = v29;
    v34 = (_QWORD *)NSManagedObjectContext.insertDSO<A>(_:)(v33, v33, (uint64_t)&protocol witness table for TTSVBLocalVoiceModelMO);
    v123 = v32;
    objc_msgSend(v34, sel_setVoice_, v32);
    v35 = v119;
    sub_2486F4E74((uint64_t)v119, (uint64_t)v28, qword_25445EDE8);
    v36 = sub_2486F4CA0(&qword_25777D138, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBLocalVoiceModelMO, (uint64_t)&protocol conformance descriptor for TTSVBLocalVoiceModelMO);
    TTSVBCommonVoiceModelMO.update(withInfo:)((uint64_t)v28, v33, v36);
    sub_2486F5008((uint64_t)v28, qword_25445EDE8);
    sub_2486F4E74((uint64_t)v35, (uint64_t)v26, qword_25445EDE8);
    v37 = v118;
    v38 = (uint64_t (*)(char *, uint64_t, _QWORD *))v117[6];
    v39 = v38(v26, 1, v118);
    v40 = (uint64_t)v26;
    v41 = v34;
    sub_2486F5008(v40, qword_25445EDE8);
    if (v39 == 1 && v120)
    {
      v42 = (void *)sub_2487B5504();
      objc_msgSend(v34, sel_setTrainingLocaleID_, v42);

    }
    TTSVBCommonVoiceModelMO.status.setter(7, v33, v36);
    TTSVBCommonVoiceModelMO.trainingStatus.setter(4, v33, v36);
    sub_24870A34C(0, &qword_25445F178);
    v43 = (void *)sub_2487B58E8();
    objc_msgSend(v34, sel_setIsDownloaded_, v43);

    v44 = (uint64_t)v112;
    (*(void (**)(_QWORD))((*MEMORY[0x24BEE4EA0] & *v34) + 0x58))(0);
    v45 = v38((char *)v44, 1, v37);
    v46 = v121;
    v47 = v113;
    if (v45 == 1)
    {
      sub_2486F5008(v44, qword_25445EDE8);
      v48 = sub_2487B0B90();
      v49 = v122;
      v50 = v109;
      ((void (*)(NSObject *, uint64_t, uint64_t))v122[2])(v109, v48, v46);
      v51 = sub_2487B5324();
      v52 = sub_2487B57E0();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v53 = 0;
        _os_log_impl(&dword_2486E6000, v51, v52, "Cannot import model. url could not be determined", v53, 2u);
        MEMORY[0x24959AF80](v53, -1, -1);
      }

      ((void (*)(NSObject *, uint64_t))v49[1])(v50, v46);
      type metadata accessor for TTSVBError(0);
      sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
      swift_allocError();
      TTSVBError.init(_:_:_:)(0xD000000000000030, 0x80000002487C5A20, 0, 0, 0, v54);
      swift_willThrow();

    }
    else
    {
      sub_24870A2C4(v44, (uint64_t)v111, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
      v55 = sub_2487B50CC();
      v118 = &v106;
      v56 = *(_QWORD **)(v55 - 8);
      v57 = (void (*)(uint64_t *))v56[8];
      MEMORY[0x24BDAC7A8](v55);
      v58 = (char *)&v106 - (((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFFFF0);
      TTSVBVoiceModel.url.getter((uint64_t)v58);
      v59 = sub_2487B0B90();
      v60 = v122[2];
      v106 = v59;
      v109 = v60;
      v61 = ((uint64_t (*)(uint64_t *))v60)(v47);
      v117 = &v106;
      v115 = v57;
      MEMORY[0x24BDAC7A8](v61);
      v62 = v58;
      v63 = (void (*)(char *, char *, uint64_t))v56[2];
      v120 = v58;
      v112 = v63;
      v63(v58, v58, v55);
      v64 = v47;
      v65 = sub_2487B5324();
      v66 = sub_2487B57E0();
      v67 = os_log_type_enabled(v65, v66);
      v107 = v41;
      if (v67)
      {
        v68 = (uint8_t *)swift_slowAlloc();
        v69 = swift_slowAlloc();
        v124 = (void (*)(_QWORD, _QWORD, _QWORD))v69;
        *(_DWORD *)v68 = 136315138;
        v119 = (void (*)(_QWORD, _QWORD))(v68 + 4);
        v70 = sub_2487B50B4();
        v127 = (id)sub_2486EDE5C(v70, v71, (uint64_t *)&v124);
        sub_2487B593C();
        swift_bridgeObjectRelease();
        v72 = v55;
        v119 = (void (*)(_QWORD, _QWORD))v56[1];
        v119(v62, v55);
        _os_log_impl(&dword_2486E6000, v65, v66, "Will create target directory for new model '%s'", v68, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24959AF80](v69, -1, -1);
        MEMORY[0x24959AF80](v68, -1, -1);

        v73 = (void (*)(uint64_t *))v122[1];
        v74 = v121;
        v73(v113);
      }
      else
      {
        v72 = v55;
        v119 = (void (*)(_QWORD, _QWORD))v56[1];
        v119(v58, v55);

        v73 = (void (*)(uint64_t *))v122[1];
        v74 = v46;
        ((void (*)(uint64_t *, uint64_t))v73)(v64, v46);
      }
      v75 = v123;
      v76 = v110;
      v77 = v116;
      v78 = sub_24876D91C();
      v127 = (id)*v78;
      v124 = 0;
      v125 = 0;
      v126 = -1;
      v79 = v127;
      v80 = sub_248711FD4();
      _TTSVBFileManager.createDirectoryIfNeeded(_:deleteAndRecreateIfExists:problem:)((uint64_t)v120, v80 & 1, (uint64_t)&v124);
      if (v76)
      {

        v119(v120, v72);
        sub_2486EDA68((uint64_t)v111, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
      }
      else
      {
        v122 = v78;
        v110 = 0;

        v81 = ((uint64_t (*)(char *, uint64_t, uint64_t))v109)(v77, v106, v74);
        v117 = &v106;
        v82 = v115;
        MEMORY[0x24BDAC7A8](v81);
        v83 = (char *)&v106 - (((unint64_t)v82 + 15) & 0xFFFFFFFFFFFFFFF0);
        v84 = v112;
        v85 = ((uint64_t (*)(char *, uint64_t, uint64_t))v112)(v83, v114, v72);
        v113 = &v106;
        MEMORY[0x24BDAC7A8](v85);
        v86 = v83;
        v84(v83, v120, v72);
        v87 = sub_2487B5324();
        v88 = sub_2487B57E0();
        if (os_log_type_enabled(v87, v88))
        {
          v89 = swift_slowAlloc();
          v112 = (void (*)(char *, char *, uint64_t))swift_slowAlloc();
          v124 = (void (*)(_QWORD, _QWORD, _QWORD))v112;
          *(_DWORD *)v89 = 136315394;
          v115 = v73;
          v109 = v87;
          v90 = sub_2487B50B4();
          v127 = (id)sub_2486EDE5C(v90, v91, (uint64_t *)&v124);
          sub_2487B593C();
          swift_bridgeObjectRelease();
          v92 = v88;
          v93 = (void (*)(char *, uint64_t))v119;
          v119(v83, v72);
          *(_WORD *)(v89 + 12) = 2080;
          v94 = sub_2487B50B4();
          v127 = (id)sub_2486EDE5C(v94, v95, (uint64_t *)&v124);
          v96 = v114;
          sub_2487B593C();
          swift_bridgeObjectRelease();
          v97 = v72;
          v93(v86, v72);
          v98 = v109;
          _os_log_impl(&dword_2486E6000, v109, v92, "Will copy import model '%s' to '%s'", (uint8_t *)v89, 0x16u);
          v99 = v112;
          swift_arrayDestroy();
          MEMORY[0x24959AF80](v99, -1, -1);
          v100 = v110;
          MEMORY[0x24959AF80](v89, -1, -1);

          ((void (*)(char *, uint64_t))v115)(v116, v121);
        }
        else
        {
          v101 = (void (*)(char *, uint64_t))v119;
          v119(v83, v72);
          v97 = v72;
          v101(v83, v72);

          ((void (*)(char *, uint64_t))v73)(v116, v74);
          v100 = v110;
          v96 = v114;
        }
        v127 = (id)*v122;
        v124 = 0;
        v125 = 0;
        v126 = -1;
        v102 = v127;
        v103 = v100;
        _TTSVBFileManager.copyContentsOf(_:to:problem:)(v96, (uint64_t)v120, (uint64_t)&v124);
        v104 = (uint64_t)v111;

        if (v103)
        {

        }
        else
        {
          NSManagedObjectContext.trySave()();
          v105 = v107;

        }
        v119(v120, v97);
        sub_2486EDA68(v104, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
      }
    }
  }
}

uint64_t TTSVBVoiceBankingManager.repairDatastoreVoicesFromFilesystem(completion:)(uint64_t a1, uint64_t a2)
{
  return sub_248738760(a1, a2, (uint64_t)&unk_2519925F0, (uint64_t)sub_24874BF50);
}

uint64_t sub_248738760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v8;
  id v9;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v4;
  v9 = v4;
  sub_24872F8CC(a4, v8, a1, a2);
  return swift_release();
}

void sub_2487387CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  void *v20;
  id v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  id v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;

  v1 = sub_2487B533C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v30 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v30 - v5;
  v7 = sub_2487B542C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char **)((char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v31 = v0;
  v11 = *(void **)(v0 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue);
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BEE5610], v7);
  v12 = v11;
  LOBYTE(v11) = sub_2487B5444();
  (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v13 = sub_2487B0B90();
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v14(v6, v13, v1);
  v15 = sub_2487B5324();
  v16 = sub_2487B57E0();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_2486E6000, v15, v16, "Will attempt to repair local datastore with on-disk models if needed", v17, 2u);
    MEMORY[0x24959AF80](v17, -1, -1);
  }

  v18 = *(void (**)(char *, uint64_t))(v2 + 8);
  v18(v6, v1);
  v35 = *sub_24876D91C();
  v19 = sub_24876E920();
  v34 = 0;
  if (!*(_QWORD *)(v19 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v20 = *(void **)(v31 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore);
  if (!v20)
  {
LABEL_15:
    __break(1u);
    return;
  }
  v33 = 1;
  v21 = v20;
  v22 = (char *)sub_2487749A0(&v33);

  MEMORY[0x24BDAC7A8](v23);
  *(&v30 - 4) = (char *)v19;
  *(&v30 - 3) = v22;
  *(&v30 - 2) = &v34;
  v24 = v32;
  sub_2487B58A0();

  swift_bridgeObjectRelease();
  if (v24)
    return;
  v32 = 0;
LABEL_9:
  v25 = v30;
  v14(v30, v13, v1);
  v26 = sub_2487B5324();
  v27 = sub_2487B57E0();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v28 = 0;
    _os_log_impl(&dword_2486E6000, v26, v27, "Finished repairing datastore with on-disk models", v28, 2u);
    MEMORY[0x24959AF80](v28, -1, -1);
  }

  v18(v25, v1);
  if (v34 == 1)
  {
    sub_2487341B0();
    v29 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    objc_msgSend(v29, sel_postNotificationName_object_, *sub_248728FA4(), 0);

  }
}

void sub_248738B54(uint64_t a1, void *a2, _BYTE *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(void);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  void (*v53)(char *, uint64_t);
  char *v54;
  uint64_t v55;
  void *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  NSObject *v62;
  uint64_t v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  char *v90;
  void *v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  uint64_t (*v101)(void);
  _QWORD v102[4];
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE *v107;
  uint64_t v108;
  char *v109;
  uint64_t *v110;
  __int128 v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  void (*v120)(char *, uint64_t);
  uint64_t v121;
  _QWORD *v122;
  char *v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(char *, uint64_t, uint64_t);
  uint64_t v129;
  uint64_t (*v130)(void);
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  uint64_t v138;

  v107 = a3;
  v117 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_25445EDE8);
  MEMORY[0x24BDAC7A8](v4);
  v106 = (uint64_t)v102 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for _TTSVBFileManager.VoiceModelFilesystemRepresentation(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_2487B533C();
  v119 = *(_QWORD *)(v134 - 8);
  v10 = MEMORY[0x24BDAC7A8](v134);
  v109 = (char *)v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v115 = (char *)v102 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v102 - v14;
  v105 = type metadata accessor for TTSVBVoiceModel();
  v104 = *(_QWORD *)(v105 - 8);
  v16 = MEMORY[0x24BDAC7A8](v105);
  v103 = (_QWORD *)((char *)v102 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = MEMORY[0x24BDAC7A8](v16);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)v102 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v135 = (uint64_t)v102 - v23;
  v24 = *(_QWORD *)(a1 + 16);
  if (v24)
  {
    v110 = (uint64_t *)v22;
    v116 = type metadata accessor for TTSVBLocalVoiceModelMO();
    v25 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v112 = *(_QWORD *)(v7 + 72);
    v102[3] = &v137;
    v102[1] = a1;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v26 = 136315394;
    v111 = v26;
    v108 = MEMORY[0x24BEE4AD8] + 8;
    v118 = v6;
    v114 = v9;
    v131 = v15;
    v113 = v21;
    do
    {
      v126 = v24;
      v28 = v135;
      sub_248709554(v25, v135, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
      v29 = sub_2487B5228();
      v124 = v102;
      v30 = *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64);
      MEMORY[0x24BDAC7A8](v29);
      v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF0;
      v121 = v32;
      v33 = *(uint64_t (**)(void))(v32 + 16);
      v123 = (char *)v102 - v31;
      v34 = v33();
      v122 = v102;
      v129 = v30;
      MEMORY[0x24BDAC7A8](v34);
      v132 = v29;
      v133 = (char *)v102 - v31;
      v130 = v33;
      v33();
      v35 = sub_2487B0B90();
      v36 = v119;
      v37 = *(void (**)(char *, uint64_t, uint64_t))(v119 + 16);
      v127 = v35;
      v128 = v37;
      v38 = v134;
      ((void (*)(char *))v37)(v131);
      v39 = v28;
      v40 = (uint64_t)v113;
      sub_248709554(v39, (uint64_t)v113, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
      v125 = v25;
      v41 = (uint64_t)v114;
      sub_248709554(v25, (uint64_t)v114, type metadata accessor for _TTSVBFileManager.VoiceModelFilesystemRepresentation);
      v42 = (uint64_t *)v40;
      v43 = v38;
      v44 = sub_2487B5324();
      v45 = sub_2487B57E0();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = v43;
        v47 = swift_slowAlloc();
        v48 = swift_slowAlloc();
        v138 = v48;
        *(_DWORD *)v47 = v111;
        v50 = *v42;
        v49 = v42[1];
        swift_bridgeObjectRetain();
        *(_QWORD *)(v47 + 4) = sub_2486EDE5C(v50, v49, &v138);
        swift_bridgeObjectRelease();
        sub_2486EDA68((uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
        *(_WORD *)(v47 + 12) = 2080;
        v51 = sub_2487B50B4();
        *(_QWORD *)(v47 + 14) = sub_2486EDE5C(v51, v52, &v138);
        swift_bridgeObjectRelease();
        sub_2486EDA68(v41, type metadata accessor for _TTSVBFileManager.VoiceModelFilesystemRepresentation);
        _os_log_impl(&dword_2486E6000, v44, v45, "Found on-disk model: %s - %s", (uint8_t *)v47, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24959AF80](v48, -1, -1);
        MEMORY[0x24959AF80](v47, -1, -1);

        v53 = *(void (**)(char *, uint64_t))(v119 + 8);
        v53(v131, v46);
      }
      else
      {
        sub_2486EDA68((uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
        sub_2486EDA68(v41, type metadata accessor for _TTSVBFileManager.VoiceModelFilesystemRepresentation);

        v53 = *(void (**)(char *, uint64_t))(v36 + 8);
        v53(v131, v43);
      }
      v54 = v115;
      v55 = (uint64_t)v133;
      v56 = (void *)static TTSVBLocalVoiceModelMO.findOrFetch(modelID:moc:)((uint64_t)v133, v117);

      if (v56)
      {
        v120 = v53;
        v128(v54, v127, v134);
        v57 = v110;
        v58 = sub_248709554(v135, (uint64_t)v110, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
        v128 = (void (*)(char *, uint64_t, uint64_t))v102;
        MEMORY[0x24BDAC7A8](v58);
        v60 = (char *)v102 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
        v61 = v132;
        ((void (*)(char *, uint64_t, uint64_t))v130)(v60, v55, v132);
        v62 = sub_2487B5324();
        v63 = v55;
        v64 = sub_2487B57E0();
        if (os_log_type_enabled(v62, v64))
        {
          v65 = swift_slowAlloc();
          v66 = swift_slowAlloc();
          v138 = v66;
          *(_DWORD *)v65 = v111;
          v68 = *v57;
          v67 = v57[1];
          swift_bridgeObjectRetain();
          *(_QWORD *)(v65 + 4) = sub_2486EDE5C(v68, v67, &v138);
          swift_bridgeObjectRelease();
          sub_2486EDA68((uint64_t)v57, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
          *(_WORD *)(v65 + 12) = 2080;
          v69 = sub_2487B51EC();
          *(_QWORD *)(v65 + 14) = sub_2486EDE5C(v69, v70, &v138);
          swift_bridgeObjectRelease();
          v27 = *(void (**)(char *, uint64_t))(v121 + 8);
          v27(v60, v61);
          _os_log_impl(&dword_2486E6000, v62, v64, "Model '%s' UDID=%s already in local datastore. Moving on", (uint8_t *)v65, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x24959AF80](v66, -1, -1);
          MEMORY[0x24959AF80](v65, -1, -1);

          v120(v115, v134);
          v27(v133, v61);
        }
        else
        {

          v27 = *(void (**)(char *, uint64_t))(v121 + 8);
          v27(v60, v61);
          sub_2486EDA68((uint64_t)v57, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
          v120(v54, v134);
          v27((char *)v63, v61);
        }
        v72 = v125;
        v71 = v126;
        v27(v123, v61);
        sub_2486EDA68(v135, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
      }
      else
      {
        v73 = v109;
        v128(v109, v127, v134);
        v74 = v103;
        v75 = sub_248709554(v135, (uint64_t)v103, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
        v128 = (void (*)(char *, uint64_t, uint64_t))v102;
        MEMORY[0x24BDAC7A8](v75);
        v77 = (char *)v102 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
        v78 = v55;
        v79 = v132;
        ((void (*)(char *, uint64_t, uint64_t))v130)(v77, v78, v132);
        v80 = sub_2487B5324();
        v81 = sub_2487B57E0();
        if (os_log_type_enabled(v80, v81))
        {
          v82 = swift_slowAlloc();
          v120 = v53;
          v83 = v82;
          v84 = swift_slowAlloc();
          v138 = v84;
          *(_DWORD *)v83 = v111;
          v85 = *v74;
          v86 = v74[1];
          swift_bridgeObjectRetain();
          v136 = sub_2486EDE5C(v85, v86, &v138);
          sub_2487B593C();
          swift_bridgeObjectRelease();
          sub_2486EDA68((uint64_t)v74, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
          *(_WORD *)(v83 + 12) = 2080;
          v87 = sub_2487B51EC();
          v136 = sub_2486EDE5C(v87, v88, &v138);
          sub_2487B593C();
          swift_bridgeObjectRelease();
          v130 = *(uint64_t (**)(void))(v121 + 8);
          ((void (*)(char *, uint64_t))v130)(v77, v132);
          _os_log_impl(&dword_2486E6000, v80, v81, "Adding model '%s' UDID=%s back to local datastore.", (uint8_t *)v83, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x24959AF80](v84, -1, -1);
          MEMORY[0x24959AF80](v83, -1, -1);

          v120(v109, v134);
        }
        else
        {
          sub_2486EDA68((uint64_t)v74, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
          v130 = *(uint64_t (**)(void))(v121 + 8);
          ((void (*)(char *, uint64_t))v130)(v77, v79);

          v53(v73, v134);
        }
        v89 = type metadata accessor for TTSVBLocalVoiceMO();
        v90 = v123;
        v91 = (void *)static TTSVBLocalVoiceMO.voiceForIDPredicate(_:)();
        MEMORY[0x24BDAC7A8](v91);
        v92 = v135;
        v102[-2] = v90;
        v102[-1] = v92;
        v93 = (void *)static DSO<>.findOrCreate(in:matching:config:)(v117, v91, (void (*)(void))sub_248750940, (uint64_t)&v102[-4], v89, (uint64_t)&protocol witness table for TTSVBLocalVoiceMO);

        v94 = v116;
        v95 = (void *)NSManagedObjectContext.insertDSO<A>(_:)(v116, v116, (uint64_t)&protocol witness table for TTSVBLocalVoiceModelMO);
        v96 = v106;
        sub_248709554(v92, v106, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v104 + 56))(v96, 0, 1, v105);
        v97 = sub_2486F4CA0(&qword_25777D138, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBLocalVoiceModelMO, (uint64_t)&protocol conformance descriptor for TTSVBLocalVoiceModelMO);
        TTSVBCommonVoiceModelMO.update(withInfo:)(v96, v94, v97);
        sub_2486F5008(v96, qword_25445EDE8);
        objc_msgSend(v95, sel_setVoice_, v93);
        v98 = (uint64_t)v133;
        v99 = (void *)sub_2487B51F8();
        objc_msgSend(v95, sel_setModelID_, v99);

        v100 = v132;
        v101 = v130;
        ((void (*)(uint64_t, uint64_t))v130)(v98, v132);
        ((void (*)(char *, uint64_t))v101)(v90, v100);
        sub_2486EDA68(v92, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
        *v107 = 1;
        v72 = v125;
        v71 = v126;
      }
      v25 = v72 + v112;
      v24 = v71 - 1;
    }
    while (v24);
    swift_bridgeObjectRelease();
  }
  NSManagedObjectContext.trySave()();
}

void sub_24873970C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  char v28;
  id v29;

  v26 = a2;
  v4 = type metadata accessor for TTSVBError.Reason(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445F340);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_24876D91C();
  v29 = (id)*v11;
  v12 = v29;
  v25 = xmmword_2487BE610;
  v27 = xmmword_2487BE610;
  v28 = 3;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
  v13 = v12;
  _TTSVBFileManager.requireDirectoryExists(_:problem:reason:)(a1, (uint64_t)&v27, (uint64_t)v10);
  sub_2486F5008((uint64_t)v10, &qword_25445F340);

  if (!v2)
  {
    v24 = v7;
    v14 = v26;
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28);
    MEMORY[0x24BDAC7A8](v15);
    v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    *(_QWORD *)&v27 = *v11;
    v18 = (id)v27;
    _TTSVBFileManager.getFileIfExists(in:named:)(0xD000000000000012, 0x80000002487C5940, (uint64_t)v17);

    v19 = sub_2487B50CC();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19) == 1)
    {
      sub_2486F5008((uint64_t)v17, &qword_25445ED28);
      v27 = v25;
      v28 = 3;
      v21 = (uint64_t)v24;
      sub_2487B5054();
      swift_storeEnumTagMultiPayload();
      type metadata accessor for TTSVBError(0);
      sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
      swift_allocError();
      TTSVBError.init(_:_:_:)((uint64_t)&v27, v21, 0, v22);
      swift_willThrow();
    }
    else
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v14, v17, v19);
    }
  }
}

uint64_t TTSVBVoiceBankingManager.availableTrainingLocales(_:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  void *v15;
  char *v16;
  _QWORD v18[2];
  _QWORD aBlock[6];

  v5 = sub_2487B53D8();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2487B5408();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(_QWORD *)&v2[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue];
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = v2;
  aBlock[4] = sub_24874BF9C;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F1008;
  aBlock[3] = &block_descriptor_57;
  v15 = _Block_copy(aBlock);
  swift_retain();
  v16 = v2;
  sub_2487B53E4();
  v18[1] = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F670, v6, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
  sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
  sub_2487B59FC();
  MEMORY[0x24959A1AC](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t TTSVBVoiceBankingManager.trainingAssetIsInstalled(localeID:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  void *v17;
  char *v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v9 = sub_2487B53D8();
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2487B5408();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(_QWORD *)&v4[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue];
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a3;
  v16[3] = a4;
  v16[4] = v4;
  v16[5] = a1;
  v16[6] = a2;
  aBlock[4] = sub_24874C024;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F1008;
  aBlock[3] = &block_descriptor_63;
  v17 = _Block_copy(aBlock);
  swift_retain();
  v18 = v4;
  swift_bridgeObjectRetain();
  sub_2487B53E4();
  v22 = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
  sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
  sub_2487B59FC();
  MEMORY[0x24959A1AC](0, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

uint64_t TTSVBVoiceBankingManager.fetchTrainingScriptItems(localeID:scriptType:_:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  void *v18;
  char *v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v11 = sub_2487B53D8();
  v24 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_2487B5408();
  v14 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)&v5[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue];
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v5;
  v17[3] = a1;
  v17[4] = a2;
  v17[5] = a3;
  v17[6] = a4;
  v17[7] = a5;
  aBlock[4] = sub_24874C158;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F1008;
  aBlock[3] = &block_descriptor_69;
  v18 = _Block_copy(aBlock);
  v19 = v5;
  swift_bridgeObjectRetain();
  v20 = a3;
  swift_retain();
  sub_2487B53E4();
  v25 = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
  sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
  sub_2487B59FC();
  MEMORY[0x24959A1AC](0, v16, v13, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v11);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v23);
  return swift_release();
}

uint64_t sub_248739FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  char *v27;
  _QWORD v28[3];
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t aBlock;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  void *v38;
  uint64_t (*v39)();
  _QWORD *v40;

  v32 = a2;
  v10 = sub_2487B53D8();
  v33 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2487B5408();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    v32 = *(_QWORD *)(a4 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_calloutQueue);
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = a5;
    *(_QWORD *)(v17 + 24) = a6;
    v39 = sub_2487508FC;
    v40 = (_QWORD *)v17;
    aBlock = MEMORY[0x24BDAC760];
    v36 = 1107296256;
    v37 = sub_2486F1008;
    v38 = &block_descriptor_305;
    v18 = _Block_copy(&aBlock);
    swift_retain();
    sub_2487B53E4();
    v34 = MEMORY[0x24BEE4AF8];
    sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
    sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
    sub_2487B59FC();
    MEMORY[0x24959A1AC](0, v16, v12, v18);
    _Block_release(v18);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v10);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return swift_release();
  }
  v28[2] = a4;
  v29 = (char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = v14;
  v31 = v13;
  v19 = sub_2487B50CC();
  v28[1] = v28;
  v20 = *(_QWORD *)(v19 - 8);
  result = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)v28 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v32)
  {
    sub_2487B500C();
    static TTSVBTrainingScript.parseScript(fromMetadatFile:)((uint64_t)v23, &aBlock);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
    v24 = aBlock;
    v25 = (_QWORD *)swift_allocObject();
    v25[2] = a5;
    v25[3] = a6;
    v25[4] = v24;
    v39 = sub_2487508D8;
    v40 = v25;
    aBlock = MEMORY[0x24BDAC760];
    v36 = 1107296256;
    v37 = sub_2486F1008;
    v38 = &block_descriptor_299;
    v26 = _Block_copy(&aBlock);
    swift_retain();
    v27 = v29;
    sub_2487B53E4();
    v34 = MEMORY[0x24BEE4AF8];
    sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
    sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
    sub_2487B59FC();
    MEMORY[0x24959A1AC](0, v27, v12, v26);
    _Block_release(v26);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v10);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v31);
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_24873A528(void (*a1)(char *))
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v9;
  char v10;

  v2 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777D1C8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = xmmword_2487BE620;
  v10 = 3;
  swift_storeEnumTagMultiPayload();
  TTSVBError.init(_:_:_:)((uint64_t)&v9, (uint64_t)v4, 0, (uint64_t)v7);
  swift_storeEnumTagMultiPayload();
  a1(v7);
  return sub_2486F5008((uint64_t)v7, &qword_25777D1C8);
}

uint64_t sub_24873A63C(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, uint64_t, void *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v4 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    v5 = sub_2487B5528();
    v7 = v6;
  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  swift_retain();
  v8 = a3;
  v4(v5, v7, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void TTSVBVoiceBankingManager.fetchTrainingMetadata(voiceID:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  id v22;
  char *v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v4 = v3;
  if (TTSVBProcessIsVoicebankingd())
  {
    v25 = a2;
    v26 = a3;
    v8 = *(void **)&v4[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore];
    if (v8)
    {
      LOBYTE(aBlock[0]) = 1;
      v9 = v8;
      v10 = sub_2487749A0(aBlock);

      v11 = sub_2487B5228();
      v24[1] = v24;
      v12 = *(_QWORD *)(v11 - 8);
      v13 = *(_QWORD *)(v12 + 64);
      MEMORY[0x24BDAC7A8](v11);
      v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
      v15 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v16 = (v13 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
      v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF8;
      v18 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v18 + v15, v14, v11);
      *(_QWORD *)(v18 + v16) = v10;
      *(_QWORD *)(v18 + v17) = v4;
      v19 = (_QWORD *)(v18 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8));
      v20 = v26;
      *v19 = v25;
      v19[1] = v20;
      aBlock[4] = sub_24874C304;
      aBlock[5] = v18;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_2486F1008;
      aBlock[3] = &block_descriptor_75;
      v21 = _Block_copy(aBlock);
      v22 = v10;
      v23 = v4;
      swift_retain();
      swift_release();
      objc_msgSend(v22, sel_performBlock_, v21);
      _Block_release(v21);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_24873A89C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  void *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD aBlock[7];

  v45 = a5;
  v47 = a4;
  v43 = a3;
  v7 = type metadata accessor for TTSVBVoiceSample();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)((char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_2487B53D8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_2487B5408();
  v15 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TTSVBLocalVoiceMO();
  v18 = (_QWORD *)static TTSVBLocalVoiceMO.requireVoiceWithID(_:moc:)(a1, a2);
  v41 = v12;
  v42 = v17;
  v19 = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v18) + 0x68))();
  v46 = v19;
  if (v19 >> 62)
    v20 = sub_2487B5B64();
  else
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
  v21 = v42;
  v22 = v45;
  v39 = v18;
  v40 = v15;
  if (!v20)
  {
    swift_bridgeObjectRelease();
    v25 = MEMORY[0x24BEE4AF8];
    v35 = v47;
LABEL_14:
    v36 = (_QWORD *)swift_allocObject();
    v36[2] = v35;
    v36[3] = v22;
    v36[4] = v25;
    aBlock[4] = sub_248750868;
    aBlock[5] = v36;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2486F1008;
    aBlock[3] = &block_descriptor_281;
    v37 = _Block_copy(aBlock);
    swift_retain();
    sub_2487B53E4();
    v48 = MEMORY[0x24BEE4AF8];
    sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
    sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
    sub_2487B59FC();
    MEMORY[0x24959A1AC](0, v21, v14, v37);
    _Block_release(v37);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v14, v11);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v21, v44);
    return swift_release();
  }
  aBlock[0] = MEMORY[0x24BEE4AF8];
  result = sub_24874C5D8(0, v20 & ~(v20 >> 63), 0);
  if ((v20 & 0x8000000000000000) == 0)
  {
    v38 = v11;
    v24 = 0;
    v25 = aBlock[0];
    v26 = v46;
    v27 = v46 & 0xC000000000000001;
    v28 = v14;
    do
    {
      if (v27)
        v29 = (id)MEMORY[0x24959A434](v24, v26);
      else
        v29 = *(id *)(v26 + 8 * v24 + 32);
      v30 = v29;
      v31 = type metadata accessor for TTSVBLocalVoiceSampleMO();
      v32 = sub_2486F4CA0(&qword_25777D128, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBLocalVoiceSampleMO, (uint64_t)&protocol conformance descriptor for TTSVBLocalVoiceSampleMO);
      TTSVBCommonVoiceSampleMO.immutableSample()(v31, v32, v10);

      aBlock[0] = v25;
      v34 = *(_QWORD *)(v25 + 16);
      v33 = *(_QWORD *)(v25 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_24874C5D8(v33 > 1, v34 + 1, 1);
        v25 = aBlock[0];
      }
      ++v24;
      *(_QWORD *)(v25 + 16) = v34 + 1;
      sub_24870A2C4((uint64_t)v10, v25+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v34, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceSample);
      v26 = v46;
      v35 = v47;
    }
    while (v20 != v24);
    v14 = v28;
    swift_bridgeObjectRelease();
    v11 = v38;
    v21 = v42;
    v22 = v45;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_24873AE18(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v9 = a3;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  a1(v9);
  return sub_2486F5008((uint64_t)v9, a4);
}

uint64_t sub_24873AEBC(void (*a1)(char *), uint64_t a2, void *a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  _QWORD v14[2];
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;

  v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2486F8E48((uint64_t)&v16);
  v10 = v16;
  v11 = v17;
  v12 = v18;
  v14[0] = v16;
  v14[1] = v17;
  v15 = v18;
  static TTSVBError.map(_:_:)(a3, (uint64_t)v14, (uint64_t)v9);
  sub_2486F507C(v10, v11, v12);
  swift_storeEnumTagMultiPayload();
  a1(v9);
  return sub_2486F5008((uint64_t)v9, a4);
}

uint64_t TTSVBVoiceBankingManager.samplesExist(forVoiceID:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v14;

  v7 = sub_2487B5228();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v12 = v3;
  sub_24872DDB8(v11, a2, a3);
  return swift_release();
}

uint64_t sub_24873B094(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t result;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;

  v4 = sub_2487B542C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5610], v4);
  v9 = v8;
  LOBYTE(v8) = sub_2487B5444();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  v11 = *(void **)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore);
  if (!v11)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v18 = 1;
  v12 = v11;
  v13 = sub_2487749A0(&v18);

  MEMORY[0x24BDAC7A8](v14);
  *(&v16 - 2) = a1;
  *(&v16 - 1) = (uint64_t)v13;
  sub_2487B58A0();

  if (!v2)
    v15 = v17;
  return v15 & 1;
}

uint64_t sub_24873B1F4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[5];
  uint64_t v15;

  type metadata accessor for TTSVBLocalVoiceMO();
  result = static TTSVBLocalVoiceMO.requireVoiceWithID(_:moc:)(a1, a2);
  if (!v3)
  {
    v8 = (void *)result;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1A8);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_2487B72B0;
    v10 = type metadata accessor for TTSVBLocalVoiceSampleMO();
    *(_QWORD *)(v9 + 32) = 0x4449656C706D6173;
    *(_QWORD *)(v9 + 40) = 0xE800000000000000;
    v15 = v9;
    MEMORY[0x24BDAC7A8](v10);
    v14[2] = v8;
    v12 = static DSO<>.fetch(properties:in:config:)((uint64_t)&v15, (uint64_t)a2, (void (*)(id))sub_24875068C, (uint64_t)v14, v11, (uint64_t)&protocol witness table for TTSVBLocalVoiceSampleMO);

    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v12 + 16);
    result = swift_bridgeObjectRelease();
    *a3 = v13 != 0;
  }
  return result;
}

uint64_t TTSVBVoiceBankingManager.loadSamplesFromTrainingScripts(forVoiceID:scriptItems:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v16;

  v9 = sub_2487B5228();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v4;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v13 + v12, (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  *(_QWORD *)(v13 + ((v11 + v12 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  v14 = v4;
  swift_bridgeObjectRetain();
  sub_24872F8CC((uint64_t)sub_24874C4C8, v13, a3, a4);
  return swift_release();
}

void sub_24873B43C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  _BYTE v16[15];
  char v17;

  v3 = v2;
  v6 = sub_2487B542C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *(void **)(v3 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5610], v6);
  v11 = v10;
  LOBYTE(v10) = sub_2487B5444();
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    v12 = *(void **)(v3 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore);
    if (v12)
    {
      v17 = 1;
      v13 = v12;
      v14 = sub_2487749A0(&v17);

      MEMORY[0x24BDAC7A8](v15);
      *(_QWORD *)&v16[-32] = a1;
      *(_QWORD *)&v16[-24] = v14;
      *(_QWORD *)&v16[-16] = a2;
      *(_QWORD *)&v16[-8] = v3;
      sub_2487B58A0();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_24873B59C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v50;
  char *v51;
  uint64_t v52;
  char v54;
  uint64_t v55;
  _QWORD v56[5];
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  type metadata accessor for TTSVBLocalVoiceMO();
  v7 = static TTSVBLocalVoiceMO.requireVoiceWithID(_:moc:)(a1, a2);
  v70 = v3;
  if (v3)
    return;
  v8 = (void *)v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1A8);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_2487B72B0;
  v10 = type metadata accessor for TTSVBLocalVoiceSampleMO();
  *(_QWORD *)(v9 + 32) = 0x4449656C706D6173;
  *(_QWORD *)(v9 + 40) = 0xE800000000000000;
  *(_QWORD *)&v74 = v9;
  MEMORY[0x24BDAC7A8](v10);
  v62 = v8;
  v56[2] = v8;
  v61 = a2;
  v12 = static DSO<>.fetch(properties:in:config:)((uint64_t)&v74, (uint64_t)a2, (void (*)(id))sub_24875068C, (uint64_t)v56, v11, (uint64_t)&protocol witness table for TTSVBLocalVoiceSampleMO);
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(v12 + 16);
  v58 = a3;
  if (v13)
  {
    swift_bridgeObjectRetain();
    v14 = 0;
    v15 = (char *)MEMORY[0x24BEE4AF8];
    do
    {
      v17 = *(_QWORD *)(v12 + 8 * v14 + 32);
      v18 = *(_QWORD *)(v17 + 16);
      swift_bridgeObjectRetain();
      if (!v18
        || (v19 = sub_248709700(0x4449656C706D6173, 0xE800000000000000), (v20 & 1) == 0)
        || (sub_2486F0814(*(_QWORD *)(v17 + 56) + 32 * v19, (uint64_t)&v74), (swift_dynamicCast() & 1) == 0))
      {
        v87 = 0;
        v88 = 0;
      }
      swift_bridgeObjectRelease();
      v21 = v88;
      if (v88)
      {
        v22 = v87;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v15 = sub_248709428(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
        v24 = *((_QWORD *)v15 + 2);
        v23 = *((_QWORD *)v15 + 3);
        if (v24 >= v23 >> 1)
          v15 = sub_248709428((char *)(v23 > 1), v24 + 1, 1, v15);
        *((_QWORD *)v15 + 2) = v24 + 1;
        v16 = &v15[16 * v24];
        *((_QWORD *)v16 + 4) = v22;
        *((_QWORD *)v16 + 5) = v21;
      }
      ++v14;
    }
    while (v13 != v14);
    swift_bridgeObjectRelease();
    a3 = v58;
  }
  else
  {
    v15 = (char *)MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  v72 = *(_QWORD *)(a3 + 16);
  if (!v72)
  {
LABEL_45:
    swift_bridgeObjectRelease();
    NSManagedObjectContext.trySave()();

    v70 = v55;
    return;
  }
  v73 = *((_QWORD *)v15 + 2);
  v71 = a3 + 32;
  swift_bridgeObjectRetain();
  v25 = 0;
  v69 = v15;
  v57 = v15 + 72;
  while (1)
  {
    v27 = (uint64_t *)(v71 + 120 * v25);
    v29 = *v27;
    v28 = v27[1];
    v30 = v27[2];
    v31 = v27[3];
    v33 = v27[4];
    v32 = v27[5];
    v35 = v27[6];
    v34 = v27[7];
    v37 = v27[8];
    v36 = v27[9];
    v38 = *((_OWORD *)v27 + 5);
    v39 = v27[12];
    v41 = v27[13];
    v40 = v27[14];
    if (v73)
    {
      if (*((_QWORD *)v69 + 4) == v29 && *((_QWORD *)v69 + 5) == v28)
        goto LABEL_21;
      v43 = v27[3];
      v44 = v27[5];
      v45 = v27[7];
      v46 = v27[9];
      v47 = v27[14];
      v68 = *((_OWORD *)v27 + 5);
      v67 = v30;
      v66 = v33;
      v65 = v35;
      v64 = v37;
      v63 = v41;
      v48 = sub_2487B5CE4();
      v41 = v63;
      v37 = v64;
      v35 = v65;
      v33 = v66;
      v30 = v67;
      v38 = v68;
      if ((v48 & 1) != 0)
        goto LABEL_21;
      v40 = v47;
      v36 = v46;
      v34 = v45;
      v32 = v44;
      if (v73 != 1)
      {
        if (*((_QWORD *)v69 + 6) == v29 && *((_QWORD *)v69 + 7) == v28)
          goto LABEL_21;
        v50 = sub_2487B5CE4();
        v41 = v63;
        v37 = v64;
        v35 = v65;
        v33 = v66;
        v30 = v67;
        v38 = v68;
        if ((v50 & 1) != 0)
          goto LABEL_21;
        v40 = v47;
        v36 = v46;
        v34 = v45;
        v32 = v44;
        if (v73 != 2)
          break;
      }
    }
LABEL_19:
    *(_QWORD *)&v74 = v29;
    *((_QWORD *)&v74 + 1) = v28;
    v75 = v30;
    v76 = v31;
    v77 = v33;
    v78 = v32;
    v79 = v35;
    v80 = v34;
    v81 = v37;
    v82 = v36;
    v83 = v38;
    v84 = v39;
    v85 = v41;
    v86 = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26 = v62;
    sub_24874D6EC(v62, &v74, v61);
    if (v70)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_21:
    if (++v25 == v72)
    {
      swift_bridgeObjectRelease();
      goto LABEL_45;
    }
  }
  v51 = v57;
  v52 = 2;
  while (!__OFADD__(v52, 1))
  {
    if (*((_QWORD *)v51 - 1) == v29 && *(_QWORD *)v51 == v28)
      goto LABEL_21;
    v60 = v52;
    v59 = v52 + 1;
    v54 = sub_2487B5CE4();
    v41 = v63;
    v37 = v64;
    v35 = v65;
    v33 = v66;
    v30 = v67;
    v38 = v68;
    if ((v54 & 1) != 0)
      goto LABEL_21;
    v40 = v47;
    v36 = v46;
    v34 = v45;
    v32 = v44;
    v31 = v43;
    v51 += 16;
    v52 = v60 + 1;
    if (v59 == v73)
      goto LABEL_19;
  }
  __break(1u);
}

void sub_24873BBF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[7];
  uint64_t v22;

  v3 = v2;
  v6 = sub_2487B542C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (_QWORD *)((char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(_OWORD *)(a2 + 80);
  v21[4] = *(_OWORD *)(a2 + 64);
  v21[5] = v10;
  v21[6] = *(_OWORD *)(a2 + 96);
  v22 = *(_QWORD *)(a2 + 112);
  v11 = *(_OWORD *)(a2 + 16);
  v21[0] = *(_OWORD *)a2;
  v21[1] = v11;
  v12 = *(_OWORD *)(a2 + 32);
  v13 = *(_OWORD *)(a2 + 48);
  v14 = *(void **)(v3 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue);
  v21[2] = v12;
  v21[3] = v13;
  *v9 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5610], v6);
  v15 = v14;
  LOBYTE(v14) = sub_2487B5444();
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v14 & 1) != 0)
  {
    v16 = *(void **)(v3 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore);
    if (v16)
    {
      LOBYTE(v20) = 1;
      v17 = v16;
      v18 = sub_2487749A0(&v20);

      MEMORY[0x24BDAC7A8](v19);
      *(&v20 - 4) = a1;
      *(&v20 - 3) = (uint64_t)v18;
      *(&v20 - 2) = v3;
      *(&v20 - 1) = (uint64_t)v21;
      sub_2487B58A0();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_24873BD88(uint64_t a1, void *a2, uint64_t a3, int a4, int a5, uint64_t a6, void *a7)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  double v34;
  NSObject *v35;
  void *v36;
  NSObject *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  void (**v41)(_QWORD, _QWORD);
  uint64_t i;
  uint64_t v43;
  id v44;
  void *v45;
  BOOL v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  NSObject *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  unint64_t v55;
  void *v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  int v60;
  int v61;
  uint64_t v62;
  _QWORD v63[2];
  char v64;
  id v65;

  v60 = a4;
  v61 = a5;
  v62 = a3;
  v12 = sub_2487B533C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TTSVBLocalVoiceMO();
  v16 = static TTSVBLocalVoiceMO.findOrFetch(voiceID:moc:)(a1, a2);
  if (v16)
  {
    v17 = (_QWORD *)v16;
    v58 = a2;
    v59 = a6;
    v56 = a7;
    v18 = sub_2487B0DFC();
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v18, v12);
    v19 = sub_2487B5324();
    v20 = sub_2487B57E0();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_2486E6000, v19, v20, "Writing out metadata.json and audio files", v21, 2u);
      MEMORY[0x24959AF80](v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v22 = sub_2487B50CC();
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(_QWORD *)(v23 + 64);
    MEMORY[0x24BDAC7A8](v22);
    v25 = (char *)&v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    v65 = (id)*sub_24876D91C();
    v63[0] = 0;
    v63[1] = 0;
    v64 = -1;
    v26 = v65;
    _TTSVBFileManager.getOrCreateFile(in:named:problem:)(v62, 0xD000000000000012, 0x80000002487C5940, (uint64_t)v63, (uint64_t)v25);
    if (v7)
    {

    }
    else
    {
      v57 = v23;
      v51 = &v47;
      v52 = v22;

      sub_2487B4E50();
      swift_allocObject();
      v55 = sub_2487B4E44();
      v27 = sub_2487B5558();
      v28 = *(_QWORD *)(v27 - 8);
      MEMORY[0x24BDAC7A8](v27);
      v30 = (char *)&v47 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_2487B554C();
      v53 = sub_2487B5534();
      v32 = (unint64_t)v31;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
      v54 = (_QWORD *)v32;
      if (v32 >> 60 == 15)
      {
        __break(1u);
      }
      else
      {
        v33 = sub_24870A34C(0, &qword_25777D1A8);
        v34 = MEMORY[0x24BDAC7A8](v33);
        (*(void (**)(char *, char *, uint64_t, double))(v57 + 16))((char *)&v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), (char *)&v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v52, v34);
        v35 = sub_24873C2C8((uint64_t)&v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
        v36 = v56;
        v37 = v35;
        v38 = sub_2487B57A4();
        v39 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v17) + 0x68))(v38);
        v40 = v39;
        v41 = (void (**)(_QWORD, _QWORD))v57;
        v50 = v37;
        if (v39 >> 62)
          goto LABEL_20;
        for (i = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = sub_2487B5B64())
        {
          v48 = v40;
          v49 = v40 & 0xC000000000000001;
          v43 = 4;
          v60 &= 1u;
          v61 &= 1u;
          while (1)
          {
            v44 = v49 ? (id)MEMORY[0x24959A434](v43 - 4, v40) : *(id *)(v40 + 8 * v43);
            v41 = (void (**)(_QWORD, _QWORD))v44;
            v40 = v43 - 3;
            if (__OFADD__(v43 - 4, 1))
              break;
            v45 = (void *)MEMORY[0x24959A884]();
            sub_24873C3DC(v41, v60, v61, v55, v50, v53, v54, v59, v36, v62, v58);
            objc_autoreleasePoolPop(v45);

            ++v43;
            v46 = v40 == i;
            v41 = (void (**)(_QWORD, _QWORD))v57;
            v40 = v48;
            if (v46)
              goto LABEL_18;
          }
          __break(1u);
LABEL_20:
          ;
        }
LABEL_18:

        sub_2486F4A14(v53, (unint64_t)v54);
        swift_bridgeObjectRelease();

        swift_release();
        ((void (**)(char *, uint64_t))v41)[1](v25, v52);
      }
    }
  }
}

id sub_24873C2C8(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  id v7;
  id v8;
  uint64_t v9;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = (void *)sub_2487B503C();
  v11[0] = 0;
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fileHandleForWritingToURL_error_, v2, v11);

  v4 = v11[0];
  if (v3)
  {
    v5 = sub_2487B50CC();
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v7 = v4;
    v6(a1, v5);
  }
  else
  {
    v8 = v11[0];
    sub_2487B4F64();

    swift_willThrow();
    v9 = sub_2487B50CC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

void sub_24873C3DC(id a1, char a2, char a3, unint64_t a4, NSObject *a5, uint64_t a6, _QWORD *a7, uint64_t a8, void *a9, uint64_t a10, id a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  void *v35;
  uint64_t v36;
  void *v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  void *v42;
  void *v43;
  void *v44;
  id v45;
  void *v46;
  uint64_t v47;
  void *v48;
  void *v49;
  signed int v50;
  signed int v51;
  double v52;
  Swift::Double v53;
  id v54;
  void *v55;
  Swift::Int paragraphIndex;
  Swift::Int v57;
  uint64_t v58;
  void *v59;
  void *v60;
  Swift::String v61;
  Swift::String v62;
  Swift::String v63;
  Swift::String v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  void *v70;
  NSObject *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  double v75;
  uint64_t v76;
  char *v77;
  id v78;
  uint64_t v79;
  void *v80;
  _QWORD *v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  double v85;
  uint64_t v86;
  char *v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t);
  uint64_t v93;
  char *v94;
  char v95;
  char v96;
  uint64_t v97;
  double v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  id v102;
  id v103;
  void *v104;
  char *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  NSObject *v111;
  int v112;
  _DWORD *v113;
  id v114;
  void *v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  void *v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  NSObject *v123;
  uint64_t v124;
  void (*v125)(char *, uint64_t);
  Swift::String bookTitle;
  Swift::String locale;
  _QWORD v128[3];
  uint64_t v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  void *v134;
  uint64_t v135;
  void *object;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  _DWORD *v140;
  _DWORD *v141;
  uint64_t v142;
  _QWORD *v143;
  NSObject *v144;
  uint64_t v145;
  id v146[2];
  TextToSpeechVoiceBankingSupport::TTSVBTrainingScriptItem v147;

  v140 = (_DWORD *)a8;
  v142 = a6;
  v143 = a7;
  v144 = a5;
  v141 = (_DWORD *)a4;
  v14 = sub_2487B533C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v128 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for TTSVBLocalVoiceSampleMO();
  v19 = sub_2486F4CA0(&qword_25777D128, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBLocalVoiceSampleMO, (uint64_t)&protocol conformance descriptor for TTSVBLocalVoiceSampleMO);
  if ((TTSVBCommonVoiceSampleMO.hasVoiceRecording.getter(v18, v19) & 1) != 0)
  {
    if ((a2 & 1) == 0
      || (a3 & 1) != 0
      || (TTSVBCommonVoiceSampleMO.trainingValidity.getter(v18, v19, &v147),
          TTSVBVoiceSampleTrainingValidity.isValid.getter()))
    {
      v20 = sub_2487B50CC();
      v21 = *(_QWORD *)(v20 - 8);
      MEMORY[0x24BDAC7A8](v20);
      v137 = v22;
      v23 = (char *)v128 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28);
      MEMORY[0x24BDAC7A8](v24);
      v128[1] = v25;
      v26 = (char *)v128 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
      v27 = v19;
      v28 = v21;
      TTSVBCommonVoiceSampleMO.url.getter(v18, v27, (uint64_t)v26);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v26, 1, v20) == 1)
      {
        __break(1u);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v26, v20);
        v29 = objc_msgSend(a1, sel_sampleID);
        if (v29)
        {
          v30 = v29;
          v31 = sub_2487B5528();
          v33 = v32;

          v34 = objc_msgSend(a1, sel_transcript);
          if (v34)
          {
            v35 = v34;
            v36 = sub_2487B5528();
            object = v37;

            v38 = objc_msgSend(a1, sel_phrase);
            if (v38)
            {
              v39 = v38;
              v138 = v23;
              v135 = sub_2487B5528();
              v134 = v40;

              v41 = objc_msgSend(a1, sel_phonemes);
              if (v41)
              {
                v42 = v41;
                v130 = v36;
                v131 = v33;
                v132 = v31;
                v133 = v20;
                v129 = sub_2487B5528();
                v44 = v43;

                v45 = objc_msgSend(a1, sel_bookTitle);
                if (v45)
                {
                  v46 = v45;
                  v139 = v28;
                  v128[2] = v128;
                  v47 = sub_2487B5528();
                  v49 = v48;

                  v50 = objc_msgSend(a1, sel_paragraphIndex);
                  v51 = objc_msgSend(a1, sel_sentenceIndex);
                  objc_msgSend(a1, sel_estimatedDuration);
                  v53 = v52;
                  v54 = objc_msgSend(a1, sel_locale);
                  if (v54)
                  {
                    v55 = v54;
                    paragraphIndex = v50;
                    v57 = v51;
                    v58 = sub_2487B5528();
                    v60 = v59;

                    locale._countAndFlagsBits = v58;
                    locale._object = v60;
                    bookTitle._countAndFlagsBits = v47;
                    bookTitle._object = v49;
                    v61._countAndFlagsBits = v132;
                    v61._object = v131;
                    v62._countAndFlagsBits = v130;
                    v62._object = object;
                    v63._countAndFlagsBits = v135;
                    v63._object = v134;
                    v64._countAndFlagsBits = v129;
                    v64._object = v44;
                    TTSVBTrainingScriptItem.init(id:transcript:phrase:phonemes:bookTitle:paragraphIndex:sentenceIndex:estimatedDuration:locale:)(&v147, v61, v62, v63, v64, bookTitle, paragraphIndex, v57, v53, locale);
                    object = v147.id._object;
                    sub_24875061C();
                    v65 = v145;
                    v66 = sub_2487B4E38();
                    v135 = v65;
                    if (v65)
                    {
LABEL_39:
                      swift_unexpectedError();
                      __break(1u);
                      return;
                    }
                    v68 = v66;
                    v69 = v67;
                    v145 = a10;
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    v70 = (void *)sub_2487B50E4();
                    v71 = v144;
                    -[NSObject writeData:](v144, sel_writeData_, v70);

                    v72 = (void *)sub_2487B50E4();
                    -[NSObject writeData:](v71, sel_writeData_, v72);

                    v74 = v68;
                    v141 = (_DWORD *)v69;
                    if (a9 != (void *)1)
                    {
                      v144 = v128;
                      MEMORY[0x24BDAC7A8](v73);
                      v94 = (char *)v128 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0);
                      v143 = v128;
                      LOBYTE(v147.id._countAndFlagsBits) = v95;
                      BYTE1(v147.id._countAndFlagsBits) = v96;
                      v147.id._object = a9;
                      v98 = MEMORY[0x24BDAC7A8](v97);
                      v100 = (char *)v128 - ((v99 + 15) & 0xFFFFFFFFFFFFFFF0);
                      v101 = v139;
                      v79 = v133;
                      (*(void (**)(char *, uint64_t, uint64_t, double))(v139 + 16))(v100, v145, v133, v98);
                      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v100, 0, 1, v79);
                      v102 = a9;
                      v103 = objc_msgSend(a1, sel_sampleID);
                      if (v103)
                      {
                        v104 = v103;
                        v105 = (char *)sub_2487B5528();
                        v107 = v106;

                        v108 = (uint64_t)v138;
                        v109 = v135;
                        static TTSVBAudioTools.convertAudioFileAtURL(_:audioOverrides:saveTo:filename:)((uint64_t)v138, (char *)&v147, (uint64_t)v100, v105, v107, (uint64_t)v94);
                        if (v109)
                        {
                          swift_bridgeObjectRelease();
                          sub_2486F4A28(v68, (unint64_t)v141);
                          sub_2486F5008((uint64_t)v100, &qword_25445ED28);
                          (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v108, v79);
                          sub_248750660((uint64_t)v140, a9);
                          return;
                        }
                        swift_bridgeObjectRelease();
                        sub_2486F5008((uint64_t)v100, &qword_25445ED28);
                        v125 = *(void (**)(char *, uint64_t))(v139 + 8);
                        v125(v94, v79);
                        sub_248750660((uint64_t)v140, a9);
                        v74 = v68;
                        goto LABEL_25;
                      }
                      goto LABEL_37;
                    }
                    v75 = MEMORY[0x24BDAC7A8](v73);
                    v77 = (char *)v128 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
                    v147.id._countAndFlagsBits = 0;
                    v147.id._object = (void *)0xE000000000000000;
                    v78 = objc_msgSend(a1, sel_sampleID, v75);
                    v79 = v133;
                    if (v78)
                    {
                      v80 = v78;
                      sub_2487B5528();

                      sub_2487B55AC();
                      swift_bridgeObjectRelease();
                      sub_2487B55AC();
                      v81 = sub_248755234();
                      v82 = (void *)v81[1];
                      LOWORD(v146[0]) = *(_WORD *)v81;
                      v146[1] = v82;
                      TTSVBAudioDescriptor.fileExtension.getter();
                      sub_2487B55AC();
                      swift_bridgeObjectRelease();
                      v83 = sub_2487B4FE8();
                      v84 = *(_QWORD *)(v83 - 8);
                      v85 = MEMORY[0x24BDAC7A8](v83);
                      v87 = (char *)v128 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
                      (*(void (**)(char *, _QWORD, uint64_t, double))(v84 + 104))(v87, *MEMORY[0x24BDCD7A8], v83, v85);
                      sub_2486ED9E0();
                      sub_2487B50C0();
                      (*(void (**)(char *, uint64_t))(v84 + 8))(v87, v83);
                      swift_bridgeObjectRelease();
                      v146[0] = (id)*sub_24876D91C();
                      v147.id._countAndFlagsBits = 0;
                      v147.id._object = 0;
                      LOBYTE(v147.transcript._countAndFlagsBits) = -1;
                      v88 = v146[0];
                      v89 = (uint64_t)v138;
                      v90 = v135;
                      _TTSVBFileManager.copyItem(_:to:problem:)((uint64_t)v138, (uint64_t)v77, (uint64_t)&v147);
                      v91 = v139;
                      if (v90)
                      {
                        sub_2486F4A28(v74, (unint64_t)v141);

                        v92 = *(void (**)(char *, uint64_t))(v91 + 8);
                        v92(v77, v79);
                        v92((char *)v89, v79);
                        return;
                      }

                      v125 = *(void (**)(char *, uint64_t))(v91 + 8);
                      v125(v77, v79);
LABEL_25:
                      objc_msgSend(a11, sel_refreshAllObjects);
                      sub_2486F4A28(v74, (unint64_t)v141);
                      v125(v138, v79);
                      return;
                    }
LABEL_36:
                    __break(1u);
LABEL_37:
                    __break(1u);
                    goto LABEL_38;
                  }
LABEL_35:
                  __break(1u);
                  goto LABEL_36;
                }
LABEL_34:
                __break(1u);
                goto LABEL_35;
              }
LABEL_33:
              __break(1u);
              goto LABEL_34;
            }
LABEL_32:
            __break(1u);
            goto LABEL_33;
          }
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
      }
      __break(1u);
      goto LABEL_31;
    }
    v110 = sub_2487B0DFC();
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v110, v14);
    a1 = a1;
    v111 = sub_2487B5324();
    v112 = sub_2487B57D4();
    if (os_log_type_enabled(v111, (os_log_type_t)v112))
    {
      LODWORD(v143) = v112;
      v144 = v111;
      v113 = (_DWORD *)swift_slowAlloc();
      v142 = swift_slowAlloc();
      v147.id._countAndFlagsBits = v142;
      *v113 = 136315394;
      v114 = objc_msgSend(a1, sel_sampleID);
      if (!v114)
      {
LABEL_38:

        __break(1u);
        goto LABEL_39;
      }
      v115 = v114;
      v141 = v113 + 1;
      v116 = sub_2487B5528();
      v140 = v113;
      v118 = v117;

      v119 = (void *)sub_2486EDE5C(v116, v118, &v147.id._countAndFlagsBits);
      v120 = (uint64_t)v140;
      v146[0] = v119;
      sub_2487B593C();

      swift_bridgeObjectRelease();
      *(_WORD *)(v120 + 12) = 2080;
      TTSVBCommonVoiceSampleMO.trainingValidity.getter(v18, v19, v146);
      v121 = TTSVBVoiceSampleTrainingValidity.stringValue.getter();
      v146[0] = (id)sub_2486EDE5C(v121, v122, &v147.id._countAndFlagsBits);
      sub_2487B593C();

      swift_bridgeObjectRelease();
      v123 = v144;
      _os_log_impl(&dword_2486E6000, v144, (os_log_type_t)v143, "Skipping sample %s. Not valid for training: %s and trainWithLowQualityData=false", (uint8_t *)v120, 0x16u);
      v124 = v142;
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v124, -1, -1);
      MEMORY[0x24959AF80](v120, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
}

int *TTSVBVoiceBankingManager.exportTrainingData(forVoice:completion:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  _QWORD *v34;
  uint64_t v35;
  double v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  char *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  void (*v52)(char *, uint64_t);
  os_log_type_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  _QWORD *v56;
  uint8_t *v57;
  char *v58;
  uint64_t *v59;
  int *result;
  void *v61;
  int v62;
  id v63;
  id v64;
  id v65;
  uint64_t *v66;
  uint64_t v67;
  double v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t *v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t (*v80)(uint64_t);
  unint64_t v81;
  void *v82;
  void *v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  double v96;
  uint64_t v97;
  char *v98;
  void *v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  double v104;
  uint64_t v105;
  char *v106;
  char *v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  double v111;
  uint64_t v112;
  uint64_t (*v113)(char *, char *, uint64_t, double);
  NSObject *v114;
  os_log_type_t v115;
  uint8_t *v116;
  void *v117;
  void *v118;
  uint64_t v119;
  unint64_t v120;
  uint8_t *v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  double v125;
  char *v126;
  char *v127;
  uint64_t v128;
  double v129;
  _QWORD *v130;
  unint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  id v135;
  char *v136;
  uint64_t v137;
  char *v138;
  void (*v139)(char *, uint64_t);
  uint64_t v140;
  void (*v141)(char *, uint64_t);
  id v142;
  _QWORD *v143;
  void (*v144)(char *, char *, uint64_t, double);
  char *v145;
  char *v146;
  uint64_t *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  void (**v153)(uint64_t, uint64_t);
  uint64_t v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  id *v158;
  uint64_t v159;
  void (*v160)(char *);
  uint64_t v161;
  char *v162;
  _QWORD *v163;
  uint64_t *v164;
  _QWORD *v165;
  char *v166;
  uint64_t *v167;
  __int128 v168;
  uint64_t v169;
  id v170;
  unint64_t v171;
  __int128 aBlock;
  uint64_t v173;

  v156 = a2;
  v5 = sub_2487B53D8();
  v154 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v153 = (void (**)(uint64_t, uint64_t))((char *)&v140 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v152 = sub_2487B5408();
  v151 = *(_QWORD *)(v152 - 8);
  MEMORY[0x24BDAC7A8](v152);
  v150 = (char *)&v140 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = (_QWORD *)type metadata accessor for TTSVBPath();
  MEMORY[0x24BDAC7A8](v165);
  v166 = (char *)&v140 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2487B533C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v145 = (char *)&v140 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)&v168 = (char *)&v140 - v13;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v140 - v15;
  v17 = sub_2487B0B90();
  v159 = v10;
  v160 = *(void (**)(_QWORD))(v10 + 16);
  v161 = v17;
  v160(v16);
  v18 = sub_2487B5228();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v140 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(uint64_t **)(v19 + 16);
  v167 = a1;
  v164 = v23;
  ((void (*)(char *, uint64_t *, uint64_t, double))v23)(v22, a1, v18, v20);
  v24 = sub_2487B5324();
  v25 = sub_2487B57E0();
  v26 = os_log_type_enabled(v24, v25);
  v157 = a3;
  v163 = (_QWORD *)v9;
  v155 = (_QWORD *)v5;
  if (v26)
  {
    v27 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    *(_QWORD *)&aBlock = v28;
    *(_DWORD *)v27 = 136315138;
    v158 = (id *)(v27 + 4);
    sub_2486F4CA0(&qword_25777D0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA50], MEMORY[0x24BDCEAC0]);
    v29 = sub_2487B5CCC();
    v170 = (id)sub_2486EDE5C(v29, v30, (uint64_t *)&aBlock);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
    _os_log_impl(&dword_2486E6000, v24, v25, "Beginning export for voice: %s", v27, 0xCu);
    swift_arrayDestroy();
    v31 = v28;
    v9 = (uint64_t)v163;
    MEMORY[0x24959AF80](v31, -1, -1);
    MEMORY[0x24959AF80](v27, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
  }

  v159 = *(_QWORD *)(v159 + 8);
  ((void (*)(char *, uint64_t))v159)(v16, v9);
  v32 = sub_2487B50CC();
  v33 = &v140;
  v34 = *(_QWORD **)(v32 - 8);
  v35 = v34[8];
  v36 = MEMORY[0x24BDAC7A8](v32);
  v37 = (char *)&v140 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = (uint64_t)v166;
  v148 = v18;
  ((void (*)(char *, uint64_t *, uint64_t, double))v164)(v166, v167, v18, v36);
  swift_storeEnumTagMultiPayload();
  TTSVBPath.url.getter((uint64_t)v37);
  sub_2486EDA68(v38, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBPath);
  v39 = v168;
  v40 = ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v160)(v168, v161, v9);
  v158 = (id *)&v140;
  v149 = v35;
  v41 = MEMORY[0x24BDAC7A8](v40);
  v42 = v37;
  v144 = (void (*)(_QWORD, _QWORD, _QWORD, double))v34[2];
  v144(v37, v37, v32, v41);
  v43 = sub_2487B5324();
  v44 = sub_2487B57E0();
  if (os_log_type_enabled(v43, v44))
  {
    v45 = swift_slowAlloc();
    v146 = v37;
    v46 = v32;
    v47 = (uint8_t *)v45;
    v48 = swift_slowAlloc();
    v147 = &v140;
    v49 = v48;
    *(_QWORD *)&aBlock = v48;
    *(_DWORD *)v47 = 136315138;
    v50 = sub_2487B50B4();
    v170 = (id)sub_2486EDE5C(v50, v51, (uint64_t *)&aBlock);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    v52 = (void (*)(_QWORD, _QWORD))v34[1];
    v52(v42, v46);
    v53 = v44;
    v54 = v52;
    _os_log_impl(&dword_2486E6000, v43, v53, "Using %s for export", v47, 0xCu);
    swift_arrayDestroy();
    v55 = v49;
    v56 = v163;
    v33 = v147;
    MEMORY[0x24959AF80](v55, -1, -1);
    v57 = v47;
    v32 = v46;
    v37 = v146;
    MEMORY[0x24959AF80](v57, -1, -1);

    ((void (*)(_QWORD, _QWORD *))v159)(v168, v56);
  }
  else
  {
    v54 = (void (*)(_QWORD, _QWORD))v34[1];
    v54(v37, v32);

    ((void (*)(uint64_t, uint64_t))v159)(v39, v9);
  }
  v58 = v162;
  v59 = sub_24876D91C();
  v170 = (id)*v59;
  v168 = xmmword_2487BE630;
  aBlock = xmmword_2487BE630;
  LOBYTE(v173) = 3;
  _TTSVBFileManager.createDirectoryIfNeeded(_:deleteAndRecreateIfExists:problem:)((uint64_t)v37, 1, (uint64_t)&aBlock);
  v158 = (id *)v59;
  v143 = v34;
  result = (int *)sub_248728D90();
  v61 = *(void **)&v58[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore];
  if (v61)
  {
    v62 = *result;
    LOBYTE(aBlock) = 1;
    v63 = v61;
    v64 = sub_2487749A0(&aBlock);

    LODWORD(v170) = v62;
    aBlock = xmmword_2487BE430;
    v65 = TTSVBVoiceBankingManager.audioService.getter();
    v66 = v167;
    sub_24874DA28();
    v142 = v64;
    v141 = v54;
    v140 = v32;

    v68 = MEMORY[0x24BDAC7A8](v67);
    v70 = (char *)&v140 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
    v71 = (uint64_t)v166;
    ((void (*)(char *, uint64_t *, uint64_t, double))v164)(v166, v66, v148, v68);
    swift_storeEnumTagMultiPayload();
    TTSVBPath.url.getter((uint64_t)v70);
    sub_2486EDA68(v71, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBPath);
    v170 = *v158;
    aBlock = v168;
    LOBYTE(v173) = 3;
    v72 = v66;
    v73 = v170;
    _TTSVBFileManager.createDirectoryIfNeeded(_:deleteAndRecreateIfExists:problem:)((uint64_t)v70, 0, (uint64_t)&aBlock);
    *(_QWORD *)&v168 = v70;

    aBlock = 0uLL;
    MEMORY[0x24BDAC7A8](v74);
    *(&v140 - 4) = (uint64_t)&aBlock;
    *(&v140 - 3) = (uint64_t)v72;
    *(&v140 - 2) = (uint64_t)v142;
    v75 = sub_2487B58A0();
    v164 = &v140;
    v165 = &v140;
    MEMORY[0x24BDAC7A8](v75);
    v166 = (char *)&v140 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
    v77 = sub_2487B4E74();
    v155 = &v140;
    v153 = *(void (***)(uint64_t, uint64_t))(v77 - 8);
    MEMORY[0x24BDAC7A8](v77);
    v79 = (char *)&v140 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2486F4CA0(&qword_25777D0E0, v80, MEMORY[0x24BDCB770]);
    sub_2487B59F0();
    LODWORD(v169) = 47;
    sub_2487B59CC();
    LODWORD(v169) = 58;
    sub_2487B59CC();
    LODWORD(v169) = 96;
    v154 = v77;
    sub_2487B59CC();
    v81 = *((_QWORD *)&aBlock + 1);
    v147 = v33;
    v146 = v37;
    v152 = (uint64_t)v79;
    if (*((_QWORD *)&aBlock + 1))
    {
      v82 = (void *)aBlock;
      swift_bridgeObjectRetain();
      v83 = (void *)sub_2487B5504();
      v84 = TTSVBSupportLocString(v83);

      sub_2487B5528();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25777C9B0);
      v85 = swift_allocObject();
      *(_OWORD *)(v85 + 16) = xmmword_2487B72B0;
      v170 = v82;
      v171 = v81;
      sub_2486ED9E0();
      v86 = MEMORY[0x24BEE0D00];
      v87 = (void *)sub_2487B5954();
      swift_bridgeObjectRelease();
      v170 = v87;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25445F138);
      sub_24871869C((unint64_t *)&qword_25445F140, &qword_25445F138, MEMORY[0x24BEE12B0]);
      v88 = sub_2487B5498();
      v90 = v89;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v85 + 56) = v86;
      *(_QWORD *)(v85 + 64) = sub_2487189D4();
      *(_QWORD *)(v85 + 32) = v88;
      *(_QWORD *)(v85 + 40) = v90;
      v91 = (void *)sub_2487B5540();
      v93 = v92;
      swift_bridgeObjectRelease();
      v170 = v91;
      v171 = v93;
      sub_2487B55AC();
      v94 = sub_2487B4FE8();
      v95 = *(_QWORD *)(v94 - 8);
      v96 = MEMORY[0x24BDAC7A8](v94);
      v98 = (char *)&v140 - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, _QWORD, uint64_t, double))(v95 + 104))(v98, *MEMORY[0x24BDCD7A8], v94, v96);
      sub_2487B50C0();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v98, v94);
    }
    else
    {
      v170 = 0;
      v171 = 0xE000000000000000;
      sub_2487B5AA4();
      v99 = (void *)sub_2487B51EC();
      v101 = v100;
      swift_bridgeObjectRelease();
      v170 = v99;
      v171 = v101;
      sub_2487B55AC();
      v102 = sub_2487B4FE8();
      v103 = *(_QWORD *)(v102 - 8);
      v104 = MEMORY[0x24BDAC7A8](v102);
      v106 = (char *)&v140 - ((v105 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, _QWORD, uint64_t, double))(v103 + 104))(v106, *MEMORY[0x24BDCD7A8], v102, v104);
      sub_2486ED9E0();
      sub_2487B50C0();
      (*(void (**)(char *, uint64_t))(v103 + 8))(v106, v102);
    }
    swift_bridgeObjectRelease();
    v107 = v145;
    v108 = v163;
    v109 = ((uint64_t (*)(char *, uint64_t, _QWORD *))v160)(v145, v161, v163);
    v110 = v149;
    v111 = MEMORY[0x24BDAC7A8](v109);
    v112 = v140;
    v113 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, double))v144;
    v144((char *)&v140 - ((v110 + 15) & 0xFFFFFFFFFFFFFFF0), v166, v140, v111);
    v114 = sub_2487B5324();
    v115 = sub_2487B57E0();
    if (os_log_type_enabled(v114, v115))
    {
      v116 = (uint8_t *)swift_slowAlloc();
      v117 = (void *)swift_slowAlloc();
      v167 = &v140;
      v118 = v117;
      v170 = v117;
      *(_DWORD *)v116 = 136315138;
      v119 = sub_2487B50B4();
      v169 = sub_2486EDE5C(v119, v120, (uint64_t *)&v170);
      sub_2487B593C();
      swift_bridgeObjectRelease();
      v141((char *)&v140 - ((v110 + 15) & 0xFFFFFFFFFFFFFFF0), v112);
      _os_log_impl(&dword_2486E6000, v114, v115, "Creating archive at: %s", v116, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v118, -1, -1);
      v121 = v116;
      v113 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, double))v144;
      MEMORY[0x24959AF80](v121, -1, -1);

      v122 = ((uint64_t (*)(char *, _QWORD *))v159)(v145, v163);
    }
    else
    {
      v141((char *)&v140 - ((v110 + 15) & 0xFFFFFFFFFFFFFFF0), v112);

      v122 = ((uint64_t (*)(char *, _QWORD *))v159)(v107, v108);
    }
    v123 = v112;
    v167 = &v140;
    v170 = *v158;
    v124 = v170;
    v125 = MEMORY[0x24BDAC7A8](v122);
    v126 = (char *)&v140 - ((v110 + 15) & 0xFFFFFFFFFFFFFFF0);
    v127 = v166;
    v128 = v113(v126, v166, v123, v125);
    v163 = &v140;
    v129 = MEMORY[0x24BDAC7A8](v128);
    v113(v126, v127, v123, v129);
    v130 = v143;
    v131 = (*((unsigned __int8 *)v143 + 80) + 40) & ~(unint64_t)*((unsigned __int8 *)v143 + 80);
    v132 = (char *)swift_allocObject();
    v133 = v162;
    v134 = v156;
    *((_QWORD *)v132 + 2) = v162;
    *((_QWORD *)v132 + 3) = v134;
    *((_QWORD *)v132 + 4) = v157;
    ((void (*)(char *, char *, uint64_t))v130[4])(&v132[v131], v126, v123);
    v135 = v124;
    v136 = v133;
    swift_retain();
    v137 = (uint64_t)v146;
    _TTSVBFileManager.createCompressedArchive(from:to:completion:)((uint64_t)v146, (uint64_t)v126, (uint64_t)sub_24874DBD8, (uint64_t)v132);
    swift_release();

    v138 = v126;
    v139 = v141;
    v141(v138, v123);

    v153[1](v152, v154);
    v139(v127, v123);
    v139(v168, v123);
    v139(v137, v123);
    return (int *)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24873E16C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD aBlock[6];

  v31 = a3;
  v32 = a4;
  v35 = sub_2487B53D8();
  v38 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v34 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2487B5408();
  v36 = *(_QWORD *)(v9 - 8);
  v37 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1C8);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = *(_QWORD *)(a2 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_calloutQueue);
  sub_2486F4E74(a1, (uint64_t)v15, &qword_25445F1C8);
  v16 = sub_2487B50CC();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  v19 = MEMORY[0x24BDAC7A8](v16);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v17 + 16))((char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), a5, v16, v19);
  v20 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v21 = (v14 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (*(unsigned __int8 *)(v17 + 80) + v21 + 16) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v23 = swift_allocObject();
  sub_2486F4F70((uint64_t)v15, v23 + v20, &qword_25445F1C8);
  v24 = (_QWORD *)(v23 + v21);
  v25 = v32;
  *v24 = v31;
  v24[1] = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v23 + v22, (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
  aBlock[4] = sub_24875057C;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F1008;
  aBlock[3] = &block_descriptor_251;
  v26 = _Block_copy(aBlock);
  swift_retain();
  sub_2487B53E4();
  v39 = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
  sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
  v28 = v34;
  v27 = v35;
  sub_2487B59FC();
  MEMORY[0x24959A1AC](0, v11, v28, v26);
  _Block_release(v26);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v28, v27);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v37);
  return swift_release();
}

uint64_t sub_24873E470(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v7 = type metadata accessor for TTSVBError(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1C8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2486F4E74(a1, (uint64_t)v12, &qword_25445F1C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24870A2C4((uint64_t)v12, (uint64_t)v9, type metadata accessor for TTSVBError);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C1D0);
    MEMORY[0x24BDAC7A8](v13);
    v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_248709554((uint64_t)v9, (uint64_t)v15, type metadata accessor for TTSVBError);
    swift_storeEnumTagMultiPayload();
    a2(v15);
    sub_2486F5008((uint64_t)v15, &qword_25777C1D0);
    return sub_2486EDA68((uint64_t)v9, type metadata accessor for TTSVBError);
  }
  else
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C1D0);
    MEMORY[0x24BDAC7A8](v17);
    v19 = (char *)&v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    v20 = sub_2487B50CC();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v19, a4, v20);
    swift_storeEnumTagMultiPayload();
    a2(v19);
    return sub_2486F5008((uint64_t)v19, &qword_25777C1D0);
  }
}

uint64_t TTSVBVoiceBankingManager.importTrainingData(fromDirectory:creatingVoiceName:localeID:completion:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  void (*v26)(char *, uint64_t, uint64_t, double);
  uint64_t v27;
  unint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  os_log_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v42;
  double v43;
  char *v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  void *v49;
  _QWORD *v50;
  _QWORD *v51;
  id v52;
  os_log_t v53[2];
  int v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t, double);
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  os_log_t *v67;
  uint64_t v68;
  uint64_t aBlock[7];

  v64 = a3;
  v61 = a1;
  v13 = sub_2487B53D8();
  v63 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_2487B5408();
  v16 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v18 = (char *)v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_2487B533C();
  v66 = *(_QWORD *)(v19 - 8);
  v67 = (os_log_t *)v19;
  MEMORY[0x24BDAC7A8](v19);
  v65 = (char *)v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (TTSVBIsInternalUIBuild())
  {
    v62 = a5;
    v63 = a2;
    v57 = a4;
    v58 = v7;
    v59 = a6;
    v60 = a7;
    v21 = sub_2487B0B90();
    (*(void (**)(char *, uint64_t, os_log_t *))(v66 + 16))(v65, v21, v67);
    v22 = sub_2487B50CC();
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(_QWORD *)(v23 + 64);
    v25 = MEMORY[0x24BDAC7A8](v22);
    v26 = *(void (**)(char *, uint64_t, uint64_t, double))(v23 + 16);
    v27 = v61;
    v26((char *)v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v61, v22, v25);
    v28 = v64;
    swift_bridgeObjectRetain_n();
    v29 = sub_2487B5324();
    v30 = sub_2487B57E0();
    v31 = v30;
    if (os_log_type_enabled(v29, v30))
    {
      v32 = swift_slowAlloc();
      v54 = v31;
      v33 = v32;
      v55 = swift_slowAlloc();
      aBlock[0] = v55;
      *(_DWORD *)v33 = 136315394;
      v53[0] = v29;
      swift_bridgeObjectRetain();
      v68 = sub_2486EDE5C(v63, v28, aBlock);
      v56 = v26;
      sub_2487B593C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v33 + 12) = 2080;
      v53[1] = (os_log_t)v53;
      v34 = sub_2487B50B4();
      v68 = sub_2486EDE5C(v34, v35, aBlock);
      v26 = v56;
      sub_2487B593C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v23 + 8))((char *)v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v22);
      v36 = v53[0];
      _os_log_impl(&dword_2486E6000, v53[0], (os_log_type_t)v54, "Will import new voice '%s' with data from: %s", (uint8_t *)v33, 0x16u);
      v37 = v55;
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v37, -1, -1);
      MEMORY[0x24959AF80](v33, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v23 + 8))((char *)v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v22);

    }
    v38 = (*(uint64_t (**)(char *, os_log_t *))(v66 + 8))(v65, v67);
    v42 = v62;
    v67 = v53;
    v43 = MEMORY[0x24BDAC7A8](v38);
    v44 = (char *)v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    v26(v44, v27, v22, v43);
    v45 = (*(unsigned __int8 *)(v23 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    v46 = (v24 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
    v47 = v28;
    v48 = swift_allocObject();
    v49 = v58;
    *(_QWORD *)(v48 + 16) = v58;
    (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))(v48 + v45, v44, v22);
    v50 = (_QWORD *)(v48 + v46);
    *v50 = v63;
    v50[1] = v47;
    v51 = (_QWORD *)(v48 + ((v46 + 23) & 0xFFFFFFFFFFFFFFF8));
    *v51 = v57;
    v51[1] = v42;
    swift_bridgeObjectRetain();
    v52 = v49;
    swift_bridgeObjectRetain();
    sub_24872F8CC((uint64_t)sub_24874DCC4, v48, v59, v60);
    return swift_release();
  }
  else
  {
    v39 = swift_allocObject();
    *(_QWORD *)(v39 + 16) = a6;
    *(_QWORD *)(v39 + 24) = a7;
    aBlock[4] = (uint64_t)sub_248750F04;
    aBlock[5] = v39;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_2486F1008;
    aBlock[3] = (uint64_t)&block_descriptor_96;
    v40 = _Block_copy(aBlock);
    swift_retain();
    sub_2487B53E4();
    v68 = MEMORY[0x24BEE4AF8];
    sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
    sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
    sub_2487B59FC();
    MEMORY[0x24959A1AC](0, v18, v15, v40);
    _Block_release(v40);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v15, v13);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v62);
    return swift_release();
  }
}

uint64_t sub_24873EC10(void (*a1)(char *))
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1C8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTSVBError.init(_:_:_:)(0xD000000000000018, 0x80000002487C5960, 0, 0, 0, (uint64_t)v4);
  swift_storeEnumTagMultiPayload();
  a1(v4);
  return sub_2486F5008((uint64_t)v4, &qword_25445F1C8);
}

void sub_24873ECD4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  char *v56;
  void (*v57)(char *, char *, uint64_t, double);
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  unsigned __int8 v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  void *v76;
  uint64_t v77;
  char *v78;
  id v79;
  id v80;
  NSObject *v81;
  os_log_type_t v82;
  _BOOL4 v83;
  uint64_t v84;
  uint8_t *v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  double v90;
  char *v91;
  uint64_t v92;
  NSObject *v93;
  os_log_type_t v94;
  uint8_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  void (*v100)(uint64_t, uint64_t);
  void *v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  double v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  _QWORD *v118;
  float (*v119)(uint64_t);
  uint64_t v120;
  float v121;
  float v122;
  float v123;
  float v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  double v129;
  uint64_t v130;
  char *v131;
  unint64_t v132;
  NSObject *v133;
  os_log_type_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  void (*v139)(char *, uint64_t);
  uint64_t v140;
  void (*v141)(char *, uint64_t);
  void (*v142)(char *, uint64_t);
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t *v148;
  uint64_t **v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t *v155;
  __int128 v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  void (*v172)(char *, char *, uint64_t, double);
  uint64_t v173;
  uint64_t v174;
  void (*v175)(char *, uint64_t, uint64_t);
  void (*v176)(char *, uint64_t);
  uint64_t *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t *v185;
  uint64_t v186;
  char *v187;
  uint64_t *v188;
  char *v189;
  uint64_t v190;
  unint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char v214;

  v189 = (char *)a5;
  v191 = a3;
  v190 = a2;
  v196 = sub_2487B533C();
  v9 = *(_QWORD *)(v196 - 8);
  MEMORY[0x24BDAC7A8](v196);
  v187 = (char *)&v146 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v193 = (char *)&v146 - v12;
  MEMORY[0x24BDAC7A8](v13);
  v192 = (char *)&v146 - v14;
  MEMORY[0x24BDAC7A8](v15);
  v195 = (char *)&v146 - v16;
  v17 = sub_2487B542C();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (uint64_t *)((char *)&v146 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v194 = v5;
  v22 = *(void **)(v5 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue);
  *v21 = v22;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v18 + 104))(v21, *MEMORY[0x24BEE5610], v17, v19);
  v23 = v22;
  LOBYTE(v22) = sub_2487B5444();
  (*(void (**)(_QWORD *, uint64_t))(v18 + 8))(v21, v17);
  if ((v22 & 1) == 0)
  {
    __break(1u);
    return;
  }
  v188 = (uint64_t *)a4;
  v24 = sub_2487B50CC();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 64);
  MEMORY[0x24BDAC7A8](v24);
  sub_24873970C(a1, (uint64_t)&v146 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!v6)
  {
    v197 = v24;
    static TTSVBTrainingScript.parseScript(fromMetadatFile:)((uint64_t)&v146 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0), &v198);
    v27 = 0;
    v151 = (char *)&v146 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    v184 = v26;
    v161 = a1;
    v186 = v25;
    v169 = v9;
    v28 = v198;
    v29 = sub_2487B5228();
    v30 = *(_QWORD *)(v29 - 8);
    MEMORY[0x24BDAC7A8](v29);
    v32 = (char *)&v146 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_24872D800(v190, v191, (uint64_t)v188, (unint64_t)v189, (uint64_t)v32);
    v160 = v30;
    v159 = v32;
    v147 = v29;
    v148 = &v146;
    v34 = *(_QWORD *)(v28 + 16);
    v155 = &v146;
    v35 = v197;
    if (!v34)
    {
      swift_bridgeObjectRelease();
      v125 = v196;
      v37 = v186;
LABEL_29:
      v183 = v27;
      v126 = sub_2487B0B90();
      v127 = v187;
      v128 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v169 + 16))(v187, v126, v125);
      v195 = (char *)&v146;
      v129 = MEMORY[0x24BDAC7A8](v128);
      v131 = (char *)&v146 - ((v130 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, uint64_t, double))(v37 + 16))(v131, v161, v35, v129);
      v132 = v191;
      swift_bridgeObjectRetain_n();
      v133 = sub_2487B5324();
      v134 = sub_2487B57E0();
      if (os_log_type_enabled(v133, v134))
      {
        v135 = swift_slowAlloc();
        v136 = swift_slowAlloc();
        v198 = v136;
        *(_DWORD *)v135 = 136315394;
        swift_bridgeObjectRetain();
        v213 = sub_2486EDE5C(v190, v132, &v198);
        sub_2487B593C();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v135 + 12) = 2080;
        v137 = sub_2487B50B4();
        v213 = sub_2486EDE5C(v137, v138, &v198);
        sub_2487B593C();
        swift_bridgeObjectRelease();
        v139 = *(void (**)(char *, uint64_t))(v186 + 8);
        v140 = v197;
        v139(v131, v197);
        _os_log_impl(&dword_2486E6000, v133, v134, "Finished import of new voice '%s' with data from: %s", (uint8_t *)v135, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24959AF80](v136, -1, -1);
        MEMORY[0x24959AF80](v135, -1, -1);

        (*(void (**)(char *, uint64_t))(v169 + 8))(v187, v196);
        (*(void (**)(char *, uint64_t))(v160 + 8))(v159, v147);
        v139(v151, v140);
      }
      else
      {

        v141 = *(void (**)(char *, uint64_t))(v186 + 8);
        v141(v131, v35);
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v169 + 8))(v127, v125);
        (*(void (**)(char *, uint64_t))(v160 + 8))(v159, v147);
        v141(v151, v35);
      }
      return;
    }
    v36 = 0;
    v152 = &v214;
    v149 = &v199;
    *(_QWORD *)&v33 = 136315138;
    v156 = v33;
    v150 = MEMORY[0x24BEE4AD8] + 8;
    v37 = v186;
    v157 = v28;
    while (1)
    {
      v171 = v34;
      v183 = v27;
      v177 = &v146;
      v170 = v36;
      v39 = *(_QWORD *)(v28 + v36 + 40);
      v40 = *(_QWORD *)(v28 + v36 + 56);
      v167 = *(_QWORD *)(v28 + v36 + 48);
      v41 = *(_QWORD *)(v28 + v36 + 72);
      v173 = *(_QWORD *)(v28 + v36 + 64);
      v42 = *(_QWORD *)(v28 + v36 + 88);
      v166 = *(_QWORD *)(v28 + v36 + 80);
      v43 = *(_QWORD *)(v28 + v36 + 104);
      v165 = *(_QWORD *)(v28 + v36 + 96);
      v164 = *(_QWORD *)(v28 + v36 + 112);
      v163 = *(_QWORD *)(v28 + v36 + 120);
      v44 = *(_QWORD *)(v28 + v36 + 128);
      v45 = *(_QWORD *)(v28 + v36 + 144);
      v162 = *(_QWORD *)(v28 + v36 + 136);
      v46 = v184;
      MEMORY[0x24BDAC7A8](v39);
      v168 = v47;
      v198 = v47;
      v199 = v48;
      v185 = v48;
      swift_bridgeObjectRetain_n();
      v181 = v40;
      swift_bridgeObjectRetain();
      v188 = (uint64_t *)v41;
      swift_bridgeObjectRetain();
      v180 = v42;
      swift_bridgeObjectRetain();
      v179 = v43;
      swift_bridgeObjectRetain();
      v178 = v45;
      swift_bridgeObjectRetain();
      sub_2487B55AC();
      sub_2487B5054();
      swift_bridgeObjectRelease();
      v49 = sub_2487B0B90();
      v50 = v169;
      v51 = *(uint64_t (**)(_QWORD))(v169 + 16);
      v52 = v195;
      v174 = v49;
      v53 = v196;
      v175 = (void (*)(char *, uint64_t, uint64_t))v51;
      v54 = v51(v195);
      v182 = &v146;
      v55 = MEMORY[0x24BDAC7A8](v54);
      v56 = (char *)&v146 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
      v57 = *(void (**)(_QWORD, _QWORD, _QWORD, double))(v37 + 16);
      v189 = v56;
      v58 = v197;
      v172 = (void (*)(char *, char *, uint64_t, double))v57;
      v57(v56, v56, v197, v55);
      v59 = sub_2487B5324();
      v60 = sub_2487B57E0();
      if (os_log_type_enabled(v59, v60))
      {
        v61 = (uint8_t *)swift_slowAlloc();
        v62 = swift_slowAlloc();
        v198 = v62;
        *(_DWORD *)v61 = v156;
        sub_2486F4CA0(&qword_25777D190, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAB8], MEMORY[0x24BDCDB30]);
        v63 = sub_2487B5CCC();
        v213 = sub_2486EDE5C(v63, v64, &v198);
        v58 = v197;
        sub_2487B593C();
        swift_bridgeObjectRelease();
        v176 = *(void (**)(char *, uint64_t))(v186 + 8);
        v176(v56, v58);
        _os_log_impl(&dword_2486E6000, v59, v60, "Processing import item: %s", v61, 0xCu);
        swift_arrayDestroy();
        v65 = v62;
        v66 = v196;
        MEMORY[0x24959AF80](v65, -1, -1);
        MEMORY[0x24959AF80](v61, -1, -1);

        v67 = *(void (**)(char *, uint64_t))(v50 + 8);
        v67(v195, v66);
        v68 = v160;
        v69 = v193;
      }
      else
      {
        v176 = *(void (**)(char *, uint64_t))(v37 + 8);
        v176(v56, v58);

        v67 = *(void (**)(char *, uint64_t))(v50 + 8);
        v67(v52, v53);
        v68 = v160;
        v69 = v193;
        v66 = v53;
      }
      v198 = *sub_24876D91C();
      v70 = (uint64_t)v189;
      v71 = _TTSVBFileManager.fileExists(_:)();
      v72 = v184;
      v73 = (unint64_t)v188;
      if ((v71 & 1) != 0)
      {
        swift_bridgeObjectRetain();
        v74 = v183;
        static TTSVBAudioTools.analyzeRecording(atURL:detectUserSpeech:expectedText:detectMetrics:)(v70, 1, v173, v73, 1, &v198);
        v27 = v74;
        if (v74)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          v142 = v176;
          v176((char *)v70, v58);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v68 + 8))(v159, v147);
          v143 = v151;
          v144 = v58;
          goto LABEL_34;
        }
        swift_bridgeObjectRelease();
        v75 = v199;
        v158 = v198;
        v77 = v200;
        v76 = (void *)v201;
        v78 = v192;
        v175(v192, v174, v66);
        v183 = (uint64_t)v76;
        v79 = v76;
        swift_bridgeObjectRetain_n();
        v80 = v79;
        v81 = sub_2487B5324();
        v82 = sub_2487B57E0();
        LODWORD(v175) = v82;
        v83 = os_log_type_enabled(v81, v82);
        v154 = (uint64_t)v75;
        v153 = v77;
        if (v83)
        {
          v84 = swift_slowAlloc();
          v182 = (uint64_t *)v67;
          v85 = (uint8_t *)v84;
          v86 = swift_slowAlloc();
          *(_DWORD *)v85 = v156;
          v213 = v86;
          v198 = v158;
          v199 = v75;
          v200 = v77;
          v201 = v183;
          v87 = TTSVBAudioTools.RecordingAnalysis.description.getter();
          v198 = sub_2486EDE5C(v87, v88, &v213);
          sub_2487B593C();

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_2486E6000, v81, (os_log_type_t)v175, "Audio Analysis: %s", v85, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24959AF80](v86, -1, -1);
          MEMORY[0x24959AF80](v85, -1, -1);

          ((void (*)(char *, uint64_t))v182)(v192, v196);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          v67(v78, v66);
        }
        v101 = v80;
        v102 = v197;
        v103 = (uint64_t)v159;
        if (!v183)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          type metadata accessor for TTSVBError(0);
          sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
          swift_allocError();
          TTSVBError.init(_:_:_:)(0xD000000000000024, 0x80000002487C58F0, 0, 0, 0, v145);
          swift_willThrow();

          swift_bridgeObjectRelease();
          v142 = v176;
          v176(v189, v102);
          (*(void (**)(uint64_t, uint64_t))(v160 + 8))(v103, v147);
          v143 = v151;
          v144 = v102;
LABEL_34:
          v142(v143, v144);
          return;
        }
        v198 = v168;
        v199 = v185;
        v200 = v167;
        v201 = v181;
        v202 = v173;
        v203 = (uint64_t)v188;
        v204 = v166;
        v205 = v180;
        v206 = v165;
        v207 = v179;
        v208 = v164;
        v209 = v163;
        v210 = v44;
        v211 = v162;
        v212 = v178;
        v104 = v101;
        sub_24873BBF0(v103, (uint64_t)&v198);
        v183 = v105;
        v182 = (uint64_t *)v106;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28);
        v188 = &v146;
        v108 = MEMORY[0x24BDAC7A8](v107);
        v110 = (char *)&v146 - ((v109 + 15) & 0xFFFFFFFFFFFFFFF0);
        v111 = v197;
        v172(v110, v189, v197, v108);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v186 + 56))(v110, 0, 1, v111);
        v112 = v158;
        if (!v154)
          v112 = 0;
        v181 = v112;
        if (v154)
          v113 = v154;
        else
          v113 = 0xE000000000000000;
        v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
        v185 = &v146;
        MEMORY[0x24BDAC7A8](v114);
        v116 = (char *)&v146 - ((v115 + 15) & 0xFFFFFFFFFFFFFFF0);
        v117 = sub_2487B51D4();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 56))(v116, 1, 1, v117);
        v118 = (_QWORD *)MEMORY[0x24BEE4EA0];
        v119 = *(float (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v104) + 0xA0);
        v120 = swift_bridgeObjectRetain();
        v121 = v119(v120);
        v122 = (*(float (**)(void))((*v118 & *v104) + 0x100))();
        v123 = (*(float (**)(void))((*v118 & *v104) + 0x118))();
        v124 = (*(float (**)(void))((*v118 & *v104) + 0x178))();
        sub_248740294((uint64_t)v182, v183, v121, v122, v123, v124, (uint64_t)v159, (uint64_t)v110, v153, v181, v113, (uint64_t)v116);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        sub_2486F5008((uint64_t)v116, &qword_25445ED38);
        sub_2486F5008((uint64_t)v110, &qword_25445ED28);
        v176(v189, v197);
      }
      else
      {
        v182 = (uint64_t *)v67;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v89 = ((uint64_t (*)(char *, uint64_t, uint64_t))v175)(v69, v174, v66);
        v90 = MEMORY[0x24BDAC7A8](v89);
        v91 = (char *)&v146 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
        v172(v91, (char *)v70, v58, v90);
        v92 = v70;
        v93 = sub_2487B5324();
        v94 = sub_2487B57D4();
        if (os_log_type_enabled(v93, v94))
        {
          v95 = (uint8_t *)swift_slowAlloc();
          v96 = swift_slowAlloc();
          v188 = &v146;
          v97 = v96;
          v198 = v96;
          *(_DWORD *)v95 = v156;
          v98 = sub_2487B50B4();
          v213 = sub_2486EDE5C(v98, v99, &v198);
          sub_2487B593C();
          swift_bridgeObjectRelease();
          v100 = (void (*)(uint64_t, uint64_t))v176;
          v176(v91, v197);
          _os_log_impl(&dword_2486E6000, v93, v94, "Audio file missing for import item: %s", v95, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24959AF80](v97, -1, -1);
          MEMORY[0x24959AF80](v95, -1, -1);

          ((void (*)(char *, uint64_t))v182)(v193, v196);
          v100(v92, v197);
        }
        else
        {

          v38 = (void (*)(uint64_t, uint64_t))v176;
          v176(v91, v58);
          ((void (*)(char *, uint64_t))v182)(v69, v66);
          v38(v92, v58);
        }
        v27 = v183;
      }
      v36 = v170 + 120;
      v34 = v171 - 1;
      v37 = v186;
      v28 = v157;
      if (v171 == 1)
      {
        swift_bridgeObjectRelease();
        v125 = v196;
        v35 = v197;
        goto LABEL_29;
      }
    }
  }
}

uint64_t sub_248740294(uint64_t a1, uint64_t a2, float a3, float a4, float a5, float a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  char *v12;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  id v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  unint64_t v34;
  uint64_t v35;
  void (*v36)(double);
  uint64_t v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t (*)(double), uint64_t);
  unint64_t v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  float *v61;
  float *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  double v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  float *v90;
  float *v91;
  char *v92;
  uint64_t v93;
  id v94;
  void (*v95)(char *, int64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  double v99;
  char *v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t (**v104)(double);
  uint64_t (*v105)(double);
  id v106;
  id v107;
  void (*v108)(char *, uint64_t (*)(double), uint64_t);
  void (**v109)(_QWORD, _QWORD, _QWORD);
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t (*v117)(double);
  uint64_t v118;
  void (*v119)(char *, uint64_t (*)(double), uint64_t);
  char *v120;
  uint64_t v121;
  unint64_t v122;
  void (**v123)(char *, uint64_t (*)(double), uint64_t);
  void (**v124)(_QWORD, _QWORD, _QWORD);
  char *v125;
  unint64_t v126;
  void (**v127)(char *, uint64_t (*)(double), uint64_t);
  void (**v128)(char *, uint64_t (*)(double), uint64_t);
  void (**v129)(char *, uint64_t (*)(double), uint64_t);
  void (**v130)(char *, uint64_t (*)(double), uint64_t);
  void (**v131)(char *, uint64_t (*)(double), uint64_t);
  void (**v132)(char *, uint64_t (*)(double), uint64_t);
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t (*v139)(double);
  uint64_t v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;

  v142 = a2;
  v143 = a11;
  v137 = a9;
  v138 = a10;
  v136 = a1;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777D168);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_2487B542C();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = (void (**)(char *, uint64_t (*)(double), uint64_t))((char *)&v108
                                                                              - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v141 = v12;
  v27 = *(void **)&v12[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue];
  *v26 = v27;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v23 + 104))(v26, *MEMORY[0x24BEE5610], v22, v24);
  v28 = v27;
  LOBYTE(v27) = sub_2487B5444();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v23 + 8))(v26, v22);
  if ((v27 & 1) != 0)
  {
    v120 = v21;
    v30 = sub_2487B5228();
    v132 = &v108;
    v31 = *(_QWORD *)(v30 - 8);
    v144 = v30;
    v32 = *(_QWORD *)(v31 + 64);
    v140 = v31;
    v33 = MEMORY[0x24BDAC7A8](v30);
    v34 = (v32 + 15) & 0xFFFFFFFFFFFFFFF0;
    v139 = (uint64_t (*)(double))((char *)&v108 - v34);
    v36 = *(void (**)(double))(v35 + 16);
    v36(v33);
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28);
    v131 = &v108;
    v126 = *(_QWORD *)(v37 - 8);
    v135 = a12;
    v38 = *(char **)(v126 + 64);
    MEMORY[0x24BDAC7A8](v37);
    v39 = (unint64_t)(v38 + 15) & 0xFFFFFFFFFFFFFFF0;
    v125 = (char *)v39;
    v124 = (void (**)(_QWORD, _QWORD, _QWORD))a8;
    v121 = (uint64_t)&v108 - v39;
    sub_2486F4E74(a8, (uint64_t)&v108 - v39, &qword_25445ED28);
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
    v130 = &v108;
    v123 = *(void (***)(char *, uint64_t (*)(double), uint64_t))(v40 - 8);
    v41 = v123[8];
    MEMORY[0x24BDAC7A8](v40);
    v42 = ((unint64_t)v41 + 15) & 0xFFFFFFFFFFFFFFF0;
    v122 = (unint64_t)&v108 - v42;
    v43 = sub_2486F4E74(v135, (uint64_t)&v108 - v42, &qword_25445ED38);
    v129 = &v108;
    v44 = MEMORY[0x24BDAC7A8](v43);
    v116 = v34;
    v135 = (uint64_t)&v108 - v34;
    v117 = (uint64_t (*)(double))v36;
    v45 = ((uint64_t (*)(double))v36)(v44);
    v128 = &v108;
    MEMORY[0x24BDAC7A8](v45);
    v134 = (uint64_t)&v108 - v39;
    v46 = sub_2486F4E74((uint64_t)&v108 - v39, (uint64_t)&v108 - v39, &qword_25445ED28);
    v127 = &v108;
    MEMORY[0x24BDAC7A8](v46);
    v115 = v42;
    v133 = (uint64_t)&v108 - v42;
    sub_2486F4E74((uint64_t)&v108 - v42, (uint64_t)&v108 - v42, &qword_25445ED38);
    v47 = v140;
    v48 = *(unsigned __int8 *)(v140 + 80);
    v49 = (v48 + 40) & ~v48;
    v118 = v32;
    v50 = *(unsigned __int8 *)(v126 + 80);
    v112 = v49 + v32;
    v51 = (v49 + v32 + v50) & ~v50;
    v111 = v38 + 7;
    v52 = (unint64_t)&v38[v51 + 7] & 0xFFFFFFFFFFFFFFF8;
    v53 = (v52 + 11) & 0xFFFFFFFFFFFFFFF8;
    v54 = (v53 + 11) & 0xFFFFFFFFFFFFFFF8;
    v55 = (v54 + 15) & 0xFFFFFFFFFFFFFFF8;
    v56 = *((unsigned __int8 *)v123 + 80);
    v109 = (void (**)(_QWORD, _QWORD, _QWORD))(v56 + 16);
    v57 = (v56 + 16 + v55) & ~v56;
    v119 = v41;
    v113 = v50;
    v126 = v56;
    v110 = v48 | v50 | v56 | 7;
    v58 = (char *)swift_allocObject();
    v59 = v136;
    *((_QWORD *)v58 + 2) = v141;
    *((_QWORD *)v58 + 3) = v59;
    *((_QWORD *)v58 + 4) = v142;
    v114 = v49;
    v108 = *(void (**)(char *, uint64_t (*)(double), uint64_t))(v47 + 32);
    v108(&v58[v49], v139, v144);
    sub_2486F4F70(v121, (uint64_t)&v58[v51], &qword_25445ED28);
    v60 = v138;
    *(_QWORD *)&v58[v52] = v137;
    v61 = (float *)&v58[v53];
    *v61 = a3;
    v61[1] = a4;
    v62 = (float *)&v58[v54];
    *v62 = a5;
    v62[1] = a6;
    v63 = &v58[v55];
    v139 = (uint64_t (*)(double))v58;
    v64 = v143;
    *(_QWORD *)v63 = v60;
    *((_QWORD *)v63 + 1) = v64;
    sub_2486F4F70(v122, (uint64_t)&v58[v57], &qword_25445ED38);
    v65 = sub_2487B50CC();
    v66 = *(_QWORD *)(v65 - 8);
    v67 = *(_QWORD *)(v66 + 64);
    MEMORY[0x24BDAC7A8](v65);
    v68 = (v67 + 15) & 0xFFFFFFFFFFFFFFF0;
    v69 = (char *)&v108 - v68;
    v123 = &v108;
    MEMORY[0x24BDAC7A8](v70);
    v71 = v125;
    sub_2486F4E74((uint64_t)v124, (char *)&v108 - v125, &qword_25445ED28);
    if ((*(unsigned int (**)(int64_t, uint64_t, uint64_t))(v66 + 48))((char *)&v108 - v71, 1, v65) == 1)
    {
      v72 = v113;
      v122 = ~v126;
      v73 = v141;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v141 = v73;
      v74 = sub_2486F5008((char *)&v108 - v71, &qword_25445ED28);
      v126 = (unint64_t)&v108;
      v75 = MEMORY[0x24BDAC7A8](v74);
      v123 = (void (**)(char *, uint64_t (*)(double), uint64_t))((char *)&v108 - v116);
      v76 = v117(v75);
      v124 = (void (**)(_QWORD, _QWORD, _QWORD))&v108;
      MEMORY[0x24BDAC7A8](v76);
      v77 = (char *)((char *)&v108 - v71);
      v78 = sub_2486F4E74(v134, (char *)&v108 - v71, &qword_25445ED28);
      v125 = (char *)&v108;
      MEMORY[0x24BDAC7A8](v78);
      v121 = (uint64_t)&v108 - v115;
      sub_2486F4E74(v133, (uint64_t)&v108 - v115, &qword_25445ED38);
      v79 = (v112 + 7) & 0xFFFFFFFFFFFFFFF8;
      v80 = (v72 + v79 + 8) & ~v72;
      v81 = (unint64_t)&v111[v80] & 0xFFFFFFFFFFFFFFF8;
      v82 = (v81 + 11) & 0xFFFFFFFFFFFFFFF8;
      v83 = (v82 + 11) & 0xFFFFFFFFFFFFFFF8;
      v84 = (v83 + 15) & 0xFFFFFFFFFFFFFFF8;
      v85 = ((unint64_t)v109 + v84) & v122;
      v86 = (char *)swift_allocObject();
      v87 = v142;
      v88 = v136;
      *((_QWORD *)v86 + 2) = v141;
      *((_QWORD *)v86 + 3) = v88;
      *((_QWORD *)v86 + 4) = v87;
      v108(&v86[v114], (uint64_t (*)(double))v123, v144);
      *(_QWORD *)&v86[v79] = 0;
      sub_2486F4F70((uint64_t)v77, (uint64_t)&v86[v80], &qword_25445ED28);
      v89 = v138;
      *(_QWORD *)&v86[v81] = v137;
      v90 = (float *)&v86[v82];
      *v90 = a3;
      v90[1] = a4;
      v91 = (float *)&v86[v83];
      *v91 = a5;
      v91[1] = a6;
      v92 = &v86[v84];
      v93 = v143;
      *(_QWORD *)v92 = v89;
      *((_QWORD *)v92 + 1) = v93;
      sub_2486F4F70(v121, (uint64_t)&v86[v85], &qword_25445ED38);
      v94 = v141;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24872F8CC((uint64_t)sub_24874FA5C, (uint64_t)v86, (uint64_t)nullsub_1, 0);
      swift_bridgeObjectRelease();

      swift_release();
    }
    else
    {
      v126 = (unint64_t)&v108;
      v95 = *(void (**)(char *, int64_t, uint64_t))(v66 + 32);
      v95((char *)&v108 - v68, (char *)&v108 - v71, v65);
      v96 = sub_2487B56FC();
      v97 = (uint64_t)v120;
      v98 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56))(v120, 1, 1, v96);
      v99 = MEMORY[0x24BDAC7A8](v98);
      v100 = (char *)&v108 - v68;
      (*(void (**)(char *, char *, uint64_t, double))(v66 + 16))((char *)&v108 - v68, (char *)&v108 - v68, v65, v99);
      v101 = (*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
      v102 = (v67 + v101 + 7) & 0xFFFFFFFFFFFFFFF8;
      v103 = swift_allocObject();
      *(_QWORD *)(v103 + 16) = 0;
      *(_QWORD *)(v103 + 24) = 0;
      v95((char *)(v103 + v101), (int64_t)v100, v65);
      v104 = (uint64_t (**)(double))(v103 + v102);
      v105 = v139;
      *v104 = sub_24874F954;
      v104[1] = v105;
      v106 = v141;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v107 = v106;
      swift_retain();
      sub_2487423A0(v97, (uint64_t)&unk_25777D178, v103);
      swift_release();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v69, v65);
      swift_bridgeObjectRelease();

    }
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v135, v144);
    sub_2486F5008(v134, &qword_25445ED28);
    swift_bridgeObjectRelease();
    return sub_2486F5008(v133, &qword_25445ED38);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t TTSVBVoiceBankingManager.deleteUserData(forSampleWithID:voiceID:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_248742500(a1, a2, a3, a4, a5, (uint64_t)&unk_251992898, (uint64_t)sub_24874DD48);
}

uint64_t sub_248740C68(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  char *v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t, double);
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(double);
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  id v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  double v42;
  char *v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t *v48;
  id v49;
  uint64_t v50;
  char *v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t (**v59)(double);
  id v60;
  id v61;
  uint64_t v62;
  uint64_t (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  unint64_t v65;
  void (*v66)(char *, char *, uint64_t, double);
  char *v67;
  uint64_t *v68;
  char *v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  unint64_t v74;
  uint64_t *v75;
  uint64_t *v76;
  uint64_t *v77;
  id v78;
  uint64_t v79;

  v79 = a2;
  v76 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777D168);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2487B542C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (uint64_t *)((char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v78 = v3;
  v13 = *(void **)&v3[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue];
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v9 + 104))(v12, *MEMORY[0x24BEE5610], v8, v10);
  v14 = v13;
  LOBYTE(v13) = sub_2487B5444();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v12, v8);
  if ((v13 & 1) != 0)
  {
    v67 = v7;
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28);
    v75 = &v62;
    v17 = *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64);
    MEMORY[0x24BDAC7A8](v16);
    v74 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0;
    v18 = (char *)&v62 - v74;
    v19 = sub_2487B50CC();
    v20 = *(_QWORD *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, 1, 1, v19);
    v21 = sub_2487B5228();
    v73 = &v62;
    v22 = *(_QWORD *)(v21 - 8);
    v23 = *(_QWORD *)(v22 + 64);
    v24 = MEMORY[0x24BDAC7A8](v21);
    v25 = (char *)&v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    v26 = *(uint64_t (**)(char *, uint64_t, uint64_t, double))(v22 + 16);
    v27 = v26(v25, a3, v21, v24);
    v70 = &v62;
    v28 = MEMORY[0x24BDAC7A8](v27);
    v65 = (v23 + 15) & 0xFFFFFFFFFFFFFFF0;
    v66 = (void (*)(char *, char *, uint64_t, double))v26;
    v69 = v25;
    ((void (*)(double))v26)(v28);
    v29 = *(unsigned __int8 *)(v22 + 80);
    v30 = (v29 + 40) & ~v29;
    v62 = v30 + v23;
    v64 = v29 | 7;
    v31 = (uint64_t (*)(double))swift_allocObject();
    v32 = v76;
    *((_QWORD *)v31 + 2) = v78;
    *((_QWORD *)v31 + 3) = v32;
    *((_QWORD *)v31 + 4) = v79;
    v71 = v21;
    v72 = v22;
    v63 = *(uint64_t (**)(char *, char *, uint64_t))(v22 + 32);
    v33 = v63((char *)v31 + v30, v25, v21);
    v77 = &v62;
    v34 = *(_QWORD *)(v20 + 64);
    MEMORY[0x24BDAC7A8](v33);
    v35 = (v34 + 15) & 0xFFFFFFFFFFFFFFF0;
    v68 = &v62;
    MEMORY[0x24BDAC7A8](v36);
    v37 = (char *)&v62 - v74;
    v74 = (unint64_t)v18;
    sub_2486F4E74((uint64_t)v18, (uint64_t)v37, &qword_25445ED28);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v37, 1, v19) == 1)
    {
      v38 = v78;
      v39 = v79;
      swift_bridgeObjectRetain_n();
      v40 = v38;
      v41 = sub_2486F5008((uint64_t)v37, &qword_25445ED28);
      v77 = &v62;
      v42 = MEMORY[0x24BDAC7A8](v41);
      v43 = (char *)&v62 - v65;
      v44 = v69;
      v45 = v71;
      v66((char *)&v62 - v65, v69, v71, v42);
      v46 = (v62 + 7) & 0xFFFFFFFFFFFFFFF8;
      v47 = (char *)swift_allocObject();
      v48 = v76;
      *((_QWORD *)v47 + 2) = v40;
      *((_QWORD *)v47 + 3) = v48;
      *((_QWORD *)v47 + 4) = v39;
      v63(&v47[v30], v43, v45);
      *(_QWORD *)&v47[v46] = 0;
      v49 = v40;
      swift_bridgeObjectRetain();
      sub_24872F8CC((uint64_t)sub_24874FF88, (uint64_t)v47, (uint64_t)nullsub_1, 0);
      swift_bridgeObjectRelease();

      swift_release();
      swift_release();
      v50 = v45;
      v51 = v44;
    }
    else
    {
      v52 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
      v52((char *)&v62 - v35, v37, v19);
      v53 = sub_2487B56FC();
      v54 = (uint64_t)v67;
      v55 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v67, 1, 1, v53);
      v76 = &v62;
      v56 = MEMORY[0x24BDAC7A8](v55);
      (*(void (**)(char *, char *, uint64_t, double))(v20 + 16))((char *)&v62 - v35, (char *)&v62 - v35, v19, v56);
      v57 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      v58 = swift_allocObject();
      *(_QWORD *)(v58 + 16) = 0;
      *(_QWORD *)(v58 + 24) = 0;
      v52((char *)(v58 + v57), (char *)&v62 - v35, v19);
      v59 = (uint64_t (**)(double))(v58 + ((v34 + v57 + 7) & 0xFFFFFFFFFFFFFFF8));
      *v59 = sub_24874FF40;
      v59[1] = v31;
      v60 = v78;
      swift_bridgeObjectRetain_n();
      v61 = v60;
      swift_retain();
      sub_2487423A0(v54, (uint64_t)&unk_25777D198, v58);
      swift_release();
      (*(void (**)(char *, uint64_t))(v20 + 8))((char *)&v62 - v35, v19);
      swift_bridgeObjectRelease();

      swift_release();
      v50 = v71;
      v51 = v69;
    }
    (*(void (**)(char *, uint64_t))(v72 + 8))(v51, v50);
    return sub_2486F5008(v74, &qword_25445ED28);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_248741214(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  unint64_t v14;
  char *v15;
  id v16;
  uint64_t v18;

  v10 = sub_2487B5228();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x24BDAC7A8](v10);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))((char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v10, v13);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = (char *)swift_allocObject();
  *((_QWORD *)v15 + 2) = a1;
  *((_QWORD *)v15 + 3) = a2;
  *((_QWORD *)v15 + 4) = a3;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v15[v14], (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  *(double *)&v15[(v12 + v14 + 7) & 0xFFFFFFFFFFFFFFF8] = a5;
  v16 = a1;
  swift_bridgeObjectRetain();
  sub_24872F8CC((uint64_t)sub_24874FF88, (uint64_t)v15, (uint64_t)nullsub_1, 0);
  return swift_release();
}

void sub_24874133C(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  char v5;

  v1 = *(void **)(a1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore);
  if (v1)
  {
    v5 = 1;
    v2 = v1;
    v3 = sub_2487749A0(&v5);

    MEMORY[0x24BDAC7A8](v4);
    sub_2487B58A0();

  }
  else
  {
    __break(1u);
  }
}

void sub_248741420(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, double a5)
{
  uint64_t v5;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  double v18;
  void *v19;
  uint64_t v20;

  type metadata accessor for TTSVBLocalVoiceSampleMO();
  v11 = static TTSVBLocalVoiceSampleMO.requireSampleWithID(_:voiceID:moc:)(a1, a2, a3, a4);
  if (!v5)
  {
    v12 = (void *)v11;
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28);
    MEMORY[0x24BDAC7A8](v13);
    v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    v16 = sub_2487B50CC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
    sub_24874E4F0(v12, (uint64_t)v15, a5);
    sub_2486F5008((uint64_t)v15, &qword_25445ED28);
    objc_msgSend(v12, sel_setUserScore_, 0xFFFFFFFFLL);
    LODWORD(v17) = -1.0;
    objc_msgSend(v12, sel_setSnr_, v17);
    LODWORD(v18) = -1.0;
    objc_msgSend(v12, sel_setSpl_, v18);
    v19 = (void *)sub_2487B5504();
    objc_msgSend(v12, sel_setUserPhrase_, v19);

    NSManagedObjectContext.trySave()();
  }
}

uint64_t TTSVBVoiceBankingManager.updateDataForSample(_:voiceID:audioFileURLOrNil:userScore:userPhrase:recordingDate:spl:splThreshold:snr:snrThreshold:completion:)(uint64_t a1, uint64_t a2, float a3, float a4, float a5, float a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v14;
  void *v15;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  void (*v28)(double);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  id v48;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v15 = v14;
  v63 = a10;
  v64 = a11;
  v61 = a2;
  v62 = a9;
  v60 = a1;
  v65 = a14;
  v66 = a13;
  v22 = j___s31TextToSpeechVoiceBankingSupport25TTSVBMaximumUserEditScoreSivg();
  static TTSVBAnalytics.sampleCaptured(spl:splThreshold:snr:snrThreshold:userScore:userScoreThreshold:)(a9, v22, a3, a4, a5, a6);
  v23 = sub_2487B5228();
  v24 = *(_QWORD *)(v23 - 8);
  v58 = v23;
  v25 = *(_QWORD *)(v24 + 64);
  v26 = MEMORY[0x24BDAC7A8](v23);
  v59 = (char *)&v50 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *(void (**)(double))(v27 + 16);
  v29 = v27;
  v52 = v27;
  v28(v26);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(_QWORD *)(v31 + 64);
  MEMORY[0x24BDAC7A8](v30);
  v57 = (uint64_t)&v50 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2486F4E74(a8, v57, &qword_25445ED28);
  v33 = sub_2487B51D4();
  v34 = *(_QWORD *)(v33 - 8);
  v55 = v33;
  v35 = *(_QWORD *)(v34 + 64);
  v36 = MEMORY[0x24BDAC7A8](v33);
  v56 = (char *)&v50 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(double))(v34 + 16))(v36);
  v37 = (*(unsigned __int8 *)(v29 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v38 = (v25 + *(unsigned __int8 *)(v31 + 80) + v37) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  v54 = (v32 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
  v51 = (v54 + 15) & 0xFFFFFFFFFFFFFFF8;
  v39 = (*(unsigned __int8 *)(v34 + 80) + v51 + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  v53 = (v35 + v39 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  v40 = (v53 + 7) & 0xFFFFFFFFFFFFFFFCLL;
  v41 = (v40 + 7) & 0xFFFFFFFFFFFFFFFCLL;
  v42 = (char *)swift_allocObject();
  v43 = v60;
  v44 = v61;
  *((_QWORD *)v42 + 2) = v15;
  *((_QWORD *)v42 + 3) = v43;
  *((_QWORD *)v42 + 4) = v44;
  (*(void (**)(char *, char *, uint64_t))(v52 + 32))(&v42[v37], v59, v58);
  sub_2486F4F70(v57, (uint64_t)&v42[v38], &qword_25445ED28);
  v45 = v55;
  *(_QWORD *)&v42[v54] = v62;
  v46 = &v42[v51];
  v47 = v64;
  *(_QWORD *)v46 = v63;
  *((_QWORD *)v46 + 1) = v47;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(&v42[v39], v56, v45);
  *(float *)&v42[v53] = a3;
  *(float *)&v42[v40] = a4;
  *(float *)&v42[v41] = a5;
  *(float *)&v42[(v41 + 7) & 0xFFFFFFFFFFFFFFFCLL] = a6;
  v48 = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24872F8CC((uint64_t)sub_24874DF18, (uint64_t)v42, v66, v65);
  return swift_release();
}

uint64_t sub_24874188C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, float a9, float a10, float a11, float a12, uint64_t a13)
{
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v31 = a8;
  v28 = a6;
  v29 = a7;
  v30 = a1;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v27 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_2487B51D4();
  v25 = *(_QWORD *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v23, a13, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v23, 0, 1, v24);
  sub_248740294(a2, a3, a9, a10, a11, a12, a4, a5, v28, v29, v31, (uint64_t)v23);
  return sub_2486F5008((uint64_t)v23, &qword_25445ED38);
}

uint64_t sub_2487419D0(void *a1, uint64_t a2, uint64_t a3, double a4, float a5, float a6, float a7, float a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  void (*v26)(double);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  float *v45;
  float *v46;
  char *v47;
  uint64_t v48;
  id v49;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v61 = a12;
  v62 = a13;
  v59 = a3;
  v60 = a11;
  v58 = a2;
  v21 = sub_2487B5228();
  v22 = *(_QWORD *)(v21 - 8);
  v56 = v21;
  v23 = *(_QWORD *)(v22 + 64);
  v24 = MEMORY[0x24BDAC7A8](v21);
  v57 = (char *)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(void (**)(double))(v25 + 16);
  v27 = v25;
  v53 = v25;
  v26(v24);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(_QWORD *)(v29 + 64);
  MEMORY[0x24BDAC7A8](v28);
  v55 = (uint64_t)&v51 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2486F4E74(a10, v55, &qword_25445ED28);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(_QWORD *)(v32 + 64);
  MEMORY[0x24BDAC7A8](v31);
  v54 = (uint64_t)&v51 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2486F4E74(a14, v54, &qword_25445ED38);
  v34 = (*(unsigned __int8 *)(v27 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v35 = (v23 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (*(unsigned __int8 *)(v29 + 80) + v35 + 8) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v37 = (v30 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 11) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 11) & 0xFFFFFFFFFFFFFFF8;
  v52 = (v39 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (*(unsigned __int8 *)(v32 + 80) + v52 + 16) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v41 = (char *)swift_allocObject();
  v42 = v57;
  v43 = v58;
  *((_QWORD *)v41 + 2) = a1;
  *((_QWORD *)v41 + 3) = v43;
  *((_QWORD *)v41 + 4) = v59;
  (*(void (**)(char *, char *, uint64_t))(v53 + 32))(&v41[v34], v42, v56);
  *(double *)&v41[v35] = a4;
  sub_2486F4F70(v55, (uint64_t)&v41[v36], &qword_25445ED28);
  v44 = v61;
  *(_QWORD *)&v41[v37] = v60;
  v45 = (float *)&v41[v38];
  *v45 = a5;
  v45[1] = a6;
  v46 = (float *)&v41[v39];
  *v46 = a7;
  v46[1] = a8;
  v47 = &v41[v52];
  v48 = v62;
  *(_QWORD *)v47 = v44;
  *((_QWORD *)v47 + 1) = v48;
  sub_2486F4F70(v54, (uint64_t)&v41[v40], &qword_25445ED38);
  v49 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24872F8CC((uint64_t)sub_24874FA5C, (uint64_t)v41, (uint64_t)nullsub_1, 0);
  return swift_release();
}

void sub_248741C80(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  char v5;

  v1 = *(void **)(a1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore);
  if (v1)
  {
    v5 = 1;
    v2 = v1;
    v3 = sub_2487749A0(&v5);

    MEMORY[0x24BDAC7A8](v4);
    sub_2487B58A0();

  }
  else
  {
    __break(1u);
  }
}

void sub_248741DB4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, double a7, float a8, float a9, float a10, float a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  void *v26;
  void *v27;
  double v28;
  double v29;
  double v30;
  double v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;

  type metadata accessor for TTSVBLocalVoiceSampleMO();
  v26 = (void *)static TTSVBLocalVoiceSampleMO.requireSampleWithID(_:voiceID:moc:)(a1, a2, a3, a4);
  if (v14)
    return;
  v27 = v26;
  sub_24874E4F0(v26, a5, a7);
  if (a6 < -32768)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a6 >= 0x8000)
  {
LABEL_9:
    __break(1u);
    return;
  }
  objc_msgSend(v27, sel_setUserScore_, (__int16)a6);
  *(float *)&v28 = a8;
  objc_msgSend(v27, sel_setSpl_, v28);
  *(float *)&v29 = a9;
  objc_msgSend(v27, sel_setSplThreshold_, v29);
  *(float *)&v30 = a10;
  objc_msgSend(v27, sel_setSnr_, v30);
  *(float *)&v31 = a11;
  objc_msgSend(v27, sel_setSnrThreshold_, v31);
  v32 = (void *)sub_2487B5504();
  objc_msgSend(v27, sel_setUserPhrase_, v32);

  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
  MEMORY[0x24BDAC7A8](v33);
  v35 = (char *)&v39 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2486F4E74(a14, (uint64_t)v35, &qword_25445ED38);
  v36 = sub_2487B51D4();
  v37 = *(_QWORD *)(v36 - 8);
  v38 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36) != 1)
  {
    v38 = (void *)sub_2487B5174();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v35, v36);
  }
  objc_msgSend(v27, sel_setRecordingDate_, v38);

  NSManagedObjectContext.trySave()();
}

uint64_t sub_248742004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  _QWORD *v9;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  v8 = sub_2487B533C();
  v6[6] = v8;
  v6[7] = *(_QWORD *)(v8 - 8);
  v6[8] = swift_task_alloc();
  v9 = (_QWORD *)swift_task_alloc();
  v6[9] = v9;
  *v9 = v6;
  v9[1] = sub_248742084;
  return static TTSVBAudioTools.audioDurationForAudioFileSync(_:)(a4);
}

uint64_t sub_248742084(double a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 80) = v1;
  swift_task_dealloc();
  if (!v1)
    *(double *)(v4 + 88) = a1;
  return swift_task_switch();
}

uint64_t sub_2487420F8()
{
  uint64_t v0;

  (*(void (**)(double))(v0 + 32))(*(double *)(v0 + 88));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_248742138()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = sub_2487B0C04();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  v6 = sub_2487B50CC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v8, v1, v6);
  v9 = sub_2487B5324();
  v10 = sub_2487B57D4();
  if (os_log_type_enabled(v9, v10))
  {
    v20 = *(id *)(v0 + 80);
    v21 = *(_QWORD *)(v0 + 56);
    v22 = *(_QWORD *)(v0 + 48);
    v23 = *(_QWORD *)(v0 + 64);
    v11 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v24 = v19;
    *(_DWORD *)v11 = 136315138;
    sub_2486F4CA0(&qword_25777D190, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAB8], MEMORY[0x24BDCDB30]);
    v12 = sub_2487B5CCC();
    *(_QWORD *)(v0 + 16) = sub_2486EDE5C(v12, v13, &v24);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v6);
    _os_log_impl(&dword_2486E6000, v9, v10, "Unable to get audio duration for audio file %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v19, -1, -1);
    MEMORY[0x24959AF80](v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v22);
    v14 = swift_task_dealloc();
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 56);
    v15 = *(_QWORD *)(v0 + 64);
    v17 = *(_QWORD *)(v0 + 48);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v6);
    swift_task_dealloc();
    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  (*(void (**)(uint64_t, double))(v0 + 32))(v14, 0.0);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2487423A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_2487B56FC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_2487B56F0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_2486F5008(a1, &qword_25777D168);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2487B56E4();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t TTSVBVoiceBankingManager.updateVoiceName(voiceName:voiceID:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_248742500(a1, a2, a3, a4, a5, (uint64_t)&unk_2519928E8, (uint64_t)sub_24874E034);
}

uint64_t sub_248742500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  unint64_t v16;
  char *v17;
  id v18;
  uint64_t v20;
  uint64_t v21;

  v20 = a7;
  v21 = a5;
  v12 = sub_2487B5228();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = MEMORY[0x24BDAC7A8](v12);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))((char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v12, v15);
  v16 = (*(unsigned __int8 *)(v13 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v17 = (char *)swift_allocObject();
  *((_QWORD *)v17 + 2) = v7;
  *((_QWORD *)v17 + 3) = a1;
  *((_QWORD *)v17 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v17[v16], (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  v18 = v7;
  swift_bridgeObjectRetain();
  sub_24872F8CC(v20, (uint64_t)v17, a4, v21);
  return swift_release();
}

void sub_248742608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v7 = sub_2487B542C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (uint64_t *)((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)(v3 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue);
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v8 + 104))(v11, *MEMORY[0x24BEE5610], v7, v9);
  v13 = v12;
  LOBYTE(v12) = sub_2487B5444();
  (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);
  if ((v12 & 1) != 0)
  {
    v14 = *(void **)(v3 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore);
    if (v14)
    {
      v19 = 1;
      v15 = v14;
      v16 = sub_2487749A0(&v19);

      MEMORY[0x24BDAC7A8](v17);
      *(&v18 - 4) = (uint64_t)v16;
      *(&v18 - 3) = a1;
      *(&v18 - 2) = a2;
      *(&v18 - 1) = a3;
      sub_2487B58A0();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_24874276C(void *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[16];
  uint64_t v31;
  unint64_t v32;
  __int128 v33;
  char v34;
  uint64_t v35;

  v28 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v28);
  v9 = (uint8_t **)((char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_2487B533C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TTSVBLocalVoiceMO();
  v29 = a2;
  v31 = a2;
  v32 = a3;
  if (static DSO<>.count(in:configure:)((uint64_t)a1, (void (*)(void))sub_24874F6DC, (uint64_t)v30, v14, (uint64_t)&protocol witness table for TTSVBLocalVoiceMO) < 1)
  {
    v20 = v27;
    v21 = static TTSVBLocalVoiceMO.requireVoiceWithID(_:moc:)(a4, a1);
    if (!v20)
    {
      v22 = (void *)v21;
      v23 = (void *)sub_2487B5504();
      objc_msgSend(v22, sel_setName_, v23);

      NSManagedObjectContext.trySave()();
    }
  }
  else
  {
    v15 = sub_2487B0D54();
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v15, v10);
    swift_bridgeObjectRetain_n();
    v16 = sub_2487B5324();
    v17 = sub_2487B57BC();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      *(_QWORD *)&v33 = v27;
      *(_DWORD *)v18 = 136315138;
      v26 = v18 + 4;
      swift_bridgeObjectRetain();
      v35 = sub_2486EDE5C(v29, a3, (uint64_t *)&v33);
      sub_2487B593C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2486E6000, v16, v17, "Datastore already contains voice with name: %s. Bailing on create voice", v18, 0xCu);
      v19 = v27;
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v19, -1, -1);
      MEMORY[0x24959AF80](v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v33 = xmmword_2487BE5F0;
    v34 = 3;
    *v9 = v29;
    v9[1] = a3;
    swift_storeEnumTagMultiPayload();
    type metadata accessor for TTSVBError(0);
    sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
    swift_allocError();
    v25 = v24;
    swift_bridgeObjectRetain();
    TTSVBError.init(_:_:_:)((uint64_t)&v33, (uint64_t)v9, 0, v25);
    swift_willThrow();
  }
}

void sub_248742AAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  char v10;
  id v11;
  uint64_t v12;
  void *v13;
  _QWORD aBlock[6];

  v3 = sub_2487B542C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (_QWORD *)((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v4 + 104))(v7, *MEMORY[0x24BEE5610], v3, v5);
  v9 = v8;
  v10 = sub_2487B5444();
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v7, v3);
  if ((v10 & 1) != 0)
  {
    v11 = sub_24872C8D8();
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = sub_24874F250;
    *(_QWORD *)(v12 + 24) = a1;
    aBlock[4] = sub_24874F2D8;
    aBlock[5] = v12;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2487338D0;
    aBlock[3] = &block_descriptor_185;
    v13 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v11, sel_getAllTasksReplyOnQueue_statusHandler_, v9, v13);
    _Block_release(v13);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_248742C1C(unint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  id v18;
  void *v19;
  uint64_t i;
  id v21;
  void *v22;
  uint64_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  void (*v38)(char *);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1C8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2487B533C();
  v51 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v46 = (char *)&v45 - v13;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_2487B5B64();
    v14 = result;
  }
  else
  {
    v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
  }
  v48 = v6;
  v49 = v8;
  v47 = v9;
  v50 = v11;
  if (!v14)
  {
    swift_bridgeObjectRelease();
    v23 = MEMORY[0x24BEE4AF8];
    goto LABEL_20;
  }
  if (v14 >= 1)
  {
    v16 = 0;
    v17 = a1 & 0xC000000000000001;
    do
    {
      if (v17)
        v18 = (id)MEMORY[0x24959A434](v16, a1);
      else
        v18 = *(id *)(a1 + 8 * v16 + 32);
      v19 = v18;
      ++v16;
      v53 = (uint64_t)v18;
      sub_2487431D8((void **)&v53);

    }
    while (v14 != v16);
    swift_bridgeObjectRelease();
    v53 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    for (i = 0; i != v14; ++i)
    {
      if (v17)
        v21 = (id)MEMORY[0x24959A434](i, a1);
      else
        v21 = *(id *)(a1 + 8 * i + 32);
      v22 = v21;
      if (objc_msgSend(v21, sel_isUnfinishedOrPending))
      {
        sub_2487B5B04();
        sub_2487B5B28();
        sub_2487B5B34();
        sub_2487B5B10();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v23 = v53;
    v8 = v49;
    v9 = v47;
LABEL_20:
    v24 = v23 < 0 || (v23 & 0x4000000000000000) != 0;
    if (v24)
    {
      swift_retain();
      v37 = sub_2487B5B64();
      swift_release();
      if (v37)
        goto LABEL_25;
    }
    else if (*(_QWORD *)(v23 + 16))
    {
LABEL_25:
      v53 = 0;
      v54 = 0xE000000000000000;
      sub_2487B5AA4();
      sub_2487B55AC();
      v45 = a3;
      if (v24)
      {
        swift_bridgeObjectRetain();
        v25 = sub_2487B5B64();
        swift_release();
      }
      else
      {
        v25 = *(_QWORD *)(v23 + 16);
      }
      swift_release();
      v52 = v25;
      sub_2487B5CCC();
      sub_2487B55AC();
      swift_bridgeObjectRelease();
      sub_2487B55AC();
      v26 = v53;
      v27 = v54;
      v28 = sub_2487B0DFC();
      v29 = v50;
      v30 = v51;
      (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v50, v28, v9);
      swift_bridgeObjectRetain_n();
      v31 = sub_2487B5324();
      v32 = sub_2487B57D4();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc();
        v34 = v26;
        v35 = (void *)swift_slowAlloc();
        v53 = (uint64_t)v35;
        *(_DWORD *)v33 = 136315138;
        swift_bridgeObjectRetain();
        v52 = sub_2486EDE5C(v34, v27, &v53);
        v8 = v49;
        sub_2487B593C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_2486E6000, v31, v32, "%s", v33, 0xCu);
        swift_arrayDestroy();
        v36 = v35;
        v26 = v34;
        MEMORY[0x24959AF80](v36, -1, -1);
        MEMORY[0x24959AF80](v33, -1, -1);

        (*(void (**)(char *, uint64_t))(v30 + 8))(v50, v47);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v9);
      }
      TTSVBError.init(_:_:_:)(v26, v27, 0, 0, 0, (uint64_t)v8);
LABEL_37:
      swift_storeEnumTagMultiPayload();
      a2(v8);
      return sub_2486F5008((uint64_t)v8, &qword_25445F1C8);
    }
    v38 = a2;
    swift_release();
    v39 = sub_2487B0DFC();
    v40 = v51;
    v41 = v46;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v46, v39, v9);
    v42 = sub_2487B5324();
    v43 = sub_2487B57E0();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v44 = 0;
      _os_log_impl(&dword_2486E6000, v42, v43, "No pending training exist. Will proceed with new training request", v44, 2u);
      MEMORY[0x24959AF80](v44, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v9);
    a2 = v38;
    goto LABEL_37;
  }
  __break(1u);
  return result;
}

uint64_t sub_2487431D8(void **a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __CFString *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = sub_2487B533C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *a1;
  v7 = sub_2487B0DFC();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, v2);
  v8 = v6;
  v9 = sub_2487B5324();
  v10 = sub_2487B57E0();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v26 = v2;
    v12 = v11;
    v25 = swift_slowAlloc();
    v28 = v25;
    *(_DWORD *)v12 = 136315394;
    v13 = objc_msgSend(v8, sel_taskID);
    v14 = sub_2487B5528();
    v24 = v3;
    v16 = v15;

    v27 = sub_2486EDE5C(v14, v16, &v28);
    sub_2487B593C();

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    v17 = (id)TTSVBSiriTTSTrainerTaskStatusDescription((unint64_t)objc_msgSend(v8, sel_status));
    v18 = sub_2487B5528();
    v20 = v19;

    v27 = sub_2486EDE5C(v18, v20, &v28);
    sub_2487B593C();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2486E6000, v9, v10, "Existing task: %s - %s", (uint8_t *)v12, 0x16u);
    v21 = v25;
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v21, -1, -1);
    MEMORY[0x24959AF80](v12, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v5, v26);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t TTSVBVoiceBankingManager.train(voiceID:mode:startImmediately:validateTrainingSamples:overrideMinimumPhraseCount:completion:)(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  void (*v24)(_BYTE *, uint64_t, uint64_t, double);
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  double v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  void *v43;
  id v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  _BYTE v49[12];
  int v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(_BYTE *, uint64_t, uint64_t, double);
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  int v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t aBlock[7];

  v58 = a8;
  v56 = a7;
  v67 = a4;
  v69 = a3;
  v68 = a2;
  v11 = sub_2487B53D8();
  v63 = *(_QWORD *)(v11 - 8);
  v64 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v62 = &v49[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_2487B5408();
  v60 = *(_QWORD *)(v13 - 8);
  v61 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v59 = &v49[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_2487B533C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = &v49[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = sub_2487B0DFC();
  v54 = (_BYTE *)v16;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v16 + 16))(v18, v19, v15);
  v20 = sub_2487B5228();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  v23 = MEMORY[0x24BDAC7A8](v20);
  v24 = *(void (**)(_BYTE *, uint64_t, uint64_t, double))(v21 + 16);
  v55 = a1;
  v53 = v24;
  v24(&v49[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v20, v23);
  v25 = sub_2487B5324();
  v26 = sub_2487B57E0();
  v27 = v26;
  v28 = os_log_type_enabled(v25, v26);
  v66 = a6;
  v65 = a5;
  if (v28)
  {
    v29 = swift_slowAlloc();
    v52 = v15;
    v30 = v29;
    v51 = swift_slowAlloc();
    aBlock[0] = v51;
    *(_DWORD *)v30 = 136316162;
    v50 = v27;
    v31 = sub_2487B51EC();
    v70 = sub_2486EDE5C(v31, v32, aBlock);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v21 + 8))(&v49[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)], v20);
    *(_WORD *)(v30 + 12) = 2048;
    v70 = v68;
    sub_2487B593C();
    *(_WORD *)(v30 + 22) = 1024;
    LODWORD(v70) = v69 & 1;
    sub_2487B593C();
    *(_WORD *)(v30 + 28) = 1024;
    LODWORD(v70) = v67 & 1;
    sub_2487B593C();
    *(_WORD *)(v30 + 34) = 2048;
    v33 = v65;
    if ((v66 & 1) != 0)
      v33 = -1;
    v70 = v33;
    sub_2487B593C();
    _os_log_impl(&dword_2486E6000, v25, (os_log_type_t)v50, "Got request to train voiceID=%s mode=%ld startImmediately=%{BOOL}d validateTrainingSamples=%{BOOL}d overrideMinimumPhraseCount=%ld", (uint8_t *)v30, 0x2Cu);
    v34 = v51;
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v34, -1, -1);
    MEMORY[0x24959AF80](v30, -1, -1);

    v35 = (*((uint64_t (**)(_BYTE *, uint64_t))v54 + 1))(v18, v52);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v21 + 8))(&v49[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)], v20);

    v35 = (*((uint64_t (**)(_BYTE *, uint64_t))v54 + 1))(v18, v15);
  }
  v54 = v49;
  v36 = v57;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v53(&v49[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)], v55, v20, v37);
  v38 = (*(unsigned __int8 *)(v21 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = v36;
  *(_BYTE *)(v39 + 24) = v67 & 1;
  *(_QWORD *)(v39 + 32) = v65;
  *(_BYTE *)(v39 + 40) = v66 & 1;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v21 + 32))(v39 + v38, &v49[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)], v20);
  v40 = v39 + ((v38 + v22 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v40 = v68;
  *(_BYTE *)(v40 + 8) = v69 & 1;
  v41 = (_QWORD *)(v39 + ((v38 + v22 + 23) & 0xFFFFFFFFFFFFFFF8));
  v42 = v58;
  *v41 = v56;
  v41[1] = v42;
  aBlock[4] = (uint64_t)sub_24874E084;
  aBlock[5] = v39;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_2486F1008;
  aBlock[3] = (uint64_t)&block_descriptor_114;
  v43 = _Block_copy(aBlock);
  v44 = v36;
  swift_retain();
  v45 = v59;
  sub_2487B53E4();
  v70 = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
  sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
  v46 = v62;
  v47 = v64;
  sub_2487B59FC();
  MEMORY[0x24959A1AC](0, v45, v46, v43);
  _Block_release(v43);
  (*(void (**)(_BYTE *, uint64_t))(v63 + 8))(v46, v47);
  (*(void (**)(_BYTE *, uint64_t))(v60 + 8))(v45, v61);
  return swift_release();
}

uint64_t sub_248743A20(void *a1, char a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v29;

  v29 = a8;
  v28 = a7;
  v27 = a6;
  v26 = a4;
  v25 = a3;
  v12 = sub_2487B5228();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))(v16, a5, v12, v15);
  v17 = (*(unsigned __int8 *)(v13 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v18 = (v17 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v17 + v14 + 23) & 0xFFFFFFFFFFFFFFF8;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a1;
  *(_BYTE *)(v20 + 24) = a2;
  *(_QWORD *)(v20 + 32) = v25;
  *(_BYTE *)(v20 + 40) = v26 & 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v20 + v17, v16, v12);
  v21 = v20 + v18;
  *(_QWORD *)v21 = v27;
  *(_BYTE *)(v21 + 8) = v28;
  v22 = (_QWORD *)(v20 + v19);
  *v22 = v29;
  v22[1] = a9;
  a1;
  swift_retain();
  sub_248742AAC(v20);
  return swift_release();
}

uint64_t sub_248743B7C(uint64_t a1, char *a2, int a3, void (*a4)(char *, uint64_t), int a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  void *v61;
  uint64_t v62;
  id v63;
  uint64_t result;
  uint64_t v65;
  void *v66;
  char *v67;
  void *v68;
  id v69;
  id v70;
  id v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  void (*v81)(char *, uint64_t);
  int v82;
  void *v83;
  int v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t *v93;
  NSObject *v94;
  os_log_type_t v95;
  _BOOL4 v96;
  uint8_t *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  void (*v101)(char *, uint64_t);
  uint8_t *v102;
  uint64_t v103;
  void (*v104)(char *, uint64_t);
  void (*v105)(char *, uint64_t);
  __int128 v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  NSObject *v110;
  os_log_type_t v111;
  uint64_t v112;
  uint8_t *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  unint64_t v123;
  void (*v124)(_QWORD, _QWORD);
  uint64_t *v125;
  id v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  void *v130;
  id v131;
  char *v132;
  char *v133;
  uint64_t *v134;
  uint64_t v135;
  NSObject *v136;
  os_log_type_t v137;
  uint8_t *v138;
  void (*v139)(char *, uint64_t);
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  double v144;
  char *v145;
  void (*v146)(char *, char *, uint64_t, double);
  NSObject *v147;
  os_log_type_t v148;
  _BOOL4 v149;
  uint8_t *v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  id v159;
  unint64_t v160;
  id *v161;
  id v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  id v166;
  uint64_t v167;
  NSObject *v168;
  os_log_type_t v169;
  uint64_t v170;
  char *v171;
  int v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  NSObject *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  id v183;
  id v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  double v188;
  uint64_t v189;
  NSObject *v190;
  os_log_type_t v191;
  uint8_t *v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v196;
  uint8_t *v197;
  uint64_t v198;
  id v199;
  uint64_t v200;
  id v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  void (*v205)(uint64_t, uint64_t);
  uint64_t *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  double v211;
  unint64_t v212;
  uint64_t v213;
  char *v214;
  void (*v215)(char *, char *, uint64_t, double);
  uint64_t v216;
  double v217;
  char *v218;
  NSObject *v219;
  os_log_type_t v220;
  int v221;
  BOOL v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  uint64_t *v227;
  unint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  unint64_t v234;
  uint64_t v235;
  uint64_t v236;
  void (*v237)(char *, uint64_t);
  uint64_t v238;
  unint64_t v239;
  os_log_t v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  void (*v244)(char *, uint64_t);
  uint64_t v245;
  uint64_t v246;
  uint64_t *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  double v251;
  uint64_t v252;
  char *v253;
  uint64_t v254;
  char *v255;
  double v256;
  char *v257;
  void (*v258)(char *, char *, uint64_t, double);
  uint64_t v259;
  double v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  NSObject *v265;
  os_log_type_t v266;
  uint8_t *v267;
  uint64_t v268;
  uint64_t v269;
  unint64_t v270;
  char *v271;
  uint64_t v272;
  void *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  id v277;
  uint64_t v278;
  uint64_t v279;
  unint64_t v280;
  unint64_t v281;
  uint64_t v282;
  _QWORD *v283;
  uint64_t v284;
  void *v285;
  id v286;
  uint64_t *v287;
  uint64_t v288;
  void (*v289)(uint64_t, uint64_t);
  uint64_t v290;
  int v291;
  uint64_t v292;
  void (*v293)(char *, char *, uint64_t, double);
  id v294;
  uint64_t v295;
  void *v296;
  uint64_t v297;
  uint64_t *v298;
  uint64_t v299;
  int v300;
  char *v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  char *v306;
  id v307;
  char *v308;
  char *v309;
  char *v310;
  id *v311;
  char *v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t *v315;
  __int128 v316;
  uint64_t v317;
  void (*v318)(char *, uint64_t);
  id v319;
  char *v320;
  uint64_t v321;
  uint64_t v322;
  char *v323;
  uint64_t v324;
  void (*v325)(char *, uint64_t, uint64_t);
  uint64_t v326;
  uint64_t v327;
  char *v328;
  Class isa;
  os_log_t v330;
  char *v331;
  uint64_t v332;
  uint64_t *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t *v336;
  id v337;
  __int128 aBlock;
  void *v339;
  void *v340;
  void *v341;
  _QWORD *v342;
  int v343;
  int v344;

  v300 = a8;
  v321 = a7;
  v326 = a6;
  LODWORD(v319) = a5;
  v318 = a4;
  LODWORD(v325) = a3;
  v334 = a9;
  v335 = a10;
  v12 = sub_2487B53D8();
  v332 = *(_QWORD *)(v12 - 8);
  v333 = (uint64_t *)v12;
  MEMORY[0x24BDAC7A8](v12);
  v331 = (char *)&v292 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2487B5408();
  isa = v14[-1].isa;
  v330 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v328 = (char *)&v292 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v314 = type metadata accessor for TTSVBPath();
  MEMORY[0x24BDAC7A8](v314);
  v315 = (uint64_t *)((char *)&v292 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v322 = type metadata accessor for TTSVBVoiceModel();
  v303 = *(_QWORD *)(v322 - 8);
  MEMORY[0x24BDAC7A8](v322);
  v305 = (uint64_t)&v292 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v302 = (uint64_t)&v292 - v19;
  MEMORY[0x24BDAC7A8](v20);
  v299 = (uint64_t)&v292 - v21;
  MEMORY[0x24BDAC7A8](v22);
  v298 = (uint64_t *)((char *)&v292 - v23);
  MEMORY[0x24BDAC7A8](v24);
  v313 = (uint64_t)&v292 - v25;
  MEMORY[0x24BDAC7A8](v26);
  v311 = (id *)((char *)&v292 - v27);
  MEMORY[0x24BDAC7A8](v28);
  v320 = (char *)&v292 - v29;
  v304 = v30;
  MEMORY[0x24BDAC7A8](v31);
  v317 = (uint64_t)&v292 - v32;
  v324 = sub_2487B533C();
  v327 = *(_QWORD *)(v324 - 8);
  MEMORY[0x24BDAC7A8](v324);
  v301 = (char *)&v292 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34);
  v306 = (char *)&v292 - v35;
  MEMORY[0x24BDAC7A8](v36);
  v308 = (char *)&v292 - v37;
  MEMORY[0x24BDAC7A8](v38);
  v310 = (char *)&v292 - v39;
  MEMORY[0x24BDAC7A8](v40);
  v312 = (char *)&v292 - v41;
  MEMORY[0x24BDAC7A8](v42);
  *(_QWORD *)&v316 = (char *)&v292 - v43;
  MEMORY[0x24BDAC7A8](v44);
  v46 = (char *)&v292 - v45;
  MEMORY[0x24BDAC7A8](v47);
  v309 = (char *)&v292 - v48;
  MEMORY[0x24BDAC7A8](v49);
  v51 = (char *)&v292 - v50;
  MEMORY[0x24BDAC7A8](v52);
  v54 = (char *)&v292 - v53;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1C8);
  MEMORY[0x24BDAC7A8](v55);
  v57 = (char *)&v292 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v336 = 0;
  v58 = type metadata accessor for TTSVBError(0);
  MEMORY[0x24BDAC7A8](v58);
  v60 = (char *)&v292 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2486F4E74(a1, (uint64_t)v57, &qword_25445F1C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24870A2C4((uint64_t)v57, (uint64_t)v60, type metadata accessor for TTSVBError);
    sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
    v61 = (void *)swift_allocError();
    sub_248709554((uint64_t)v60, v62, type metadata accessor for TTSVBError);
    swift_willThrow();
    sub_2486EDA68((uint64_t)v60, type metadata accessor for TTSVBError);
LABEL_29:
    v128 = (_QWORD *)swift_allocObject();
    v129 = v335;
    v128[2] = v334;
    v128[3] = v129;
    v128[4] = v61;
    v341 = sub_2487510F0;
    v342 = v128;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v339 = sub_2486F1008;
    v340 = &block_descriptor_192;
    v130 = _Block_copy(&aBlock);
    swift_retain();
    v131 = v61;
    v132 = v328;
    sub_2487B53E4();
    v337 = (id)MEMORY[0x24BEE4AF8];
    sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
    sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
    v133 = v331;
    v134 = v333;
    sub_2487B59FC();
    MEMORY[0x24959A1AC](0, v132, v133, v130);
    _Block_release(v130);

    (*(void (**)(char *, uint64_t *))(v332 + 8))(v133, v134);
    (*((void (**)(char *, os_log_t))isa + 1))(v132, v330);
    return swift_release();
  }
  sub_2486F5008((uint64_t)v57, &qword_25445F1C8);
  v63 = TTSVBVoiceBankingManager.audioService.getter();
  result = (uint64_t)sub_248755198();
  v65 = OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore;
  v66 = *(void **)&a2[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore];
  if (!v66)
  {
    __break(1u);
LABEL_60:
    __break(1u);
    return result;
  }
  v67 = a2;
  v297 = *(unsigned __int8 *)result;
  v295 = *(unsigned __int8 *)(result + 1);
  v68 = *(void **)(result + 8);
  LOBYTE(aBlock) = 1;
  v296 = v68;
  v69 = v68;
  v70 = v66;
  v71 = sub_2487749A0(&aBlock);

  LODWORD(aBlock) = 0;
  sub_24874F2E0();
  sub_2487B5DD4();
  v307 = v63;
  v323 = v67;
  if ((v325 & 1) != 0)
  {
    v72 = v69;
    if ((v319 & 1) != 0)
      v318 = *(void (**)(char *, uint64_t))sub_248728F10();
    v73 = (uint64_t)v336;
    TTSVBVoiceBankingManager.recordedPhraseCount(forVoice:validDataOnly:)(v326, 1);
    v75 = v73;
    if (v73)
      goto LABEL_8;
    v103 = v74;
    if (v74 >= (uint64_t)v318)
    {
      v135 = sub_2487B0DFC();
      v77 = v324;
      v325 = *(void (**)(char *, uint64_t, uint64_t))(v327 + 16);
      v325(v51, v135, v324);
      v136 = sub_2487B5324();
      v137 = sub_2487B57E0();
      if (os_log_type_enabled(v136, v137))
      {
        v138 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v138 = 134217984;
        *(_QWORD *)&aBlock = *(_QWORD *)sub_248728F10();
        v77 = v324;
        sub_2487B593C();
        _os_log_impl(&dword_2486E6000, v136, v137, "validateTrainingSamples=true and validPhraseCount is greater than minimum required=%ld", v138, 0xCu);
        MEMORY[0x24959AF80](v138, -1, -1);
      }

      v139 = *(void (**)(char *, uint64_t))(v327 + 8);
      v139(v51, v77);
    }
    else
    {
      TTSVBVoiceBankingManager.recordedPhraseCount(forVoice:validDataOnly:)(v326, 0);
      v105 = v104;
      if ((uint64_t)v104 < (uint64_t)v318)
      {
        *(_QWORD *)&aBlock = 0;
        *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
        sub_2487B5AA4();
        sub_2487B55AC();
        v337 = v105;
        sub_2487B5CCC();
        sub_2487B55AC();
        swift_bridgeObjectRelease();
        sub_2487B55AC();
        v337 = *(id *)sub_248728F10();
        sub_2487B5CCC();
        sub_2487B55AC();
        swift_bridgeObjectRelease();
        v106 = aBlock;
        sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
        v75 = swift_allocError();
        TTSVBError.init(_:_:_:)(v106, *((uint64_t *)&v106 + 1), 0, 0, 0, v107);
        swift_willThrow();
LABEL_8:

LABEL_9:
        v61 = (void *)v75;
        goto LABEL_29;
      }
      v167 = sub_2487B0DFC();
      v325 = *(void (**)(char *, uint64_t, uint64_t))(v327 + 16);
      v325(v54, v167, v324);
      v168 = sub_2487B5324();
      v169 = sub_2487B57E0();
      if (os_log_type_enabled(v168, v169))
      {
        v170 = swift_slowAlloc();
        *(_DWORD *)v170 = 134218496;
        *(_QWORD *)&aBlock = v103;
        sub_2487B593C();
        *(_WORD *)(v170 + 12) = 2048;
        *(_QWORD *)&aBlock = v318;
        sub_2487B593C();
        *(_WORD *)(v170 + 22) = 2048;
        *(_QWORD *)&aBlock = v105;
        sub_2487B593C();
        _os_log_impl(&dword_2486E6000, v168, v169, "validPhraseCount=%ld is less than the ideal minimum=%ld, will continue to train with unfilteredPhraseCount=%ld", (uint8_t *)v170, 0x20u);
        MEMORY[0x24959AF80](v170, -1, -1);
      }

      v171 = v54;
      v77 = v324;
      v139 = *(void (**)(char *, uint64_t))(v327 + 8);
      v139(v171, v324);
      v172 = *(_DWORD *)sub_248728DA8();
      LODWORD(aBlock) = v172;
      v343 = v344;
      sub_24871B998();
      sub_2487B59C0();
      sub_248728DCC();
      if ((sub_2487B54D4() & 1) == 0)
      {
        v343 = v172;
        sub_2487B59D8();
      }
    }
    v140 = v326;
    TTSVBVoiceBankingManager.durationOfRecordingData(forVoice:validDataOnly:)(v326, 0);
    v157 = v156;
    TTSVBVoiceBankingManager.durationOfRecordingData(forVoice:validDataOnly:)(v140, 1);
    v336 = 0;
    v69 = v72;
    v173 = v158;
    v174 = sub_2487B0DFC();
    v175 = v309;
    v325(v309, v174, v77);
    v176 = sub_2487B5324();
    v177 = sub_2487B57E0();
    if (os_log_type_enabled(v176, (os_log_type_t)v177))
    {
      v178 = swift_slowAlloc();
      *(_DWORD *)v178 = 134218240;
      *(_QWORD *)&aBlock = v157;
      sub_2487B593C();
      *(_WORD *)(v178 + 12) = 2048;
      *(_QWORD *)&aBlock = v173;
      sub_2487B593C();
      _os_log_impl(&dword_2486E6000, v176, (os_log_type_t)v177, "Unfiltered training duration=%f | Valid recording duration=%f", (uint8_t *)v178, 0x16u);
      MEMORY[0x24959AF80](v178, -1, -1);
    }

    v179 = v175;
    v81 = v139;
    result = ((uint64_t (*)(char *, uint64_t))v139)(v179, v77);
  }
  else
  {
    v76 = sub_2487B0DFC();
    v77 = v324;
    v325 = *(void (**)(char *, uint64_t, uint64_t))(v327 + 16);
    v325(v46, v76, v324);
    v78 = sub_2487B5324();
    v79 = sub_2487B57E0();
    if (os_log_type_enabled(v78, v79))
    {
      v80 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v80 = 0;
      _os_log_impl(&dword_2486E6000, v78, v79, "validateTrainingSamples=false. Will train with all available data", v80, 2u);
      MEMORY[0x24959AF80](v80, -1, -1);
    }

    v81 = *(void (**)(char *, uint64_t))(v327 + 8);
    v81(v46, v77);
    v82 = *(_DWORD *)sub_248728D90();
    LODWORD(aBlock) = v82;
    v343 = v344;
    sub_24871B998();
    sub_2487B59C0();
    sub_248728DCC();
    result = sub_2487B54D4();
    if ((result & 1) == 0)
    {
      v343 = v82;
      result = sub_2487B59D8();
    }
  }
  v83 = *(void **)&v323[v65];
  if (!v83)
    goto LABEL_60;
  v84 = v344;
  LOBYTE(aBlock) = 1;
  v85 = v83;
  v86 = sub_2487749A0(&aBlock);

  MEMORY[0x24BDAC7A8](v87);
  *(&v292 - 6) = v326;
  *(&v292 - 5) = (uint64_t)v86;
  *(&v292 - 4) = 1;
  *((_BYTE *)&v292 - 24) = 0;
  v290 = v321;
  v291 = v84;
  v88 = (uint64_t)v320;
  v89 = (uint64_t)v336;
  sub_2487B58A0();
  v336 = (uint64_t *)v89;
  if (v89)
  {

LABEL_28:
    v61 = v336;
    goto LABEL_29;
  }
  v319 = v69;

  v90 = v317;
  sub_24870A2C4(v88, v317, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
  v91 = sub_2487B0DFC();
  v92 = (char *)v316;
  v326 = v91;
  ((void (*)(_QWORD))v325)(v316);
  v93 = (uint64_t *)v311;
  sub_248709554(v90, (uint64_t)v311, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
  v94 = sub_2487B5324();
  v95 = sub_2487B57E0();
  v96 = os_log_type_enabled(v94, v95);
  v294 = v71;
  v318 = v81;
  if (v96)
  {
    v97 = (uint8_t *)swift_slowAlloc();
    v98 = swift_slowAlloc();
    *(_QWORD *)&aBlock = v98;
    *(_DWORD *)v97 = 136315138;
    v99 = *v93;
    v100 = v93[1];
    swift_bridgeObjectRetain();
    v337 = (id)sub_2486EDE5C(v99, v100, (uint64_t *)&aBlock);
    v77 = v324;
    v90 = v317;
    sub_2487B593C();
    v101 = v318;
    swift_bridgeObjectRelease();
    sub_2486EDA68((uint64_t)v93, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
    _os_log_impl(&dword_2486E6000, v94, v95, "Training new model for '%s'", v97, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v98, -1, -1);
    v102 = v97;
    v81 = v101;
    MEMORY[0x24959AF80](v102, -1, -1);

    v101((char *)v316, v77);
  }
  else
  {
    sub_2486EDA68((uint64_t)v93, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);

    v81(v92, v77);
  }
  v108 = v312;
  v325(v312, v326, v77);
  v109 = v313;
  sub_248709554(v90, v313, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
  v110 = sub_2487B5324();
  v111 = sub_2487B57E0();
  if (os_log_type_enabled(v110, v111))
  {
    v112 = v109;
    v113 = (uint8_t *)swift_slowAlloc();
    v114 = v108;
    v115 = swift_slowAlloc();
    *(_QWORD *)&aBlock = v115;
    *(_DWORD *)v113 = 136315138;
    v116 = sub_2487B51EC();
    v337 = (id)sub_2486EDE5C(v116, v117, (uint64_t *)&aBlock);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    sub_2486EDA68(v112, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
    _os_log_impl(&dword_2486E6000, v110, v111, "Created model instance %s", v113, 0xCu);
    swift_arrayDestroy();
    v90 = v317;
    MEMORY[0x24959AF80](v115, -1, -1);
    MEMORY[0x24959AF80](v113, -1, -1);

    v118 = v114;
    v119 = v324;
  }
  else
  {
    sub_2486EDA68(v109, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);

    v118 = v108;
    v119 = v77;
  }
  v81(v118, v119);
  v120 = sub_2487B50CC();
  v320 = (char *)&v292;
  v121 = *(_QWORD *)(v120 - 8);
  v122 = *(char **)(v121 + 64);
  MEMORY[0x24BDAC7A8](v120);
  v123 = (unint64_t)(v122 + 15) & 0xFFFFFFFFFFFFFFF0;
  v124 = (void (*)(_QWORD, _QWORD))v315;
  sub_248709554(v90, (uint64_t)v315, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
  swift_storeEnumTagMultiPayload();
  TTSVBPath.url.getter((uint64_t)&v292 - v123);
  sub_2486EDA68((uint64_t)v124, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBPath);
  v125 = sub_24876D91C();
  v337 = (id)*v125;
  v316 = xmmword_2487BE640;
  aBlock = xmmword_2487BE640;
  LOBYTE(v339) = 3;
  v126 = v337;
  v127 = (uint64_t)v336;
  _TTSVBFileManager.createDirectoryIfNeeded(_:deleteAndRecreateIfExists:problem:)((uint64_t)&v292 - v123, 1, (uint64_t)&aBlock);
  v336 = (uint64_t *)v127;
  if (v127)
  {

    (*(void (**)(char *, uint64_t))(v121 + 8))((char *)&v292 - v123, v120);
    sub_2486EDA68(v90, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
    goto LABEL_28;
  }
  v311 = (id *)v125;

  v141 = v310;
  v142 = v324;
  v143 = ((uint64_t (*)(char *, uint64_t, uint64_t))v325)(v310, v326, v324);
  v309 = (char *)&v292;
  v144 = MEMORY[0x24BDAC7A8](v143);
  v145 = (char *)&v292 - v123;
  v146 = *(void (**)(char *, char *, uint64_t, double))(v121 + 16);
  v314 = (uint64_t)&v292 - v123;
  v293 = v146;
  v146((char *)&v292 - v123, (char *)&v292 - v123, v120, v144);
  v147 = sub_2487B5324();
  v148 = sub_2487B57E0();
  v149 = os_log_type_enabled(v147, v148);
  v313 = v120;
  v312 = v122;
  v292 = v121;
  if (v149)
  {
    v150 = (uint8_t *)swift_slowAlloc();
    v151 = swift_slowAlloc();
    *(_QWORD *)&aBlock = v151;
    *(_DWORD *)v150 = 136315138;
    v152 = sub_2487B50B4();
    v337 = (id)sub_2486EDE5C(v152, v153, (uint64_t *)&aBlock);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    v315 = *(uint64_t **)(v121 + 8);
    ((void (*)(char *, uint64_t))v315)(v145, v120);
    _os_log_impl(&dword_2486E6000, v147, v148, "Using staging directory: %s", v150, 0xCu);
    swift_arrayDestroy();
    v154 = v151;
    v122 = v312;
    MEMORY[0x24959AF80](v154, -1, -1);
    MEMORY[0x24959AF80](v150, -1, -1);

    v155 = ((uint64_t (*)(char *, uint64_t))v318)(v310, v324);
  }
  else
  {
    v315 = *(uint64_t **)(v121 + 8);
    ((void (*)(char *, uint64_t))v315)(v145, v120);

    v155 = ((uint64_t (*)(char *, uint64_t))v318)(v141, v142);
  }
  v159 = v319;
  MEMORY[0x24BDAC7A8](v155);
  v160 = (unint64_t)(v122 + 15) & 0xFFFFFFFFFFFFFFF0;
  v161 = v311;
  v337 = *v311;
  aBlock = 0uLL;
  LOBYTE(v339) = -1;
  v162 = v337;
  v163 = v314;
  v164 = (uint64_t)v336;
  _TTSVBFileManager.getOrCreateDirectory(in:named:problem:)(v314, 7103853, 0xE300000000000000, (uint64_t)&aBlock, (uint64_t)&v292 - v160);
  if (v164)
  {

    ((void (*)(uint64_t, uint64_t))v315)(v163, v313);
    sub_2486EDA68(v317, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
    v61 = (void *)v164;
    goto LABEL_29;
  }

  v165 = ((uint64_t (*)(char *, uint64_t))v315)((char *)&v292 - v160, v313);
  MEMORY[0x24BDAC7A8](v165);
  v337 = *v161;
  aBlock = 0uLL;
  LOBYTE(v339) = -1;
  v166 = v337;
  _TTSVBFileManager.getOrCreateDirectory(in:named:problem:)(v163, 0x5F65636E656C6973, 0xEF64656D6D697274, (uint64_t)&aBlock, (uint64_t)&v292 - v160);

  v180 = ((uint64_t (*)(char *, uint64_t))v315)((char *)&v292 - v160, v313);
  MEMORY[0x24BDAC7A8](v180);
  v182 = (v181 + 15) & 0xFFFFFFFFFFFFFFF0;
  TTSVBVoiceModel.url.getter((uint64_t)&v292 - v182);
  v337 = *v161;
  aBlock = v316;
  LOBYTE(v339) = 3;
  v183 = v337;
  _TTSVBFileManager.createDirectoryIfNeeded(_:deleteAndRecreateIfExists:problem:)((uint64_t)&v292 - v182, 1, (uint64_t)&aBlock);
  v336 = 0;
  v184 = v307;
  *(_QWORD *)&v316 = &v292;

  v185 = v308;
  v186 = v324;
  v187 = ((uint64_t (*)(char *, uint64_t, uint64_t))v325)(v308, v326, v324);
  v311 = (id *)&v292;
  v188 = MEMORY[0x24BDAC7A8](v187);
  v310 = (char *)&v292 - v182;
  v189 = v313;
  v293((char *)&v292 - v182, (char *)&v292 - v182, v313, v188);
  v190 = sub_2487B5324();
  v191 = sub_2487B57E0();
  if (os_log_type_enabled(v190, v191))
  {
    v192 = (uint8_t *)swift_slowAlloc();
    v193 = swift_slowAlloc();
    *(_QWORD *)&aBlock = v193;
    *(_DWORD *)v192 = 136315138;
    v194 = sub_2487B50B4();
    v337 = (id)sub_2486EDE5C(v194, v195, (uint64_t *)&aBlock);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v315)((char *)&v292 - v182, v189);
    _os_log_impl(&dword_2486E6000, v190, v191, "Using voice directory: %s", v192, 0xCu);
    swift_arrayDestroy();
    v196 = v193;
    v184 = v307;
    MEMORY[0x24959AF80](v196, -1, -1);
    v197 = v192;
    v186 = v324;
    MEMORY[0x24959AF80](v197, -1, -1);
  }
  else
  {
    ((void (*)(char *, uint64_t))v315)((char *)&v292 - v182, v189);
  }

  v318(v185, v186);
  v198 = v317;
  LODWORD(v337) = v344;
  *(_QWORD *)&aBlock = v297 | (v295 << 8);
  *((_QWORD *)&aBlock + 1) = v296;
  v199 = v319;
  v200 = v314;
  v201 = v294;
  v202 = (uint64_t)v336;
  sub_24874DA28();
  v203 = v310;
  if (v202)
  {
    v75 = v202;

    v204 = v313;
    v205 = (void (*)(uint64_t, uint64_t))v315;
    ((void (*)(char *, uint64_t))v315)(v203, v313);
    v205(v200, v204);
    sub_2486EDA68(v198, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
    goto LABEL_9;
  }

  v325(v306, v326, v186);
  v206 = v298;
  sub_248709554(v198, (uint64_t)v298, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
  v207 = v198;
  v208 = v299;
  v209 = sub_248709554(v207, v299, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
  v336 = &v292;
  v210 = v312;
  v211 = MEMORY[0x24BDAC7A8](v209);
  v212 = (unint64_t)(v210 + 15) & 0xFFFFFFFFFFFFFFF0;
  v332 = (uint64_t)&v292 - v212;
  v213 = v313;
  v214 = v203;
  v215 = v293;
  v216 = ((uint64_t (*)(double))v293)(v211);
  v333 = &v292;
  v217 = MEMORY[0x24BDAC7A8](v216);
  v218 = (char *)&v292 - v212;
  v215((char *)&v292 - v212, v214, v213, v217);
  v219 = sub_2487B5324();
  v220 = sub_2487B57E0();
  v221 = v220;
  v222 = os_log_type_enabled(v219, v220);
  v319 = v199;
  if (v222)
  {
    v223 = swift_slowAlloc();
    v331 = (char *)swift_slowAlloc();
    *(_QWORD *)&aBlock = v331;
    *(_DWORD *)v223 = 136315906;
    LODWORD(isa) = v221;
    v224 = v208;
    v330 = v219;
    v225 = *v206;
    v226 = v206[1];
    swift_bridgeObjectRetain();
    v337 = (id)sub_2486EDE5C(v225, v226, (uint64_t *)&aBlock);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    sub_2486EDA68((uint64_t)v206, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
    *(_WORD *)(v223 + 12) = 2080;
    v227 = (uint64_t *)(v224 + *(int *)(v322 + 56));
    v229 = *v227;
    v228 = v227[1];
    swift_bridgeObjectRetain();
    v230 = v229;
    v231 = v322;
    v337 = (id)sub_2486EDE5C(v230, v228, (uint64_t *)&aBlock);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    sub_2486EDA68(v224, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
    *(_WORD *)(v223 + 22) = 2080;
    v232 = v332;
    v233 = sub_2487B50B4();
    v337 = (id)sub_2486EDE5C(v233, v234, (uint64_t *)&aBlock);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    v235 = v232;
    v236 = v313;
    v237 = (void (*)(char *, uint64_t))v315;
    ((void (*)(uint64_t, uint64_t))v315)(v235, v313);
    *(_WORD *)(v223 + 32) = 2080;
    v238 = sub_2487B50B4();
    v337 = (id)sub_2486EDE5C(v238, v239, (uint64_t *)&aBlock);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    v237(v218, v236);
    v240 = v330;
    _os_log_impl(&dword_2486E6000, v330, (os_log_type_t)isa, "Train '%s' - locale=%s: Initialize trainer:\n         Data Path: %s\n       Output Path: %s", (uint8_t *)v223, 0x2Au);
    v241 = v331;
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v241, -1, -1);
    MEMORY[0x24959AF80](v223, -1, -1);

    v318 = *(void (**)(char *, uint64_t))(v327 + 8);
    v318(v306, v324);
    v242 = v236;
  }
  else
  {
    sub_2486EDA68((uint64_t)v206, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
    sub_2486EDA68(v208, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
    v243 = v313;
    v244 = (void (*)(char *, uint64_t))v315;
    ((void (*)(uint64_t, uint64_t))v315)(v332, v313);
    v244(v218, v243);

    v318(v306, v324);
    v242 = v243;
    v231 = v322;
  }
  v245 = v317;
  v336 = (uint64_t *)sub_2487B51EC();
  v332 = v246;
  v247 = (uint64_t *)(v245 + *(int *)(v231 + 56));
  v248 = *v247;
  v249 = v247[1];
  v250 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28);
  v333 = &v292;
  v251 = MEMORY[0x24BDAC7A8](v250);
  v253 = (char *)&v292 - ((v252 + 15) & 0xFFFFFFFFFFFFFFF0);
  v254 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, double))(v292 + 56))(v253, 1, 1, v242, v251);
  v331 = (char *)&v292;
  v255 = v312;
  v256 = MEMORY[0x24BDAC7A8](v254);
  v257 = (char *)&v292 - ((unint64_t)(v255 + 15) & 0xFFFFFFFFFFFFFFF0);
  v258 = v293;
  v259 = ((uint64_t (*)(char *, uint64_t, uint64_t, double))v293)(v257, v314, v242, v256);
  v260 = MEMORY[0x24BDAC7A8](v259);
  v258(v257, v310, v242, v260);
  objc_allocWithZone((Class)TTSVBSiriTTSTrainerTask);
  swift_bridgeObjectRetain();
  v336 = (uint64_t *)sub_24874B628((uint64_t)v336, v332, v248, v249, (uint64_t)v253, (uint64_t)v257, (uint64_t)v257, v321, v300 & 1);
  v261 = v301;
  v262 = v324;
  v325(v301, v326, v324);
  v263 = v245;
  v264 = v302;
  sub_248709554(v263, v302, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
  v265 = sub_2487B5324();
  v266 = sub_2487B57E0();
  if (os_log_type_enabled(v265, v266))
  {
    v267 = (uint8_t *)swift_slowAlloc();
    v268 = swift_slowAlloc();
    *(_QWORD *)&aBlock = v268;
    *(_DWORD *)v267 = 136315138;
    sub_2487B5228();
    sub_2486F4CA0(&qword_25777D0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA50], MEMORY[0x24BDCEAC0]);
    v269 = sub_2487B5CCC();
    v337 = (id)sub_2486EDE5C(v269, v270, (uint64_t *)&aBlock);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    sub_2486EDA68(v264, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
    _os_log_impl(&dword_2486E6000, v265, v266, "Will request training task: %s", v267, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v268, -1, -1);
    MEMORY[0x24959AF80](v267, -1, -1);

    v271 = v261;
    v272 = v324;
  }
  else
  {
    sub_2486EDA68(v264, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);

    v271 = v261;
    v272 = v262;
  }
  v318(v271, v272);
  v273 = v323;
  v274 = v334;
  v275 = v304;
  v276 = v303;
  v277 = sub_24872C8D8();
  v278 = v317;
  v279 = v305;
  sub_248709554(v317, v305, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
  v280 = (*(unsigned __int8 *)(v276 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v276 + 80);
  v281 = (v275 + v280 + 7) & 0xFFFFFFFFFFFFFFF8;
  v282 = swift_allocObject();
  sub_24870A2C4(v279, v282 + v280, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
  *(_QWORD *)(v282 + v281) = v273;
  v283 = (_QWORD *)(v282 + ((v281 + 15) & 0xFFFFFFFFFFFFFFF8));
  v284 = v335;
  *v283 = v274;
  v283[1] = v284;
  v341 = sub_24874F508;
  v342 = (_QWORD *)v282;
  *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v339 = sub_248746A3C;
  v340 = &block_descriptor_198;
  v285 = _Block_copy(&aBlock);
  v286 = v273;
  swift_retain();
  swift_release();
  v287 = v336;
  objc_msgSend(v277, sel_startTraining_replyOnQueue_trainingStartedHandler_, v336, 0, v285);

  _Block_release(v285);
  v288 = v313;
  v289 = (void (*)(uint64_t, uint64_t))v315;
  ((void (*)(char *, uint64_t))v315)(v310, v313);
  v289(v314, v288);
  return sub_2486EDA68(v278, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
}

uint64_t sub_248745FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char *v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 aBlock;
  uint64_t (*v88)(uint64_t);
  void *v89;
  uint64_t (*v90)();
  uint64_t v91;

  v76 = a4;
  v77 = a5;
  v74 = (char *)a2;
  v75 = a3;
  v83 = sub_2487B53D8();
  v81 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v80 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_2487B5408();
  v79 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82);
  v78 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for TTSVBError(0);
  v72 = *(_QWORD *)(v71 - 8);
  v10 = *(_QWORD *)(v72 + 64);
  MEMORY[0x24BDAC7A8](v71);
  v73 = (uint64_t)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v67 - v12;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v67 - v15;
  v17 = type metadata accessor for TTSVBVoiceModel();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v67 - v21;
  v23 = sub_2487B533C();
  v84 = *(_QWORD *)(v23 - 8);
  v85 = v23;
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v67 - v28;
  if (v27)
  {
    aBlock = xmmword_2487BE650;
    LOBYTE(v88) = 3;
    v30 = v27;
    swift_storeEnumTagMultiPayload();
    v31 = v30;
    v70 = v30;
    v32 = sub_2487B4F58();
    TTSVBError.init(_:_:_:)((uint64_t)&aBlock, (uint64_t)v9, v32, (uint64_t)v16);
    v33 = sub_2487B0DFC();
    (*(void (**)(char *, uint64_t, uint64_t))(v84 + 16))(v25, v33, v85);
    sub_248709554((uint64_t)v74, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
    sub_248709554((uint64_t)v16, (uint64_t)v13, type metadata accessor for TTSVBError);
    v34 = sub_2487B5324();
    v35 = sub_2487B57D4();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = swift_slowAlloc();
      v74 = v16;
      v37 = v36;
      v68 = (_QWORD *)swift_slowAlloc();
      v69 = swift_slowAlloc();
      *(_QWORD *)&aBlock = v69;
      *(_DWORD *)v37 = 136315394;
      sub_2487B5228();
      sub_2486F4CA0(&qword_25777D0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA50], MEMORY[0x24BDCEAC0]);
      v38 = sub_2487B5CCC();
      v86 = sub_2486EDE5C(v38, v39, (uint64_t *)&aBlock);
      sub_2487B593C();
      swift_bridgeObjectRelease();
      sub_2486EDA68((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
      *(_WORD *)(v37 + 12) = 2112;
      sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
      swift_allocError();
      sub_248709554((uint64_t)v13, v40, type metadata accessor for TTSVBError);
      v41 = _swift_stdlib_bridgeErrorToNSError();
      v86 = v41;
      sub_2487B593C();
      v42 = v68;
      *v68 = v41;
      sub_2486EDA68((uint64_t)v13, type metadata accessor for TTSVBError);
      _os_log_impl(&dword_2486E6000, v34, v35, "Error occurred requesting training task: %s. %@", (uint8_t *)v37, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25445F350);
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v42, -1, -1);
      v43 = v69;
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v43, -1, -1);
      v44 = v37;
      v16 = v74;
      MEMORY[0x24959AF80](v44, -1, -1);
    }
    else
    {
      sub_2486EDA68((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
      sub_2486EDA68((uint64_t)v13, type metadata accessor for TTSVBError);
    }

    (*(void (**)(char *, uint64_t))(v84 + 8))(v25, v85);
    v52 = v73;
    sub_248709554((uint64_t)v16, v73, type metadata accessor for TTSVBError);
    v53 = (*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
    v54 = swift_allocObject();
    v55 = v77;
    *(_QWORD *)(v54 + 16) = v76;
    *(_QWORD *)(v54 + 24) = v55;
    sub_24870A2C4(v52, v54 + v53, type metadata accessor for TTSVBError);
    v90 = sub_24874F6AC;
    v91 = v54;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v88 = sub_2486F1008;
    v89 = &block_descriptor_210;
    v56 = _Block_copy(&aBlock);
    swift_retain();
    v57 = v78;
    sub_2487B53E4();
    v86 = MEMORY[0x24BEE4AF8];
    sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
    sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
    v58 = v80;
    v59 = v83;
    sub_2487B59FC();
    MEMORY[0x24959A1AC](0, v57, v58, v56);

    _Block_release(v56);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v58, v59);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v57, v82);
    sub_2486EDA68((uint64_t)v16, type metadata accessor for TTSVBError);
  }
  else
  {
    v45 = sub_2487B0DFC();
    (*(void (**)(char *, uint64_t, uint64_t))(v84 + 16))(v29, v45, v85);
    sub_248709554((uint64_t)v74, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
    v46 = sub_2487B5324();
    v47 = sub_2487B57E0();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      v49 = swift_slowAlloc();
      *(_QWORD *)&aBlock = v49;
      *(_DWORD *)v48 = 136315138;
      sub_2487B5228();
      sub_2486F4CA0(&qword_25777D0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA50], MEMORY[0x24BDCEAC0]);
      v50 = sub_2487B5CCC();
      v86 = sub_2486EDE5C(v50, v51, (uint64_t *)&aBlock);
      sub_2487B593C();
      swift_bridgeObjectRelease();
      sub_2486EDA68((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
      _os_log_impl(&dword_2486E6000, v46, v47, "Successfully requested training task: %s", v48, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v49, -1, -1);
      MEMORY[0x24959AF80](v48, -1, -1);
    }
    else
    {
      sub_2486EDA68((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
    }

    (*(void (**)(char *, uint64_t))(v84 + 8))(v29, v85);
    v60 = swift_allocObject();
    v61 = v77;
    *(_QWORD *)(v60 + 16) = v76;
    *(_QWORD *)(v60 + 24) = v61;
    v90 = sub_248750F0C;
    v91 = v60;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v88 = sub_2486F1008;
    v89 = &block_descriptor_204;
    v62 = _Block_copy(&aBlock);
    swift_retain();
    v63 = v78;
    sub_2487B53E4();
    v86 = MEMORY[0x24BEE4AF8];
    sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
    sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
    v64 = v80;
    v65 = v83;
    sub_2487B59FC();
    MEMORY[0x24959A1AC](0, v63, v64, v62);
    _Block_release(v62);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v64, v65);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v63, v82);
  }
  return swift_release();
}

uint64_t sub_24874698C(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1C8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_248709554(a3, (uint64_t)v7, type metadata accessor for TTSVBError);
  swift_storeEnumTagMultiPayload();
  a1(v7);
  return sub_2486F5008((uint64_t)v7, &qword_25445F1C8);
}

void sub_248746A3C(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(id, void *);
  id v6;
  id v7;

  v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(v7, a3);
  swift_release();

}

uint64_t TTSVBVoiceBankingManager.discardTrainingTasks(_:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  void *v15;
  char *v16;
  _QWORD v18[2];
  _QWORD aBlock[6];

  v5 = sub_2487B53D8();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2487B5408();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(_QWORD *)&v2[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue];
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v2;
  v14[3] = a1;
  v14[4] = a2;
  aBlock[4] = sub_24874E100;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F1008;
  aBlock[3] = &block_descriptor_120;
  v15 = _Block_copy(aBlock);
  v16 = v2;
  swift_retain();
  sub_2487B53E4();
  v18[1] = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F670, v6, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
  sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
  sub_2487B59FC();
  MEMORY[0x24959A1AC](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t TTSVBVoiceBankingManager.cancelTrainingTask(taskID:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  void *v17;
  char *v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v9 = sub_2487B53D8();
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2487B5408();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(_QWORD *)&v4[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue];
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v4;
  v16[3] = a1;
  v16[4] = a2;
  v16[5] = a3;
  v16[6] = a4;
  aBlock[4] = sub_24874E230;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F1008;
  aBlock[3] = &block_descriptor_126;
  v17 = _Block_copy(aBlock);
  v18 = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2487B53E4();
  v22 = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
  sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
  sub_2487B59FC();
  MEMORY[0x24959A1AC](0, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

uint64_t sub_248746EC8(void *a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  _QWORD v12[2];
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1C8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v7 = a1;
    sub_2486F8E48((uint64_t)&v14);
    v8 = v14;
    v9 = v15;
    v10 = v16;
    v12[0] = v14;
    v12[1] = v15;
    v13 = v16;
    static TTSVBError.map(_:_:)(a1, (uint64_t)v12, (uint64_t)v6);
    sub_2486F507C(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
    a2(v6);

  }
  else
  {
    swift_storeEnumTagMultiPayload();
    a2(v6);
  }
  return sub_2486F5008((uint64_t)v6, &qword_25445F1C8);
}

uint64_t TTSVBVoiceBankingManager.performVoiceDatastoreMigrationV1IfNeeded(completion:)(uint64_t a1, uint64_t a2)
{
  return sub_2487475A0(a1, a2, (uint64_t)&unk_251992A00, (uint64_t)sub_24874E35C);
}

uint64_t sub_248746FEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;
  void *v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_2487B533C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2487B542C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (_QWORD *)((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = TTSVBProcessIsVoicebankingd();
  if (!(_DWORD)result)
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = *(void **)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue);
  *v9 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5610], v6);
  v12 = v11;
  LOBYTE(v11) = sub_2487B5444();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v11 & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v13 = sub_2487B0D54();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v13, v2);
  v14 = sub_2487B5324();
  v15 = sub_2487B57E0();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_2486E6000, v14, v15, "Will import voices from cloud store to local store", v16, 2u);
    MEMORY[0x24959AF80](v16, -1, -1);
  }

  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v17 = *(void **)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore);
  if (!v17)
    goto LABEL_11;
  LOBYTE(aBlock[0]) = 1;
  v18 = v17;
  v19 = sub_2487749A0(aBlock);

  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v19;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_24874E4B8;
  *(_QWORD *)(v21 + 24) = v20;
  aBlock[4] = sub_24874E4D0;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2487490FC;
  aBlock[3] = &block_descriptor_154;
  v22 = _Block_copy(aBlock);
  v23 = v19;
  swift_retain();
  swift_release();
  objc_msgSend(v23, sel_performBlockAndWait_, v22);

  _Block_release(v22);
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v23 & 1) != 0)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
  }
  return result;
}

uint64_t sub_2487472BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;
  void *v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_2487B533C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2487B542C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (_QWORD *)((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = TTSVBProcessIsVoicebankingd();
  if (!(_DWORD)result)
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = *(void **)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_operationQueue);
  *v9 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5610], v6);
  v12 = v11;
  LOBYTE(v11) = sub_2487B5444();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v11 & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v13 = sub_2487B0D54();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v13, v2);
  v14 = sub_2487B5324();
  v15 = sub_2487B57E0();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_2486E6000, v14, v15, "Will update download status for local models", v16, 2u);
    MEMORY[0x24959AF80](v16, -1, -1);
  }

  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v17 = *(void **)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore);
  if (!v17)
    goto LABEL_11;
  LOBYTE(aBlock[0]) = 1;
  v18 = v17;
  v19 = sub_2487749A0(aBlock);

  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v19;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_24874F188;
  *(_QWORD *)(v21 + 24) = v20;
  aBlock[4] = sub_248750F08;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2487490FC;
  aBlock[3] = &block_descriptor_164_0;
  v22 = _Block_copy(aBlock);
  v23 = v19;
  swift_retain();
  swift_release();
  objc_msgSend(v23, sel_performBlockAndWait_, v22);

  _Block_release(v22);
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v23 & 1) != 0)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
  }
  return result;
}

uint64_t TTSVBVoiceBankingManager.importCloudVoicesIntoLocalDatastore(completion:)(uint64_t a1, uint64_t a2)
{
  return sub_2487475A0(a1, a2, (uint64_t)&unk_251992A28, (uint64_t)sub_24874E398);
}

uint64_t sub_2487475A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t result;
  uint64_t v9;
  id v10;

  result = TTSVBProcessIsVoicebankingd();
  if ((_DWORD)result)
  {
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v4;
    v10 = v4;
    sub_24872F8CC(a4, v9, a1, a2);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24874761C(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  __int128 v31;
  uint64_t v32;
  id v33;
  void *v34;
  BOOL v35;
  unint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  NSObject *v39;
  os_log_type_t v40;
  _BOOL4 v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;
  BOOL v57;
  uint64_t v58;
  id v59;
  NSObject *v60;
  os_log_type_t v61;
  _BOOL4 v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char *v67;
  id v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  id v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t (*v80)(void);
  _QWORD *v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  objc_class *ObjCClassFromMetadata;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  NSObject *v93;
  os_log_type_t v94;
  uint8_t *v95;
  void *v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  objc_class *v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  NSObject *v113;
  os_log_type_t v114;
  BOOL v115;
  uint8_t *v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  unint64_t v127;
  int64_t v128;
  void *v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  char *v137;
  void (*v138)(_QWORD);
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  char *v143;
  NSObject *v144;
  os_log_type_t v145;
  _BOOL4 v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  void (*v150)(char *, uint64_t);
  uint64_t v151;
  char *v152;
  uint64_t v153;
  void *v154;
  id v155;
  id v156;
  NSObject *v157;
  os_log_type_t v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  void *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  char *v170;
  id v171;
  void *v172;
  void *v173;
  id v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD v177[2];
  unint64_t v178;
  uint64_t v179;
  __int128 v180;
  char *v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  unint64_t v192;
  unint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  unint64_t v197;
  _QWORD *v198;
  uint64_t v199;
  char *v200;
  id v201;
  unint64_t v202;
  char *v203;
  char *v204;
  void (*v205)(uint64_t, uint64_t);
  char *v206;
  void *v207;
  __int128 v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  _QWORD *v213;
  int64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  void (*v218)(char *, uint64_t, uint64_t);
  void (*v219)(char *, uint64_t);
  uint64_t v220;
  char *v221;
  uint64_t v222;
  id v223;
  Class v224;
  unint64_t v225;
  uint64_t v226;
  id v227;
  id v228;
  uint64_t v229;
  char v230;
  unint64_t v231;
  uint64_t v232;
  _QWORD v233[5];

  v185 = type metadata accessor for _TTSVBFileManager.TTSVBRelativePath(0);
  v184 = *(_QWORD *)(v185 - 8);
  MEMORY[0x24BDAC7A8](v185);
  v183 = (char *)v177 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_25445EDE8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (uint64_t)v177 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2487B533C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v204 = (char *)v177 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v203 = (char *)v177 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v195 = (char *)v177 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v194 = (char *)v177 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v187 = (char *)v177 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (uint64_t)v177 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)v177 - v21;
  v23 = type metadata accessor for TTSVBLocalVoiceMO();
  v24 = sub_248787BD4(v23, (uint64_t)&protocol witness table for TTSVBLocalVoiceMO);
  v196 = v23;
  v26 = static DSO<>.fetch(in:config:)((uint64_t)a1, (void (*)(id))v24, v25, v23, (uint64_t)&protocol witness table for TTSVBLocalVoiceMO);
  swift_release();
  v197 = v26;
  if (v26 >> 62)
    goto LABEL_104;
  v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v27)
  {
LABEL_3:
    v190 = v27;
    v28 = type metadata accessor for TTSVBCloudVoiceMO();
    v29 = v197;
    v199 = v28;
    v30 = 0;
    v207 = 0;
    v193 = v197 & 0xC000000000000001;
    v179 = v197 & 0xFFFFFFFFFFFFFF8;
    v178 = v197 + 32;
    v177[1] = v233;
    v181 = &v230;
    *(_QWORD *)&v31 = 136315138;
    v208 = v31;
    v182 = MEMORY[0x24BEE4AD8] + 8;
    *(_QWORD *)&v31 = 134217984;
    v180 = v31;
    v209 = MEMORY[0x24BEE4AD0] + 8;
    v206 = (char *)v5;
    v192 = v7;
    v186 = v20;
    v191 = v22;
    v200 = a1;
    v216 = v6;
    while (1)
    {
      if (v193)
      {
        v33 = (id)MEMORY[0x24959A434](v30, v29);
      }
      else
      {
        if (v30 >= *(_QWORD *)(v179 + 16))
          goto LABEL_103;
        v33 = *(id *)(v178 + 8 * v30);
      }
      v34 = v33;
      v35 = __OFADD__(v30, 1);
      v36 = v30 + 1;
      if (v35)
        goto LABEL_102;
      v37 = sub_2487B0D54();
      v38 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
      v217 = v37;
      v218 = v38;
      ((void (*)(char *))v38)(v22);
      v5 = v34;
      v39 = sub_2487B5324();
      v40 = sub_2487B57E0();
      v41 = os_log_type_enabled(v39, v40);
      v202 = v36;
      if (v41)
      {
        v42 = swift_slowAlloc();
        v43 = v22;
        v44 = swift_slowAlloc();
        v229 = v44;
        *(_DWORD *)v42 = v208;
        v45 = TTSVBCommonVoiceMO.displayName.getter(v196, (uint64_t)&protocol witness table for TTSVBLocalVoiceMO);
        *(_QWORD *)(v42 + 4) = sub_2486EDE5C(v45, v46, &v229);

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2486E6000, v39, v40, "Considering local voice: %s", (uint8_t *)v42, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24959AF80](v44, -1, -1);
        MEMORY[0x24959AF80](v42, -1, -1);

        v47 = *(void (**)(char *, uint64_t))(v7 + 8);
        v48 = v43;
      }
      else
      {

        v47 = *(void (**)(char *, uint64_t))(v7 + 8);
        v48 = v22;
      }
      v219 = v47;
      v47(v48, v6);
      v49 = objc_msgSend((id)v5, sel_voiceID);
      v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED40);
      MEMORY[0x24BDAC7A8](v50);
      v52 = (char *)v177 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (!v49)
        break;
      v53 = sub_2487B5228();
      v54 = *(_QWORD *)(v53 - 8);
      MEMORY[0x24BDAC7A8](v53);
      v20 = (uint64_t)v177 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_2487B5210();

      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v52, v20, v53);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v52, 0, 1, v53);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53);
      if ((_DWORD)result == 1)
        goto LABEL_107;
      v57 = static TTSVBCloudVoiceMO.voiceExists(withID:moc:)((uint64_t)v52, a1);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v52, v53);
      v6 = v216;
      if (!v57)
      {
        v67 = v187;
        v218(v187, v217, v216);
        v68 = (id)v5;
        v69 = sub_2487B5324();
        v70 = sub_2487B57E0();
        if (os_log_type_enabled(v69, v70))
        {
          v71 = (uint8_t *)swift_slowAlloc();
          v20 = swift_slowAlloc();
          v229 = v20;
          *(_DWORD *)v71 = v208;
          v72 = TTSVBCommonVoiceMO.displayName.getter(v196, (uint64_t)&protocol witness table for TTSVBLocalVoiceMO);
          v232 = sub_2486EDE5C(v72, v73, &v229);
          sub_2487B593C();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_2486E6000, v69, v70, "Making new cloud voice for local voice: %s", v71, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24959AF80](v20, -1, -1);
          MEMORY[0x24959AF80](v71, -1, -1);

          v219(v187, v216);
        }
        else
        {

          v219(v67, v6);
        }
        v74 = v199;
        v75 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, a1);
        v76 = v68;
        v201 = v75;
        sub_2486F53AC((uint64_t)v76, (uint64_t)&protocol witness table for TTSVBLocalVoiceMO, v74, (uint64_t)&protocol witness table for TTSVBCloudVoiceMO);

        v77 = MEMORY[0x24BEE4B08];
        v78 = MEMORY[0x24BEE4B08];
        v79 = MEMORY[0x24BEE4AF8];
        if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0)
        {
          if (sub_2487B5B64())
            sub_24874EE24(v79, &qword_25777D1E8, (void (*)(_QWORD))type metadata accessor for TTSVBCloudVoiceSampleMO);
          else
            v78 = v77;
        }
        v232 = v78;
        v80 = *(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v76) + 0x58);
        v198 = v76;
        v81 = (_QWORD *)v80();
        v82 = v81[2];
        v227 = v81;
        if (v82)
        {
          v83 = v81;
          v84 = type metadata accessor for TTSVBCloudVoiceSampleMO();
          ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
          v86 = v83 + 5;
          a1 = v200;
          do
          {
            v88 = *(v86 - 1);
            v87 = *v86;
            v89 = objc_allocWithZone(ObjCClassFromMetadata);
            swift_unknownObjectRetain();
            v90 = objc_msgSend(v89, sel_initWithContext_, a1);
            v91 = sub_2486F4CA0(&qword_25777C9E8, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBCloudVoiceSampleMO, (uint64_t)&protocol conformance descriptor for TTSVBCloudVoiceSampleMO);
            TTSVBCommonVoiceSampleMO.shallowUpdate(fromSample:)(v88, v87, v84, v91);
            swift_beginAccess();
            v20 = (uint64_t)v90;
            sub_24874C7E4(&v231, (void *)v20, (void (*)(_QWORD))type metadata accessor for TTSVBCloudVoiceSampleMO, &qword_25777D1E8);
            swift_endAccess();

            swift_unknownObjectRelease();
            v86 += 2;
            --v82;
          }
          while (v82);
        }
        swift_bridgeObjectRelease();
        v92 = v216;
        v218(v194, v217, v216);
        v93 = sub_2487B5324();
        v94 = sub_2487B57E0();
        if (os_log_type_enabled(v93, v94))
        {
          v95 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v95 = v180;
          swift_beginAccess();
          if ((v232 & 0xC000000000000001) != 0)
          {
            swift_bridgeObjectRetain();
            v20 = sub_2487B5A2C();
            swift_bridgeObjectRelease();
          }
          else
          {
            v20 = *(_QWORD *)(v232 + 16);
          }
          v229 = v20;
          sub_2487B593C();
          _os_log_impl(&dword_2486E6000, v93, v94, "Adding %ld samples to cloud voice", v95, 0xCu);
          MEMORY[0x24959AF80](v95, -1, -1);
        }

        v219(v194, v92);
        swift_beginAccess();
        type metadata accessor for TTSVBCloudVoiceSampleMO();
        sub_2486F4CA0(&qword_25777D1D8, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBCloudVoiceSampleMO, MEMORY[0x24BEE5BD8]);
        swift_bridgeObjectRetain();
        v96 = (void *)sub_2487B5738();
        swift_bridgeObjectRelease();
        objc_msgSend(v201, sel_addSamples_, v96);

        v97 = MEMORY[0x24BEE4B08];
        v98 = MEMORY[0x24BEE4B08];
        v99 = MEMORY[0x24BEE4AF8];
        v100 = v198;
        if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0)
        {
          if (sub_2487B5B64())
            sub_24874EE24(v99, &qword_25777D1F0, (void (*)(_QWORD))type metadata accessor for TTSVBCloudVoiceModelMO);
          else
            v98 = v97;
        }
        v231 = v98;
        v101 = (_QWORD *)(*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v100) + 0x60))();
        v102 = v101[2];
        v227 = v101;
        if (v102)
        {
          v103 = v101;
          v104 = type metadata accessor for TTSVBCloudVoiceModelMO();
          v105 = (objc_class *)swift_getObjCClassFromMetadata();
          v106 = v103 + 5;
          a1 = v200;
          do
          {
            v108 = *(v106 - 1);
            v107 = *v106;
            v109 = objc_allocWithZone(v105);
            swift_unknownObjectRetain();
            v110 = objc_msgSend(v109, sel_initWithContext_, a1);
            v111 = sub_2486F4CA0(&qword_25777C9D0, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBCloudVoiceModelMO, (uint64_t)&protocol conformance descriptor for TTSVBCloudVoiceModelMO);
            TTSVBCommonVoiceModelMO.shallowUpdate(fromModel:)(v108, v107, v104, v111);
            swift_beginAccess();
            v20 = (uint64_t)v110;
            sub_24874C7E4(&v228, (void *)v20, (void (*)(_QWORD))type metadata accessor for TTSVBCloudVoiceModelMO, &qword_25777D1F0);
            swift_endAccess();

            swift_unknownObjectRelease();
            v106 += 2;
            --v102;
          }
          while (v102);
        }
        swift_bridgeObjectRelease();
        v112 = v216;
        v218(v195, v217, v216);
        v113 = sub_2487B5324();
        v114 = sub_2487B57E0();
        v115 = os_log_type_enabled(v113, v114);
        v22 = v206;
        if (v115)
        {
          v116 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v116 = v180;
          swift_beginAccess();
          if ((v231 & 0xC000000000000001) != 0)
          {
            swift_bridgeObjectRetain();
            v20 = sub_2487B5A2C();
            swift_bridgeObjectRelease();
          }
          else
          {
            v20 = *(_QWORD *)(v231 + 16);
          }
          v229 = v20;
          sub_2487B593C();
          _os_log_impl(&dword_2486E6000, v113, v114, "Adding %ld models to cloud voice", v116, 0xCu);
          MEMORY[0x24959AF80](v116, -1, -1);
        }

        v219(v195, v112);
        swift_beginAccess();
        v5 = v231;
        v117 = type metadata accessor for TTSVBCloudVoiceModelMO();
        sub_2486F4CA0(&qword_25777D1E0, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBCloudVoiceModelMO, MEMORY[0x24BEE5BD8]);
        swift_bridgeObjectRetain();
        v118 = (void *)sub_2487B5738();
        swift_bridgeObjectRelease();
        objc_msgSend(v201, sel_addModels_, v118);

        v210 = v117;
        if ((v5 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          sub_2487B5A20();
          sub_2487B575C();
          v5 = v233[0];
          v215 = v233[1];
          v119 = v233[2];
          v6 = v233[3];
          v7 = v233[4];
        }
        else
        {
          v120 = -1 << *(_BYTE *)(v5 + 32);
          v121 = *(_QWORD *)(v5 + 56);
          v215 = v5 + 56;
          v122 = ~v120;
          v123 = -v120;
          if (v123 < 64)
            v124 = ~(-1 << v123);
          else
            v124 = -1;
          v7 = v124 & v121;
          swift_bridgeObjectRetain();
          v119 = v122;
          v6 = 0;
        }
        v125 = v207;
        v211 = v5 & 0x7FFFFFFFFFFFFFFFLL;
        v189 = v119;
        v214 = (unint64_t)(v119 + 64) >> 6;
        v220 = v5;
        while (2)
        {
          if (v5 < 0)
          {
            v129 = (void *)sub_2487B5A44();
            if (!v129
              || (v228 = v129,
                  swift_unknownObjectRetain(),
                  swift_dynamicCast(),
                  v20 = v229,
                  swift_unknownObjectRelease(),
                  v128 = v6,
                  v126 = v7,
                  !v20))
            {
LABEL_92:
              v207 = v125;
              goto LABEL_94;
            }
          }
          else
          {
            if (v7)
            {
              v126 = (v7 - 1) & v7;
              v127 = __clz(__rbit64(v7)) | (v6 << 6);
              v128 = v6;
            }
            else
            {
              v128 = v6 + 1;
              if (__OFADD__(v6, 1))
              {
                __break(1u);
LABEL_102:
                __break(1u);
LABEL_103:
                __break(1u);
LABEL_104:
                swift_bridgeObjectRetain();
                v27 = sub_2487B5B64();
                swift_bridgeObjectRelease();
                if (!v27)
                  goto LABEL_100;
                goto LABEL_3;
              }
              if (v128 >= v214)
                goto LABEL_93;
              v130 = *(_QWORD *)(v215 + 8 * v128);
              if (!v130)
              {
                v131 = v6 + 2;
                if (v6 + 2 >= v214)
                  goto LABEL_93;
                v130 = *(_QWORD *)(v215 + 8 * v131);
                if (v130)
                  goto LABEL_67;
                v131 = v6 + 3;
                if (v6 + 3 >= v214)
                  goto LABEL_93;
                v130 = *(_QWORD *)(v215 + 8 * v131);
                if (v130)
                {
LABEL_67:
                  v128 = v131;
                }
                else
                {
                  v128 = v6 + 4;
                  if (v6 + 4 >= v214)
                  {
LABEL_93:
                    v207 = v125;
LABEL_94:
                    v30 = v202;
LABEL_95:
                    sub_248750938();

                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    a1 = v200;
                    v6 = v216;
                    v7 = v192;
                    v22 = v191;
                    goto LABEL_6;
                  }
                  v130 = *(_QWORD *)(v215 + 8 * v128);
                  if (!v130)
                  {
                    v207 = v125;
                    v175 = v6 + 5;
                    v30 = v202;
                    while (v214 != v175)
                    {
                      v130 = *(_QWORD *)(v215 + 8 * v175++);
                      if (v130)
                      {
                        v128 = v175 - 1;
                        v125 = v207;
                        goto LABEL_68;
                      }
                    }
                    goto LABEL_95;
                  }
                }
              }
LABEL_68:
              v126 = (v130 - 1) & v130;
              v127 = __clz(__rbit64(v130)) + (v128 << 6);
            }
            v20 = (uint64_t)*(id *)(*(_QWORD *)(v5 + 48) + 8 * v127);
            if (!v20)
              goto LABEL_92;
          }
          v225 = v126;
          v226 = v128;
          v132 = sub_2487B50CC();
          v133 = *(_QWORD *)(v132 - 8);
          a1 = *(char **)(v133 + 64);
          MEMORY[0x24BDAC7A8](v132);
          v221 = (char *)v177 - ((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF0);
          v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28);
          v135 = (_QWORD *)v20;
          v20 = (uint64_t)v177;
          MEMORY[0x24BDAC7A8](v134);
          v137 = (char *)v177 - ((v136 + 15) & 0xFFFFFFFFFFFFFFF0);
          v138 = *(void (**)(_QWORD))((*MEMORY[0x24BEE4EA0] & *v135) + 0x60);
          v227 = v135;
          v138(0);
          v139 = type metadata accessor for TTSVBVoiceModel();
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v139 - 8) + 48))(v22, 1, v139) == 1)
          {
            sub_2486F5008((uint64_t)v22, qword_25445EDE8);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v133 + 56))(v137, 1, 1, v132);
          }
          else
          {
            TTSVBVoiceModel.url.getter((uint64_t)v137);
            sub_2486EDA68((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v133 + 56))(v137, 0, 1, v132);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48))(v137, 1, v132) != 1)
            {
              v213 = v177;
              v140 = (uint64_t)v221;
              (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v221, v137, v132);
              v141 = v203;
              v20 = v216;
              v142 = ((uint64_t (*)(char *, uint64_t, uint64_t))v218)(v203, v217, v216);
              v224 = (Class)v177;
              MEMORY[0x24BDAC7A8](v142);
              v143 = (char *)v177 - ((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF0);
              (*(void (**)(char *, uint64_t, uint64_t))(v133 + 16))(v143, v140, v132);
              v144 = sub_2487B5324();
              v145 = sub_2487B57E0();
              v146 = os_log_type_enabled(v144, v145);
              v212 = v132;
              if (v146)
              {
                v147 = swift_slowAlloc();
                a1 = (char *)swift_slowAlloc();
                v229 = (uint64_t)a1;
                *(_DWORD *)v147 = v208;
                v148 = sub_2487B50B4();
                *(_QWORD *)(v147 + 4) = sub_2486EDE5C(v148, v149, &v229);
                swift_bridgeObjectRelease();
                v150 = *(void (**)(char *, uint64_t))(v133 + 8);
                v150(v143, v132);
                _os_log_impl(&dword_2486E6000, v144, v145, "Creating file futures for model at %s", (uint8_t *)v147, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x24959AF80](a1, -1, -1);
                v151 = v147;
                v20 = v216;
                MEMORY[0x24959AF80](v151, -1, -1);
              }
              else
              {
                v150 = *(void (**)(char *, uint64_t))(v133 + 8);
                v150((char *)v177 - ((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF0), v132);
              }

              v219(v141, v20);
              v152 = v204;
              v229 = *sub_24876D91C();
              v153 = _TTSVBFileManager.getRelativePathsForFilesInTree(_:)((uint64_t)v221);
              v154 = v125;
              if (v125)
              {
                v218(v152, v217, v20);
                v155 = v125;
                v156 = v125;
                v157 = sub_2487B5324();
                v158 = sub_2487B57D4();
                if (os_log_type_enabled(v157, v158))
                {
                  v159 = swift_slowAlloc();
                  v160 = swift_slowAlloc();
                  v229 = v160;
                  *(_DWORD *)v159 = v208;
                  v161 = (void *)sub_2487B4F58();
                  v205 = (void (*)(uint64_t, uint64_t))v150;
                  v162 = v161;
                  v163 = v20;
                  v20 = (uint64_t)objc_msgSend(v161, sel_description);

                  v164 = sub_2487B5528();
                  a1 = v165;

                  *(_QWORD *)(v159 + 4) = sub_2486EDE5C(v164, (unint64_t)a1, &v229);
                  swift_bridgeObjectRelease();

                  _os_log_impl(&dword_2486E6000, v157, v158, "cannot make file future: %s", (uint8_t *)v159, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x24959AF80](v160, -1, -1);
                  MEMORY[0x24959AF80](v159, -1, -1);

                  v219(v152, v163);
                  v205((uint64_t)v221, v212);
                }
                else
                {

                  v219(v152, v20);
                  v150(v221, v212);
                }
                v125 = 0;
                v6 = v226;
                v7 = v225;
                v22 = v206;
              }
              else
              {
                v166 = v153;
                v207 = 0;
                a1 = *(char **)(v153 + 16);
                if (a1)
                {
                  v205 = (void (*)(uint64_t, uint64_t))v150;
                  type metadata accessor for TTSVBCloudVoiceModelFileMO();
                  v224 = (Class)swift_getObjCClassFromMetadata();
                  v167 = (uint64_t)v183;
                  v223 = (id)objc_opt_self();
                  v168 = (*(unsigned __int8 *)(v184 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v184 + 80);
                  v188 = v166;
                  v169 = v166 + v168;
                  v222 = *(_QWORD *)(v184 + 72);
                  v170 = v200;
                  v171 = v227;
                  do
                  {
                    sub_248709554(v169, v167, type metadata accessor for _TTSVBFileManager.TTSVBRelativePath);
                    v20 = (uint64_t)objc_msgSend(objc_allocWithZone(v224), sel_initWithContext_, v170);
                    swift_bridgeObjectRetain();
                    v172 = (void *)sub_2487B5504();
                    swift_bridgeObjectRelease();
                    objc_msgSend((id)v20, sel_setRelativePath_, v172);

                    objc_msgSend((id)v20, sel_setModel_, v171);
                    v173 = (void *)sub_2487B503C();
                    v174 = objc_msgSend(v223, sel_createFutureForFileAtURL_, v173);

                    objc_msgSend((id)v20, sel_setFileFuture_, v174);
                    swift_unknownObjectRelease();
                    sub_2486EDA68(v167, type metadata accessor for _TTSVBFileManager.TTSVBRelativePath);
                    v169 += v222;
                    --a1;
                  }
                  while (a1);
                  swift_bridgeObjectRelease();
                  v150 = (void (*)(char *, uint64_t))v205;
                }
                else
                {
                  swift_bridgeObjectRelease();
                }

                v150(v221, v212);
                v6 = v226;
                v7 = v225;
                v22 = v206;
                v125 = v207;
              }
              goto LABEL_53;
            }
          }

          sub_2486F5008((uint64_t)v137, &qword_25445ED28);
          v6 = v226;
          v7 = v225;
LABEL_53:
          v5 = v220;
          continue;
        }
      }
      v58 = v186;
      v218((char *)v186, v217, v216);
      v59 = (id)v5;
      v60 = sub_2487B5324();
      v61 = sub_2487B57E0();
      v20 = v61;
      v62 = os_log_type_enabled(v60, v61);
      v63 = v202;
      if (v62)
      {
        v5 = swift_slowAlloc();
        v64 = swift_slowAlloc();
        v229 = v64;
        *(_DWORD *)v5 = v208;
        v65 = TTSVBCommonVoiceMO.displayName.getter(v196, (uint64_t)&protocol witness table for TTSVBLocalVoiceMO);
        *(_QWORD *)(v5 + 4) = sub_2486EDE5C(v65, v66, &v229);

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2486E6000, v60, (os_log_type_t)v20, "Cloud voice exists for local voice: %s. Continuing", (uint8_t *)v5, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24959AF80](v64, -1, -1);
        MEMORY[0x24959AF80](v5, -1, -1);

        v32 = v186;
      }
      else
      {

        v32 = v58;
      }
      v219((char *)v32, v6);
      v7 = v192;
      v22 = v191;
      v30 = v63;
LABEL_6:
      v29 = v197;
      if (v30 == v190)
        goto LABEL_100;
    }
    v176 = sub_2487B5228();
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v176 - 8) + 56))(v52, 1, 1, v176);
LABEL_107:
    __break(1u);
  }
  else
  {
LABEL_100:
    swift_bridgeObjectRelease();
    return NSManagedObjectContext.saveOrRollback()();
  }
  return result;
}

uint64_t sub_2487490FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_24874911C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)();
  uint64_t v13;
  unint64_t ObjCClassFromMetadata;
  uint64_t v15;
  unint64_t v16;
  __int128 v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  BOOL v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t result;
  BOOL v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  id v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t (*v56)(void);
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  id v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  void *v71;
  unint64_t v72;
  unint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  id v81;
  uint64_t v82;
  id v83;
  NSObject *v84;
  os_log_type_t v85;
  BOOL v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  unint64_t v90;
  uint64_t v91;
  __int128 v92;
  __int128 v93;
  char *v94;
  char *v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  void (*v104)(char *, uint64_t);
  _QWORD *v105;
  id v106;
  uint64_t v107;
  void (*v108)(char *, uint64_t, uint64_t);
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  id v114;
  uint64_t v115;
  char v116;
  unint64_t v117;
  uint64_t v118;
  char v119;

  v2 = sub_2487B533C();
  v111 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v102 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v101 = (char *)&v88 - v5;
  MEMORY[0x24BDAC7A8](v6);
  v98 = (char *)&v88 - v7;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v88 - v9;
  v11 = type metadata accessor for TTSVBCloudVoiceMO();
  v12 = sub_248787BD4(v11, (uint64_t)&protocol witness table for TTSVBCloudVoiceMO);
  v96 = v11;
  ObjCClassFromMetadata = static DSO<>.fetch(in:config:)((uint64_t)a1, (void (*)(id))v12, v13, v11, (uint64_t)&protocol witness table for TTSVBCloudVoiceMO);
  swift_release();
  if (!(ObjCClassFromMetadata >> 62))
  {
    v15 = *(_QWORD *)((ObjCClassFromMetadata & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v15)
      goto LABEL_3;
LABEL_50:
    swift_bridgeObjectRelease();
    return NSManagedObjectContext.saveOrRollback()();
  }
LABEL_49:
  swift_bridgeObjectRetain();
  v15 = sub_2487B5B64();
  swift_bridgeObjectRelease();
  if (!v15)
    goto LABEL_50;
LABEL_3:
  v109 = type metadata accessor for TTSVBLocalVoiceMO();
  v16 = 0;
  v100 = ObjCClassFromMetadata & 0xC000000000000001;
  v91 = ObjCClassFromMetadata & 0xFFFFFFFFFFFFFF8;
  v97 = ObjCClassFromMetadata;
  v90 = ObjCClassFromMetadata + 32;
  v89 = &v119;
  v94 = &v116;
  *(_QWORD *)&v17 = 136315138;
  v93 = v17;
  v88 = MEMORY[0x24BEE4AD8] + 8;
  *(_QWORD *)&v17 = 134217984;
  v92 = v17;
  v112 = v2;
  v95 = v10;
  v99 = v15;
  v113 = a1;
  while (1)
  {
    if (v100)
    {
      v21 = (id)MEMORY[0x24959A434](v16, v97);
    }
    else
    {
      if (v16 >= *(_QWORD *)(v91 + 16))
        goto LABEL_48;
      v21 = *(id *)(v90 + 8 * v16);
    }
    v22 = v21;
    v23 = __OFADD__(v16, 1);
    v24 = v16 + 1;
    if (v23)
    {
      __break(1u);
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    v110 = v24;
    v25 = objc_msgSend(v21, sel_voiceID, v88, v89);
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED40);
    MEMORY[0x24BDAC7A8](v26);
    v28 = (char *)&v88 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (!v25)
      break;
    ObjCClassFromMetadata = sub_2487B5228();
    v29 = *(_QWORD *)(ObjCClassFromMetadata - 8);
    MEMORY[0x24BDAC7A8](ObjCClassFromMetadata);
    v31 = (char *)&v88 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2487B5210();

    (*(void (**)(char *, char *, unint64_t))(v29 + 32))(v28, v31, ObjCClassFromMetadata);
    (*(void (**)(char *, _QWORD, uint64_t, unint64_t))(v29 + 56))(v28, 0, 1, ObjCClassFromMetadata);
    result = (*(uint64_t (**)(char *, uint64_t, unint64_t))(v29 + 48))(v28, 1, ObjCClassFromMetadata);
    if ((_DWORD)result == 1)
      goto LABEL_52;
    v33 = static TTSVBLocalVoiceMO.voiceExists(withID:moc:)((uint64_t)v28, a1);
    (*(void (**)(char *, unint64_t))(v29 + 8))(v28, ObjCClassFromMetadata);
    v34 = sub_2487B0D54();
    v35 = *(void (**)(char *, uint64_t, uint64_t))(v111 + 16);
    if (v33)
    {
      v10 = v95;
      v2 = v112;
      v35(v95, v34, v112);
      v36 = v22;
      v37 = sub_2487B5324();
      v38 = sub_2487B57E0();
      if (os_log_type_enabled(v37, v38))
      {
        ObjCClassFromMetadata = swift_slowAlloc();
        v39 = swift_slowAlloc();
        v115 = v39;
        *(_DWORD *)ObjCClassFromMetadata = v93;
        v40 = TTSVBCommonVoiceMO.displayName.getter(v96, (uint64_t)&protocol witness table for TTSVBCloudVoiceMO);
        *(_QWORD *)(ObjCClassFromMetadata + 4) = sub_2486EDE5C(v40, v41, &v115);

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2486E6000, v37, v38, "Local voice exists for cloud voice: %s. Continuing", (uint8_t *)ObjCClassFromMetadata, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24959AF80](v39, -1, -1);
        MEMORY[0x24959AF80](ObjCClassFromMetadata, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v111 + 8))(v10, v2);
    }
    else
    {
      v42 = v98;
      v107 = v34;
      v43 = v112;
      v108 = v35;
      ((void (*)(char *))v35)(v98);
      v44 = v22;
      v45 = sub_2487B5324();
      v46 = sub_2487B57E0();
      if (os_log_type_enabled(v45, v46))
      {
        v47 = (uint8_t *)swift_slowAlloc();
        v48 = swift_slowAlloc();
        v115 = v48;
        *(_DWORD *)v47 = v93;
        v49 = TTSVBCommonVoiceMO.displayName.getter(v96, (uint64_t)&protocol witness table for TTSVBCloudVoiceMO);
        v118 = sub_2486EDE5C(v49, v50, &v115);
        sub_2487B593C();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2486E6000, v45, v46, "Making new local voice for cloud voice: %s", v47, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24959AF80](v48, -1, -1);
        MEMORY[0x24959AF80](v47, -1, -1);

        v104 = *(void (**)(char *, uint64_t))(v111 + 8);
        v104(v98, v112);
      }
      else
      {

        v104 = *(void (**)(char *, uint64_t))(v111 + 8);
        v104(v42, v43);
      }
      v51 = v109;
      v52 = a1;
      v53 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, a1);
      ObjCClassFromMetadata = (unint64_t)v44;
      v106 = v53;
      sub_2486F53AC(ObjCClassFromMetadata, (uint64_t)&protocol witness table for TTSVBCloudVoiceMO, v51, (uint64_t)&protocol witness table for TTSVBLocalVoiceMO);

      v54 = MEMORY[0x24BEE4B08];
      v55 = MEMORY[0x24BEE4AF8];
      if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0)
      {
        if (sub_2487B5B64())
          sub_24874EE24(v55, &qword_25777D148, (void (*)(_QWORD))type metadata accessor for TTSVBLocalVoiceSampleMO);
        else
          v54 = MEMORY[0x24BEE4B08];
        v52 = a1;
      }
      v118 = v54;
      v56 = *(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *(_QWORD *)ObjCClassFromMetadata) + 0x58);
      v105 = (_QWORD *)ObjCClassFromMetadata;
      v103 = v56();
      v57 = *(_QWORD *)(v103 + 16);
      if (v57)
      {
        v58 = v52;
        v59 = type metadata accessor for TTSVBLocalVoiceSampleMO();
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        v60 = (uint64_t *)(v103 + 40);
        do
        {
          v62 = *(v60 - 1);
          v61 = *v60;
          v63 = objc_allocWithZone((Class)ObjCClassFromMetadata);
          swift_unknownObjectRetain();
          v64 = objc_msgSend(v63, sel_initWithContext_, v58);
          v65 = sub_2486F4CA0(&qword_25777D128, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBLocalVoiceSampleMO, (uint64_t)&protocol conformance descriptor for TTSVBLocalVoiceSampleMO);
          TTSVBCommonVoiceSampleMO.shallowUpdate(fromSample:)(v62, v61, v59, v65);
          swift_beginAccess();
          v66 = v64;
          sub_24874C7E4(&v117, v66, (void (*)(_QWORD))type metadata accessor for TTSVBLocalVoiceSampleMO, &qword_25777D148);
          swift_endAccess();

          swift_unknownObjectRelease();
          v60 += 2;
          --v57;
        }
        while (v57);
      }
      swift_bridgeObjectRelease();
      v67 = v112;
      v108(v101, v107, v112);
      v68 = sub_2487B5324();
      v69 = sub_2487B57E0();
      if (os_log_type_enabled(v68, v69))
      {
        ObjCClassFromMetadata = swift_slowAlloc();
        *(_DWORD *)ObjCClassFromMetadata = v92;
        swift_beginAccess();
        if ((v118 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          v70 = sub_2487B5A2C();
          swift_bridgeObjectRelease();
        }
        else
        {
          v70 = *(_QWORD *)(v118 + 16);
        }
        v115 = v70;
        sub_2487B593C();
        _os_log_impl(&dword_2486E6000, v68, v69, "Adding %ld samples to local voice", (uint8_t *)ObjCClassFromMetadata, 0xCu);
        MEMORY[0x24959AF80](ObjCClassFromMetadata, -1, -1);
      }

      v104(v101, v67);
      swift_beginAccess();
      type metadata accessor for TTSVBLocalVoiceSampleMO();
      sub_2486F4CA0(&qword_25777D130, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBLocalVoiceSampleMO, MEMORY[0x24BEE5BD8]);
      swift_bridgeObjectRetain();
      v71 = (void *)sub_2487B5738();
      swift_bridgeObjectRelease();
      objc_msgSend(v106, sel_addSamples_, v71);

      v72 = MEMORY[0x24BEE4B08];
      v73 = MEMORY[0x24BEE4AF8];
      v74 = v105;
      if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0)
      {
        if (sub_2487B5B64())
          sub_24874EE24(v73, &qword_25777D150, (void (*)(_QWORD))type metadata accessor for TTSVBLocalVoiceModelMO);
        else
          v72 = MEMORY[0x24BEE4B08];
      }
      v117 = v72;
      v103 = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v74) + 0x60))();
      v75 = *(_QWORD *)(v103 + 16);
      if (v75)
      {
        v76 = type metadata accessor for TTSVBLocalVoiceModelMO();
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        v77 = (uint64_t *)(v103 + 40);
        do
        {
          v79 = *(v77 - 1);
          v78 = *v77;
          v80 = objc_allocWithZone((Class)ObjCClassFromMetadata);
          swift_unknownObjectRetain();
          v81 = objc_msgSend(v80, sel_initWithContext_, v113);
          v82 = sub_2486F4CA0(&qword_25777D138, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBLocalVoiceModelMO, (uint64_t)&protocol conformance descriptor for TTSVBLocalVoiceModelMO);
          TTSVBCommonVoiceModelMO.shallowUpdate(fromModel:)(v79, v78, v76, v82);
          swift_beginAccess();
          v83 = v81;
          sub_24874C7E4(&v114, v83, (void (*)(_QWORD))type metadata accessor for TTSVBLocalVoiceModelMO, &qword_25777D150);
          swift_endAccess();

          swift_unknownObjectRelease();
          v77 += 2;
          --v75;
        }
        while (v75);
      }
      swift_bridgeObjectRelease();
      v2 = v112;
      v108(v102, v107, v112);
      v84 = sub_2487B5324();
      v85 = sub_2487B57E0();
      v86 = os_log_type_enabled(v84, v85);
      a1 = v113;
      if (v86)
      {
        ObjCClassFromMetadata = swift_slowAlloc();
        *(_DWORD *)ObjCClassFromMetadata = v92;
        swift_beginAccess();
        if ((v117 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          v18 = sub_2487B5A2C();
          swift_bridgeObjectRelease();
        }
        else
        {
          v18 = *(_QWORD *)(v117 + 16);
        }
        v115 = v18;
        sub_2487B593C();
        _os_log_impl(&dword_2486E6000, v84, v85, "Adding %ld models to local voice", (uint8_t *)ObjCClassFromMetadata, 0xCu);
        MEMORY[0x24959AF80](ObjCClassFromMetadata, -1, -1);
      }

      v104(v102, v2);
      swift_beginAccess();
      type metadata accessor for TTSVBLocalVoiceModelMO();
      v10 = (char *)sub_2486F4CA0(&qword_25777D140, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBLocalVoiceModelMO, MEMORY[0x24BEE5BD8]);
      swift_bridgeObjectRetain();
      v19 = (void *)sub_2487B5738();
      swift_bridgeObjectRelease();
      v20 = v106;
      objc_msgSend(v106, sel_addModels_, v19);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
    }
    v16 = v110;
    if (v110 == v99)
      goto LABEL_50;
  }
  v87 = sub_2487B5228();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v28, 1, 1, v87);
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_248749EE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)();
  uint64_t v19;
  unint64_t v20;
  uint64_t result;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t *v54;
  uint64_t v55;
  void *v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[3];
  uint64_t *v62;
  __int128 v63;
  char *v64;
  char *v65;
  uint64_t *v66;
  unint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  id v77[2];

  v73 = sub_2487B533C();
  v2 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v4 = (char *)v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v61 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_25445EDE8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTSVBVoiceModel();
  v74 = *(_QWORD *)(v11 - 8);
  v75 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v66 = (_QWORD *)((char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v13);
  v62 = (_QWORD *)((char *)v61 - v14);
  MEMORY[0x24BDAC7A8](v15);
  v71 = (uint64_t)v61 - v16;
  v17 = type metadata accessor for TTSVBLocalVoiceModelMO();
  v18 = sub_248787BD4(v17, (uint64_t)&protocol witness table for TTSVBLocalVoiceModelMO);
  v20 = static DSO<>.fetch(in:config:)(a1, (void (*)(id))v18, v19, v17, (uint64_t)&protocol witness table for TTSVBLocalVoiceModelMO);
  result = swift_release();
  if (!(v20 >> 62))
  {
    v23 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    v24 = v71;
    if (v23)
      goto LABEL_3;
LABEL_23:
    swift_bridgeObjectRelease();
    return NSManagedObjectContext.saveOrRollback()();
  }
  swift_bridgeObjectRetain();
  v23 = sub_2487B5B64();
  result = swift_bridgeObjectRelease();
  v24 = v71;
  if (!v23)
    goto LABEL_23;
LABEL_3:
  v69 = v23;
  if (v23 >= 1)
  {
    v65 = v4;
    v61[1] = a1;
    v25 = 0;
    v76 = 0;
    v72 = v20 & 0xC000000000000001;
    *(_QWORD *)&v22 = 136315138;
    v63 = v22;
    v61[2] = MEMORY[0x24BEE4AD8] + 8;
    v26 = v69;
    v70 = v2;
    v64 = v7;
    v67 = v20;
    v68 = v10;
    do
    {
      if (v72)
        v27 = (_QWORD *)MEMORY[0x24959A434](v25, v20);
      else
        v27 = *(id *)(v20 + 8 * v25 + 32);
      v28 = v27;
      (*(void (**)(_QWORD))((*MEMORY[0x24BEE4EA0] & *v27) + 0x58))(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v10, 1, v75) == 1)
      {

        sub_2486F5008((uint64_t)v10, qword_25445EDE8);
      }
      else
      {
        sub_24870A2C4((uint64_t)v10, v24, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
        v29 = (void *)*sub_24876D91C();
        v77[0] = v29;
        v30 = sub_2487B50CC();
        v31 = *(_QWORD *)(v30 - 8);
        MEMORY[0x24BDAC7A8](v30);
        v33 = (char *)v61 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
        v34 = v29;
        TTSVBVoiceModel.url.getter((uint64_t)v33);
        v35 = v76;
        sub_24876F62C((uint64_t)v33);
        v76 = v35;
        if (v35)
        {
          (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);

          sub_24870A34C(0, &qword_25445F178);
          v36 = (void *)sub_2487B58E8();
          objc_msgSend(v28, sel_setIsDownloaded_, v36);

          v37 = sub_2487B0D54();
          v38 = v70;
          v39 = v65;
          (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v65, v37, v73);
          v40 = v66;
          sub_248709554(v71, (uint64_t)v66, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
          v41 = sub_2487B5324();
          v42 = sub_2487B57E0();
          if (os_log_type_enabled(v41, v42))
          {
            v43 = swift_slowAlloc();
            v44 = (void *)swift_slowAlloc();
            v77[0] = v44;
            *(_DWORD *)v43 = v63;
            v45 = *v40;
            v46 = v40[1];
            swift_bridgeObjectRetain();
            v47 = v45;
            v38 = v70;
            *(_QWORD *)(v43 + 4) = sub_2486EDE5C(v47, v46, (uint64_t *)v77);
            swift_bridgeObjectRelease();
            sub_2486EDA68((uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
            _os_log_impl(&dword_2486E6000, v41, v42, "Setting local model as not downloaded: %s", (uint8_t *)v43, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x24959AF80](v44, -1, -1);
            MEMORY[0x24959AF80](v43, -1, -1);

          }
          else
          {

            sub_2486EDA68((uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
          }
          (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v73);
          v24 = v71;
          sub_2486EDA68(v71, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
          v76 = 0;
          v7 = v64;
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);

          sub_24870A34C(0, &qword_25445F178);
          v48 = (void *)sub_2487B58E8();
          objc_msgSend(v28, sel_setIsDownloaded_, v48);

          v49 = sub_2487B0D54();
          v50 = v70;
          (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v7, v49, v73);
          v24 = v71;
          v51 = v62;
          sub_248709554(v71, (uint64_t)v62, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
          v52 = sub_2487B5324();
          v53 = sub_2487B57E0();
          if (os_log_type_enabled(v52, v53))
          {
            v54 = v51;
            v55 = swift_slowAlloc();
            v56 = (void *)swift_slowAlloc();
            v77[0] = v56;
            *(_DWORD *)v55 = v63;
            v58 = *v51;
            v57 = v51[1];
            swift_bridgeObjectRetain();
            v59 = v58;
            v50 = v70;
            *(_QWORD *)(v55 + 4) = sub_2486EDE5C(v59, v57, (uint64_t *)v77);
            swift_bridgeObjectRelease();
            v60 = (uint64_t)v54;
            v24 = v71;
            sub_2486EDA68(v60, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
            _os_log_impl(&dword_2486E6000, v52, v53, "Setting local model as downloaded: %s", (uint8_t *)v55, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x24959AF80](v56, -1, -1);
            MEMORY[0x24959AF80](v55, -1, -1);

          }
          else
          {

            sub_2486EDA68((uint64_t)v51, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
          }
          (*(void (**)(char *, uint64_t))(v50 + 8))(v7, v73);
          sub_2486EDA68(v24, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
        }
        v20 = v67;
        v10 = v68;
        v26 = v69;
      }
      ++v25;
    }
    while (v26 != v25);
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_24874A61C(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[7];

  v24 = a4;
  v25 = a5;
  v30 = sub_2487B53D8();
  v28 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v27 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_2487B5408();
  v26 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2487B5228();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v14 = a1(v13);
  v23[2] = v23;
  v23[1] = *(_QWORD *)(a3 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_calloutQueue);
  MEMORY[0x24BDAC7A8](v14);
  v15 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v15, v10);
  v16 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v17 = swift_allocObject();
  v18 = v25;
  *(_QWORD *)(v17 + 16) = v24;
  *(_QWORD *)(v17 + 24) = v18;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v17 + v16, v15, v10);
  aBlock[4] = sub_248750C90;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F1008;
  aBlock[3] = &block_descriptor_377;
  v19 = _Block_copy(aBlock);
  swift_retain();
  sub_2487B53E4();
  v31 = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
  sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
  v20 = v27;
  v21 = v30;
  sub_2487B59FC();
  MEMORY[0x24959A1AC](0, v9, v20, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v20, v21);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v29);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
  return swift_release();
}

uint64_t sub_24874AA58(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  void *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[7];
  uint64_t v24;

  v8 = sub_2487B53D8();
  v20 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_2487B5408();
  v11 = *(_QWORD *)(v21 - 8);
  v12 = MEMORY[0x24BDAC7A8](v21);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(&v24, v12);
  v15 = v24;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a4;
  *(_QWORD *)(v16 + 24) = a5;
  *(_BYTE *)(v16 + 32) = v15;
  aBlock[4] = sub_2487506FC;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F1008;
  aBlock[3] = &block_descriptor_269;
  v17 = _Block_copy(aBlock);
  swift_retain();
  sub_2487B53E4();
  v22 = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
  sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
  sub_2487B59FC();
  MEMORY[0x24959A1AC](0, v14, v10, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v21);
  return swift_release();
}

uint64_t sub_24874AD98(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C1D8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2487B5228();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v7, a3, v8);
  swift_storeEnumTagMultiPayload();
  a1(v7);
  return sub_2486F5008((uint64_t)v7, &qword_25777C1D8);
}

uint64_t sub_24874AE54(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[7];

  v8 = sub_2487B53D8();
  v18 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_2487B5408();
  v11 = *(_QWORD *)(v19 - 8);
  v12 = MEMORY[0x24BDAC7A8](v19);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v12);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a4;
  *(_QWORD *)(v15 + 24) = a5;
  aBlock[4] = sub_248750B50;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F1008;
  aBlock[3] = &block_descriptor_359;
  v16 = _Block_copy(aBlock);
  swift_retain();
  sub_2487B53E4();
  v20 = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
  sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
  sub_2487B59FC();
  MEMORY[0x24959A1AC](0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v19);
  return swift_release();
}

void TTSVBVoiceBankingManager.xpcServiceConfig.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v3;
  id v4;

  if (TTSVBProcessIsVoicebankingd())
  {
    v3 = *(void **)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_dataStore);
    if (v3)
    {
      v4 = v3;
      sub_248776E8C(a1);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void TTSVBVoiceBankingManager.getTrainingMetadataDownloadingIfNeeded(localeID:scriptType:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD v14[6];

  v9 = sub_24872C8D8();
  v10 = (void *)sub_2487B5504();
  v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_calloutQueue);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a4;
  *(_QWORD *)(v12 + 24) = a5;
  v14[4] = sub_24874E3E4;
  v14[5] = v12;
  v14[0] = MEMORY[0x24BDAC760];
  v14[1] = 1107296256;
  v14[2] = sub_24873A63C;
  v14[3] = &block_descriptor_138;
  v13 = _Block_copy(v14);
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_fetchTrainingScriptsWithLocaleID_scriptType_replyOnQueue_completion_, v10, a3, v11, v13);
  _Block_release(v13);

}

void sub_24874B2F4(uint64_t a1, uint64_t a2, void *a3, void (*a4)(char *))
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD v17[2];
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;

  if (a3)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C1D0);
    MEMORY[0x24BDAC7A8](v6);
    v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    v9 = a3;
    sub_2486F8E48((uint64_t)&v19);
    v10 = v19;
    v11 = v20;
    v12 = v21;
    v17[0] = v19;
    v17[1] = v20;
    v18 = v21;
    static TTSVBError.map(_:_:)(a3, (uint64_t)v17, (uint64_t)v8);
    sub_2486F507C(v10, v11, v12);
    swift_storeEnumTagMultiPayload();
    a4(v8);

    v13 = (uint64_t)v8;
LABEL_5:
    sub_2486F5008(v13, &qword_25777C1D0);
    return;
  }
  if (a2)
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777C1D0);
    MEMORY[0x24BDAC7A8](v14);
    v16 = (char *)v17 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2487B500C();
    swift_storeEnumTagMultiPayload();
    a4(v16);
    v13 = (uint64_t)v16;
    goto LABEL_5;
  }
  __break(1u);
}

void TTSVBVoiceBankingManager.getTrainingMetadataDownloadingIfNeeded(localeID:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v12[6];

  v7 = sub_24872C8D8();
  v8 = (void *)sub_2487B5504();
  v9 = *(_QWORD *)(v4 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_calloutQueue);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a3;
  *(_QWORD *)(v10 + 24) = a4;
  v12[4] = sub_248751018;
  v12[5] = v10;
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 1107296256;
  v12[2] = sub_24873A63C;
  v12[3] = &block_descriptor_145;
  v11 = _Block_copy(v12);
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_fetchTrainingScriptsWithLocaleID_scriptType_replyOnQueue_completion_, v8, CFSTR("default"), v9, v11);
  _Block_release(v11);

}

id TTSVBVoiceBankingManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_24874B628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v22;
  void *v23;

  v12 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v13 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v14 = sub_2487B50CC();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(a5, 1, v14) != 1)
  {
    v16 = (void *)sub_2487B503C();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a5, v14);
  }
  v17 = (void *)sub_2487B503C();
  v18 = (void *)sub_2487B503C();
  LOBYTE(v22) = a9 & 1;
  v19 = objc_msgSend(v23, sel_initWithTaskID_localeID_trainingAssetURL_dataAssetURL_inferenceAssetURL_trainingMode_startImmediately_, v12, v13, v16, v17, v18, a8, v22);

  v20 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  v20(a7, v14);
  v20(a6, v14);
  return v19;
}

uint64_t sub_24874B774(uint64_t a1, uint64_t a2)
{
  return sub_24874B9AC(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E8]);
}

uint64_t sub_24874B780(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_2487B5510();
  *a2 = 0;
  return result;
}

uint64_t sub_24874B7F4(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_2487B551C();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_24874B870@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_2487B5528();
  v2 = sub_2487B5504();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24874B8B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_2487B5504();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24874B8F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_2487B5528();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24874B91C()
{
  sub_2486F4CA0(&qword_25777D118, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBSiriTrainingScriptType, (uint64_t)&unk_2487BE808);
  sub_2486F4CA0(&qword_25777D120, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBSiriTrainingScriptType, (uint64_t)&unk_2487BE7A8);
  return sub_2487B5BA0();
}

uint64_t sub_24874B9A0(uint64_t a1, uint64_t a2)
{
  return sub_24874B9AC(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_24874B9AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_2487B5528();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_24874B9E8()
{
  sub_2487B5528();
  sub_2487B557C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24874BA28()
{
  uint64_t v0;

  sub_2487B5528();
  sub_2487B5D5C();
  sub_2487B557C();
  v0 = sub_2487B5D98();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24874BA98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_2487B5528();
  v2 = v1;
  if (v0 == sub_2487B5528() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_2487B5CE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_24874BB20(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_24874BB84;
  return v6(a1);
}

uint64_t sub_24874BB84()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_24874BBD0(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_2487B5B4C();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_24874D5D4(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_24874BDDC()
{
  uint64_t v0;

  return sub_24873EC10(*(void (**)(char *))(v0 + 16));
}

uint64_t sub_24874BDF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_2487B50CC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = sub_2487B5228();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

void sub_24874BEC8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(sub_2487B50CC() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_2487B5228() - 8) + 80);
  sub_24873777C(v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), v0 + ((v3 + v4 + 16) & ~v4));
}

void sub_24874BF50()
{
  sub_2487387CC();
}

uint64_t sub_24874BF70()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24874BF9C()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  id v2;
  id v3;
  uint64_t v4;

  v1 = *(void (**)(uint64_t))(v0 + 16);
  v2 = sub_24872C8D8();
  v3 = objc_msgSend(v2, sel_getAllAvailableLocales);

  v4 = sub_2487B5684();
  v1(v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24874C018()
{
  return objectdestroy_59Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_24874C024()
{
  uint64_t v0;
  uint64_t (*v1)(BOOL);
  id v2;
  void *v3;
  id v4;
  unint64_t v5;
  uint64_t v6;

  v1 = *(uint64_t (**)(BOOL))(v0 + 16);
  v2 = sub_24872C8D8();
  v3 = (void *)sub_2487B5504();
  v4 = objc_msgSend(v2, sel_installedTrainingAssetsForLocaleID_, v3);

  sub_24870A34C(0, &qword_25777D1D0);
  v5 = sub_2487B5684();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_2487B5B64();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return v1(v6 > 0);
}

uint64_t sub_24874C11C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_24874C158()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  _QWORD *v8;
  void *v9;
  id v10;
  _QWORD v11[6];

  v1 = v0;
  v2 = (void *)v0[2];
  v3 = v1[5];
  v4 = v1[6];
  v5 = v1[7];
  v6 = sub_24872C8D8();
  v7 = (void *)sub_2487B5504();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v2;
  v8[3] = v4;
  v8[4] = v5;
  v11[4] = sub_248750890;
  v11[5] = v8;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_24873A63C;
  v11[3] = &block_descriptor_287;
  v9 = _Block_copy(v11);
  v10 = v2;
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_fetchTrainingScriptsWithLocaleID_scriptType_replyOnQueue_completion_, v7, v3, 0, v9);
  _Block_release(v9);

}

uint64_t sub_24874C264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_2487B5228();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24874C304()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_2487B5228() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24873A89C(v0 + v2, *(void **)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t objectdestroy_11Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2487B5228();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_24874C3D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_2487B5228() - 8) + 80);
  result = sub_24873B094(v1 + ((v4 + 24) & ~v4));
  if (!v2)
    *a1 = result & 1;
  return result;
}

uint64_t sub_24874C438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2487B5228();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_24874C4C8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_2487B5228() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_24873B43C(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_24874C524()
{
  return objectdestroy_83Tm((void (*)(_QWORD))MEMORY[0x24BEE4CA0]);
}

uint64_t sub_24874C530()
{
  uint64_t v0;

  return sub_24873AEBC(*(void (**)(char *))(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), &qword_25777C1D0);
}

uint64_t sub_24874C554(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_24874C604(a1, a2, a3, (_QWORD *)*v3, &qword_25777D220, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoice);
  *v3 = result;
  return result;
}

uint64_t sub_24874C580(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_24874C604(a1, a2, a3, (_QWORD *)*v3, &qword_25777D218, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBInstalledVoiceModel);
  *v3 = result;
  return result;
}

uint64_t sub_24874C5AC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_24874C604(a1, a2, a3, (_QWORD *)*v3, &qword_25777D1F8, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
  *v3 = result;
  return result;
}

uint64_t sub_24874C5D8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_24874C604(a1, a2, a3, (_QWORD *)*v3, &qword_25777D1C0, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceSample);
  *v3 = result;
  return result;
}

uint64_t sub_24874C604(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_2487B5B94();
  __break(1u);
  return result;
}

uint64_t sub_24874C7E4(_QWORD *a1, void *a2, void (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v7;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  id v21;
  char v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  char isUniquelyReferenced_nonNull_native;
  id v30;
  uint64_t v31;
  id v32;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v7 = v4;
  v10 = *v4;
  if ((*v4 & 0xC000000000000001) != 0)
  {
    if (v10 < 0)
      v11 = *v4;
    else
      v11 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v12 = a2;
    v13 = sub_2487B5A38();

    if (v13)
    {
      swift_bridgeObjectRelease();

      a3(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v35;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_2487B5A2C();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v25 = sub_24874CA90(v11, result + 1, a4, a3);
    v36 = v25;
    v26 = *(_QWORD *)(v25 + 16);
    if (*(_QWORD *)(v25 + 24) <= v26)
    {
      v31 = v26 + 1;
      v32 = v12;
      sub_24874CC84(v31, a4);
      v27 = v36;
    }
    else
    {
      v27 = v25;
      v28 = v12;
    }
    sub_24874CF1C((uint64_t)v12, v27);
    *v7 = v27;
    swift_bridgeObjectRelease();
    *a1 = v12;
  }
  else
  {
    swift_bridgeObjectRetain();
    v15 = sub_2487B58F4();
    v16 = -1 << *(_BYTE *)(v10 + 32);
    v17 = v15 & ~v16;
    if (((*(_QWORD *)(v10 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
    {
      a3(0);
      v18 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * v17);
      v19 = sub_2487B5900();

      if ((v19 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v23 = *(void **)(*(_QWORD *)(*v4 + 48) + 8 * v17);
        *a1 = v23;
        v24 = v23;
        return 0;
      }
      v20 = ~v16;
      while (1)
      {
        v17 = (v17 + 1) & v20;
        if (((*(_QWORD *)(v10 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
          break;
        v21 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * v17);
        v22 = sub_2487B5900();

        if ((v22 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v37 = *v4;
    *v4 = 0x8000000000000000;
    v30 = a2;
    sub_24874CF9C((uint64_t)v30, v17, isUniquelyReferenced_nonNull_native, a4, a3);
    *v4 = v37;
    swift_bridgeObjectRelease();
    *a1 = v30;
  }
  return 1;
}

uint64_t sub_24874CA90(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(_QWORD))
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    v6 = sub_2487B5A8C();
    v19 = v6;
    sub_2487B5A20();
    if (sub_2487B5A44())
    {
      a4(0);
      do
      {
        swift_dynamicCast();
        v6 = v19;
        v13 = *(_QWORD *)(v19 + 16);
        if (*(_QWORD *)(v19 + 24) <= v13)
        {
          sub_24874CC84(v13 + 1, a3);
          v6 = v19;
        }
        result = sub_2487B58F4();
        v8 = v6 + 56;
        v9 = -1 << *(_BYTE *)(v6 + 32);
        v10 = result & ~v9;
        v11 = v10 >> 6;
        if (((-1 << v10) & ~*(_QWORD *)(v6 + 56 + 8 * (v10 >> 6))) != 0)
        {
          v12 = __clz(__rbit64((-1 << v10) & ~*(_QWORD *)(v6 + 56 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v14 = 0;
          v15 = (unint64_t)(63 - v9) >> 6;
          do
          {
            if (++v11 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v16 = v11 == v15;
            if (v11 == v15)
              v11 = 0;
            v14 |= v16;
            v17 = *(_QWORD *)(v8 + 8 * v11);
          }
          while (v17 == -1);
          v12 = __clz(__rbit64(~v17)) + (v11 << 6);
        }
        *(_QWORD *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v18;
        ++*(_QWORD *)(v6 + 16);
      }
      while (sub_2487B5A44());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B08];
  }
  return v6;
}

uint64_t sub_24874CC84(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_2487B5A80();
  v6 = v5;
  if (*(_QWORD *)(v4 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v4 + 32);
    v8 = (_QWORD *)(v4 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v4 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11)
          goto LABEL_33;
        v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v11)
            goto LABEL_33;
          v19 = v8[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v11)
              goto LABEL_33;
            v19 = v8[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                v3 = v30;
                v29 = 1 << *(_BYTE *)(v4 + 32);
                if (v29 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v11)
                    goto LABEL_33;
                  v19 = v8[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
      result = sub_2487B58F4();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

unint64_t sub_24874CF1C(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_2487B58F4();
  result = sub_2487B5A14();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

void sub_24874CF9C(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, void (*a5)(_QWORD))
{
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v9 = *(_QWORD *)(*v5 + 16);
  v10 = *(_QWORD *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0)
    goto LABEL_14;
  v11 = v9 + 1;
  if ((a3 & 1) != 0)
  {
    sub_24874CC84(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_24874D120(a4);
      goto LABEL_14;
    }
    sub_24874D2C0(v11, a4);
  }
  v12 = *v5;
  v13 = sub_2487B58F4();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    a5(0);
    v15 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * a2);
    v16 = sub_2487B5900();

    if ((v16 & 1) != 0)
    {
LABEL_13:
      sub_2487B5D08();
      __break(1u);
    }
    else
    {
      v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v18 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * a2);
        v19 = sub_2487B5900();

        if ((v19 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v20 + 48) + 8 * a2) = a1;
  v21 = *(_QWORD *)(v20 + 16);
  v22 = __OFADD__(v21, 1);
  v23 = v21 + 1;
  if (v22)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v23;
}

id sub_24874D120(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_2487B5A74();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_28;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
      {
        v10 = v19 + 2;
        if (v19 + 2 >= v14)
          goto LABEL_28;
        v20 = *(_QWORD *)(v7 + 8 * v10);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    result = v18;
  }
  v21 = v19 + 3;
  if (v21 >= v14)
    goto LABEL_28;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_24874D2C0(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_2487B5A80();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release();
LABEL_35:
    *v3 = v6;
    return result;
  }
  v29 = v2;
  v7 = 1 << *(_BYTE *)(v4 + 32);
  v8 = v4 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v4 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_33;
      v19 = *(_QWORD *)(v8 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v11)
          goto LABEL_33;
        v19 = *(_QWORD *)(v8 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_23:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    v21 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v17);
    result = sub_2487B58F4();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
    ++*(_QWORD *)(v6 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    result = swift_release_n();
    v3 = v29;
    goto LABEL_35;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24874D534(void (*a1)(_BYTE *), uint64_t a2, _BYTE *a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v9;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777D1B8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v7 = *a3;
  swift_storeEnumTagMultiPayload();
  a1(v7);
  return sub_2486F5008((uint64_t)v7, &qword_25777D1B8);
}

uint64_t sub_24874D5D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_2487B5B94();
  __break(1u);
  return result;
}

void sub_24874D6EC(void *a1, __int128 *a2, void *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  _QWORD v24[4];
  _OWORD v25[5];
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;

  v6 = a2[5];
  v25[4] = a2[4];
  v26 = v6;
  v27 = a2[6];
  v28 = *((_QWORD *)a2 + 14);
  v7 = a2[1];
  v25[0] = *a2;
  v25[1] = v7;
  v8 = a2[3];
  v25[2] = a2[2];
  v25[3] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777C9B0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_2487BE660;
  v10 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
  v11 = sub_2487189D4();
  *(_QWORD *)(v9 + 64) = v11;
  *(_QWORD *)(v9 + 32) = 0x4449656C706D6173;
  *(_QWORD *)(v9 + 40) = 0xE800000000000000;
  v29 = *a2;
  v12 = v29;
  *(_QWORD *)(v9 + 96) = v10;
  *(_QWORD *)(v9 + 104) = v11;
  *(_OWORD *)(v9 + 72) = v12;
  sub_24870A34C(0, &qword_25777C9A8);
  *(_QWORD *)(v9 + 136) = v10;
  *(_QWORD *)(v9 + 144) = v11;
  *(_QWORD *)(v9 + 112) = 0x6563696F76;
  *(_QWORD *)(v9 + 120) = 0xE500000000000000;
  *(_QWORD *)(v9 + 176) = type metadata accessor for TTSVBLocalVoiceMO();
  *(_QWORD *)(v9 + 184) = sub_2486F4CA0(&qword_25777D1A0, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBLocalVoiceMO, MEMORY[0x24BEE5BE8]);
  *(_QWORD *)(v9 + 152) = a1;
  sub_248750274((uint64_t)&v29);
  v13 = a1;
  v14 = (void *)sub_2487B578C();
  v15 = type metadata accessor for TTSVBLocalVoiceSampleMO();
  v24[2] = v25;
  v16 = (void *)static DSO<>.findOrCreate(in:matching:config:)(a3, v14, (void (*)(void))sub_24875029C, (uint64_t)v24, v15, (uint64_t)&protocol witness table for TTSVBLocalVoiceSampleMO);
  v17 = (void *)sub_2487B5504();
  objc_msgSend(v16, sel_setPhrase_, v17);

  v18 = (void *)sub_2487B5504();
  objc_msgSend(v16, sel_setPhonemes_, v18);

  v19 = (void *)sub_2487B5504();
  objc_msgSend(v16, sel_setTranscript_, v19);

  v20 = (void *)sub_2487B5504();
  objc_msgSend(v16, sel_setBookTitle_, v20);

  if ((uint64_t)v26 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_8;
  }
  if ((uint64_t)v26 > 0x7FFFFFFF)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  objc_msgSend(v16, sel_setParagraphIndex_);
  if (*((uint64_t *)&v26 + 1) < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*((uint64_t *)&v26 + 1) > 0x7FFFFFFF)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  objc_msgSend(v16, sel_setSentenceIndex_);
  objc_msgSend(v16, sel_setEstimatedDuration_, *(double *)&v27);
  v21 = (void *)sub_2487B5504();
  objc_msgSend(v16, sel_setLocale_, v21);

  objc_msgSend(v16, sel_setVoice_, v13);
  v22 = objc_msgSend(v16, sel_sampleID);
  if (v22)
  {
    v23 = v22;
    sub_2487B5528();

    return;
  }
LABEL_11:
  __break(1u);
}

uint64_t sub_24874DA28()
{
  sub_248728D90();
  sub_24871B998();
  sub_2487B59B4();
  sub_248728DA8();
  sub_2487B59B4();
  return sub_2487B58A0();
}

void *sub_24874DB14()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  void *v4;
  void *result;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (uint64_t *)v0[2];
  v2 = v0[3];
  v4 = (void *)v0[4];
  type metadata accessor for TTSVBLocalVoiceMO();
  result = (void *)static TTSVBLocalVoiceMO.requireVoiceWithID(_:moc:)(v2, v4);
  if (!v1)
  {
    v6 = result;
    v7 = objc_msgSend(result, sel_name);

    if (v7)
    {
      v8 = sub_2487B5528();
      v10 = v9;

    }
    else
    {
      v8 = 0;
      v10 = 0;
    }
    *v3 = v8;
    v3[1] = v10;
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24874DBC4()
{
  return objectdestroy_89Tm((uint64_t (*)(_QWORD))MEMORY[0x24BDCDAB8], (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_24874DBD8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_2487B50CC() - 8) + 80);
  return sub_24873E16C(a1, v1[2], v1[3], v1[4], (uint64_t)v1 + ((v3 + 40) & ~v3));
}

uint64_t sub_24874DC1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2487B50CC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_24874DCC4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_2487B50CC() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_24873ECD4(v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_24874DD34()
{
  return objectdestroy_89Tm((uint64_t (*)(_QWORD))MEMORY[0x24BDCEA50], (void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_24874DD48()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_2487B5228() - 8) + 80);
  return sub_248740C68(*(uint64_t **)(v0 + 24), *(_QWORD *)(v0 + 32), v0 + ((v1 + 40) & ~v1));
}

uint64_t sub_24874DD94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = sub_2487B5228();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28) - 8);
  v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v13 = *(_QWORD *)(v5 + 64);
  v7 = sub_2487B51D4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);

  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v10 = sub_2487B50CC();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v0 + v6, 1, v10))
    (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v0 + v6, v10);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + ((v9 + ((((v13 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v9), v7);
  return swift_deallocObject();
}

uint64_t sub_24874DF18()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v1 = *(_QWORD *)(sub_2487B5228() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28) - 8);
  v5 = (v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(sub_2487B51D4() - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + v7 + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + v9 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  return sub_24874188C(v0[2], v0[3], v0[4], (uint64_t)v0 + v2, (uint64_t)v0 + v5, *(uint64_t *)((char *)v0 + v6), *(uint64_t *)((char *)v0 + v7), *(uint64_t *)((char *)v0 + v7 + 8), *(float *)((char *)v0 + v10), *(float *)((char *)v0 + ((v10 + 7) & 0xFFFFFFFFFFFFFFFCLL)), *(float *)((char *)v0 + ((((v10 + 7) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL)), *(float *)((char *)v0+ ((((((v10 + 7) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFCLL)), (uint64_t)v0 + v9);
}

uint64_t sub_24874E020()
{
  return objectdestroy_89Tm((uint64_t (*)(_QWORD))MEMORY[0x24BDCEA50], (void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

void sub_24874E034()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_2487B5228() - 8) + 80);
  sub_248742608(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v0 + ((v1 + 40) & ~v1));
}

uint64_t sub_24874E084()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_2487B5228() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  return sub_248743A20(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), v0 + v2, *(_QWORD *)(v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

void sub_24874E100()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v8[6];

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[4];
  v4 = sub_24872C8D8();
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_calloutQueue);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v2;
  *(_QWORD *)(v6 + 24) = v3;
  v8[4] = sub_2487510F4;
  v8[5] = v6;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 1107296256;
  v8[2] = sub_2486F20F8;
  v8[3] = &block_descriptor_176;
  v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  objc_msgSend(v4, sel_discardTrainingTasksReplyOnQueue_completionHandler_, v5, v7);
  _Block_release(v7);

}

uint64_t sub_24874E1E4()
{
  return objectdestroy_8Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t objectdestroy_8Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  a1(*(_QWORD *)(v1 + 48));
  return swift_deallocObject();
}

void sub_24874E230()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[6];

  v1 = v0[2];
  v2 = v0[5];
  v3 = v0[6];
  v4 = sub_24872C8D8();
  v5 = (void *)sub_2487B5504();
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport24TTSVBVoiceBankingManager_calloutQueue);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v2;
  *(_QWORD *)(v7 + 24) = v3;
  v9[4] = sub_24874F1A0;
  v9[5] = v7;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = sub_2486F20F8;
  v9[3] = &block_descriptor_170;
  v8 = _Block_copy(v9);
  swift_retain();
  swift_release();
  objc_msgSend(v4, sel_cancelTaskWithID_replyOnQueue_completionHandler_, v5, v6, v8);
  _Block_release(v8);

}

uint64_t sub_24874E338()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_24874E35C()
{
  if ((static TTSVBPreferences.hasPerformVoiceDatastoreMigrationV1.getter() & 1) == 0)
  {
    sub_248746FEC();
    sub_2487472BC();
    static TTSVBPreferences.hasPerformVoiceDatastoreMigrationV1.setter(1);
  }
}

uint64_t sub_24874E398()
{
  return sub_248746FEC();
}

uint64_t sub_24874E3C0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_24874E3E4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  sub_24874B2F4(a1, a2, a3, *(void (**)(char *))(v3 + 16));
}

uint64_t type metadata accessor for TTSVBVoiceBankingManager()
{
  return objc_opt_self();
}

void type metadata accessor for TTSVBSiriTTSTrainerTaskMode(uint64_t a1)
{
  sub_24871F99C(a1, &qword_25777D0F0);
}

void type metadata accessor for TTSVBSiriTrainingScriptType(uint64_t a1)
{
  sub_24871F99C(a1, &qword_25777D0F8);
}

uint64_t sub_24874E434()
{
  return sub_2486F4CA0(&qword_25777D100, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBSiriTrainingScriptType, (uint64_t)&unk_2487BE76C);
}

uint64_t sub_24874E460()
{
  return sub_2486F4CA0(&qword_25777D108, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBSiriTrainingScriptType, (uint64_t)&unk_2487BE740);
}

uint64_t sub_24874E48C()
{
  return sub_2486F4CA0(&qword_25777D110, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBSiriTrainingScriptType, (uint64_t)&unk_2487BE7DC);
}

uint64_t sub_24874E4B8()
{
  uint64_t v0;

  return sub_24874911C(*(void **)(v0 + 16));
}

uint64_t sub_24874E4C0()
{
  return swift_deallocObject();
}

uint64_t sub_24874E4D0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_24874E4F0(void *a1, uint64_t a2, double a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  unsigned int (*isa)(char *, uint64_t, uint64_t);
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  id v23;
  char *v24;
  uint64_t v25;
  char *v26;
  os_log_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *);
  char *v32;
  uint64_t v33;
  id v34;
  double v35;
  char *v36;
  Class v37;
  uint64_t v38;
  double v39;
  id v40;
  NSObject *v41;
  _BOOL4 v42;
  os_log_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  Class v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  os_log_t v57;
  _QWORD *v58;
  id v59;
  uint64_t v60;
  char *v61;
  id v62;
  uint64_t v63;
  double v64;
  uint64_t v65;
  char *v66;
  NSObject *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  void *v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  id v76;
  uint64_t v77;
  unint64_t v78;
  os_log_t v79;
  id v80;
  _QWORD v81[2];
  os_log_t v82;
  char *v83;
  id v84;
  void (*v85)(char *, uint64_t, uint64_t, double);
  uint64_t v86;
  uint64_t (*v87)(char *, uint64_t, uint64_t);
  int v88;
  _QWORD *v89;
  _QWORD *v90;
  os_log_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  id v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;

  v98 = (_QWORD *)a2;
  v5 = sub_2487B533C();
  v6 = *(_QWORD *)(v5 - 8);
  v95 = v5;
  v96 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v92 = (char *)v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v94 = (char *)v81 - v9;
  v10 = sub_2487B50CC();
  v11 = *(NSObject **)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v100 = v12;
  v13 = ((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28);
  v15 = *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF0;
  v17 = type metadata accessor for TTSVBLocalVoiceSampleMO();
  v18 = sub_2486F4CA0(&qword_25777D128, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBLocalVoiceSampleMO, (uint64_t)&protocol conformance descriptor for TTSVBLocalVoiceSampleMO);
  v99 = a1;
  TTSVBCommonVoiceSampleMO.url.getter(v17, v18, (uint64_t)v81 - v16);
  v19 = v11;
  isa = (unsigned int (*)(char *, uint64_t, uint64_t))v11[6].isa;
  if (isa((char *)v81 - v16, 1, v10) == 1)
  {
    sub_2486F5008((uint64_t)v81 - v16, &qword_25445ED28);
    type metadata accessor for TTSVBError(0);
    sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
    swift_allocError();
    TTSVBError.init(_:_:_:)(0xD000000000000011, 0x80000002487C58D0, 0, 0, 0, v21);
    swift_willThrow();
    return;
  }
  v22 = (void (*)(char *, char *, uint64_t))v11[4].isa;
  v93 = (uint64_t)v81 - v13;
  v22((char *)v81 - v13, (char *)v81 - v16, v10);
  v23 = objc_msgSend(v99, sel_setRecordingDuration_, a3);
  v91 = v19;
  MEMORY[0x24BDAC7A8](v23);
  v24 = (char *)v81 - v13;
  MEMORY[0x24BDAC7A8](v25);
  v26 = (char *)v81 - v16;
  sub_2486F4E74((uint64_t)v98, (uint64_t)v81 - v16, &qword_25445ED28);
  if (isa((char *)v81 - v16, 1, v10) == 1)
  {
    v27 = v91;
    sub_2486F5008((uint64_t)v26, &qword_25445ED28);
    v104 = *sub_24876D91C();
    v101 = 0;
    v102 = 0;
    v103 = -1;
    v28 = v93;
    _TTSVBFileManager.removeItem(_:problem:)(v93, (uint64_t)&v101);
    ((void (*)(uint64_t, uint64_t))v27[1].isa)(v28, v10);
    return;
  }
  v98 = v81;
  v22(v24, (char *)v81 - v16, v10);
  v29 = sub_2487B0B90();
  v30 = v95;
  v31 = *(uint64_t (**)(char *))(v96 + 16);
  v32 = v94;
  v86 = v29;
  v33 = v31(v94);
  v90 = v81;
  v34 = v100;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v36 = (char *)v81 - (((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v91[2].isa;
  v38 = ((uint64_t (*)(char *, char *, uint64_t, double))v37)(v36, v24, v10, v35);
  v89 = v81;
  v39 = MEMORY[0x24BDAC7A8](v38);
  v85 = (void (*)(char *, uint64_t, uint64_t, double))v37;
  ((void (*)(char *, uint64_t, uint64_t, double))v37)(v36, v93, v10, v39);
  v40 = v99;
  v41 = sub_2487B5324();
  v88 = sub_2487B57C8();
  v42 = os_log_type_enabled(v41, (os_log_type_t)v88);
  v99 = v24;
  v87 = (uint64_t (*)(char *, uint64_t, uint64_t))v31;
  v84 = v40;
  if (v42)
  {
    v83 = v36;
    v82 = v41;
    v43 = v91;
    v44 = swift_slowAlloc();
    v45 = swift_slowAlloc();
    v101 = v45;
    *(_DWORD *)v44 = 136315650;
    v46 = objc_msgSend(v40, sel_sampleID);
    if (!v46)
    {

      __break(1u);
      goto LABEL_17;
    }
    v47 = v46;
    v81[1] = v44 + 4;
    v48 = sub_2487B5528();
    v50 = v49;

    v104 = sub_2486EDE5C(v48, v50, &v101);
    sub_2487B593C();

    swift_bridgeObjectRelease();
    *(_WORD *)(v44 + 12) = 2080;
    v51 = sub_2487B50B4();
    v104 = sub_2486EDE5C(v51, v52, &v101);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    v53 = v43[1].isa;
    ((void (*)(char *, uint64_t))v53)(v36, v10);
    *(_WORD *)(v44 + 22) = 2080;
    v54 = v83;
    v55 = sub_2487B50B4();
    v104 = sub_2486EDE5C(v55, v56, &v101);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v53)(v54, v10);
    v57 = v82;
    _os_log_impl(&dword_2486E6000, v82, (os_log_type_t)v88, "Will copy audio file for sampleID=%s from=%s to=%s", (uint8_t *)v44, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v45, -1, -1);
    MEMORY[0x24959AF80](v44, -1, -1);

    v30 = v95;
    v96 = *(_QWORD *)(v96 + 8);
    ((void (*)(char *, uint64_t))v96)(v94, v95);
  }
  else
  {

    v53 = v91[1].isa;
    ((void (*)(char *, uint64_t))v53)(v36, v10);
    ((void (*)(char *, uint64_t))v53)(v36, v10);

    v96 = *(_QWORD *)(v96 + 8);
    ((void (*)(char *, uint64_t))v96)(v32, v30);
  }
  v58 = v97;
  v104 = *sub_24876D91C();
  v101 = 0;
  v102 = 0;
  v103 = -1;
  v59 = v99;
  v60 = v93;
  _TTSVBFileManager.copyItem(_:to:problem:)((uint64_t)v99, v93, (uint64_t)&v101);
  v61 = v92;
  if (v58)
  {
    v62 = v59;
LABEL_15:
    ((void (*)(id, uint64_t))v53)(v62, v10);
    ((void (*)(uint64_t, uint64_t))v53)(v60, v10);
    return;
  }
  v63 = v87(v92, v86, v30);
  v97 = v81;
  v64 = MEMORY[0x24BDAC7A8](v63);
  v66 = (char *)v81 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85(v66, v60, v10, v64);
  v100 = v84;
  v67 = sub_2487B5324();
  LODWORD(v94) = sub_2487B57C8();
  if (!os_log_type_enabled(v67, (os_log_type_t)v94))
  {

    ((void (*)(char *, uint64_t))v53)(v66, v10);
    v80 = v100;

    ((void (*)(char *, uint64_t))v96)(v61, v30);
    v62 = v99;
    goto LABEL_15;
  }
  v91 = v67;
  v68 = v10;
  v69 = swift_slowAlloc();
  v70 = swift_slowAlloc();
  v101 = v70;
  *(_DWORD *)v69 = 136315394;
  v71 = objc_msgSend(v100, sel_sampleID);
  if (v71)
  {
    v72 = v71;
    v90 = (_QWORD *)(v69 + 4);
    v73 = sub_2487B5528();
    v75 = v74;

    v104 = sub_2486EDE5C(v73, v75, &v101);
    sub_2487B593C();
    v76 = v100;

    swift_bridgeObjectRelease();
    *(_WORD *)(v69 + 12) = 2080;
    v77 = sub_2487B50B4();
    v104 = sub_2486EDE5C(v77, v78, &v101);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v53)(v66, v68);
    v79 = v91;
    _os_log_impl(&dword_2486E6000, v91, (os_log_type_t)v94, "Will create audio future for sampleID=%s file=%s", (uint8_t *)v69, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v70, -1, -1);
    MEMORY[0x24959AF80](v69, -1, -1);

    ((void (*)(char *, uint64_t))v96)(v92, v95);
    ((void (*)(id, uint64_t))v53)(v99, v68);
    ((void (*)(uint64_t, uint64_t))v53)(v93, v68);
    return;
  }
LABEL_17:

  __break(1u);
}

void sub_24874EE24(unint64_t a1, uint64_t *a2, void (*a3)(_QWORD))
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  id v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  id v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v45;

  v4 = a1;
  v5 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_2487B5B64();
    swift_bridgeObjectRelease();
    if (v8)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(a2);
      v6 = sub_2487B5A98();
      if (!v5)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v7 = sub_2487B5B64();
      swift_bridgeObjectRelease();
      if (!v7)
        return;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v6 = MEMORY[0x24BEE4B08];
  if (v5)
    goto LABEL_8;
LABEL_4:
  v7 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v7)
    return;
LABEL_9:
  v9 = v6 + 56;
  v45 = v7;
  if ((v4 & 0xC000000000000001) != 0)
  {
    v10 = 0;
    v42 = v4;
    while (1)
    {
      v11 = MEMORY[0x24959A434](v10, v4);
      v12 = __OFADD__(v10++, 1);
      if (v12)
      {
        __break(1u);
        goto LABEL_37;
      }
      v13 = v11;
      v14 = sub_2487B58F4();
      v15 = -1 << *(_BYTE *)(v6 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      v18 = *(_QWORD *)(v9 + 8 * (v16 >> 6));
      v19 = 1 << v16;
      if (((1 << v16) & v18) != 0)
      {
        a3(0);
        v20 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v16);
        v21 = sub_2487B5900();

        if ((v21 & 1) != 0)
        {
LABEL_11:
          swift_unknownObjectRelease();
          v4 = v42;
          goto LABEL_12;
        }
        v22 = ~v15;
        while (1)
        {
          v16 = (v16 + 1) & v22;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v9 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          if ((v18 & (1 << v16)) == 0)
            break;
          v23 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v16);
          v24 = sub_2487B5900();

          if ((v24 & 1) != 0)
            goto LABEL_11;
        }
        v4 = v42;
      }
      *(_QWORD *)(v9 + 8 * v17) = v19 | v18;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v16) = v13;
      v25 = *(_QWORD *)(v6 + 16);
      v12 = __OFADD__(v25, 1);
      v26 = v25 + 1;
      if (v12)
        goto LABEL_38;
      *(_QWORD *)(v6 + 16) = v26;
LABEL_12:
      if (v10 == v45)
        return;
    }
  }
  v27 = 0;
  v43 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v27 != v43)
  {
    v28 = *(id *)(v4 + 32 + 8 * v27);
    v29 = sub_2487B58F4();
    v30 = -1 << *(_BYTE *)(v6 + 32);
    v31 = v29 & ~v30;
    v32 = v31 >> 6;
    v33 = *(_QWORD *)(v9 + 8 * (v31 >> 6));
    v34 = 1 << v31;
    if (((1 << v31) & v33) != 0)
    {
      a3(0);
      v35 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v31);
      v36 = sub_2487B5900();

      if ((v36 & 1) != 0)
        goto LABEL_24;
      v37 = ~v30;
      v31 = (v31 + 1) & v37;
      v32 = v31 >> 6;
      v33 = *(_QWORD *)(v9 + 8 * (v31 >> 6));
      v34 = 1 << v31;
      if ((v33 & (1 << v31)) != 0)
      {
        while (1)
        {
          v38 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v31);
          v39 = sub_2487B5900();

          if ((v39 & 1) != 0)
            break;
          v31 = (v31 + 1) & v37;
          v32 = v31 >> 6;
          v33 = *(_QWORD *)(v9 + 8 * (v31 >> 6));
          v34 = 1 << v31;
          if ((v33 & (1 << v31)) == 0)
            goto LABEL_32;
        }
LABEL_24:

        v7 = v45;
        goto LABEL_25;
      }
LABEL_32:
      v7 = v45;
    }
    *(_QWORD *)(v9 + 8 * v32) = v34 | v33;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v31) = v28;
    v40 = *(_QWORD *)(v6 + 16);
    v12 = __OFADD__(v40, 1);
    v41 = v40 + 1;
    if (v12)
      goto LABEL_39;
    *(_QWORD *)(v6 + 16) = v41;
LABEL_25:
    if (++v27 == v7)
      return;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

uint64_t sub_24874F188()
{
  uint64_t v0;

  return sub_248749EE0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_24874F190()
{
  return swift_deallocObject();
}

uint64_t sub_24874F1A0(void *a1)
{
  uint64_t v1;

  return sub_248746EC8(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t objectdestroy_110Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2487B5228();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24874F250(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_2487B5228() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  return sub_248743B7C(a1, *(char **)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(void (**)(char *, uint64_t))(v1 + 32), *(unsigned __int8 *)(v1 + 40), v1 + v4, *(_QWORD *)(v1 + ((v5 + 7) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v1 + ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_24874F2D8(unint64_t a1)
{
  uint64_t v1;

  return sub_248742C1C(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_24874F2E0()
{
  unint64_t result;

  result = qword_25777D160;
  if (!qword_25777D160)
  {
    result = MEMORY[0x24959AEB4](&protocol conformance descriptor for TTSVBVoiceModelFlags, &type metadata for TTSVBVoiceModelFlags);
    atomic_store(result, (unint64_t *)&qword_25777D160);
  }
  return result;
}

void sub_24874F324(uint64_t a1@<X8>)
{
  sub_24874F338(a1);
}

void sub_24874F338(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_24873195C(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_DWORD *)(v1 + 56), a1);
}

uint64_t sub_24874F360()
{
  return objectdestroy_83Tm((void (*)(_QWORD))MEMORY[0x24BEE4CA0]);
}

uint64_t sub_24874F36C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, uint64_t);
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(unint64_t, uint64_t);
  unint64_t v12;

  v1 = (int *)type metadata accessor for TTSVBVoiceModel();
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + v1[5];
  v6 = sub_2487B5228();
  v7 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(v0 + v3 + v1[6], v6);
  v8 = v0 + v3 + v1[7];
  v9 = sub_2487B51D4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(unint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = v0 + v3 + v1[18];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9))
    v11(v12, v9);

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24874F508(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v4 = *(_QWORD *)(type metadata accessor for TTSVBVoiceModel() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_248745FE4(a2, v2 + v5, *(_QWORD *)(v2 + v6), *(_QWORD *)(v2 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_24874F568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;

  v1 = type metadata accessor for TTSVBError(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = v0 + ((v2 + 32) & ~v2);
  sub_2486F507C(*(_QWORD *)v3, *(_QWORD *)(v3 + 8), *(_BYTE *)(v3 + 16));
  v4 = v3 + *(int *)(v1 + 20);
  type metadata accessor for TTSVBError.Reason(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 7u:
    case 0x16u:
    case 0x1Au:
    case 0x1Cu:
      swift_bridgeObjectRelease();
      break;
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xEu:
    case 0xFu:
    case 0x10u:
    case 0x11u:
    case 0x12u:
    case 0x13u:
    case 0x14u:
    case 0x18u:
      v5 = sub_2487B50CC();
      goto LABEL_3;
    case 0xCu:
    case 0xDu:
      v7 = sub_2487B50CC();
      v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
      v8(v4, v7);
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25777C260);
      v8(v4 + *(int *)(v9 + 48), v7);
      break;
    case 0x15u:
    case 0x17u:
    case 0x1Bu:
    case 0x1Du:
      v5 = sub_2487B5228();
LABEL_3:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      break;
    default:
      break;
  }

  return swift_deallocObject();
}

uint64_t sub_24874F6AC()
{
  return sub_248750CA4(type metadata accessor for TTSVBError, (uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_24874698C);
}

void sub_24874F6C0()
{
  uint64_t v0;

  sub_24874276C(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_24874F6DC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;

  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777C9B0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2487BD7B0;
  sub_24870A34C(0, &qword_25777C9A8);
  v6 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE0D00];
  v7 = sub_2487189D4();
  *(_QWORD *)(v5 + 32) = 1701667182;
  *(_QWORD *)(v5 + 40) = 0xE400000000000000;
  *(_QWORD *)(v5 + 96) = v6;
  *(_QWORD *)(v5 + 104) = v7;
  *(_QWORD *)(v5 + 64) = v7;
  *(_QWORD *)(v5 + 72) = v4;
  *(_QWORD *)(v5 + 80) = v3;
  swift_bridgeObjectRetain();
  v8 = (id)sub_2487B578C();
  objc_msgSend(a1, sel_setPredicate_, v8);

}

uint64_t sub_24874F7C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = sub_2487B5228();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28) - 8);
  v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (((((((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + v7 + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);

  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v10 = sub_2487B50CC();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v0 + v6, 1, v10))
    (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v0 + v6, v10);
  swift_bridgeObjectRelease();
  v12 = sub_2487B51D4();
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v0 + v9, 1, v12))
    (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v0 + v9, v12);
  return swift_deallocObject();
}

uint64_t sub_24874F954(double a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(sub_2487B5228() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28) - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 11) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 11) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38) - 8) + 80);
  return sub_2487419D0(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1, *(float *)(v1 + v9), *(float *)(v1 + v9 + 4), *(float *)(v1 + v10), *(float *)(v1 + v10 + 4), v1 + v4, v1 + v7, *(_QWORD *)(v1 + v8), *(_QWORD *)(v1 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), v1 + ((v11 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v11));
}

void sub_24874FA5C()
{
  sub_24874FD94();
}

uint64_t sub_24874FA74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(sub_2487B50CC() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v0 + v3;
  v5 = (uint64_t *)(v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  v6 = *v5;
  v7 = v5[1];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_248750F10;
  return sub_248742004((uint64_t)v8, v9, v10, v4, v6, v7);
}

uint64_t sub_24874FB00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_24874FB70;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_25777D180 + dword_25777D180))(a1, v4);
}

uint64_t sub_24874FB70()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_24874FBB8()
{
  uint64_t v0;

  sub_248741DB4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(double *)(v0 + 56), *(float *)(v0 + 80), *(float *)(v0 + 84), *(float *)(v0 + 88), *(float *)(v0 + 92), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
}

uint64_t objectdestroy_215Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = sub_2487B5228();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28) - 8);
  v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (((((((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + v7 + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);

  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v10 = sub_2487B50CC();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v0 + v6, 1, v10))
    (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v0 + v6, v10);
  swift_bridgeObjectRelease();
  v12 = sub_2487B51D4();
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v0 + v9, 1, v12))
    (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v0 + v9, v12);
  return swift_deallocObject();
}

void sub_24874FD94()
{
  uint64_t v0;

  sub_2487B5228();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
  sub_248741C80(*(_QWORD *)(v0 + 16));
}

uint64_t sub_24874FEA0()
{
  return objectdestroy_89Tm((uint64_t (*)(_QWORD))MEMORY[0x24BDCEA50], (void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t objectdestroy_89Tm(uint64_t (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = a1(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);

  a2(*(_QWORD *)(v2 + 32));
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v2 + v6, v4);
  return swift_deallocObject();
}

uint64_t sub_24874FF40(double a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_2487B5228() - 8) + 80);
  return sub_248741214(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), v1 + ((v3 + 40) & ~v3), a1);
}

void sub_24874FF88()
{
  sub_24875016C();
}

uint64_t objectdestroy_218Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2487B50CC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_248750034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(sub_2487B50CC() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v0 + v3;
  v5 = (uint64_t *)(v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  v6 = *v5;
  v7 = v5[1];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_24874FB70;
  return sub_248742004((uint64_t)v8, v9, v10, v4, v6, v7);
}

void sub_2487500C0()
{
  uint64_t v0;

  sub_248741420(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(double *)(v0 + 56));
}

uint64_t objectdestroy_235Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2487B5228();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_24875016C()
{
  uint64_t v0;

  sub_2487B5228();
  sub_24874133C(*(_QWORD *)(v0 + 16));
}

void sub_2487501C8(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  __int128 *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = v1[2];
  v5 = (void *)v1[3];
  v6 = (__int128 *)v1[5];
  type metadata accessor for TTSVBLocalVoiceMO();
  v7 = (void *)static TTSVBLocalVoiceMO.requireVoiceWithID(_:moc:)(v4, v5);
  if (!v2)
  {
    v8 = v7;
    sub_24874D6EC(v7, v6, v5);
    v10 = v9;
    v12 = v11;
    NSManagedObjectContext.trySave()();
    if (v13)
    {
      swift_bridgeObjectRelease();

    }
    else
    {

      *a1 = v10;
      a1[1] = v12;
    }
  }
}

uint64_t sub_248750274(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

void sub_24875029C(void *a1)
{
  id v2;

  v2 = (id)sub_2487B5504();
  objc_msgSend(a1, sel_setSampleID_, v2);

}

uint64_t sub_2487502E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24872DFD8(*(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), a1);
}

id sub_248750308(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, sel_setPredicate_, *(_QWORD *)(v1 + 16));
}

void sub_248750318(void *a1)
{
  void *v2;
  void *v3;
  id v4;

  v2 = (void *)sub_2487B5504();
  objc_msgSend(a1, sel_setName_, v2);

  v3 = (void *)sub_2487B51F8();
  objc_msgSend(a1, sel_setVoiceID_, v3);

  v4 = (id)sub_2487B5504();
  objc_msgSend(a1, sel_setLocaleID_, v4);

}

uint64_t sub_2487503C4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25445F1C8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = sub_2487B50CC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = v0 + v2;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = v3;
    sub_2486F507C(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(_BYTE *)(v7 + 16));
    v8 = type metadata accessor for TTSVBError(0);
    v9 = v7 + *(int *)(v8 + 20);
    type metadata accessor for TTSVBError.Reason(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 7u:
      case 0x16u:
      case 0x1Au:
      case 0x1Cu:
        swift_bridgeObjectRelease();
        break;
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xEu:
      case 0xFu:
      case 0x10u:
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x18u:
        (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v4);
        break;
      case 0xCu:
      case 0xDu:
        v13 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
        v13(v9, v4);
        v12 = v9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25777C260) + 48);
        v13(v12, v4);
        break;
      case 0x15u:
      case 0x17u:
      case 0x1Bu:
      case 0x1Du:
        v11 = sub_2487B5228();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
        break;
      default:
        break;
    }

    v3 = v14;
  }
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + v6 + 16) & ~v6), v4);
  return swift_deallocObject();
}

uint64_t sub_24875057C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25445F1C8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_2487B50CC() - 8) + 80);
  return sub_24873E470(v0 + v2, *(void (**)(char *))(v0 + v3), *(_QWORD *)(v0 + v3 + 8), v0 + ((v3 + v4 + 16) & ~v4));
}

void sub_2487505F4()
{
  uint64_t v0;

  sub_24873BD88(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(unsigned __int8 *)(v0 + 41), *(_QWORD *)(v0 + 48), *(void **)(v0 + 56));
}

unint64_t sub_24875061C()
{
  unint64_t result;

  result = qword_25777D1B0;
  if (!qword_25777D1B0)
  {
    result = MEMORY[0x24959AEB4](&protocol conformance descriptor for TTSVBTrainingScriptItem, &type metadata for TTSVBTrainingScriptItem);
    atomic_store(result, (unint64_t *)&qword_25777D1B0);
  }
  return result;
}

void sub_248750660(uint64_t a1, void *a2)
{
  if (a2 != (void *)1)

}

void sub_248750670()
{
  uint64_t v0;

  sub_24873B59C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_248750690()
{
  return objectdestroy_59Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_24875069C()
{
  return sub_248750BD8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24874AA58);
}

uint64_t sub_2487506A8()
{
  return objectdestroy_83Tm((void (*)(_QWORD))MEMORY[0x24BEE4CA0]);
}

uint64_t sub_2487506B4()
{
  uint64_t v0;

  return sub_24873AEBC(*(void (**)(char *))(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), &qword_25777D1B8);
}

uint64_t sub_2487506D8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2487506FC()
{
  uint64_t v0;

  return sub_24874D534(*(void (**)(_BYTE *))(v0 + 16), *(_QWORD *)(v0 + 24), (_BYTE *)(v0 + 32));
}

uint64_t sub_248750708@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;

  return sub_24873B1F4(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), a1);
}

void sub_248750720(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;

  v3 = *(void **)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777C9B0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2487BD7B0;
  sub_24870A34C(0, &qword_25777C9A8);
  *(_QWORD *)(v4 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v4 + 64) = sub_2487189D4();
  *(_QWORD *)(v4 + 32) = 0x6563696F76;
  *(_QWORD *)(v4 + 40) = 0xE500000000000000;
  *(_QWORD *)(v4 + 96) = type metadata accessor for TTSVBLocalVoiceMO();
  *(_QWORD *)(v4 + 104) = sub_2486F4CA0(&qword_25777D1A0, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBLocalVoiceMO, MEMORY[0x24BEE5BE8]);
  *(_QWORD *)(v4 + 72) = v3;
  v5 = v3;
  v6 = (id)sub_2487B578C();
  objc_msgSend(a1, sel_setPredicate_, v6);

}

uint64_t sub_24875082C()
{
  return objectdestroy_83Tm((void (*)(_QWORD))MEMORY[0x24BEE4CA0]);
}

uint64_t sub_248750838()
{
  uint64_t v0;

  return sub_24873AEBC(*(void (**)(char *))(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), &qword_25777C188);
}

uint64_t sub_24875085C()
{
  return objectdestroy_83Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_248750868()
{
  uint64_t v0;

  return sub_24873AE18(*(void (**)(_QWORD *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), &qword_25777C188);
}

uint64_t sub_248750890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_248739FF8(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_24875089C()
{
  return objectdestroy_83Tm((void (*)(_QWORD))MEMORY[0x24BEE4CA0]);
}

uint64_t sub_2487508A8()
{
  uint64_t v0;

  return sub_24873AEBC(*(void (**)(char *))(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), &qword_25777D1C8);
}

uint64_t sub_2487508CC()
{
  return objectdestroy_83Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_2487508D8()
{
  uint64_t v0;

  return sub_24873AE18(*(void (**)(_QWORD *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), &qword_25777D1C8);
}

uint64_t sub_2487508FC()
{
  uint64_t v0;

  return sub_24873A528(*(void (**)(char *))(v0 + 16));
}

void sub_248750904()
{
  uint64_t v0;

  sub_248738B54(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_BYTE **)(v0 + 32));
}

uint64_t sub_248750920()
{
  uint64_t v0;

  return sub_24874761C(*(char **)(v0 + 16));
}

uint64_t sub_248750928()
{
  return swift_deallocObject();
}

uint64_t sub_248750938()
{
  return swift_release();
}

void sub_248750940(void *a1)
{
  void *v2;
  id v3;

  v2 = (void *)sub_2487B51F8();
  objc_msgSend(a1, sel_setVoiceID_, v2);

  v3 = (id)sub_2487B5504();
  objc_msgSend(a1, sel_setName_, v3);

}

void sub_2487509B8()
{
  uint64_t v0;

  sub_248737CAC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(_QWORD, _QWORD))(v0 + 32), *(void (**)(uint64_t *))(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

void sub_2487509D8()
{
  uint64_t v0;

  sub_248736CF0(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_2487509F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_25445EDE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_248750A3C()
{
  uint64_t v0;

  sub_248734CFC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_248750A54@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2487328F4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_248750A7C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_248750AB8(uint64_t a1)
{
  uint64_t v1;

  return sub_248732DCC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(uint64_t *))(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_248750AC8()
{
  uint64_t v0;

  return sub_248732D34(*(void (**)(_QWORD *))(v0 + 16));
}

void sub_248750AD0(unint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_248733974(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_248750AEC()
{
  return objectdestroy_83Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_248750AFC()
{
  return objectdestroy_83Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_248750B08()
{
  return objectdestroy_59Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_248750B14()
{
  return sub_248750BD8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24874AE54);
}

uint64_t sub_248750B20()
{
  return objectdestroy_83Tm((void (*)(_QWORD))MEMORY[0x24BEE4CA0]);
}

uint64_t sub_248750B2C()
{
  uint64_t v0;

  return sub_24873AEBC(*(void (**)(char *))(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), &qword_25445F1C8);
}

uint64_t sub_248750B50()
{
  uint64_t v0;

  return sub_248725E98(*(void (**)(char *))(v0 + 16));
}

void sub_248750B68()
{
  uint64_t v0;

  sub_24872FAE4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_248750B80()
{
  return objectdestroy_59Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t objectdestroy_59Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();

  a1(*(_QWORD *)(v1 + 48));
  return swift_deallocObject();
}

uint64_t sub_248750BCC()
{
  return sub_248750BD8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24874A61C);
}

uint64_t sub_248750BD8(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_248750BEC()
{
  return objectdestroy_83Tm((void (*)(_QWORD))MEMORY[0x24BEE4CA0]);
}

uint64_t sub_248750BF8()
{
  uint64_t v0;

  return sub_24873AEBC(*(void (**)(char *))(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), &qword_25777C1D8);
}

uint64_t sub_248750C1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2487B5228();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_248750C90()
{
  return sub_248750CA4((uint64_t (*)(_QWORD))MEMORY[0x24BDCEA50], (uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_24874AD98);
}

uint64_t sub_248750CA4(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD, _QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + ((v3 + 32) & ~v3));
}

uint64_t sub_248750CE8()
{
  return objectdestroy_83Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t objectdestroy_83Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject();
}

uint64_t sub_248750D2C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

uint64_t objectdestroy_385Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25445F1C8) - 8) + 80);
  swift_release();
  v2 = v0 + ((v1 + 32) & ~v1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2486F507C(*(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_BYTE *)(v2 + 16));
    v3 = type metadata accessor for TTSVBError(0);
    v4 = v2 + *(int *)(v3 + 20);
    type metadata accessor for TTSVBError.Reason(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 7u:
      case 0x16u:
      case 0x1Au:
      case 0x1Cu:
        swift_bridgeObjectRelease();
        break;
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xEu:
      case 0xFu:
      case 0x10u:
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x18u:
        v5 = sub_2487B50CC();
        goto LABEL_4;
      case 0xCu:
      case 0xDu:
        v7 = sub_2487B50CC();
        v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
        v8(v4, v7);
        v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25777C260);
        v8(v4 + *(int *)(v9 + 48), v7);
        break;
      case 0x15u:
      case 0x17u:
      case 0x1Bu:
      case 0x1Du:
        v5 = sub_2487B5228();
LABEL_4:
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
        break;
      default:
        break;
    }

  }
  return swift_deallocObject();
}

uint64_t sub_248750EC0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25445F1C8) - 8) + 80);
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(v0 + ((v1 + 32) & ~v1));
}

void sub_2487510DC()
{
  sub_248750A3C();
}

void sub_2487510F8()
{
  qword_25778BAF8 = MEMORY[0x24BEE4AF8];
}

uint64_t static TTSVBLocaleInfo.availableTrainingLocales.getter()
{
  if (qword_25778BAF0 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static TTSVBLocaleInfo.availableTrainingLocales.setter(uint64_t a1)
{
  if (qword_25778BAF0 != -1)
    swift_once();
  swift_beginAccess();
  qword_25778BAF8 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static TTSVBLocaleInfo.availableTrainingLocales.modify())()
{
  if (qword_25778BAF0 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

void __swiftcall TTSVBLocaleInfo.init(siriTrainingLocaleID:asrLocaleID:ttsVoiceLocaleID:)(TextToSpeechVoiceBankingSupport::TTSVBLocaleInfo *__return_ptr retstr, Swift::String siriTrainingLocaleID, Swift::String_optional asrLocaleID, Swift::String_optional ttsVoiceLocaleID)
{
  retstr->_asrLocaleID = asrLocaleID;
  retstr->_ttsVoiceLocaleID = ttsVoiceLocaleID;
  retstr->siriTrainingLocaleID = siriTrainingLocaleID;
}

uint64_t TTSVBLocaleInfo.siriTrainingLocaleID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TTSVBLocaleInfo.asrLocaleID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  if (v0[1])
  {
    v1 = *v0;
  }
  else
  {
    v1 = 0x4E432D687ALL;
    if ((sub_2487B55D0() & 1) == 0 && (sub_2487B55D0() & 1) == 0)
      v1 = 0x53552D6E65;
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TTSVBLocaleInfo.ttsVoiceLocaleID.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 16);
  }
  else
  {
    v1 = 0x4E432D6E6D63;
    if ((sub_2487B55D0() & 1) == 0 && (sub_2487B55D0() & 1) == 0)
      v1 = 0x53552D6E65;
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TTSVBLocaleInfo.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(_QWORD *)(a1 + 40) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t TTSVBLocaleInfo.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  if (!*(_QWORD *)(v0 + 8))
  {
    sub_2487B5D74();
    if (v1)
      goto LABEL_3;
LABEL_5:
    sub_2487B5D74();
    goto LABEL_6;
  }
  sub_2487B5D74();
  swift_bridgeObjectRetain();
  sub_2487B557C();
  swift_bridgeObjectRelease();
  if (!v1)
    goto LABEL_5;
LABEL_3:
  sub_2487B5D74();
  swift_bridgeObjectRetain();
  sub_2487B557C();
  swift_bridgeObjectRelease();
LABEL_6:
  swift_bridgeObjectRetain();
  sub_2487B557C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_248751510()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000011;
  if (*v0 != 1)
    v1 = 0xD000000000000014;
  if (*v0)
    return v1;
  else
    return 0x61636F4C7273615FLL;
}

uint64_t sub_248751578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2487521D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24875159C()
{
  sub_248751D0C();
  return sub_2487B5DBC();
}

uint64_t sub_2487515C4()
{
  sub_248751D0C();
  return sub_2487B5DC8();
}

uint64_t TTSVBLocaleInfo.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[6];
  char v12;
  char v13;
  char v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777D228);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v11[3] = v1[3];
  v11[4] = v7;
  v8 = v1[4];
  v11[1] = v1[5];
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248751D0C();
  sub_2487B5DB0();
  v14 = 0;
  v9 = v11[5];
  sub_2487B5C54();
  if (!v9)
  {
    v13 = 1;
    sub_2487B5C54();
    v12 = 2;
    sub_2487B5C6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t TTSVBLocaleInfo.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 24);
  sub_2487B5D5C();
  if (!v1)
  {
    sub_2487B5D74();
    if (v2)
      goto LABEL_3;
LABEL_5:
    sub_2487B5D74();
    goto LABEL_6;
  }
  sub_2487B5D74();
  swift_bridgeObjectRetain();
  sub_2487B557C();
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_5;
LABEL_3:
  sub_2487B5D74();
  swift_bridgeObjectRetain();
  sub_2487B557C();
  swift_bridgeObjectRelease();
LABEL_6:
  swift_bridgeObjectRetain();
  sub_2487B557C();
  swift_bridgeObjectRelease();
  return sub_2487B5D98();
}

uint64_t TTSVBLocaleInfo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777D230);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248751D0C();
  sub_2487B5DA4();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v27 = 0;
  v9 = sub_2487B5BD0();
  v11 = v10;
  v24 = v9;
  v26 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_2487B5BD0();
  v14 = v13;
  v22 = v12;
  v25 = 2;
  swift_bridgeObjectRetain();
  v23 = v14;
  v15 = sub_2487B5BE8();
  v17 = v16;
  v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = v23;
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_248751A8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 24);
  sub_2487B5D5C();
  if (!v1)
  {
    sub_2487B5D74();
    if (v2)
      goto LABEL_3;
LABEL_5:
    sub_2487B5D74();
    goto LABEL_6;
  }
  sub_2487B5D74();
  swift_bridgeObjectRetain();
  sub_2487B557C();
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_5;
LABEL_3:
  sub_2487B5D74();
  swift_bridgeObjectRetain();
  sub_2487B557C();
  swift_bridgeObjectRelease();
LABEL_6:
  swift_bridgeObjectRetain();
  sub_2487B557C();
  swift_bridgeObjectRelease();
  return sub_2487B5D98();
}

uint64_t sub_248751B7C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return TTSVBLocaleInfo.init(from:)(a1, a2);
}

uint64_t sub_248751B90(_QWORD *a1)
{
  return TTSVBLocaleInfo.encode(to:)(a1);
}

uint64_t sub_248751BA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(_QWORD *)(a1 + 40) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t _s31TextToSpeechVoiceBankingSupport15TTSVBLocaleInfoV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t result;
  char v15;

  v3 = a1[1];
  v4 = a1[2];
  v6 = a1[3];
  v5 = a1[4];
  v7 = a1[5];
  v8 = a2[1];
  v9 = a2[2];
  v11 = a2[3];
  v10 = a2[4];
  v12 = a2[5];
  if (!v3)
  {
    if (v8)
      return 0;
    goto LABEL_8;
  }
  if (!v8)
    return 0;
  if (*a1 == *a2 && v3 == v8 || (v13 = sub_2487B5CE4(), result = 0, (v13 & 1) != 0))
  {
LABEL_8:
    if (v6)
    {
      if (v11)
      {
        if (v4 != v9 || v6 != v11)
        {
          v15 = sub_2487B5CE4();
          result = 0;
          if ((v15 & 1) == 0)
            return result;
        }
LABEL_17:
        if (v5 == v10 && v7 == v12)
          return 1;
        else
          return sub_2487B5CE4();
      }
    }
    else if (!v11)
    {
      goto LABEL_17;
    }
    return 0;
  }
  return result;
}

unint64_t sub_248751D0C()
{
  unint64_t result;

  result = qword_25778BB00[0];
  if (!qword_25778BB00[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BEAC4, &type metadata for TTSVBLocaleInfo.CodingKeys);
    atomic_store(result, qword_25778BB00);
  }
  return result;
}

unint64_t sub_248751D54()
{
  unint64_t result;

  result = qword_25777D238;
  if (!qword_25777D238)
  {
    result = MEMORY[0x24959AEB4](&protocol conformance descriptor for TTSVBLocaleInfo, &type metadata for TTSVBLocaleInfo);
    atomic_store(result, (unint64_t *)&qword_25777D238);
  }
  return result;
}

unint64_t sub_248751D9C()
{
  unint64_t result;

  result = qword_25777D240;
  if (!qword_25777D240)
  {
    result = MEMORY[0x24959AEB4](&protocol conformance descriptor for TTSVBLocaleInfo, &type metadata for TTSVBLocaleInfo);
    atomic_store(result, (unint64_t *)&qword_25777D240);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for TTSVBLocaleInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for TTSVBLocaleInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for TTSVBLocaleInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for TTSVBLocaleInfo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for TTSVBLocaleInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTSVBLocaleInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTSVBLocaleInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSVBLocaleInfo()
{
  return &type metadata for TTSVBLocaleInfo;
}

uint64_t storeEnumTagSinglePayload for TTSVBLocaleInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_248752078 + 4 * byte_2487BE8E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2487520AC + 4 * byte_2487BE8E0[v4]))();
}

uint64_t sub_2487520AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2487520B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2487520BCLL);
  return result;
}

uint64_t sub_2487520C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2487520D0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2487520D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2487520DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTSVBLocaleInfo.CodingKeys()
{
  return &type metadata for TTSVBLocaleInfo.CodingKeys;
}

unint64_t sub_2487520FC()
{
  unint64_t result;

  result = qword_25778BE90[0];
  if (!qword_25778BE90[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BEA9C, &type metadata for TTSVBLocaleInfo.CodingKeys);
    atomic_store(result, qword_25778BE90);
  }
  return result;
}

unint64_t sub_248752144()
{
  unint64_t result;

  result = qword_25778BFA0;
  if (!qword_25778BFA0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BEA0C, &type metadata for TTSVBLocaleInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25778BFA0);
  }
  return result;
}

unint64_t sub_24875218C()
{
  unint64_t result;

  result = qword_25778BFA8[0];
  if (!qword_25778BFA8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BEA34, &type metadata for TTSVBLocaleInfo.CodingKeys);
    atomic_store(result, qword_25778BFA8);
  }
  return result;
}

uint64_t sub_2487521D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x61636F4C7273615FLL && a2 == 0xEC0000004449656CLL;
  if (v2 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002487C5B20 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002487C5B40)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2487B5CE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void static TTSVBAnalytics.didRequestVoiceTraining(scriptType:trainingLocale:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  _QWORD v12[6];

  v8 = (void *)sub_2487B5504();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a1;
  v9[3] = a2;
  v9[4] = a3;
  v9[5] = a4;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_248752474;
  *(_QWORD *)(v10 + 24) = v9;
  v12[4] = sub_24874E4D0;
  v12[5] = v10;
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 1107296256;
  v12[2] = sub_248752650;
  v12[3] = &block_descriptor_2;
  v11 = _Block_copy(v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v11);

}

uint64_t sub_248752448()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_248752474()
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25777D248);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2487BD7B0;
  *(_QWORD *)(inited + 32) = 0x7954747069726373;
  *(_QWORD *)(inited + 40) = 0xEA00000000006570;
  *(_QWORD *)(inited + 48) = sub_2487B5504();
  strcpy((char *)(inited + 56), "trainingLocale");
  *(_BYTE *)(inited + 71) = -18;
  *(_QWORD *)(inited + 72) = sub_2487B5504();
  return sub_248752538(inited);
}

unint64_t sub_248752538(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777D250);
  v2 = (_QWORD *)sub_2487B5B88();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    v8 = v7;
    result = sub_248709700(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_248752650(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_248753028();
    v4 = (void *)sub_2487B545C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

void static TTSVBAnalytics.trainingEventOccurred(eventName:)(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v8[6];

  v4 = (void *)sub_2487B5504();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_2487527D8;
  *(_QWORD *)(v6 + 24) = v5;
  v8[4] = sub_248750F08;
  v8[5] = v6;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 1107296256;
  v8[2] = sub_248752650;
  v8[3] = &block_descriptor_13;
  v7 = _Block_copy(v8);
  swift_bridgeObjectRetain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v7);

}

unint64_t sub_2487527D8()
{
  return sub_248752F58(0x676E696E69617274, 0xED0000746E657645);
}

void static TTSVBAnalytics.modelTrained(version:duration:trainingLocaleID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD v14[6];

  v10 = (void *)sub_2487B5504();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  *(double *)(v11 + 32) = a5;
  *(_QWORD *)(v11 + 40) = a3;
  *(_QWORD *)(v11 + 48) = a4;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_248752950;
  *(_QWORD *)(v12 + 24) = v11;
  v14[4] = sub_248750F08;
  v14[5] = v12;
  v14[0] = MEMORY[0x24BDAC760];
  v14[1] = 1107296256;
  v14[2] = sub_248752650;
  v14[3] = &block_descriptor_23;
  v13 = _Block_copy(v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v13);

}

uint64_t sub_248752924()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_248752950()
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25777D248);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2487B7370;
  *(_QWORD *)(inited + 32) = 0x6E6F6973726576;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  *(_QWORD *)(inited + 48) = sub_2487B5504();
  *(_QWORD *)(inited + 56) = 0xD000000000000010;
  *(_QWORD *)(inited + 64) = 0x80000002487C5CB0;
  *(_QWORD *)(inited + 72) = sub_2487B5708();
  strcpy((char *)(inited + 80), "trainingLocale");
  *(_BYTE *)(inited + 95) = -18;
  *(_QWORD *)(inited + 96) = sub_2487B5504();
  return sub_248752538(inited);
}

uint64_t sub_248752A44()
{
  swift_release();
  return swift_deallocObject();
}

void static TTSVBAnalytics.sampleCaptured(spl:splThreshold:snr:snrThreshold:userScore:userScoreThreshold:)(uint64_t a1, uint64_t a2, float a3, float a4, float a5, float a6)
{
  int v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD v17[6];

  if (a1 < -32768)
  {
    __break(1u);
  }
  else if (a1 < 0x8000)
  {
    static TTSVBVoiceSampleTrainingValidity.evaluate(userScore:spl:splThreshold:snr:snrThreshold:)((_QWORD *)a1, v17, a3, a4, a5, a6);
    v12 = v17[0];
    v13 = (void *)sub_2487B5504();
    v14 = swift_allocObject();
    *(float *)(v14 + 16) = a3;
    *(float *)(v14 + 20) = a4;
    *(float *)(v14 + 24) = a5;
    *(float *)(v14 + 28) = a6;
    *(_QWORD *)(v14 + 32) = a1;
    *(_QWORD *)(v14 + 40) = a2;
    *(_DWORD *)(v14 + 48) = v12;
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = sub_248752BC8;
    *(_QWORD *)(v15 + 24) = v14;
    v17[4] = sub_248750F08;
    v17[5] = v15;
    v17[0] = MEMORY[0x24BDAC760];
    v17[1] = 1107296256;
    v17[2] = sub_248752650;
    v17[3] = &block_descriptor_33;
    v16 = _Block_copy(v17);
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v16);

    return;
  }
  __break(1u);
}

uint64_t sub_248752BB8()
{
  return swift_deallocObject();
}

unint64_t sub_248752BC8()
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25777D248);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2487BEB20;
  *(_QWORD *)(inited + 32) = 7106675;
  *(_QWORD *)(inited + 40) = 0xE300000000000000;
  *(_QWORD *)(inited + 48) = sub_2487B5720();
  strcpy((char *)(inited + 56), "splThreshold");
  *(_BYTE *)(inited + 69) = 0;
  *(_WORD *)(inited + 70) = -5120;
  *(_QWORD *)(inited + 72) = sub_2487B5720();
  *(_QWORD *)(inited + 80) = 7499379;
  *(_QWORD *)(inited + 88) = 0xE300000000000000;
  *(_QWORD *)(inited + 96) = sub_2487B5720();
  strcpy((char *)(inited + 104), "snrThreshold");
  *(_BYTE *)(inited + 117) = 0;
  *(_WORD *)(inited + 118) = -5120;
  *(_QWORD *)(inited + 120) = sub_2487B5720();
  *(_QWORD *)(inited + 128) = 0x726F635372657375;
  *(_QWORD *)(inited + 136) = 0xE900000000000065;
  *(_QWORD *)(inited + 144) = sub_2487B5768();
  *(_QWORD *)(inited + 152) = 0xD000000000000012;
  *(_QWORD *)(inited + 160) = 0x80000002487C5C90;
  *(_QWORD *)(inited + 168) = sub_2487B5768();
  *(_QWORD *)(inited + 176) = 0x64696C61567369;
  *(_QWORD *)(inited + 184) = 0xE700000000000000;
  TTSVBVoiceSampleTrainingValidity.isValid.getter();
  *(_QWORD *)(inited + 192) = sub_2487B56D8();
  *(_QWORD *)(inited + 200) = 0x6C61766E49726E73;
  *(_QWORD *)(inited + 208) = 0xEA00000000006469;
  sub_248792064();
  sub_248752FE4();
  sub_2487B59B4();
  *(_QWORD *)(inited + 216) = sub_2487B56D8();
  *(_QWORD *)(inited + 224) = 0x6C61766E496C7073;
  *(_QWORD *)(inited + 232) = 0xEA00000000006469;
  sub_24879207C();
  sub_2487B59B4();
  *(_QWORD *)(inited + 240) = sub_2487B56D8();
  *(_QWORD *)(inited + 248) = 0x6C61766E49727361;
  *(_QWORD *)(inited + 256) = 0xEA00000000006469;
  sub_24879204C();
  sub_2487B59B4();
  *(_QWORD *)(inited + 264) = sub_2487B56D8();
  return sub_248752538(inited);
}

void static TTSVBAnalytics.beganRecording(inputSourceName:)(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v8[6];

  v4 = (void *)sub_2487B5504();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_248752F38;
  *(_QWORD *)(v6 + 24) = v5;
  v8[4] = sub_248750F08;
  v8[5] = v6;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 1107296256;
  v8[2] = sub_248752650;
  v8[3] = &block_descriptor_43;
  v7 = _Block_copy(v8);
  swift_bridgeObjectRetain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v7);

}

uint64_t sub_248752F14()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_248752F38()
{
  return sub_248752F58(0x756F537475706E69, 0xEB00000000656372);
}

unint64_t sub_248752F58(uint64_t a1, uint64_t a2)
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25777D248);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2487B72B0;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  *(_QWORD *)(inited + 48) = sub_2487B5504();
  return sub_248752538(inited);
}

ValueMetadata *type metadata accessor for TTSVBAnalytics()
{
  return &type metadata for TTSVBAnalytics;
}

unint64_t sub_248752FE4()
{
  unint64_t result;

  result = qword_25777D258;
  if (!qword_25777D258)
  {
    result = MEMORY[0x24959AEB4](&protocol conformance descriptor for TTSVBVoiceSampleTrainingValidity, &type metadata for TTSVBVoiceSampleTrainingValidity);
    atomic_store(result, (unint64_t *)&qword_25777D258);
  }
  return result;
}

unint64_t sub_248753028()
{
  unint64_t result;

  result = qword_25777D260;
  if (!qword_25777D260)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25777D260);
  }
  return result;
}

id sub_248753098()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v1 = (void *)sub_2487B5504();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

id static TTSVBLocalVoiceMO.allVoicesRequest.getter()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;

  v0 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v1 = (void *)sub_2487B5504();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  __swift_instantiateConcreteTypeFromMangledName(&qword_25445F358);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_2487BD7A0;
  sub_24870A34C(0, &qword_25777C9A0);
  swift_getKeyPath();
  *(_QWORD *)(v3 + 32) = sub_2487B57EC();
  sub_2487B5690();
  v4 = (void *)sub_2487B566C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setSortDescriptors_, v4);

  return v2;
}

uint64_t static TTSVBLocalVoiceMO.findOrFetch(voiceID:moc:)(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_24870A34C(0, &qword_25777C9A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777C9B0);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_2487BD7B0;
  *(_QWORD *)(v3 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v3 + 64) = sub_2487189D4();
  *(_QWORD *)(v3 + 32) = 0x44496563696F76;
  *(_QWORD *)(v3 + 40) = 0xE700000000000000;
  v4 = sub_2487B51F8();
  *(_QWORD *)(v3 + 96) = sub_24870A34C(0, &qword_25777C9C0);
  *(_QWORD *)(v3 + 104) = sub_248718A18();
  *(_QWORD *)(v3 + 72) = v4;
  v5 = (void *)sub_2487B578C();
  v6 = type metadata accessor for TTSVBLocalVoiceMO();
  static DSO<>.findOrFetch(in:matching:)(a2, v5, v6, (uint64_t)&protocol witness table for TTSVBLocalVoiceMO);
  v8 = v7;

  return v8;
}

uint64_t type metadata accessor for TTSVBLocalVoiceMO()
{
  return objc_opt_self();
}

BOOL static TTSVBLocalVoiceMO.voiceExists(withID:moc:)(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;

  sub_24870A34C(0, &qword_25777C9A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777C9B0);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_2487BD7B0;
  *(_QWORD *)(v3 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v3 + 64) = sub_2487189D4();
  *(_QWORD *)(v3 + 32) = 0x44496563696F76;
  *(_QWORD *)(v3 + 40) = 0xE700000000000000;
  v4 = sub_2487B51F8();
  *(_QWORD *)(v3 + 96) = sub_24870A34C(0, &qword_25777C9C0);
  *(_QWORD *)(v3 + 104) = sub_248718A18();
  *(_QWORD *)(v3 + 72) = v4;
  v5 = (void *)sub_2487B578C();
  v6 = type metadata accessor for TTSVBLocalVoiceMO();
  static DSO<>.findOrFetch(in:matching:)(a2, v5, v6, (uint64_t)&protocol witness table for TTSVBLocalVoiceMO);
  v8 = v7;

  if (v8)
  return v8 != 0;
}

uint64_t static TTSVBLocalVoiceMO.requireVoiceWithID(_:moc:)(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v17[2];
  char v18;

  v4 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v17[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24870A34C(0, &qword_25777C9A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777C9B0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_2487BD7B0;
  *(_QWORD *)(v7 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v7 + 64) = sub_2487189D4();
  *(_QWORD *)(v7 + 32) = 0x44496563696F76;
  *(_QWORD *)(v7 + 40) = 0xE700000000000000;
  v8 = sub_2487B51F8();
  *(_QWORD *)(v7 + 96) = sub_24870A34C(0, &qword_25777C9C0);
  *(_QWORD *)(v7 + 104) = sub_248718A18();
  *(_QWORD *)(v7 + 72) = v8;
  v9 = (void *)sub_2487B578C();
  v10 = type metadata accessor for TTSVBLocalVoiceMO();
  static DSO<>.findOrFetch(in:matching:)(a2, v9, v10, (uint64_t)&protocol witness table for TTSVBLocalVoiceMO);
  v12 = v11;

  if (!v12)
  {
    v17[0] = 0;
    v17[1] = 0;
    v18 = 3;
    v13 = sub_2487B5228();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v6, a1, v13);
    swift_storeEnumTagMultiPayload();
    v12 = type metadata accessor for TTSVBError(0);
    sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
    swift_allocError();
    TTSVBError.init(_:_:_:)((uint64_t)v17, (uint64_t)v6, 0, v14);
    swift_willThrow();
  }
  return v12;
}

id static TTSVBLocalVoiceMO.batchDeleteRequest(forVoiceID:)()
{
  id v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  type metadata accessor for TTSVBLocalVoiceMO();
  v0 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entityName);
  sub_2487B5528();

  v1 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v2 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithEntityName_, v2);

  sub_24870A34C(0, &qword_25777C9A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777C9B0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2487BD7B0;
  *(_QWORD *)(v4 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v4 + 64) = sub_2487189D4();
  *(_QWORD *)(v4 + 32) = 0x44496563696F76;
  *(_QWORD *)(v4 + 40) = 0xE700000000000000;
  v5 = sub_2487B51F8();
  *(_QWORD *)(v4 + 96) = sub_24870A34C(0, &qword_25777C9C0);
  *(_QWORD *)(v4 + 104) = sub_248718A18();
  *(_QWORD *)(v4 + 72) = v5;
  v6 = (void *)sub_2487B578C();
  objc_msgSend(v3, sel_setPredicate_, v6);

  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBB5E8]), sel_initWithFetchRequest_, v3);
  objc_msgSend(v7, sel_setResultType_, 1);

  return v7;
}

uint64_t static TTSVBLocalVoiceMO.voiceForNamePredicate(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  sub_24870A34C(0, &qword_25777C9A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777C9B0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2487BD7B0;
  v5 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v4 + 56) = MEMORY[0x24BEE0D00];
  v6 = sub_2487189D4();
  *(_QWORD *)(v4 + 32) = 1701667182;
  *(_QWORD *)(v4 + 40) = 0xE400000000000000;
  *(_QWORD *)(v4 + 96) = v5;
  *(_QWORD *)(v4 + 104) = v6;
  *(_QWORD *)(v4 + 64) = v6;
  *(_QWORD *)(v4 + 72) = a1;
  *(_QWORD *)(v4 + 80) = a2;
  swift_bridgeObjectRetain();
  return sub_2487B578C();
}

uint64_t static TTSVBLocalVoiceMO.voiceForIDPredicate(_:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_24870A34C(0, &qword_25777C9A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777C9B0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2487BD7B0;
  *(_QWORD *)(v0 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v0 + 64) = sub_2487189D4();
  *(_QWORD *)(v0 + 32) = 0x44496563696F76;
  *(_QWORD *)(v0 + 40) = 0xE700000000000000;
  v1 = sub_2487B51F8();
  *(_QWORD *)(v0 + 96) = sub_24870A34C(0, &qword_25777C9C0);
  *(_QWORD *)(v0 + 104) = sub_248718A18();
  *(_QWORD *)(v0 + 72) = v1;
  return sub_2487B578C();
}

uint64_t sub_2487539DC@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_248754004(a1, (SEL *)&selRef_voiceID, (void (*)(void))MEMORY[0x24BDCE9F0], MEMORY[0x24BDCEA50], a2);
}

void sub_2487539F8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2487540B8(a1, a2, a3, a4, &qword_25445ED40, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA50], MEMORY[0x24BDCE9C8], (SEL *)&selRef_setVoiceID_);
}

uint64_t sub_248753A1C()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = objc_msgSend(v0, sel_samples);
  if (!v1
    || (v2 = v1,
        v3 = objc_msgSend(v1, sel_allObjects),
        v2,
        v4 = sub_2487B5684(),
        v3,
        v5 = sub_24871950C(v4, (void (*)(_QWORD))type metadata accessor for TTSVBLocalVoiceSampleMO),
        swift_bridgeObjectRelease(),
        !v5))
  {
    swift_bridgeObjectRelease();
    v5 = MEMORY[0x24BEE4AF8];
  }
  v6 = sub_248719610(v5, (void (*)(BOOL, unint64_t, uint64_t))sub_24871A514, &qword_25777D128, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBLocalVoiceSampleMO, (uint64_t)&protocol conformance descriptor for TTSVBLocalVoiceSampleMO);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_248753AFC()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = objc_msgSend(v0, sel_models);
  if (!v1
    || (v2 = v1,
        v3 = objc_msgSend(v1, sel_allObjects),
        v2,
        v4 = sub_2487B5684(),
        v3,
        v5 = sub_24871950C(v4, (void (*)(_QWORD))type metadata accessor for TTSVBLocalVoiceModelMO),
        swift_bridgeObjectRelease(),
        !v5))
  {
    swift_bridgeObjectRelease();
    v5 = MEMORY[0x24BEE4AF8];
  }
  v6 = sub_248719610(v5, (void (*)(BOOL, unint64_t, uint64_t))sub_24871A540, &qword_25777D138, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBLocalVoiceModelMO, (uint64_t)&protocol conformance descriptor for TTSVBLocalVoiceModelMO);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_248753BDC()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = objc_msgSend(v0, sel_samples);
  if (v1
    && (v2 = v1,
        v3 = objc_msgSend(v1, sel_allObjects),
        v2,
        v4 = sub_2487B5684(),
        v3,
        v5 = sub_24871950C(v4, (void (*)(_QWORD))type metadata accessor for TTSVBLocalVoiceSampleMO),
        swift_bridgeObjectRelease(),
        v5))
  {
    v19 = v5;
  }
  else
  {
    swift_bridgeObjectRelease();
    v19 = MEMORY[0x24BEE4AF8];
  }
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777D268);
  v18 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v9 = sub_2487B54F8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  v13 = sub_2487B54EC();
  v14 = MEMORY[0x24BDAC7A8](v13);
  (*(void (**)(char *, char *, uint64_t, double))(v10 + 16))((char *)&v17 - v12, (char *)&v17 - v12, v9, v14);
  sub_2487B4ED4();
  (*(void (**)(char *, uint64_t))(v10 + 8))((char *)&v17 - v12, v9);
  v20 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777D270);
  sub_2486F4954(&qword_25777D278, &qword_25777D270);
  sub_2487541A8(&qword_25777D280, &qword_25777D268);
  v15 = sub_2487B5600();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v6);
  swift_bridgeObjectRelease();
  return v15;
}

char *keypath_get_selector_sampleID()
{
  return sel_sampleID;
}

void sub_248753E34(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24871916C(a1, (SEL *)&selRef_sampleID, a2);
}

void sub_248753E40(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2487191D8(a1, a2, a3, a4, (SEL *)&selRef_setSampleID_);
}

uint64_t sub_248753E4C()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t KeyPath;
  uint64_t v11;
  _QWORD v13[2];

  v1 = objc_msgSend(v0, sel_models);
  if (!v1
    || (v2 = v1,
        v3 = objc_msgSend(v1, sel_allObjects),
        v2,
        v4 = sub_2487B5684(),
        v3,
        v5 = sub_24871950C(v4, (void (*)(_QWORD))type metadata accessor for TTSVBLocalVoiceModelMO),
        swift_bridgeObjectRelease(),
        !v5))
  {
    swift_bridgeObjectRelease();
    v5 = MEMORY[0x24BEE4AF8];
  }
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777D288);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath();
  MEMORY[0x24959984C](KeyPath, 1);
  v13[1] = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777D290);
  sub_2486F4954(&qword_25777D298, &qword_25777D290);
  sub_2487541A8(&qword_25777D2A0, &qword_25777D288);
  v11 = sub_2487B5600();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRelease();
  return v11;
}

char *keypath_get_selector_creationDate()
{
  return sel_creationDate;
}

uint64_t sub_248753FE8@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_248754004(a1, (SEL *)&selRef_creationDate, (void (*)(void))MEMORY[0x24BDCE870], MEMORY[0x24BDCE908], a2);
}

uint64_t sub_248754004@<X0>(id *a1@<X0>, SEL *a2@<X3>, void (*a3)(void)@<X4>, uint64_t (*a4)(void)@<X5>, uint64_t a5@<X8>)
{
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v8 = objc_msgSend(*a1, *a2);
  if (v8)
  {
    v9 = v8;
    a3();

    v10 = ((uint64_t (*)(_QWORD))a4)(0);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v12 = a5;
    v13 = 0;
  }
  else
  {
    v10 = a4();
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v12 = a5;
    v13 = 1;
  }
  return v11(v12, v13, 1, v10);
}

void sub_248754094(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2487540B8(a1, a2, a3, a4, &qword_25445ED38, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE908], MEMORY[0x24BDCE5D0], (SEL *)&selRef_setCreationDate_);
}

void sub_2487540B8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD), uint64_t (*a7)(void), SEL *a8)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;

  v14 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2486F4E74(a1, (uint64_t)v16, a5);
  v17 = *a2;
  v18 = a6(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18) != 1)
  {
    v20 = (void *)a7();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
  }
  objc_msgSend(v17, *a8, v20);

}

uint64_t sub_2487541A8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24959AEB4](MEMORY[0x24BDCBF28], v4);
    atomic_store(result, a1);
  }
  return result;
}

id TTSVBLocalVoiceMO.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id TTSVBLocalVoiceMO.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for TTSVBLocalVoiceMO();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id TTSVBLocalVoiceMO.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTSVBLocalVoiceMO();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_248754320@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for TTSVBLocalVoiceMO();
  result = sub_2487B5ABC();
  *a1 = result;
  return result;
}

void (*sub_24875435C(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_2487543A0(v2);
  return sub_248719B1C;
}

void (*sub_2487543A0(_QWORD *a1))(uint64_t a1, char a2)
{
  void *v1;
  size_t v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25445ED40) - 8) + 64);
  a1[1] = v3;
  v4 = malloc(v3);
  a1[2] = v4;
  v5 = objc_msgSend(v1, sel_voiceID);
  v6 = malloc(v3);
  a1[3] = v6;
  if (v5)
  {
    sub_2487B5210();

    v7 = sub_2487B5228();
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 0, 1, v7);
  }
  else
  {
    v8 = sub_2487B5228();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
  }
  sub_24871A48C((uint64_t)v6, (uint64_t)v4);
  return sub_248754494;
}

void sub_248754494(uint64_t a1, char a2)
{
  void *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;

  v3 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    MEMORY[0x24BDAC7A8](a1);
    v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2486F4E74((uint64_t)v3, (uint64_t)v5, &qword_25445ED40);
    v6 = sub_2487B5228();
    v7 = *(_QWORD *)(v6 - 8);
    v8 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      v8 = (void *)sub_2487B51F8();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
      v3 = *(void **)(a1 + 16);
    }
    v9 = *(void **)(a1 + 24);
    objc_msgSend(*(id *)a1, sel_setVoiceID_, v8);

    free(v9);
    sub_24871A4D4((uint64_t)v3);
    free(v3);
  }
  else
  {
    v10 = sub_2487B5228();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v3, 1, v10) == 1)
    {
      v12 = 0;
    }
    else
    {
      v12 = (void *)sub_2487B51F8();
      (*(void (**)(void *, uint64_t))(v11 + 8))(v3, v10);
      v3 = *(void **)(a1 + 16);
    }
    v13 = *(void **)(a1 + 24);
    objc_msgSend(*(id *)a1, sel_setVoiceID_, v12);

    free(v13);
    free(v3);
  }
}

uint64_t method lookup function for TTSVBLocalVoiceMO()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static TTSVBLocalVoiceMO.fetchRequest()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of TTSVBLocalVoiceMO.getSamples.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x58))();
}

uint64_t dispatch thunk of TTSVBLocalVoiceMO.getModels.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of TTSVBLocalVoiceMO.sortedSamples.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of TTSVBLocalVoiceMO.sortedModels.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t TTSVBAudioDescriptor.FileType.fileExtension.getter()
{
  _BYTE *v0;

  if (*v0)
    return 7758199;
  else
    return 6709603;
}

uint64_t TTSVBAudioDescriptor.FileType.fileTypeID.getter()
{
  _BYTE *v0;

  if (*v0)
    return 1463899717;
  else
    return 1667327590;
}

TextToSpeechVoiceBankingSupport::TTSVBAudioDescriptor::FileType_optional __swiftcall TTSVBAudioDescriptor.FileType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  TextToSpeechVoiceBankingSupport::TTSVBAudioDescriptor::FileType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_2487B5BAC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t sub_248754758(char *a1, char *a2)
{
  return sub_24875488C(*a1, *a2);
}

uint64_t sub_248754764(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEC00000064657373;
  v3 = 0x6572706D6F636E75;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x736F4C656C707061;
    else
      v5 = 6512993;
    if (v4 == 1)
      v6 = 0xED00007373656C73;
    else
      v6 = 0xE300000000000000;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x6572706D6F636E75;
  v6 = 0xEC00000064657373;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x736F4C656C707061;
    else
      v3 = 6512993;
    if (v7 == 1)
      v2 = 0xED00007373656C73;
    else
      v2 = 0xE300000000000000;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_2487B5CE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24875488C(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 7758199;
  else
    v2 = 6709603;
  if ((a2 & 1) != 0)
    v3 = 7758199;
  else
    v3 = 6709603;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_2487B5CE4();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_2487548F8()
{
  sub_2487B5D5C();
  sub_2487B557C();
  swift_bridgeObjectRelease();
  return sub_2487B5D98();
}

uint64_t sub_24875495C()
{
  sub_2487B557C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_248754994()
{
  sub_2487B5D5C();
  sub_2487B557C();
  swift_bridgeObjectRelease();
  return sub_2487B5D98();
}

TextToSpeechVoiceBankingSupport::TTSVBAudioDescriptor::FileType_optional sub_2487549F4(Swift::String *a1)
{
  return TTSVBAudioDescriptor.FileType.init(rawValue:)(*a1);
}

void sub_248754A00(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 6709603;
  if (*v1)
    v2 = 7758199;
  *a1 = v2;
  a1[1] = 0xE300000000000000;
}

uint64_t TTSVBAudioDescriptor.Compression.formatID.getter()
{
  char *v0;

  return *(unsigned int *)&aMcplcalaCaatts[4 * *v0];
}

TextToSpeechVoiceBankingSupport::TTSVBAudioDescriptor::Compression_optional __swiftcall TTSVBAudioDescriptor.Compression.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  TextToSpeechVoiceBankingSupport::TTSVBAudioDescriptor::Compression_optional result;
  char v5;

  v2 = v1;
  v3 = sub_2487B5BAC();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t TTSVBAudioDescriptor.Compression.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x736F4C656C707061;
  if (*v0 != 1)
    v1 = 6512993;
  if (*v0)
    return v1;
  else
    return 0x6572706D6F636E75;
}

uint64_t sub_248754AFC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_248754764(*a1, *a2);
}

uint64_t sub_248754B08()
{
  sub_2487B5D5C();
  sub_2487B557C();
  swift_bridgeObjectRelease();
  return sub_2487B5D98();
}

uint64_t sub_248754BB4()
{
  sub_2487B557C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_248754C3C()
{
  sub_2487B5D5C();
  sub_2487B557C();
  swift_bridgeObjectRelease();
  return sub_2487B5D98();
}

TextToSpeechVoiceBankingSupport::TTSVBAudioDescriptor::Compression_optional sub_248754CE4(Swift::String *a1)
{
  return TTSVBAudioDescriptor.Compression.init(rawValue:)(*a1);
}

void sub_248754CF0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEC00000064657373;
  v4 = 0xED00007373656C73;
  v5 = 0x736F4C656C707061;
  if (v2 != 1)
  {
    v5 = 6512993;
    v4 = 0xE300000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6572706D6F636E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

void TTSVBAudioDescriptor.fileType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

void TTSVBAudioDescriptor.compression.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

void *TTSVBAudioDescriptor.format.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  v2 = v1;
  return v1;
}

_BYTE *TTSVBAudioDescriptor.init(fileType:compression:format:)@<X0>(_BYTE *result@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v4;

  v4 = *a2;
  *(_BYTE *)a4 = *result;
  *(_BYTE *)(a4 + 1) = v4;
  *(_QWORD *)(a4 + 8) = a3;
  return result;
}

uint64_t TTSVBAudioDescriptor.fileExtension.getter()
{
  _BYTE *v0;

  if ((*v0 & 1) != 0)
    return 7758199;
  else
    return 6709603;
}

uint64_t TTSVBAudioDescriptor.audioFileSettings(withFormat:)(void *a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  char v16;
  _OWORD v18[2];
  __int128 v19;
  uint64_t v20;

  v2 = *v1;
  v3 = (char)v1[1];
  v4 = objc_msgSend(a1, sel_settings);
  v5 = sub_2487B5474();

  v6 = MEMORY[0x24BEE44F0];
  if (v3 != 3)
  {
    v7 = sub_2487B5528();
    v9 = v8;
    v10 = *(_DWORD *)&aMcplcalaCaatts[4 * v3];
    v20 = v6;
    LODWORD(v19) = v10;
    sub_24870A40C(&v19, v18);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_248709BA8(v18, v7, v9, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v2 != 2)
  {
    v12 = sub_2487B5528();
    v14 = v13;
    if ((v2 & 1) != 0)
      v15 = 1463899717;
    else
      v15 = 1667327590;
    v20 = v6;
    LODWORD(v19) = v15;
    sub_24870A40C(&v19, v18);
    v16 = swift_isUniquelyReferenced_nonNull_native();
    sub_248709BA8(v18, v12, v14, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5;
}

void TTSVBAudioDescriptor.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 1);
  sub_2487B5AA4();
  swift_bridgeObjectRelease();
  sub_2487B55AC();
  swift_bridgeObjectRelease();
  sub_2487B55AC();
  __asm { BR              X9 }
}

uint64_t sub_248755050()
{
  void *v0;
  id v1;
  uint64_t v3;

  sub_2487B55AC();
  swift_bridgeObjectRelease();
  sub_2487B55AC();
  if (v0)
  {
    v1 = objc_msgSend(v0, sel_description);
    sub_2487B5528();

  }
  sub_2487B55AC();
  swift_bridgeObjectRelease();
  return v3;
}

id sub_24875513C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB1818]), sel_initWithCommonFormat_sampleRate_channels_interleaved_, 3, 1, 0, 24000.0);
  word_25778C0D8 = 1;
  qword_25778C0E0 = (uint64_t)result;
  return result;
}

__int16 *sub_248755198()
{
  if (qword_25778C0D0 != -1)
    swift_once();
  return &word_25778C0D8;
}

id static TTSVBAudioDescriptor.trainingFormat.getter@<X0>(uint64_t a1@<X8>)
{
  void *v2;

  if (qword_25778C0D0 != -1)
    swift_once();
  v2 = (void *)qword_25778C0E0;
  *(_WORD *)a1 = word_25778C0D8;
  *(_QWORD *)(a1 + 8) = v2;
  return v2;
}

void *sub_248755234()
{
  return &unk_2487BEC78;
}

void static TTSVBAudioDescriptor.defaultRecordingFormat.getter(uint64_t a1@<X8>)
{
  *(_WORD *)a1 = 256;
  *(_QWORD *)(a1 + 8) = 0;
}

unint64_t sub_248755258()
{
  unint64_t result;

  result = qword_25777D2A8;
  if (!qword_25777D2A8)
  {
    result = MEMORY[0x24959AEB4](&protocol conformance descriptor for TTSVBAudioDescriptor.FileType, &type metadata for TTSVBAudioDescriptor.FileType);
    atomic_store(result, (unint64_t *)&qword_25777D2A8);
  }
  return result;
}

unint64_t sub_2487552A0()
{
  unint64_t result;

  result = qword_25777D2B0;
  if (!qword_25777D2B0)
  {
    result = MEMORY[0x24959AEB4](&protocol conformance descriptor for TTSVBAudioDescriptor.Compression, &type metadata for TTSVBAudioDescriptor.Compression);
    atomic_store(result, (unint64_t *)&qword_25777D2B0);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for TTSVBAudioDescriptor(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for TTSVBAudioDescriptor(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v3 = *(void **)(a1 + 8);
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v5 = v4;

  return a1;
}

uint64_t assignWithTake for TTSVBAudioDescriptor(uint64_t a1, uint64_t a2)
{
  void *v3;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for TTSVBAudioDescriptor(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTSVBAudioDescriptor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSVBAudioDescriptor()
{
  return &type metadata for TTSVBAudioDescriptor;
}

uint64_t storeEnumTagSinglePayload for TTSVBAudioDescriptor.FileType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24875549C + 4 * byte_2487BEC65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2487554D0 + 4 * byte_2487BEC60[v4]))();
}

uint64_t sub_2487554D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2487554D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2487554E0);
  return result;
}

uint64_t sub_2487554EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2487554F4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2487554F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248755500(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTSVBAudioDescriptor.FileType()
{
  return &type metadata for TTSVBAudioDescriptor.FileType;
}

uint64_t storeEnumTagSinglePayload for TTSVBAudioDescriptor.Compression(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_248755568 + 4 * byte_2487BEC6F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24875559C + 4 * byte_2487BEC6A[v4]))();
}

uint64_t sub_24875559C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2487555A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2487555ACLL);
  return result;
}

uint64_t sub_2487555B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2487555C0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2487555C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2487555CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTSVBAudioDescriptor.Compression()
{
  return &type metadata for TTSVBAudioDescriptor.Compression;
}

id sub_2487555F0()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v1 = (void *)sub_2487B5504();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t static TTSVBLocalVoiceSampleMO.requireSampleWithID(_:voiceID:moc:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  char v16;

  v8 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (_QWORD *)((char *)&v15[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = _s31TextToSpeechVoiceBankingSupport010TTSVBLocalD8SampleMOC11findOrFetch8sampleID05voiceN03mocACSgSS_10Foundation4UUIDVSo22NSManagedObjectContextCtFZ_0(a1, a2, a3, a4);
  if (!result)
  {
    v15[0] = 0;
    v15[1] = 0;
    v16 = 3;
    *v10 = a1;
    v10[1] = a2;
    swift_storeEnumTagMultiPayload();
    type metadata accessor for TTSVBError(0);
    sub_248757374((unint64_t *)&qword_25445ED48, 255, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
    swift_allocError();
    v13 = v12;
    swift_bridgeObjectRetain();
    TTSVBError.init(_:_:_:)((uint64_t)v15, (uint64_t)v10, 0, v13);
    return swift_willThrow();
  }
  return result;
}

void sub_248755788(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24871916C(a1, (SEL *)&selRef_bookTitle, a2);
}

void sub_248755794(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2487191D8(a1, a2, a3, a4, (SEL *)&selRef_setBookTitle_);
}

id sub_2487557A0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, sel_estimatedDuration);
  *a2 = v4;
  return result;
}

id sub_2487557D0(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setEstimatedDuration_, *a1);
}

void sub_2487557E4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24871916C(a1, (SEL *)&selRef_locale, a2);
}

void sub_2487557F0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2487191D8(a1, a2, a3, a4, (SEL *)&selRef_setLocale_);
}

id sub_2487557FC@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_paragraphIndex);
  *a2 = (_DWORD)result;
  return result;
}

id sub_24875582C(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setParagraphIndex_, *a1);
}

void sub_248755840(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24871916C(a1, (SEL *)&selRef_phonemes, a2);
}

void sub_24875584C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2487191D8(a1, a2, a3, a4, (SEL *)&selRef_setPhonemes_);
}

void sub_248755858(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24871916C(a1, (SEL *)&selRef_phrase, a2);
}

void sub_248755864(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2487191D8(a1, a2, a3, a4, (SEL *)&selRef_setPhrase_);
}

id sub_248755870@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, sel_recordingDuration);
  *a2 = v4;
  return result;
}

id sub_2487558A0(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setRecordingDuration_, *a1);
}

id sub_2487558B4@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_sentenceIndex);
  *a2 = (_DWORD)result;
  return result;
}

id sub_2487558E4(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSentenceIndex_, *a1);
}

void sub_2487558F8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24871916C(a1, (SEL *)&selRef_transcript, a2);
}

void sub_248755904(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2487191D8(a1, a2, a3, a4, (SEL *)&selRef_setTranscript_);
}

void sub_248755910(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24871916C(a1, (SEL *)&selRef_userPhrase, a2);
}

void sub_24875591C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2487191D8(a1, a2, a3, a4, (SEL *)&selRef_setUserPhrase_);
}

uint64_t sub_248755928@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(*a1, sel_recordingDate);
  if (v3)
  {
    v4 = v3;
    sub_2487B51A4();

    v5 = sub_2487B51D4();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a2;
    v8 = 0;
  }
  else
  {
    v5 = sub_2487B51D4();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a2;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

void sub_2487559AC(uint64_t a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24871CC10(a1, (uint64_t)v6);
  v7 = *a2;
  v8 = sub_2487B51D4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    v10 = (void *)sub_2487B5174();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setRecordingDate_, v10);

}

id sub_248755A88@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_userScore);
  *a2 = (_WORD)result;
  return result;
}

id sub_248755AB8(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setUserScore_, *a1);
}

id sub_248755ACC@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_voice);
  *a2 = result;
  return result;
}

id sub_248755B04(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setVoice_, *a1);
}

id sub_248755B18@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result;
  int v4;

  result = objc_msgSend(*a1, "spl");
  *a2 = v4;
  return result;
}

id sub_248755B48(_DWORD *a1, id *a2, double a3)
{
  LODWORD(a3) = *a1;
  return objc_msgSend(*a2, sel_setSpl_, a3);
}

id sub_248755B5C@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result;
  int v4;

  result = objc_msgSend(*a1, "snr");
  *a2 = v4;
  return result;
}

id sub_248755B8C(_DWORD *a1, id *a2, double a3)
{
  LODWORD(a3) = *a1;
  return objc_msgSend(*a2, sel_setSnr_, a3);
}

id sub_248755BA0@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result;
  int v4;

  result = objc_msgSend(*a1, sel_splThreshold);
  *a2 = v4;
  return result;
}

id sub_248755BD0(_DWORD *a1, id *a2, double a3)
{
  LODWORD(a3) = *a1;
  return objc_msgSend(*a2, sel_setSplThreshold_, a3);
}

id sub_248755BE4@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result;
  int v4;

  result = objc_msgSend(*a1, sel_snrThreshold);
  *a2 = v4;
  return result;
}

id sub_248755C14(_DWORD *a1, id *a2, double a3)
{
  LODWORD(a3) = *a1;
  return objc_msgSend(*a2, sel_setSnrThreshold_, a3);
}

id sub_248755C28@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_flags_);
  *a2 = (_DWORD)result;
  return result;
}

id sub_248755C58(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFlags__, *a1);
}

uint64_t sub_248755C6C@<X0>(char *a1@<X8>)
{
  void *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  void (*v24)(char *, _QWORD, uint64_t, uint64_t);
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  char *v26;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD v46[2];
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;

  v48 = a1;
  ObjectType = swift_getObjectType();
  v3 = sub_2487B533C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v46 - v9;
  v11 = objc_msgSend(v1, sel_voice, v8);
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v11, sel_voiceID);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED40);
    MEMORY[0x24BDAC7A8](v14);
    v16 = (char *)v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    v46[1] = ObjectType;
    v47 = v3;
    if (v13)
    {
      v17 = sub_2487B5228();
      v46[0] = v12;
      v18 = v4;
      v19 = v10;
      v20 = *(_QWORD **)(v17 - 8);
      MEMORY[0x24BDAC7A8](v17);
      v22 = (char *)v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_2487B5210();

      v23 = (void (*)(char *, char *, uint64_t))v20[4];
      v23(v16, v22, v17);
      v24 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v20[7];
      v24(v16, 0, 1, v17);
      v25 = (unsigned int (*)(char *, uint64_t, uint64_t))v20[6];
      v10 = v19;
      v4 = v18;
      v12 = (void *)v46[0];
      if (v25(v16, 1, v17) != 1)
      {

        v26 = v48;
        v23(v48, v16, v17);
        return ((uint64_t (*)(char *, _QWORD, uint64_t, uint64_t))v24)(v26, 0, 1, v17);
      }
    }
    else
    {
      v36 = sub_2487B5228();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v16, 1, 1, v36);
    }
    sub_2486F5008((uint64_t)v16, &qword_25445ED40);
    v37 = sub_2487B0D54();
    v38 = v47;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v10, v37, v47);
    v39 = sub_2487B5324();
    v40 = sub_2487B57D4();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      v42 = swift_slowAlloc();
      v50 = v42;
      *(_DWORD *)v41 = 136315138;
      v43 = sub_2487B5DE0();
      v49 = sub_2486EDE5C(v43, v44, &v50);
      sub_2487B593C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2486E6000, v39, v40, "'voiceID' on voice for on %s was unexpectedly nil", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v42, -1, -1);
      MEMORY[0x24959AF80](v41, -1, -1);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v47);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v38);
    }
  }
  else
  {
    v28 = sub_2487B0D54();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v28, v3);
    v29 = sub_2487B5324();
    v30 = sub_2487B57D4();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v50 = v32;
      v46[0] = v4;
      *(_DWORD *)v31 = 136315138;
      v33 = sub_2487B5DE0();
      v49 = sub_2486EDE5C(v33, v34, &v50);
      sub_2487B593C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2486E6000, v29, v30, "'voice' property on %s was unexpectedly nil", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v32, -1, -1);
      MEMORY[0x24959AF80](v31, -1, -1);

      v35 = *(void (**)(char *, uint64_t))(v46[0] + 8);
    }
    else
    {

      v35 = *(void (**)(char *, uint64_t))(v4 + 8);
    }
    v35(v6, v3);
  }
  v45 = sub_2487B5228();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v48, 1, 1, v45);
}

id TTSVBLocalVoiceSampleMO.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id TTSVBLocalVoiceSampleMO.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for TTSVBLocalVoiceSampleMO();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id TTSVBLocalVoiceSampleMO.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTSVBLocalVoiceSampleMO();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_248756290@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for TTSVBLocalVoiceSampleMO();
  result = sub_2487B5ABC();
  *a1 = result;
  return result;
}

uint64_t sub_2487562CC(uint64_t a1, uint64_t a2)
{
  return sub_248719BAC(a1, a2, (SEL *)&selRef_bookTitle);
}

void sub_2487562D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_248719C18(a1, a2, a3, a4, (SEL *)&selRef_setBookTitle_);
}

void (*sub_2487562E4(uint64_t **a1))(_QWORD *)
{
  uint64_t *v2;

  v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_248756328(v2);
  return sub_248719B1C;
}

void (*sub_248756328(uint64_t *a1))(uint64_t a1, char a2)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = (uint64_t)v1;
  v3 = objc_msgSend(v1, sel_bookTitle);
  if (v3)
  {
    v4 = v3;
    v5 = sub_2487B5528();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_24875639C;
}

void sub_24875639C(uint64_t a1, char a2)
{
  sub_248719D3C(a1, a2, (SEL *)&selRef_setBookTitle_);
}

id sub_2487563A8()
{
  void *v0;

  return objc_msgSend(v0, sel_estimatedDuration);
}

id sub_2487563B8()
{
  void *v0;

  return objc_msgSend(v0, sel_setEstimatedDuration_);
}

id (*sub_2487563C8(_QWORD *a1))(uint64_t a1)
{
  void *v1;
  uint64_t v3;

  a1[1] = v1;
  objc_msgSend(v1, sel_estimatedDuration);
  *a1 = v3;
  return sub_248756408;
}

id sub_248756408(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setEstimatedDuration_, *(double *)a1);
}

uint64_t sub_248756420(uint64_t a1, uint64_t a2)
{
  return sub_248719BAC(a1, a2, (SEL *)&selRef_locale);
}

void sub_24875642C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_248719C18(a1, a2, a3, a4, (SEL *)&selRef_setLocale_);
}

void (*sub_248756438(uint64_t **a1))(_QWORD *)
{
  uint64_t *v2;

  v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_24875647C(v2);
  return sub_248719B1C;
}

void (*sub_24875647C(uint64_t *a1))(uint64_t a1, char a2)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = (uint64_t)v1;
  v3 = objc_msgSend(v1, sel_locale);
  if (v3)
  {
    v4 = v3;
    v5 = sub_2487B5528();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_2487564F0;
}

void sub_2487564F0(uint64_t a1, char a2)
{
  sub_248719D3C(a1, a2, (SEL *)&selRef_setLocale_);
}

id sub_2487564FC()
{
  void *v0;

  return objc_msgSend(v0, sel_paragraphIndex);
}

id sub_24875650C(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setParagraphIndex_, a1);
}

id (*sub_248756520(uint64_t a1))(uint64_t a1)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_DWORD *)(a1 + 8) = objc_msgSend(v1, sel_paragraphIndex);
  return sub_248756560;
}

id sub_248756560(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setParagraphIndex_, *(unsigned int *)(a1 + 8));
}

uint64_t sub_248756578(uint64_t a1, uint64_t a2)
{
  return sub_248719BAC(a1, a2, (SEL *)&selRef_phonemes);
}

void sub_248756584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_248719C18(a1, a2, a3, a4, (SEL *)&selRef_setPhonemes_);
}

void (*sub_248756590(uint64_t **a1))(_QWORD *)
{
  uint64_t *v2;

  v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_2487565D4(v2);
  return sub_248719B1C;
}

void (*sub_2487565D4(uint64_t *a1))(uint64_t a1, char a2)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = (uint64_t)v1;
  v3 = objc_msgSend(v1, sel_phonemes);
  if (v3)
  {
    v4 = v3;
    v5 = sub_2487B5528();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_248756648;
}

void sub_248756648(uint64_t a1, char a2)
{
  sub_248719D3C(a1, a2, (SEL *)&selRef_setPhonemes_);
}

uint64_t sub_248756654(uint64_t a1, uint64_t a2)
{
  return sub_248719BAC(a1, a2, (SEL *)&selRef_phrase);
}

void sub_248756660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_248719C18(a1, a2, a3, a4, (SEL *)&selRef_setPhrase_);
}

void (*sub_24875666C(uint64_t **a1))(_QWORD *)
{
  uint64_t *v2;

  v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_2487566B0(v2);
  return sub_248719B1C;
}

void (*sub_2487566B0(uint64_t *a1))(uint64_t a1, char a2)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = (uint64_t)v1;
  v3 = objc_msgSend(v1, sel_phrase);
  if (v3)
  {
    v4 = v3;
    v5 = sub_2487B5528();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_248756724;
}

void sub_248756724(uint64_t a1, char a2)
{
  sub_248719D3C(a1, a2, (SEL *)&selRef_setPhrase_);
}

id sub_248756730()
{
  void *v0;

  return objc_msgSend(v0, sel_recordingDuration);
}

id sub_248756740()
{
  void *v0;

  return objc_msgSend(v0, sel_setRecordingDuration_);
}

id (*sub_248756750(_QWORD *a1))(uint64_t a1)
{
  void *v1;
  uint64_t v3;

  a1[1] = v1;
  objc_msgSend(v1, sel_recordingDuration);
  *a1 = v3;
  return sub_248756790;
}

id sub_248756790(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setRecordingDuration_, *(double *)a1);
}

uint64_t sub_2487567A8(uint64_t a1, uint64_t a2)
{
  return sub_248719BAC(a1, a2, (SEL *)&selRef_sampleID);
}

void sub_2487567B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_248719C18(a1, a2, a3, a4, (SEL *)&selRef_setSampleID_);
}

void (*sub_2487567C0(uint64_t **a1))(_QWORD *)
{
  uint64_t *v2;

  v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_248756804(v2);
  return sub_248719B1C;
}

void (*sub_248756804(uint64_t *a1))(uint64_t a1, char a2)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = (uint64_t)v1;
  v3 = objc_msgSend(v1, sel_sampleID);
  if (v3)
  {
    v4 = v3;
    v5 = sub_2487B5528();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_248756878;
}

void sub_248756878(uint64_t a1, char a2)
{
  sub_248719D3C(a1, a2, (SEL *)&selRef_setSampleID_);
}

id sub_248756884()
{
  void *v0;

  return objc_msgSend(v0, sel_sentenceIndex);
}

id sub_248756894(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setSentenceIndex_, a1);
}

id (*sub_2487568A8(uint64_t a1))(uint64_t a1)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_DWORD *)(a1 + 8) = objc_msgSend(v1, sel_sentenceIndex);
  return sub_2487568E8;
}

id sub_2487568E8(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setSentenceIndex_, *(unsigned int *)(a1 + 8));
}

uint64_t sub_248756900(uint64_t a1, uint64_t a2)
{
  return sub_248719BAC(a1, a2, (SEL *)&selRef_transcript);
}

void sub_24875690C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_248719C18(a1, a2, a3, a4, (SEL *)&selRef_setTranscript_);
}

void (*sub_248756918(uint64_t **a1))(_QWORD *)
{
  uint64_t *v2;

  v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_24875695C(v2);
  return sub_248719B1C;
}

void (*sub_24875695C(uint64_t *a1))(uint64_t a1, char a2)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = (uint64_t)v1;
  v3 = objc_msgSend(v1, sel_transcript);
  if (v3)
  {
    v4 = v3;
    v5 = sub_2487B5528();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_2487569D0;
}

void sub_2487569D0(uint64_t a1, char a2)
{
  sub_248719D3C(a1, a2, (SEL *)&selRef_setTranscript_);
}

uint64_t sub_2487569DC(uint64_t a1, uint64_t a2)
{
  return sub_248719BAC(a1, a2, (SEL *)&selRef_userPhrase);
}

void sub_2487569E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_248719C18(a1, a2, a3, a4, (SEL *)&selRef_setUserPhrase_);
}

void (*sub_2487569F4(uint64_t **a1))(_QWORD *)
{
  uint64_t *v2;

  v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_248756A38(v2);
  return sub_248719B1C;
}

void (*sub_248756A38(uint64_t *a1))(uint64_t a1, char a2)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = (uint64_t)v1;
  v3 = objc_msgSend(v1, sel_userPhrase);
  if (v3)
  {
    v4 = v3;
    v5 = sub_2487B5528();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_248756AAC;
}

void sub_248756AAC(uint64_t a1, char a2)
{
  sub_248719D3C(a1, a2, (SEL *)&selRef_setUserPhrase_);
}

uint64_t sub_248756AB8@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(v1, sel_recordingDate);
  if (v3)
  {
    v4 = v3;
    sub_2487B51A4();

    v5 = sub_2487B51D4();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 0;
  }
  else
  {
    v5 = sub_2487B51D4();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

void sub_248756B3C(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  int v6;
  id v7;
  id v8;
  id v9;

  v2 = v1;
  v4 = sub_2487B51D4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4);
  v7 = 0;
  if (v6 != 1)
  {
    v8 = (id)sub_2487B5174();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    v7 = v8;
  }
  v9 = v7;
  objc_msgSend(v2, sel_setRecordingDate_);

}

void (*sub_248756BD0(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_248756C14(v2);
  return sub_248719B1C;
}

void (*sub_248756C14(_QWORD *a1))(uint64_t a1, char a2)
{
  void *v1;
  size_t v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38) - 8) + 64);
  a1[1] = v3;
  v4 = malloc(v3);
  a1[2] = v4;
  v5 = objc_msgSend(v1, sel_recordingDate);
  v6 = malloc(v3);
  a1[3] = v6;
  if (v5)
  {
    sub_2487B51A4();

    v7 = sub_2487B51D4();
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 0, 1, v7);
  }
  else
  {
    v8 = sub_2487B51D4();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
  }
  sub_24871F9E0((uint64_t)v6, (uint64_t)v4);
  return sub_248756D08;
}

void sub_248756D08(uint64_t a1, char a2)
{
  void *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;

  v3 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    MEMORY[0x24BDAC7A8](a1);
    v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_24871CC10((uint64_t)v3, (uint64_t)v5);
    v6 = sub_2487B51D4();
    v7 = *(_QWORD *)(v6 - 8);
    v8 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      v8 = (void *)sub_2487B5174();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
      v3 = *(void **)(a1 + 16);
    }
    v9 = *(void **)(a1 + 24);
    objc_msgSend(*(id *)a1, sel_setRecordingDate_, v8);

    free(v9);
    sub_2486F5008((uint64_t)v3, &qword_25445ED38);
    free(v3);
  }
  else
  {
    v10 = sub_2487B51D4();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v3, 1, v10) == 1)
    {
      v12 = 0;
    }
    else
    {
      v12 = (void *)sub_2487B5174();
      (*(void (**)(void *, uint64_t))(v11 + 8))(v3, v10);
      v3 = *(void **)(a1 + 16);
    }
    v13 = *(void **)(a1 + 24);
    objc_msgSend(*(id *)a1, sel_setRecordingDate_, v12);

    free(v13);
    free(v3);
  }
}

id sub_248756EA4()
{
  void *v0;

  return objc_msgSend(v0, sel_userScore);
}

id sub_248756EC4(__int16 a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setUserScore_, a1);
}

id (*sub_248756ED8(uint64_t a1))(uint64_t a1)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_WORD *)(a1 + 8) = (unsigned __int16)objc_msgSend(v1, sel_userScore);
  return sub_248756F18;
}

id sub_248756F18(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setUserScore_, *(__int16 *)(a1 + 8));
}

id sub_248756F30()
{
  void *v0;

  return objc_msgSend(v0, "spl");
}

id sub_248756F40()
{
  void *v0;

  return objc_msgSend(v0, sel_setSpl_);
}

id (*sub_248756F50(uint64_t a1))(uint64_t a1, double a2)
{
  void *v1;
  int v3;

  *(_QWORD *)a1 = v1;
  objc_msgSend(v1, "spl");
  *(_DWORD *)(a1 + 8) = v3;
  return sub_248756F90;
}

id sub_248756F90(uint64_t a1, double a2)
{
  LODWORD(a2) = *(_DWORD *)(a1 + 8);
  return objc_msgSend(*(id *)a1, sel_setSpl_, a2);
}

id sub_248756FA8()
{
  void *v0;

  return objc_msgSend(v0, "snr");
}

id sub_248756FB8()
{
  void *v0;

  return objc_msgSend(v0, sel_setSnr_);
}

id (*sub_248756FC8(uint64_t a1))(uint64_t a1, double a2)
{
  void *v1;
  int v3;

  *(_QWORD *)a1 = v1;
  objc_msgSend(v1, "snr");
  *(_DWORD *)(a1 + 8) = v3;
  return sub_248757008;
}

id sub_248757008(uint64_t a1, double a2)
{
  LODWORD(a2) = *(_DWORD *)(a1 + 8);
  return objc_msgSend(*(id *)a1, sel_setSnr_, a2);
}

id sub_248757020()
{
  void *v0;

  return objc_msgSend(v0, sel_splThreshold);
}

id sub_248757030()
{
  void *v0;

  return objc_msgSend(v0, sel_setSplThreshold_);
}

id (*sub_248757040(uint64_t a1))(uint64_t a1, double a2)
{
  void *v1;
  int v3;

  *(_QWORD *)a1 = v1;
  objc_msgSend(v1, sel_splThreshold);
  *(_DWORD *)(a1 + 8) = v3;
  return sub_248757080;
}

id sub_248757080(uint64_t a1, double a2)
{
  LODWORD(a2) = *(_DWORD *)(a1 + 8);
  return objc_msgSend(*(id *)a1, sel_setSplThreshold_, a2);
}

id sub_248757098()
{
  void *v0;

  return objc_msgSend(v0, sel_snrThreshold);
}

id sub_2487570A8()
{
  void *v0;

  return objc_msgSend(v0, sel_setSnrThreshold_);
}

id (*sub_2487570B8(uint64_t a1))(uint64_t a1, double a2)
{
  void *v1;
  int v3;

  *(_QWORD *)a1 = v1;
  objc_msgSend(v1, sel_snrThreshold);
  *(_DWORD *)(a1 + 8) = v3;
  return sub_2487570F8;
}

id sub_2487570F8(uint64_t a1, double a2)
{
  LODWORD(a2) = *(_DWORD *)(a1 + 8);
  return objc_msgSend(*(id *)a1, sel_setSnrThreshold_, a2);
}

id sub_248757110()
{
  void *v0;

  return objc_msgSend(v0, sel_flags_);
}

id sub_248757120(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setFlags__, a1);
}

id (*sub_248757134(uint64_t a1))(uint64_t a1)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_DWORD *)(a1 + 8) = objc_msgSend(v1, sel_flags_);
  return sub_248757174;
}

id sub_248757174(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setFlags__, *(unsigned int *)(a1 + 8));
}

uint64_t sub_24875718C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x58))();
}

uint64_t _s31TextToSpeechVoiceBankingSupport010TTSVBLocalD8SampleMOC11findOrFetch8sampleID05voiceN03mocACSgSS_10Foundation4UUIDVSo22NSManagedObjectContextCtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25777C9B0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_2487BE660;
  v8 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v7 + 56) = MEMORY[0x24BEE0D00];
  v9 = sub_2487189D4();
  *(_QWORD *)(v7 + 32) = 0x4449656C706D6173;
  *(_QWORD *)(v7 + 40) = 0xE800000000000000;
  *(_QWORD *)(v7 + 96) = v8;
  *(_QWORD *)(v7 + 104) = v9;
  *(_QWORD *)(v7 + 64) = v9;
  *(_QWORD *)(v7 + 72) = a1;
  *(_QWORD *)(v7 + 80) = a2;
  sub_24870A34C(0, &qword_25777C9A8);
  *(_QWORD *)(v7 + 136) = v8;
  *(_QWORD *)(v7 + 144) = v9;
  strcpy((char *)(v7 + 112), "voice.voiceID");
  *(_WORD *)(v7 + 126) = -4864;
  swift_bridgeObjectRetain();
  v10 = sub_2487B51F8();
  *(_QWORD *)(v7 + 176) = sub_24870A34C(0, &qword_25777C9C0);
  *(_QWORD *)(v7 + 184) = sub_248718A18();
  *(_QWORD *)(v7 + 152) = v10;
  v11 = (void *)sub_2487B578C();
  v12 = type metadata accessor for TTSVBLocalVoiceSampleMO();
  static DSO<>.findOrFetch(in:matching:)(a4, v11, v12, (uint64_t)&protocol witness table for TTSVBLocalVoiceSampleMO);
  v14 = v13;

  return v14;
}

uint64_t type metadata accessor for TTSVBLocalVoiceSampleMO()
{
  return objc_opt_self();
}

uint64_t sub_248757338(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_248757374(&qword_25777D130, a2, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBLocalVoiceSampleMO, MEMORY[0x24BEE5BD8]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_248757374(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x24959AEB4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

char *keypath_get_selector_bookTitle()
{
  return sel_bookTitle;
}

char *keypath_get_selector_estimatedDuration()
{
  return sel_estimatedDuration;
}

char *keypath_get_selector_locale()
{
  return sel_locale;
}

char *keypath_get_selector_paragraphIndex()
{
  return sel_paragraphIndex;
}

char *keypath_get_selector_phonemes()
{
  return sel_phonemes;
}

char *keypath_get_selector_phrase()
{
  return sel_phrase;
}

char *keypath_get_selector_recordingDuration()
{
  return sel_recordingDuration;
}

char *keypath_get_selector_sentenceIndex()
{
  return sel_sentenceIndex;
}

char *keypath_get_selector_transcript()
{
  return sel_transcript;
}

char *keypath_get_selector_userPhrase()
{
  return sel_userPhrase;
}

char *keypath_get_selector_recordingDate()
{
  return sel_recordingDate;
}

char *keypath_get_selector_userScore()
{
  return sel_userScore;
}

char *keypath_get_selector_voice()
{
  return sel_voice;
}

void *keypath_get_selector_spl()
{
  return &sel_spl;
}

void *keypath_get_selector_snr()
{
  return &sel_snr;
}

char *keypath_get_selector_splThreshold()
{
  return sel_splThreshold;
}

char *keypath_get_selector_snrThreshold()
{
  return sel_snrThreshold;
}

char *keypath_get_selector_flags_()
{
  return sel_flags_;
}

uint64_t method lookup function for TTSVBLocalVoiceSampleMO()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static TTSVBLocalVoiceSampleMO.fetchRequest()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of TTSVBLocalVoiceSampleMO.voiceID.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x58))();
}

uint64_t TTSVBInstalledVoiceModel.subscript.getter()
{
  return swift_getAtKeyPath();
}

Swift::UInt64 __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> TTSVBInstalledVoiceModel.calculateOnDiskFileSize()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t);
  Swift::UInt64 v15;
  _QWORD v17[2];
  id v18;

  v0 = (void *)*sub_24876D91C();
  v18 = v0;
  v1 = sub_2487B50CC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v17 - v6;
  v8 = v0;
  TTSVBVoiceModel.url.getter((uint64_t)v7);
  v17[0] = 0x7461447465737341;
  v17[1] = 0xE900000000000061;
  v9 = sub_2487B4FE8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v10 + 104))(v13, *MEMORY[0x24BDCD7A8], v9, v11);
  sub_2486ED9E0();
  sub_2487B50C0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  swift_bridgeObjectRelease();
  v14 = *(void (**)(char *, uint64_t))(v2 + 8);
  v14(v7, v1);
  v15 = _TTSVBFileManager.calculateSize(ofItemAtURL:)((uint64_t)v4);
  v14(v4, v1);

  return v15;
}

uint64_t TTSVBInstalledVoiceModel.assetDataURL.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v0 = sub_2487B50CC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTSVBVoiceModel.url.getter((uint64_t)v3);
  v10[0] = 0x7461447465737341;
  v10[1] = 0xE900000000000061;
  v4 = sub_2487B4FE8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v5 + 104))(v8, *MEMORY[0x24BDCD7A8], v4, v6);
  sub_2486ED9E0();
  sub_2487B50C0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t TTSVBInstalledVoiceModel.model.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24871FA6C(v1, a1);
}

uint64_t TTSVBInstalledVoiceModel.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24870A2C4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
}

uint64_t TTSVBInstalledVoiceModel.convertToData()()
{
  uint64_t v0;

  sub_2487B4E50();
  swift_allocObject();
  sub_2487B4E44();
  type metadata accessor for TTSVBInstalledVoiceModel();
  sub_2486F4CA0(&qword_25445ECF8, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBInstalledVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBInstalledVoiceModel);
  v0 = sub_2487B4E38();
  swift_release();
  return v0;
}

uint64_t type metadata accessor for TTSVBInstalledVoiceModel()
{
  uint64_t result;

  result = qword_25445FA10;
  if (!qword_25445FA10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t TTSVBInstalledVoiceModel.init(data:)(uint64_t a1, unint64_t a2)
{
  sub_2487B4E2C();
  swift_allocObject();
  sub_2487B4E20();
  type metadata accessor for TTSVBInstalledVoiceModel();
  sub_2486F4CA0(&qword_25445ED00, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBInstalledVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBInstalledVoiceModel);
  sub_2487B4E14();
  sub_2486F4A28(a1, a2);
  return swift_release();
}

uint64_t TTSVBInstalledVoiceModel.hash(into:)()
{
  type metadata accessor for TTSVBVoiceModel();
  sub_2486F4CA0(&qword_25777D2B8, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModel);
  return sub_2487B5480();
}

uint64_t sub_248757AB4()
{
  return 0x6C65646F6DLL;
}

uint64_t sub_248757AC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2487B5CE4();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_248757B54()
{
  sub_248757CB4();
  return sub_2487B5DBC();
}

uint64_t sub_248757B7C()
{
  sub_248757CB4();
  return sub_2487B5DC8();
}

uint64_t TTSVBInstalledVoiceModel.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777D2C0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248757CB4();
  sub_2487B5DB0();
  type metadata accessor for TTSVBVoiceModel();
  sub_2486F4CA0(&qword_25777C1B0, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModel);
  sub_2487B5CA8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_248757CB4()
{
  unint64_t result;

  result = qword_25778C570[0];
  if (!qword_25778C570[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BF13C, &type metadata for TTSVBInstalledVoiceModel.CodingKeys);
    atomic_store(result, qword_25778C570);
  }
  return result;
}

uint64_t TTSVBInstalledVoiceModel.hashValue.getter()
{
  sub_2487B5D5C();
  type metadata accessor for TTSVBVoiceModel();
  sub_2486F4CA0(&qword_25777D2B8, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModel);
  sub_2487B5480();
  return sub_2487B5D98();
}

uint64_t TTSVBInstalledVoiceModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v13 = a2;
  v4 = type metadata accessor for TTSVBVoiceModel();
  MEMORY[0x24BDAC7A8](v4);
  v15 = (uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777D2C8);
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTSVBInstalledVoiceModel();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248757CB4();
  sub_2487B5DA4();
  if (!v2)
  {
    sub_2486F4CA0(&qword_25777C1A8, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModel);
    sub_2487B5C24();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
    sub_24870A2C4(v15, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
    sub_24870A2C4((uint64_t)v11, v13, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBInstalledVoiceModel);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_248757F30@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TTSVBInstalledVoiceModel.init(from:)(a1, a2);
}

uint64_t sub_248757F44(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777D2C0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248757CB4();
  sub_2487B5DB0();
  type metadata accessor for TTSVBVoiceModel();
  sub_2486F4CA0(&qword_25777C1B0, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModel);
  sub_2487B5CA8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_248758054()
{
  sub_2487B5D5C();
  type metadata accessor for TTSVBVoiceModel();
  sub_2486F4CA0(&qword_25777D2B8, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModel);
  sub_2487B5480();
  return sub_2487B5D98();
}

uint64_t sub_2487580C0()
{
  type metadata accessor for TTSVBVoiceModel();
  sub_2486F4CA0(&qword_25777D2B8, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModel);
  return sub_2487B5480();
}

uint64_t sub_248758118()
{
  sub_2487B5D5C();
  type metadata accessor for TTSVBVoiceModel();
  sub_2486F4CA0(&qword_25777D2B8, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModel);
  sub_2487B5480();
  return sub_2487B5D98();
}

uint64_t sub_248758180()
{
  return sub_2486F4CA0(&qword_25777D2D0, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBInstalledVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBInstalledVoiceModel);
}

unint64_t sub_2487581B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25777C458;
  if (!qword_25777C458)
  {
    v1 = sub_2487B5228();
    result = MEMORY[0x24959AEB4](MEMORY[0x24BDCEA80], v1);
    atomic_store(result, (unint64_t *)&qword_25777C458);
  }
  return result;
}

BOOL sub_248758200(_QWORD *a1, _QWORD *a2)
{
  return (static TTSVBVoiceModel.< infix(_:_:)(a2, a1) & 1) == 0;
}

BOOL sub_248758228(_QWORD *a1, _QWORD *a2)
{
  return (static TTSVBVoiceModel.< infix(_:_:)(a1, a2) & 1) == 0;
}

uint64_t sub_248758244(_QWORD *a1, _QWORD *a2)
{
  return static TTSVBVoiceModel.< infix(_:_:)(a2, a1);
}

char *initializeBufferWithCopyOfBuffer for TTSVBInstalledVoiceModel(char *a1, char *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  unsigned int (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  char *__dst;
  uint64_t v54;

  v4 = type metadata accessor for TTSVBVoiceModel();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v48 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v48 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    v7 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v7;
    v8 = *(int *)(v4 + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_2487B5228();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v12(&a1[v6[6]], &a2[v6[6]], v11);
    v13 = v6[7];
    v14 = &a1[v13];
    v15 = &a2[v13];
    v54 = sub_2487B51D4();
    v16 = *(_QWORD *)(v54 - 8);
    v50 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v50(v14, v15, v54);
    v17 = v6[8];
    v18 = &a1[v17];
    v19 = &a2[v17];
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v21 = v6[9];
    v22 = &a1[v21];
    v23 = &a2[v21];
    v52 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v52;
    v24 = v6[10];
    v25 = &a1[v24];
    v26 = &a2[v24];
    v27 = *((_QWORD *)v26 + 1);
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *((_QWORD *)v25 + 1) = v27;
    v28 = v6[11];
    v29 = &a1[v28];
    v30 = &a2[v28];
    v31 = *((_QWORD *)v30 + 1);
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *((_QWORD *)v29 + 1) = v31;
    v32 = v6[12];
    v33 = &a1[v32];
    v34 = &a2[v32];
    v35 = *((_QWORD *)v34 + 1);
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *((_QWORD *)v33 + 1) = v35;
    *(_QWORD *)&a1[v6[13]] = *(_QWORD *)&a2[v6[13]];
    v36 = v6[14];
    v37 = &a1[v36];
    v38 = &a2[v36];
    v39 = *((_QWORD *)v38 + 1);
    *(_QWORD *)v37 = *(_QWORD *)v38;
    *((_QWORD *)v37 + 1) = v39;
    *(_QWORD *)&a1[v6[15]] = *(_QWORD *)&a2[v6[15]];
    *(_QWORD *)&a1[v6[16]] = *(_QWORD *)&a2[v6[16]];
    v40 = v6[17];
    v41 = &a1[v40];
    v42 = &a2[v40];
    v43 = *((_QWORD *)v42 + 1);
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *((_QWORD *)v41 + 1) = v43;
    v44 = v6[18];
    __dst = &a1[v44];
    v45 = &a2[v44];
    v51 = v16;
    v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v46(v45, 1, v54))
    {
      v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
      memcpy(__dst, v45, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      v50(__dst, v45, v54);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(__dst, 0, 1, v54);
    }
    a1[v6[19]] = a2[v6[19]];
    *(_DWORD *)&a1[v6[20]] = *(_DWORD *)&a2[v6[20]];
  }
  return a1;
}

uint64_t destroy for TTSVBInstalledVoiceModel(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  void (*v11)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v2 = (int *)type metadata accessor for TTSVBVoiceModel();
  v3 = a1 + v2[5];
  v4 = sub_2487B5228();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(a1 + v2[6], v4);
  v6 = a1 + v2[7];
  v7 = sub_2487B51D4();
  v8 = *(_QWORD *)(v7 - 8);
  v11 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v11(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = a1 + v2[18];
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v11)(v9, v7);
  return result;
}

char *initializeWithCopy for TTSVBInstalledVoiceModel(char *a1, char *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  unsigned int (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *__dst;
  uint64_t v51;

  v4 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v4;
  v5 = (int *)type metadata accessor for TTSVBVoiceModel();
  v6 = v5[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_2487B5228();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v10(&a1[v5[6]], &a2[v5[6]], v9);
  v11 = v5[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v51 = sub_2487B51D4();
  v14 = *(_QWORD *)(v51 - 8);
  v47 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v47(v12, v13, v51);
  v15 = v5[8];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = *((_QWORD *)v17 + 1);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = v18;
  v19 = v5[9];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v49 = *((_QWORD *)v21 + 1);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = v49;
  v22 = v5[10];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = *((_QWORD *)v24 + 1);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = v25;
  v26 = v5[11];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = *((_QWORD *)v28 + 1);
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *((_QWORD *)v27 + 1) = v29;
  v30 = v5[12];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = *((_QWORD *)v32 + 1);
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *((_QWORD *)v31 + 1) = v33;
  *(_QWORD *)&a1[v5[13]] = *(_QWORD *)&a2[v5[13]];
  v34 = v5[14];
  v35 = &a1[v34];
  v36 = &a2[v34];
  v37 = *((_QWORD *)v36 + 1);
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *((_QWORD *)v35 + 1) = v37;
  *(_QWORD *)&a1[v5[15]] = *(_QWORD *)&a2[v5[15]];
  *(_QWORD *)&a1[v5[16]] = *(_QWORD *)&a2[v5[16]];
  v38 = v5[17];
  v39 = &a1[v38];
  v40 = &a2[v38];
  v41 = *((_QWORD *)v40 + 1);
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *((_QWORD *)v39 + 1) = v41;
  v42 = v5[18];
  __dst = &a1[v42];
  v43 = &a2[v42];
  v48 = v14;
  v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v44(v43, 1, v51))
  {
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
    memcpy(__dst, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    v47(__dst, v43, v51);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(__dst, 0, 1, v51);
  }
  a1[v5[19]] = a2[v5[19]];
  *(_DWORD *)&a1[v5[20]] = *(_DWORD *)&a2[v5[20]];
  return a1;
}

char *assignWithCopy for TTSVBInstalledVoiceModel(char *a1, char *a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  int v41;
  uint64_t v42;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for TTSVBVoiceModel();
  v5 = v4[5];
  v6 = &a1[v5];
  v7 = &a2[v5];
  v8 = sub_2487B5228();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 24);
  v9(v6, v7, v8);
  v9(&a1[v4[6]], &a2[v4[6]], v8);
  v10 = v4[7];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = sub_2487B51D4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(char *, char *, uint64_t))(v14 + 24);
  v15(v11, v12, v13);
  v16 = v4[8];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = v4[9];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = v4[10];
  v23 = &a1[v22];
  v24 = &a2[v22];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = v4[11];
  v26 = &a1[v25];
  v27 = &a2[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = v4[12];
  v29 = &a1[v28];
  v30 = &a2[v28];
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[v4[13]] = *(_QWORD *)&a2[v4[13]];
  v31 = v4[14];
  v32 = &a1[v31];
  v33 = &a2[v31];
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *((_QWORD *)v32 + 1) = *((_QWORD *)v33 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[v4[15]] = *(_QWORD *)&a2[v4[15]];
  *(_QWORD *)&a1[v4[16]] = *(_QWORD *)&a2[v4[16]];
  v34 = v4[17];
  v35 = &a1[v34];
  v36 = &a2[v34];
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = v4[18];
  v38 = &a1[v37];
  v39 = &a2[v37];
  v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v9) = v40(&a1[v37], 1, v13);
  v41 = v40(v39, 1, v13);
  if (!(_DWORD)v9)
  {
    if (!v41)
    {
      v15(v38, v39, v13);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v38, v13);
    goto LABEL_6;
  }
  if (v41)
  {
LABEL_6:
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v38, v39, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v38, 0, 1, v13);
LABEL_7:
  a1[v4[19]] = a2[v4[19]];
  *(_DWORD *)&a1[v4[20]] = *(_DWORD *)&a2[v4[20]];
  return a1;
}

char *initializeWithTake for TTSVBInstalledVoiceModel(char *a1, char *a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = (int *)type metadata accessor for TTSVBVoiceModel();
  v5 = v4[5];
  v6 = &a1[v5];
  v7 = &a2[v5];
  v8 = sub_2487B5228();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
  v9(v6, v7, v8);
  v9(&a1[v4[6]], &a2[v4[6]], v8);
  v10 = v4[7];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = sub_2487B51D4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v15(v11, v12, v13);
  *(_OWORD *)&a1[v4[8]] = *(_OWORD *)&a2[v4[8]];
  *(_OWORD *)&a1[v4[9]] = *(_OWORD *)&a2[v4[9]];
  *(_OWORD *)&a1[v4[10]] = *(_OWORD *)&a2[v4[10]];
  *(_OWORD *)&a1[v4[11]] = *(_OWORD *)&a2[v4[11]];
  *(_OWORD *)&a1[v4[12]] = *(_OWORD *)&a2[v4[12]];
  *(_QWORD *)&a1[v4[13]] = *(_QWORD *)&a2[v4[13]];
  *(_OWORD *)&a1[v4[14]] = *(_OWORD *)&a2[v4[14]];
  *(_QWORD *)&a1[v4[15]] = *(_QWORD *)&a2[v4[15]];
  *(_QWORD *)&a1[v4[16]] = *(_QWORD *)&a2[v4[16]];
  *(_OWORD *)&a1[v4[17]] = *(_OWORD *)&a2[v4[17]];
  v16 = v4[18];
  v17 = &a1[v16];
  v18 = &a2[v16];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(&a2[v16], 1, v13))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v15(v17, v18, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
  }
  a1[v4[19]] = a2[v4[19]];
  *(_DWORD *)&a1[v4[20]] = *(_DWORD *)&a2[v4[20]];
  return a1;
}

char *assignWithTake for TTSVBInstalledVoiceModel(char *a1, char *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t (*v55)(char *, uint64_t, uint64_t);
  int v56;
  uint64_t v57;

  v4 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v4;
  swift_bridgeObjectRelease();
  v5 = (int *)type metadata accessor for TTSVBVoiceModel();
  v6 = v5[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_2487B5228();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v10(&a1[v5[6]], &a2[v5[6]], v9);
  v11 = v5[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_2487B51D4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(void (**)(char *, char *, uint64_t))(v15 + 40);
  v16(v12, v13, v14);
  v17 = v5[8];
  v18 = &a1[v17];
  v19 = (uint64_t *)&a2[v17];
  v21 = *v19;
  v20 = v19[1];
  *(_QWORD *)v18 = v21;
  *((_QWORD *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  v22 = v5[9];
  v23 = &a1[v22];
  v24 = (uint64_t *)&a2[v22];
  v26 = *v24;
  v25 = v24[1];
  *(_QWORD *)v23 = v26;
  *((_QWORD *)v23 + 1) = v25;
  swift_bridgeObjectRelease();
  v27 = v5[10];
  v28 = &a1[v27];
  v29 = (uint64_t *)&a2[v27];
  v31 = *v29;
  v30 = v29[1];
  *(_QWORD *)v28 = v31;
  *((_QWORD *)v28 + 1) = v30;
  swift_bridgeObjectRelease();
  v32 = v5[11];
  v33 = &a1[v32];
  v34 = (uint64_t *)&a2[v32];
  v36 = *v34;
  v35 = v34[1];
  *(_QWORD *)v33 = v36;
  *((_QWORD *)v33 + 1) = v35;
  swift_bridgeObjectRelease();
  v37 = v5[12];
  v38 = &a1[v37];
  v39 = (uint64_t *)&a2[v37];
  v41 = *v39;
  v40 = v39[1];
  *(_QWORD *)v38 = v41;
  *((_QWORD *)v38 + 1) = v40;
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[v5[13]] = *(_QWORD *)&a2[v5[13]];
  v42 = v5[14];
  v43 = &a1[v42];
  v44 = (uint64_t *)&a2[v42];
  v46 = *v44;
  v45 = v44[1];
  *(_QWORD *)v43 = v46;
  *((_QWORD *)v43 + 1) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[v5[15]] = *(_QWORD *)&a2[v5[15]];
  *(_QWORD *)&a1[v5[16]] = *(_QWORD *)&a2[v5[16]];
  v47 = v5[17];
  v48 = &a1[v47];
  v49 = (uint64_t *)&a2[v47];
  v51 = *v49;
  v50 = v49[1];
  *(_QWORD *)v48 = v51;
  *((_QWORD *)v48 + 1) = v50;
  swift_bridgeObjectRelease();
  v52 = v5[18];
  v53 = &a1[v52];
  v54 = &a2[v52];
  v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v10) = v55(&a1[v52], 1, v14);
  v56 = v55(v54, 1, v14);
  if (!(_DWORD)v10)
  {
    if (!v56)
    {
      v16(v53, v54, v14);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v53, v14);
    goto LABEL_6;
  }
  if (v56)
  {
LABEL_6:
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v53, v54, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v53, 0, 1, v14);
LABEL_7:
  a1[v5[19]] = a2[v5[19]];
  *(_DWORD *)&a1[v5[20]] = *(_DWORD *)&a2[v5[20]];
  return a1;
}

uint64_t getEnumTagSinglePayload for TTSVBInstalledVoiceModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_248759010(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTSVBVoiceModel();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for TTSVBInstalledVoiceModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_248759058(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTSVBVoiceModel();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_248759098()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for TTSVBVoiceModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TTSVBInstalledVoiceModel.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_248759140 + 4 * byte_2487BEEE0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_248759160 + 4 * byte_2487BEEE5[v4]))();
}

_BYTE *sub_248759140(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_248759160(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_248759168(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_248759170(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_248759178(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_248759180(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TTSVBInstalledVoiceModel.CodingKeys()
{
  return &type metadata for TTSVBInstalledVoiceModel.CodingKeys;
}

unint64_t sub_2487591A0()
{
  unint64_t result;

  result = qword_25778C900[0];
  if (!qword_25778C900[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BF114, &type metadata for TTSVBInstalledVoiceModel.CodingKeys);
    atomic_store(result, qword_25778C900);
  }
  return result;
}

unint64_t sub_2487591E8()
{
  unint64_t result;

  result = qword_25778CA10;
  if (!qword_25778CA10)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BF084, &type metadata for TTSVBInstalledVoiceModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25778CA10);
  }
  return result;
}

unint64_t sub_248759230()
{
  unint64_t result;

  result = qword_25778CA18[0];
  if (!qword_25778CA18[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BF0AC, &type metadata for TTSVBInstalledVoiceModel.CodingKeys);
    atomic_store(result, qword_25778CA18);
  }
  return result;
}

uint64_t static TTSVBResultOK.== infix(_:_:)()
{
  return 1;
}

uint64_t TTSVBResultOK.hash(into:)()
{
  return sub_2487B5D68();
}

uint64_t TTSVBResultOK.hashValue.getter()
{
  sub_2487B5D5C();
  sub_2487B5D68();
  return sub_2487B5D98();
}

unint64_t sub_2487592E4()
{
  unint64_t result;

  result = qword_25777D2D8;
  if (!qword_25777D2D8)
  {
    result = MEMORY[0x24959AEB4](&protocol conformance descriptor for TTSVBResultOK, &type metadata for TTSVBResultOK);
    atomic_store(result, (unint64_t *)&qword_25777D2D8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TTSVBResultOK(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_248759368 + 4 * byte_2487BF190[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_248759388 + 4 * byte_2487BF195[v4]))();
}

_BYTE *sub_248759368(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_248759388(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_248759390(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_248759398(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2487593A0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2487593A8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TTSVBResultOK()
{
  return &type metadata for TTSVBResultOK;
}

uint64_t sub_2487593C4@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x108))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_248759404(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x24BEE4EA0] & **a2) + 0x110);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t sub_248759454()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_delegate;
  swift_beginAccess();
  return MEMORY[0x24959B01C](v1);
}

uint64_t sub_2487594A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_delegate;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_248759508(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x24959B01C](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_24875957C;
}

void sub_24875957C(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48) + 8) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

id sub_2487595F0()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id sub_248759610()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  id result;
  id v13;
  objc_class *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  objc_super v18;
  uint64_t v19;

  v1 = v0;
  v17 = sub_2487B5828();
  v2 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2487B5804();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v5);
  v7 = sub_2487B5408();
  MEMORY[0x24BDAC7A8](v7);
  *(_QWORD *)&v0[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_recognitionRequest] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_recognitionTask] = 0;
  v16 = OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_speechRecognitionQueue;
  v15 = sub_2486F47E4();
  v8 = v0;
  sub_2487B53F0();
  v19 = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F6B0, v6, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F360);
  sub_2486F4954((unint64_t *)&unk_25445F6A0, (uint64_t *)&unk_25445F360);
  sub_2487B59FC();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE5758], v17);
  v9 = sub_2487B584C();
  *(_QWORD *)&v1[v16] = v9;
  v10 = &v8[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_detectedSpeechText];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v8[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_isAssetDownloading] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v11 = &v8[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_phrase];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v8[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_recordingEnvironment] = 0;
  v8[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_finishedListening] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService__cachedRecognizer] = 0;
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDFE490]), sel_initWithTargetSerialQueue_, v9);
  if (result)
  {
    *(_QWORD *)&v8[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_userFinishedSpeakingTimer] = result;
    v13 = result;
    objc_msgSend(v13, sel_setAutomaticallyCancelPendingBlockUponSchedulingNewBlock_, 1);

    v14 = (objc_class *)type metadata accessor for TTSVBSpeechRecognitionService();
    v18.receiver = v8;
    v18.super_class = v14;
    return objc_msgSendSuper2(&v18, sel_init);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for TTSVBSpeechRecognitionService()
{
  return objc_opt_self();
}

uint64_t sub_248759910()
{
  return 233000000;
}

uint64_t sub_24875991C(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  uint64_t v3;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 128) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 144) = v2;
  v3 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(v1 + 160) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v1 + 168) = v3;
  return swift_task_switch();
}

uint64_t sub_248759940()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)objc_opt_self();
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_2487599EC;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_248759AA8;
  v3[3] = &block_descriptor_3;
  v3[4] = v2;
  objc_msgSend(v1, sel_installedLanguagesForTaskHint_completion_, 3, v3);
  return swift_continuation_await();
}

uint64_t sub_2487599EC()
{
  return swift_task_switch();
}

uint64_t sub_248759A38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = TTSVBLocaleInfo.asrLocaleID.getter();
  v4 = sub_248759AF0(v2, v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v4 & 1);
}

uint64_t sub_248759AA8(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 32);
  **(_QWORD **)(*(_QWORD *)(v1 + 64) + 40) = sub_2487B5750();
  return swift_continuation_resume();
}

uint64_t sub_248759AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_2487B5D5C();
    sub_2487B557C();
    v6 = sub_2487B5D98();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_2487B5CE4() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_2487B5CE4() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_248759C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  *(_QWORD *)(v4 + 240) = a3;
  *(_QWORD *)(v4 + 248) = v3;
  *(_QWORD *)(v4 + 232) = a2;
  *(_QWORD *)(v4 + 256) = type metadata accessor for TTSVBError.Reason(0);
  *(_QWORD *)(v4 + 264) = swift_task_alloc();
  v6 = sub_2487B52E8();
  *(_QWORD *)(v4 + 272) = v6;
  *(_QWORD *)(v4 + 280) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 288) = swift_task_alloc();
  v7 = sub_2487B52B8();
  *(_QWORD *)(v4 + 296) = v7;
  *(_QWORD *)(v4 + 304) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 312) = swift_task_alloc();
  *(_QWORD *)(v4 + 320) = swift_task_alloc();
  *(_QWORD *)(v4 + 328) = swift_task_alloc();
  v8 = sub_2487B52DC();
  *(_QWORD *)(v4 + 336) = v8;
  *(_QWORD *)(v4 + 344) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 352) = swift_task_alloc();
  *(_QWORD *)(v4 + 360) = swift_task_alloc();
  v9 = sub_2487B533C();
  *(_QWORD *)(v4 + 368) = v9;
  *(_QWORD *)(v4 + 376) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v4 + 384) = swift_task_alloc();
  *(_QWORD *)(v4 + 392) = swift_task_alloc();
  *(_QWORD *)(v4 + 400) = swift_task_alloc();
  v10 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v4 + 408) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 424) = v10;
  v11 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 440) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v4 + 448) = v11;
  return swift_task_switch();
}

void sub_248759D8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  char **v36;
  char *v37;
  char v38;
  NSObject *v39;
  os_signpost_type_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint8_t *v46;
  os_signpost_id_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  void (*v56)(uint64_t, uint64_t);
  void *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  _QWORD *v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *log;
  id v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_isAssetDownloading;
  *(_QWORD *)(v0 + 456) = OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_isAssetDownloading;
  if ((*(_BYTE *)(v1 + v2) & 1) != 0
    || (v3 = objc_msgSend((id)objc_opt_self(), sel_mainBundle),
        v4 = objc_msgSend(v3, sel_bundleIdentifier),
        *(_QWORD *)(v0 + 464) = v4,
        v3,
        !v4))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v71 = v1;
  v5 = *(_QWORD *)(v0 + 400);
  v6 = *(_QWORD *)(v0 + 368);
  v7 = *(_QWORD *)(v0 + 376);
  v69 = sub_2487B5528();
  v9 = v8;
  v10 = sub_2487B0C04();
  *(_QWORD *)(v0 + 472) = v10;
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  *(_QWORD *)(v0 + 480) = v11;
  v11(v5, v10, v6);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v12 = sub_2487B5324();
  v13 = sub_2487B57E0();
  log = v12;
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 448);
  v70 = v4;
  if (v14)
  {
    v16 = *(_QWORD *)(v0 + 440);
    v63 = *(_OWORD *)(v0 + 408);
    v64 = *(_OWORD *)(v0 + 424);
    v66 = *(_QWORD *)(v0 + 400);
    v67 = *(_QWORD *)(v0 + 376);
    v68 = *(_QWORD *)(v0 + 368);
    v17 = swift_slowAlloc();
    v65 = swift_slowAlloc();
    v75 = v65;
    *(_DWORD *)v17 = 136315394;
    v76 = v63;
    v77 = v64;
    v78 = v16;
    v79 = v15;
    v18 = TTSVBLocaleInfo.asrLocaleID.getter();
    *(_QWORD *)(v0 + 216) = sub_2486EDE5C(v18, v19, &v75);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 224) = sub_2486EDE5C(v69, v9, &v75);
    sub_2487B593C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2486E6000, log, v13, "Attempting to download speech recognition asset (%s from clientID %s if necessary.", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v65, -1, -1);
    MEMORY[0x24959AF80](v17, -1, -1);

    v20 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
    v20(v66, v68);
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 400);
    v23 = *(_QWORD *)(v0 + 368);
    v22 = *(_QWORD *)(v0 + 376);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    v20 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v20(v21, v23);
  }
  *(_QWORD *)(v0 + 488) = v20;
  v25 = *(_QWORD *)(v0 + 440);
  v24 = *(_QWORD *)(v0 + 448);
  v26 = *(_QWORD *)(v0 + 360);
  v27 = *(_QWORD *)(v0 + 336);
  v28 = *(_QWORD *)(v0 + 344);
  v29 = *(_OWORD *)(v0 + 408);
  v30 = *(_OWORD *)(v0 + 424);
  *(_BYTE *)(v71 + v2) = 1;
  v76 = v29;
  v77 = v30;
  v78 = v25;
  v79 = v24;
  TTSVBLocaleInfo.asrLocaleID.getter();
  v31 = objc_allocWithZone(MEMORY[0x24BDE9E00]);
  v32 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v33 = objc_msgSend(v31, sel_initWithLanguage_assetType_, v32, 7);
  *(_QWORD *)(v0 + 496) = v33;

  v34 = sub_2487B2E4C();
  *(_QWORD *)(v0 + 504) = v34;
  v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16);
  *(_QWORD *)(v0 + 512) = v35;
  v35(v26, v34, v27);
  v36 = sub_2487B2F04();
  *(_QWORD *)(v0 + 520) = v36;
  v37 = *v36;
  v38 = *((_BYTE *)v36 + 16);
  sub_2487B52AC();
  v39 = sub_2487B52C4();
  v40 = sub_2487B5864();
  v74 = v33;
  if ((sub_2487B5918() & 1) == 0)
    goto LABEL_11;
  if ((v38 & 1) == 0)
  {
    if (!v37)
    {

      __break(1u);
LABEL_11:
      v41 = *(_QWORD *)(v0 + 304);

      v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16);
LABEL_17:
      *(_QWORD *)(v0 + 528) = v42;
      v48 = *(_QWORD *)(v0 + 360);
      v50 = *(_QWORD *)(v0 + 336);
      v49 = *(_QWORD *)(v0 + 344);
      v51 = *(_QWORD *)(v0 + 328);
      v52 = *(_QWORD *)(v0 + 296);
      v53 = *(_QWORD *)(v0 + 304);
      v54 = *(_QWORD *)(v0 + 240);
      v72 = *(_QWORD *)(v0 + 232);
      v42(*(_QWORD *)(v0 + 320), v51, v52);
      sub_2487B530C();
      swift_allocObject();
      *(_QWORD *)(v0 + 536) = sub_2487B5300();
      v55 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
      *(_QWORD *)(v0 + 544) = v55;
      v55(v51, v52);
      v56 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
      *(_QWORD *)(v0 + 552) = v56;
      v56(v48, v50);
      v57 = (void *)objc_opt_self();
      v58 = swift_allocObject();
      *(_QWORD *)(v58 + 16) = v72;
      *(_QWORD *)(v58 + 24) = v54;
      *(_QWORD *)(v0 + 112) = sub_24875D168;
      *(_QWORD *)(v0 + 120) = v58;
      v59 = MEMORY[0x24BDAC760];
      *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
      *(_QWORD *)(v0 + 88) = 1107296256;
      *(_QWORD *)(v0 + 96) = sub_248725E5C;
      *(_QWORD *)(v0 + 104) = &block_descriptor_1;
      v60 = _Block_copy((const void *)(v0 + 80));
      *(_QWORD *)(v0 + 560) = v60;
      swift_retain();
      swift_release();
      *(_QWORD *)(v0 + 56) = v0 + 168;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_24875A4A0;
      v61 = swift_continuation_init();
      *(_QWORD *)(v0 + 128) = v59;
      v62 = (_QWORD *)(v0 + 128);
      v62[1] = 0x40000000;
      v62[2] = sub_24875AEBC;
      v62[3] = &block_descriptor_2;
      v62[4] = v61;
      objc_msgSend(v57, sel_fetchAssetWithConfig_clientIdentifier_progress_completion_, v74, v70, v60, v62);
      swift_continuation_await();
      return;
    }
LABEL_16:
    v43 = *(_QWORD *)(v0 + 320);
    v44 = *(_QWORD *)(v0 + 296);
    v45 = *(_QWORD *)(v0 + 304);
    v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16);
    v42(v43, *(_QWORD *)(v0 + 328), v44);
    v46 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v46 = 0;
    v47 = sub_2487B52A0();
    _os_signpost_emit_with_name_impl(&dword_2486E6000, v39, v40, v47, v37, "", v46, 2u);
    MEMORY[0x24959AF80](v46, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v44);
    goto LABEL_17;
  }
  if ((unint64_t)v37 >> 32)
  {
    __break(1u);
  }
  else if (WORD1(v37) <= 0x10u && (v37 & 0xFFFFF800) != 0xD800)
  {
    v37 = (char *)(v0 + 184);
    goto LABEL_16;
  }

  __break(1u);
}

uint64_t sub_24875A4A0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 568) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_24875A500()
{
  uint64_t v0;
  const void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  void *v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  char v9;
  NSObject *v10;
  os_signpost_type_t v11;
  uint64_t result;
  void (*v13)(uint64_t, uint64_t);
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint8_t *v29;
  os_signpost_id_t v30;
  NSObject *v31;
  os_log_type_t v32;
  BOOL v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *log;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  os_signpost_type_t v52;
  void *v53;
  uint64_t v54[7];

  v1 = *(const void **)(v0 + 560);
  v2 = *(_QWORD *)(v0 + 520);
  v3 = *(_QWORD *)(v0 + 504);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 512);
  v5 = *(void **)(v0 + 464);
  v6 = *(_QWORD *)(v0 + 352);
  v7 = *(_QWORD *)(v0 + 336);
  swift_bridgeObjectRelease();
  _Block_release(v1);

  v4(v6, v3, v7);
  v8 = *(const char **)v2;
  v9 = *(_BYTE *)(v2 + 16);
  v10 = sub_2487B52C4();
  sub_2487B52F4();
  v11 = sub_2487B5858();
  result = sub_2487B5918();
  if ((result & 1) == 0)
    goto LABEL_5;
  v52 = v11;
  if ((v9 & 1) != 0)
  {
    if ((unint64_t)v8 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v8 >> 11 == 27)
      {
LABEL_20:
        __break(1u);
        return result;
      }
      if (v8 >> 16 <= 0x10)
      {
        v8 = (const char *)(v0 + 192);
        goto LABEL_10;
      }
    }
    __break(1u);
    goto LABEL_20;
  }
  if (v8)
  {
LABEL_10:
    v21 = *(_QWORD *)(v0 + 280);
    v22 = *(_QWORD *)(v0 + 288);
    v23 = *(_QWORD *)(v0 + 272);
    swift_retain();
    sub_2487B5318();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v21 + 88))(v22, v23) == *MEMORY[0x24BEE7810])
    {
      v24 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 280) + 8))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 272));
      v24 = "";
    }
    v13 = *(void (**)(uint64_t, uint64_t))(v0 + 544);
    v48 = *(_QWORD *)(v0 + 352);
    v50 = *(void (**)(uint64_t, uint64_t))(v0 + 552);
    v25 = *(_QWORD *)(v0 + 336);
    v27 = *(_QWORD *)(v0 + 312);
    v26 = *(_QWORD *)(v0 + 320);
    v28 = *(_QWORD *)(v0 + 296);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 528))(v26, v27, v28);
    v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v29 = 0;
    v30 = sub_2487B52A0();
    _os_signpost_emit_with_name_impl(&dword_2486E6000, v10, v52, v30, v8, v24, v29, 2u);
    MEMORY[0x24959AF80](v29, -1, -1);

    v13(v27, v28);
    v50(v48, v25);
    v19 = v26;
    v20 = v28;
    goto LABEL_14;
  }
  __break(1u);
LABEL_5:
  v13 = *(void (**)(uint64_t, uint64_t))(v0 + 552);
  v14 = *(void (**)(uint64_t, uint64_t))(v0 + 544);
  v15 = *(_QWORD *)(v0 + 352);
  v16 = *(_QWORD *)(v0 + 336);
  v17 = *(_QWORD *)(v0 + 312);
  v18 = *(_QWORD *)(v0 + 296);

  v14(v17, v18);
  v19 = v15;
  v20 = v16;
LABEL_14:
  v13(v19, v20);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 480))(*(_QWORD *)(v0 + 392), *(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 368));
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v31 = sub_2487B5324();
  v32 = sub_2487B57E0();
  v33 = os_log_type_enabled(v31, v32);
  v34 = *(void (**)(uint64_t, uint64_t))(v0 + 488);
  v53 = *(void **)(v0 + 496);
  v35 = *(_QWORD *)(v0 + 448);
  if (v33)
  {
    v36 = *(_QWORD *)(v0 + 432);
    v46 = *(_QWORD *)(v0 + 440);
    v45 = *(_QWORD *)(v0 + 424);
    log = v31;
    v38 = *(_QWORD *)(v0 + 408);
    v37 = *(_QWORD *)(v0 + 416);
    v49 = *(_QWORD *)(v0 + 368);
    v51 = *(_QWORD *)(v0 + 392);
    v39 = (uint8_t *)swift_slowAlloc();
    v40 = swift_slowAlloc();
    v54[0] = v40;
    v54[1] = v38;
    *(_DWORD *)v39 = 136315138;
    v54[2] = v37;
    v54[3] = v45;
    v54[4] = v36;
    v54[5] = v46;
    v54[6] = v35;
    v41 = TTSVBLocaleInfo.asrLocaleID.getter();
    *(_QWORD *)(v0 + 208) = sub_2486EDE5C(v41, v42, v54);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2486E6000, log, v32, "Speech recognition asset (%s downloaded successfully.", v39, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v40, -1, -1);
    MEMORY[0x24959AF80](v39, -1, -1);

    swift_release();
    v34(v51, v49);
  }
  else
  {
    v43 = *(_QWORD *)(v0 + 392);
    v44 = *(_QWORD *)(v0 + 368);
    swift_bridgeObjectRelease_n();

    swift_release();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v34(v43, v44);
  }
  *(_BYTE *)(*(_QWORD *)(v0 + 248) + *(_QWORD *)(v0 + 456)) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24875A9EC()
{
  uint64_t v0;
  const void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(const void **)(v0 + 560);
  v2 = *(void **)(v0 + 496);
  v3 = *(_QWORD *)(v0 + 472);
  v4 = *(void **)(v0 + 464);
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 480);
  v5 = *(_QWORD *)(v0 + 384);
  v6 = *(_QWORD *)(v0 + 368);
  swift_willThrow();

  swift_release();
  _Block_release(v1);

  v26(v5, v3, v6);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v7 = sub_2487B5324();
  v8 = sub_2487B57E0();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(_QWORD *)(v0 + 448);
    v10 = *(_QWORD *)(v0 + 432);
    v23 = *(_QWORD *)(v0 + 424);
    v24 = *(_QWORD *)(v0 + 440);
    v11 = *(_QWORD *)(v0 + 408);
    v12 = *(_QWORD *)(v0 + 416);
    v28 = *(_QWORD *)(v0 + 384);
    v29 = *(void (**)(uint64_t, uint64_t))(v0 + 488);
    v27 = *(_QWORD *)(v0 + 368);
    v13 = (uint8_t *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v30 = v25;
    *(_QWORD *)&v31 = v11;
    *(_DWORD *)v13 = 136315138;
    *((_QWORD *)&v31 + 1) = v12;
    v32 = v23;
    v33 = v10;
    v34 = v24;
    v35 = v9;
    v14 = TTSVBLocaleInfo.asrLocaleID.getter();
    *(_QWORD *)(v0 + 200) = sub_2486EDE5C(v14, v15, &v30);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2486E6000, v7, v8, "Speech recognition asset (%s failed to download.", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v25, -1, -1);
    MEMORY[0x24959AF80](v13, -1, -1);

    v29(v28, v27);
  }
  else
  {
    v16 = *(void (**)(uint64_t, uint64_t))(v0 + 488);
    v17 = *(_QWORD *)(v0 + 384);
    v18 = *(_QWORD *)(v0 + 368);
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v16(v17, v18);
  }
  v19 = *(void **)(v0 + 568);
  v20 = *(_QWORD *)(v0 + 264);
  *(_BYTE *)(*(_QWORD *)(v0 + 248) + *(_QWORD *)(v0 + 456)) = 0;
  v31 = xmmword_2487BF230;
  LOBYTE(v32) = 3;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for TTSVBError(0);
  sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
  swift_allocError();
  TTSVBError.init(_:_:_:)((uint64_t)&v31, v20, 0, v21);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24875AD78(uint64_t a1, void (*a2)(uint64_t, double))
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _QWORD v14[2];

  v4 = sub_2487B533C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1, v6);
  v9 = sub_2487B0C04();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v9, v4);
  v10 = sub_2487B5324();
  v11 = sub_2487B57E0();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v12 = 134217984;
    v14[1] = a1;
    sub_2487B593C();
    _os_log_impl(&dword_2486E6000, v10, v11, "Speech recognition asset download progress %ld", v12, 0xCu);
    MEMORY[0x24959AF80](v12, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_24875AEBC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25445ECF0);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v8 = sub_2487B5528();
    v9 = *(uint64_t **)(*(_QWORD *)(v3 + 64) + 40);
    *v9 = v8;
    v9[1] = v10;
    return swift_continuation_throwingResume();
  }
}

id sub_24875AF44(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  id result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  id v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v7 = a1[4];
  v6 = (uint64_t *)a1[5];
  v43 = OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService__cachedRecognizer;
  v8 = *(void **)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService__cachedRecognizer);
  if (!v8)
    goto LABEL_8;
  v41 = v8;
  v9 = objc_msgSend(v41, sel_locale);
  v42 = v6;
  v10 = v5;
  v11 = sub_2487B5270();
  v40 = &v37;
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = v4;
  v15 = v3;
  v16 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2487B5264();

  v17 = v7;
  v18 = sub_2487B5240();
  v20 = v19;
  v21 = v16;
  v3 = v15;
  v4 = v14;
  v22 = v11;
  v5 = v10;
  v6 = v42;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v21, v22);
  v47 = v2;
  v48 = v3;
  v49 = v14;
  v50 = v5;
  v51 = v17;
  v52 = v6;
  if (v18 == TTSVBLocaleInfo.asrLocaleID.getter() && v20 == v23)
  {
    swift_bridgeObjectRelease_n();
    return v41;
  }
  v25 = sub_2487B5CE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v25 & 1) != 0)
    return v41;

  v7 = v17;
LABEL_8:
  v38 = v7;
  v39 = v2;
  v26 = sub_2487B5270();
  v42 = &v37;
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v37 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = v2;
  v48 = v3;
  v49 = v4;
  v50 = v5;
  v51 = v7;
  v52 = v6;
  TTSVBLocaleInfo.asrLocaleID.getter();
  sub_2487B5234();
  v30 = objc_allocWithZone(MEMORY[0x24BDE9E40]);
  v31 = v5;
  v32 = (void *)sub_2487B524C();
  v33 = objc_msgSend(v30, sel_initWithLocale_, v32);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  if (v33)
  {
    v34 = *(void **)(v44 + v43);
    *(_QWORD *)(v44 + v43) = v33;
    v35 = v33;

    return v35;
  }
  else
  {
    v47 = 0;
    v48 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2487B5AA4();
    v45 = v47;
    v46 = v48;
    sub_2487B55AC();
    v47 = v39;
    v48 = v3;
    v49 = v4;
    v50 = v31;
    v51 = v38;
    v52 = v6;
    TTSVBLocaleInfo.asrLocaleID.getter();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2487B55AC();
    swift_bridgeObjectRelease();
    result = (id)sub_2487B5B58();
    __break(1u);
  }
  return result;
}

uint64_t sub_24875B2A8(uint64_t a1, uint64_t a2, __int128 *a3, char *a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  char v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  __int128 v22;
  void *v23;
  char *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t aBlock;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  void *v33;
  void (*v34)();
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;

  v9 = sub_2487B53D8();
  v28 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2487B5408();
  v26 = *(_QWORD *)(v12 - 8);
  v27 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a3[1];
  v36 = *a3;
  v37 = v15;
  v38 = a3[2];
  v16 = *a4;
  v17 = *(void **)&v4[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_userFinishedSpeakingTimer];
  v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v18;
  *(_QWORD *)(v19 + 24) = a1;
  *(_QWORD *)(v19 + 32) = a2;
  *(_BYTE *)(v19 + 40) = v16;
  v34 = sub_24875D1D8;
  v35 = v19;
  aBlock = MEMORY[0x24BDAC760];
  v31 = 1107296256;
  v32 = sub_2486F1008;
  v33 = &block_descriptor_12_0;
  v20 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v17, sel_afterDelay_processBlock_, v20, 5.0);
  _Block_release(v20);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v4;
  *(_BYTE *)(v21 + 24) = v16;
  *(_QWORD *)(v21 + 32) = a1;
  *(_QWORD *)(v21 + 40) = a2;
  v22 = v37;
  *(_OWORD *)(v21 + 48) = v36;
  *(_OWORD *)(v21 + 64) = v22;
  *(_OWORD *)(v21 + 80) = v38;
  v34 = sub_24875D22C;
  v35 = v21;
  aBlock = MEMORY[0x24BDAC760];
  v31 = 1107296256;
  v32 = sub_2486F1008;
  v33 = &block_descriptor_18_1;
  v23 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  v24 = v4;
  sub_24875D240((uint64_t)&v36);
  sub_2487B53E4();
  v29 = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
  sub_2486F4954((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680);
  sub_2487B59FC();
  MEMORY[0x24959A1AC](0, v14, v11, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v27);
  return swift_release();
}

void sub_24875B5A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t ObjectType;
  uint64_t v21;
  __int128 v22;
  char v23;
  char v24;

  v8 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED50);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v14 = (_QWORD *)MEMORY[0x24959B01C](a1 + 16);
  if (v14)
  {
    v15 = v14;
    v16 = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v14) + 0x108))();
    v18 = v17;

    if (v16)
    {
      v19 = a4 & 1;
      ObjectType = swift_getObjectType();
      v24 = v19;
      v22 = xmmword_2487BF230;
      v23 = 3;
      swift_storeEnumTagMultiPayload();
      TTSVBError.init(_:_:_:)((uint64_t)&v22, (uint64_t)v10, 0, (uint64_t)v13);
      v21 = type metadata accessor for TTSVBError(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v13, 0, 1, v21);
      (*(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, char *, char *, uint64_t, uint64_t))(v18 + 16))(a2, a3, 0, 0, &v24, v13, ObjectType, v18);
      swift_unknownObjectRelease();
      sub_24875D67C((uint64_t)v13);
    }
  }
}

void sub_24875B764(uint64_t a1, char a2, uint64_t a3, uint64_t a4, __int128 *a5)
{
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;
  __int128 v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;

  v9 = a2 & 1;
  v10 = sub_2487B533C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(a1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_finishedListening) = 0;
  v14 = (_QWORD *)(a1
                 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_detectedSpeechText);
  *v14 = 0;
  v14[1] = 0;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_recordingEnvironment) = v9;
  v15 = (_QWORD *)(a1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_phrase);
  *v15 = a3;
  v15[1] = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = sub_24875D814();
  v17 = OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_recognitionRequest;
  v18 = *(void **)(a1
                 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_recognitionRequest);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_recognitionRequest) = v16;

  v19 = sub_2487B0B90();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v19, v10);
  sub_24875D240((uint64_t)a5);
  sub_24875D240((uint64_t)a5);
  v20 = sub_2487B5324();
  v21 = sub_2487B57E0();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v36 = v10;
    v37 = v23;
    v24 = v23;
    v35 = v11;
    *(_DWORD *)v22 = 136315138;
    v34 = v22 + 4;
    v25 = a5[1];
    v38 = *a5;
    v39 = v25;
    v40 = a5[2];
    v26 = TTSVBLocaleInfo.asrLocaleID.getter();
    *(_QWORD *)&v38 = sub_2486EDE5C(v26, v27, &v37);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    sub_24875D9A4((uint64_t)a5);
    sub_24875D9A4((uint64_t)a5);
    _os_log_impl(&dword_2486E6000, v20, v21, "Creating ASR task with localeID: %s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v24, -1, -1);
    MEMORY[0x24959AF80](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v36);
  }
  else
  {
    sub_24875D9A4((uint64_t)a5);
    sub_24875D9A4((uint64_t)a5);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  v28 = *(void **)(a1 + v17);
  if (v28)
  {
    v29 = a5[1];
    v38 = *a5;
    v39 = v29;
    v40 = a5[2];
    v30 = v28;
    v31 = sub_24875AF44((uint64_t *)&v38);
    v32 = objc_msgSend(v31, sel_recognitionTaskWithRequest_delegate_, v30, a1);

    v33 = *(void **)(a1
                   + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_recognitionTask);
    *(_QWORD *)(a1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_recognitionTask) = v32;

  }
}

uint64_t sub_24875BA44(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  id v15;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v3 = sub_2487B53D8();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2487B5408();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(_QWORD *)&v1[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_speechRecognitionQueue];
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v1;
  *(_QWORD *)(v12 + 24) = a1;
  aBlock[4] = sub_24875D2B4;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F1008;
  aBlock[3] = &block_descriptor_24_1;
  v13 = _Block_copy(aBlock);
  v14 = v1;
  v15 = a1;
  sub_2487B53E4();
  v17[1] = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F670, v4, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
  sub_2486F4954((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680);
  sub_2487B59FC();
  MEMORY[0x24959A1AC](0, v11, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

uint64_t sub_24875BC30(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  char *v15;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v3 = sub_2487B53D8();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2487B5408();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_userFinishedSpeakingTimer], sel_cancel, v10);
  v17[0] = *(_QWORD *)&v1[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_speechRecognitionQueue];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v1;
  aBlock[4] = sub_24875D2F4;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F1008;
  aBlock[3] = &block_descriptor_30_1;
  v14 = _Block_copy(aBlock);
  v15 = v1;
  sub_2487B53E4();
  v17[1] = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F670, v4, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
  sub_2486F4954((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680);
  sub_2487B59FC();
  MEMORY[0x24959A1AC](0, v12, v7, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  return swift_release();
}

void sub_24875BE34()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  _QWORD v4[6];

  v1 = *(void **)(v0
                + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_userFinishedSpeakingTimer);
  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v4[4] = sub_24875D388;
  v4[5] = v2;
  v4[0] = MEMORY[0x24BDAC760];
  v4[1] = 1107296256;
  v4[2] = sub_2486F1008;
  v4[3] = &block_descriptor_34;
  v3 = _Block_copy(v4);
  swift_release();
  objc_msgSend(v1, sel_afterDelay_processBlock_, v3, 1.0);
  _Block_release(v3);
}

uint64_t sub_24875BEF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD aBlock[6];

  v2 = sub_2487B53D8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2487B5408();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x24959B01C](a1 + 16);
  if (result)
  {
    v11 = (void *)result;
    v12 = objc_retain(*(id *)(result
                            + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_speechRecognitionQueue));

    aBlock[4] = sub_24875D6BC;
    aBlock[5] = a1;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2486F1008;
    aBlock[3] = &block_descriptor_57_0;
    v13 = _Block_copy(aBlock);
    swift_retain();
    sub_2487B53E4();
    v16 = MEMORY[0x24BEE4AF8];
    sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    v15 = v6;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
    sub_2486F4954((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680);
    sub_2487B59FC();
    MEMORY[0x24959A1AC](0, v9, v5, v13);
    _Block_release(v13);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v15);
    return swift_release();
  }
  return result;
}

uint64_t sub_24875C204(void *a1, void *a2)
{
  char *v2;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  void *v14;
  id v15;
  id v16;
  char *v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v5 = sub_2487B53D8();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v20 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2487B5408();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(_QWORD *)&v2[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_speechRecognitionQueue];
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a1;
  v13[3] = a2;
  v13[4] = v2;
  aBlock[4] = sub_24875D3C4;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F1008;
  aBlock[3] = &block_descriptor_40;
  v14 = _Block_copy(aBlock);
  v15 = a1;
  v16 = a2;
  v17 = v2;
  sub_2487B53E4();
  v21 = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F670, v6, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
  sub_2486F4954((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680);
  sub_2487B59FC();
  MEMORY[0x24959A1AC](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

id sub_24875C404(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  char **v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  id result;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  _QWORD v42[2];
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v5 = sub_2487B533C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v42 - v11;
  v13 = objc_msgSend(a1, sel_error, v10);
  v14 = sub_2487B0C04();
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v16 = &selRef_setPredicate_;
  if (v13)
  {
    v15(v8, v14, v5);
    v17 = v13;
    v18 = sub_2487B5324();
    v19 = sub_2487B57D4();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc();
      v43 = swift_slowAlloc();
      v48 = v43;
      *(_DWORD *)v20 = 136315394;
      v47 = sub_2486EDE5C(0xD00000000000002ELL, 0x80000002487C6190, &v48);
      v44 = a2;
      sub_2487B593C();
      *(_WORD *)(v20 + 12) = 2080;
      v42[1] = v20 + 14;
      v21 = (void *)sub_2487B4F58();
      v45 = v5;
      v22 = v21;
      v23 = objc_msgSend(v21, sel_debugDescription);

      v24 = sub_2487B5528();
      v26 = v25;

      v16 = &selRef_setPredicate_;
      v47 = sub_2486EDE5C(v24, v26, &v48);
      a2 = v44;
      sub_2487B593C();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2486E6000, v18, v19, "%s. Error occurre=%s", (uint8_t *)v20, 0x16u);
      v27 = v43;
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v27, -1, -1);
      MEMORY[0x24959AF80](v20, -1, -1);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v45);
      goto LABEL_9;
    }

    v33 = *(void (**)(char *, uint64_t))(v6 + 8);
    v34 = v8;
  }
  else
  {
    v15(v12, v14, v5);
    v28 = a2;
    v29 = sub_2487B5324();
    v30 = sub_2487B57BC();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      v48 = v32;
      *(_DWORD *)v31 = 136315394;
      v47 = sub_2486EDE5C(0xD00000000000002ELL, 0x80000002487C6190, &v48);
      v45 = v5;
      v16 = &selRef_setPredicate_;
      sub_2487B593C();
      *(_WORD *)(v31 + 12) = 1024;
      LODWORD(v47) = objc_msgSend(v28, sel_isFinal);
      sub_2487B593C();

      _os_log_impl(&dword_2486E6000, v29, v30, "%s. IsFinal=%{BOOL}d", (uint8_t *)v31, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v32, -1, -1);
      MEMORY[0x24959AF80](v31, -1, -1);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v45);
      goto LABEL_9;
    }

    v33 = *(void (**)(char *, uint64_t))(v6 + 8);
    v34 = v12;
  }
  v33(v34, v5);
LABEL_9:
  result = objc_msgSend(a2, v16[125]);
  if ((_DWORD)result)
  {
    v36 = objc_msgSend(a2, sel_bestTranscription);
    v37 = objc_msgSend(v36, sel_formattedString);

    v38 = sub_2487B5528();
    v40 = v39;

    v41 = (uint64_t *)(v46
                    + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_detectedSpeechText);
    *v41 = v38;
    v41[1] = v40;
    return (id)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24875C8F8(void *a1, char a2)
{
  char *v2;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  id v16;
  char *v17;
  _QWORD v19[2];
  _QWORD aBlock[6];

  v5 = sub_2487B53D8();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2487B5408();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = *(_QWORD *)&v2[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_speechRecognitionQueue];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_BYTE *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = v2;
  aBlock[4] = sub_24875D3FC;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F1008;
  aBlock[3] = &block_descriptor_46;
  v15 = _Block_copy(aBlock);
  v16 = a1;
  v17 = v2;
  sub_2487B53E4();
  v19[1] = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F670, v6, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
  sub_2486F4954((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680);
  sub_2487B59FC();
  MEMORY[0x24959A1AC](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t sub_24875CAF0(void *a1, char a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t);
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t ObjectType;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t);
  _QWORD v47[2];
  int v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED50);
  MEMORY[0x24BDAC7A8](v6);
  v51 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2487B533C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v47 - v14;
  v16 = objc_msgSend(a1, sel_error, v13);
  v17 = sub_2487B0C04();
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  if (v16)
  {
    v18(v11, v17, v8);
    v19 = v16;
    v20 = sub_2487B5324();
    v21 = sub_2487B57D4();
    v22 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      v23 = swift_slowAlloc();
      v49 = swift_slowAlloc();
      v53 = v49;
      *(_DWORD *)v23 = 136315650;
      v50 = v9;
      v52 = sub_2486EDE5C(0xD00000000000002FLL, 0x80000002487C6160, &v53);
      v48 = v22;
      sub_2487B593C();
      *(_WORD *)(v23 + 12) = 1024;
      LODWORD(v52) = a2 & 1;
      sub_2487B593C();
      *(_WORD *)(v23 + 18) = 2080;
      v47[1] = v23 + 20;
      v24 = (void *)sub_2487B4F58();
      v25 = objc_msgSend(v24, sel_debugDescription);

      v26 = sub_2487B5528();
      v28 = v27;

      v52 = sub_2486EDE5C(v26, v28, &v53);
      sub_2487B593C();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2486E6000, v20, (os_log_type_t)v48, "%s. successfully=%{BOOL}d. Error occurred=%s", (uint8_t *)v23, 0x1Cu);
      v29 = v49;
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v29, -1, -1);
      MEMORY[0x24959AF80](v23, -1, -1);

      v30 = (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v11, v8);
    }
    else
    {

      v30 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  else
  {
    v18(v15, v17, v8);
    v31 = sub_2487B5324();
    v32 = sub_2487B57BC();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = swift_slowAlloc();
      v34 = swift_slowAlloc();
      v53 = v34;
      *(_DWORD *)v33 = 136315394;
      v50 = v9;
      v52 = sub_2486EDE5C(0xD00000000000002FLL, 0x80000002487C6160, &v53);
      sub_2487B593C();
      *(_WORD *)(v33 + 12) = 1024;
      LODWORD(v52) = a2 & 1;
      sub_2487B593C();
      _os_log_impl(&dword_2486E6000, v31, v32, "%s. successfully=%{BOOL}d", (uint8_t *)v33, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v34, -1, -1);
      MEMORY[0x24959AF80](v33, -1, -1);

      v35 = *(uint64_t (**)(char *, uint64_t))(v50 + 8);
    }
    else
    {

      v35 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
    }
    v30 = v35(v15, v8);
  }
  result = (*(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *a3) + 0x108))(v30);
  if (result)
  {
    v38 = v37;
    ObjectType = swift_getObjectType();
    v40 = *(_QWORD *)((char *)a3
                    + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_phrase);
    v41 = *(_QWORD *)((char *)a3
                    + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_phrase
                    + 8);
    v42 = *(_QWORD *)((char *)a3
                    + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_detectedSpeechText);
    v43 = *(_QWORD *)((char *)a3
                    + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_detectedSpeechText
                    + 8);
    LOBYTE(v53) = *((_BYTE *)a3
                  + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_recordingEnvironment);
    v44 = type metadata accessor for TTSVBError(0);
    v45 = (uint64_t)v51;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v51, 1, 1, v44);
    v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))(v38 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v46(v40, v41, v42, v43, &v53, v45, ObjectType, v38);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_24875D67C(v45);
  }
  return result;
}

id TTSVBSpeechRecognitionService.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTSVBSpeechRecognitionService();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24875D144()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24875D168(uint64_t a1)
{
  uint64_t v1;

  return sub_24875AD78(a1, *(void (**)(uint64_t, double))(v1 + 16));
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_24875D188()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_24875D1AC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_24875D1D8()
{
  uint64_t v0;

  sub_24875B5A4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_24875D1E8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_24875D22C()
{
  uint64_t v0;

  sub_24875B764(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), (__int128 *)(v0 + 48));
}

uint64_t sub_24875D240(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24875D288()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_24875D2B4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16)+ OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_recognitionRequest), sel_appendAudioPCMBuffer_, *(_QWORD *)(v0 + 24));
}

uint64_t sub_24875D2D0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_24875D2F4()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v1 = *(_BYTE *)(v0 + 16);
  v2 = *(_QWORD **)(v0 + 24);
  if ((v1 & 1) == 0)
    (*(void (**)(_QWORD, _QWORD))((*MEMORY[0x24BEE4EA0] & *v2) + 0x110))(0, 0);
  v3 = OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_recognitionRequest;
  objc_msgSend(*(id *)((char *)v2+ OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_recognitionRequest), sel_endAudio);
  v4 = OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_recognitionTask;
  objc_msgSend(*(id *)((char *)v2 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_recognitionTask), sel_finish);
  v5 = *(void **)((char *)v2 + v3);
  *(_QWORD *)((char *)v2 + v3) = 0;

  v6 = *(void **)((char *)v2 + v4);
  *(_QWORD *)((char *)v2 + v4) = 0;

}

uint64_t sub_24875D388()
{
  uint64_t v0;

  return sub_24875BEF8(v0);
}

uint64_t sub_24875D390()
{
  id *v0;

  return swift_deallocObject();
}

id sub_24875D3C4()
{
  uint64_t v0;

  return sub_24875C404(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_24875D3D0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_24875D3FC()
{
  uint64_t v0;

  return sub_24875CAF0(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD **)(v0 + 32));
}

uint64_t sub_24875D40C(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t dispatch thunk of TTSVBSpeechRecognitionDelegate.updateRecordingState(recordingState:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of TTSVBSpeechRecognitionDelegate.speechRecognitionEnded(expectedSpeechText:detectedSpeechText:recordingEnvironment:error:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 16))();
}

uint64_t method lookup function for TTSVBSpeechRecognitionService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TTSVBSpeechRecognitionService.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of TTSVBSpeechRecognitionService.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x110))();
}

uint64_t dispatch thunk of TTSVBSpeechRecognitionService.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x118))();
}

uint64_t dispatch thunk of TTSVBSpeechRecognitionService.assetSize.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x168))();
}

uint64_t dispatch thunk of TTSVBSpeechRecognitionService.speechRecognitionAssetExists(localeInfo:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x24BEE4EA0] & *v1) + 0x170);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_24875D530;
  return v7(a1);
}

uint64_t sub_24875D530(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of TTSVBSpeechRecognitionService.downloadSpeechRecognitionAsset(localeInfo:downloadProgress:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  int *v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v8 = *(int **)((*MEMORY[0x24BEE4EA0] & *v3) + 0x178);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_24874FB70;
  return v11(a1, a2, a3);
}

uint64_t dispatch thunk of TTSVBSpeechRecognitionService.stopSpeechRecognition(informDelegate:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of TTSVBSpeechRecognitionService.speechRecognitionTask(_:didHypothesizeTranscription:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of TTSVBSpeechRecognitionService.speechRecognitionTask(_:didFinishRecognition:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of TTSVBSpeechRecognitionService.speechRecognitionTask(_:didFinishSuccessfully:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1D0))();
}

uint64_t sub_24875D67C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_24875D6BC()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  char v3;
  _BYTE *v4;
  _QWORD *v5;
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  _QWORD *v12;
  void *v13;
  char v14[24];

  v1 = v0 + 16;
  swift_beginAccess();
  v2 = (_BYTE *)MEMORY[0x24959B01C](v0 + 16);
  if (v2)
  {
    v3 = v2[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_finishedListening];

    if ((v3 & 1) == 0)
    {
      swift_beginAccess();
      v4 = (_BYTE *)MEMORY[0x24959B01C](v1);
      if (v4)
      {
        v4[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport29TTSVBSpeechRecognitionService_finishedListening] = 1;

      }
      swift_beginAccess();
      v5 = (_QWORD *)MEMORY[0x24959B01C](v1);
      v6 = (_QWORD *)MEMORY[0x24BEE4EA0];
      if (v5)
      {
        v7 = v5;
        v8 = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v5) + 0x108))();
        v10 = v9;

        if (v8)
        {
          ObjectType = swift_getObjectType();
          v14[0] = 2;
          (*(void (**)(char *, uint64_t, uint64_t))(v10 + 8))(v14, ObjectType, v10);
          swift_unknownObjectRelease();
        }
      }
      swift_beginAccess();
      v12 = (_QWORD *)MEMORY[0x24959B01C](v1);
      if (v12)
      {
        v13 = v12;
        (*(void (**)(uint64_t))((*v6 & *v12) + 0x1B0))(1);

      }
    }
  }
}

id sub_24875D814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  id v5;
  unsigned __int8 v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v12;

  v0 = sub_2487B533C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE9E20]), sel_init);
  objc_msgSend(v4, sel_setDetectMultipleUtterances_, 0);
  objc_msgSend(v4, sel_setShouldReportPartialResults_, 1);
  v5 = (id)*sub_2487274FC();
  v6 = NSUserDefaults.ttsvb_internalUseServerBasedASR.getter();

  if ((v6 & 1) != 0)
  {
    v7 = sub_2487B0B90();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v7, v0);
    v8 = sub_2487B5324();
    v9 = sub_2487B57E0();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_2486E6000, v8, v9, "Internal UseServerBasedASR=true. Setting requiresOnDeviceRecognition=false", v10, 2u);
      MEMORY[0x24959AF80](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    objc_msgSend(v4, sel_setRequiresOnDeviceRecognition_, 0);
  }
  else
  {
    objc_msgSend(v4, sel_setRequiresOnDeviceRecognition_, 1);
  }
  return v4;
}

uint64_t sub_24875D9A4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t static TTSVBAudioTools.readPCMBuffer(fromAudioFile:)(uint64_t a1)
{
  return sub_24876170C(a1);
}

id sub_24875DA48@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  id result;
  uint64_t v12;

  v5 = sub_2487B50CC();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v9 + 16))(v8, a1, v6);
  v10 = objc_allocWithZone(MEMORY[0x24BDB1810]);
  result = sub_2487614A8((uint64_t)v8);
  if (!v2)
    *a2 = result;
  return result;
}

void static TTSVBAudioTools.convertAudioFileAtURL(_:audioOverrides:saveTo:filename:)(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t inited;
  unint64_t v17;
  id v18;
  id v19;
  char *v20;
  id v21;
  _QWORD v22[2];
  char *v23;

  v11 = *a2;
  v12 = a2[1];
  v13 = *((_QWORD *)a2 + 1);
  v14 = sub_24876170C(a1);
  if (!v6)
  {
    v15 = (void *)v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25445F358);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2487BD7A0;
    *(_QWORD *)(inited + 32) = v15;
    v22[0] = inited;
    v23 = a5;
    sub_2487B5690();
    v17 = v22[0];
    v18 = v15;
    v19 = objc_msgSend(v18, sel_format);
    v20 = a4;
    v21 = v19;
    LOBYTE(v22[0]) = v11;
    BYTE1(v22[0]) = v12;
    v22[1] = v13;
    static TTSVBAudioTools.createAudioFileFromBuffers(_:convertFrom:audioOverrides:saveTo:filename:)(v17, v19, (unsigned __int8 *)v22, a3, v20, v23, a6);
    swift_bridgeObjectRelease();

  }
}

void static TTSVBAudioTools.createAudioFileFromBuffers(_:convertFrom:audioOverrides:saveTo:filename:)(unint64_t a1@<X0>, void *a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t *v26;
  uint64_t v27;
  NSObject *p_aBlock;
  uint64_t v29;
  NSObject *v30;
  NSObject *v31;
  NSObject *v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  int v58;
  NSString *v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  id v62;
  char v63;
  uint64_t v64;
  NSObject *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  NSObject *v77;
  char *v78;
  NSObject *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  void (*v85)(char *, void *);
  void *v86;
  id v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char *v102;
  uint64_t v103;
  unsigned __int128 v104;
  os_log_type_t v105;
  uint8_t *v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  id v110;
  void *v111;
  char *v112;
  id v113;
  double v114;
  double v115;
  id v116;
  double v117;
  double v118;
  double v119;
  id v120;
  void *v121;
  uint64_t v122;
  void *v123;
  id v124;
  id v125;
  id v126;
  id v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  unsigned __int128 v133;
  id v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  id v139;
  id v140;
  void (*v141)(char *, void *);
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  id v146;
  uint64_t v147;
  id v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  id v153;
  id v154;
  void (*v155)(char *, void *);
  void *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  id v160;
  void (*v161)(char *, void *);
  void *v162;
  id v163;
  void (*v164)(char *, void *);
  void (*v165)(char *, void *);
  int v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  NSObject *v172;
  char *v173;
  uint64_t *v174;
  char *v175;
  char *v176;
  char *v177;
  char *v178;
  char *v179;
  void *v180;
  uint64_t v181;
  char *v182;
  char *v183;
  unint64_t v184;
  char *v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  id v189;
  char *v190;
  __int128 v191;
  uint64_t v192;
  NSObject *v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  unsigned __int128 v197;
  void *v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  unsigned __int128 aBlock;
  __int128 v203;
  void *(*v204)(uint64_t, _QWORD *);
  uint64_t v205;
  id v206[2];
  uint64_t v207;

  v190 = a6;
  v185 = a5;
  *(_QWORD *)&v191 = a4;
  v206[1] = *(id *)MEMORY[0x24BDAC8D0];
  v181 = sub_2487B533C();
  v184 = *(_QWORD *)(v181 - 8);
  v11 = ((uint64_t (*)(uint64_t))MEMORY[0x24BDAC7A8])(v181);
  v177 = (char *)&v169 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (unint64_t)&v169 - v13;
  v15 = type metadata accessor for TTSVBError.Reason(0);
  v16 = ((uint64_t (*)(uint64_t))MEMORY[0x24BDAC7A8])(v15);
  v179 = (char *)&v169 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = ((uint64_t (*)(uint64_t))MEMORY[0x24BDAC7A8])(v16);
  v182 = (char *)&v169 - v19;
  v20 = ((uint64_t (*)(uint64_t))MEMORY[0x24BDAC7A8])(v18);
  v22 = (char *)&v169 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v169 - v24;
  LODWORD(v26) = *a3;
  LODWORD(v27) = a3[1];
  p_aBlock = *((_QWORD *)a3 + 1);
  if (!(a1 >> 62))
  {
    v29 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v29)
      goto LABEL_3;
LABEL_83:
    aBlock = xmmword_2487BF2A0;
    LOBYTE(v203) = 3;
    swift_storeEnumTagMultiPayload();
    type metadata accessor for TTSVBError(0);
    sub_2486EDB24();
    v167 = swift_allocError();
    TTSVBError.init(_:_:_:)((uint64_t)&aBlock, (uint64_t)v25, 0, v168);
    v194 = v167;
    swift_willThrow();
    return;
  }
  while (1)
  {
    v170 = a7;
    v192 = v23;
    LODWORD(v178) = (_DWORD)v26;
    v166 = v27;
    swift_bridgeObjectRetain();
    v29 = sub_2487B5B64();
    swift_bridgeObjectRelease();
    LODWORD(v27) = v166;
    LODWORD(v26) = (_DWORD)v178;
    v23 = v192;
    a7 = v170;
    if (!v29)
      goto LABEL_83;
LABEL_3:
    LODWORD(v173) = v27;
    LODWORD(v178) = (_DWORD)v26;
    v183 = (char *)v29;
    v170 = a7;
    v192 = v23;
    v171 = v25;
    v172 = p_aBlock;
    if (p_aBlock)
    {
      v30 = p_aBlock;
      v31 = p_aBlock;
    }
    else
    {
      v31 = a2;
      v30 = 0;
    }
    sub_24870A34C(0, &qword_25777D3E0);
    v32 = v30;
    v33 = sub_2487B5900();
    v193 = v31;
    v186 = a1;
    v176 = v22;
    if ((v33 & 1) != 0)
    {
      v34 = sub_2487B0C04();
      v35 = v184;
      v36 = v181;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v184 + 16))(v14, v34, v181);
      v37 = a2;
      v38 = sub_2487B5324();
      v39 = sub_2487B57E0();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc();
        v41 = swift_slowAlloc();
        *(_QWORD *)&aBlock = v41;
        *(_DWORD *)v40 = 136315138;
        v42 = sub_2487A4518();
        *(_QWORD *)&v199 = sub_2486EDE5C(v42, v43, (uint64_t *)&aBlock);
        sub_2487B593C();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2486E6000, v38, v39, "'fromFormat' same as 'targetFormat'. Will not create AVAudioConverter because conversion not required. Fmt=%s", v40, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24959AF80](v41, -1, -1);
        MEMORY[0x24959AF80](v40, -1, -1);

        (*(void (**)(unint64_t, uint64_t))(v184 + 8))(v14, v181);
      }
      else
      {

        (*(void (**)(unint64_t, uint64_t))(v35 + 8))(v14, v36);
      }
      v44 = 0;
    }
    else
    {
      v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB17F8]), sel_initFromFormat_toFormat_, a2, v31);
      if (!v44)
      {
        aBlock = xmmword_2487BF2A0;
        LOBYTE(v203) = 3;
        v45 = (uint64_t)v171;
        swift_storeEnumTagMultiPayload();
        type metadata accessor for TTSVBError(0);
        sub_2486EDB24();
        v46 = swift_allocError();
        TTSVBError.init(_:_:_:)((uint64_t)&aBlock, v45, 0, v47);
        v194 = v46;
        swift_willThrow();

        return;
      }
    }
    v189 = v44;
    v48 = sub_2487B50CC();
    v174 = &v169;
    v49 = *(_QWORD *)(v48 - 8);
    v50 = ((uint64_t (*)(uint64_t))MEMORY[0x24BDAC7A8])(v48);
    v52 = (char *)&v169 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
    v188 = v51;
    MEMORY[0x24BDAC7A8](v50);
    v54 = (char *)&v169 - v53;
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28);
    MEMORY[0x24BDAC7A8](v55);
    v57 = (char *)&v169 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2486F4E74(v191, (uint64_t)v57, &qword_25445ED28);
    v58 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48))(v57, 1, v48);
    v175 = v52;
    if (v58 == 1)
    {
      v187 = v49;
      sub_2486F5008((uint64_t)v57, &qword_25445ED28);
      v59 = NSTemporaryDirectory();
      sub_2487B5528();

      sub_2487B500C();
      v60 = swift_bridgeObjectRelease();
    }
    else
    {
      v61 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
      v61(v54, v57, v48);
      *(_QWORD *)&v199 = *sub_24876D91C();
      aBlock = xmmword_2487BF2A0;
      LOBYTE(v203) = 3;
      v62 = (id)v199;
      v63 = sub_248711FD4();
      v64 = v194;
      _TTSVBFileManager.createDirectoryIfNeeded(_:deleteAndRecreateIfExists:problem:)((uint64_t)v54, v63 & 1, (uint64_t)&aBlock);
      v194 = v64;
      if (v64)
      {

        (*(void (**)(char *, uint64_t))(v49 + 8))(v54, v48);
        return;
      }
      v187 = v49;

      v60 = ((uint64_t (*)(char *, char *, uint64_t))v61)(v175, v54, v48);
    }
    v65 = v193;
    v66 = v188;
    v180 = (void *)v48;
    if (v190)
    {
      v67 = v190;
    }
    else
    {
      *(_QWORD *)&aBlock = 0;
      *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
      sub_2487B55AC();
      v68 = sub_2487B51D4();
      v69 = *(_QWORD *)(v68 - 8);
      MEMORY[0x24BDAC7A8](v68);
      v71 = (char *)&v169 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_2487B51C8();
      sub_2487B5114();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v68);
      v60 = sub_2487B5714();
      v67 = (char *)*((_QWORD *)&aBlock + 1);
    }
    v185 = (char *)&v169;
    MEMORY[0x24BDAC7A8](v60);
    v22 = (char *)&v169 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
    *(_QWORD *)&aBlock = v72;
    *((_QWORD *)&aBlock + 1) = v67;
    swift_bridgeObjectRetain();
    sub_2487B55AC();
    v73 = *((_QWORD *)&aBlock + 1);
    v74 = aBlock;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v75 = (char)v178;
    LOBYTE(aBlock) = (_BYTE)v178;
    v76 = (char)v173;
    BYTE1(aBlock) = (_BYTE)v173;
    v77 = v172;
    *((_QWORD *)&aBlock + 1) = v172;
    TTSVBAudioDescriptor.fileExtension.getter();
    aBlock = __PAIR128__(v73, v74);
    swift_bridgeObjectRetain();
    sub_2487B55AC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v78 = v175;
    sub_2487B5054();
    swift_bridgeObjectRelease();
    LOBYTE(aBlock) = v75;
    BYTE1(aBlock) = v76;
    *((_QWORD *)&aBlock + 1) = v77;
    v79 = v65;
    v25 = (char *)TTSVBAudioDescriptor.audioFileSettings(withFormat:)(v65);
    v80 = ((uint64_t (*)(char *))MEMORY[0x24BDAC7A8])(v25);
    *(&v169 - 4) = (uint64_t)v22;
    *(&v169 - 3) = v80;
    *(&v169 - 2) = (uint64_t)v65;
    v191 = xmmword_2487BF2A0;
    aBlock = xmmword_2487BF2A0;
    LOBYTE(v203) = 3;
    v81 = v187;
    v82 = (uint64_t)v176;
    v83 = v180;
    (*(void (**)(char *, char *, void *))(v187 + 16))(v176, v22, v180);
    swift_storeEnumTagMultiPayload();
    sub_24870A34C(0, &qword_25777D3E8);
    v84 = v194;
    static TTSVBError.perform<A>(_:problem:reason:)((void (*)(uint64_t))sub_248761B30, (uint64_t)(&v169 - 6), (uint64_t)&aBlock, v82);
    v194 = v84;
    if (v84)
    {

      sub_2486EDA68(v82, type metadata accessor for TTSVBError.Reason);
      v85 = *(void (**)(char *, void *))(v81 + 8);
      v85(v78, v83);
      swift_bridgeObjectRelease();
      v85(v22, v83);
      return;
    }
    sub_2486EDA68(v82, type metadata accessor for TTSVBError.Reason);
    v86 = v198;
    v206[0] = v198;
    *(_QWORD *)&aBlock = 0;
    *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
    sub_2487B5AA4();
    sub_2487B55AC();
    v178 = v22;
    sub_2487B50B4();
    sub_2487B55AC();
    swift_bridgeObjectRelease();
    sub_2487B55AC();
    v87 = objc_msgSend(v86, sel_fileFormat);
    sub_2487A4518();

    sub_2487B55AC();
    swift_bridgeObjectRelease();
    sub_2487B55AC();
    v88 = objc_msgSend(v86, sel_processingFormat);
    a7 = sub_2487A4518();

    p_aBlock = &aBlock;
    sub_2487B55AC();
    swift_bridgeObjectRelease();
    sub_2487B55AC();
    v89 = 0;
    v197 = aBlock;
    v90 = *((_QWORD *)v25 + 8);
    v176 = v25 + 64;
    v91 = 1 << v25[32];
    v27 = -1;
    if (v91 < 64)
      v27 = ~(-1 << v91);
    v14 = v27 & v90;
    a1 = (unint64_t)&v200;
    v190 = (char *)((unint64_t)(v91 + 63) >> 6);
    v26 = (uint64_t *)&v201;
    v173 = v190 - 1;
    a2 = (void *)(MEMORY[0x24BEE4AD8] + 8);
    if ((v27 & v90) != 0)
      break;
LABEL_30:
    v97 = v89 + 1;
    if (!__OFADD__(v89, 1))
    {
      if (v97 < (uint64_t)v190)
      {
        v98 = *(_QWORD *)&v176[8 * v97];
        if (v98)
        {
LABEL_33:
          v14 = (v98 - 1) & v98;
          v93 = __clz(__rbit64(v98)) + (v97 << 6);
          v89 = v97;
          goto LABEL_29;
        }
        v99 = v89 + 2;
        ++v89;
        if (v97 + 1 < (uint64_t)v190)
        {
          v98 = *(_QWORD *)&v176[8 * v99];
          if (v98)
          {
LABEL_36:
            v97 = v99;
            goto LABEL_33;
          }
          v89 = v97 + 1;
          if (v97 + 2 < (uint64_t)v190)
          {
            v98 = *(_QWORD *)&v176[8 * v97 + 16];
            if (v98)
            {
              v97 += 2;
              goto LABEL_33;
            }
            v99 = v97 + 3;
            v89 = v97 + 2;
            if (v97 + 3 < (uint64_t)v190)
            {
              v98 = *(_QWORD *)&v176[8 * v99];
              if (v98)
                goto LABEL_36;
              while (1)
              {
                v97 = v99 + 1;
                if (__OFADD__(v99, 1))
                  goto LABEL_87;
                if (v97 >= (uint64_t)v190)
                  break;
                v98 = *(_QWORD *)&v176[8 * v97];
                ++v99;
                if (v98)
                  goto LABEL_33;
              }
              v89 = (uint64_t)v173;
            }
          }
        }
      }
      v14 = 0;
      v200 = 0u;
      v201 = 0u;
      v199 = 0u;
      goto LABEL_48;
    }
    __break(1u);
LABEL_81:
    __break(1u);
  }
  while (1)
  {
    v92 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    v93 = v92 | (v89 << 6);
LABEL_29:
    v94 = *((_QWORD *)v25 + 7);
    v95 = (_QWORD *)(*((_QWORD *)v25 + 6) + 16 * v93);
    v96 = v95[1];
    *(_QWORD *)&v199 = *v95;
    *((_QWORD *)&v199 + 1) = v96;
    sub_2486F0814(v94 + 32 * v93, (uint64_t)&v200);
    swift_bridgeObjectRetain();
LABEL_48:
    sub_2486F4F70((uint64_t)&v199, (uint64_t)&aBlock, &qword_25777D3F0);
    if (!*((_QWORD *)&aBlock + 1))
      break;
    v22 = (char *)aBlock;
    sub_24870A40C(&v203, &v199);
    v195 = 0;
    v196 = 0xE000000000000000;
    sub_2487B55AC();
    sub_2487B55AC();
    swift_bridgeObjectRelease();
    sub_2487B55AC();
    sub_2487B5B40();
    a7 = v196;
    p_aBlock = &v197;
    sub_2487B55AC();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v199);
    if (!v14)
      goto LABEL_30;
  }
  swift_release();
  v100 = sub_2487B0C04();
  v101 = v184;
  v102 = v177;
  v103 = v181;
  (*(void (**)(char *, uint64_t, uint64_t))(v184 + 16))(v177, v100, v181);
  v104 = v197;
  swift_bridgeObjectRetain_n();
  p_aBlock = sub_2487B5324();
  v105 = sub_2487B57E0();
  a1 = v105;
  if (os_log_type_enabled(p_aBlock, v105))
  {
    v106 = (uint8_t *)swift_slowAlloc();
    v107 = swift_slowAlloc();
    *(_QWORD *)&aBlock = v107;
    *(_DWORD *)v106 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v199 = sub_2486EDE5C(v104, *((unint64_t *)&v104 + 1), (uint64_t *)&aBlock);
    sub_2487B593C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2486E6000, p_aBlock, (os_log_type_t)a1, "%s", v106, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v107, -1, -1);
    MEMORY[0x24959AF80](v106, -1, -1);

    (*(void (**)(char *, uint64_t))(v184 + 8))(v177, v103);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v101 + 8))(v102, v103);
  }
  v14 = (unint64_t)v193;
  a2 = v180;
  v25 = v185;
  v108 = v186;
  v184 = v186 & 0xC000000000000001;
  swift_bridgeObjectRetain();
  v109 = 4;
  v181 = MEMORY[0x24BEE4AE0] + 8;
  while (1)
  {
    a7 = v109 - 4;
    if (v184)
      v110 = (id)MEMORY[0x24959A434](v109 - 4, v108);
    else
      v110 = *(id *)(v108 + 8 * v109);
    v111 = v110;
    v22 = (char *)(v109 - 3);
    v26 = &v207;
    if (__OFADD__(a7, 1))
      goto LABEL_81;
    if (!v189)
    {
      *(double *)&v133 = MEMORY[0x24BDAC7A8](v110);
      p_aBlock = (&v169 - 4);
      *(&v169 - 2) = (uint64_t)v206;
      *(&v169 - 1) = (uint64_t)v111;
      aBlock = v133;
      LOBYTE(v203) = 3;
      if (!v206[0])
        goto LABEL_89;
      v134 = objc_msgSend(v206[0], sel_url);
      MEMORY[0x24BDAC7A8](v134);
      v136 = (char *)&v169 - ((v135 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_2487B509C();

      v137 = (uint64_t)v179;
      (*(void (**)(char *, char *, void *))(v187 + 32))(v179, v136, a2);
      swift_storeEnumTagMultiPayload();
      v138 = v194;
      static TTSVBError.perform<A>(_:problem:reason:)((void (*)(uint64_t))sub_248761B4C, (uint64_t)(&v169 - 4), (uint64_t)&aBlock, v137);
      v194 = v138;
      if (v138)
      {

        sub_2486EDA68(v137, type metadata accessor for TTSVBError.Reason);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v165 = *(void (**)(char *, void *))(v187 + 8);
        v165(v175, a2);
        v165(v178, a2);
        goto LABEL_79;
      }
      sub_2486EDA68(v137, type metadata accessor for TTSVBError.Reason);

      goto LABEL_53;
    }
    v112 = (char *)v189;
    v113 = objc_msgSend(v112, sel_inputFormat);
    objc_msgSend(v113, sel_sampleRate);
    v115 = v114;

    v190 = v112;
    v116 = objc_msgSend(v112, sel_outputFormat);
    objc_msgSend(v116, sel_sampleRate);
    v118 = v117;

    v119 = (double)objc_msgSend(v111, sel_frameCapacity) / (v115 / v118);
    if ((~*(_QWORD *)&v119 & 0x7FF0000000000000) == 0)
    {
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
    }
    if (v119 <= -1.0)
      goto LABEL_85;
    if (v119 >= 4294967300.0)
      goto LABEL_86;
    v120 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB1838]), sel_initWithPCMFormat_frameCapacity_, v14, v119);
    if (!v120)
      break;
    v121 = v120;
    v122 = swift_allocObject();
    *(_QWORD *)(v122 + 16) = v111;
    v204 = sub_248761B84;
    v205 = v122;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v203 = sub_24875F600;
    *((_QWORD *)&v203 + 1) = &block_descriptor_4;
    v123 = _Block_copy(&aBlock);
    v124 = v111;
    swift_release();
    *(_QWORD *)&aBlock = 0;
    v125 = objc_msgSend(v190, sel_convertToBuffer_error_withInputFromBlock_, v121, &aBlock, v123);
    _Block_release(v123);
    v126 = (id)aBlock;
    if (v126)
    {
      v147 = (uint64_t)v126;
      v148 = v126;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      aBlock = v191;
      LOBYTE(v203) = 3;
      v149 = (uint64_t)v171;
      swift_storeEnumTagMultiPayload();
      type metadata accessor for TTSVBError(0);
      sub_2486EDB24();
      v150 = swift_allocError();
      v152 = v151;
      v153 = v148;
      TTSVBError.init(_:_:_:)((uint64_t)&aBlock, v149, v147, v152);
      v194 = v150;
      swift_willThrow();

      v154 = v190;
      v155 = *(void (**)(char *, void *))(v187 + 8);
      v156 = v180;
      v155(v175, v180);
      v155(v178, v156);

LABEL_79:
      return;
    }
    if (v125)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      aBlock = v191;
      LOBYTE(v203) = 3;
      v157 = (uint64_t)v171;
      swift_storeEnumTagMultiPayload();
      type metadata accessor for TTSVBError(0);
      sub_2486EDB24();
      v158 = swift_allocError();
      TTSVBError.init(_:_:_:)((uint64_t)&aBlock, v157, 0, v159);
      v194 = v158;
      swift_willThrow();

      v160 = v190;
      v161 = *(void (**)(char *, void *))(v187 + 8);
      v162 = v180;
      v161(v175, v180);
      v161(v178, v162);
      goto LABEL_79;
    }
    MEMORY[0x24BDAC7A8](0);
    *(&v169 - 2) = (uint64_t)v206;
    *(&v169 - 1) = (uint64_t)v121;
    aBlock = v191;
    LOBYTE(v203) = 3;
    if (!v206[0])
    {

      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:

      __break(1u);
      return;
    }
    v127 = objc_msgSend(v206[0], sel_url);
    p_aBlock = &v169;
    MEMORY[0x24BDAC7A8](v127);
    v129 = (char *)&v169 - ((v128 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2487B509C();

    v130 = (uint64_t)v182;
    v131 = v129;
    a2 = v180;
    (*(void (**)(char *, char *, void *))(v187 + 32))(v182, v131, v180);
    swift_storeEnumTagMultiPayload();
    v132 = v194;
    static TTSVBError.perform<A>(_:problem:reason:)((void (*)(uint64_t))sub_248761B4C, (uint64_t)(&v169 - 4), (uint64_t)&aBlock, v130);
    v194 = v132;
    if (v132)
    {

      v163 = v190;
      sub_2486EDA68(v130, type metadata accessor for TTSVBError.Reason);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v164 = *(void (**)(char *, void *))(v187 + 8);
      v164(v175, a2);
      v164(v178, a2);
      goto LABEL_79;
    }
    sub_2486EDA68(v130, type metadata accessor for TTSVBError.Reason);

LABEL_53:
    ++v109;
    v14 = (unint64_t)v193;
    v108 = v186;
    v25 = v185;
    a1 = (unint64_t)v178;
    if (v22 == v183)
    {
      swift_bridgeObjectRelease();
      if (v206[0])
      {
        v139 = v206[0];
        swift_bridgeObjectRelease();
        v140 = objc_msgSend(v139, sel_url);

        sub_2487B509C();
        v141 = *(void (**)(char *, void *))(v187 + 8);
        v141(v175, a2);
        v142 = a1;
        goto LABEL_74;
      }
      goto LABEL_90;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  aBlock = v191;
  LOBYTE(v203) = 3;
  v143 = (uint64_t)v171;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for TTSVBError(0);
  sub_2486EDB24();
  v144 = swift_allocError();
  TTSVBError.init(_:_:_:)((uint64_t)&aBlock, v143, 0, v145);
  v194 = v144;
  swift_willThrow();

  v146 = v190;
  v141 = *(void (**)(char *, void *))(v187 + 8);
  v141(v175, a2);
  v142 = (unint64_t)v178;
LABEL_74:
  v141((char *)v142, a2);

}

id sub_24875F528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  id result;
  uint64_t v16;

  v9 = sub_2487B50CC();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v12 + 16))(v11, a1);
  swift_bridgeObjectRetain();
  v13 = objc_msgSend(a3, sel_commonFormat);
  v14 = objc_allocWithZone(MEMORY[0x24BDB1810]);
  result = sub_2487615B0((uint64_t)v11, a2, (uint64_t)v13, 0);
  if (!v4)
    *a4 = result;
  return result;
}

id sub_24875F600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  void *v6;

  v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v6 = (void *)v5(a2, a3);
  swift_release();
  return v6;
}

uint64_t static TTSVBAudioTools.audioDurationForAudioFileSync(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[12] = a1;
  v2 = type metadata accessor for TTSVBError(0);
  v1[13] = v2;
  v1[14] = *(_QWORD *)(v2 - 8);
  v1[15] = swift_task_alloc();
  v1[16] = type metadata accessor for TTSVBError.Reason(0);
  v1[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED50);
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24875F718()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v4;
  void *v5;
  _QWORD *v6;

  v1 = v0[20];
  v2 = v0[13];
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0[14] + 56);
  v0[21] = v3;
  v3(v1, 1, 1, v2);
  v4 = objc_allocWithZone(MEMORY[0x24BDB26C8]);
  v5 = (void *)sub_2487B503C();
  v0[22] = objc_msgSend(v4, sel_initWithURL_options_, v5, 0);

  v0[23] = __swift_instantiateConcreteTypeFromMangledName(&qword_25777D400);
  v0[24] = sub_2487B5288();
  v6 = (_QWORD *)swift_task_alloc();
  v0[25] = v6;
  *v6 = v0;
  v6[1] = sub_24875F7F8;
  return sub_2487B58C4();
}

uint64_t sub_24875F7F8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_24875F864()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  void *v12;
  uint64_t v13;
  Float64 Seconds;
  uint64_t v15;
  void (*v16)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(__n128);
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;

  sub_2487B5288();
  sub_2487B58D0();
  swift_release();
  v2 = *(void **)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  LODWORD(v4) = *(unsigned __int8 *)(v0 + 40);
  if (*(_BYTE *)(v0 + 40))
  {
    if ((_DWORD)v4 == 1)
    {
      v5 = *(_QWORD *)(v0 + 152);
      v33 = *(_QWORD *)(v0 + 160);
      v34 = *(_QWORD *)(v0 + 104);
      v35 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 168);
      v4 = *(_QWORD *)(v0 + 32);
      v6 = *(_QWORD *)(v0 + 24);
      v7 = v2;
      sub_2486F8E48((uint64_t)&v36);
      v8 = v2;
      v10 = v36;
      v9 = v37;
      v11 = v38;
      v39 = v36;
      v40 = v37;
      v41 = v38;
      v12 = v7;
      v1 = v6;
      v3 = v4;
      LOBYTE(v4) = 1;
      static TTSVBError.map(_:_:)(v12, (uint64_t)&v39, v5);
      sub_248761C48(v8, v1, v3, 1);
      v13 = v10;
      v2 = v8;
      sub_2486F507C(v13, v9, v11);
      sub_2486F5008(v33, &qword_25445ED50);
      v35(v5, 0, 1, v34);
      sub_2486F4F70(v5, v33, &qword_25445ED50);
      Seconds = 0.0;
    }
    else
    {
      v15 = *(_QWORD *)(v0 + 24);
      v17 = *(_QWORD *)(v0 + 160);
      v16 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 168);
      v18 = *(_QWORD *)(v0 + 152);
      v19 = *(_QWORD *)(v0 + 136);
      v20 = *(_QWORD *)(v0 + 104);
      v39 = 0;
      v40 = 0;
      v41 = 3;
      swift_storeEnumTagMultiPayload();
      TTSVBError.init(_:_:_:)((uint64_t)&v39, v19, 0, v18);
      sub_2486F5008(v17, &qword_25445ED50);
      v16(v18, 0, 1, v20);
      sub_2486F4F70(v18, v17, &qword_25445ED50);
      Seconds = 0.0;
      v1 = v15;
    }
  }
  else
  {
    *(_QWORD *)(v0 + 72) = v2;
    *(_QWORD *)(v0 + 80) = v1;
    *(_QWORD *)(v0 + 88) = v3;
    Seconds = CMTimeGetSeconds((CMTime *)(v0 + 72));
  }
  v21 = *(_QWORD *)(v0 + 144);
  v23 = *(_QWORD *)(v0 + 104);
  v22 = *(_QWORD *)(v0 + 112);
  sub_2486F4E74(*(_QWORD *)(v0 + 160), v21, &qword_25445ED50);
  v24 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v21, 1, v23);
  v25 = *(void **)(v0 + 176);
  v26 = *(_QWORD *)(v0 + 160);
  if (v24 == 1)
  {
    v27 = *(_QWORD *)(v0 + 144);
    sub_2486F5008(v26, &qword_25445ED50);

    sub_248761C48(v2, v1, v3, v4);
    sub_2486F5008(v27, &qword_25445ED50);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v28 = *(uint64_t (**)(__n128))(v0 + 8);
    v29.n128_f64[0] = Seconds;
  }
  else
  {
    v30 = *(_QWORD *)(v0 + 120);
    sub_248761C5C(*(_QWORD *)(v0 + 144), v30);
    sub_2486EDB24();
    swift_allocError();
    sub_2486F4994(v30, v31);
    swift_willThrow();

    sub_248761C48(v2, v1, v3, v4);
    sub_2486EDA68(v30, type metadata accessor for TTSVBError);
    sub_2486F5008(v26, &qword_25445ED50);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v28 = *(uint64_t (**)(__n128))(v0 + 8);
  }
  return v28(v29);
}

uint64_t sub_24875FBC8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);

  sub_2486F5008(v1, &qword_25445ED50);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t TTSVBAudioTools.RecordingAnalysis.detectedSpeech.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TTSVBAudioTools.RecordingAnalysis.detectedSpeech.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TTSVBAudioTools.RecordingAnalysis.detectedSpeech.modify())()
{
  return nullsub_1;
}

uint64_t TTSVBAudioTools.RecordingAnalysis.editDistance.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t TTSVBAudioTools.RecordingAnalysis.editDistance.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*TTSVBAudioTools.RecordingAnalysis.editDistance.modify())()
{
  return nullsub_1;
}

void *TTSVBAudioTools.RecordingAnalysis.metrics.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 24);
  v2 = v1;
  return v1;
}

void TTSVBAudioTools.RecordingAnalysis.metrics.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
}

uint64_t (*TTSVBAudioTools.RecordingAnalysis.metrics.modify())()
{
  return nullsub_1;
}

uint64_t TTSVBAudioTools.RecordingAnalysis.init(metrics:detectedSpeech:editDistance:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = a2;
  a5[1] = a3;
  a5[2] = a4;
  a5[3] = result;
  return result;
}

uint64_t TTSVBAudioTools.RecordingAnalysis.description.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  v1 = *(void **)(v0 + 24);
  if (*(_QWORD *)(v0 + 8))
  {
    sub_2487B5AA4();
    swift_bridgeObjectRelease();
    sub_2487B55AC();
    sub_2487B55AC();
    sub_2487B5CCC();
    sub_2487B55AC();
    swift_bridgeObjectRelease();
    sub_2487B55AC();
    sub_2487B55AC();
    swift_bridgeObjectRelease();
  }
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v2, sel_description);
    sub_2487B5528();

    sub_2487B55AC();
    swift_bridgeObjectRelease();
  }
  return 0;
}

void static TTSVBAudioTools.analyzeRecording(atURL:detectUserSpeech:expectedText:detectMetrics:)(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, unint64_t a4@<X3>, char a5@<W4>, uint64_t *a6@<X8>)
{
  uint64_t v6;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  Swift::String v20;
  Swift::Int v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  uint64_t to;
  id v29;

  v13 = (void *)MEMORY[0x24959A884]();
  if ((a2 & 1) == 0)
  {
    v16 = 0;
    goto LABEL_8;
  }
  v14 = sub_24876200C(a1);
  if (v6)
    goto LABEL_15;
  v16 = v15;
  if (!v15)
  {
LABEL_8:
    v17 = 0;
    v21 = -1;
    if ((a5 & 1) == 0)
      goto LABEL_13;
    goto LABEL_9;
  }
  v17 = v14;
  if (a4)
  {
    swift_bridgeObjectRetain();
    String.ttsvb_normalizedForSpeechComparison.getter(a3, a4);
    to = String.ttsvb_normalizedForSpeechComparison.getter(v17, v16);
    v19 = v18;
    swift_bridgeObjectRelease();
    v20._countAndFlagsBits = to;
    v20._object = v19;
    v21 = String.ttsvb_editDistance(to:)(v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((a5 & 1) == 0)
      goto LABEL_13;
    goto LABEL_9;
  }
  v21 = -1;
  if ((a5 & 1) == 0)
  {
LABEL_13:
    v27 = 0;
    goto LABEL_14;
  }
LABEL_9:
  v22 = sub_24876170C(a1);
  if (!v6)
  {
    v23 = (void *)v22;
    v29 = (id)objc_opt_self();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25445F358);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_2487BD7A0;
    *(_QWORD *)(v24 + 32) = v23;
    sub_2487B5690();
    sub_24870A34C(0, &qword_25777D4E8);
    v25 = v23;
    v26 = (void *)sub_2487B566C();
    swift_bridgeObjectRelease();
    v27 = objc_msgSend(v29, sel_assessAudioForBuffers_, v26);

LABEL_14:
    *a6 = v17;
    a6[1] = v16;
    a6[2] = v21;
    a6[3] = (uint64_t)v27;
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
LABEL_15:
  objc_autoreleasePoolPop(v13);
}

void sub_248760098(void *a1, void *a2, void (*a3)(char *), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t *);
  uint64_t v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unsigned __int8 v51;
  uint64_t v52;
  unint64_t v53;
  unsigned __int8 v54;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777D4F0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (uint64_t *)((char *)&v44 - v12);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777D4F8);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    if (!a2)
      goto LABEL_31;
    v45 = a4;
    v52 = (uint64_t)a2;
    v23 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25445ECF0);
    sub_24870A34C(0, qword_25445F708);
    if ((swift_dynamicCast() & 1) == 0)
    {
LABEL_23:
      sub_2486F8E48((uint64_t)&v52);
      v32 = v52;
      v33 = v53;
      v34 = v54;
      v49 = v52;
      v50 = v53;
      v51 = v54;
      static TTSVBError.map(_:_:)(a2, (uint64_t)&v49, (uint64_t)v10);
      sub_2486F507C(v32, v33, v34);
      swift_storeEnumTagMultiPayload();
      a3(v10);
      v35 = (uint64_t)v10;
LABEL_28:
      sub_2486F5008(v35, &qword_25777D4F0);
      return;
    }
    v24 = (id)v49;
    v25 = objc_msgSend((id)v49, sel_domain);
    v26 = sub_2487B5528();
    v28 = v27;

    if (v26 == sub_2487B5528() && v28 == v29)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v30 = sub_2487B5CE4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v30 & 1) == 0)
      {
LABEL_22:

        goto LABEL_23;
      }
    }
    v31 = objc_msgSend(v24, sel_code);
    if (v31 == (id)22 || v31 == (id)1110 || v31 == (id)203)
    {
      *v13 = 0;
      v13[1] = 0;
      swift_storeEnumTagMultiPayload();
      a3((char *)v13);

LABEL_27:
      v35 = (uint64_t)v13;
      goto LABEL_28;
    }
    goto LABEL_22;
  }
  v46 = a1;
  if ((objc_msgSend(v46, sel_isFinal) & 1) == 0)
  {

    return;
  }
  v18 = objc_msgSend(v46, sel_rawTranscriptions);
  sub_24870A34C(0, &qword_25777D500);
  v19 = sub_2487B5684();

  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    v36 = sub_2487B5B64();
    swift_bridgeObjectRelease();
    v44 = (void (*)(uint64_t *))a3;
    v45 = a4;
    if (v36)
      goto LABEL_5;
LABEL_25:
    swift_bridgeObjectRelease();
    v22 = objc_msgSend(v46, sel_bestTranscription);
    goto LABEL_26;
  }
  v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
  v44 = (void (*)(uint64_t *))a3;
  v45 = a4;
  if (!v20)
    goto LABEL_25;
LABEL_5:
  if ((v19 & 0xC000000000000001) != 0)
  {
    v21 = (id)MEMORY[0x24959A434](0, v19);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v21 = *(id *)(v19 + 32);
LABEL_8:
    v22 = v21;
    swift_bridgeObjectRelease();
LABEL_26:
    v37 = objc_msgSend(v22, sel_formattedString, v44, v45);
    v38 = sub_2487B5528();
    v40 = v39;

    v49 = v38;
    v50 = v40;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25777D508);
    sub_2487B5294();
    sub_248762620();
    sub_248762664();
    sub_2487626A8();
    sub_2487B5780();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    swift_bridgeObjectRelease();
    v49 = 3158622;
    v50 = 0xE300000000000000;
    v47 = 32;
    v48 = 0xE100000000000000;
    sub_2486ED9E0();
    v41 = sub_2487B5984();
    v43 = v42;
    swift_bridgeObjectRelease();
    *v13 = v41;
    v13[1] = v43;
    swift_storeEnumTagMultiPayload();
    v44(v13);

    goto LABEL_27;
  }
  __break(1u);
LABEL_31:
  __break(1u);
}

void sub_248760628(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
}

void sub_248760634(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_2487606A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED50);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v16 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777D4F0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (_OWORD *)((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2486F4E74(a1, (uint64_t)v12, &qword_25777D4F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_248761C5C((uint64_t)v12, (uint64_t)v9);
    v13 = type metadata accessor for TTSVBError(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 0, 1, v13);
    sub_2486F4F70((uint64_t)v9, (uint64_t)v6, &qword_25445ED50);
    v14 = a2
        + OBJC_IVAR____TtCZFV31TextToSpeechVoiceBankingSupport15TTSVBAudioToolsP33_8AA1E519C2B447388B86016717E8907330recognizeTextFromAudioFileSyncFzT3urlV10Foundation3URL_GSqSS_L_3Box_error;
    swift_beginAccess();
    sub_2487626F4((uint64_t)v6, v14);
    swift_endAccess();
  }
  else
  {
    *(_OWORD *)(a2 + 16) = *v12;
    swift_bridgeObjectRelease();
  }
  return sub_2487B5894();
}

float static TTSVBAudioTools.calculateAverageDecibelValue(buffer:)(void *a1)
{
  unsigned int v2;
  const float **v3;
  id v4;
  unsigned int v5;
  float v6;
  uint64_t v7;
  const float *v8;
  id v9;
  unsigned int v10;
  float __C;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v2 = objc_msgSend(a1, sel_frameLength);
  v3 = (const float **)objc_msgSend(a1, sel_floatChannelData);
  v4 = objc_msgSend(a1, sel_format);
  v5 = objc_msgSend(v4, sel_channelCount);

  v6 = 0.0;
  if (v3 && v5)
  {
    v7 = 8 * v5;
    do
    {
      v8 = *v3++;
      __C = 0.0;
      vDSP_meamgv(v8, 1, &__C, v2);
      v6 = v6 + (float)(log10f(__C) * 20.0);
      v7 -= 8;
    }
    while (v7);
  }
  v9 = objc_msgSend(a1, sel_format);
  v10 = objc_msgSend(v9, sel_channelCount);

  return v6 / (float)v10;
}

float static TTSVBAudioTools.calculatePeakDecibelLevel(buffer:)(void *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  id v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  float v8;
  float *v9;
  uint64_t v10;
  float v11;
  float v12;

  v2 = objc_msgSend(a1, sel_floatChannelData);
  if (!v2)
    return 0.0;
  v3 = v2;
  v4 = objc_msgSend(a1, sel_format);
  v5 = objc_msgSend(v4, sel_channelCount);

  v6 = objc_msgSend(a1, sel_frameLength);
  if (v5)
  {
    v7 = 0;
    v8 = -3.4028e38;
    do
    {
      if (v6)
      {
        v9 = (float *)v3[v7];
        v10 = v6;
        do
        {
          v11 = *v9++;
          v12 = fabsf(v11);
          if (v8 < v12)
            v8 = v12;
          --v10;
        }
        while (v10);
      }
      ++v7;
    }
    while (v7 != v5);
  }
  else
  {
    v8 = -3.4028e38;
  }
  return log10f(v8) * 20.0;
}

uint64_t static TTSVBAudioTools.hasClippedAudio(_:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD *v8;
  id v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t i;
  float *v13;
  float *v15;
  uint64_t j;
  float v17;
  float v18;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;

  v2 = sub_2487B533C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, sel_floatChannelData, v4);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(a1, sel_format);
    v10 = objc_msgSend(v9, sel_channelCount);

    v11 = objc_msgSend(a1, sel_frameLength);
    if (v10)
    {
      for (i = 0; i != v10; ++i)
      {
        if (v11)
        {
          v13 = (float *)v8[i];
          if (*v13 >= 1.0 || *v13 <= -1.0)
            return 1;
          v15 = v13 + 1;
          for (j = v11 - 1; j; --j)
          {
            v17 = *v15++;
            v18 = v17;
            if (v17 >= 1.0 || v18 <= -1.0)
              return 1;
          }
        }
      }
    }
  }
  else
  {
    v21 = sub_2487B0C04();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v21, v2);
    v22 = sub_2487B5324();
    v23 = sub_2487B57D4();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_2486E6000, v22, v23, "Will not calculate clipped audio. Only float format is supported", v24, 2u);
      MEMORY[0x24959AF80](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return 0;
}

uint64_t static TTSVBAudioTools.calculateNumberOfClippedSamples(_:)(void *a1)
{
  _QWORD *v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD *v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t result;
  uint64_t v12;
  float *v13;
  uint64_t v14;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;

  v2 = (_QWORD *)sub_2487B533C();
  v3 = *(v2 - 1);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, sel_floatChannelData, v4);
  if (!v7)
  {
LABEL_15:
    v17 = sub_2487B0C04();
    (*(void (**)(char *, uint64_t, _QWORD *))(v3 + 16))(v6, v17, v2);
    v18 = sub_2487B5324();
    v19 = sub_2487B57D4();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_2486E6000, v18, v19, "Will not calculate clipped audio. Only float format is supported", v20, 2u);
      MEMORY[0x24959AF80](v20, -1, -1);
    }

    (*(void (**)(char *, _QWORD *))(v3 + 8))(v6, v2);
    return 0;
  }
  v8 = v7;
  v2 = objc_msgSend(a1, sel_format);
  v6 = (char *)objc_msgSend(v2, sel_channelCount);

  v9 = objc_msgSend(a1, sel_frameLength);
  if ((_DWORD)v6)
  {
    v10 = v9;
    result = 0;
    v12 = 0;
    while (!v10)
    {
LABEL_4:
      if (++v12 == v6)
        return result;
    }
    v13 = (float *)v8[v12];
    v14 = v10;
    while (*v13 < 1.0 && *v13 > -1.0 || !__CFADD__(result++, 1))
    {
      ++v13;
      if (!--v14)
        goto LABEL_4;
    }
    __break(1u);
    goto LABEL_15;
  }
  return 0;
}

void static TTSVBAudioTools.normalizeVolume(_:maximumBoostFactor:)(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  float v14;
  id v15;
  void *v16;
  BOOL v17;
  float **v18;
  float **v19;
  unsigned int v20;
  uint64_t v21;
  float *v22;
  float v23;
  float v24;
  float v25;
  float v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char **v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  double v44;
  double v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  void *v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  id v57;
  unsigned int v58;
  uint64_t j;
  unsigned int v60;
  uint64_t v61;
  float v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t i;
  unint64_t v66;
  uint64_t v67;
  double v68;
  uint64_t v69;
  float v70;

  v67 = a2;
  v3 = sub_2487B533C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v63 - v8;
  v66 = a1;
  if (a1 >> 62)
    goto LABEL_19;
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (i = (uint64_t)v9; v10; i = (uint64_t)v9)
  {
    v11 = 0;
    v12 = v66 & 0xC000000000000001;
    v13 = v66 & 0xFFFFFFFFFFFFFF8;
    v9 = (char *)(v66 + 32);
    v14 = 0.0;
    while (1)
    {
      if (v12)
      {
        v15 = (id)MEMORY[0x24959A434](v11, v66);
      }
      else
      {
        if (v11 >= *(_QWORD *)(v13 + 16))
          goto LABEL_18;
        v15 = *(id *)&v9[8 * v11];
      }
      v16 = v15;
      v17 = __OFADD__(v11++, 1);
      if (v17)
        break;
      v18 = (float **)objc_msgSend(v15, sel_floatChannelData);
      if (v18)
      {
        v19 = v18;
        v20 = objc_msgSend(v16, sel_frameLength);
        if (v20)
        {
          v21 = v20;
          v22 = *v19;
          do
          {
            v23 = *v22++;
            v24 = fabsf(v23);
            if (v14 < v24)
              v14 = v24;
            --v21;
          }
          while (v21);
        }
      }

      if (v11 == v10)
        goto LABEL_21;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
    v10 = sub_2487B5B64();
  }
  v14 = 0.0;
LABEL_21:
  swift_bridgeObjectRelease();
  if (v14 == 0.0)
    v25 = 1.0;
  else
    v25 = 1.0 / v14;
  v70 = v25;
  v26 = *(float *)&v67;
  if ((v67 & 0x100000000) == 0 && v25 > *(float *)&v67)
  {
    v27 = sub_2487B0C04();
    v28 = i;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(i, v27, v3);
    v29 = sub_2487B5324();
    v30 = sub_2487B57BC();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      *(_DWORD *)v31 = 134218240;
      v64 = v31 + 4;
      swift_beginAccess();
      v68 = v70;
      sub_2487B593C();
      *(_WORD *)(v31 + 12) = 2048;
      v68 = v26;
      sub_2487B593C();
      _os_log_impl(&dword_2486E6000, v29, v30, "Will clamp computed normalization boost factor %f to maximum of %f", (uint8_t *)v31, 0x16u);
      MEMORY[0x24959AF80](v31, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v28, v3);
    swift_beginAccess();
    v70 = v26;
    v25 = v26;
  }
  v32 = sub_2487B0C04();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v32, v3);
  v33 = sub_2487B5324();
  v34 = sub_2487B57BC();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v35 = 134217984;
    v68 = v25;
    sub_2487B593C();
    _os_log_impl(&dword_2486E6000, v33, v34, "Will normalize buffers with a boost factor of %f", v35, 0xCu);
    MEMORY[0x24959AF80](v35, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v69 = MEMORY[0x24BEE4AF8];
  if (v10)
  {
    v67 = v10;
    v36 = v66;
    v37 = v66 & 0xC000000000000001;
    v64 = v66 + 32;
    i = v66 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v38 = 0;
    v39 = &selRef_setPredicate_;
    v63 = v37;
    while (1)
    {
      if (v37)
      {
        v41 = (id)MEMORY[0x24959A434](v38, v36);
      }
      else
      {
        if (v38 >= *(_QWORD *)(i + 16))
          goto LABEL_58;
        v41 = *(id *)(v64 + 8 * v38);
      }
      v42 = v41;
      v17 = __OFADD__(v38++, 1);
      if (v17)
        break;
      v43 = objc_msgSend(v41, v39[135]);
      objc_msgSend(v43, sel_sampleRate);
      v45 = v44;

      v46 = objc_msgSend(v42, v39[135]);
      v47 = objc_msgSend(v46, sel_channelCount);

      v48 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB1818]), sel_initWithCommonFormat_sampleRate_channels_interleaved_, 1, v47, 0, v45);
      if (v48)
      {
        v49 = v48;
        v50 = objc_msgSend(v42, sel_frameCapacity);
        v51 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB1838]), sel_initWithPCMFormat_frameCapacity_, v49, v50);
        if (v51)
        {
          v52 = v51;
          objc_msgSend(v51, sel_setFrameLength_, objc_msgSend(v42, sel_frameLength));
          v53 = objc_msgSend(v42, sel_floatChannelData);
          if (v53)
          {
            v54 = v53;
            v55 = objc_msgSend(v52, sel_floatChannelData);
            if (v55)
            {
              v56 = v55;
              v57 = objc_msgSend(v42, sel_format);
              v58 = objc_msgSend(v57, sel_channelCount);

              if (v58)
              {
                swift_beginAccess();
                for (j = 0; j != v58; ++j)
                {
                  v60 = objc_msgSend(v42, sel_frameLength, v63);
                  if (v60)
                  {
                    v61 = 0;
                    v62 = v70;
                    do
                    {
                      *(float *)(v56[j] + v61) = v62 * *(float *)(v54[j] + v61);
                      v61 += 4;
                    }
                    while (4 * v60 != v61);
                  }
                }
              }
              v40 = v52;
              MEMORY[0x249599FCC]();
              if (*(_QWORD *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_2487B569C();
              sub_2487B56C0();
              sub_2487B5690();
              v36 = v66;
              v37 = v63;
            }
          }

          v39 = &selRef_setPredicate_;
        }

      }
      if (v38 == v67)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
LABEL_58:
    __break(1u);
  }
}

uint64_t sub_248761468()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_2486F5008(v0+ OBJC_IVAR____TtCZFV31TextToSpeechVoiceBankingSupport15TTSVBAudioToolsP33_8AA1E519C2B447388B86016717E8907330recognizeTextFromAudioFileSyncFzT3urlV10Foundation3URL_GSqSS_L_3Box_error, &qword_25445ED50);
  return swift_deallocClassInstance();
}

id sub_2487614A8(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  id v9;
  id v10;
  uint64_t v11;
  id v13[2];

  v2 = v1;
  v13[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = (void *)sub_2487B503C();
  v13[0] = 0;
  v5 = objc_msgSend(v2, sel_initForReading_error_, v4, v13);

  v6 = v13[0];
  if (v5)
  {
    v7 = sub_2487B50CC();
    v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    v9 = v6;
    v8(a1, v7);
  }
  else
  {
    v10 = v13[0];
    sub_2487B4F64();

    swift_willThrow();
    v11 = sub_2487B50CC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
  }
  return v5;
}

id sub_2487615B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  void *v4;
  void *v5;
  void *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  id v15;
  id v16;
  uint64_t v17;
  id v19[2];

  v5 = v4;
  v19[1] = *(id *)MEMORY[0x24BDAC8D0];
  v9 = (void *)sub_2487B503C();
  v10 = (void *)sub_2487B545C();
  swift_bridgeObjectRelease();
  v19[0] = 0;
  v11 = objc_msgSend(v5, sel_initForWriting_settings_commonFormat_interleaved_error_, v9, v10, a3, a4 & 1, v19);

  v12 = v19[0];
  if (v11)
  {
    v13 = sub_2487B50CC();
    v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
    v15 = v12;
    v14(a1, v13);
  }
  else
  {
    v16 = v19[0];
    sub_2487B4F64();

    swift_willThrow();
    v17 = sub_2487B50CC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a1, v17);
  }
  return v11;
}

uint64_t sub_24876170C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t result;
  char v28[8];
  uint64_t v29;
  id v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t, double);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char v38[16];
  uint64_t v39;
  id v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  id v47;

  v2 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v2);
  v35 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v36 = (char *)&v32 - v5;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v32 - v7;
  v39 = a1;
  v9 = sub_2487B50CC();
  v10 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v8, a1, v9);
  swift_storeEnumTagMultiPayload();
  sub_24870A34C(0, &qword_25777D3E8);
  sub_2487186EC((uint64_t)&v44);
  v11 = v44;
  v12 = v45;
  v13 = v46;
  v41 = (void (*)(char *, uint64_t, uint64_t))v44;
  v42 = v45;
  v43 = v46;
  v14 = v37;
  static TTSVBError.perform<A>(_:problem:reason:)((void (*)(uint64_t))sub_24876273C, (uint64_t)v38, (uint64_t)&v41, (uint64_t)v8);
  if (v14)
  {
    sub_2486F507C(v11, v12, v13);
    sub_2486EDA68((uint64_t)v8, type metadata accessor for TTSVBError.Reason);
    return (uint64_t)v10;
  }
  v33 = (void (*)(uint64_t, uint64_t, uint64_t, double))v10;
  v34 = v9;
  v37 = a1;
  v15 = (uint64_t)v35;
  sub_2486F507C(v11, v12, v13);
  sub_2486EDA68((uint64_t)v8, type metadata accessor for TTSVBError.Reason);
  v16 = v47;
  v17 = objc_msgSend(v47, sel_processingFormat);
  v18 = (unint64_t)objc_msgSend(v16, sel_length);
  if ((v18 & 0x8000000000000000) != 0)
  {
    LODWORD(v30) = 0;
    v29 = 3451;
    v28[0] = 2;
  }
  else
  {
    if (!HIDWORD(v18))
    {
      v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB1838]), sel_initWithPCMFormat_frameCapacity_, v17, v18);

      v40 = v19;
      v44 = 0;
      v45 = 0;
      v46 = 3;
      v20 = (uint64_t)v36;
      swift_storeEnumTagMultiPayload();
      v21 = sub_24870A34C(0, &qword_25777D4E8);
      static TTSVBError.unwrap<A>(_:_:_:)((uint64_t)&v40, (uint64_t)&v44, v20, v21, (uint64_t)&v41);
      sub_2486EDA68(v20, type metadata accessor for TTSVBError.Reason);

      v36 = (char *)&v32;
      v10 = v41;
      v23 = MEMORY[0x24BDAC7A8](v22);
      v30 = v16;
      v31 = v10;
      v33(v15, v37, v34, v23);
      swift_storeEnumTagMultiPayload();
      sub_2487186EC((uint64_t)&v44);
      v24 = v44;
      v25 = v45;
      v26 = v46;
      v41 = (void (*)(char *, uint64_t, uint64_t))v44;
      v42 = v45;
      v43 = v46;
      static TTSVBError.perform<A>(_:problem:reason:)((void (*)(uint64_t))sub_248762754, (uint64_t)v28, (uint64_t)&v41, v15);
      sub_2486F507C(v24, v25, v26);
      sub_2486EDA68(v15, type metadata accessor for TTSVBError.Reason);

      return (uint64_t)v10;
    }
    LODWORD(v30) = 0;
    v29 = 3455;
    v28[0] = 2;
  }
  result = sub_2487B5B4C();
  __break(1u);
  return result;
}

id sub_248761B30@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_24875F528(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), a1);
}

id sub_248761B4C()
{
  return sub_248761BC4();
}

uint64_t sub_248761B60()
{
  uint64_t v0;

  return swift_deallocObject();
}

void *sub_248761B84(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  void *v3;
  id v4;

  v3 = *(void **)(v2 + 16);
  *a2 = 0;
  v4 = v3;
  return v3;
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

id sub_248761BC4()
{
  uint64_t v0;
  id result;
  uint64_t v2;
  id v3;
  id v4;

  result = **(id **)(v0 + 16);
  if (result)
  {
    v2 = *(_QWORD *)(v0 + 24);
    v4 = 0;
    if (objc_msgSend(result, sel_writeFromBuffer_error_, v2, &v4))
    {
      return v4;
    }
    else
    {
      v3 = v4;
      sub_2487B4F64();

      return (id)swift_willThrow();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_248761C48(id a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 1)

}

uint64_t sub_248761C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTSVBError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for TTSVBAudioTools()
{
  return &type metadata for TTSVBAudioTools;
}

void destroy for TTSVBAudioTools.RecordingAnalysis(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for TTSVBAudioTools.RecordingAnalysis(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for TTSVBAudioTools.RecordingAnalysis(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v4 = (void *)a1[3];
  v5 = (void *)a2[3];
  a1[3] = v5;
  v6 = v5;

  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *assignWithTake for TTSVBAudioTools.RecordingAnalysis(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = (void *)a1[3];
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;

  return a1;
}

uint64_t getEnumTagSinglePayload for TTSVBAudioTools.RecordingAnalysis(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTSVBAudioTools.RecordingAnalysis(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSVBAudioTools.RecordingAnalysis()
{
  return &type metadata for TTSVBAudioTools.RecordingAnalysis;
}

uint64_t sub_248761E88()
{
  return type metadata accessor for TTSVBAudioTools.Box();
}

uint64_t type metadata accessor for TTSVBAudioTools.Box()
{
  uint64_t result;

  result = qword_25778CC28;
  if (!qword_25778CC28)
    return swift_getSingletonMetadata();
  return result;
}

void sub_248761ECC()
{
  unint64_t v0;

  sub_248761F44();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_248761F44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25445ED58[0])
  {
    type metadata accessor for TTSVBError(255);
    v0 = sub_2487B5924();
    if (!v1)
      atomic_store(v0, qword_25445ED58);
  }
}

__n128 __swift_memcpy24_4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_248761FAC(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_248761FCC(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
  sub_24871F99C(a1, &qword_25777D4E0);
}

uint64_t sub_24876200C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(void);
  dispatch_semaphore_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, double);
  id v27;
  void *v28;
  id v29;
  NSObject *v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  unint64_t aBlock;
  unint64_t v56;
  void (*v57)(uint64_t, void *, void *);
  void *v58;
  void (*v59)(void *, void *);
  uint64_t v60;
  uint64_t v61;

  v61 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED50);
  MEMORY[0x24BDAC7A8](v1);
  v53 = (uint64_t)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for TTSVBError(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v45 = (uint64_t)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v47);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777D4F0);
  MEMORY[0x24BDAC7A8](v46);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TTSVBAudioTools.Box();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v10 + 24) = 0;
  v50 = v10
      + OBJC_IVAR____TtCZFV31TextToSpeechVoiceBankingSupport15TTSVBAudioToolsP33_8AA1E519C2B447388B86016717E8907330recognizeTextFromAudioFileSyncFzT3urlV10Foundation3URL_GSqSS_L_3Box_error;
  v51 = v4;
  v11 = *(void (**)(void))(v4 + 56);
  v52 = v3;
  v11();
  v12 = dispatch_semaphore_create(0);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v10;
  *(_QWORD *)(v13 + 24) = v12;
  v14 = sub_2487B5270();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain_n();
  v54 = v12;
  sub_2487B5234();
  v18 = objc_allocWithZone(MEMORY[0x24BDE9E40]);
  v19 = (void *)sub_2487B524C();
  v20 = objc_msgSend(v18, sel_initWithLocale_, v19);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v48 = v20;
  if (v20)
  {
    v21 = sub_2487B50CC();
    v22 = MEMORY[0x24BDAC7A8](v21);
    v24 = (char *)&v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    v26 = *(void (**)(char *, uint64_t, uint64_t, double))(v25 + 16);
    v26(v24, v61, v21, v22);
    v27 = objc_allocWithZone(MEMORY[0x24BDB1810]);
    v28 = v49;
    v29 = sub_2487614A8((uint64_t)v24);
    if (v28)
    {
      aBlock = 0xD000000000000015;
      v56 = 0x80000002487C62F0;
      LOBYTE(v57) = 0;
      ((void (*)(char *, uint64_t, uint64_t))v26)(v7, v61, v21);
      swift_storeEnumTagMultiPayload();
      TTSVBError.init(_:_:_:)((uint64_t)&aBlock, (uint64_t)v7, 0, (uint64_t)v9);
      swift_storeEnumTagMultiPayload();
      v30 = v54;
      sub_2487606A8((uint64_t)v9, v10);

      sub_2486F5008((uint64_t)v9, &qword_25777D4F0);
      swift_release();
      swift_release();
    }
    else
    {

      v31 = objc_allocWithZone(MEMORY[0x24BDE9E48]);
      v32 = (void *)sub_2487B503C();
      v33 = objc_msgSend(v31, sel_initWithURL_, v32);

      objc_msgSend(v33, sel_setShouldReportPartialResults_, 0);
      objc_msgSend(v33, sel_setRequiresOnDeviceRecognition_, 0);
      v34 = swift_allocObject();
      *(_QWORD *)(v34 + 16) = sub_2487625EC;
      *(_QWORD *)(v34 + 24) = v13;
      v59 = sub_248762618;
      v60 = v34;
      aBlock = MEMORY[0x24BDAC760];
      v56 = 1107296256;
      v57 = sub_248760634;
      v58 = &block_descriptor_11;
      v35 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      v36 = v48;
      v37 = objc_msgSend(v48, sel_recognitionTaskWithRequest_resultHandler_, v33, v35);
      _Block_release(v35);
      v30 = v54;

      swift_release();
      swift_release();

    }
    sub_2487B5888();
    v38 = v50;
    swift_beginAccess();
    v39 = v38;
    v40 = v53;
    sub_2486F4E74(v39, v53, &qword_25445ED50);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v40, 1, v52) == 1)
    {

      sub_2486F5008(v40, &qword_25445ED50);
      v41 = *(_QWORD *)(v10 + 16);
      swift_bridgeObjectRetain();
      swift_release();
    }
    else
    {
      v42 = v40;
      v41 = v45;
      sub_248761C5C(v42, v45);
      sub_2486EDB24();
      swift_allocError();
      sub_2486F4994(v41, v43);
      swift_willThrow();
      swift_release();

      sub_2486EDA68(v41, type metadata accessor for TTSVBError);
    }
    return v41;
  }
  else
  {

    result = swift_release();
    __break(1u);
  }
  return result;
}

uint64_t sub_2487625C0()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2487625EC(uint64_t a1)
{
  uint64_t v1;

  return sub_2487606A8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_2487625F4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_248762618(void *a1, void *a2)
{
  uint64_t v2;

  sub_248760098(a1, a2, *(void (**)(char *))(v2 + 16), *(_QWORD *)(v2 + 24));
}

unint64_t sub_248762620()
{
  unint64_t result;

  result = qword_25777D510;
  if (!qword_25777D510)
  {
    result = MEMORY[0x24959AEB4](MEMORY[0x24BEE0D48], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_25777D510);
  }
  return result;
}

unint64_t sub_248762664()
{
  unint64_t result;

  result = qword_25777D518;
  if (!qword_25777D518)
  {
    result = MEMORY[0x24959AEB4](MEMORY[0x24BEE0D40], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_25777D518);
  }
  return result;
}

unint64_t sub_2487626A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25777D520;
  if (!qword_25777D520)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25777D4F8);
    result = MEMORY[0x24959AEB4](MEMORY[0x24BEE7460], v1);
    atomic_store(result, (unint64_t *)&qword_25777D520);
  }
  return result;
}

uint64_t sub_2487626F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id sub_24876273C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_24875DA48(*(_QWORD *)(v1 + 16), a1);
}

id sub_248762754()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v4;
  id v5;

  v1 = *(void **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v5 = 0;
  if (objc_msgSend(v1, sel_readIntoBuffer_error_, v2, &v5))
    return v5;
  v4 = v5;
  sub_2487B4F64();

  return (id)swift_willThrow();
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
  sub_24871F99C(a1, &qword_25777D528);
}

uint64_t sub_2487627E4(_QWORD **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x60))();
}

uint64_t sub_24876281C(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v10;

  v4 = type metadata accessor for TTSVBVoice();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_248709554(a1, (uint64_t)v6, v7);
  v8 = *a2 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport25TTSVBVoiceModelCollection_voice;
  swift_beginAccess();
  sub_24876297C((uint64_t)v6, v8);
  return swift_endAccess();
}

uint64_t sub_2487628CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport25TTSVBVoiceModelCollection_voice;
  swift_beginAccess();
  return sub_248709554(v3, a1, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoice);
}

uint64_t sub_248762924(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport25TTSVBVoiceModelCollection_voice;
  swift_beginAccess();
  sub_24876297C(a1, v3);
  return swift_endAccess();
}

uint64_t sub_24876297C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTSVBVoice();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2487629C0@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x78))();
  *a2 = result;
  return result;
}

uint64_t sub_248762A00(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport25TTSVBVoiceModelCollection_models);
  swift_beginAccess();
  *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_248762A68()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_248762AB0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport25TTSVBVoiceModelCollection_models);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

id sub_248762B00(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  id v4;
  objc_super v6;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport25TTSVBVoiceModelCollection_models] = MEMORY[0x24BEE4AF8];
  sub_248709554(a1, (uint64_t)&v3[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport25TTSVBVoiceModelCollection_voice], (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoice);
  v6.receiver = v3;
  v6.super_class = v1;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  sub_2486EDA68(a1, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoice);
  return v4;
}

uint64_t type metadata accessor for TTSVBVoiceModelCollection()
{
  uint64_t result;

  result = qword_25778CE50;
  if (!qword_25778CE50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_248762BD0()
{
  _QWORD *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;

  v1 = type metadata accessor for TTSVBVoice();
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (uint64_t *)((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(double))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))(v2);
  v5 = *v4;
  swift_bridgeObjectRetain();
  sub_2486EDA68((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoice);
  return v5;
}

uint64_t sub_248762C70@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v3 = type metadata accessor for TTSVBVoice();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(double))((*MEMORY[0x24BEE4EA0] & *v1) + 0x60))(v4);
  v7 = &v6[*(int *)(v3 + 20)];
  v8 = sub_2487B5228();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, v7, v8);
  return sub_2486EDA68((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoice);
}

uint64_t sub_248762D34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  _QWORD **v8;
  _QWORD *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;

  v3 = type metadata accessor for TTSVBInstalledVoiceModel();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_248709554(a1, (uint64_t)v6, v7);
  v8 = (_QWORD **)(v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport25TTSVBVoiceModelCollection_models);
  swift_beginAccess();
  v9 = *v8;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v8 = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v9 = (_QWORD *)sub_248764C68(0, v9[2] + 1, 1, v9);
    *v8 = v9;
  }
  v12 = v9[2];
  v11 = v9[3];
  if (v12 >= v11 >> 1)
  {
    v9 = (_QWORD *)sub_248764C68(v11 > 1, v12 + 1, 1, v9);
    *v8 = v9;
  }
  v9[2] = v12 + 1;
  sub_24870A2C4((uint64_t)v6, (uint64_t)v9+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v12, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBInstalledVoiceModel);
  sub_248763908(v8);
  return swift_endAccess();
}

uint64_t static TTSVBVoiceModelCollection.< infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v3 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v4 = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *a1) + 0x98))();
  v6 = v5;
  if (v4 == (*(uint64_t (**)(void))((*v3 & *a2) + 0x98))() && v6 == v7)
    v9 = 0;
  else
    v9 = sub_2487B5CE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_248762F34()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t sub_248762F50()
{
  uint64_t v0;

  sub_2487B4E50();
  swift_allocObject();
  sub_2487B4E44();
  type metadata accessor for TTSVBVoiceModelCollection();
  sub_2486F4CA0(&qword_25777D530, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModelCollection, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModelCollection);
  v0 = sub_2487B4E38();
  swift_release();
  return v0;
}

id TTSVBVoiceModelCollection.__allocating_init(data:)(uint64_t a1, unint64_t a2)
{
  objc_class *v2;
  id v5;
  id v6;

  v5 = objc_allocWithZone(v2);
  v6 = sub_248764DF0();
  sub_2486F4A28(a1, a2);
  return v6;
}

id TTSVBVoiceModelCollection.init(data:)(uint64_t a1, unint64_t a2)
{
  id v4;

  v4 = sub_248764DF0();
  sub_2486F4A28(a1, a2);
  return v4;
}

id TTSVBVoiceModelCollection.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void TTSVBVoiceModelCollection.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_248763124()
{
  _BYTE *v0;

  if (*v0)
    return 0x736C65646F6DLL;
  else
    return 0x6563696F76;
}

uint64_t sub_248763158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2487653D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24876317C()
{
  sub_248764FC0();
  return sub_2487B5DBC();
}

uint64_t sub_2487631A4()
{
  sub_248764FC0();
  return sub_2487B5DC8();
}

id TTSVBVoiceModelCollection.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTSVBVoiceModelCollection();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_248763240(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD v15[2];
  char v16;
  char v17;

  v3 = v1;
  v5 = type metadata accessor for TTSVBVoice();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777D538);
  v15[0] = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248764FC0();
  v11 = sub_2487B5DB0();
  v12 = (_QWORD *)MEMORY[0x24BEE4EA0];
  (*(void (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v3) + 0x60))(v11);
  v17 = 0;
  sub_2486F4CA0(&qword_25777C1C8, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoice, (uint64_t)&protocol conformance descriptor for TTSVBVoice);
  sub_2487B5CA8();
  v13 = sub_2486EDA68((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoice);
  if (!v2)
  {
    v15[1] = (*(uint64_t (**)(uint64_t))((*v12 & *v3) + 0x78))(v13);
    v16 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25777D540);
    sub_248765004(&qword_25777D548, &qword_25445ECF8, (uint64_t)&protocol conformance descriptor for TTSVBInstalledVoiceModel, MEMORY[0x24BEE12A0]);
    sub_2487B5CA8();
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v15[0] + 8))(v10, v8);
}

void *TTSVBVoiceModelCollection.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return TTSVBVoiceModelCollection.init(from:)(a1);
}

void *TTSVBVoiceModelCollection.init(from:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  objc_class *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  objc_super v27;
  char v28;
  uint64_t v29;

  v3 = v1;
  v5 = type metadata accessor for TTSVBVoice();
  MEMORY[0x24BDAC7A8](v5);
  v22 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777D550);
  v7 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = &v3[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport25TTSVBVoiceModelCollection_models];
  v26 = a1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport25TTSVBVoiceModelCollection_models] = MEMORY[0x24BEE4AF8];
  v10 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248764FC0();
  v11 = v3;
  v23 = v9;
  sub_2487B5DA4();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);

    swift_bridgeObjectRelease();
    type metadata accessor for TTSVBVoiceModelCollection();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v12 = v7;
    v28 = 0;
    sub_2486F4CA0(&qword_25777C1C0, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoice, (uint64_t)&protocol conformance descriptor for TTSVBVoice);
    v13 = (uint64_t)v22;
    v14 = v23;
    v15 = v24;
    sub_2487B5C24();
    sub_24870A2C4(v13, (uint64_t)&v11[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport25TTSVBVoiceModelCollection_voice], (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoice);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25777D540);
    v28 = 1;
    sub_248765004(&qword_25777D558, &qword_25445ED00, (uint64_t)&protocol conformance descriptor for TTSVBInstalledVoiceModel, MEMORY[0x24BEE12D0]);
    sub_2487B5C24();
    v17 = v12;
    v18 = v29;
    v19 = v14;
    v20 = v25;
    swift_beginAccess();
    *(_QWORD *)v20 = v18;

    swift_bridgeObjectRelease();
    v21 = (objc_class *)type metadata accessor for TTSVBVoiceModelCollection();
    v27.receiver = v11;
    v27.super_class = v21;
    v10 = objc_msgSendSuper2(&v27, sel_init);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v15);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
  }
  return v10;
}

uint64_t sub_2487637A8(_QWORD **a1, _QWORD **a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = *a2;
  v3 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v4 = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x98))();
  v6 = v5;
  if (v4 == (*(uint64_t (**)(void))((*v3 & *v2) + 0x98))() && v6 == v7)
    v9 = 0;
  else
    v9 = sub_2487B5CE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_24876386C()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **v0) + 0xB0))();
}

uint64_t sub_2487638A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 208))();
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_2487638D0()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **v0) + 0xC8))();
}

void sub_248763908(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *(_QWORD *)(type metadata accessor for TTSVBInstalledVoiceModel() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_248764DDC(v3);
  v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_24876398C(v5);
  *a1 = v3;
}

void sub_24876398C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  char *v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  uint64_t v83;
  char v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char *v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  unint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;

  v2 = v1;
  v4 = type metadata accessor for TTSVBInstalledVoiceModel();
  v124 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v121 = (uint64_t)&v115 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v132 = (uint64_t)&v115 - v7;
  MEMORY[0x24BDAC7A8](v8);
  v129 = (uint64_t)&v115 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v128 = (uint64_t)&v115 - v11;
  v12 = a1[1];
  v13 = sub_2487B5CC0();
  if (v13 >= v12)
  {
    if (v12 < 0)
      goto LABEL_141;
    if (v12)
      sub_2487643AC(0, v12, 1, a1);
    return;
  }
  if (v12 >= 0)
    v14 = v12;
  else
    v14 = v12 + 1;
  if (v12 < -1)
    goto LABEL_140;
  v130 = a1;
  v118 = v13;
  if (v12 > 1)
  {
    v15 = v14 >> 1;
    v16 = sub_2487B56B4();
    *(_QWORD *)(v16 + 16) = v15;
    v17 = *(unsigned __int8 *)(v124 + 80);
    v117 = v16;
    v123 = v16 + ((v17 + 32) & ~v17);
LABEL_12:
    v19 = 0;
    v18 = (char *)MEMORY[0x24BEE4AF8];
    while (1)
    {
      v21 = v19;
      v22 = v19 + 1;
      if (v19 + 1 >= v12)
      {
        v30 = v19 + 1;
        v23 = v130;
        goto LABEL_39;
      }
      v125 = v2;
      v23 = v130;
      v24 = *v130;
      v25 = *(_QWORD *)(v124 + 72);
      v26 = *v130 + v25 * v22;
      v131 = v12;
      v27 = v128;
      sub_248709554(v26, v128, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBInstalledVoiceModel);
      v28 = v129;
      sub_248709554(v24 + v25 * v21, v129, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBInstalledVoiceModel);
      v126 = sub_2486F4CA0(&qword_25777D598, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBInstalledVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBInstalledVoiceModel);
      LODWORD(v127) = sub_2487B54A4();
      sub_2486EDA68(v28, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBInstalledVoiceModel);
      v29 = v27;
      v12 = v131;
      sub_2486EDA68(v29, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBInstalledVoiceModel);
      v30 = v21 + 2;
      v119 = v24;
      v133 = v25;
      if (v21 + 2 >= v12)
        break;
      v122 = v21;
      v120 = v25 * v22;
      v31 = v24;
      v32 = v25 * v30;
      while (1)
      {
        v33 = v30;
        v34 = v128;
        sub_248709554(v31 + v32, v128, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBInstalledVoiceModel);
        v35 = v129;
        sub_248709554(v31 + v120, v129, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBInstalledVoiceModel);
        v36 = sub_2487B54A4();
        sub_2486EDA68(v35, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBInstalledVoiceModel);
        sub_2486EDA68(v34, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBInstalledVoiceModel);
        if (((v127 ^ v36) & 1) != 0)
          break;
        v30 = v33 + 1;
        v31 += v133;
        if (v131 == v33 + 1)
        {
          v23 = v130;
          v12 = v131;
          v30 = v131;
          v2 = v125;
          goto LABEL_25;
        }
      }
      v23 = v130;
      v12 = v131;
      v2 = v125;
      v30 = v33;
LABEL_25:
      v21 = v122;
      v24 = v119;
      if ((v127 & 1) != 0)
        goto LABEL_26;
LABEL_39:
      if (v30 < v12)
      {
        if (__OFSUB__(v30, v21))
          goto LABEL_139;
        if (v30 - v21 < v118)
        {
          if (__OFADD__(v21, v118))
            goto LABEL_143;
          if (v21 + v118 >= v12)
            v45 = v12;
          else
            v45 = v21 + v118;
          if (v45 < v21)
          {
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
            return;
          }
          if (v30 != v45)
          {
            v122 = v21;
            v116 = v18;
            v46 = *(_QWORD *)(v124 + 72);
            v133 = v46 * (v30 - 1);
            v125 = v2;
            v126 = v46;
            v47 = v30 * v46;
            v120 = v45;
            do
            {
              v49 = 0;
              v50 = v122;
              v131 = v30;
              v127 = v47;
              while (1)
              {
                v51 = *v23;
                v52 = v47 + v49 + *v23;
                v53 = v128;
                sub_248709554(v52, v128, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBInstalledVoiceModel);
                v54 = v129;
                sub_248709554(v133 + v49 + v51, v129, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBInstalledVoiceModel);
                sub_2486F4CA0(&qword_25777D598, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBInstalledVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBInstalledVoiceModel);
                LOBYTE(v51) = sub_2487B54A4();
                sub_2486EDA68(v54, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBInstalledVoiceModel);
                sub_2486EDA68(v53, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBInstalledVoiceModel);
                if ((v51 & 1) == 0)
                  break;
                v55 = *v23;
                if (!*v23)
                  goto LABEL_145;
                v47 = v127;
                v56 = v55 + v133 + v49;
                sub_24870A2C4(v55 + v127 + v49, v132, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBInstalledVoiceModel);
                swift_arrayInitWithTakeFrontToBack();
                sub_24870A2C4(v132, v56, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBInstalledVoiceModel);
                v49 -= v126;
                ++v50;
                v23 = v130;
                v48 = v131;
                if (v131 == v50)
                  goto LABEL_50;
              }
              v48 = v131;
              v47 = v127;
LABEL_50:
              v30 = v48 + 1;
              v133 += v126;
              v47 += v126;
            }
            while (v30 != v120);
            v30 = v120;
            v2 = v125;
            v18 = v116;
            v21 = v122;
          }
        }
      }
      if (v30 < v21)
        goto LABEL_134;
      v131 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v18 = sub_248764AAC(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
      v58 = *((_QWORD *)v18 + 2);
      v57 = *((_QWORD *)v18 + 3);
      v20 = v58 + 1;
      v19 = v131;
      v125 = v2;
      if (v58 >= v57 >> 1)
      {
        v108 = sub_248764AAC((char *)(v57 > 1), v58 + 1, 1, v18);
        v19 = v131;
        v18 = v108;
      }
      *((_QWORD *)v18 + 2) = v20;
      v59 = v18 + 32;
      v60 = &v18[16 * v58 + 32];
      *(_QWORD *)v60 = v21;
      *((_QWORD *)v60 + 1) = v19;
      if (v58)
      {
        while (1)
        {
          v61 = v20 - 1;
          if (v20 >= 4)
          {
            v66 = &v59[16 * v20];
            v67 = *((_QWORD *)v66 - 8);
            v68 = *((_QWORD *)v66 - 7);
            v72 = __OFSUB__(v68, v67);
            v69 = v68 - v67;
            if (v72)
              goto LABEL_123;
            v71 = *((_QWORD *)v66 - 6);
            v70 = *((_QWORD *)v66 - 5);
            v72 = __OFSUB__(v70, v71);
            v64 = v70 - v71;
            v65 = v72;
            if (v72)
              goto LABEL_124;
            v73 = v20 - 2;
            v74 = &v59[16 * v20 - 32];
            v76 = *(_QWORD *)v74;
            v75 = *((_QWORD *)v74 + 1);
            v72 = __OFSUB__(v75, v76);
            v77 = v75 - v76;
            if (v72)
              goto LABEL_125;
            v72 = __OFADD__(v64, v77);
            v78 = v64 + v77;
            if (v72)
              goto LABEL_127;
            if (v78 >= v69)
            {
              v96 = &v59[16 * v61];
              v98 = *(_QWORD *)v96;
              v97 = *((_QWORD *)v96 + 1);
              v72 = __OFSUB__(v97, v98);
              v99 = v97 - v98;
              if (v72)
                goto LABEL_133;
              v89 = v64 < v99;
              goto LABEL_94;
            }
          }
          else
          {
            if (v20 != 3)
            {
              v90 = *((_QWORD *)v18 + 4);
              v91 = *((_QWORD *)v18 + 5);
              v72 = __OFSUB__(v91, v90);
              v83 = v91 - v90;
              v84 = v72;
              goto LABEL_88;
            }
            v63 = *((_QWORD *)v18 + 4);
            v62 = *((_QWORD *)v18 + 5);
            v72 = __OFSUB__(v62, v63);
            v64 = v62 - v63;
            v65 = v72;
          }
          if ((v65 & 1) != 0)
            goto LABEL_126;
          v73 = v20 - 2;
          v79 = &v59[16 * v20 - 32];
          v81 = *(_QWORD *)v79;
          v80 = *((_QWORD *)v79 + 1);
          v82 = __OFSUB__(v80, v81);
          v83 = v80 - v81;
          v84 = v82;
          if (v82)
            goto LABEL_128;
          v85 = &v59[16 * v61];
          v87 = *(_QWORD *)v85;
          v86 = *((_QWORD *)v85 + 1);
          v72 = __OFSUB__(v86, v87);
          v88 = v86 - v87;
          if (v72)
            goto LABEL_130;
          if (__OFADD__(v83, v88))
            goto LABEL_132;
          if (v83 + v88 >= v64)
          {
            v89 = v64 < v88;
LABEL_94:
            if (v89)
              v61 = v73;
            goto LABEL_96;
          }
LABEL_88:
          if ((v84 & 1) != 0)
            goto LABEL_129;
          v92 = &v59[16 * v61];
          v94 = *(_QWORD *)v92;
          v93 = *((_QWORD *)v92 + 1);
          v72 = __OFSUB__(v93, v94);
          v95 = v93 - v94;
          if (v72)
            goto LABEL_131;
          if (v95 < v83)
            goto LABEL_14;
LABEL_96:
          v100 = v61 - 1;
          if (v61 - 1 >= v20)
          {
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
            goto LABEL_144;
          }
          if (!*v130)
            goto LABEL_146;
          v101 = v18;
          v102 = &v59[16 * v100];
          v103 = *(_QWORD *)v102;
          v104 = &v59[16 * v61];
          v105 = *((_QWORD *)v104 + 1);
          v106 = v125;
          sub_24876461C(*v130 + *(_QWORD *)(v124 + 72) * *(_QWORD *)v102, *v130 + *(_QWORD *)(v124 + 72) * *(_QWORD *)v104, *v130 + *(_QWORD *)(v124 + 72) * v105, v123);
          v125 = v106;
          if (v106)
            goto LABEL_117;
          if (v105 < v103)
            goto LABEL_120;
          if (v61 > *((_QWORD *)v101 + 2))
            goto LABEL_121;
          *(_QWORD *)v102 = v103;
          *(_QWORD *)&v59[16 * v100 + 8] = v105;
          v107 = *((_QWORD *)v101 + 2);
          if (v61 >= v107)
            goto LABEL_122;
          v18 = v101;
          v20 = v107 - 1;
          memmove(&v59[16 * v61], v104 + 16, 16 * (v107 - 1 - v61));
          *((_QWORD *)v101 + 2) = v107 - 1;
          v19 = v131;
          if (v107 <= 2)
            goto LABEL_14;
        }
      }
      v20 = 1;
LABEL_14:
      v12 = v130[1];
      v2 = v125;
      if (v19 >= v12)
        goto LABEL_106;
    }
    v2 = v125;
    if ((v127 & 1) == 0)
      goto LABEL_39;
LABEL_26:
    if (v30 < v21)
      goto LABEL_142;
    if (v21 < v30)
    {
      v116 = v18;
      v125 = v2;
      v37 = 0;
      v38 = v133;
      v39 = v133 * (v30 - 1);
      v40 = v30 * v133;
      v41 = v21;
      v122 = v21;
      v42 = v21 * v133;
      do
      {
        if (v41 != v30 + v37 - 1)
        {
          if (!v24)
            goto LABEL_147;
          v44 = v30;
          v127 = v24 + v39;
          sub_24870A2C4(v24 + v42, v121, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBInstalledVoiceModel);
          if (v42 < v39 || v24 + v42 >= (unint64_t)(v24 + v40))
          {
            v43 = v127;
            swift_arrayInitWithTakeFrontToBack();
          }
          else
          {
            v43 = v127;
            if (v42 != v39)
              swift_arrayInitWithTakeBackToFront();
          }
          sub_24870A2C4(v121, v43, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBInstalledVoiceModel);
          v23 = v130;
          v30 = v44;
          v24 = v119;
          v38 = v133;
        }
        ++v41;
        --v37;
        v39 -= v38;
        v40 -= v38;
        v42 += v38;
      }
      while (v41 < v30 + v37);
      v2 = v125;
      v18 = v116;
      v21 = v122;
      v12 = v131;
    }
    goto LABEL_39;
  }
  v18 = (char *)MEMORY[0x24BEE4AF8];
  v123 = MEMORY[0x24BEE4AF8]
       + ((*(unsigned __int8 *)(v124 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80));
  v117 = MEMORY[0x24BEE4AF8];
  if (v12 == 1)
    goto LABEL_12;
  v20 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_106:
  if (v20 >= 2)
  {
    v109 = *v130;
    do
    {
      v110 = v20 - 2;
      if (v20 < 2)
        goto LABEL_135;
      if (!v109)
        goto LABEL_148;
      v111 = *(_QWORD *)&v18[16 * v110 + 32];
      v112 = *(_QWORD *)&v18[16 * v20 + 24];
      sub_24876461C(v109 + *(_QWORD *)(v124 + 72) * v111, v109 + *(_QWORD *)(v124 + 72) * *(_QWORD *)&v18[16 * v20 + 16], v109 + *(_QWORD *)(v124 + 72) * v112, v123);
      if (v2)
        break;
      if (v112 < v111)
        goto LABEL_136;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v18 = sub_248764C54((uint64_t)v18);
      if (v110 >= *((_QWORD *)v18 + 2))
        goto LABEL_137;
      v113 = &v18[16 * v110 + 32];
      *(_QWORD *)v113 = v111;
      *((_QWORD *)v113 + 1) = v112;
      v114 = *((_QWORD *)v18 + 2);
      if (v20 > v114)
        goto LABEL_138;
      memmove(&v18[16 * v20 + 16], &v18[16 * v20 + 32], 16 * (v114 - v20));
      *((_QWORD *)v18 + 2) = v114 - 1;
      v20 = v114 - 1;
    }
    while (v114 > 2);
  }
LABEL_117:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v117 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_2487643AC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)();
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v32 = a1;
  v39 = type metadata accessor for TTSVBInstalledVoiceModel();
  MEMORY[0x24BDAC7A8](v39);
  v40 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v35 = (uint64_t)&v30 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v34 = (uint64_t)&v30 - v12;
  v38 = a3;
  v31 = a2;
  if (a3 != a2)
  {
    v13 = *(_QWORD *)(v11 + 72);
    v14 = v13 * (v38 - 1);
    v36 = v13;
    v15 = v13 * v38;
    v16 = type metadata accessor for TTSVBInstalledVoiceModel;
    v33 = a4;
LABEL_5:
    v17 = 0;
    v41 = v32;
    v37 = v15;
    while (1)
    {
      v18 = *a4;
      v19 = v15 + v17 + *a4;
      v20 = v34;
      sub_248709554(v19, v34, (uint64_t (*)(_QWORD))v16);
      v21 = v14 + v17 + v18;
      v22 = v14;
      v23 = v35;
      sub_248709554(v21, v35, (uint64_t (*)(_QWORD))v16);
      sub_2486F4CA0(&qword_25777D598, (uint64_t (*)(uint64_t))v16, (uint64_t)&protocol conformance descriptor for TTSVBInstalledVoiceModel);
      v24 = v16;
      LOBYTE(v18) = sub_2487B54A4();
      v25 = v23;
      v14 = v22;
      a4 = v33;
      sub_2486EDA68(v25, (uint64_t (*)(_QWORD))v16);
      v26 = v20;
      v15 = v37;
      sub_2486EDA68(v26, (uint64_t (*)(_QWORD))v16);
      if ((v18 & 1) == 0)
      {
LABEL_4:
        v14 += v36;
        v15 += v36;
        if (++v38 == v31)
          return;
        goto LABEL_5;
      }
      v27 = *a4;
      if (!*a4)
        break;
      v28 = a4;
      v29 = v27 + v14 + v17;
      sub_24870A2C4(v27 + v15 + v17, v40, (uint64_t (*)(_QWORD))v24);
      swift_arrayInitWithTakeFrontToBack();
      sub_24870A2C4(v40, v29, (uint64_t (*)(_QWORD))v24);
      v17 -= v36;
      ++v41;
      a4 = v28;
      v16 = v24;
      if (v38 == v41)
        goto LABEL_4;
    }
    __break(1u);
  }
}

void sub_24876461C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  BOOL v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;

  v8 = type metadata accessor for TTSVBInstalledVoiceModel();
  MEMORY[0x24BDAC7A8](v8);
  v43 = (uint64_t)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v42 = (uint64_t)&v38 - v11;
  v13 = *(_QWORD *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
    return;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_59;
  v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_60;
  v15 = (uint64_t)(a2 - a1) / v13;
  v46 = a1;
  v45 = a4;
  if (v15 >= v14 / v13)
  {
    v17 = v14 / v13 * v13;
    if (a4 < a2 || a2 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v26 = a4 + v17;
    v44 = a4 + v17;
    v46 = a2;
    if (v17 >= 1 && a1 < a2)
    {
      v28 = -v13;
      v39 = a4;
      v40 = a1;
      v29 = v43;
      do
      {
        v41 = a3 + v28;
        v30 = a3;
        v31 = v42;
        sub_248709554(v26 + v28, v42, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBInstalledVoiceModel);
        v32 = a2 + v28;
        sub_248709554(a2 + v28, v29, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBInstalledVoiceModel);
        sub_2486F4CA0(&qword_25777D598, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBInstalledVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBInstalledVoiceModel);
        v33 = sub_2487B54A4();
        sub_2486EDA68(v29, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBInstalledVoiceModel);
        sub_2486EDA68(v31, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBInstalledVoiceModel);
        if ((v33 & 1) != 0)
        {
          a3 = v41;
          if (v30 < a2 || v41 >= a2)
          {
            swift_arrayInitWithTakeFrontToBack();
            v35 = v39;
            v36 = v40;
          }
          else
          {
            v34 = v30 == a2;
            v35 = v39;
            v36 = v40;
            if (!v34)
              swift_arrayInitWithTakeBackToFront();
          }
          v46 += v28;
        }
        else
        {
          v37 = v44;
          v44 += v28;
          a3 = v41;
          if (v30 < v37 || v41 >= v37)
          {
            swift_arrayInitWithTakeFrontToBack();
            v32 = a2;
            v35 = v39;
            v36 = v40;
          }
          else
          {
            v36 = v40;
            if (v30 != v37)
              swift_arrayInitWithTakeBackToFront();
            v32 = a2;
            v35 = v39;
          }
        }
        v26 = v44;
        if (v44 <= v35)
          break;
        a2 = v32;
      }
      while (v32 > v36);
    }
  }
  else
  {
    v16 = v15 * v13;
    if (a4 < a1 || a1 + v16 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v18 = a4 + v16;
    v44 = a4 + v16;
    if (v16 >= 1 && a2 < a3)
    {
      do
      {
        v20 = v42;
        sub_248709554(a2, v42, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBInstalledVoiceModel);
        v21 = v43;
        sub_248709554(a4, v43, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBInstalledVoiceModel);
        sub_2486F4CA0(&qword_25777D598, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBInstalledVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBInstalledVoiceModel);
        v22 = sub_2487B54A4();
        sub_2486EDA68(v21, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBInstalledVoiceModel);
        sub_2486EDA68(v20, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBInstalledVoiceModel);
        v23 = v46;
        if ((v22 & 1) != 0)
        {
          v24 = a2 + v13;
          if (v46 < a2 || v46 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v46 == a2)
          {
            v23 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v25 = v45 + v13;
          if (v46 < v45 || v46 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v46 != v45)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v45 = v25;
          v24 = a2;
        }
        v46 = v23 + v13;
        a4 = v45;
        if (v45 >= v18)
          break;
        a2 = v24;
      }
      while (v24 < a3);
    }
  }
  sub_248764BA4(&v46, &v45, (uint64_t *)&v44);
}

char *sub_248764AAC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25777D5A0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_248764BA4(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = type metadata accessor for TTSVBInstalledVoiceModel();
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_13;
  if (v3 < v4 || v3 >= v4 + (uint64_t)(v5 - v4) / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_248764C54(uint64_t a1)
{
  return sub_248764AAC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

size_t sub_248764C68(size_t result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  unint64_t v16;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777D218);
  v10 = *(_QWORD *)(type metadata accessor for TTSVBInstalledVoiceModel() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_29;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  v15 = *(_QWORD *)(type metadata accessor for TTSVBInstalledVoiceModel() - 8);
  if ((v5 & 1) != 0)
  {
    if (v13 < a4
      || (v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(_QWORD *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v13;
}

size_t sub_248764DDC(_QWORD *a1)
{
  return sub_248764C68(0, a1[2], 0, a1);
}

id sub_248764DF0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t *v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  objc_super v13;
  _QWORD *v14;

  swift_getObjectType();
  v1 = type metadata accessor for TTSVBVoice();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (uint64_t *)&v0[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport25TTSVBVoiceModelCollection_models];
  *(_QWORD *)&v0[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport25TTSVBVoiceModelCollection_models] = MEMORY[0x24BEE4AF8];
  sub_2487B4E2C();
  swift_allocObject();
  v5 = v0;
  sub_2487B4E20();
  sub_2486F4CA0(&qword_25777D590, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModelCollection, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModelCollection);
  v6 = sub_2487B4E14();
  v7 = v14;
  v8 = (_QWORD *)MEMORY[0x24BEE4EA0];
  (*(void (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v14) + 0x60))(v6);
  v9 = sub_24870A2C4((uint64_t)v3, (uint64_t)&v5[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport25TTSVBVoiceModelCollection_voice], (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoice);
  v10 = (*(uint64_t (**)(uint64_t))((*v8 & *v7) + 0x78))(v9);
  swift_release();

  swift_beginAccess();
  *v4 = v10;

  swift_bridgeObjectRelease();
  v11 = (objc_class *)type metadata accessor for TTSVBVoiceModelCollection();
  v13.receiver = v5;
  v13.super_class = v11;
  return objc_msgSendSuper2(&v13, sel_init);
}

unint64_t sub_248764FC0()
{
  unint64_t result;

  result = qword_25778CC40[0];
  if (!qword_25778CC40[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BF534, &type metadata for TTSVBVoiceModelCollection.CodingKeys);
    atomic_store(result, qword_25778CC40);
  }
  return result;
}

uint64_t sub_248765004(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25777D540);
    v10 = sub_2486F4CA0(a2, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBInstalledVoiceModel, a3);
    result = MEMORY[0x24959AEB4](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_248765088()
{
  return sub_2486F4CA0(&qword_25777D560, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModelCollection, MEMORY[0x24BEE5BE0]);
}

uint64_t sub_2487650B4()
{
  return type metadata accessor for TTSVBVoiceModelCollection();
}

uint64_t sub_2487650BC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for TTSVBVoice();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for TTSVBVoiceModelCollection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TTSVBVoiceModelCollection.voice.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of TTSVBVoiceModelCollection.models.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of TTSVBVoiceModelCollection.voiceName.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of TTSVBVoiceModelCollection.voiceID.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of TTSVBVoiceModelCollection.id.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of TTSVBVoiceModelCollection.convertToData()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of TTSVBVoiceModelCollection.__allocating_init(data:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of TTSVBVoiceModelCollection.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of TTSVBVoiceModelCollection.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t storeEnumTagSinglePayload for TTSVBVoiceModelCollection.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_248765280 + 4 * byte_2487BF365[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2487652B4 + 4 * asc_2487BF360[v4]))();
}

uint64_t sub_2487652B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2487652BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2487652C4);
  return result;
}

uint64_t sub_2487652D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2487652D8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2487652DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2487652E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTSVBVoiceModelCollection.CodingKeys()
{
  return &type metadata for TTSVBVoiceModelCollection.CodingKeys;
}

unint64_t sub_248765304()
{
  unint64_t result;

  result = qword_25778CF60[0];
  if (!qword_25778CF60[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BF50C, &type metadata for TTSVBVoiceModelCollection.CodingKeys);
    atomic_store(result, qword_25778CF60);
  }
  return result;
}

unint64_t sub_24876534C()
{
  unint64_t result;

  result = qword_25778D070;
  if (!qword_25778D070)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BF47C, &type metadata for TTSVBVoiceModelCollection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25778D070);
  }
  return result;
}

unint64_t sub_248765394()
{
  unint64_t result;

  result = qword_25778D078;
  if (!qword_25778D078)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BF4A4, &type metadata for TTSVBVoiceModelCollection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25778D078);
  }
  return result;
}

uint64_t sub_2487653D8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6563696F76 && a2 == 0xE500000000000000;
  if (v2 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736C65646F6DLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2487B5CE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t TTSVBVoiceModelStateTransition.previous.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_248709554(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
}

uint64_t TTSVBVoiceModelStateTransition.current.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TTSVBVoiceModelStateTransition();
  return sub_248709554(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
}

uint64_t type metadata accessor for TTSVBVoiceModelStateTransition()
{
  uint64_t result;

  result = qword_25445F8F0;
  if (!qword_25445F8F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t TTSVBVoiceModelStateTransition.init(previous:current:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;

  sub_2486EDA24(a1, a3);
  v5 = a3 + *(int *)(type metadata accessor for TTSVBVoiceModelStateTransition() + 20);
  return sub_2486EDA24(a2, v5);
}

uint64_t TTSVBVoiceModelStateTransition.description.getter()
{
  sub_2487B5AA4();
  swift_bridgeObjectRelease();
  type metadata accessor for TTSVBVoiceModel();
  sub_2486F4CA0(&qword_25777D5A8, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModel);
  sub_2487B5CCC();
  sub_2487B55AC();
  swift_bridgeObjectRelease();
  sub_2487B55AC();
  type metadata accessor for TTSVBVoiceModelStateTransition();
  sub_2487B5CCC();
  sub_2487B55AC();
  swift_bridgeObjectRelease();
  sub_2487B55AC();
  return 0x73756F6976657250;
}

uint64_t TTSVBVoiceModelStateTransition.convertToData()()
{
  uint64_t v0;

  sub_2487B4E50();
  swift_allocObject();
  sub_2487B4E44();
  type metadata accessor for TTSVBVoiceModelStateTransition();
  sub_2486F4CA0(&qword_25777D5B0, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModelStateTransition, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModelStateTransition);
  v0 = sub_2487B4E38();
  swift_release();
  return v0;
}

uint64_t TTSVBVoiceModelStateTransition.init(data:)(uint64_t a1, unint64_t a2)
{
  sub_2487B4E2C();
  swift_allocObject();
  sub_2487B4E20();
  type metadata accessor for TTSVBVoiceModelStateTransition();
  sub_2486F4CA0(&qword_25777D5B8, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModelStateTransition, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModelStateTransition);
  sub_2487B4E14();
  sub_2486F4A28(a1, a2);
  return swift_release();
}

BOOL TTSVBVoiceModelStateTransition.didTransitionToFinished.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  uint64_t v9;

  v1 = v0;
  v2 = type metadata accessor for TTSVBVoiceModelStateTransition();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTSVBVoiceModel();
  v6 = *(_QWORD *)(v1 + *(int *)(v5 + 52));
  sub_248709554(v1, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
  v7 = v6 != 7 && *(_QWORD *)&v4[*(int *)(v2 + 20) + *(int *)(v5 + 52)] == 7;
  sub_2486EDA68((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
  return v7;
}

BOOL TTSVBVoiceModelStateTransition.didTransitionToFailed.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  uint64_t v9;

  v1 = v0;
  v2 = type metadata accessor for TTSVBVoiceModelStateTransition();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTSVBVoiceModel();
  v6 = *(_QWORD *)(v1 + *(int *)(v5 + 52));
  sub_248709554(v1, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
  v7 = v6 != 5 && *(_QWORD *)&v4[*(int *)(v2 + 20) + *(int *)(v5 + 52)] == 5;
  sub_2486EDA68((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
  return v7;
}

BOOL TTSVBVoiceModelStateTransition.didTransitionToCancelled.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  uint64_t v9;

  v1 = v0;
  v2 = type metadata accessor for TTSVBVoiceModelStateTransition();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTSVBVoiceModel();
  v6 = *(_QWORD *)(v1 + *(int *)(v5 + 52));
  sub_248709554(v1, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
  v7 = v6 != 4 && *(_QWORD *)&v4[*(int *)(v2 + 20) + *(int *)(v5 + 52)] == 4;
  sub_2486EDA68((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
  return v7;
}

uint64_t TTSVBVoiceModelStateTransition.hash(into:)()
{
  type metadata accessor for TTSVBVoiceModel();
  sub_2486F4CA0(&qword_25777D2B8, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModel);
  sub_2487B5480();
  type metadata accessor for TTSVBVoiceModelStateTransition();
  return sub_2487B5480();
}

uint64_t static TTSVBVoiceModelStateTransition.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((static TTSVBVoiceModel.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  v4 = *(int *)(type metadata accessor for TTSVBVoiceModelStateTransition() + 20);
  return static TTSVBVoiceModel.== infix(_:_:)(a1 + v4, a2 + v4);
}

uint64_t sub_248765C44()
{
  _BYTE *v0;

  if (*v0)
    return 0x746E6572727563;
  else
    return 0x73756F6976657270;
}

uint64_t sub_248765C80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_248768934(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_248765CA4()
{
  sub_248766D30();
  return sub_2487B5DBC();
}

uint64_t sub_248765CCC()
{
  sub_248766D30();
  return sub_2487B5DC8();
}

uint64_t TTSVBVoiceModelStateTransition.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777D5C0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248766D30();
  sub_2487B5DB0();
  v8[15] = 0;
  type metadata accessor for TTSVBVoiceModel();
  sub_2486F4CA0(&qword_25777C1B0, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModel);
  sub_2487B5CA8();
  if (!v1)
  {
    type metadata accessor for TTSVBVoiceModelStateTransition();
    v8[14] = 1;
    sub_2487B5CA8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t TTSVBVoiceModelStateTransition.hashValue.getter()
{
  sub_2487B5D5C();
  type metadata accessor for TTSVBVoiceModel();
  sub_2486F4CA0(&qword_25777D2B8, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModel);
  sub_2487B5480();
  type metadata accessor for TTSVBVoiceModelStateTransition();
  sub_2487B5480();
  return sub_2487B5D98();
}

uint64_t TTSVBVoiceModelStateTransition.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;

  v22 = a2;
  v26 = type metadata accessor for TTSVBVoiceModel();
  MEMORY[0x24BDAC7A8](v26);
  v23 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v24 = (char *)&v19 - v6;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777D5C8);
  v7 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTSVBVoiceModelStateTransition();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248766D30();
  sub_2487B5DA4();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v20 = v12;
  v21 = a1;
  v19 = v10;
  v13 = v23;
  v28 = 0;
  sub_2486F4CA0(&qword_25777C1A8, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModel);
  v15 = (uint64_t)v24;
  v14 = v25;
  sub_2487B5C24();
  sub_2486EDA24(v15, (uint64_t)v20);
  v27 = 1;
  v16 = (uint64_t)v13;
  sub_2487B5C24();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v14);
  v17 = (uint64_t)v20;
  sub_2486EDA24(v16, (uint64_t)&v20[*(int *)(v19 + 20)]);
  sub_248709554(v17, v22, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
  return sub_2486EDA68(v17, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
}

uint64_t sub_248766180@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TTSVBVoiceModelStateTransition.init(from:)(a1, a2);
}

uint64_t sub_248766194(_QWORD *a1)
{
  return TTSVBVoiceModelStateTransition.encode(to:)(a1);
}

uint64_t sub_2487661A8()
{
  sub_2487B5D5C();
  type metadata accessor for TTSVBVoiceModel();
  sub_2486F4CA0(&qword_25777D2B8, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModel);
  sub_2487B5480();
  sub_2487B5480();
  return sub_2487B5D98();
}

uint64_t sub_24876623C()
{
  type metadata accessor for TTSVBVoiceModel();
  sub_2486F4CA0(&qword_25777D2B8, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModel);
  sub_2487B5480();
  return sub_2487B5480();
}

uint64_t sub_2487662C0()
{
  sub_2487B5D5C();
  type metadata accessor for TTSVBVoiceModel();
  sub_2486F4CA0(&qword_25777D2B8, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModel);
  sub_2487B5480();
  sub_2487B5480();
  return sub_2487B5D98();
}

uint64_t sub_248766350()
{
  sub_2487B5AA4();
  sub_2487B55AC();
  type metadata accessor for TTSVBVoiceModel();
  sub_2486F4CA0(&qword_25777D5A8, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModel);
  sub_2487B5CCC();
  sub_2487B55AC();
  swift_bridgeObjectRelease();
  sub_2487B55AC();
  sub_2487B5CCC();
  sub_2487B55AC();
  swift_bridgeObjectRelease();
  sub_2487B55AC();
  return 0;
}

uint64_t sub_248766474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((((uint64_t (*)(void))static TTSVBVoiceModel.== infix(_:_:))() & 1) != 0)
    return static TTSVBVoiceModel.== infix(_:_:)(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20));
  else
    return 0;
}

uint64_t Sequence<>.transitionsToFinished.getter(uint64_t a1)
{
  return sub_248766798(a1);
}

BOOL sub_2487664D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  uint64_t v9;

  v2 = type metadata accessor for TTSVBVoiceModelStateTransition();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTSVBVoiceModel();
  v6 = *(_QWORD *)(a1 + *(int *)(v5 + 52));
  sub_248709554(a1, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
  v7 = v6 != 7 && *(_QWORD *)&v4[*(int *)(v2 + 20) + *(int *)(v5 + 52)] == 7;
  sub_2486EDA68((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
  return v7;
}

uint64_t Sequence<>.transitionsToFailed.getter(uint64_t a1)
{
  return sub_248766798(a1);
}

BOOL sub_2487665C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  uint64_t v9;

  v2 = type metadata accessor for TTSVBVoiceModelStateTransition();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTSVBVoiceModel();
  v6 = *(_QWORD *)(a1 + *(int *)(v5 + 52));
  sub_248709554(a1, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
  v7 = v6 != 5 && *(_QWORD *)&v4[*(int *)(v2 + 20) + *(int *)(v5 + 52)] == 5;
  sub_2486EDA68((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
  return v7;
}

uint64_t Sequence<>.transitionsToCancelled.getter(uint64_t a1)
{
  return sub_248766798(a1);
}

BOOL sub_2487666AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  uint64_t v9;

  v2 = type metadata accessor for TTSVBVoiceModelStateTransition();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTSVBVoiceModel();
  v6 = *(_QWORD *)(a1 + *(int *)(v5 + 52));
  sub_248709554(a1, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
  v7 = v6 != 4 && *(_QWORD *)&v4[*(int *)(v2 + 20) + *(int *)(v5 + 52)] == 4;
  sub_2486EDA68((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
  return v7;
}

uint64_t Sequence<>.transitionsToAnyFinalState.getter(uint64_t a1)
{
  return sub_248766798(a1);
}

uint64_t sub_248766798(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1, a1);
  return sub_2487B5618();
}

BOOL sub_248766830(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v2 = type metadata accessor for TTSVBVoiceModelStateTransition();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v25 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v25 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v25 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - v15;
  v17 = type metadata accessor for TTSVBVoiceModel();
  v18 = *(_QWORD *)(a1 + *(int *)(v17 + 52));
  sub_248709554(a1, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
  v26 = v2;
  if (v18 == 7)
  {
    sub_2486EDA68((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
    sub_248709554(a1, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
  }
  else
  {
    v19 = *(_QWORD *)&v16[*(int *)(v2 + 20) + *(int *)(v17 + 52)];
    sub_2486EDA68((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
    sub_248709554(a1, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
    if (v19 == 7)
    {
      sub_2486EDA68((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
      sub_248709554(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
      goto LABEL_8;
    }
  }
  v20 = *(_QWORD *)&v14[*(int *)(v17 + 52)];
  sub_248709554((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
  if (v20 != 5)
  {
    v21 = *(_QWORD *)&v11[*(int *)(v26 + 20) + *(int *)(v17 + 52)];
    sub_2486EDA68((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
    sub_2486EDA68((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
    sub_248709554(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
    if (v21 != 5)
      goto LABEL_9;
LABEL_8:
    v22 = 1;
    goto LABEL_13;
  }
  sub_2486EDA68((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
  sub_2486EDA68((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
  sub_248709554(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
LABEL_9:
  v23 = *(_QWORD *)&v8[*(int *)(v17 + 52)];
  sub_248709554((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
  v22 = v23 != 4 && *(_QWORD *)&v5[*(int *)(v26 + 20) + *(int *)(v17 + 52)] == 4;
  sub_2486EDA68((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
LABEL_13:
  sub_2486EDA68((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
  return v22;
}

BOOL Sequence<>.isAnyModelFullyTrained.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t AssociatedTypeWitness;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v2 = type metadata accessor for TTSVBVoiceModel();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777D5D0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v21 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v13 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v15 = (char *)&v20 - v14;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v11, v20, a1, v13);
  sub_2487B560C();
  swift_getAssociatedConformanceWitness();
  do
  {
    sub_2487B5930();
    v16 = type metadata accessor for TTSVBVoiceModelStateTransition();
    v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v7, 1, v16);
    if (v17 == 1)
      break;
    sub_248709554((uint64_t)&v7[*(int *)(v16 + 20)], (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
    sub_2486EDA68((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModelStateTransition);
    v18 = *(_QWORD *)&v4[*(int *)(v2 + 52)];
    sub_2486EDA68((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
  }
  while (v18 != 7);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v15, AssociatedTypeWitness);
  return v17 != 1;
}

unint64_t sub_248766D30()
{
  unint64_t result;

  result = qword_25778D100[0];
  if (!qword_25778D100[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BF774, &type metadata for TTSVBVoiceModelStateTransition.CodingKeys);
    atomic_store(result, qword_25778D100);
  }
  return result;
}

uint64_t sub_248766D74()
{
  return sub_2486F4CA0(&qword_25777D5D8, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModelStateTransition, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModelStateTransition);
}

char *initializeBufferWithCopyOfBuffer for TTSVBVoiceModelStateTransition(char *a1, char *a2, uint64_t a3)
{
  char *v4;
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  unsigned int (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v89;
  char *__dst;
  void (*v91)(char *, char *, void *);
  uint64_t v93;
  void *v94;
  char *v95;
  uint64_t v96;
  unsigned int (*v97)(char *, uint64_t, uint64_t);
  void (*v98)(char *, char *, uint64_t);
  uint64_t v99;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v49 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v49 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v6;
    v7 = (int *)type metadata accessor for TTSVBVoiceModel();
    v8 = v7[5];
    v9 = &v4[v8];
    v10 = &a2[v8];
    v11 = sub_2487B5228();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v94 = (void *)v11;
    v91 = (void (*)(char *, char *, void *))v12;
    v12(&v4[v7[6]], &a2[v7[6]], v11);
    v13 = v7[7];
    v14 = &v4[v13];
    v15 = &a2[v13];
    v99 = sub_2487B51D4();
    v16 = *(_QWORD *)(v99 - 8);
    v98 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v98(v14, v15, v99);
    v17 = v7[8];
    v18 = &v4[v17];
    v19 = &a2[v17];
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v21 = v7[9];
    v22 = &v4[v21];
    v23 = &a2[v21];
    v96 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v96;
    v24 = v7[10];
    v25 = &v4[v24];
    v26 = &a2[v24];
    v27 = *((_QWORD *)v26 + 1);
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *((_QWORD *)v25 + 1) = v27;
    v28 = v7[11];
    v29 = &v4[v28];
    v30 = &a2[v28];
    v31 = *((_QWORD *)v30 + 1);
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *((_QWORD *)v29 + 1) = v31;
    v32 = v7[12];
    v33 = &v4[v32];
    v34 = &a2[v32];
    v35 = *((_QWORD *)v34 + 1);
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *((_QWORD *)v33 + 1) = v35;
    *(_QWORD *)&v4[v7[13]] = *(_QWORD *)&a2[v7[13]];
    v36 = v7[14];
    v37 = &v4[v36];
    v38 = &a2[v36];
    v39 = *((_QWORD *)v38 + 1);
    *(_QWORD *)v37 = *(_QWORD *)v38;
    *((_QWORD *)v37 + 1) = v39;
    *(_QWORD *)&v4[v7[15]] = *(_QWORD *)&a2[v7[15]];
    *(_QWORD *)&v4[v7[16]] = *(_QWORD *)&a2[v7[16]];
    v40 = v7[17];
    v41 = &v4[v40];
    v42 = &a2[v40];
    v43 = *((_QWORD *)v42 + 1);
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *((_QWORD *)v41 + 1) = v43;
    v44 = v7[18];
    v89 = v16;
    __dst = &v4[v44];
    v45 = &a2[v44];
    v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v97 = v46;
    if (v46(v45, 1, v99))
    {
      v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
      memcpy(__dst, v45, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      v48 = v98;
    }
    else
    {
      v50 = v45;
      v48 = v98;
      v98(__dst, v50, v99);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(__dst, 0, 1, v99);
    }
    v4[v7[19]] = a2[v7[19]];
    *(_DWORD *)&v4[v7[20]] = *(_DWORD *)&a2[v7[20]];
    v51 = *(int *)(a3 + 20);
    v52 = &v4[v51];
    v53 = &a2[v51];
    v54 = *(_QWORD *)&a2[v51 + 8];
    *(_QWORD *)v52 = *(_QWORD *)&a2[v51];
    *((_QWORD *)v52 + 1) = v54;
    v55 = v7[5];
    v56 = &v52[v55];
    v57 = &v53[v55];
    swift_bridgeObjectRetain();
    v91(v56, v57, v94);
    v91(&v52[v7[6]], &v53[v7[6]], v94);
    v48(&v52[v7[7]], &v53[v7[7]], v99);
    v58 = v7[8];
    v59 = &v52[v58];
    v60 = &v53[v58];
    v61 = *((_QWORD *)v60 + 1);
    *(_QWORD *)v59 = *(_QWORD *)v60;
    *((_QWORD *)v59 + 1) = v61;
    v62 = v7[9];
    v63 = &v52[v62];
    v64 = &v53[v62];
    v93 = *((_QWORD *)v64 + 1);
    *(_QWORD *)v63 = *(_QWORD *)v64;
    *((_QWORD *)v63 + 1) = v93;
    v65 = v7[10];
    v66 = &v52[v65];
    v67 = &v53[v65];
    v68 = *((_QWORD *)v67 + 1);
    *(_QWORD *)v66 = *(_QWORD *)v67;
    *((_QWORD *)v66 + 1) = v68;
    v69 = v7[11];
    v70 = &v52[v69];
    v71 = &v53[v69];
    v72 = *((_QWORD *)v71 + 1);
    *(_QWORD *)v70 = *(_QWORD *)v71;
    *((_QWORD *)v70 + 1) = v72;
    v73 = v7[12];
    v74 = &v52[v73];
    v75 = &v53[v73];
    v76 = *((_QWORD *)v75 + 1);
    *(_QWORD *)v74 = *(_QWORD *)v75;
    *((_QWORD *)v74 + 1) = v76;
    *(_QWORD *)&v52[v7[13]] = *(_QWORD *)&v53[v7[13]];
    v77 = v7[14];
    v78 = &v52[v77];
    v79 = &v53[v77];
    v80 = *((_QWORD *)v79 + 1);
    *(_QWORD *)v78 = *(_QWORD *)v79;
    *((_QWORD *)v78 + 1) = v80;
    *(_QWORD *)&v52[v7[15]] = *(_QWORD *)&v53[v7[15]];
    *(_QWORD *)&v52[v7[16]] = *(_QWORD *)&v53[v7[16]];
    v81 = v7[17];
    v82 = &v52[v81];
    v83 = &v53[v81];
    v84 = *((_QWORD *)v83 + 1);
    *(_QWORD *)v82 = *(_QWORD *)v83;
    *((_QWORD *)v82 + 1) = v84;
    v85 = v7[18];
    v95 = &v52[v85];
    v86 = &v53[v85];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v97(v86, 1, v99))
    {
      v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
      memcpy(v95, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    }
    else
    {
      v98(v95, v86, v99);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v95, 0, 1, v99);
    }
    v52[v7[19]] = v53[v7[19]];
    *(_DWORD *)&v52[v7[20]] = *(_DWORD *)&v53[v7[20]];
  }
  return v4;
}

uint64_t destroy for TTSVBVoiceModelStateTransition(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  void (*v16)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for TTSVBVoiceModel();
  v5 = a1 + v4[5];
  v6 = sub_2487B5228();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(a1 + v4[6], v6);
  v8 = a1 + v4[7];
  v9 = sub_2487B51D4();
  v10 = *(_QWORD *)(v9 - 8);
  v16 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v16(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = a1 + v4[18];
  v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v12(v11, 1, v9))
    v16(v11, v9);
  v13 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  v7(v13 + v4[5], v6);
  v7(v13 + v4[6], v6);
  v16(v13 + v4[7], v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = v13 + v4[18];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v12)(v14, 1, v9);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v16)(v14, v9);
  return result;
}

char *initializeWithCopy for TTSVBVoiceModelStateTransition(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  unsigned int (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v87;
  char *__dst;
  void (*v90)(char *, char *, void *);
  uint64_t v91;
  void *v92;
  char *v93;
  uint64_t v94;
  unsigned int (*v95)(char *, uint64_t, uint64_t);
  void (*v96)(char *, char *, uint64_t);
  uint64_t v97;

  v5 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v5;
  v6 = (int *)type metadata accessor for TTSVBVoiceModel();
  v7 = v6[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_2487B5228();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v90 = (void (*)(char *, char *, void *))v11;
  v92 = (void *)v10;
  v11(&a1[v6[6]], &a2[v6[6]], v10);
  v12 = v6[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v97 = sub_2487B51D4();
  v15 = *(_QWORD *)(v97 - 8);
  v96 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v96(v13, v14, v97);
  v16 = v6[8];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = v19;
  v20 = v6[9];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v94 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = v94;
  v23 = v6[10];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = *((_QWORD *)v25 + 1);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *((_QWORD *)v24 + 1) = v26;
  v27 = v6[11];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = *((_QWORD *)v29 + 1);
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *((_QWORD *)v28 + 1) = v30;
  v31 = v6[12];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = *((_QWORD *)v33 + 1);
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *((_QWORD *)v32 + 1) = v34;
  *(_QWORD *)&a1[v6[13]] = *(_QWORD *)&a2[v6[13]];
  v35 = v6[14];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v38 = *((_QWORD *)v37 + 1);
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *((_QWORD *)v36 + 1) = v38;
  *(_QWORD *)&a1[v6[15]] = *(_QWORD *)&a2[v6[15]];
  *(_QWORD *)&a1[v6[16]] = *(_QWORD *)&a2[v6[16]];
  v39 = v6[17];
  v40 = &a1[v39];
  v41 = &a2[v39];
  v42 = *((_QWORD *)v41 + 1);
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *((_QWORD *)v40 + 1) = v42;
  v43 = v6[18];
  v87 = v15;
  __dst = &a1[v43];
  v44 = &a2[v43];
  v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v95 = v45;
  if (v45(v44, 1, v97))
  {
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
    memcpy(__dst, v44, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    v47 = v96;
  }
  else
  {
    v48 = v44;
    v47 = v96;
    v96(__dst, v48, v97);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(__dst, 0, 1, v97);
  }
  a1[v6[19]] = a2[v6[19]];
  *(_DWORD *)&a1[v6[20]] = *(_DWORD *)&a2[v6[20]];
  v49 = *(int *)(a3 + 20);
  v50 = &a1[v49];
  v51 = &a2[v49];
  v52 = *((_QWORD *)v51 + 1);
  *(_QWORD *)v50 = *(_QWORD *)v51;
  *((_QWORD *)v50 + 1) = v52;
  v53 = v6[5];
  v54 = &v50[v53];
  v55 = &v51[v53];
  swift_bridgeObjectRetain();
  v90(v54, v55, v92);
  v90(&v50[v6[6]], &v51[v6[6]], v92);
  v47(&v50[v6[7]], &v51[v6[7]], v97);
  v56 = v6[8];
  v57 = &v50[v56];
  v58 = &v51[v56];
  v59 = *((_QWORD *)v58 + 1);
  *(_QWORD *)v57 = *(_QWORD *)v58;
  *((_QWORD *)v57 + 1) = v59;
  v60 = v6[9];
  v61 = &v50[v60];
  v62 = &v51[v60];
  v91 = *((_QWORD *)v62 + 1);
  *(_QWORD *)v61 = *(_QWORD *)v62;
  *((_QWORD *)v61 + 1) = v91;
  v63 = v6[10];
  v64 = &v50[v63];
  v65 = &v51[v63];
  v66 = *((_QWORD *)v65 + 1);
  *(_QWORD *)v64 = *(_QWORD *)v65;
  *((_QWORD *)v64 + 1) = v66;
  v67 = v6[11];
  v68 = &v50[v67];
  v69 = &v51[v67];
  v70 = *((_QWORD *)v69 + 1);
  *(_QWORD *)v68 = *(_QWORD *)v69;
  *((_QWORD *)v68 + 1) = v70;
  v71 = v6[12];
  v72 = &v50[v71];
  v73 = &v51[v71];
  v74 = *((_QWORD *)v73 + 1);
  *(_QWORD *)v72 = *(_QWORD *)v73;
  *((_QWORD *)v72 + 1) = v74;
  *(_QWORD *)&v50[v6[13]] = *(_QWORD *)&v51[v6[13]];
  v75 = v6[14];
  v76 = &v50[v75];
  v77 = &v51[v75];
  v78 = *((_QWORD *)v77 + 1);
  *(_QWORD *)v76 = *(_QWORD *)v77;
  *((_QWORD *)v76 + 1) = v78;
  *(_QWORD *)&v50[v6[15]] = *(_QWORD *)&v51[v6[15]];
  *(_QWORD *)&v50[v6[16]] = *(_QWORD *)&v51[v6[16]];
  v79 = v6[17];
  v80 = &v50[v79];
  v81 = &v51[v79];
  v82 = *((_QWORD *)v81 + 1);
  *(_QWORD *)v80 = *(_QWORD *)v81;
  *((_QWORD *)v80 + 1) = v82;
  v83 = v6[18];
  v93 = &v50[v83];
  v84 = &v51[v83];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v95(v84, 1, v97))
  {
    v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
    memcpy(v93, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
  }
  else
  {
    v96(v93, v84, v97);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v93, 0, 1, v97);
  }
  v50[v6[19]] = v51[v6[19]];
  *(_DWORD *)&v50[v6[20]] = *(_DWORD *)&v51[v6[20]];
  return a1;
}

char *assignWithCopy for TTSVBVoiceModelStateTransition(char *a1, char *a2, uint64_t a3)
{
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  int v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v75;
  void (*v77)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = (int *)type metadata accessor for TTSVBVoiceModel();
  v6 = v5[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_2487B5228();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[v5[6]], &a2[v5[6]], v9);
  v11 = v5[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_2487B51D4();
  v15 = *(_QWORD *)(v14 - 8);
  v77 = *(void (**)(char *, char *, uint64_t))(v15 + 24);
  v77(v12, v13, v14);
  v16 = v5[8];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = v5[9];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = v5[10];
  v23 = &a1[v22];
  v24 = &a2[v22];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = v5[11];
  v26 = &a1[v25];
  v27 = &a2[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = v5[12];
  v29 = &a1[v28];
  v30 = &a2[v28];
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[v5[13]] = *(_QWORD *)&a2[v5[13]];
  v31 = v5[14];
  v32 = &a1[v31];
  v33 = &a2[v31];
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *((_QWORD *)v32 + 1) = *((_QWORD *)v33 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[v5[15]] = *(_QWORD *)&a2[v5[15]];
  *(_QWORD *)&a1[v5[16]] = *(_QWORD *)&a2[v5[16]];
  v34 = v5[17];
  v35 = &a1[v34];
  v36 = &a2[v34];
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = v5[18];
  v38 = &a1[v37];
  v39 = &a2[v37];
  v75 = v15;
  v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v15) = v40(&a1[v37], 1, v14);
  v41 = v40(v39, 1, v14);
  if ((_DWORD)v15)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v38, v39, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v38, 0, 1, v14);
LABEL_7:
      v43 = v77;
      goto LABEL_8;
    }
LABEL_6:
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_7;
  }
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v75 + 8))(v38, v14);
    goto LABEL_6;
  }
  v43 = v77;
  v77(v38, v39, v14);
LABEL_8:
  a1[v5[19]] = a2[v5[19]];
  *(_DWORD *)&a1[v5[20]] = *(_DWORD *)&a2[v5[20]];
  v44 = *(int *)(a3 + 20);
  v45 = &a1[v44];
  v46 = &a2[v44];
  *(_QWORD *)v45 = *(_QWORD *)&a2[v44];
  *((_QWORD *)v45 + 1) = *(_QWORD *)&a2[v44 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10(&v45[v5[5]], &v46[v5[5]], v9);
  v10(&v45[v5[6]], &v46[v5[6]], v9);
  v43(&v45[v5[7]], &v46[v5[7]], v14);
  v47 = v5[8];
  v48 = &v45[v47];
  v49 = &v46[v47];
  *(_QWORD *)v48 = *(_QWORD *)v49;
  *((_QWORD *)v48 + 1) = *((_QWORD *)v49 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v50 = v5[9];
  v51 = &v45[v50];
  v52 = &v46[v50];
  *(_QWORD *)v51 = *(_QWORD *)v52;
  *((_QWORD *)v51 + 1) = *((_QWORD *)v52 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v53 = v5[10];
  v54 = &v45[v53];
  v55 = &v46[v53];
  *(_QWORD *)v54 = *(_QWORD *)v55;
  *((_QWORD *)v54 + 1) = *((_QWORD *)v55 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v56 = v5[11];
  v57 = &v45[v56];
  v58 = &v46[v56];
  *(_QWORD *)v57 = *(_QWORD *)v58;
  *((_QWORD *)v57 + 1) = *((_QWORD *)v58 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v59 = v5[12];
  v60 = &v45[v59];
  v61 = &v46[v59];
  *(_QWORD *)v60 = *(_QWORD *)v61;
  *((_QWORD *)v60 + 1) = *((_QWORD *)v61 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v45[v5[13]] = *(_QWORD *)&v46[v5[13]];
  v62 = v5[14];
  v63 = &v45[v62];
  v64 = &v46[v62];
  *(_QWORD *)v63 = *(_QWORD *)v64;
  *((_QWORD *)v63 + 1) = *((_QWORD *)v64 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v45[v5[15]] = *(_QWORD *)&v46[v5[15]];
  *(_QWORD *)&v45[v5[16]] = *(_QWORD *)&v46[v5[16]];
  v65 = v5[17];
  v66 = &v45[v65];
  v67 = &v46[v65];
  *(_QWORD *)v66 = *(_QWORD *)v67;
  *((_QWORD *)v66 + 1) = *((_QWORD *)v67 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v68 = v5[18];
  v69 = &v45[v68];
  v70 = &v46[v68];
  v71 = v40(&v45[v68], 1, v14);
  v72 = v40(v70, 1, v14);
  if (!v71)
  {
    if (!v72)
    {
      v43(v69, v70, v14);
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v75 + 8))(v69, v14);
    goto LABEL_13;
  }
  if (v72)
  {
LABEL_13:
    v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v69, v70, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v69, 0, 1, v14);
LABEL_14:
  v45[v5[19]] = v46[v5[19]];
  *(_DWORD *)&v45[v5[20]] = *(_DWORD *)&v46[v5[20]];
  return a1;
}

char *initializeWithTake for TTSVBVoiceModelStateTransition(char *a1, char *a2, uint64_t a3)
{
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  unsigned int (*v29)(char *, uint64_t, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v5 = (int *)type metadata accessor for TTSVBVoiceModel();
  v6 = v5[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_2487B5228();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[v5[6]], &a2[v5[6]], v9);
  v11 = v5[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_2487B51D4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v16(v12, v13, v14);
  *(_OWORD *)&a1[v5[8]] = *(_OWORD *)&a2[v5[8]];
  *(_OWORD *)&a1[v5[9]] = *(_OWORD *)&a2[v5[9]];
  *(_OWORD *)&a1[v5[10]] = *(_OWORD *)&a2[v5[10]];
  *(_OWORD *)&a1[v5[11]] = *(_OWORD *)&a2[v5[11]];
  *(_OWORD *)&a1[v5[12]] = *(_OWORD *)&a2[v5[12]];
  *(_QWORD *)&a1[v5[13]] = *(_QWORD *)&a2[v5[13]];
  *(_OWORD *)&a1[v5[14]] = *(_OWORD *)&a2[v5[14]];
  *(_QWORD *)&a1[v5[15]] = *(_QWORD *)&a2[v5[15]];
  *(_QWORD *)&a1[v5[16]] = *(_QWORD *)&a2[v5[16]];
  *(_OWORD *)&a1[v5[17]] = *(_OWORD *)&a2[v5[17]];
  v17 = v5[18];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v29(&a2[v17], 1, v14))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v16(v18, v19, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  }
  a1[v5[19]] = a2[v5[19]];
  *(_DWORD *)&a1[v5[20]] = *(_DWORD *)&a2[v5[20]];
  v21 = *(int *)(a3 + 20);
  v22 = &a1[v21];
  v23 = &a2[v21];
  *(_OWORD *)&a1[v21] = *(_OWORD *)&a2[v21];
  v10(&a1[v21 + v5[5]], &a2[v21 + v5[5]], v9);
  v10(&v22[v5[6]], &v23[v5[6]], v9);
  v16(&v22[v5[7]], &v23[v5[7]], v14);
  *(_OWORD *)&v22[v5[8]] = *(_OWORD *)&v23[v5[8]];
  *(_OWORD *)&v22[v5[9]] = *(_OWORD *)&v23[v5[9]];
  *(_OWORD *)&v22[v5[10]] = *(_OWORD *)&v23[v5[10]];
  *(_OWORD *)&v22[v5[11]] = *(_OWORD *)&v23[v5[11]];
  *(_OWORD *)&v22[v5[12]] = *(_OWORD *)&v23[v5[12]];
  *(_QWORD *)&v22[v5[13]] = *(_QWORD *)&v23[v5[13]];
  *(_OWORD *)&v22[v5[14]] = *(_OWORD *)&v23[v5[14]];
  *(_QWORD *)&v22[v5[15]] = *(_QWORD *)&v23[v5[15]];
  *(_QWORD *)&v22[v5[16]] = *(_QWORD *)&v23[v5[16]];
  *(_OWORD *)&v22[v5[17]] = *(_OWORD *)&v23[v5[17]];
  v24 = v5[18];
  v25 = &v22[v24];
  v26 = &v23[v24];
  if (v29(&v23[v24], 1, v14))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v16(v25, v26, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v25, 0, 1, v14);
  }
  v22[v5[19]] = v23[v5[19]];
  *(_DWORD *)&v22[v5[20]] = *(_DWORD *)&v23[v5[20]];
  return a1;
}

char *assignWithTake for TTSVBVoiceModelStateTransition(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t (*v55)(char *, uint64_t, uint64_t);
  int v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  int v101;
  int v102;
  uint64_t v103;
  uint64_t v105;
  void (*v107)(char *, char *, uint64_t);

  v5 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v5;
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for TTSVBVoiceModel();
  v7 = v6[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_2487B5228();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(&a1[v6[6]], &a2[v6[6]], v10);
  v12 = v6[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_2487B51D4();
  v16 = *(_QWORD *)(v15 - 8);
  v107 = *(void (**)(char *, char *, uint64_t))(v16 + 40);
  v107(v13, v14, v15);
  v17 = v6[8];
  v18 = &a1[v17];
  v19 = (uint64_t *)&a2[v17];
  v21 = *v19;
  v20 = v19[1];
  *(_QWORD *)v18 = v21;
  *((_QWORD *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  v22 = v6[9];
  v23 = &a1[v22];
  v24 = (uint64_t *)&a2[v22];
  v26 = *v24;
  v25 = v24[1];
  *(_QWORD *)v23 = v26;
  *((_QWORD *)v23 + 1) = v25;
  swift_bridgeObjectRelease();
  v27 = v6[10];
  v28 = &a1[v27];
  v29 = (uint64_t *)&a2[v27];
  v31 = *v29;
  v30 = v29[1];
  *(_QWORD *)v28 = v31;
  *((_QWORD *)v28 + 1) = v30;
  swift_bridgeObjectRelease();
  v32 = v6[11];
  v33 = &a1[v32];
  v34 = (uint64_t *)&a2[v32];
  v36 = *v34;
  v35 = v34[1];
  *(_QWORD *)v33 = v36;
  *((_QWORD *)v33 + 1) = v35;
  swift_bridgeObjectRelease();
  v37 = v6[12];
  v38 = &a1[v37];
  v39 = (uint64_t *)&a2[v37];
  v41 = *v39;
  v40 = v39[1];
  *(_QWORD *)v38 = v41;
  *((_QWORD *)v38 + 1) = v40;
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[v6[13]] = *(_QWORD *)&a2[v6[13]];
  v42 = v6[14];
  v43 = &a1[v42];
  v44 = (uint64_t *)&a2[v42];
  v46 = *v44;
  v45 = v44[1];
  *(_QWORD *)v43 = v46;
  *((_QWORD *)v43 + 1) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[v6[15]] = *(_QWORD *)&a2[v6[15]];
  *(_QWORD *)&a1[v6[16]] = *(_QWORD *)&a2[v6[16]];
  v47 = v6[17];
  v48 = &a1[v47];
  v49 = (uint64_t *)&a2[v47];
  v51 = *v49;
  v50 = v49[1];
  *(_QWORD *)v48 = v51;
  *((_QWORD *)v48 + 1) = v50;
  swift_bridgeObjectRelease();
  v52 = v6[18];
  v53 = &a1[v52];
  v54 = &a2[v52];
  v105 = v16;
  v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v16) = v55(&a1[v52], 1, v15);
  v56 = v55(v54, 1, v15);
  if ((_DWORD)v16)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v53, v54, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v53, 0, 1, v15);
LABEL_7:
      v58 = v107;
      goto LABEL_8;
    }
LABEL_6:
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_7;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v105 + 8))(v53, v15);
    goto LABEL_6;
  }
  v58 = v107;
  v107(v53, v54, v15);
LABEL_8:
  a1[v6[19]] = a2[v6[19]];
  *(_DWORD *)&a1[v6[20]] = *(_DWORD *)&a2[v6[20]];
  v59 = *(int *)(a3 + 20);
  v60 = &a1[v59];
  v61 = &a2[v59];
  v62 = *(_QWORD *)&a2[v59 + 8];
  *(_QWORD *)v60 = *(_QWORD *)&a2[v59];
  *((_QWORD *)v60 + 1) = v62;
  swift_bridgeObjectRelease();
  v11(&v60[v6[5]], &v61[v6[5]], v10);
  v11(&v60[v6[6]], &v61[v6[6]], v10);
  v58(&v60[v6[7]], &v61[v6[7]], v15);
  v63 = v6[8];
  v64 = &v60[v63];
  v65 = &v61[v63];
  v67 = *(_QWORD *)v65;
  v66 = *((_QWORD *)v65 + 1);
  *(_QWORD *)v64 = v67;
  *((_QWORD *)v64 + 1) = v66;
  swift_bridgeObjectRelease();
  v68 = v6[9];
  v69 = &v60[v68];
  v70 = &v61[v68];
  v72 = *(_QWORD *)v70;
  v71 = *((_QWORD *)v70 + 1);
  *(_QWORD *)v69 = v72;
  *((_QWORD *)v69 + 1) = v71;
  swift_bridgeObjectRelease();
  v73 = v6[10];
  v74 = &v60[v73];
  v75 = &v61[v73];
  v77 = *(_QWORD *)v75;
  v76 = *((_QWORD *)v75 + 1);
  *(_QWORD *)v74 = v77;
  *((_QWORD *)v74 + 1) = v76;
  swift_bridgeObjectRelease();
  v78 = v6[11];
  v79 = &v60[v78];
  v80 = &v61[v78];
  v82 = *(_QWORD *)v80;
  v81 = *((_QWORD *)v80 + 1);
  *(_QWORD *)v79 = v82;
  *((_QWORD *)v79 + 1) = v81;
  swift_bridgeObjectRelease();
  v83 = v6[12];
  v84 = &v60[v83];
  v85 = &v61[v83];
  v87 = *(_QWORD *)v85;
  v86 = *((_QWORD *)v85 + 1);
  *(_QWORD *)v84 = v87;
  *((_QWORD *)v84 + 1) = v86;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v60[v6[13]] = *(_QWORD *)&v61[v6[13]];
  v88 = v6[14];
  v89 = &v60[v88];
  v90 = &v61[v88];
  v92 = *(_QWORD *)v90;
  v91 = *((_QWORD *)v90 + 1);
  *(_QWORD *)v89 = v92;
  *((_QWORD *)v89 + 1) = v91;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v60[v6[15]] = *(_QWORD *)&v61[v6[15]];
  *(_QWORD *)&v60[v6[16]] = *(_QWORD *)&v61[v6[16]];
  v93 = v6[17];
  v94 = &v60[v93];
  v95 = &v61[v93];
  v97 = *(_QWORD *)v95;
  v96 = *((_QWORD *)v95 + 1);
  *(_QWORD *)v94 = v97;
  *((_QWORD *)v94 + 1) = v96;
  swift_bridgeObjectRelease();
  v98 = v6[18];
  v99 = &v60[v98];
  v100 = &v61[v98];
  v101 = v55(&v60[v98], 1, v15);
  v102 = v55(v100, 1, v15);
  if (!v101)
  {
    if (!v102)
    {
      v58(v99, v100, v15);
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v105 + 8))(v99, v15);
    goto LABEL_13;
  }
  if (v102)
  {
LABEL_13:
    v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
    memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v99, v100, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v99, 0, 1, v15);
LABEL_14:
  v60[v6[19]] = v61[v6[19]];
  *(_DWORD *)&v60[v6[20]] = *(_DWORD *)&v61[v6[20]];
  return a1;
}

uint64_t getEnumTagSinglePayload for TTSVBVoiceModelStateTransition()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2487686A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTSVBVoiceModel();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for TTSVBVoiceModelStateTransition()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2487686E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTSVBVoiceModel();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_248768728()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for TTSVBVoiceModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TTSVBVoiceModelStateTransition.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2487687DC + 4 * byte_2487BF595[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_248768810 + 4 * byte_2487BF590[v4]))();
}

uint64_t sub_248768810(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248768818(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248768820);
  return result;
}

uint64_t sub_24876882C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248768834);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_248768838(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248768840(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTSVBVoiceModelStateTransition.CodingKeys()
{
  return &type metadata for TTSVBVoiceModelStateTransition.CodingKeys;
}

unint64_t sub_248768860()
{
  unint64_t result;

  result = qword_25778D490[0];
  if (!qword_25778D490[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BF74C, &type metadata for TTSVBVoiceModelStateTransition.CodingKeys);
    atomic_store(result, qword_25778D490);
  }
  return result;
}

unint64_t sub_2487688A8()
{
  unint64_t result;

  result = qword_25778D5A0;
  if (!qword_25778D5A0)
  {
    result = MEMORY[0x24959AEB4](&unk_2487BF6BC, &type metadata for TTSVBVoiceModelStateTransition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25778D5A0);
  }
  return result;
}

unint64_t sub_2487688F0()
{
  unint64_t result;

  result = qword_25778D5A8[0];
  if (!qword_25778D5A8[0])
  {
    result = MEMORY[0x24959AEB4](&unk_2487BF6E4, &type metadata for TTSVBVoiceModelStateTransition.CodingKeys);
    atomic_store(result, qword_25778D5A8);
  }
  return result;
}

uint64_t sub_248768934(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73756F6976657270 && a2 == 0xE800000000000000;
  if (v2 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E6572727563 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2487B5CE4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void _TTSVBFileManager.requireDirectoryExists(_:problem:reason:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;

  v21 = a3;
  v28 = *MEMORY[0x24BDAC8D0];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445F340);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTSVBError.Reason(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a2 + 8);
  v22 = *(_QWORD *)a2;
  v23 = v13;
  v24 = *(unsigned __int8 *)(a2 + 16);
  v14 = *v3;
  v25 = 0;
  sub_2487B50B4();
  v15 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_fileExistsAtPath_isDirectory_, v15, &v25);

  if ((v25 & 1) == 0)
  {
    v26[0] = v22;
    v26[1] = v23;
    v27 = v24;
    sub_2486F4E74(v21, (uint64_t)v8, &qword_25445F340);
    v16 = sub_2487B50CC();
    v17 = *(_QWORD *)(v16 - 8);
    MEMORY[0x24BDAC7A8](v16);
    v19 = (char *)&v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, v16);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v12, v19, v16);
      swift_storeEnumTagMultiPayload();
      sub_24870953C(v22, v23, v24);
      sub_2486F5008((uint64_t)v8, &qword_25445F340);
    }
    else
    {
      sub_24870953C(v22, v23, v24);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      sub_24870A2C4((uint64_t)v8, (uint64_t)v12, type metadata accessor for TTSVBError.Reason);
    }
    type metadata accessor for TTSVBError(0);
    sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
    swift_allocError();
    TTSVBError.init(_:_:_:)((uint64_t)v26, (uint64_t)v12, 0, v20);
    swift_willThrow();
  }
}

void _TTSVBFileManager.requireFileExists(_:problem:reason:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  int v28;

  v23 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445F340);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTSVBError.Reason(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a2 + 8);
  v24 = *(_QWORD *)a2;
  v25 = v13;
  v28 = *(unsigned __int8 *)(a2 + 16);
  v14 = *v3;
  sub_2487B50B4();
  v15 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v14, sel_fileExistsAtPath_, v15);

  if ((v16 & 1) == 0)
  {
    v26[0] = v24;
    v26[1] = v25;
    v27 = v28;
    sub_2486F4E74(v23, (uint64_t)v8, &qword_25445F340);
    v17 = sub_2487B50CC();
    v18 = *(_QWORD *)(v17 - 8);
    v19 = MEMORY[0x24BDAC7A8](v17);
    v21 = (char *)&v23 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, uint64_t, uint64_t, double))(v18 + 16))(v21, a1, v17, v19);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v12, v21, v17);
      swift_storeEnumTagMultiPayload();
      sub_24870953C(v24, v25, v28);
      sub_2486F5008((uint64_t)v8, &qword_25445F340);
    }
    else
    {
      sub_24870953C(v24, v25, v28);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
      sub_24870A2C4((uint64_t)v8, (uint64_t)v12, type metadata accessor for TTSVBError.Reason);
    }
    type metadata accessor for TTSVBError(0);
    sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
    swift_allocError();
    TTSVBError.init(_:_:_:)((uint64_t)v26, (uint64_t)v12, 0, v22);
    swift_willThrow();
  }
}

id _TTSVBFileManager.fileExists(_:)()
{
  void **v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *v0;
  sub_2487B50B4();
  v2 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_fileExistsAtPath_, v2);

  return v3;
}

uint64_t _TTSVBFileManager.directoryExists(_:)()
{
  void **v0;
  void *v1;
  void *v2;
  unsigned __int8 v4;
  uint64_t v5;

  v5 = *MEMORY[0x24BDAC8D0];
  v1 = *v0;
  v4 = 0;
  sub_2487B50B4();
  v2 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_fileExistsAtPath_isDirectory_, v2, &v4);

  return v4;
}

uint64_t _TTSVBFileManager.createDirectoryIfNeeded(_:deleteAndRecreateIfExists:problem:)(uint64_t a1, int a2, uint64_t a3)
{
  void **v3;
  uint64_t v4;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  void *v16;
  uint64_t v17;
  uint64_t v19;
  _BYTE v20[4];
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v21 = a2;
  v30 = *MEMORY[0x24BDAC8D0];
  v22 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v22);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *(_QWORD *)a3;
  v9 = *(_QWORD *)(a3 + 8);
  v11 = *(unsigned __int8 *)(a3 + 16);
  v12 = *v3;
  if (v11 == 255)
    v13 = 0;
  else
    v13 = v10;
  if (v11 == 255)
    v14 = 0;
  else
    v14 = v9;
  v24 = v14;
  v25 = v13;
  if (v11 == 255)
    v15 = 3;
  else
    v15 = v11;
  v23 = v15;
  LOBYTE(v27) = 0;
  sub_248769288(v10, v9, v11);
  sub_2487B50B4();
  v16 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_fileExistsAtPath_isDirectory_, v16, &v27);

  if (v27 == 1)
  {
    if ((v21 & 1) == 0)
      return sub_248769458(v10, v9, v11);
    v26 = v12;
    v27 = v25;
    v28 = v24;
    v29 = v23;
    _TTSVBFileManager.removeItem(_:problem:)(a1, (uint64_t)&v27);
    if (v4)
      return sub_248769458(v10, v9, v11);
  }
  MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)&v20[-16] = v12;
  *(_QWORD *)&v20[-8] = a1;
  v27 = v25;
  v28 = v24;
  v29 = v23;
  v19 = sub_2487B50CC();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v8, a1, v19);
  swift_storeEnumTagMultiPayload();
  static TTSVBError.perform<A>(_:problem:reason:)((void (*)(uint64_t))sub_248769444, (uint64_t)&v20[-32], (uint64_t)&v27, (uint64_t)v8);
  sub_2486EDA68((uint64_t)v8, type metadata accessor for TTSVBError.Reason);
  return sub_248769458(v10, v9, v11);
}

uint64_t sub_248769288(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF)
    return sub_24870953C(a1, a2, a3);
  return a1;
}

void _TTSVBFileManager.removeItem(_:problem:)(uint64_t a1, uint64_t a2)
{
  void **v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  void *v10;
  void *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;

  v5 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)a2;
  v24 = *(_QWORD *)(a2 + 8);
  v9 = *(unsigned __int8 *)(a2 + 16);
  v10 = *v2;
  sub_2487B50B4();
  v11 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v10, sel_fileExistsAtPath_, v11);

  if (v12)
  {
    MEMORY[0x24BDAC7A8](v13);
    *(&v20 - 2) = (uint64_t)v10;
    *(&v20 - 1) = a1;
    v14 = v8;
    if (v9 == 255)
      v15 = 0;
    else
      v15 = v8;
    v16 = v24;
    if (v9 == 255)
      v17 = 0;
    else
      v17 = v24;
    if (v9 == 255)
      v18 = 3;
    else
      v18 = v9;
    v21 = v15;
    v22 = v17;
    v23 = v18;
    v19 = sub_2487B50CC();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v7, a1, v19);
    swift_storeEnumTagMultiPayload();
    sub_248769288(v14, v16, v9);
    static TTSVBError.perform<A>(_:problem:reason:)((void (*)(uint64_t))sub_24876AD0C, (uint64_t)(&v20 - 4), (uint64_t)&v21, (uint64_t)v7);
    sub_2486EDA68((uint64_t)v7, type metadata accessor for TTSVBError.Reason);
    sub_2486F507C(v21, v22, v23);
  }
}

id sub_248769444()
{
  return sub_248771068();
}

uint64_t sub_248769458(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF)
    return sub_2486F507C(a1, a2, a3);
  return a1;
}

uint64_t _TTSVBFileManager.getOrCreateFile(in:named:problem:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  void **v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  void *v32;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  void *v52;

  v48 = a1;
  v41 = a5;
  v36 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v36);
  v37 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)a4;
  v10 = *(_QWORD *)(a4 + 8);
  v12 = *(unsigned __int8 *)(a4 + 16);
  v47 = *v5;
  if (v12 == 255)
    v13 = 0;
  else
    v13 = v11;
  if (v12 == 255)
    v14 = 0;
  else
    v14 = v10;
  v39 = v14;
  v40 = v13;
  if (v12 == 255)
    v15 = 3;
  else
    v15 = v12;
  v38 = v15;
  v44 = sub_2487B50CC();
  v45 = &v36;
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = a2;
  v50 = a3;
  v18 = sub_2487B4FE8();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v21, *MEMORY[0x24BDCD7A8], v18);
  v42 = v11;
  v22 = v11;
  v23 = v10;
  v24 = v48;
  sub_248769288(v22, v23, v12);
  sub_2486ED9E0();
  sub_2487B50C0();
  v25 = *(void (**)(char *, uint64_t))(v19 + 8);
  v26 = v47;
  v25(v21, v18);
  sub_2487B50B4();
  v27 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  LOBYTE(v18) = objc_msgSend(v26, sel_fileExistsAtPath_, v27, v36);

  if ((v18 & 1) != 0)
  {
    v29 = v43;
    v28 = v44;
LABEL_12:
    sub_248769458(v42, v23, v12);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v29 + 32))(v41, v17, v28);
  }
  v52 = v26;
  v49 = v40;
  v50 = v39;
  v51 = v38;
  v31 = v46;
  _TTSVBFileManager.createDirectoryIfNeeded(_:deleteAndRecreateIfExists:problem:)(v24, 0, (uint64_t)&v49);
  if (v31)
  {
    sub_248769458(v42, v23, v12);
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v17, v44);
  }
  else
  {
    sub_2487B50B4();
    v32 = (void *)sub_2487B5504();
    swift_bridgeObjectRelease();
    v33 = objc_msgSend(v26, sel_createFileAtPath_contents_attributes_, v32, 0, 0);

    v28 = v44;
    v29 = v43;
    if ((v33 & 1) != 0)
      goto LABEL_12;
    v49 = v40;
    v50 = v39;
    v51 = v38;
    v34 = (uint64_t)v37;
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v37, v17, v44);
    swift_storeEnumTagMultiPayload();
    type metadata accessor for TTSVBError(0);
    sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
    swift_allocError();
    TTSVBError.init(_:_:_:)((uint64_t)&v49, v34, 0, v35);
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v17, v28);
  }
}

uint64_t _TTSVBFileManager.getFileIfExists(in:named:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  void **v3;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  unsigned int v17;
  uint64_t v18;
  _QWORD v20[2];

  v7 = *v3;
  v8 = sub_2487B50CC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[0] = a1;
  v20[1] = a2;
  v12 = sub_2487B4FE8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BDCD7A8], v12);
  sub_2486ED9E0();
  sub_2487B50C0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_2487B50B4();
  v16 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v7, sel_fileExistsAtPath_, v16);

  if (v17)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a3, v11, v8);
    v18 = 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v18 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a3, v18, 1, v8);
}

uint64_t _TTSVBFileManager.getOrCreateDirectory(in:named:problem:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v7 = *(_QWORD *)a4;
  v8 = *(_QWORD *)(a4 + 8);
  v9 = *(unsigned __int8 *)(a4 + 16);
  v26 = *v5;
  if (v9 == 255)
    v10 = 0;
  else
    v10 = v7;
  v24 = v10;
  v25 = a1;
  if (v9 == 255)
    v11 = 0;
  else
    v11 = v8;
  v23 = v11;
  if (v9 == 255)
    v12 = 3;
  else
    v12 = v9;
  v22 = v12;
  v28 = a2;
  v29 = a3;
  v13 = sub_2487B4FE8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v14 + 104))(v17, *MEMORY[0x24BDCD7A8], v13, v15);
  sub_248769288(v7, v8, v9);
  sub_2486ED9E0();
  sub_2487B50C0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  v18 = v27;
  v31 = v26;
  v28 = v24;
  v29 = v23;
  v30 = v22;
  _TTSVBFileManager.createDirectoryIfNeeded(_:deleteAndRecreateIfExists:problem:)(a5, 0, (uint64_t)&v28);
  if (!v18)
    return sub_248769458(v7, v8, v9);
  sub_248769458(v7, v8, v9);
  v19 = sub_2487B50CC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(a5, v19);
}

void _TTSVBFileManager.getChildDirectories(of:problem:)(uint64_t *a1, uint64_t a2)
{
  void **v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t inited;
  void *v36;
  id v37;
  void *v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  _QWORD *v48;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  char v53;
  void *v54;
  void *v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t *v75;
  void *v76;
  id v77[2];
  char v78;
  uint64_t v79;

  v79 = *MEMORY[0x24BDAC8D0];
  v74 = (uint64_t *)type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v74);
  v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  v9 = *(unsigned __int8 *)(a2 + 16);
  v10 = *v2;
  sub_248769288(*(_QWORD *)a2, v8, *(_BYTE *)(a2 + 16));
  v75 = a1;
  v11 = (void *)sub_2487B503C();
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1B0);
  v12 = swift_allocObject();
  v71 = xmmword_2487B72B0;
  *(_OWORD *)(v12 + 16) = xmmword_2487B72B0;
  v13 = (void *)*MEMORY[0x24BDBCC60];
  *(_QWORD *)(v12 + 32) = *MEMORY[0x24BDBCC60];
  type metadata accessor for URLResourceKey(0);
  v15 = v14;
  v69 = v13;
  v70 = v15;
  v16 = (void *)sub_2487B566C();
  swift_bridgeObjectRelease();
  v77[0] = 0;
  v17 = objc_msgSend(v10, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v11, v16, 0, v77);

  if (v17)
  {
    v18 = v77[0];
    sub_248769458(v7, v8, v9);
    v19 = sub_2487B50CC();
    v20 = sub_2487B5684();

    v77[0] = (id)MEMORY[0x24BEE4AF8];
    v21 = *(_QWORD *)(v20 + 16);
    v22 = *(_QWORD *)(v19 - 8);
    MEMORY[0x24BDAC7A8](v23);
    v73 = v24;
    v25 = (char *)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28);
    MEMORY[0x24BDAC7A8](v26);
    v28 = (char *)&v61 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
    v66 = v21;
    if (v21)
    {
      v29 = 0;
      v63 = v20;
      v65 = v19;
      v64 = v22;
      while (1)
      {
        if (v29 >= *(_QWORD *)(v20 + 16))
          __break(1u);
        v67 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
        v68 = *(_QWORD *)(v22 + 72);
        (*(void (**)(char *, unint64_t, uint64_t))(v22 + 16))(v28, v20 + v67 + v68 * v29, v19);
        v62 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
        v62(v28, 0, 1, v19);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v28, 1, v19) == 1)
          goto LABEL_32;
        v75 = &v61;
        v30 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
        v30(v25, v28, v19);
        v31 = sub_2487B4F40();
        v74 = &v61;
        v32 = *(_QWORD *)(v31 - 8);
        MEMORY[0x24BDAC7A8](v31);
        v34 = (char *)&v61 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v71;
        v36 = v69;
        *(_QWORD *)(inited + 32) = v69;
        v37 = v36;
        sub_2487702C8(inited);
        swift_setDeallocating();
        swift_arrayDestroy();
        v38 = v76;
        sub_2487B5000();
        if (v38)
          break;
        swift_bridgeObjectRelease();
        v39 = sub_2487B4EEC();
        if (v39 == 2)
        {
          (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
          goto LABEL_10;
        }
        v44 = v39;
        v45 = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v34, v31);
        if ((v44 & 1) != 0)
        {
          MEMORY[0x24BDAC7A8](v45);
          v47 = (char *)&v61 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
          v19 = v65;
          v30(v47, v25, v65);
          v48 = v77[0];
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v76 = 0;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_24876FCE0(0, v48[2] + 1, 1);
            v48 = v77[0];
          }
          v50 = v67;
          v52 = v48[2];
          v51 = v48[3];
          if (v52 >= v51 >> 1)
          {
            sub_24876FCE0(v51 > 1, v52 + 1, 1);
            v48 = v77[0];
          }
          v48[2] = v52 + 1;
          v40 = ((uint64_t (*)(char *, char *, uint64_t))v30)((char *)v48 + v50 + v52 * v68, v47, v19);
          v77[0] = v48;
          v20 = v63;
          v22 = v64;
          goto LABEL_12;
        }
        v20 = v63;
LABEL_11:
        v19 = v65;
        v22 = v64;
        v76 = 0;
        v40 = (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v25, v65);
LABEL_12:
        ++v29;
        MEMORY[0x24BDAC7A8](v40);
        v25 = (char *)&v61 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
        v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28);
        MEMORY[0x24BDAC7A8](v42);
        v28 = (char *)&v61 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
        if (v66 == v29)
        {
          v62(v28, 1, 1, v19);
          goto LABEL_32;
        }
      }
      swift_bridgeObjectRelease();

LABEL_10:
      v20 = v63;
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v28, 1, 1, v19);
LABEL_32:
    swift_bridgeObjectRelease();
    sub_2486F5008((uint64_t)v28, &qword_25445ED28);
  }
  else
  {
    if (v9 == 255)
      v53 = 3;
    else
      v53 = v9;
    if (v9 == 255)
      v54 = 0;
    else
      v54 = (void *)v8;
    if (v9 == 255)
      v55 = 0;
    else
      v55 = (void *)v7;
    v56 = v77[0];
    v57 = (void *)sub_2487B4F64();

    swift_willThrow();
    v77[0] = v55;
    v77[1] = v54;
    v78 = v53;
    v58 = sub_2487B50CC();
    (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v6, v75, v58);
    swift_storeEnumTagMultiPayload();
    v59 = sub_2487B4F58();
    type metadata accessor for TTSVBError(0);
    sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
    swift_allocError();
    TTSVBError.init(_:_:_:)((uint64_t)v77, (uint64_t)v6, v59, v60);
    swift_willThrow();

  }
}

uint64_t _TTSVBFileManager.setPermissions(_:onItem:problem:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  _BYTE *v19;
  void (*v20)(uint64_t, __n128);
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  _BYTE v43[12];
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, __n128);
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 v60;
  uint64_t v61;

  v57 = a1;
  v55 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v55);
  v56 = &v43[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_2487B533C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = &v43[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *(_QWORD *)a3;
  v52 = *(_QWORD *)(a3 + 8);
  v53 = v12;
  v51 = *(unsigned __int8 *)(a3 + 16);
  v13 = *v3;
  v14 = sub_2487B0B90();
  v49 = v9;
  v50 = v8;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v11, v14, v8);
  v15 = sub_2487B50CC();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = &v43[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = *(void (**)(uint64_t, __n128))(v16 + 16);
  v54 = a2;
  v48 = v20;
  ((void (*)(_BYTE *, uint64_t, uint64_t, double))v20)(v19, a2, v15, v17);
  v21 = sub_2487B5324();
  v22 = sub_2487B57C8();
  v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    v24 = swift_slowAlloc();
    v46 = v13;
    v25 = v24;
    v45 = swift_slowAlloc();
    v58 = v45;
    *(_DWORD *)v25 = 136315394;
    v61 = v57;
    sub_24877066C();
    v47 = v4;
    v26 = sub_2487B55DC();
    v44 = v23;
    v61 = sub_2486EDE5C(v26, v27, &v58);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    v28 = sub_2487B50B4();
    v61 = sub_2486EDE5C(v28, v29, &v58);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v16 + 8))(v19, v15);
    _os_log_impl(&dword_2486E6000, v21, (os_log_type_t)v44, "Setting permissions=%s on item=%s", (uint8_t *)v25, 0x16u);
    v30 = v45;
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v30, -1, -1);
    v31 = v25;
    v13 = v46;
    MEMORY[0x24959AF80](v31, -1, -1);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v16 + 8))(v19, v15);
  }

  v32 = (*(uint64_t (**)(_BYTE *, uint64_t))(v49 + 8))(v11, v50);
  v33.n128_f64[0] = MEMORY[0x24BDAC7A8](v32);
  v35 = (uint64_t)v56;
  v34 = v57;
  *(_QWORD *)&v43[-32] = v13;
  *(_QWORD *)&v43[-24] = v34;
  v36 = v53;
  *(_QWORD *)&v43[-16] = v54;
  v37 = v51;
  if (v51 == 255)
    v38 = 0;
  else
    v38 = v36;
  v39 = v52;
  if (v51 == 255)
    v40 = 0;
  else
    v40 = v52;
  if (v51 == 255)
    v41 = 3;
  else
    v41 = v51;
  v58 = v38;
  v59 = v40;
  v60 = v41;
  v48(v35, v33);
  swift_storeEnumTagMultiPayload();
  sub_248769288(v36, v39, v37);
  static TTSVBError.perform<A>(_:problem:reason:)((void (*)(uint64_t))sub_2487704F4, (uint64_t)&v43[-48], (uint64_t)&v58, v35);
  sub_2486EDA68(v35, type metadata accessor for TTSVBError.Reason);
  return sub_2486F507C(v58, v59, v60);
}

unint64_t sub_24876A5A8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777D6C8);
  v2 = sub_2487B5B88();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2486F4E74(v6, (uint64_t)&v13, &qword_25777D6D0);
    v7 = v13;
    result = sub_24876FEDC(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_24870A40C(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void _TTSVBFileManager.setPermissions(_:onDirectoriesIn:problem:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  int v9;
  id v10;
  void *v11;

  v6 = *(_QWORD *)a3;
  v7 = *(_QWORD *)(a3 + 8);
  v8 = *v3;
  v9 = *(unsigned __int8 *)(a3 + 16);
  v11 = v8;
  v10 = v8;
  sub_248769288(v6, v7, v9);
  sub_2487706B0(a2, (uint64_t)&v11, (uint64_t)v10, a1, v6, v7, v9);
  sub_248769458(v6, v7, v9);

}

void _TTSVBFileManager.processTree(root:handler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t inited;
  void *v27;
  id v28;
  char *v29;
  char v30;
  uint64_t v31;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  id v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  id v40;
  __int128 v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;

  v4 = v3;
  v32[1] = a3;
  v32[0] = a2;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1B0);
  v5 = swift_allocObject();
  v41 = xmmword_2487B72B0;
  *(_OWORD *)(v5 + 16) = xmmword_2487B72B0;
  v6 = (void *)*MEMORY[0x24BDBCC60];
  *(_QWORD *)(v5 + 32) = *MEMORY[0x24BDBCC60];
  v40 = v6;
  v7 = (void *)sub_2487B57B0();
  swift_bridgeObjectRelease();
  if (v7)
  {
    v36 = v32;
    v34 = sub_2487B4F94();
    v33 = *(_QWORD *)(v34 - 8);
    MEMORY[0x24BDAC7A8](v34);
    v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    v35 = v7;
    sub_2487B5798();
    sub_2487B4F88();
    if (v48)
    {
      v10 = sub_2487B50CC();
      v11 = v10;
      v12 = *(_QWORD *)(v10 - 8);
      v13 = *(_QWORD *)(v12 + 64);
      v49 = MEMORY[0x24BEE4AD8] + 8;
      v38 = v12;
      v39 = v9;
      v37 = v13;
      while (1)
      {
        MEMORY[0x24BDAC7A8](v10);
        v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28);
        MEMORY[0x24BDAC7A8](v15);
        v17 = (char *)v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
        v18 = swift_dynamicCast();
        v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
        if (!v18)
          break;
        v19(v17, 0, 1, v11);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11) == 1)
          goto LABEL_5;
        v44 = v32;
        v47 = v32;
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))((char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v17, v11);
        v20 = sub_2487B4F40();
        v46 = v32;
        v21 = *(_QWORD *)(v20 - 8);
        MEMORY[0x24BDAC7A8](v20);
        v43 = (char *)v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777D5E8);
        v45 = v32;
        MEMORY[0x24BDAC7A8](v23);
        v25 = (char *)v32 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v41;
        v27 = v40;
        *(_QWORD *)(inited + 32) = v40;
        v28 = v27;
        sub_2487702C8(inited);
        swift_setDeallocating();
        type metadata accessor for URLResourceKey(0);
        swift_arrayDestroy();
        sub_2487B5000();
        if (v4)
        {

          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v25, 1, 1, v20);
          v4 = 0;
        }
        else
        {
          swift_bridgeObjectRelease();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v25, 0, 1, v20);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v25, 1, v20) != 1)
          {
            v29 = v43;
            (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v43, v25, v20);
            v30 = sub_2487B4EEC();
            v12 = v38;
            v9 = v39;
            if (v30 == 2)
            {
              (*(void (**)(char *, uint64_t))(v21 + 8))(v29, v20);
              (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
              v13 = v37;
            }
            else
            {
              v31 = v20;
              ((void (*)(char *, _QWORD))v32[0])(v14, v30 & 1);
              v13 = v37;
              (*(void (**)(char *, uint64_t))(v21 + 8))(v43, v31);
              (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
            }
            goto LABEL_6;
          }
        }
        v12 = v38;
        v9 = v39;
        v13 = v37;
        (*(void (**)(char *, uint64_t))(v38 + 8))(v14, v11);
        sub_2486F5008((uint64_t)v25, &qword_25777D5E8);
LABEL_6:
        v10 = sub_2487B4F88();
        if (!v48)
          goto LABEL_16;
      }
      v19(v17, 1, 1, v11);
LABEL_5:
      sub_2486F5008((uint64_t)v17, &qword_25445ED28);
      goto LABEL_6;
    }
LABEL_16:
    (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v34);

  }
  else
  {
    __break(1u);
  }
}

id sub_24876AD0C()
{
  return sub_248770CFC();
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
  sub_24871F99C(a1, &qword_25445F150);
}

uint64_t _TTSVBFileManager.moveItem(_:to:problem:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48[16];
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unsigned __int8 v53;
  uint64_t v54;

  v47 = a1;
  v54 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v54);
  v42 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v32 - v8;
  v10 = *(_QWORD *)a3;
  v46 = *(_QWORD *)(a3 + 8);
  v11 = *(unsigned __int8 *)(a3 + 16);
  v12 = *v3;
  v13 = sub_2487B50CC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2487B5078();
  v49 = v12;
  v50 = v16;
  v43 = v16;
  if (v11 == 255)
    v17 = 0;
  else
    v17 = v10;
  v18 = v46;
  if (v11 == 255)
    v19 = 0;
  else
    v19 = v46;
  if (v11 == 255)
    v20 = 3;
  else
    v20 = v11;
  v38 = v17;
  v39 = v12;
  v51 = v17;
  v52 = v19;
  v37 = v19;
  v35 = v20;
  v53 = v20;
  v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25777C260);
  v21 = &v9[*(int *)(v34 + 48)];
  v45 = v14;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v22(v9, v47, v13);
  v41 = a2;
  v36 = (void (*)(uint64_t, uint64_t, uint64_t))v22;
  v22(v21, a2, v13);
  swift_storeEnumTagMultiPayload();
  v33 = v10;
  v40 = v11;
  sub_248769288(v10, v18, v11);
  v23 = v44;
  static TTSVBError.perform<A>(_:problem:reason:)((void (*)(uint64_t))sub_248769444, (uint64_t)v48, (uint64_t)&v51, (uint64_t)v9);
  sub_2486EDA68((uint64_t)v9, type metadata accessor for TTSVBError.Reason);
  if (!v23)
  {
    v25 = sub_2486F507C(v51, v52, v53);
    v26 = MEMORY[0x24BDAC7A8](v25);
    v27 = v47;
    *(&v32 - 4) = v39;
    *(&v32 - 3) = v27;
    v28 = v41;
    v29 = (uint64_t)v42;
    *(&v32 - 2) = v41;
    v30 = v36;
    v51 = v38;
    v52 = v37;
    v53 = v35;
    v31 = v29 + *(int *)(v34 + 48);
    ((void (*)(uint64_t, double))v36)(v29, v26);
    v30(v31, v28, v13);
    swift_storeEnumTagMultiPayload();
    sub_248769288(v33, v46, v40);
    static TTSVBError.perform<A>(_:problem:reason:)((void (*)(uint64_t))sub_248770CC4, (uint64_t)(&v32 - 6), (uint64_t)&v51, v29);
    sub_2486EDA68(v29, type metadata accessor for TTSVBError.Reason);
  }
  sub_2486F507C(v51, v52, v53);
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v43, v13);
}

uint64_t _TTSVBFileManager.moveItem(_:intoDirectory:problem:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;

  v19 = *(_QWORD *)a3;
  v18 = *(_QWORD *)(a3 + 8);
  v17 = *(unsigned __int8 *)(a3 + 16);
  v16 = *v3;
  v5 = sub_2487B50CC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_2487B5018();
  v21 = v9;
  v10 = sub_2487B4FE8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v11 + 104))(v14, *MEMORY[0x24BDCD7A8], v10, v12);
  sub_2486ED9E0();
  sub_2487B50C0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  swift_bridgeObjectRelease();
  v23 = v16;
  v20 = v19;
  v21 = v18;
  v22 = v17;
  _TTSVBFileManager.moveItem(_:to:problem:)(a1, (uint64_t)v8, (uint64_t)&v20);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t _TTSVBFileManager.copyItem(_:to:problem:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;
  void **v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  __n128 v24;
  BOOL v25;
  uint64_t *v26;
  uint64_t *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  unsigned int v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int8 v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(__n128);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 v56;
  uint64_t v57;
  char *v58;
  unsigned __int8 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned __int8 v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(void);
  uint64_t v71;
  uint64_t v72;
  void *v73;
  char *v74;
  char *v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unsigned __int8 v88;
  uint64_t v89;

  v4 = v3;
  v80 = a1;
  v89 = *MEMORY[0x24BDAC8D0];
  v7 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v7);
  v79 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v74 = (char *)&v72 - v10;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v72 - v12;
  v14 = *(_QWORD *)(a3 + 8);
  v83 = *(uint64_t **)a3;
  v84 = v14;
  v15 = *(unsigned __int8 *)(a3 + 16);
  v16 = *v4;
  v17 = sub_2487B50CC();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = a2;
  sub_2487B5078();
  LOBYTE(v86) = 0;
  sub_2487B50B4();
  v21 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  objc_msgSend(v16, sel_fileExistsAtPath_isDirectory_, v21, &v86);

  if ((v86 & 1) != 0)
  {
    v76 = v15;
    v75 = v20;
    v23 = v83;
    v77 = v7;
    v78 = v18;
  }
  else
  {
    v82 = &v72;
    v24.n128_f64[0] = MEMORY[0x24BDAC7A8](v22);
    v73 = v16;
    *(&v72 - 2) = (uint64_t)v16;
    *(&v72 - 1) = (uint64_t)v20;
    v25 = v15 == 255;
    v26 = v83;
    if (v15 == 255)
      v27 = 0;
    else
      v27 = v83;
    v28 = v15;
    v29 = v7;
    v30 = v84;
    if (v25)
      v31 = 0;
    else
      v31 = v84;
    if (v25)
      v32 = 3;
    else
      v32 = v28;
    v86 = (uint64_t)v27;
    v87 = v31;
    v88 = v32;
    (*(void (**)(char *, char *, uint64_t, __n128))(v18 + 16))(v13, v20, v17, v24);
    swift_storeEnumTagMultiPayload();
    v33 = (uint64_t)v26;
    v34 = v28;
    sub_248769288(v33, v30, v28);
    v35 = v85;
    static TTSVBError.perform<A>(_:problem:reason:)((void (*)(uint64_t))sub_248769444, (uint64_t)(&v72 - 4), (uint64_t)&v86, (uint64_t)v13);
    if (v35)
    {
      sub_2486EDA68((uint64_t)v13, type metadata accessor for TTSVBError.Reason);
      sub_2486F507C(v86, v87, v88);
      return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    }
    v16 = v73;
    v76 = v34;
    v75 = v20;
    v23 = v83;
    v77 = v29;
    v78 = v18;
    v85 = 0;
    sub_2486EDA68((uint64_t)v13, type metadata accessor for TTSVBError.Reason);
    sub_2486F507C(v86, v87, v88);
  }
  v37 = v81;
  v86 = sub_2487B50A8();
  v87 = v38;
  sub_2486ED9E0();
  sub_2487B5990();
  v40 = v39;
  v41 = swift_bridgeObjectRelease();
  v42 = (uint64_t)v16;
  if (v40
    && (v43 = (void *)sub_2487B5504(),
        swift_bridgeObjectRelease(),
        v44 = objc_msgSend(v16, sel_fileExistsAtPath_, v43),
        v43,
        v44))
  {
    v45.n128_f64[0] = MEMORY[0x24BDAC7A8](v41);
    *(&v72 - 2) = (uint64_t)v16;
    *(&v72 - 1) = v37;
    if (v76 == 255)
      v46 = 0;
    else
      v46 = (uint64_t)v23;
    if (v76 == 255)
      v47 = 0;
    else
      v47 = v84;
    if (v76 == 255)
      v48 = 3;
    else
      v48 = v76;
    v86 = v46;
    v87 = v47;
    v88 = v48;
    v49 = v37;
    v50 = v78;
    v51 = *(void (**)(__n128))(v78 + 16);
    v52 = v17;
    v73 = v16;
    v53 = (uint64_t)v23;
    v54 = (uint64_t)v74;
    v55 = v84;
    v56 = v76;
    v51(v45);
    swift_storeEnumTagMultiPayload();
    sub_248769288(v53, v55, v56);
    v57 = v85;
    static TTSVBError.perform<A>(_:problem:reason:)((void (*)(uint64_t))sub_24876AD0C, (uint64_t)(&v72 - 4), (uint64_t)&v86, v54);
    if (v57)
    {
      sub_2486EDA68(v54, type metadata accessor for TTSVBError.Reason);
      sub_2486F507C(v86, v87, v88);
      return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v75, v52);
    }
    v23 = (_QWORD *)v53;
    v58 = v79;
    v85 = 0;
    v17 = v52;
    sub_2486EDA68(v54, type metadata accessor for TTSVBError.Reason);
    v41 = sub_2486F507C(v86, v87, v88);
    v37 = v49;
    v42 = (uint64_t)v73;
  }
  else
  {
    v58 = v79;
  }
  v82 = &v72;
  MEMORY[0x24BDAC7A8](v41);
  v83 = &v72 - 6;
  *(&v72 - 4) = v42;
  *(&v72 - 3) = v80;
  *(&v72 - 2) = v37;
  v59 = v76;
  v60 = (uint64_t)v23;
  if (v76 == 255)
    v61 = 0;
  else
    v61 = (uint64_t)v23;
  v62 = v84;
  if (v76 == 255)
    v63 = 0;
  else
    v63 = v84;
  if (v76 == 255)
    v64 = 3;
  else
    v64 = v76;
  v86 = v61;
  v87 = v63;
  v88 = v64;
  v65 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25777C260) + 48);
  v66 = (uint64_t)v58;
  v67 = &v58[v65];
  v68 = v37;
  v69 = v78;
  v70 = *(void (**)(void))(v78 + 16);
  v71 = v66;
  v70();
  ((void (*)(char *, uint64_t, uint64_t))v70)(v67, v68, v17);
  swift_storeEnumTagMultiPayload();
  sub_248769288(v60, v62, v59);
  static TTSVBError.perform<A>(_:problem:reason:)((void (*)(uint64_t))sub_248770CE0, (uint64_t)v83, (uint64_t)&v86, v71);
  sub_2486EDA68(v71, type metadata accessor for TTSVBError.Reason);
  sub_2486F507C(v86, v87, v88);
  return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v75, v17);
}

uint64_t _TTSVBFileManager.copyItem(_:intoDirectory:problem:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  v15 = *v1;
  v3 = sub_2487B50CC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_2487B5018();
  v17 = v7;
  v8 = sub_2487B4FE8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v9 + 104))(v12, *MEMORY[0x24BDCD7A8], v8, v10);
  sub_2486ED9E0();
  sub_2487B50C0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  swift_bridgeObjectRelease();
  v19 = v15;
  v16 = 0;
  v17 = 0;
  v18 = -1;
  _TTSVBFileManager.copyItem(_:to:problem:)(a1, (uint64_t)v6, (uint64_t)&v16);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t _TTSVBFileManager.copyContentsOf(_:to:problem:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  void *v11;
  void *v12;
  void *v13;
  int v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(char *, unint64_t, uint64_t);
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  id v39;
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  _QWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  void *v56;
  void *v57;
  void *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  id v67[2];
  char v68;
  uint64_t v69;

  v5 = v4;
  v61 = a2;
  v69 = *MEMORY[0x24BDAC8D0];
  v60 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v60);
  v59 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)a3;
  v8 = *(_QWORD *)(a3 + 8);
  v10 = *(unsigned __int8 *)(a3 + 16);
  v11 = *v3;
  if (v10 == 255)
    v12 = 0;
  else
    v12 = (void *)v9;
  if (v10 == 255)
    v13 = 0;
  else
    v13 = (void *)v8;
  v56 = v13;
  v57 = v12;
  if (v10 == 255)
    v14 = 3;
  else
    v14 = v10;
  v55 = v14;
  sub_248769288(v9, v8, v10);
  v15 = (void *)sub_2487B503C();
  v67[0] = 0;
  v58 = v11;
  v16 = objc_msgSend(v11, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v15, 0, 0, v67);

  v17 = v67[0];
  if (v16)
  {
    v46 = v9;
    v47 = v8;
    v48 = v10;
    v18 = sub_2487B50CC();
    v19 = sub_2487B5684();
    v20 = v17;

    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28);
    v45[1] = v45;
    MEMORY[0x24BDAC7A8](v21);
    v23 = (char *)v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    v24 = *(_QWORD *)(v19 + 16);
    v25 = *(_QWORD *)(v18 - 8);
    v49 = v19;
    if (v24)
    {
      v26 = v19 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
      v51 = *(_QWORD *)(v25 + 72);
      v27 = *(void (**)(char *, unint64_t, uint64_t))(v25 + 16);
      v52 = (char *)v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      v53 = MEMORY[0x24BEE4AE0] + 8;
      v54 = v25;
      while (1)
      {
        v27(v23, v26, v18);
        v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
        v28(v23, 0, 1, v18);
        v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v18);
        if ((_DWORD)v29 == 1)
          break;
        v62 = v26;
        v63 = v24;
        v50 = v28;
        v65 = v45;
        v30 = *(_QWORD *)(v25 + 64);
        MEMORY[0x24BDAC7A8](v29);
        v31 = (char *)v45 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v31, v23, v18);
        v32 = sub_2487B5018();
        v66 = v5;
        v64 = v45;
        MEMORY[0x24BDAC7A8](v32);
        sub_2487B5054();
        v33 = swift_bridgeObjectRelease();
        MEMORY[0x24BDAC7A8](v33);
        v45[-4] = v58;
        v45[-3] = v31;
        v45[-2] = v31;
        v67[0] = v57;
        v67[1] = v56;
        v68 = v55;
        v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25777C260);
        v35 = (uint64_t)v59;
        v36 = &v59[*(int *)(v34 + 48)];
        v27(v59, (unint64_t)v31, v18);
        v27(v36, (unint64_t)v31, v18);
        swift_storeEnumTagMultiPayload();
        v37 = v66;
        static TTSVBError.perform<A>(_:problem:reason:)((void (*)(uint64_t))sub_248770CE0, (uint64_t)&v45[-6], (uint64_t)v67, v35);
        v5 = v37;
        if (v37)
        {
          sub_2486EDA68(v35, type metadata accessor for TTSVBError.Reason);
          swift_bridgeObjectRelease();
          v44 = *(void (**)(char *, uint64_t))(v54 + 8);
          v44(v31, v18);
          v44(v31, v18);
          return sub_248769458(v46, v47, v48);
        }
        sub_2486EDA68(v35, type metadata accessor for TTSVBError.Reason);
        v25 = v54;
        v38 = *(void (**)(char *, uint64_t))(v54 + 8);
        v38(v31, v18);
        v38(v31, v18);
        v23 = v52;
        v26 = v62 + v51;
        v24 = v63 - 1;
        if (v63 == 1)
        {
          v50(v52, 1, 1, v18);
          break;
        }
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v23, 1, 1, v18);
    }
    v41 = v48;
    v42 = v47;
    v43 = v46;
    swift_bridgeObjectRelease();
    return sub_248769458(v43, v42, v41);
  }
  else
  {
    v39 = v67[0];
    sub_248769458(v9, v8, v10);
    sub_2487B4F64();

    return swift_willThrow();
  }
}

uint64_t _TTSVBFileManager.write<A>(item:toFile:problem:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char v35[16];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;

  v31 = a1;
  v32 = a5;
  v30 = a4;
  v28 = a2;
  v6 = type metadata accessor for TTSVBError.Reason(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v29 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v27 - v9;
  v11 = *(_QWORD *)a3;
  v12 = *(_QWORD *)(a3 + 8);
  v13 = *(unsigned __int8 *)(a3 + 16);
  if (v13 == 255)
    v14 = 0;
  else
    v14 = *(_QWORD *)a3;
  if (v13 == 255)
    v15 = 0;
  else
    v15 = *(_QWORD *)(a3 + 8);
  if (v13 == 255)
    v16 = 3;
  else
    v16 = *(unsigned __int8 *)(a3 + 16);
  sub_2487B4E50();
  swift_allocObject();
  v45 = v11;
  v33 = v12;
  sub_248769288(v11, v12, v13);
  v17 = sub_2487B4E44();
  v36 = v30;
  v37 = v32;
  v38 = v17;
  v39 = v31;
  v30 = v14;
  v40 = v14;
  v41 = v15;
  v18 = v15;
  LODWORD(v31) = v16;
  v42 = v16;
  v32 = v6;
  swift_storeEnumTagMultiPayload();
  v19 = v34;
  static TTSVBError.perform<A>(_:problem:reason:)((void (*)(uint64_t))sub_248770E40, (uint64_t)v35, (uint64_t)&v40, (uint64_t)v10);
  v20 = sub_2486EDA68((uint64_t)v10, type metadata accessor for TTSVBError.Reason);
  if (v19)
  {
    swift_release();
  }
  else
  {
    v34 = &v27;
    v22 = v43;
    v23 = v44;
    MEMORY[0x24BDAC7A8](v20);
    *(&v27 - 4) = v22;
    *(&v27 - 3) = v23;
    v24 = v28;
    *(&v27 - 2) = v28;
    v40 = v30;
    v41 = v18;
    v42 = v31;
    v25 = sub_2487B50CC();
    v26 = (uint64_t)v29;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v29, v24, v25);
    swift_storeEnumTagMultiPayload();
    static TTSVBError.perform<A>(_:problem:reason:)((void (*)(uint64_t))sub_248770E74, (uint64_t)(&v27 - 6), (uint64_t)&v40, v26);
    sub_2486EDA68(v26, type metadata accessor for TTSVBError.Reason);
    swift_release();
    sub_2486F4A28(v22, v23);
  }
  return sub_248769458(v45, v33, v13);
}

uint64_t sub_24876C068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 a4@<W3>, uint64_t a5@<X8>)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37[16];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;

  v34 = a1;
  v33 = a5;
  v8 = a4;
  v9 = type metadata accessor for TTSVBError.Reason(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v32 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v29 - v12;
  if (v8 == 255)
    v14 = 0;
  else
    v14 = a2;
  if (v8 == 255)
    v15 = 0;
  else
    v15 = a3;
  if (v8 == 255)
    v16 = 3;
  else
    v16 = a4;
  sub_2487B4E2C();
  swift_allocObject();
  v36 = a2;
  v17 = a2;
  v18 = a4;
  v44 = a3;
  sub_248769288(v17, a3, a4);
  v19 = sub_2487B4E20();
  v20 = v34;
  v38 = v34;
  v39 = v14;
  v30 = v15;
  v31 = v14;
  v40 = v15;
  v21 = v16;
  v41 = v16;
  v22 = sub_2487B50CC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v13, v20, v22);
  swift_storeEnumTagMultiPayload();
  v23 = v35;
  static TTSVBError.perform<A>(_:problem:reason:)((void (*)(uint64_t))sub_248770E94, (uint64_t)v37, (uint64_t)&v39, (uint64_t)v13);
  v24 = sub_2486EDA68((uint64_t)v13, type metadata accessor for TTSVBError.Reason);
  if (v23)
  {
    swift_release();
  }
  else
  {
    v35 = &v29;
    v26 = v42;
    v27 = v43;
    MEMORY[0x24BDAC7A8](v24);
    *(&v29 - 4) = v19;
    *(&v29 - 3) = v26;
    *(&v29 - 2) = v27;
    v28 = (uint64_t)v32;
    v39 = v31;
    v40 = v30;
    v41 = v21;
    swift_storeEnumTagMultiPayload();
    type metadata accessor for TTSVBVoiceModel();
    static TTSVBError.perform<A>(_:problem:reason:)((void (*)(uint64_t))sub_248772D2C, (uint64_t)(&v29 - 6), (uint64_t)&v39, v28);
    sub_2486EDA68(v28, type metadata accessor for TTSVBError.Reason);
    swift_release();
    sub_2486F4A28(v26, v27);
  }
  return sub_248769458(v36, v44, v18);
}

uint64_t _TTSVBFileManager.load<A>(_:fromFile:problem:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40[16];
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t *v47;

  v32 = a1;
  v33 = a5;
  v36 = a4;
  v37 = a2;
  v35 = a6;
  v7 = type metadata accessor for TTSVBError.Reason(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v34 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v30 - v10;
  v13 = *(_QWORD *)a3;
  v12 = *(_QWORD *)(a3 + 8);
  v14 = *(unsigned __int8 *)(a3 + 16);
  if (v14 == 255)
    v15 = 0;
  else
    v15 = *(_QWORD *)a3;
  if (v14 == 255)
    v16 = 0;
  else
    v16 = *(_QWORD *)(a3 + 8);
  if (v14 == 255)
    v17 = 3;
  else
    v17 = *(_BYTE *)(a3 + 16);
  sub_2487B4E2C();
  swift_allocObject();
  v38 = v13;
  v18 = v13;
  v19 = v12;
  sub_248769288(v18, v12, v14);
  v39 = sub_2487B4E20();
  v20 = v37;
  v41 = v37;
  v42 = v15;
  v30 = v16;
  v31 = v15;
  v43 = v16;
  v44 = v17;
  v21 = sub_2487B50CC();
  (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v11, v20, v21);
  swift_storeEnumTagMultiPayload();
  v22 = v47;
  static TTSVBError.perform<A>(_:problem:reason:)((void (*)(uint64_t))sub_248770E94, (uint64_t)v40, (uint64_t)&v42, (uint64_t)v11);
  v23 = sub_2486EDA68((uint64_t)v11, type metadata accessor for TTSVBError.Reason);
  if (v22)
  {
    swift_release();
  }
  else
  {
    v47 = &v30;
    v25 = v45;
    v37 = v46;
    MEMORY[0x24BDAC7A8](v23);
    v26 = v33;
    *(&v30 - 6) = v36;
    *(&v30 - 5) = v26;
    v27 = v32;
    *(&v30 - 4) = v39;
    *(&v30 - 3) = v27;
    *(&v30 - 2) = v25;
    *(&v30 - 1) = v28;
    v42 = v31;
    v43 = v30;
    v44 = v17;
    v29 = (uint64_t)v34;
    swift_storeEnumTagMultiPayload();
    static TTSVBError.perform<A>(_:problem:reason:)((void (*)(uint64_t))sub_248770EA8, (uint64_t)(&v30 - 8), (uint64_t)&v42, v29);
    sub_2486EDA68(v29, type metadata accessor for TTSVBError.Reason);
    swift_release();
    sub_2486F4A28(v25, v37);
  }
  return sub_248769458(v38, v19, v14);
}

uint64_t _TTSVBFileManager.calculateSize(ofItemAtURL:)(uint64_t a1)
{
  void **v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  void *v7;
  unsigned int v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  double v24;
  void (*v25)(char *, char *);
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char *v32;
  id v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  id v39;
  int v40;
  uint64_t *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  void **v45;
  char *v46;
  uint64_t *v47;
  uint64_t v48;
  char v49;
  char v50[32];
  _OWORD v51[2];
  __int128 v52;
  char v53;
  uint64_t v54;
  uint64_t v55;

  v55 = *MEMORY[0x24BDAC8D0];
  v3 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (char *)*v1;
  v49 = 0;
  sub_2487B50B4();
  v7 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_fileExistsAtPath_isDirectory_, v7, &v49);

  if (v8)
  {
    if ((v49 & 1) != 0)
    {
      v9 = (char *)swift_allocObject();
      *((_QWORD *)v9 + 2) = 0;
      v45 = (void **)(v9 + 16);
      if (qword_25778D630 != -1)
        goto LABEL_32;
      while (1)
      {
        v10 = swift_bridgeObjectRetain();
        sub_24876FBFC(v10);
        swift_bridgeObjectRelease();
        swift_retain();
        v11 = (void *)sub_2487B57B0();
        swift_release();
        swift_release();
        if (!v11)
        {
          __break(1u);
LABEL_34:
          result = sub_2487B5B4C();
          __break(1u);
          return result;
        }
        v12 = sub_2487B4F94();
        v38 = &v35;
        v37 = v12;
        v36 = *(_QWORD *)(v12 - 8);
        MEMORY[0x24BDAC7A8](v12);
        v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
        v39 = v11;
        sub_2487B5798();
        swift_beginAccess();
        v44 = v14;
        sub_2487B4F88();
        if (!v54)
        {
          v6 = 0;
LABEL_26:
          (*(void (**)(char *, uint64_t))(v36 + 8))(v44, v37);
          v31 = *v45;
          if (*v45)
          {
            v52 = 0uLL;
            v53 = 3;
            type metadata accessor for TTSVBError(0);
            sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
            swift_allocError();
            v6 = v32;
            v33 = v31;
            static TTSVBError.map(_:_:)(v31, (uint64_t)&v52, (uint64_t)v6);
            swift_willThrow();

            swift_release();
          }
          else
          {
            swift_release();

          }
          return (uint64_t)v6;
        }
        v6 = 0;
        v43 = MEMORY[0x24BEE4AD8] + 8;
        v42 = v9;
        while (1)
        {
          sub_24870A40C(&v52, v51);
          if (*v45)
          {
            __swift_destroy_boxed_opaque_existential_0((uint64_t)v51);
            goto LABEL_26;
          }
          v46 = v6;
          v15 = sub_2487B50CC();
          v47 = &v35;
          v16 = *(_QWORD *)(v15 - 8);
          MEMORY[0x24BDAC7A8](v15);
          v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
          sub_2486F0814((uint64_t)v51, (uint64_t)v50);
          swift_dynamicCast();
          v6 = (char *)sub_2487B4F40();
          v19 = *((_QWORD *)v6 - 1);
          v9 = *(char **)(v19 + 64);
          MEMORY[0x24BDAC7A8](v6);
          v20 = (char *)&v35 - ((unint64_t)(v9 + 15) & 0xFFFFFFFFFFFFFFF0);
          v21 = v48;
          sub_2487B5000();
          if (v21)
          {

            __swift_destroy_boxed_opaque_existential_0((uint64_t)v51);
            (*(void (**)(char *, uint64_t))(v36 + 8))(v44, v37);
            (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
            swift_release();
            return (uint64_t)v6;
          }
          v48 = 0;
          if ((sub_2487B4EF8() & 1) == 0)
          {
            v22 = 0;
            (*(void (**)(char *, char *))(v19 + 8))(v20, v6);
            goto LABEL_18;
          }
          v22 = sub_2487B4F1C();
          v40 = v23;
          v41 = &v35;
          v24 = MEMORY[0x24BDAC7A8](v22);
          v9 = (char *)&v35 - ((unint64_t)(v9 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, char *, char *, double))(v19 + 16))(v9, v20, v6, v24);
          if ((v40 & 1) == 0)
          {
            v25 = *(void (**)(char *, char *))(v19 + 8);
            v25(v9, v6);
LABEL_14:
            if (v22 < 0)
              goto LABEL_34;
            goto LABEL_17;
          }
          v22 = sub_2487B4F04();
          v40 = v26;
          v25 = *(void (**)(char *, char *))(v19 + 8);
          v25(v9, v6);
          if ((v40 & 1) == 0)
            goto LABEL_14;
          v22 = 0;
LABEL_17:
          v25(v20, v6);
LABEL_18:
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v51);
          v6 = &v46[v22];
          if (__CFADD__(v46, v22))
            break;
          (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
          sub_2487B4F88();
          if (!v54)
            goto LABEL_26;
        }
        __break(1u);
LABEL_32:
        swift_once();
      }
    }
    v29 = v48;
    v30 = sub_24876CC60();
    if (!v29)
      return v30;
  }
  else
  {
    v52 = 0uLL;
    v53 = 3;
    v27 = sub_2487B50CC();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v5, a1, v27);
    swift_storeEnumTagMultiPayload();
    type metadata accessor for TTSVBError(0);
    sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
    swift_allocError();
    TTSVBError.init(_:_:_:)((uint64_t)&v52, (uint64_t)v5, 0, v28);
    swift_willThrow();
  }
  return (uint64_t)v6;
}

uint64_t sub_24876CC60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  char v7;
  double v8;
  char *v9;
  void (*v10)(char *, uint64_t);
  char v11;
  char v12;
  uint64_t v14;

  v2 = sub_2487B4F40();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25778D630 != -1)
    swift_once();
  sub_2487B5000();
  if (!v1)
  {
    if ((sub_2487B4EF8() & 1) == 0)
    {
      v0 = 0;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return v0;
    }
    v0 = sub_2487B4F1C();
    v7 = v6;
    v8 = MEMORY[0x24BDAC7A8](v0);
    v9 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t, double))(v3 + 16))(v9, v5, v2, v8);
    if ((v7 & 1) != 0)
    {
      v0 = sub_2487B4F04();
      v12 = v11;
      v10 = *(void (**)(char *, uint64_t))(v3 + 8);
      v10(v9, v2);
      if ((v12 & 1) != 0)
        goto LABEL_11;
    }
    else
    {
      v10 = *(void (**)(char *, uint64_t))(v3 + 8);
      v10(v9, v2);
    }
    if ((v0 & 0x8000000000000000) == 0)
    {
LABEL_12:
      v10(v5, v2);
      return v0;
    }
    sub_2487B5B4C();
    __break(1u);
LABEL_11:
    v0 = 0;
    goto LABEL_12;
  }
  return v0;
}

void _TTSVBFileManager.createCompressedArchive(from:to:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  _QWORD aBlock[6];

  v26 = a3;
  v27 = a4;
  v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1570]), sel_init);
  v5 = (void *)objc_opt_self();
  v6 = (void *)sub_2487B503C();
  v7 = objc_msgSend(v5, sel_readingIntentWithURL_options_, v6, 8);

  __swift_instantiateConcreteTypeFromMangledName(&qword_25445F358);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_2487BD7A0;
  *(_QWORD *)(v8 + 32) = v7;
  aBlock[0] = v8;
  sub_2487B5690();
  sub_24870A34C(0, &qword_25777D5F0);
  v9 = v7;
  v10 = (void *)sub_2487B566C();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend((id)objc_opt_self(), sel_mainQueue);
  v12 = sub_2487B50CC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))(v16, a2, v12, v15);
  v17 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v18 = (v14 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v19 + v17, v16, v12);
  v20 = (_QWORD *)(v19 + v18);
  v21 = v27;
  *v20 = v26;
  v20[1] = v21;
  *(_QWORD *)(v19 + ((v18 + 23) & 0xFFFFFFFFFFFFFFF8)) = v9;
  aBlock[4] = sub_248770F8C;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F20F8;
  aBlock[3] = &block_descriptor_5;
  v22 = _Block_copy(aBlock);
  v23 = v9;
  swift_retain();
  swift_release();
  v24 = v28;
  objc_msgSend(v28, sel_coordinateAccessWithIntents_queue_byAccessor_, v10, v11, v22);
  _Block_release(v22);

}

uint64_t sub_24876D0AC(void *a1, uint64_t a2, void (*a3)(char *), uint64_t a4, void *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void *v38;
  uint64_t v39;
  void (*v40)(char *, id);
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  char *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  void *v60;
  void *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  void (*v76)(uint64_t);
  uint64_t v77;
  void (*v79)(uint64_t);
  uint64_t v80;
  _QWORD v81[2];
  char *v82;
  char *v83;
  __int128 v84;
  uint64_t v85;
  char *v86;
  _QWORD *v87;
  uint64_t v88;
  void (*v89)(char *, id);
  uint64_t v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(char *);
  uint64_t v95;
  __int128 v96;
  char v97;
  uint64_t v98;

  v91 = a5;
  v92 = a2;
  v93 = a4;
  v94 = a3;
  v98 = *MEMORY[0x24BDAC8D0];
  v6 = sub_2487B533C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v81 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1C8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TTSVBError(0);
  MEMORY[0x24BDAC7A8](v19);
  MEMORY[0x24BDAC7A8](v20);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)v81 - v24;
  if (a1)
  {
    v96 = xmmword_2487BE630;
    v97 = 3;
    v26 = sub_2487B50CC();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v18, v92, v26);
    swift_storeEnumTagMultiPayload();
    v27 = a1;
    v28 = sub_2487B4F58();
    TTSVBError.init(_:_:_:)((uint64_t)&v96, (uint64_t)v18, v28, (uint64_t)v25);
    sub_248709554((uint64_t)v25, (uint64_t)v15, type metadata accessor for TTSVBError);
    swift_storeEnumTagMultiPayload();
    v94(v15);

    sub_2486F5008((uint64_t)v15, &qword_25445F1C8);
    v29 = (uint64_t)v25;
    return sub_2486EDA68(v29, type metadata accessor for TTSVBError);
  }
  v89 = (void (*)(char *, id))v16;
  v90 = v7;
  v85 = v23;
  v86 = v15;
  v30 = v92;
  v82 = v12;
  v87 = v22;
  v88 = v13;
  if (qword_25445F8A0 != -1)
    swift_once();
  v95 = qword_25445F898;
  v84 = xmmword_2487BE630;
  v96 = xmmword_2487BE630;
  v97 = 3;
  v31 = v30;
  _TTSVBFileManager.removeItem(_:problem:)(v30, (uint64_t)&v96);
  v83 = v9;
  v32 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v33 = objc_msgSend(v91, sel_URL);
  v34 = (_QWORD *)sub_2487B50CC();
  v35 = *(v34 - 1);
  MEMORY[0x24BDAC7A8](v34);
  v81[1] = v36;
  v81[0] = (v36 + 15) & 0xFFFFFFFFFFFFFFF0;
  v37 = (char *)v81 - v81[0];
  sub_2487B509C();

  v38 = (void *)sub_2487B503C();
  v39 = v35;
  v40 = *(void (**)(char *, id))(v35 + 8);
  v91 = v34;
  v40(v37, v34);
  v41 = (void *)sub_2487B503C();
  *(_QWORD *)&v96 = 0;
  LODWORD(v34) = objc_msgSend(v32, sel_moveItemAtURL_toURL_error_, v38, v41, &v96);

  v42 = (id)v96;
  v43 = (uint64_t)v87;
  if (!(_DWORD)v34)
  {
    v60 = v42;
    v61 = (void *)sub_2487B4F64();

    swift_willThrow();
    v62 = v83;
    v96 = v84;
    v97 = 3;
    v63 = sub_2487B50CC();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v18, v31, v63);
    swift_storeEnumTagMultiPayload();
    v64 = sub_2487B4F58();
    TTSVBError.init(_:_:_:)((uint64_t)&v96, (uint64_t)v18, v64, v43);
    v65 = sub_2487B0B90();
    v66 = v90;
    v67 = v6;
    (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v62, v65, v6);
    v68 = v85;
    sub_248709554(v43, v85, type metadata accessor for TTSVBError);
    v69 = sub_2487B5324();
    v70 = sub_2487B57E0();
    if (os_log_type_enabled(v69, v70))
    {
      v71 = (uint8_t *)swift_slowAlloc();
      v72 = swift_slowAlloc();
      v92 = v67;
      v73 = v72;
      *(_QWORD *)&v96 = v72;
      *(_DWORD *)v71 = 136315138;
      v83 = v62;
      v74 = TTSVBError.description.getter();
      v95 = sub_2486EDE5C(v74, v75, (uint64_t *)&v96);
      v76 = (void (*)(uint64_t))v94;
      sub_2487B593C();
      swift_bridgeObjectRelease();
      sub_2486EDA68(v68, type metadata accessor for TTSVBError);
      _os_log_impl(&dword_2486E6000, v69, v70, "Creating export archive failed: %s", v71, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v73, -1, -1);
      MEMORY[0x24959AF80](v71, -1, -1);

      (*(void (**)(char *, uint64_t))(v90 + 8))(v83, v92);
    }
    else
    {
      sub_2486EDA68(v68, type metadata accessor for TTSVBError);

      (*(void (**)(char *, uint64_t))(v66 + 8))(v62, v67);
      v76 = (void (*)(uint64_t))v94;
    }
    v77 = (uint64_t)v86;
    sub_248709554(v43, (uint64_t)v86, type metadata accessor for TTSVBError);
    swift_storeEnumTagMultiPayload();
    v76(v77);

    sub_2486F5008(v77, &qword_25445F1C8);
    v29 = v43;
    return sub_2486EDA68(v29, type metadata accessor for TTSVBError);
  }
  v89 = v40;
  v44 = sub_2487B0B90();
  v45 = v90;
  v46 = v82;
  v47 = v31;
  v48 = v6;
  v49 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v90 + 16))(v82, v44, v6);
  v50 = MEMORY[0x24BDAC7A8](v49);
  v51 = (char *)v81 - v81[0];
  (*(void (**)(char *, uint64_t, id, double))(v39 + 16))((char *)v81 - v81[0], v47, v91, v50);
  v52 = sub_2487B5324();
  v53 = sub_2487B57E0();
  if (os_log_type_enabled(v52, v53))
  {
    v54 = swift_slowAlloc();
    v87 = v81;
    v55 = (uint8_t *)v54;
    v56 = swift_slowAlloc();
    v92 = v48;
    v57 = v56;
    *(_QWORD *)&v96 = v56;
    *(_DWORD *)v55 = 136315138;
    v58 = sub_2487B50B4();
    v95 = sub_2486EDE5C(v58, v59, (uint64_t *)&v96);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    v89(v51, v91);
    _os_log_impl(&dword_2486E6000, v52, v53, "Did write voice exoprt archive to %s", v55, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v57, -1, -1);
    MEMORY[0x24959AF80](v55, -1, -1);

    (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v92);
  }
  else
  {
    v89(v51, v91);

    (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v48);
  }
  v79 = (void (*)(uint64_t))v94;
  v80 = (uint64_t)v86;
  swift_storeEnumTagMultiPayload();
  v79(v80);
  return sub_2486F5008(v80, &qword_25445F1C8);
}

uint64_t *sub_24876D91C()
{
  if (qword_25445F8A0 != -1)
    swift_once();
  return &qword_25445F898;
}

uint64_t _TTSVBFileManager.TTSVBRelativePath.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2487B50CC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t _TTSVBFileManager.TTSVBRelativePath.relativePath.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for _TTSVBFileManager.TTSVBRelativePath(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _TTSVBFileManager.TTSVBRelativePath.init(url:relativePath:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;

  v8 = sub_2487B50CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  result = type metadata accessor for _TTSVBFileManager.TTSVBRelativePath(0);
  v10 = (_QWORD *)(a4 + *(int *)(result + 20));
  *v10 = a2;
  v10[1] = a3;
  return result;
}

uint64_t _TTSVBFileManager.getRelativePathsForFilesInTree(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id *v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  id v53;
  unint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  id *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char *v67;
  id *v68;
  uint64_t v69;
  id *v70;
  id *v71;
  id *v72;
  uint64_t v73;
  char v74[32];
  _OWORD v75[2];
  __int128 v76;
  uint64_t v77;
  uint64_t v78;

  v64 = a1;
  v61 = type metadata accessor for _TTSVBFileManager.TTSVBRelativePath(0);
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v63 = (uint64_t)&v55 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = 0;
  v68 = (id *)(v2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1B0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2487BF7D0;
  v4 = (void *)*MEMORY[0x24BDBCC98];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDBCC98];
  v5 = (void *)*MEMORY[0x24BDBCC60];
  v6 = (void *)*MEMORY[0x24BDBCCA0];
  *(_QWORD *)(inited + 40) = *MEMORY[0x24BDBCC60];
  *(_QWORD *)(inited + 48) = v6;
  v7 = (void *)*MEMORY[0x24BDBCC90];
  v8 = (void *)*MEMORY[0x24BDBCCB8];
  *(_QWORD *)(inited + 56) = *MEMORY[0x24BDBCC90];
  *(_QWORD *)(inited + 64) = v8;
  v9 = (void *)*MEMORY[0x24BDBCC70];
  v10 = (void *)*MEMORY[0x24BDBCCD0];
  *(_QWORD *)(inited + 72) = *MEMORY[0x24BDBCC70];
  *(_QWORD *)(inited + 80) = v10;
  v11 = v4;
  v12 = v5;
  v13 = v6;
  v14 = v7;
  v15 = v8;
  v16 = v9;
  v17 = v10;
  v18 = sub_2487702C8(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  v19 = swift_bridgeObjectRetain();
  sub_24876FBFC(v19);
  v69 = v18;
  swift_bridgeObjectRelease();
  swift_retain();
  v20 = (void *)sub_2487B57B0();
  v59 = v2;
  swift_release();
  result = swift_release();
  if (v20)
  {
    v22 = sub_2487B4F94();
    v58 = &v55;
    v57 = v22;
    v56 = *(_QWORD *)(v22 - 8);
    MEMORY[0x24BDAC7A8](v22);
    v24 = (char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    v55 = v20;
    sub_2487B5798();
    v25 = v68;
    swift_beginAccess();
    v67 = v24;
    sub_2487B4F88();
    if (v77)
    {
      v65 = MEMORY[0x24BEE4AF8];
      v66 = MEMORY[0x24BEE4AD8] + 8;
      while (1)
      {
        sub_24870A40C(&v76, v75);
        if (*v25)
        {
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v75);
          (*(void (**)(char *, uint64_t))(v56 + 8))(v67, v57);
          goto LABEL_28;
        }
        v27 = sub_2487B50CC();
        v72 = &v55;
        v73 = *(_QWORD *)(v27 - 8);
        MEMORY[0x24BDAC7A8](v27);
        v29 = (char *)&v55 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_2486F0814((uint64_t)v75, (uint64_t)v74);
        swift_dynamicCast();
        v30 = sub_2487B4F40();
        v71 = &v55;
        v31 = *(_QWORD *)(v30 - 8);
        v32 = *(_QWORD *)(v31 + 64);
        MEMORY[0x24BDAC7A8](v30);
        v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF0;
        v34 = (char *)&v55 - v33;
        v35 = v78;
        sub_2487B5000();
        if (v35)
        {
          swift_bridgeObjectRelease();

          __swift_destroy_boxed_opaque_existential_0((uint64_t)v75);
          (*(void (**)(char *, uint64_t))(v56 + 8))(v67, v57);
          v54 = v65;
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v73 + 8))(v29, v27);
          swift_release();
          return v54;
        }
        v78 = 0;
        v36 = sub_2487B4EF8();
        v37 = v36;
        v70 = &v55;
        MEMORY[0x24BDAC7A8](v36);
        v38 = (char *)&v55 - v33;
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))((char *)&v55 - v33, (char *)&v55 - v33, v30);
        if ((v37 & 1) != 0)
        {
          v39 = sub_2487B4F28();
          if (!v40)
          {
            v26 = *(void (**)(char *, uint64_t))(v31 + 8);
            v26((char *)&v55 - v33, v30);
LABEL_17:
            v43 = sub_24876E264(v64);
            if (v44)
            {
              v45 = v43;
              v46 = v44;
              v47 = v63;
              (*(void (**)(uint64_t, char *, uint64_t))(v73 + 16))(v63, v29, v27);
              v48 = (uint64_t *)(v47 + *(int *)(v61 + 20));
              *v48 = v45;
              v48[1] = v46;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
                v49 = v65;
              else
                v49 = sub_24874BBD0(0, *(_QWORD *)(v65 + 16) + 1, 1, v65, &qword_25777D6B0, type metadata accessor for _TTSVBFileManager.TTSVBRelativePath);
              v51 = *(_QWORD *)(v49 + 16);
              v50 = *(_QWORD *)(v49 + 24);
              if (v51 >= v50 >> 1)
                v49 = sub_24874BBD0(v50 > 1, v51 + 1, 1, v49, &qword_25777D6B0, type metadata accessor for _TTSVBFileManager.TTSVBRelativePath);
              *(_QWORD *)(v49 + 16) = v51 + 1;
              v52 = (*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
              v65 = v49;
              sub_24870A2C4(v63, v49 + v52 + *(_QWORD *)(v60 + 72) * v51, type metadata accessor for _TTSVBFileManager.TTSVBRelativePath);
            }
            goto LABEL_5;
          }
          if (v39 == 0x726F74535F53442ELL && v40 == 0xE900000000000065)
          {
            v26 = *(void (**)(char *, uint64_t))(v31 + 8);
            v26((char *)&v55 - v33, v30);
            swift_bridgeObjectRelease();
          }
          else
          {
            v42 = sub_2487B5CE4();
            v26 = *(void (**)(char *, uint64_t))(v31 + 8);
            v26(v38, v30);
            swift_bridgeObjectRelease();
            if ((v42 & 1) == 0)
              goto LABEL_17;
          }
        }
        else
        {
          v26 = *(void (**)(char *, uint64_t))(v31 + 8);
          v26((char *)&v55 - v33, v30);
        }
LABEL_5:
        v26(v34, v30);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v75);
        (*(void (**)(char *, uint64_t))(v73 + 8))(v29, v27);
        sub_2487B4F88();
        v25 = v68;
        if (!v77)
          goto LABEL_26;
      }
    }
    v65 = MEMORY[0x24BEE4AF8];
LABEL_26:
    (*(void (**)(char *, uint64_t))(v56 + 8))(v67, v57);
    swift_bridgeObjectRelease();
LABEL_28:
    if (*v25)
    {
      v53 = *v25;
      v54 = v65;
      swift_bridgeObjectRelease();
      swift_willThrow();
      swift_release();

    }
    else
    {
      swift_release();

      return v65;
    }
    return v54;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24876E264(uint64_t a1)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t (*v7)(char *, uint64_t);
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];

  v2 = sub_2487B4FD0();
  v3 = sub_2487B50CC();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  if ((v2 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))((char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
    return 0;
  }
  v6 = sub_2487B4FD0();
  v7 = *(uint64_t (**)(char *, uint64_t))(v4 + 8);
  v8 = v7((char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  if ((v6 & 1) == 0)
    return 0;
  MEMORY[0x24BDAC7A8](v8);
  v9 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_2487B4FDC();
  v10 = (_QWORD *)sub_2487B4FF4();
  v11 = v7((char *)v23 - v9, v3);
  MEMORY[0x24BDAC7A8](v11);
  sub_2487B4FDC();
  v12 = (_QWORD *)sub_2487B4FF4();
  v7((char *)v23 - v9, v3);
  v13 = v10[2];
  if (!v13)
    goto LABEL_14;
  v14 = v12[2];
  if (!v14)
    goto LABEL_15;
  result = v10[4];
  v16 = result == v12[4] && v10[5] == v12[5];
  if (v16 || (result = sub_2487B5CE4(), (result & 1) != 0))
  {
    if (v13 != 1)
    {
      v20 = 0;
      v21 = 1;
      while (v13 != v21)
      {
        if (v14 == v21)
          goto LABEL_15;
        result = v10[v20 + 6];
        if (result != v12[v20 + 6] || v10[v20 + 7] != v12[v20 + 7])
        {
          result = sub_2487B5CE4();
          if ((result & 1) == 0)
          {
            v14 = v21;
            goto LABEL_15;
          }
        }
        ++v21;
        v20 += 2;
        if (v13 == v21)
        {
          v14 = v13;
          goto LABEL_15;
        }
      }
      __break(1u);
      goto LABEL_32;
    }
    v14 = 1;
  }
  else
  {
LABEL_14:
    v14 = 0;
  }
LABEL_15:
  v18 = v12[2];
  swift_bridgeObjectRelease();
  result = sub_24876F89C(11822, 0xE200000000000000, v18 - v14);
  if (v13 < v14)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v19 = v10[2];
  if (v19 >= v14 && v19 >= v13)
  {
    v23[1] = result;
    sub_248771158((uint64_t)v10, (uint64_t)(v10 + 4), v14, (2 * v13) | 1);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25445F138);
    sub_24872A050();
    v17 = sub_2487B5498();
    swift_bridgeObjectRelease();
    return v17;
  }
LABEL_33:
  __break(1u);
  return result;
}

id _TTSVBFileManager.filesAtURLsAreEqual(_:_:)()
{
  void **v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;

  v1 = *v0;
  sub_2487B50B4();
  v2 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  sub_2487B50B4();
  v3 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v1, sel_contentsEqualAtPath_andPath_, v2, v3);

  return v4;
}

uint64_t _TTSVBFileManager.cloneFile(from:to:)(uint64_t a1, char *a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char v29[16];
  uint64_t v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  int v35;
  int v36;

  v5 = type metadata accessor for TTSVBError.Reason(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v25 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - v8;
  v10 = *v2;
  v11 = sub_2487B50CC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2487B5078();
  v30 = v10;
  v31 = v14;
  v32 = 0;
  v33 = 0;
  v34 = 3;
  v15 = &v9[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25777C260) + 48)];
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v26 = a1;
  v16(v9, a1, v11);
  v27 = a2;
  v16(v15, (uint64_t)a2, v11);
  swift_storeEnumTagMultiPayload();
  v17 = v28;
  static TTSVBError.perform<A>(_:problem:reason:)((void (*)(uint64_t))sub_248769444, (uint64_t)v29, (uint64_t)&v32, (uint64_t)v9);
  if (v17)
  {
    sub_2486EDA68((uint64_t)v9, type metadata accessor for TTSVBError.Reason);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    v23 = v14;
    v24 = v11;
    v28 = v12;
    v19 = (uint64_t)v25;
    v20 = sub_2486EDA68((uint64_t)v9, type metadata accessor for TTSVBError.Reason);
    v36 = 0;
    MEMORY[0x24BDAC7A8](v20);
    *(&v23 - 2) = v27;
    *(&v23 - 1) = (char *)&v36;
    sub_2487B5090();
    v21 = v36;
    if (v36)
    {
      v32 = 0;
      v33 = 0xE000000000000000;
      sub_2487B5AA4();
      swift_bridgeObjectRelease();
      v32 = 0xD000000000000019;
      v33 = 0x80000002487C6550;
      v35 = v21;
      sub_2487B5CCC();
      sub_2487B55AC();
      swift_bridgeObjectRelease();
      sub_2487B55AC();
      sub_2487B50B4();
      sub_2487B55AC();
      swift_bridgeObjectRelease();
      sub_2487B55AC();
      sub_2487B50B4();
      sub_2487B55AC();
      swift_bridgeObjectRelease();
      v34 = 0;
      sub_2486F8CA4();
      type metadata accessor for TTSVBError(0);
      sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
      swift_allocError();
      TTSVBError.init(_:_:_:)((uint64_t)&v32, v19, 0, v22);
      swift_willThrow();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v23, v24);
  }
}

uint64_t sub_24876E920()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  _QWORD *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  id v55;
  void *v56;
  unsigned int v57;
  void (*v58)(uint64_t, char *, uint64_t);
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  char *v68;
  void (*v69)(uint64_t, char *, uint64_t);
  uint64_t (*v70)(char *, uint64_t, _QWORD);
  uint64_t result;
  uint64_t (*v72)(char *, char *, _QWORD);
  uint64_t v73;
  uint64_t v74;
  char *v75;
  void (*v76)(uint64_t, char *, uint64_t);
  id v77;
  void (*v78)(uint64_t, char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  void *v81;
  void (*v82)(_QWORD, _QWORD);
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t *, _QWORD);
  unint64_t v86;
  unint64_t v87;
  uint64_t *v88;
  unint64_t v89;
  void (*v90)(_QWORD, _QWORD);
  void (*v91)(uint64_t, char *, uint64_t);
  void (*v92)(char *, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t);
  uint64_t *v101;
  uint64_t *v102;
  unint64_t v103;
  unint64_t v104;
  __int128 v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  uint64_t *v110;
  uint64_t *v111;
  uint64_t *v112;
  void (*v113)(uint64_t, char *, uint64_t);
  uint64_t v114;
  char *v115;
  uint64_t v116;
  unint64_t v117;
  void (*v118)(char *, unint64_t, uint64_t);
  char *v119;
  uint64_t v120;
  uint64_t v121;
  void (*v122)(char *, _QWORD, uint64_t, uint64_t);
  char *v123;
  uint64_t v124;
  uint64_t *v125;
  unint64_t v126;
  uint64_t v127;
  char *v128;
  unint64_t v129;
  unint64_t v130;
  char v131;
  void *v132;

  v124 = sub_2487B533C();
  v1 = *(_QWORD *)(v124 - 8);
  MEMORY[0x24BDAC7A8](v124);
  v123 = (char *)&v93 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for _TTSVBFileManager.VoiceModelFilesystemRepresentation(0);
  v93 = *(_QWORD *)(v94 - 8);
  MEMORY[0x24BDAC7A8](v94);
  v98 = (uint64_t)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TTSVBVoiceModel();
  MEMORY[0x24BDAC7A8](v4);
  v99 = (uint64_t)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTSVBPath();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v0;
  v121 = sub_2487B50CC();
  v10 = *(_QWORD *)(v121 - 8);
  MEMORY[0x24BDAC7A8](v121);
  v120 = v11;
  v12 = (uint64_t *)((char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_storeEnumTagMultiPayload();
  TTSVBPath.url.getter((uint64_t)v12);
  sub_2486EDA68((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBPath);
  v132 = v9;
  v129 = 0;
  v130 = 0;
  v131 = -1;
  v97 = v12;
  v13 = 0;
  _TTSVBFileManager.getChildDirectories(of:problem:)(v12, (uint64_t)&v129);
  v15 = v14;
  v16 = v9;
  v17 = sub_2487712F8(v15, v16);
  swift_bridgeObjectRelease();
  v117 = (unint64_t)v16;

  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28);
  MEMORY[0x24BDAC7A8](v18);
  v107 = v20;
  v119 = (char *)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(v17 + 16);
  v22 = v120;
  v96 = v17;
  v95 = v23;
  if (v21)
  {
    v24 = v17 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v104 = MEMORY[0x24BEE4AF8];
    v116 = *(_QWORD *)(v10 + 72);
    v118 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
    v106 = 0x80000002487C5A00;
    *(_QWORD *)&v19 = 138412290;
    v105 = v19;
    v25 = v121;
    v26 = v119;
    v108 = v1;
    v114 = v10;
    v118(v119, v24, v121);
    while (1)
    {
      v122 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56);
      v122(v26, 0, 1, v25);
      v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
      v28 = v27(v26, 1, v25);
      if ((_DWORD)v28 == 1)
        goto LABEL_30;
      v126 = v24;
      v127 = v21;
      v125 = &v93;
      v29 = v22;
      MEMORY[0x24BDAC7A8](v28);
      v30 = (v22 + 15) & 0xFFFFFFFFFFFFFFF0;
      v31 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v31((char *)&v93 - v30, v26, v25);
      v129 = v117;
      v128 = (char *)&v93 - v30;
      v32 = sub_24876F62C((uint64_t)&v93 - v30);
      if (v13)
        break;
      v113 = (void (*)(uint64_t, char *, uint64_t))v31;
      v109 = 0;
      v110 = &v93;
      v46 = MEMORY[0x24BDAC7A8](v32);
      v115 = (char *)&v93 - v30;
      v112 = &v93;
      v47 = MEMORY[0x24BDAC7A8](v46);
      v49 = (char *)&v93 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (qword_25445F8A0 != -1)
        v47 = swift_once();
      v111 = &v93;
      v50 = (void *)qword_25445F898;
      MEMORY[0x24BDAC7A8](v47);
      v129 = 0xD000000000000012;
      v130 = v106;
      v51 = sub_2487B4FE8();
      v52 = *(_QWORD *)(v51 - 8);
      MEMORY[0x24BDAC7A8](v51);
      v54 = (char *)&v93 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v54, *MEMORY[0x24BDCD7A8], v51);
      sub_2486ED9E0();
      v55 = v50;
      sub_2487B50C0();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v54, v51);
      sub_2487B50B4();
      v56 = (void *)sub_2487B5504();
      swift_bridgeObjectRelease();
      v57 = objc_msgSend(v55, sel_fileExistsAtPath_, v56);

      if (v57)
      {
        v25 = v121;
        v58 = v113;
        v113((uint64_t)v49, (char *)&v93 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0), v121);
        v59 = 0;
        v1 = v108;
        v10 = v114;
      }
      else
      {
        v10 = v114;
        v25 = v121;
        (*(void (**)(char *, uint64_t))(v114 + 8))((char *)&v93 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0), v121);
        v59 = 1;
        v1 = v108;
        v58 = v113;
      }
      v122(v49, v59, 1, v25);

      if (v27(v49, 1, v25) == 1)
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v128, v25);
        sub_2486F5008((uint64_t)v49, &qword_25445ED28);
        v26 = v119;
        v22 = v120;
        v13 = v109;
        v34 = v127;
        goto LABEL_5;
      }
      v58((uint64_t)v115, v49, v25);
      v113 = (void (*)(uint64_t, char *, uint64_t))sub_2487B5228();
      v101 = &v93;
      v60 = (uint64_t *)*((_QWORD *)v113 - 1);
      v61 = v60[8];
      MEMORY[0x24BDAC7A8](v113);
      v103 = (v61 + 15) & 0xFFFFFFFFFFFFFFF0;
      v62 = (char *)&v93 - v103;
      v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED40);
      v102 = &v93;
      v64 = *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64);
      v65 = MEMORY[0x24BDAC7A8](v63);
      v66 = (v64 + 15) & 0xFFFFFFFFFFFFFFF0;
      v112 = &v93;
      MEMORY[0x24BDAC7A8](v65);
      v68 = (char *)&v93 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_2487B5078();
      sub_2487B5018();
      v100 = *(void (**)(char *, uint64_t))(v114 + 8);
      v100(v68, v121);
      sub_2487B51E0();
      v69 = v113;
      swift_bridgeObjectRelease();
      v70 = (uint64_t (*)(char *, uint64_t, _QWORD))v60[6];
      result = v70((char *)&v93 - v66, 1, v69);
      if ((_DWORD)result == 1)
        goto LABEL_32;
      v111 = v60;
      v72 = (uint64_t (*)(char *, char *, _QWORD))v60[4];
      v112 = (uint64_t *)v62;
      v73 = v72(v62, (char *)&v93 - v66, v69);
      v74 = MEMORY[0x24BDAC7A8](v73);
      v75 = (char *)&v93 - v103;
      MEMORY[0x24BDAC7A8](v74);
      sub_2487B5018();
      sub_2487B51E0();
      v76 = v113;
      swift_bridgeObjectRelease();
      result = v70((char *)&v93 - v66, 1, v76);
      if ((_DWORD)result == 1)
      {
        __break(1u);
LABEL_32:
        __break(1u);
        return result;
      }
      v72(v75, (char *)&v93 - v66, v76);
      v77 = (id)qword_25445F898;
      v78 = (void (*)(_QWORD, _QWORD, _QWORD))v76;
      v79 = v99;
      v80 = (uint64_t)v115;
      v81 = v109;
      sub_24876C068((uint64_t)v115, 0, 0, 0xFFu, v99);
      v10 = v114;
      v34 = v127;
      if (v81)
      {

        v82 = (void (*)(_QWORD, _QWORD))v111[1];
        v82(v75, (void (*)(uint64_t, char *, uint64_t))v78);
        v82(v112, (void (*)(uint64_t, char *, uint64_t))v78);
        v25 = v121;
        v100((char *)v80, v121);
        v33 = v81;
        v13 = 0;
        v35 = v108;
        goto LABEL_10;
      }

      v83 = v98;
      sub_248709554(v79, v98, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
      v84 = v94;
      v118((char *)(v83 + *(int *)(v94 + 20)), (unint64_t)v128, v121);
      v85 = (void (*)(uint64_t, uint64_t *, _QWORD))v111[2];
      v85(v83 + *(int *)(v84 + 24), v112, v78);
      v85(v83 + *(int *)(v84 + 28), (uint64_t *)v75, v78);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v104 = sub_24874BBD0(0, *(_QWORD *)(v104 + 16) + 1, 1, v104, &qword_25777D6A0, type metadata accessor for _TTSVBFileManager.VoiceModelFilesystemRepresentation);
      v22 = v120;
      v87 = *(_QWORD *)(v104 + 16);
      v86 = *(_QWORD *)(v104 + 24);
      v13 = 0;
      if (v87 >= v86 >> 1)
        v104 = sub_24874BBD0(v86 > 1, v87 + 1, 1, v104, &qword_25777D6A0, type metadata accessor for _TTSVBFileManager.VoiceModelFilesystemRepresentation);
      v88 = v112;
      v89 = v104;
      *(_QWORD *)(v104 + 16) = v87 + 1;
      sub_24870A2C4(v98, v89+ ((*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80))+ *(_QWORD *)(v93 + 72) * v87, type metadata accessor for _TTSVBFileManager.VoiceModelFilesystemRepresentation);
      sub_2486EDA68(v99, (uint64_t (*)(_QWORD))type metadata accessor for TTSVBVoiceModel);
      v90 = (void (*)(_QWORD, _QWORD))v111[1];
      v91 = v113;
      v90(v75, v113);
      v90(v88, v91);
      v25 = v121;
      v92 = v100;
      v100(v115, v121);
      v92(v128, v25);
      v1 = v108;
      v26 = v119;
LABEL_5:
      v24 = v126 + v116;
      v21 = v34 - 1;
      if (!v21)
        goto LABEL_29;
      v118(v26, v24, v25);
    }
    v33 = v13;
    v13 = 0;
    v34 = v127;
    v35 = v1;
LABEL_10:
    v36 = sub_2487B0B90();
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v123, v36, v124);
    v37 = v33;
    v38 = v33;
    v39 = sub_2487B5324();
    v40 = sub_2487B57D4();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = swift_slowAlloc();
      v42 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v41 = v105;
      v43 = v33;
      v44 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v41 + 4) = v44;
      *v42 = v44;

      _os_log_impl(&dword_2486E6000, v39, v40, "Error looking up voice models on disk: %@", (uint8_t *)v41, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25445F350);
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v42, -1, -1);
      v45 = v41;
      v25 = v121;
      MEMORY[0x24959AF80](v45, -1, -1);

    }
    else
    {

    }
    v1 = v35;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v123, v124);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v128, v25);
    v26 = v119;
    v22 = v120;
    goto LABEL_5;
  }
  v122 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56);
  v104 = MEMORY[0x24BEE4AF8];
  v25 = v121;
  v26 = v119;
LABEL_29:
  v122(v26, 1, 1, v25);
LABEL_30:
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v97, v25);
  return v104;
}

uint64_t sub_24876F62C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445F340);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v20 - v8;
  v10 = *v1;
  v27 = *v1;
  v24 = 0;
  v25 = 0;
  v26 = 3;
  v11 = type metadata accessor for TTSVBError.Reason(0);
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v12(v9, 1, 1, v11);
  _TTSVBFileManager.requireDirectoryExists(_:problem:reason:)(a1, (uint64_t)&v24, (uint64_t)v9);
  result = sub_2486F5008((uint64_t)v9, &qword_25445F340);
  if (!v2)
  {
    v27 = v10;
    v22 = sub_2487B50CC();
    v23 = v20;
    v21 = *(_QWORD *)(v22 - 8);
    MEMORY[0x24BDAC7A8](v22);
    v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    v24 = 0x7461447465737341;
    v25 = 0xE900000000000061;
    v16 = sub_2487B4FE8();
    v20[1] = v20;
    v17 = *(_QWORD *)(v16 - 8);
    MEMORY[0x24BDAC7A8](v16);
    v19 = (char *)v20 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x24BDCD788], v16);
    sub_2486ED9E0();
    sub_2487B50C0();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    swift_bridgeObjectRelease();
    v12(v7, 1, 1, v11);
    v24 = 0;
    v25 = 0;
    v26 = 3;
    _TTSVBFileManager.requireDirectoryExists(_:problem:reason:)((uint64_t)v15, (uint64_t)&v24, (uint64_t)v7);
    sub_2486F5008((uint64_t)v7, &qword_25445F340);
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v15, v22);
  }
  return result;
}

uint64_t sub_24876F89C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;

  if (a3 < 0)
  {
    result = sub_2487B5B4C();
    __break(1u);
  }
  else
  {
    if (a3)
    {
      v6 = (_QWORD *)sub_2487B56B4();
      v7 = v6;
      v6[2] = a3;
      v6[4] = a1;
      v6[5] = a2;
      if (a3 != 1)
      {
        v6[6] = a1;
        v6[7] = a2;
        v8 = a3 - 2;
        if (v8)
        {
          v9 = v6 + 9;
          do
          {
            *(v9 - 1) = a1;
            *v9 = a2;
            swift_bridgeObjectRetain();
            v9 += 2;
            --v8;
          }
          while (v8);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x24BEE4AF8];
    }
    return (uint64_t)v7;
  }
  return result;
}

uint64_t sub_24876F994()
{
  uint64_t inited;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1B0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2487B7370;
  v1 = (void *)*MEMORY[0x24BDBCC98];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDBCC98];
  v2 = (void *)*MEMORY[0x24BDBCC00];
  v3 = (void *)*MEMORY[0x24BDBCCE8];
  *(_QWORD *)(inited + 40) = *MEMORY[0x24BDBCC00];
  *(_QWORD *)(inited + 48) = v3;
  v4 = v1;
  v5 = v2;
  v6 = v3;
  v7 = sub_2487702C8(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  result = swift_arrayDestroy();
  qword_25778D638 = v7;
  return result;
}

id sub_24876FA50()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  qword_25445F898 = (uint64_t)result;
  return result;
}

id TTSVBFileManager.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  if (qword_25445F8A0 != -1)
    swift_once();
  v2 = (void *)qword_25445F898;
  *a1 = qword_25445F898;
  return v2;
}

uint64_t sub_24876FAF4()
{
  sub_2486F4CA0(&qword_25777D690, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_2487BF968);
  sub_2486F4CA0(&qword_25777D698, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_2487BF908);
  return sub_2487B5BA0();
}

uint64_t sub_24876FB78()
{
  sub_2486F4CA0(&qword_25777D6C0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_2487BFB40);
  sub_2486F4CA0(&qword_25777D700, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_2487BFA94);
  return sub_2487B5BA0();
}

_QWORD *sub_24876FBFC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1B0);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  v6 = sub_2487700D0(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_248750938();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_24876FCE0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_24876FCFC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_24876FCFC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777D6A8);
  v10 = *(_QWORD *)(sub_2487B50CC() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_2487B50CC() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_2487B5B94();
  __break(1u);
  return result;
}

unint64_t sub_24876FEDC(uint64_t a1)
{
  uint64_t v2;

  sub_2487B5528();
  sub_2487B5D5C();
  sub_2487B557C();
  v2 = sub_2487B5D98();
  swift_bridgeObjectRelease();
  return sub_24876FF5C(a1, v2);
}

unint64_t sub_24876FF5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_2487B5528();
    v8 = v7;
    if (v6 == sub_2487B5528() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_2487B5CE4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_2487B5528();
          v15 = v14;
          if (v13 == sub_2487B5528() && v15 == v16)
            break;
          v18 = sub_2487B5CE4();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

_QWORD *sub_2487700D0(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;

  v5 = result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(void **)(*(_QWORD *)(a4 + 48) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    result = v20;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2487702C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25777D6D8);
    v3 = sub_2487B5A98();
    v4 = 0;
    v5 = v3 + 56;
    v31 = v1;
    v32 = a1 + 32;
    while (1)
    {
      v6 = *(void **)(v32 + 8 * v4);
      sub_2487B5528();
      sub_2487B5D5C();
      v7 = v6;
      sub_2487B557C();
      v8 = sub_2487B5D98();
      result = swift_bridgeObjectRelease();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = v8 & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = sub_2487B5528();
        v17 = v16;
        if (v15 == sub_2487B5528() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        v20 = sub_2487B5CE4();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
          goto LABEL_4;
        v21 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v21;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v22 = sub_2487B5528();
          v24 = v23;
          if (v22 == sub_2487B5528() && v24 == v25)
            goto LABEL_3;
          v27 = sub_2487B5CE4();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if ((v27 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v7;
      v28 = *(_QWORD *)(v3 + 16);
      v29 = __OFADD__(v28, 1);
      v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

id sub_2487704F4()
{
  uint64_t v0;
  void *v1;
  uint64_t inited;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v9;
  id v10;

  v1 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777D6B8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2487B72B0;
  v3 = (void *)*MEMORY[0x24BDD0CC8];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDD0CC8];
  v4 = v3;
  v5 = sub_2487B5768();
  *(_QWORD *)(inited + 64) = sub_24870A34C(0, &qword_25445F178);
  *(_QWORD *)(inited + 40) = v5;
  sub_24876A5A8(inited);
  type metadata accessor for FileAttributeKey(0);
  sub_2486F4CA0(&qword_25777D6C0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_2487BFB40);
  v6 = (void *)sub_2487B545C();
  swift_bridgeObjectRelease();
  sub_2487B50B4();
  v7 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v10 = 0;
  LODWORD(v1) = objc_msgSend(v1, sel_setAttributes_ofItemAtPath_error_, v6, v7, &v10);

  if ((_DWORD)v1)
    return v10;
  v9 = v10;
  sub_2487B4F64();

  return (id)swift_willThrow();
}

unint64_t sub_24877066C()
{
  unint64_t result;

  result = qword_25777D5E0;
  if (!qword_25777D5E0)
  {
    result = MEMORY[0x24959AEB4](MEMORY[0x24BEE17B0], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_25777D5E0);
  }
  return result;
}

void sub_2487706B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  void *v7;
  void *v8;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t inited;
  void *v34;
  id v35;
  char *v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  id v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  uint64_t *v55;
  uint64_t *v56;
  uint64_t *v57;
  uint64_t *v58;
  uint64_t v59;
  _QWORD v60[2];
  char v61;
  uint64_t v62;
  uint64_t v63;

  v8 = v7;
  v43 = a4;
  v42 = a3;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1B0);
  v12 = swift_allocObject();
  v52 = xmmword_2487B72B0;
  *(_OWORD *)(v12 + 16) = xmmword_2487B72B0;
  v13 = (void *)*MEMORY[0x24BDBCC60];
  *(_QWORD *)(v12 + 32) = *MEMORY[0x24BDBCC60];
  v51 = v13;
  v14 = (void *)sub_2487B57B0();
  swift_bridgeObjectRelease();
  if (v14)
  {
    v47 = &v38;
    v45 = sub_2487B4F94();
    v44 = *(_QWORD *)(v45 - 8);
    MEMORY[0x24BDAC7A8](v45);
    v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    v46 = v14;
    sub_2487B5798();
    sub_2487B4F88();
    if (v62)
    {
      v39 = a5;
      v40 = a6;
      v41 = a7;
      v17 = sub_2487B50CC();
      v18 = v17;
      v19 = *(_QWORD *)(v17 - 8);
      v20 = *(_QWORD *)(v19 + 64);
      v59 = MEMORY[0x24BEE4AD8] + 8;
      v50 = v16;
      v49 = v19;
      v48 = v20;
      do
      {
        MEMORY[0x24BDAC7A8](v17);
        v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28);
        MEMORY[0x24BDAC7A8](v22);
        v24 = (char *)&v38 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
        v25 = swift_dynamicCast();
        v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
        if ((v25 & 1) != 0)
        {
          v26(v24, 0, 1, v18);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v24, 1, v18) != 1)
          {
            v58 = &v38;
            v56 = &v38;
            (*(void (**)(char *, char *, uint64_t))(v19 + 32))((char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v18);
            v27 = sub_2487B4F40();
            v55 = &v38;
            v28 = *(_QWORD *)(v27 - 8);
            MEMORY[0x24BDAC7A8](v27);
            v54 = (char *)&v38 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
            v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777D5E8);
            v57 = &v38;
            MEMORY[0x24BDAC7A8](v30);
            v32 = (char *)&v38 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
            inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = v52;
            v34 = v51;
            *(_QWORD *)(inited + 32) = v51;
            v35 = v34;
            sub_2487702C8(inited);
            swift_setDeallocating();
            type metadata accessor for URLResourceKey(0);
            swift_arrayDestroy();
            sub_2487B5000();
            if (v8)
            {

              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v32, 1, 1, v27);
              v8 = 0;
              goto LABEL_12;
            }
            swift_bridgeObjectRelease();
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v32, 0, 1, v27);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v32, 1, v27) == 1)
            {
LABEL_12:
              v16 = v50;
              v19 = v49;
              (*(void (**)(char *, uint64_t))(v49 + 8))(v21, v18);
              sub_2486F5008((uint64_t)v32, &qword_25777D5E8);
            }
            else
            {
              v36 = v54;
              (*(void (**)(void))(v28 + 32))();
              v37 = sub_2487B4EEC();
              v16 = v50;
              v19 = v49;
              if (v37 != 2)
              {
                if ((v37 & 1) != 0)
                {
                  v63 = v42;
                  v60[0] = v39;
                  v60[1] = v40;
                  v61 = v41;
                  _TTSVBFileManager.setPermissions(_:onItem:problem:)(v43, (uint64_t)v21, (uint64_t)v60);
                }
                (*(void (**)(char *, uint64_t))(v28 + 8))(v54, v27);
                (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
                v20 = v48;
                goto LABEL_6;
              }
              (*(void (**)(char *, uint64_t))(v28 + 8))(v36, v27);
              (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
            }
            v20 = v48;
            goto LABEL_6;
          }
        }
        else
        {
          v26(v24, 1, 1, v18);
        }
        sub_2486F5008((uint64_t)v24, &qword_25445ED28);
LABEL_6:
        v17 = sub_2487B4F88();
      }
      while (v62);
    }
    (*(void (**)(char *, uint64_t))(v44 + 8))(v16, v45);

  }
  else
  {
    __break(1u);
  }
}

id sub_248770CC4()
{
  return sub_248770D88((SEL *)&selRef_moveItemAtURL_toURL_error_);
}

id sub_248770CE0()
{
  return sub_248770D88((SEL *)&selRef_copyItemAtURL_toURL_error_);
}

id sub_248770CFC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v4;
  id v5;

  v1 = *(void **)(v0 + 16);
  v2 = (void *)sub_2487B503C();
  v5 = 0;
  LODWORD(v1) = objc_msgSend(v1, sel_removeItemAtURL_error_, v2, &v5);

  if ((_DWORD)v1)
    return v5;
  v4 = v5;
  sub_2487B4F64();

  return (id)swift_willThrow();
}

id sub_248770D88(SEL *a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  void *v5;
  id v7;
  id v8;

  v3 = *(void **)(v1 + 16);
  v4 = (void *)sub_2487B503C();
  v5 = (void *)sub_2487B503C();
  v8 = 0;
  LODWORD(a1) = objc_msgSend(v3, *a1, v4, v5, &v8);

  if ((_DWORD)a1)
    return v8;
  v7 = v8;
  sub_2487B4F64();

  return (id)swift_willThrow();
}

uint64_t sub_248770E40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = sub_2487B4E38();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

uint64_t sub_248770E74()
{
  return sub_2487B5108();
}

uint64_t sub_248770E94@<X0>(uint64_t *a1@<X8>)
{
  return sub_248772CFC(a1);
}

uint64_t sub_248770EA8()
{
  return sub_2487B4E14();
}

uint64_t sub_248770ED4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_248770EFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_2487B50CC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_248770F8C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_2487B50CC() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24876D0AC(a1, v1 + v4, *(void (**)(char *))(v1 + v5), *(_QWORD *)(v1 + v5 + 8), *(void **)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t type metadata accessor for _TTSVBFileManager.TTSVBRelativePath(uint64_t a1)
{
  return sub_2487095AC(a1, qword_25778D640);
}

uint64_t sub_248771018(uint64_t a1, void *a2)
{
  uint64_t v2;
  void *v4;
  id v5;

  swift_beginAccess();
  v4 = *(void **)(v2 + 16);
  *(_QWORD *)(v2 + 16) = a2;

  v5 = a2;
  return 0;
}

id sub_248771068()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v4;
  id v5;

  v1 = *(void **)(v0 + 16);
  v2 = (void *)sub_2487B503C();
  v5 = 0;
  LODWORD(v1) = objc_msgSend(v1, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v2, 1, 0, &v5);

  if ((_DWORD)v1)
    return v5;
  v4 = v5;
  sub_2487B4F64();

  return (id)swift_willThrow();
}

uint64_t sub_2487710FC()
{
  return sub_2487B5090();
}

uint64_t type metadata accessor for _TTSVBFileManager.VoiceModelFilesystemRepresentation(uint64_t a1)
{
  return sub_2487095AC(a1, (uint64_t *)&unk_25445F8B0);
}

char *sub_248771158(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  char **v4;
  unint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  char *result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v5 = a4 >> 1;
  v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_24;
  }
  v7 = *v4;
  v8 = *((_QWORD *)*v4 + 2);
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)result || v9 > *((_QWORD *)v7 + 3) >> 1)
    goto LABEL_8;
  if (v5 == a3)
  {
    while (v6 > 0)
    {
      __break(1u);
LABEL_8:
      if (v8 <= v9)
        v13 = v8 + v6;
      else
        v13 = v8;
      result = sub_248709428(result, v13, 1, v7);
      v7 = result;
      if (v5 != a3)
        goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_12:
  v14 = *((_QWORD *)v7 + 2);
  if ((*((_QWORD *)v7 + 3) >> 1) - v14 < v6)
    goto LABEL_25;
  if (v6 < 0)
    goto LABEL_27;
  v15 = (unint64_t)&v7[16 * v14 + 32];
  v16 = a2 + 16 * a3;
  if (v16 < v15 + 16 * v6 && v15 < v16 + 16 * v6)
    goto LABEL_27;
  result = (char *)swift_arrayInitWithCopy();
  if (!v6)
  {
LABEL_22:
    *v4 = v7;
    return result;
  }
  v18 = *((_QWORD *)v7 + 2);
  v19 = __OFADD__(v18, v6);
  v20 = v18 + v6;
  if (!v19)
  {
    *((_QWORD *)v7 + 2) = v20;
    goto LABEL_22;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  result = (char *)sub_2487B5B94();
  __break(1u);
  return result;
}

uint64_t sub_2487712F8(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  int64_t v20;
  int isUniquelyReferenced_nonNull_native;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  _QWORD v31[2];
  unint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t, uint64_t);
  id v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD v39[2];
  char v40;
  id v41;

  v3 = v2;
  v35 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v31[1] = a1;
  if (v8)
  {
    v38 = sub_2487B50CC();
    v9 = *(_QWORD *)(v38 - 8);
    v32 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v10 = a1 + v32;
    v36 = *(_QWORD *)(v9 + 72);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    swift_bridgeObjectRetain();
    v11 = MEMORY[0x24BEE4AF8];
    v33 = v7;
    while (1)
    {
      v12 = v38;
      v34(v7, v10, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v12);
      v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v12);
      if ((_DWORD)v13 == 1)
        break;
      v37 = v31;
      MEMORY[0x24BDAC7A8](v13);
      v15 = (_QWORD *)((char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, char *, uint64_t))(v9 + 32))(v15, v7, v12);
      v41 = v35;
      v39[0] = 0;
      v39[1] = 0;
      v40 = -1;
      _TTSVBFileManager.getChildDirectories(of:problem:)(v15, (uint64_t)v39);
      if (v3)
      {

        v17 = MEMORY[0x24BEE4AF8];
      }
      else
      {
        v17 = v16;
      }
      (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v15, v38);
      v18 = *(_QWORD *)(v17 + 16);
      v19 = *(_QWORD *)(v11 + 16);
      v20 = v19 + v18;
      if (__OFADD__(v19, v18))
      {
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:

        result = sub_2487B5B94();
        __break(1u);
        return result;
      }
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (!isUniquelyReferenced_nonNull_native || v20 > *(_QWORD *)(v11 + 24) >> 1)
      {
        if (v19 <= v20)
          v22 = v19 + v18;
        else
          v22 = v19;
        v11 = sub_24874BBD0(isUniquelyReferenced_nonNull_native, v22, 1, v11, &qword_25777D6A8, (uint64_t (*)(_QWORD))MEMORY[0x24BDCDAB8]);
      }
      v3 = 0;
      v7 = v33;
      if (*(_QWORD *)(v17 + 16))
      {
        v23 = *(_QWORD *)(v11 + 16);
        if ((*(_QWORD *)(v11 + 24) >> 1) - v23 < v18)
          goto LABEL_31;
        v24 = v11 + v32 + v23 * v36;
        if (v17 + v32 < v24 + v18 * v36 && v24 < v17 + v32 + v18 * v36)
          goto LABEL_33;
        swift_arrayInitWithCopy();
        if (v18)
        {
          v26 = *(_QWORD *)(v11 + 16);
          v27 = __OFADD__(v26, v18);
          v28 = v26 + v18;
          if (v27)
            goto LABEL_32;
          *(_QWORD *)(v11 + 16) = v28;
        }
      }
      else if (v18)
      {
        goto LABEL_30;
      }
      swift_bridgeObjectRelease();
      v10 += v36;
      if (!--v8)
        goto LABEL_27;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = MEMORY[0x24BEE4AF8];
LABEL_27:
    v29 = sub_2487B50CC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v7, 1, 1, v29);
  }
  swift_bridgeObjectRelease();
  return v11;
}

ValueMetadata *type metadata accessor for _TTSVBFileManager()
{
  return &type metadata for _TTSVBFileManager;
}

uint64_t *initializeBufferWithCopyOfBuffer for _TTSVBFileManager.TTSVBRelativePath(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2487B50CC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for _TTSVBFileManager.TTSVBRelativePath(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2487B50CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for _TTSVBFileManager.TTSVBRelativePath(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_2487B50CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for _TTSVBFileManager.TTSVBRelativePath(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_2487B50CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for _TTSVBFileManager.TTSVBRelativePath(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_2487B50CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for _TTSVBFileManager.TTSVBRelativePath(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_2487B50CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for _TTSVBFileManager.TTSVBRelativePath()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_248771900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_2487B50CC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for _TTSVBFileManager.TTSVBRelativePath()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24877198C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_2487B50CC();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_248771A08()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2487B50CC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for _TTSVBFileManager.VoiceModelFilesystemRepresentation(char *a1, char *a2, uint64_t a3)
{
  char *v4;
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  unsigned int (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  char *__dst;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v48 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v48 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v6;
    v7 = (int *)type metadata accessor for TTSVBVoiceModel();
    v8 = v7[5];
    v9 = &v4[v8];
    v10 = &a2[v8];
    v11 = sub_2487B5228();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v60 = v12;
    v61 = v11;
    v12(&v4[v7[6]], &a2[v7[6]], v11);
    v13 = v7[7];
    v14 = &v4[v13];
    v15 = &a2[v13];
    v59 = sub_2487B51D4();
    v16 = *(_QWORD *)(v59 - 8);
    v55 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v55(v14, v15, v59);
    v17 = v7[8];
    v18 = &v4[v17];
    v19 = &a2[v17];
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v21 = v7[9];
    v22 = &v4[v21];
    v23 = &a2[v21];
    v57 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v57;
    v24 = v7[10];
    v25 = &v4[v24];
    v26 = &a2[v24];
    v27 = *((_QWORD *)v26 + 1);
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *((_QWORD *)v25 + 1) = v27;
    v28 = v7[11];
    v29 = &v4[v28];
    v30 = &a2[v28];
    v31 = *((_QWORD *)v30 + 1);
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *((_QWORD *)v29 + 1) = v31;
    v32 = v7[12];
    v33 = &v4[v32];
    v34 = &a2[v32];
    v35 = *((_QWORD *)v34 + 1);
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *((_QWORD *)v33 + 1) = v35;
    *(_QWORD *)&v4[v7[13]] = *(_QWORD *)&a2[v7[13]];
    v36 = v7[14];
    v37 = &v4[v36];
    v38 = &a2[v36];
    v39 = *((_QWORD *)v38 + 1);
    *(_QWORD *)v37 = *(_QWORD *)v38;
    *((_QWORD *)v37 + 1) = v39;
    *(_QWORD *)&v4[v7[15]] = *(_QWORD *)&a2[v7[15]];
    *(_QWORD *)&v4[v7[16]] = *(_QWORD *)&a2[v7[16]];
    v40 = v7[17];
    v41 = &v4[v40];
    v42 = &a2[v40];
    v43 = *((_QWORD *)v42 + 1);
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *((_QWORD *)v41 + 1) = v43;
    v44 = v7[18];
    __dst = &v4[v44];
    v45 = &a2[v44];
    v56 = v16;
    v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v46(v45, 1, v59))
    {
      v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
      memcpy(__dst, v45, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      v55(__dst, v45, v59);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(__dst, 0, 1, v59);
    }
    v4[v7[19]] = a2[v7[19]];
    *(_DWORD *)&v4[v7[20]] = *(_DWORD *)&a2[v7[20]];
    v49 = a3;
    v50 = *(int *)(a3 + 20);
    v51 = &v4[v50];
    v52 = &a2[v50];
    v53 = sub_2487B50CC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
    v60(&v4[*(int *)(v49 + 24)], &a2[*(int *)(v49 + 24)], v61);
    v60(&v4[*(int *)(v49 + 28)], &a2[*(int *)(v49 + 28)], v61);
  }
  return v4;
}

uint64_t destroy for _TTSVBFileManager.VoiceModelFilesystemRepresentation(uint64_t a1, int *a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v15)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for TTSVBVoiceModel();
  v5 = a1 + v4[5];
  v6 = sub_2487B5228();
  v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v15(v5, v6);
  v15(a1 + v4[6], v6);
  v7 = a1 + v4[7];
  v8 = sub_2487B51D4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = a1 + v4[18];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8))
    v10(v11, v8);
  v12 = a1 + a2[5];
  v13 = sub_2487B50CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  v15(a1 + a2[6], v6);
  return ((uint64_t (*)(uint64_t, uint64_t))v15)(a1 + a2[7], v6);
}

char *initializeWithCopy for _TTSVBFileManager.VoiceModelFilesystemRepresentation(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  unsigned int (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  char *__dst;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;

  v5 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v5;
  v6 = (int *)type metadata accessor for TTSVBVoiceModel();
  v7 = v6[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_2487B5228();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v58 = v11;
  v59 = v10;
  v11(&a1[v6[6]], &a2[v6[6]], v10);
  v12 = v6[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v57 = sub_2487B51D4();
  v15 = *(_QWORD *)(v57 - 8);
  v53 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v53(v13, v14, v57);
  v16 = v6[8];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = v19;
  v20 = v6[9];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v55 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = v55;
  v23 = v6[10];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = *((_QWORD *)v25 + 1);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *((_QWORD *)v24 + 1) = v26;
  v27 = v6[11];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = *((_QWORD *)v29 + 1);
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *((_QWORD *)v28 + 1) = v30;
  v31 = v6[12];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = *((_QWORD *)v33 + 1);
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *((_QWORD *)v32 + 1) = v34;
  *(_QWORD *)&a1[v6[13]] = *(_QWORD *)&a2[v6[13]];
  v35 = v6[14];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v38 = *((_QWORD *)v37 + 1);
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *((_QWORD *)v36 + 1) = v38;
  *(_QWORD *)&a1[v6[15]] = *(_QWORD *)&a2[v6[15]];
  *(_QWORD *)&a1[v6[16]] = *(_QWORD *)&a2[v6[16]];
  v39 = v6[17];
  v40 = &a1[v39];
  v41 = &a2[v39];
  v42 = *((_QWORD *)v41 + 1);
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *((_QWORD *)v40 + 1) = v42;
  v43 = v6[18];
  __dst = &a1[v43];
  v44 = &a2[v43];
  v54 = v15;
  v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v45(v44, 1, v57))
  {
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
    memcpy(__dst, v44, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    v53(__dst, v44, v57);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(__dst, 0, 1, v57);
  }
  a1[v6[19]] = a2[v6[19]];
  *(_DWORD *)&a1[v6[20]] = *(_DWORD *)&a2[v6[20]];
  v47 = a3;
  v48 = *(int *)(a3 + 20);
  v49 = &a1[v48];
  v50 = &a2[v48];
  v51 = sub_2487B50CC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
  v58(&a1[*(int *)(v47 + 24)], &a2[*(int *)(v47 + 24)], v59);
  v58(&a1[*(int *)(v47 + 28)], &a2[*(int *)(v47 + 28)], v59);
  return a1;
}

char *assignWithCopy for _TTSVBFileManager.VoiceModelFilesystemRepresentation(char *a1, char *a2, uint64_t a3)
{
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  void (*v50)(char *, char *, uint64_t);
  void (*v51)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = (int *)type metadata accessor for TTSVBVoiceModel();
  v6 = v5[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_2487B5228();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v51 = v10;
  v10(&a1[v5[6]], &a2[v5[6]], v9);
  v11 = v5[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_2487B51D4();
  v15 = *(_QWORD *)(v14 - 8);
  v50 = *(void (**)(char *, char *, uint64_t))(v15 + 24);
  v50(v12, v13, v14);
  v16 = v5[8];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = v5[9];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = v5[10];
  v23 = &a1[v22];
  v24 = &a2[v22];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = v5[11];
  v26 = &a1[v25];
  v27 = &a2[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = v5[12];
  v29 = &a1[v28];
  v30 = &a2[v28];
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[v5[13]] = *(_QWORD *)&a2[v5[13]];
  v31 = v5[14];
  v32 = &a1[v31];
  v33 = &a2[v31];
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *((_QWORD *)v32 + 1) = *((_QWORD *)v33 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[v5[15]] = *(_QWORD *)&a2[v5[15]];
  *(_QWORD *)&a1[v5[16]] = *(_QWORD *)&a2[v5[16]];
  v34 = v5[17];
  v35 = &a1[v34];
  v36 = &a2[v34];
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = v5[18];
  v38 = &a1[v37];
  v39 = &a2[v37];
  v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v41 = v40(&a1[v37], 1, v14);
  v42 = v40(v39, 1, v14);
  if (!v41)
  {
    if (!v42)
    {
      v50(v38, v39, v14);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v38, v14);
    goto LABEL_6;
  }
  if (v42)
  {
LABEL_6:
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v38, v39, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v38, 0, 1, v14);
LABEL_7:
  a1[v5[19]] = a2[v5[19]];
  *(_DWORD *)&a1[v5[20]] = *(_DWORD *)&a2[v5[20]];
  v44 = a3;
  v45 = *(int *)(a3 + 20);
  v46 = &a1[v45];
  v47 = &a2[v45];
  v48 = sub_2487B50CC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 24))(v46, v47, v48);
  v51(&a1[*(int *)(v44 + 24)], &a2[*(int *)(v44 + 24)], v9);
  v51(&a1[*(int *)(v44 + 28)], &a2[*(int *)(v44 + 28)], v9);
  return a1;
}

char *initializeWithTake for _TTSVBFileManager.VoiceModelFilesystemRepresentation(char *a1, char *a2, uint64_t a3)
{
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v5 = (int *)type metadata accessor for TTSVBVoiceModel();
  v6 = v5[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_2487B5228();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[v5[6]], &a2[v5[6]], v9);
  v11 = v5[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_2487B51D4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v16(v12, v13, v14);
  *(_OWORD *)&a1[v5[8]] = *(_OWORD *)&a2[v5[8]];
  *(_OWORD *)&a1[v5[9]] = *(_OWORD *)&a2[v5[9]];
  *(_OWORD *)&a1[v5[10]] = *(_OWORD *)&a2[v5[10]];
  *(_OWORD *)&a1[v5[11]] = *(_OWORD *)&a2[v5[11]];
  *(_OWORD *)&a1[v5[12]] = *(_OWORD *)&a2[v5[12]];
  *(_QWORD *)&a1[v5[13]] = *(_QWORD *)&a2[v5[13]];
  *(_OWORD *)&a1[v5[14]] = *(_OWORD *)&a2[v5[14]];
  *(_QWORD *)&a1[v5[15]] = *(_QWORD *)&a2[v5[15]];
  *(_QWORD *)&a1[v5[16]] = *(_QWORD *)&a2[v5[16]];
  *(_OWORD *)&a1[v5[17]] = *(_OWORD *)&a2[v5[17]];
  v17 = v5[18];
  v18 = &a1[v17];
  v19 = &a2[v17];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(&a2[v17], 1, v14))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v16(v18, v19, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  }
  a1[v5[19]] = a2[v5[19]];
  *(_DWORD *)&a1[v5[20]] = *(_DWORD *)&a2[v5[20]];
  v21 = a3;
  v22 = *(int *)(a3 + 20);
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = sub_2487B50CC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  v10(&a1[*(int *)(v21 + 24)], &a2[*(int *)(v21 + 24)], v9);
  v10(&a1[*(int *)(v21 + 28)], &a2[*(int *)(v21 + 28)], v9);
  return a1;
}

char *assignWithTake for _TTSVBFileManager.VoiceModelFilesystemRepresentation(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t (*v55)(char *, uint64_t, uint64_t);
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  void (*v65)(char *, char *, uint64_t);
  void (*v66)(char *, char *, uint64_t);

  v5 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v5;
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for TTSVBVoiceModel();
  v7 = v6[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_2487B5228();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v66 = v11;
  v11(&a1[v6[6]], &a2[v6[6]], v10);
  v12 = v6[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_2487B51D4();
  v16 = *(_QWORD *)(v15 - 8);
  v65 = *(void (**)(char *, char *, uint64_t))(v16 + 40);
  v65(v13, v14, v15);
  v17 = v6[8];
  v18 = &a1[v17];
  v19 = (uint64_t *)&a2[v17];
  v21 = *v19;
  v20 = v19[1];
  *(_QWORD *)v18 = v21;
  *((_QWORD *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  v22 = v6[9];
  v23 = &a1[v22];
  v24 = (uint64_t *)&a2[v22];
  v26 = *v24;
  v25 = v24[1];
  *(_QWORD *)v23 = v26;
  *((_QWORD *)v23 + 1) = v25;
  swift_bridgeObjectRelease();
  v27 = v6[10];
  v28 = &a1[v27];
  v29 = (uint64_t *)&a2[v27];
  v31 = *v29;
  v30 = v29[1];
  *(_QWORD *)v28 = v31;
  *((_QWORD *)v28 + 1) = v30;
  swift_bridgeObjectRelease();
  v32 = v6[11];
  v33 = &a1[v32];
  v34 = (uint64_t *)&a2[v32];
  v36 = *v34;
  v35 = v34[1];
  *(_QWORD *)v33 = v36;
  *((_QWORD *)v33 + 1) = v35;
  swift_bridgeObjectRelease();
  v37 = v6[12];
  v38 = &a1[v37];
  v39 = (uint64_t *)&a2[v37];
  v41 = *v39;
  v40 = v39[1];
  *(_QWORD *)v38 = v41;
  *((_QWORD *)v38 + 1) = v40;
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[v6[13]] = *(_QWORD *)&a2[v6[13]];
  v42 = v6[14];
  v43 = &a1[v42];
  v44 = (uint64_t *)&a2[v42];
  v46 = *v44;
  v45 = v44[1];
  *(_QWORD *)v43 = v46;
  *((_QWORD *)v43 + 1) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[v6[15]] = *(_QWORD *)&a2[v6[15]];
  *(_QWORD *)&a1[v6[16]] = *(_QWORD *)&a2[v6[16]];
  v47 = v6[17];
  v48 = &a1[v47];
  v49 = (uint64_t *)&a2[v47];
  v51 = *v49;
  v50 = v49[1];
  *(_QWORD *)v48 = v51;
  *((_QWORD *)v48 + 1) = v50;
  swift_bridgeObjectRelease();
  v52 = v6[18];
  v53 = &a1[v52];
  v54 = &a2[v52];
  v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v56 = v55(&a1[v52], 1, v15);
  v57 = v55(v54, 1, v15);
  if (!v56)
  {
    if (!v57)
    {
      v65(v53, v54, v15);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v53, v15);
    goto LABEL_6;
  }
  if (v57)
  {
LABEL_6:
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v53, v54, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v53, 0, 1, v15);
LABEL_7:
  a1[v6[19]] = a2[v6[19]];
  *(_DWORD *)&a1[v6[20]] = *(_DWORD *)&a2[v6[20]];
  v59 = a3;
  v60 = *(int *)(a3 + 20);
  v61 = &a1[v60];
  v62 = &a2[v60];
  v63 = sub_2487B50CC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 40))(v61, v62, v63);
  v66(&a1[*(int *)(v59 + 24)], &a2[*(int *)(v59 + 24)], v10);
  v66(&a1[*(int *)(v59 + 28)], &a2[*(int *)(v59 + 28)], v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for _TTSVBFileManager.VoiceModelFilesystemRepresentation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_248772A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for TTSVBVoiceModel();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = sub_2487B50CC();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = sub_2487B5228();
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for _TTSVBFileManager.VoiceModelFilesystemRepresentation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_248772B38(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = type metadata accessor for TTSVBVoiceModel();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_2487B50CC();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_2487B5228();
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_248772BD8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for TTSVBVoiceModel();
  if (v1 <= 0x3F)
  {
    result = sub_2487B50CC();
    if (v2 <= 0x3F)
    {
      result = sub_2487B5228();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_248772C78()
{
  return sub_2486F4CA0(&qword_25777D678, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_2487BF8CC);
}

uint64_t sub_248772CA4()
{
  return sub_2486F4CA0(&qword_25777D680, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_2487BF8A0);
}

uint64_t sub_248772CD0()
{
  return sub_2486F4CA0(&qword_25777D688, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_2487BF93C);
}

uint64_t sub_248772CFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = sub_2487B50D8();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

uint64_t sub_248772D2C()
{
  type metadata accessor for TTSVBVoiceModel();
  sub_2486F4CA0(&qword_25777C1A8, (uint64_t (*)(uint64_t))type metadata accessor for TTSVBVoiceModel, (uint64_t)&protocol conformance descriptor for TTSVBVoiceModel);
  return sub_2487B4E14();
}

uint64_t sub_248772DB0(char *a1)
{
  uint64_t v1;
  _DWORD *v2;
  uint64_t result;

  v2 = *(_DWORD **)(v1 + 16);
  result = clonefile(*(const char **)(v1 + 24), a1, 0);
  *v2 = result;
  return result;
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
  sub_24871F99C(a1, &qword_25777D6E0);
}

uint64_t sub_248772DF8()
{
  return sub_2486F4CA0(&qword_25777D6E8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_2487BFA58);
}

uint64_t sub_248772E24()
{
  return sub_2486F4CA0(&qword_25777D6F0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_2487BFA2C);
}

uint64_t sub_248772E50()
{
  return sub_2486F4CA0(&qword_25777D6F8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_2487BFAC8);
}

unint64_t static TTSVBDataStoreEntity.TTSVBCloudVoiceSampleMO.getter()
{
  return 0xD000000000000012;
}

unint64_t static TTSVBDataStoreEntity.TTSVBCloudVoiceModelFileMO.getter()
{
  return 0xD000000000000015;
}

void sub_248772EBC()
{
  qword_25445F7B8 = 0x7475466F69647561;
  qword_25445F7C0 = 0xEB00000000657275;
}

uint64_t static TTSVBDataStoreAttribute.TTSVBAudioFuture.getter()
{
  return sub_248772F50(&qword_25445F7D0, &qword_25445F7B8);
}

void sub_248772F08()
{
  qword_25445F790 = 0x75747546656C6966;
  qword_25445F798 = 0xEA00000000006572;
}

uint64_t static TTSVBDataStoreAttribute.TTSVBFileFuture.getter()
{
  return sub_248772F50(&qword_25445F7A8, &qword_25445F790);
}

uint64_t sub_248772F50(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

unint64_t TTSVBDataStoreViewContextName.getter()
{
  return 0xD000000000000019;
}

TextToSpeechVoiceBankingSupport::TTSVBDataStore::Configuration_optional __swiftcall TTSVBDataStore.Configuration.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  TextToSpeechVoiceBankingSupport::TTSVBDataStore::Configuration_optional result;
  char v5;

  v2 = v1;
  v3 = sub_2487B5BAC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t TTSVBDataStore.Configuration.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6D656144636E7973;
  else
    return 0x6E65696C43637078;
}

uint64_t sub_248773060(char *a1, char *a2)
{
  return sub_24877306C(*a1, *a2);
}

uint64_t sub_24877306C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6D656144636E7973;
  else
    v3 = 0x6E65696C43637078;
  if (v2)
    v4 = 0xE900000000000074;
  else
    v4 = 0xEA00000000006E6FLL;
  if ((a2 & 1) != 0)
    v5 = 0x6D656144636E7973;
  else
    v5 = 0x6E65696C43637078;
  if ((a2 & 1) != 0)
    v6 = 0xEA00000000006E6FLL;
  else
    v6 = 0xE900000000000074;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_2487B5CE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_248773114()
{
  return sub_24877311C();
}

uint64_t sub_24877311C()
{
  sub_2487B5D5C();
  sub_2487B557C();
  swift_bridgeObjectRelease();
  return sub_2487B5D98();
}

uint64_t sub_2487731A4()
{
  return sub_2487731AC();
}

uint64_t sub_2487731AC()
{
  sub_2487B557C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24877320C()
{
  return sub_248773214();
}

uint64_t sub_248773214()
{
  sub_2487B5D5C();
  sub_2487B557C();
  swift_bridgeObjectRelease();
  return sub_2487B5D98();
}

TextToSpeechVoiceBankingSupport::TTSVBDataStore::Configuration_optional sub_248773298(Swift::String *a1)
{
  return TTSVBDataStore.Configuration.init(rawValue:)(*a1);
}

uint64_t sub_2487732A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = TTSVBDataStore.Configuration.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t TTSVBDataStore.XPCServiceConfig.storeURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2487B50CC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

id TTSVBDataStore.XPCServiceConfig.model.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for TTSVBDataStore.XPCServiceConfig(0) + 20));
}

uint64_t type metadata accessor for TTSVBDataStore.XPCServiceConfig(uint64_t a1)
{
  return sub_2487095AC(a1, (uint64_t *)&unk_25445F820);
}

uint64_t TTSVBDataStore.XPCServiceConfig.options.getter()
{
  type metadata accessor for TTSVBDataStore.XPCServiceConfig(0);
  return swift_bridgeObjectRetain();
}

uint64_t TTSVBDataStore.XPCServiceConfig.serviceName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TTSVBDataStore.XPCServiceConfig(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TTSVBDataStore.XPCServiceConfig.init(storeURL:model:serviceName:options:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  int *v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  _OWORD v20[2];
  __int128 v21;
  uint64_t v22;
  _BYTE v23[40];

  v12 = sub_2487B50CC();
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(a6, a1, v12);
  v14 = (int *)type metadata accessor for TTSVBDataStore.XPCServiceConfig(0);
  *(_QWORD *)(a6 + v14[5]) = a2;
  v15 = (_QWORD *)(a6 + v14[7]);
  *v15 = a3;
  v15[1] = a4;
  sub_2487B5528();
  v16 = a2;
  swift_bridgeObjectRetain();
  v17 = MEMORY[0x24BEE0D00];
  sub_2487B5A68();
  v22 = v17;
  *(_QWORD *)&v21 = a3;
  *((_QWORD *)&v21 + 1) = a4;
  sub_24870A40C(&v21, v20);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_2487798A8(v20, (uint64_t)v23, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_2487799E0((uint64_t)v23);

  result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
  *(_QWORD *)(a6 + v14[6]) = a5;
  return result;
}

unint64_t static TTSVBDataStore.iCloudContainerName.getter()
{
  return 0xD000000000000024;
}

unint64_t static TTSVBDataStore.xpcStoreServiceName.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static TTSVBDataStore.apsServiceName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t TTSVBDataStore.eventPublisher.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25445F108);
  sub_24871869C(&qword_25445F100, &qword_25445F108, MEMORY[0x24BDB9CB0]);
  return sub_2487B539C();
}

id sub_24877359C(unsigned __int8 *a1, char *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return sub_2487735DC(a1, a2);
}

id sub_2487735DC(unsigned __int8 *a1, char *a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  char *v25;
  uint64_t v26;
  char *v27;
  int v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  id v45;
  _QWORD v47[4];
  uint64_t v48;
  int v49;
  char *v50;
  objc_class *ObjectType;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  objc_super v57;
  uint64_t v58;

  v3 = v2;
  v55 = a2;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = sub_2487B533C();
  v53 = *(_QWORD *)(v5 - 8);
  v54 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v52 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2487B5828();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v50 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2487B5804();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v10);
  v12 = sub_2487B5408();
  MEMORY[0x24BDAC7A8](v12);
  v49 = *a1;
  v13 = OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore_eventSubject;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25445F108);
  swift_allocObject();
  v14 = v3;
  *(_QWORD *)&v3[v13] = sub_2487B536C();
  v48 = OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore_queue;
  v47[3] = sub_24870A34C(0, (unint64_t *)&qword_25445F6C0);
  sub_2487B53F0();
  v58 = MEMORY[0x24BEE4AF8];
  v47[1] = sub_2486F4CA0((unint64_t *)&unk_25445F6B0, v11, MEMORY[0x24BEE5698]);
  v47[0] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F360);
  v47[2] = sub_24871869C((unint64_t *)&unk_25445F6A0, (uint64_t *)&unk_25445F360, MEMORY[0x24BEE12C8]);
  sub_2487B59FC();
  v15 = *MEMORY[0x24BEE5750];
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v17 = v50;
  v16(v50, v15, v7);
  *(_QWORD *)&v14[v48] = sub_2487B584C();
  v48 = OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore_calloutQueue;
  sub_2487B53F0();
  v58 = MEMORY[0x24BEE4AF8];
  sub_2487B59FC();
  v16(v17, v15, v7);
  *(_QWORD *)&v14[v48] = sub_2487B584C();
  v18 = &v14[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore_cloudStoreName];
  *(_QWORD *)v18 = 0x6563696F56535454;
  *((_QWORD *)v18 + 1) = 0xEF676E696B6E6142;
  v19 = &v14[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore_localStoreName];
  *(_QWORD *)v19 = 0xD000000000000014;
  *((_QWORD *)v19 + 1) = 0x80000002487C66E0;
  v20 = &v14[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore_managedObjectModelName];
  *(_QWORD *)v20 = 0x6563696F56535454;
  *((_QWORD *)v20 + 1) = 0xEF676E696B6E6142;
  v21 = &v14[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore____lazy_storage___cloudDatastoreURL];
  v22 = sub_2487B50CC();
  v23 = *(_QWORD **)(v22 - 8);
  v24 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v23[7];
  v24(v21, 1, 1, v22);
  v24(&v14[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore____lazy_storage___localDatastoreURL], 1, 1, v22);
  v24(&v14[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore____lazy_storage___managedObjectModelURL], 1, 1, v22);
  *(_QWORD *)&v14[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore____lazy_storage___container] = 0;
  v14[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore_queue_shouldAttemptLoad] = 1;
  v25 = &v14[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore_queue_loadError];
  v26 = type metadata accessor for TTSVBError(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  v27 = &v14[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore_persistentHistoryProcessingDatesPreferenceKey];
  *(_QWORD *)v27 = 0xD000000000000020;
  *((_QWORD *)v27 + 1) = 0x80000002487C6700;
  v28 = v49;
  v14[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore_configureation] = v49;
  v29 = (void (*)(char *, uint64_t, uint64_t))v23[2];
  v30 = v55;
  v29(&v14[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore_voiceBankingRootURL], (uint64_t)v55, v22);

  v31 = sub_2487B0D54();
  v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 16))(v52, v31, v54);
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)v47 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29(v34, (uint64_t)v30, v22);
  v35 = sub_2487B5324();
  v36 = sub_2487B57BC();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = swift_slowAlloc();
    v50 = (char *)v47;
    v38 = v37;
    v48 = swift_slowAlloc();
    v58 = v48;
    *(_DWORD *)v38 = 136315394;
    if (v28)
      v39 = 0x6D656144636E7973;
    else
      v39 = 0x6E65696C43637078;
    if (v28)
      v40 = 0xEA00000000006E6FLL;
    else
      v40 = 0xE900000000000074;
    v56 = sub_2486EDE5C(v39, v40, &v58);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2080;
    v41 = sub_2487B50B4();
    v56 = sub_2486EDE5C(v41, v42, &v58);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    v43 = (void (*)(char *, uint64_t))v23[1];
    v43(v34, v22);
    _os_log_impl(&dword_2486E6000, v35, v36, "Initializing datastore with config=%s rootURL=%s", (uint8_t *)v38, 0x16u);
    v44 = v48;
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v44, -1, -1);
    MEMORY[0x24959AF80](v38, -1, -1);

    (*(void (**)(char *, uint64_t))(v53 + 8))(v52, v54);
  }
  else
  {
    v43 = (void (*)(char *, uint64_t))v23[1];
    v43(v34, v22);

    (*(void (**)(char *, uint64_t))(v53 + 8))(v52, v54);
  }
  v57.receiver = v14;
  v57.super_class = ObjectType;
  v45 = objc_msgSendSuper2(&v57, sel_init);
  v43(v55, v22);
  return v45;
}

uint64_t sub_248773CCC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE v15[24];

  v4 = v2 + *a1;
  swift_beginAccess();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28);
  v6 = *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_2486F4E74(v4, (uint64_t)&v15[-v7], &qword_25445ED28);
  v8 = sub_2487B50CC();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(&v15[-v7], 1, v8) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v9 + 32))(a2, &v15[-v7], v8);
  v10 = sub_2486F5008((uint64_t)&v15[-v7], &qword_25445ED28);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v15[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2487B5054();
  sub_2487B5060();
  v13 = (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
  MEMORY[0x24BDAC7A8](v13);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(&v15[-v7], a2, v8);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(&v15[-v7], 0, 1, v8);
  swift_beginAccess();
  sub_24877CF1C((uint64_t)&v15[-v7], v4, &qword_25445ED28);
  return swift_endAccess();
}

uint64_t sub_248773ED0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];

  v3 = v1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore____lazy_storage___managedObjectModelURL;
  swift_beginAccess();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28);
  v5 = *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_2486F4E74(v3, (uint64_t)&v11[-v6], &qword_25445ED28);
  v7 = sub_2487B50CC();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(&v11[-v6], 1, v7) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v8 + 32))(a1, &v11[-v6], v7);
  sub_2486F5008((uint64_t)&v11[-v6], &qword_25445ED28);
  v9 = sub_248774060(a1);
  MEMORY[0x24BDAC7A8](v9);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(&v11[-v6], a1, v7);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(&v11[-v6], 0, 1, v7);
  swift_beginAccess();
  sub_24877CF1C((uint64_t)&v11[-v6], v3, &qword_25445ED28);
  return swift_endAccess();
}

uint64_t sub_248774060@<X0>(uint64_t a1@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v16;
  id v17;
  _QWORD v18[2];
  unint64_t v19;
  unint64_t v20;

  swift_getObjectType();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v4 = (void *)sub_2487B5504();
  v5 = (void *)sub_2487B5504();
  v6 = objc_msgSend(v3, sel_URLForResource_withExtension_, v4, v5);

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED28);
  v18[1] = v18;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v6)
  {
    v10 = sub_2487B50CC();
    v11 = *(_QWORD *)(v10 - 8);
    MEMORY[0x24BDAC7A8](v10);
    v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2487B509C();

    v14 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v14(v9, v13, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
    {

      return ((uint64_t (*)(uint64_t, char *, uint64_t))v14)(a1, v9, v10);
    }
  }
  else
  {
    v16 = sub_2487B50CC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v9, 1, 1, v16);
  }
  sub_2486F5008((uint64_t)v9, &qword_25445ED28);
  v19 = 0;
  v20 = 0xE000000000000000;
  sub_2487B5AA4();
  swift_bridgeObjectRelease();
  v19 = 0xD000000000000014;
  v20 = 0x80000002487C6D20;
  swift_bridgeObjectRetain();
  sub_2487B55AC();
  swift_bridgeObjectRelease();
  sub_2487B55AC();
  v17 = objc_msgSend(v3, sel_bundlePath);
  sub_2487B5528();

  sub_2487B55AC();
  swift_bridgeObjectRelease();
  result = sub_2487B5B58();
  __break(1u);
  return result;
}

id sub_248774350()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  objc_class *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore____lazy_storage___container;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore____lazy_storage___container);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore____lazy_storage___container);
  }
  else
  {
    v4 = (void *)sub_248774448();
    if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore_configureation) & 1) != 0)
      v5 = (objc_class *)MEMORY[0x24BDBB6D8];
    else
      v5 = (objc_class *)MEMORY[0x24BDBB700];
    v6 = objc_allocWithZone(v5);
    swift_bridgeObjectRetain();
    v7 = (void *)sub_2487B5504();
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v6, sel_initWithName_managedObjectModel_, v7, v4);

    v9 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v8;
    v3 = v8;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

uint64_t sub_248774448()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t result;
  _BYTE v14[16];
  __int128 v15;
  char v16;

  v0 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = &v14[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for TTSVBError(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_2487B50CC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_248773ED0((uint64_t)v9);
  v10 = objc_allocWithZone(MEMORY[0x24BDBB6B0]);
  v11 = (void *)sub_2487B503C();
  v12 = objc_msgSend(v10, sel_initWithContentsOfURL_, v11);

  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  if (v12)
  {
    sub_248779D34(v12);
    return (uint64_t)v12;
  }
  else
  {
    v15 = xmmword_2487BFB90;
    v16 = 3;
    sub_248773ED0((uint64_t)v2);
    swift_storeEnumTagMultiPayload();
    TTSVBError.init(_:_:_:)((uint64_t)&v15, (uint64_t)v2, 0, (uint64_t)v5);
    TTSVBError.description.getter();
    sub_2486EDA68((uint64_t)v5, type metadata accessor for TTSVBError);
    result = sub_2487B5B58();
    __break(1u);
  }
  return result;
}

void static TTSVBDataStore.applyVoicebankingAttributesToMom(_:)(void *a1)
{
  sub_248779D34(a1);
}

uint64_t sub_2487746C4(uint64_t a1, uint64_t a2)
{
  return sub_24877636C(a1, a2, (uint64_t)&unk_2519950A8, (uint64_t)sub_24877A534, (uint64_t)&block_descriptor_6);
}

uint64_t sub_2487746E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v21 = a3;
  v6 = sub_2487B53D8();
  v24 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2487B5408();
  v22 = *(_QWORD *)(v9 - 8);
  v23 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1C8);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2486F4E74(a1, (uint64_t)v15, &qword_25445F1C8);
  v16 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v21;
  *(_QWORD *)(v17 + 24) = a4;
  sub_2486F4F70((uint64_t)v15, v17 + v16, &qword_25445F1C8);
  aBlock[4] = sub_248750EC0;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F1008;
  aBlock[3] = &block_descriptor_37;
  v18 = _Block_copy(aBlock);
  swift_retain();
  sub_2487B53E4();
  v25 = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
  sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
  sub_2487B59FC();
  MEMORY[0x24959A1AC](0, v11, v8, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v23);
  return swift_release();
}

TextToSpeechVoiceBankingSupport::TTSVBDataStore::OperationContext_optional __swiftcall TTSVBDataStore.OperationContext.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (TextToSpeechVoiceBankingSupport::TTSVBDataStore::OperationContext_optional)rawValue;
}

uint64_t TTSVBDataStore.OperationContext.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

_QWORD *sub_248774974@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

void sub_248774994(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

id sub_2487749A0(_BYTE *a1)
{
  id v2;
  id v3;

  if ((*a1 & 1) != 0)
    return sub_2487749F4();
  v2 = sub_248774350();
  v3 = objc_msgSend(v2, sel_viewContext);

  return v3;
}

id sub_2487749F4()
{
  id v0;
  id v1;
  void *v2;
  id v3;

  v0 = sub_248774350();
  v1 = objc_msgSend(v0, sel_newBackgroundContext);

  sub_2487B5AA4();
  sub_2487B55AC();
  sub_2487B5120();
  sub_2487B5714();
  v2 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setName_, v2, 0, 0xE000000000000000);

  v3 = objc_msgSend((id)objc_opt_self(), sel_mergeByPropertyObjectTrumpMergePolicy);
  objc_msgSend(v1, sel_setMergePolicy_, v3);

  return v1;
}

void sub_248774B50(void *a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  id v8;
  _QWORD v9[2];
  _OWORD v10[2];
  _BYTE v11[24];
  uint64_t v12;

  v2 = type metadata accessor for TTSVBDataStoreEvent(0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_object, v3))
  {
    sub_2487B59A8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_2486F4F70((uint64_t)v10, (uint64_t)v11, (uint64_t *)&unk_25777CBD0);
  if (v12)
  {
    sub_24870A34C(0, &qword_25445F348);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v6 = (void *)v9[1];
      sub_24870A34C(0, (unint64_t *)&qword_25777D260);
      v7 = sub_248774350();
      v8 = objc_msgSend(v7, sel_viewContext);

      LOBYTE(v7) = sub_2487B5900();
      if ((v7 & 1) != 0)
      {
        sub_2487B4E8C();
        swift_storeEnumTagMultiPayload();
        swift_retain();
        sub_2487B5360();

        swift_release();
        sub_2486EDA68((uint64_t)v5, type metadata accessor for TTSVBDataStoreEvent);
      }
      else
      {

      }
    }
  }
  else
  {
    sub_2486F5008((uint64_t)v11, (uint64_t *)&unk_25777CBD0);
  }
}

uint64_t TTSVBDataStoreEvent.MergeEvent.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_2487B4EB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t sub_248774DC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = sub_2487B533C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTSVBDataStoreEvent(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v24 - v9;
  v11 = sub_2487B4EB0();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2487B4E8C();
  TTSVBDataStoreEvent.CloudKitSyncEvent.init(_:)((uint64_t)v13, (uint64_t)v10);
  swift_storeEnumTagMultiPayload();
  v14 = sub_2487B0D54();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v14, v1);
  sub_248709554((uint64_t)v10, (uint64_t)v7, type metadata accessor for TTSVBDataStoreEvent);
  v15 = sub_2487B5324();
  v16 = sub_2487B57BC();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v27 = v0;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc();
    v26 = v2;
    v20 = v19;
    v29 = v19;
    *(_DWORD *)v18 = 136315138;
    v25 = v1;
    v21 = TTSVBDataStoreEvent.description.getter();
    v28 = sub_2486EDE5C(v21, v22, &v29);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    sub_2486EDA68((uint64_t)v7, type metadata accessor for TTSVBDataStoreEvent);
    _os_log_impl(&dword_2486E6000, v15, v16, "%s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v20, -1, -1);
    MEMORY[0x24959AF80](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v25);
  }
  else
  {
    sub_2486EDA68((uint64_t)v7, type metadata accessor for TTSVBDataStoreEvent);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  swift_retain();
  sub_2487B5360();
  swift_release();
  return sub_2486EDA68((uint64_t)v10, type metadata accessor for TTSVBDataStoreEvent);
}

uint64_t TTSVBDataStoreEvent.CloudKitSyncEvent.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[40];
  __int128 v15;

  v4 = sub_2487B4EB0();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  result = sub_2487B4EA4();
  if (result)
  {
    v7 = result;
    *(_QWORD *)&v15 = sub_2487B5528();
    *((_QWORD *)&v15 + 1) = v8;
    swift_bridgeObjectRetain();
    sub_2487B5A68();
    if (*(_QWORD *)(v7 + 16) && (v9 = sub_248779390((uint64_t)v14), (v10 & 1) != 0))
    {
      sub_2486F0814(*(_QWORD *)(v7 + 56) + 32 * v9, (uint64_t)&v12);
    }
    else
    {
      v12 = 0u;
      v13 = 0u;
    }
    result = swift_bridgeObjectRelease();
    if (*((_QWORD *)&v13 + 1))
    {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
      sub_2487799E0((uint64_t)v14);
      swift_bridgeObjectRelease();
      sub_24870A40C(&v12, &v15);
      sub_24870A34C(0, &qword_25445F170);
      swift_dynamicCast();
      result = type metadata accessor for TTSVBDataStoreEvent.CloudKitSyncEvent(0);
      *(_QWORD *)(a2 + *(int *)(result + 20)) = v11;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t TTSVBDataStoreEvent.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  Swift::Bool v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[2];

  v1 = v0;
  v2 = type metadata accessor for TTSVBDataStoreEvent.CloudKitSyncEvent(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTSVBDataStoreEvent.MergeEvent(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTSVBDataStoreEvent(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1A8);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_2487B72B0;
  strcpy((char *)(v11 + 32), "DataStoreEvent");
  *(_BYTE *)(v11 + 47) = -18;
  sub_248709554(v1, (uint64_t)v10, type metadata accessor for TTSVBDataStoreEvent);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24870A2C4((uint64_t)v10, (uint64_t)v4, type metadata accessor for TTSVBDataStoreEvent.CloudKitSyncEvent);
    v12 = TTSVBDataStoreEvent.CloudKitSyncEvent.description.getter();
    v14 = v13;
    v16 = *(_QWORD *)(v11 + 16);
    v15 = *(_QWORD *)(v11 + 24);
    if (v16 >= v15 >> 1)
      v11 = (uint64_t)sub_248709428((char *)(v15 > 1), v16 + 1, 1, (char *)v11);
    *(_QWORD *)(v11 + 16) = v16 + 1;
    v17 = v11 + 16 * v16;
    *(_QWORD *)(v17 + 32) = v12;
    *(_QWORD *)(v17 + 40) = v14;
    v18 = type metadata accessor for TTSVBDataStoreEvent.CloudKitSyncEvent;
    v19 = (uint64_t)v4;
  }
  else
  {
    sub_24870A2C4((uint64_t)v10, (uint64_t)v7, type metadata accessor for TTSVBDataStoreEvent.MergeEvent);
    v21 = *(_QWORD *)(v11 + 16);
    v20 = *(_QWORD *)(v11 + 24);
    if (v21 >= v20 >> 1)
      v11 = (uint64_t)sub_248709428((char *)(v20 > 1), v21 + 1, 1, (char *)v11);
    *(_QWORD *)(v11 + 16) = v21 + 1;
    v22 = v11 + 16 * v21;
    strcpy((char *)(v22 + 32), "Merge Objects");
    *(_WORD *)(v22 + 46) = -4864;
    type metadata accessor for TTSVBLocalVoiceMO();
    v23 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entity);
    v24 = TTSVBDataStoreEvent.MergeEvent.anyObjectIsEntity(_:)((NSEntityDescription)v23);

    if (v24)
    {
      v26 = *(_QWORD *)(v11 + 16);
      v25 = *(_QWORD *)(v11 + 24);
      if (v26 >= v25 >> 1)
        v11 = (uint64_t)sub_248709428((char *)(v25 > 1), v26 + 1, 1, (char *)v11);
      *(_QWORD *)(v11 + 16) = v26 + 1;
      v27 = v11 + 16 * v26;
      *(_QWORD *)(v27 + 32) = 0xD000000000000011;
      *(_QWORD *)(v27 + 40) = 0x80000002487C6810;
    }
    v18 = type metadata accessor for TTSVBDataStoreEvent.MergeEvent;
    v19 = (uint64_t)v7;
  }
  sub_2486EDA68(v19, v18);
  v30[1] = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25445F138);
  sub_24871869C((unint64_t *)&qword_25445F140, &qword_25445F138, MEMORY[0x24BEE12B0]);
  v28 = sub_2487B5498();
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t sub_248775620()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_2487B51D4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2487772E4((uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_2487B515C();
    sub_2486F5008((uint64_t)v8, &qword_25445ED38);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  }
  v9 = (void *)objc_opt_self();
  v10 = (void *)sub_2487B5174();
  v11 = objc_msgSend(v9, sel_fetchHistoryAfterDate_, v10);

  v12 = sub_248774350();
  v13 = objc_msgSend(v12, sel_viewContext);

  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v13;
  v14[3] = v11;
  v14[4] = v1;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_24877CE88;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = sub_24874E4D0;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2487490FC;
  aBlock[3] = &block_descriptor_31;
  v16 = _Block_copy(aBlock);
  v17 = v13;
  v18 = v11;
  v19 = v1;
  swift_retain();
  swift_release();
  objc_msgSend(v17, sel_performBlockAndWait_, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_2487758FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  void (*v18)(char *, uint64_t);
  void *v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  void (*v41)(char *, uint64_t);
  id v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  id v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  char v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  NSObject *v55;
  os_log_type_t v56;
  void (*v57)(char *, uint64_t, uint64_t);
  uint8_t *v58;
  uint8_t *v59;
  id v60;
  void *v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  uint64_t v76;
  id v77;
  char v78;
  os_log_type_t v79;
  void (*v80)(char *, uint64_t);
  uint64_t v81;
  id v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;

  v86 = sub_2487B533C();
  v1 = *(_QWORD *)(v86 - 8);
  v2 = MEMORY[0x24BDAC7A8](v86);
  v84 = (char *)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v85 = (char *)&v80 - v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v80 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v80 - v9;
  v87 = MEMORY[0x24BEE4AF8];
  v11 = *(_BYTE *)(v0 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore_configureation);
  v12 = sub_2487B50CC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  if ((v11 & 1) != 0)
  {
    v83 = v0;
    sub_248773CCC(&OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore____lazy_storage___cloudDatastoreURL, (uint64_t)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    v15 = objc_allocWithZone(MEMORY[0x24BDBB740]);
    v16 = (void *)sub_2487B503C();
    v17 = objc_msgSend(v15, sel_initWithURL_, v16);

    v18 = *(void (**)(char *, uint64_t))(v13 + 8);
    v81 = v12;
    v18((char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
    sub_248777178(v17);
    v19 = (void *)sub_2487B5504();
    v82 = v17;
    objc_msgSend(v17, sel_setConfiguration_, v19);

    v20 = (void *)objc_opt_self();
    v21 = objc_msgSend(v20, sel_processInfo);
    v22 = objc_msgSend(v21, sel_environment);

    v23 = sub_2487B5474();
    if (*(_QWORD *)(v23 + 16) && (v24 = sub_248709700(0xD00000000000001ELL, 0x80000002487C6830), (v25 & 1) != 0))
    {
      v26 = (uint64_t *)(*(_QWORD *)(v23 + 56) + 16 * v24);
      v27 = *v26;
      v28 = v26[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v28)
      {
        if (v27 == 49 && v28 == 0xE100000000000000)
        {
          swift_bridgeObjectRelease();
          goto LABEL_22;
        }
        v52 = sub_2487B5CE4();
        swift_bridgeObjectRelease();
        if ((v52 & 1) != 0)
        {
LABEL_22:
          v53 = sub_2487B0D54();
          v54 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
          v54(v8, v53, v86);
          v55 = sub_2487B5324();
          v56 = sub_2487B57E0();
          if (os_log_type_enabled(v55, v56))
          {
            v57 = v54;
            v58 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v58 = 0;
            _os_log_impl(&dword_2486E6000, v55, v56, "TTSVB_EnableCloudSyncMirroring env var was defined. Will attach mirroring delegate. Look out for data corruption!", v58, 2u);
            v59 = v58;
            v54 = v57;
            MEMORY[0x24959AF80](v59, -1, -1);
          }

          v80 = *(void (**)(char *, uint64_t))(v1 + 8);
          v80(v8, v86);
          v60 = objc_allocWithZone(MEMORY[0x24BDBB608]);
          v61 = (void *)sub_2487B5504();
          v62 = objc_msgSend(v60, sel_initWithContainerIdentifier_, v61);

          v63 = (void *)sub_2487B5504();
          objc_msgSend(v62, sel_setApsConnectionMachServiceName_, v63);

          objc_msgSend(v62, sel_setAutomaticallyScheduleImportAndExportOperations_, 1);
          objc_msgSend(v62, sel_setUseDeviceToDeviceEncryption_, 1);
          v64 = objc_msgSend(v20, sel_processInfo);
          v65 = objc_msgSend(v64, sel_environment);

          v66 = sub_2487B5474();
          if (*(_QWORD *)(v66 + 16)
            && (v67 = sub_248709700(0xD000000000000023, 0x80000002487C6850), (v68 & 1) != 0))
          {
            v69 = (uint64_t *)(*(_QWORD *)(v66 + 56) + 16 * v67);
            v71 = *v69;
            v70 = v69[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            if (v70)
            {
              if (v71 == 49 && v70 == 0xE100000000000000)
              {
                swift_bridgeObjectRelease();
LABEL_38:
                v72 = v84;
                v54(v84, v53, v86);
                v73 = sub_2487B5324();
                v79 = sub_2487B57E0();
                if (os_log_type_enabled(v73, v79))
                {
                  v75 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)v75 = 0;
                  _os_log_impl(&dword_2486E6000, v73, v79, "TTSVB_EnableAutomaticAssetDownloads env var is set. Will auto-download voice model files (DEMO MODE ONLY)", v75, 2u);
                  v76 = 1;
                  v85 = v72;
                  goto LABEL_33;
                }
                v76 = 1;
                goto LABEL_35;
              }
              v78 = sub_2487B5CE4();
              swift_bridgeObjectRelease();
              if ((v78 & 1) != 0)
                goto LABEL_38;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          v72 = v85;
          v54(v85, v53, v86);
          v73 = sub_2487B5324();
          v74 = sub_2487B57E0();
          if (os_log_type_enabled(v73, v74))
          {
            v75 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v75 = 0;
            _os_log_impl(&dword_2486E6000, v73, v74, "TTSVB_EnableAutomaticAssetDownloads env var not defined. Will not auto-download voice model files", v75, 2u);
            v76 = 0;
LABEL_33:
            MEMORY[0x24959AF80](v75, -1, -1);
            v43 = v81;
            v72 = v85;
LABEL_36:
            v41 = v18;

            v80(v72, v86);
            objc_msgSend(v62, sel_setAutomaticallyDownloadFileBackedFutures_, v76);
            v77 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBB600]), sel_initWithOptions_, v62);
            v42 = v82;
            objc_msgSend(v82, sel_setMirroringDelegate_, v77);

LABEL_15:
            v35 = v42;
            MEMORY[0x249599FCC]();
            if (*(_QWORD *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_2487B569C();
            sub_2487B56C0();
            v44 = sub_2487B5690();
            MEMORY[0x24BDAC7A8](v44);
            v45 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
            sub_248773CCC(&OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore____lazy_storage___localDatastoreURL, (uint64_t)v45);
            v46 = objc_allocWithZone(MEMORY[0x24BDBB740]);
            v47 = (void *)sub_2487B503C();
            v48 = objc_msgSend(v46, sel_initWithURL_, v47);

            v41(v45, v43);
            sub_248777178(v48);
            v49 = (void *)sub_2487B5504();
            objc_msgSend(v48, sel_setConfiguration_, v49);

            v50 = v48;
            MEMORY[0x249599FCC]();
            if (*(_QWORD *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_2487B569C();
            sub_2487B56C0();
            sub_2487B5690();

            goto LABEL_20;
          }
          v76 = 0;
LABEL_35:
          v43 = v81;
          goto LABEL_36;
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v36 = sub_2487B0D54();
    v37 = v86;
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v10, v36, v86);
    v38 = sub_2487B5324();
    v39 = sub_2487B57E0();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v40 = 0;
      _os_log_impl(&dword_2486E6000, v38, v39, "TTSVB_EnableCloudSyncMirroring env var not defined. will not attach mirroring delegate", v40, 2u);
      MEMORY[0x24959AF80](v40, -1, -1);
    }
    v41 = v18;

    (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v37);
    v43 = v81;
    v42 = v82;
    goto LABEL_15;
  }
  sub_248773CCC(&OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore____lazy_storage___localDatastoreURL, (uint64_t)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = objc_allocWithZone(MEMORY[0x24BDBB740]);
  v30 = (void *)sub_2487B503C();
  v31 = objc_msgSend(v29, sel_initWithURL_, v30);

  (*(void (**)(char *, uint64_t))(v13 + 8))((char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  sub_248777178(v31);
  v32 = (void *)sub_2487B5504();
  objc_msgSend(v31, sel_setConfiguration_, v32);

  objc_msgSend(v31, sel_setType_, *MEMORY[0x24BDBB5D8]);
  v33 = (void *)sub_2487B5504();
  objc_msgSend(v31, sel_setOption_forKey_, v33, *MEMORY[0x24BDBB5D0]);

  sub_24870A34C(0, &qword_25445F178);
  v34 = (void *)sub_2487B58E8();
  objc_msgSend(v31, sel_setOption_forKey_, v34, *MEMORY[0x24BDBB5B8]);

  v35 = v31;
  MEMORY[0x249599FCC]();
  if (*(_QWORD *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_2487B569C();
  sub_2487B56C0();
  sub_2487B5690();
LABEL_20:

  return v87;
}

uint64_t sub_248776350(uint64_t a1, uint64_t a2)
{
  return sub_24877636C(a1, a2, (uint64_t)&unk_2519950F8, (uint64_t)sub_24877BBCC, (uint64_t)&block_descriptor_6_0);
}

uint64_t sub_24877636C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  void *v17;
  char *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v10 = sub_2487B53D8();
  v22 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_2487B5408();
  v13 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)&v5[OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore_queue];
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v5;
  v16[3] = a1;
  v16[4] = a2;
  aBlock[4] = a4;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F1008;
  aBlock[3] = a5;
  v17 = _Block_copy(aBlock);
  v18 = v5;
  swift_retain();
  sub_2487B53E4();
  v23 = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
  sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
  sub_2487B59FC();
  MEMORY[0x24959A1AC](0, v15, v12, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v10);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v21);
  return swift_release();
}

uint64_t sub_248776568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD aBlock[7];

  v5 = sub_2487B53D8();
  v16 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2487B5408();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2487768BC();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = a3;
  aBlock[4] = sub_2487273B4;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2486F1008;
  aBlock[3] = &block_descriptor_22;
  v13 = _Block_copy(aBlock);
  swift_retain();
  sub_2487B53E4();
  v17 = MEMORY[0x24BEE4AF8];
  sub_2486F4CA0((unint64_t *)&unk_25445F670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F680);
  sub_24871869C((unint64_t *)&unk_25445F690, (uint64_t *)&unk_25445F680, MEMORY[0x24BEE12C8]);
  sub_2487B59FC();
  MEMORY[0x24959A1AC](0, v11, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

void sub_2487768BC()
{
  uint64_t v0;
  void (*v1)(char *, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  char v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  unsigned int v26;
  id v27;
  char *v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  void (*v32)(char *, uint64_t);
  uint8_t *v33;
  uint8_t *v34;
  id v35;
  void *v36;
  char *v37;
  id v38;
  id v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  void *v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  id v58[2];

  v58[1] = *(id *)MEMORY[0x24BDAC8D0];
  v56 = sub_2487B533C();
  v2 = *(_QWORD *)(v56 - 8);
  v3 = MEMORY[0x24BDAC7A8](v56);
  v54 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v53 = (char *)&v52 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v52 - v7;
  v9 = sub_2487B542C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (uint64_t *)((char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(void **)(v0 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore_queue);
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE5610], v9);
  v14 = v13;
  v15 = sub_2487B5444();
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v15 & 1) == 0)
    __break(1u);
  v55 = v1;
  v16 = sub_248774350();
  objc_opt_self();
  v17 = swift_dynamicCastObjCClass();
  if (v17)
  {
    v18 = (void *)v17;
    v19 = sub_2487B0D54();
    v20 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
    v20(v8, v19, v56);
    v21 = sub_2487B5324();
    v22 = sub_2487B57BC();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_2486E6000, v21, v22, "Will call initializeCloudKitSchema()", v23, 2u);
      MEMORY[0x24959AF80](v23, -1, -1);
    }

    v24 = *(void (**)(char *, uint64_t))(v2 + 8);
    v25 = v56;
    v24(v8, v56);
    v58[0] = 0;
    v26 = objc_msgSend(v18, sel_initializeCloudKitSchemaWithOptions_error_, 4, v58);
    v27 = v58[0];
    if (v26)
    {
      v28 = v53;
      v20(v53, v19, v25);
      v29 = v27;
      v30 = sub_2487B5324();
      v31 = sub_2487B57BC();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = v24;
        v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v33 = 0;
        _os_log_impl(&dword_2486E6000, v30, v31, "Call to initializeCloudKitSchema() was successful", v33, 2u);
        v34 = v33;
        v24 = v32;
        MEMORY[0x24959AF80](v34, -1, -1);
      }

      v24(v28, v25);
    }
    else
    {
      v55 = v24;
      v35 = v58[0];
      v36 = (void *)sub_2487B4F64();

      swift_willThrow();
      v37 = v54;
      v20(v54, v19, v25);
      v38 = v36;
      v39 = v36;
      v40 = sub_2487B5324();
      v41 = sub_2487B57D4();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc();
        v43 = (void *)swift_slowAlloc();
        v58[0] = v43;
        *(_DWORD *)v42 = 136315138;
        v53 = (char *)(v42 + 4);
        v44 = (void *)sub_2487B4F58();
        v45 = v36;
        v46 = objc_msgSend(v44, sel_debugDescription);

        v47 = sub_2487B5528();
        v49 = v48;

        v57 = sub_2486EDE5C(v47, v49, (uint64_t *)v58);
        sub_2487B593C();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_2486E6000, v40, v41, "Error occurred calling initializeCloudKitSchema(). %s", v42, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24959AF80](v43, -1, -1);
        MEMORY[0x24959AF80](v42, -1, -1);

        v50 = v54;
        v51 = v56;
      }
      else
      {

        v50 = v37;
        v51 = v25;
      }
      v55(v50, v51);
      swift_willThrow();
    }
  }
  else
  {

  }
}

uint64_t sub_248776DA4(void (*a1)(char *), uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  _QWORD v12[2];
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1C8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2486F8E48((uint64_t)&v14);
  v8 = v14;
  v9 = v15;
  v10 = v16;
  v12[0] = v14;
  v12[1] = v15;
  v13 = v16;
  static TTSVBError.map(_:_:)(a3, (uint64_t)v12, (uint64_t)v7);
  sub_2486F507C(v8, v9, v10);
  swift_storeEnumTagMultiPayload();
  a1(v7);
  return sub_2486F5008((uint64_t)v7, &qword_25445F1C8);
}

uint64_t sub_248776E8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v2 = sub_2487B50CC();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_248773CCC(&OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore____lazy_storage___localDatastoreURL, (uint64_t)v4);
  v5 = (void *)sub_248774448();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1B8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2487B7370;
  v13 = sub_2487B5528();
  v14 = v7;
  sub_2487B5A68();
  v8 = MEMORY[0x24BEE1328];
  *(_QWORD *)(inited + 96) = MEMORY[0x24BEE1328];
  *(_BYTE *)(inited + 72) = 1;
  v13 = sub_2487B5528();
  v14 = v9;
  sub_2487B5A68();
  *(_QWORD *)(inited + 168) = v8;
  *(_BYTE *)(inited + 144) = 1;
  v13 = sub_2487B5528();
  v14 = v10;
  sub_2487B5A68();
  *(_QWORD *)(inited + 240) = v8;
  *(_BYTE *)(inited + 216) = 1;
  v11 = sub_248777038(inited);
  return TTSVBDataStore.XPCServiceConfig.init(storeURL:model:serviceName:options:)((uint64_t)v4, v5, 0xD00000000000001CLL, 0x80000002487C6640, v11, a1);
}

unint64_t sub_248777038(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F198);
  v2 = sub_2487B5B88();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2486F4E74(v6, (uint64_t)v15, &qword_25445F188);
    result = sub_248779390((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_24870A40C(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_248777178(void *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  sub_2487B5528();
  v2 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setOption_forKey_, v2, *MEMORY[0x24BDBB4F8]);

  sub_24870A34C(0, &qword_25445F178);
  v3 = (void *)sub_2487B58E8();
  objc_msgSend(a1, sel_setOption_forKey_, v3, *MEMORY[0x24BDBB4C8]);

  v4 = (void *)sub_2487B58E8();
  objc_msgSend(a1, sel_setOption_forKey_, v4, *MEMORY[0x24BDBB520]);

  v5 = (void *)sub_2487B58E8();
  objc_msgSend(a1, sel_setOption_forKey_, v5, *MEMORY[0x24BDBB5C8]);

  v6 = (void *)sub_2487B58E8();
  objc_msgSend(a1, sel_setOption_forKey_, v6, *MEMORY[0x24BDBB488]);

  v7 = (id)sub_2487B58E8();
  objc_msgSend(a1, sel_setOption_forKey_, v7, *MEMORY[0x24BDBB420]);

}

uint64_t sub_2487772E4@<X0>(uint64_t a1@<X8>)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v22;
  __int128 v23;
  __int128 v24;

  v2 = (id)*sub_2487274FC();
  swift_bridgeObjectRetain();
  v3 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_dictionaryForKey_, v3);

  if (!v4)
  {
    v22 = sub_2487B51D4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a1, 1, 1, v22);
  }
  v5 = sub_2487B5474();

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v10 = objc_msgSend(v9, sel_bundleIdentifier);

  if (!v10)
  {
    v11 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
    v10 = objc_msgSend(v11, sel_processName);

  }
  v12 = sub_2487B5528();
  v14 = v13;

  if (*(_QWORD *)(v5 + 16) && (v15 = sub_248709700(v12, v14), (v16 & 1) != 0))
  {
    sub_2486F0814(*(_QWORD *)(v5 + 56) + 32 * v15, (uint64_t)&v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v24 + 1))
    {
      v17 = sub_2487B51D4();
      v18 = swift_dynamicCast();
      v19 = *(_QWORD *)(v17 - 8);
      v20 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56);
      v20(v8, v18 ^ 1u, 1, v17);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v8, 1, v17) != 1)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(a1, v8, v17);
        return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v20)(a1, 0, 1, v17);
      }
      goto LABEL_11;
    }
  }
  else
  {
    v23 = 0u;
    v24 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_2486F5008((uint64_t)&v23, (uint64_t *)&unk_25777CBD0);
  v17 = sub_2487B51D4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v8, 1, 1, v17);
LABEL_11:
  sub_2486F5008((uint64_t)v8, &qword_25445ED38);
  sub_2487B51D4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a1, 1, 1, v17);
}

void sub_24877761C(void *a1, uint64_t a2, char **a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  id v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  char *v43;
  id v44;
  void *v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  char *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  double v60;
  char *v61;
  NSObject *v62;
  os_log_type_t v63;
  uint64_t v64;
  uint8_t *v65;
  void *v66;
  void *v67;
  uint64_t v68;
  unint64_t v69;
  void (*v70)(char *, uint64_t);
  void *v71;
  void *v72;
  void *v73;
  id v74;
  id v75;
  void *v76;
  id v77;
  id v78;
  char *v79;
  id v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char *v85;
  _QWORD *v86;
  char **v87;
  id v88;
  unint64_t v89;
  _OWORD v90[2];
  id v91[6];

  v87 = a3;
  v91[4] = *(id *)MEMORY[0x24BDAC8D0];
  v5 = sub_2487B533C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v79 - v11;
  v91[0] = 0;
  v88 = a1;
  v13 = objc_msgSend(a1, sel_executeRequest_error_, a2, v91, v10);
  v14 = v91[0];
  if (v13)
  {
    v15 = v13;
    objc_opt_self();
    v16 = swift_dynamicCastObjCClass();
    if (!v16)
    {
      v33 = v14;

      return;
    }
    v17 = (void *)v16;
    v18 = v14;
    if (objc_msgSend(v17, sel_result))
    {
      sub_2487B59A8();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v90, 0, sizeof(v90));
    }
    sub_2486F4F70((uint64_t)v90, (uint64_t)v91, (uint64_t *)&unk_25777CBD0);
    if (!v91[3])
    {

      sub_2486F5008((uint64_t)v91, (uint64_t *)&unk_25777CBD0);
      return;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_25777D778);
    if ((swift_dynamicCast() & 1) == 0)
    {

      return;
    }
    v34 = v89;
    if (v89 >> 62)
    {
      swift_bridgeObjectRetain();
      v35 = sub_2487B5B64();
      swift_bridgeObjectRelease();
      if (v35)
        goto LABEL_15;
    }
    else
    {
      v35 = *(_QWORD *)((v89 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v35)
      {
LABEL_15:
        v79 = v12;
        v80 = v15;
        v81 = v8;
        v82 = v5;
        v83 = v6;
        if (v35 < 1)
          __break(1u);
        v36 = 0;
        v84 = v34 & 0xC000000000000001;
        v85 = (char *)v35;
        v86 = (_QWORD *)v34;
        do
        {
          if (v84)
            v37 = (id)MEMORY[0x24959A434](v36, v34);
          else
            v37 = *(id *)(v34 + 8 * (_QWORD)v36 + 32);
          v38 = v37;
          ++v36;
          v39 = sub_2487B4EB0();
          v40 = *(_QWORD *)(v39 - 8);
          v41 = MEMORY[0x24BDAC7A8](v39);
          v43 = (char *)&v79 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
          v44 = objc_msgSend(v38, sel_objectIDNotification, v41);
          sub_2487B4E8C();

          v45 = (void *)sub_2487B4E80();
          objc_msgSend(v88, sel_mergeChangesFromContextDidSaveNotification_, v45);

          v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
          v47 = MEMORY[0x24BDAC7A8](v46);
          v49 = (char *)&v79 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
          v50 = objc_msgSend(v38, sel_timestamp, v47);
          sub_2487B51A4();

          v51 = sub_2487B51D4();
          v52 = *(_QWORD *)(v51 - 8);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
          sub_248777EA8((uint64_t)v49);

          (*(void (**)(char *, uint64_t))(v40 + 8))(v43, v39);
          v34 = (unint64_t)v86;
        }
        while (v85 != v36);
        v53 = swift_bridgeObjectRelease();
        v54 = *(_QWORD *)(v52 + 64);
        MEMORY[0x24BDAC7A8](v53);
        v55 = (char *)&v79 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_2487B518C();
        v56 = sub_2487B0D54();
        v57 = v82;
        v58 = v79;
        v59 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v83 + 16))(v79, v56, v82);
        v87 = &v79;
        v60 = MEMORY[0x24BDAC7A8](v59);
        v61 = v55;
        (*(void (**)(char *, char *, uint64_t, double))(v52 + 16))(v55, v55, v51, v60);
        v62 = sub_2487B5324();
        v63 = sub_2487B57C8();
        if (os_log_type_enabled(v62, v63))
        {
          v64 = swift_slowAlloc();
          v86 = &v79;
          v65 = (uint8_t *)v64;
          v66 = (void *)swift_slowAlloc();
          v85 = v55;
          v67 = v66;
          v91[0] = v66;
          *(_DWORD *)v65 = 136315138;
          v84 = (unint64_t)(v65 + 4);
          v68 = sub_2487B51BC();
          *(_QWORD *)&v90[0] = sub_2486EDE5C(v68, v69, (uint64_t *)v91);
          sub_2487B593C();
          swift_bridgeObjectRelease();
          v70 = *(void (**)(char *, uint64_t))(v52 + 8);
          v70(v61, v51);
          _os_log_impl(&dword_2486E6000, v62, v63, "Deleting all history items older than one year %s", v65, 0xCu);
          swift_arrayDestroy();
          v71 = v67;
          v55 = v85;
          MEMORY[0x24959AF80](v71, -1, -1);
          MEMORY[0x24959AF80](v65, -1, -1);

          (*(void (**)(char *, uint64_t))(v83 + 8))(v58, v82);
        }
        else
        {
          v70 = *(void (**)(char *, uint64_t))(v52 + 8);
          v70(v55, v51);

          (*(void (**)(char *, uint64_t))(v83 + 8))(v58, v57);
        }
        v72 = (void *)objc_opt_self();
        v73 = (void *)sub_2487B5174();
        v74 = objc_msgSend(v72, sel_deleteHistoryBeforeDate_, v73);

        v91[0] = 0;
        v75 = objc_msgSend(v88, sel_executeRequest_error_, v74, v91);
        if (v75)
        {
          v76 = v75;
          v77 = v91[0];

          v70(v55, v51);
          return;
        }
        v78 = v91[0];
        v20 = (void *)sub_2487B4F64();

        swift_willThrow();
        v70(v55, v51);
        v5 = v82;
        v6 = v83;
        v8 = v81;
        goto LABEL_6;
      }
    }

    swift_bridgeObjectRelease();
    return;
  }
  v19 = v91[0];
  v20 = (void *)sub_2487B4F64();

  swift_willThrow();
LABEL_6:
  v21 = sub_2487B0D54();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v21, v5);
  v22 = v20;
  v23 = v20;
  v24 = sub_2487B5324();
  v25 = sub_2487B57D4();
  if (os_log_type_enabled(v24, v25))
  {
    v82 = v5;
    v83 = v6;
    v81 = v8;
    v26 = (uint8_t *)swift_slowAlloc();
    v27 = (void *)swift_slowAlloc();
    v91[0] = v27;
    *(_DWORD *)v26 = 136315138;
    v28 = (void *)sub_2487B4F58();
    v29 = objc_msgSend(v28, sel_debugDescription);

    v30 = sub_2487B5528();
    v32 = v31;

    *(_QWORD *)&v90[0] = sub_2486EDE5C(v30, v32, (uint64_t *)v91);
    sub_2487B593C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2486E6000, v24, v25, "Error occurred processing persistent history: %s", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v27, -1, -1);
    MEMORY[0x24959AF80](v26, -1, -1);

    (*(void (**)(char *, uint64_t))(v83 + 8))(v81, v82);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_248777EA8(uint64_t a1)
{
  uint64_t *v2;
  id v3;
  void *v4;
  id v5;
  unint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *boxed_opaque_existential_0;
  unint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  id v21;
  void *v22;
  void *v23;
  unint64_t v25;
  _OWORD v26[2];
  uint64_t v27[3];
  uint64_t v28;
  unint64_t v29;

  v2 = sub_2487274FC();
  v3 = (id)*v2;
  swift_bridgeObjectRetain();
  v4 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_dictionaryForKey_, v4);

  if (v5)
  {
    v6 = sub_2487B5474();

  }
  else
  {
    v6 = sub_2486F9814(MEMORY[0x24BEE4AF8]);
  }
  v29 = v6;
  v7 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v8 = objc_msgSend(v7, sel_bundleIdentifier);

  if (!v8)
  {
    v9 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
    v8 = objc_msgSend(v9, sel_processName);

  }
  v10 = sub_2487B5528();
  v12 = v11;

  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2486F4E74(a1, (uint64_t)v15, &qword_25445ED38);
  v16 = sub_2487B51D4();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_2486F5008((uint64_t)v15, &qword_25445ED38);
    sub_2487792A0(v10, v12, v27);
    swift_bridgeObjectRelease();
    sub_2486F5008((uint64_t)v27, (uint64_t *)&unk_25777CBD0);
  }
  else
  {
    v28 = v16;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v27);
    (*(void (**)(uint64_t *, char *, uint64_t))(v17 + 32))(boxed_opaque_existential_0, v15, v16);
    sub_24870A40C(v27, v26);
    v19 = v29;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v19;
    v29 = 0x8000000000000000;
    sub_248709BA8(v26, v10, v12, isUniquelyReferenced_nonNull_native);
    v29 = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v21 = (id)*v2;
  v22 = (void *)sub_2487B545C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v23 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_setObject_forKey_, v22, v23);

  return sub_2486F5008(a1, &qword_25445ED38);
}

id TTSVBDataStore.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void TTSVBDataStore.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id TTSVBDataStore.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void TTSVBDataStoreEvent.MergeEvent.inserted.getter()
{
  sub_2487783F0();
}

void TTSVBDataStoreEvent.MergeEvent.updated.getter()
{
  sub_2487783F0();
}

void sub_2487783F0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  _QWORD v4[5];
  __int128 v5;
  __int128 v6;

  v0 = sub_2487B4EA4();
  if (v0)
  {
    v1 = v0;
    sub_2487B5528();
    sub_2487B5A68();
    if (*(_QWORD *)(v1 + 16) && (v2 = sub_248779390((uint64_t)v4), (v3 & 1) != 0))
    {
      sub_2486F0814(*(_QWORD *)(v1 + 56) + 32 * v2, (uint64_t)&v5);
    }
    else
    {
      v5 = 0u;
      v6 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_2487799E0((uint64_t)v4);
    if (*((_QWORD *)&v6 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25777D718);
      if (swift_dynamicCast())
        return;
      goto LABEL_11;
    }
  }
  else
  {
    v5 = 0u;
    v6 = 0u;
  }
  sub_2486F5008((uint64_t)&v5, (uint64_t *)&unk_25777CBD0);
LABEL_11:
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0)
  {
    if (sub_2487B5B64())
      sub_24877B4A8(MEMORY[0x24BEE4AF8]);
  }
}

void TTSVBDataStoreEvent.MergeEvent.deleted.getter()
{
  sub_2487783F0();
}

void TTSVBDataStoreEvent.MergeEvent.refreshed.getter()
{
  sub_2487783F0();
}

void TTSVBDataStoreEvent.MergeEvent.invalidated.getter()
{
  sub_2487783F0();
}

uint64_t TTSVBDataStoreEvent.MergeEvent.all.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25777D720);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2487BFBA0;
  TTSVBDataStoreEvent.MergeEvent.inserted.getter();
  *(_QWORD *)(v0 + 32) = v1;
  TTSVBDataStoreEvent.MergeEvent.updated.getter();
  *(_QWORD *)(v0 + 40) = v2;
  TTSVBDataStoreEvent.MergeEvent.deleted.getter();
  *(_QWORD *)(v0 + 48) = v3;
  TTSVBDataStoreEvent.MergeEvent.refreshed.getter();
  *(_QWORD *)(v0 + 56) = v4;
  TTSVBDataStoreEvent.MergeEvent.invalidated.getter();
  *(_QWORD *)(v0 + 64) = v5;
  return v0;
}

Swift::Bool __swiftcall TTSVBDataStoreEvent.MergeEvent.anyObjectIsEntity(_:)(NSEntityDescription a1)
{
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  char v24;
  char v25;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25777D720);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2487BFBA0;
  TTSVBDataStoreEvent.MergeEvent.inserted.getter();
  *(_QWORD *)(inited + 32) = v2;
  v28 = inited + 32;
  TTSVBDataStoreEvent.MergeEvent.updated.getter();
  *(_QWORD *)(inited + 40) = v3;
  TTSVBDataStoreEvent.MergeEvent.deleted.getter();
  *(_QWORD *)(inited + 48) = v4;
  TTSVBDataStoreEvent.MergeEvent.refreshed.getter();
  *(_QWORD *)(inited + 56) = v5;
  TTSVBDataStoreEvent.MergeEvent.invalidated.getter();
  v7 = 0;
  *(_QWORD *)(inited + 64) = v6;
  v27 = inited;
  while (2)
  {
    if (v7 >= *(_QWORD *)(inited + 16))
      goto LABEL_37;
    v8 = *(_QWORD *)(v28 + 8 * v7);
    if ((v8 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_2487B5A20();
      sub_24870A34C(0, &qword_25777D728);
      sub_24877BBD8();
      LOBYTE(v6) = sub_2487B575C();
      v8 = v32;
      v30 = v33;
      v9 = v34;
      v10 = v35;
      v11 = v36;
    }
    else
    {
      v12 = -1 << *(_BYTE *)(v8 + 32);
      v30 = v8 + 56;
      v9 = ~v12;
      v13 = -v12;
      if (v13 < 64)
        v14 = ~(-1 << v13);
      else
        v14 = -1;
      v11 = v14 & *(_QWORD *)(v8 + 56);
      LOBYTE(v6) = swift_bridgeObjectRetain();
      v10 = 0;
    }
    v29 = v7 + 1;
    v15 = (unint64_t)(v9 + 64) >> 6;
    while (1)
    {
      v16 = v10;
      if (v8 < 0)
      {
        if (!sub_2487B5A44())
          goto LABEL_2;
        sub_24870A34C(0, &qword_25777D728);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v19 = v31;
        swift_unknownObjectRelease();
        if (!v31)
          goto LABEL_2;
        goto LABEL_32;
      }
      if (!v11)
        break;
      v17 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v18 = v17 | (v10 << 6);
LABEL_31:
      v19 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * v18);
      if (!v19)
        goto LABEL_2;
LABEL_32:
      sub_24870A34C(0, (unint64_t *)&qword_25777D260);
      v23 = objc_msgSend(v19, sel_entity);
      v24 = sub_2487B5900();

      if ((v24 & 1) != 0)
      {
        sub_248750938();
        v25 = 1;
        goto LABEL_34;
      }
    }
    v20 = v10 + 1;
    if (!__OFADD__(v10, 1))
    {
      if (v20 >= v15)
        goto LABEL_2;
      v21 = *(_QWORD *)(v30 + 8 * v20);
      ++v10;
      if (!v21)
      {
        v10 = v16 + 2;
        if (v16 + 2 >= v15)
          goto LABEL_2;
        v21 = *(_QWORD *)(v30 + 8 * v10);
        if (!v21)
        {
          v10 = v16 + 3;
          if (v16 + 3 >= v15)
            goto LABEL_2;
          v21 = *(_QWORD *)(v30 + 8 * v10);
          if (!v21)
          {
            v10 = v16 + 4;
            if (v16 + 4 >= v15)
              goto LABEL_2;
            v21 = *(_QWORD *)(v30 + 8 * v10);
            if (!v21)
            {
              v22 = v16 + 5;
              while (v15 != v22)
              {
                v21 = *(_QWORD *)(v30 + 8 * v22++);
                if (v21)
                {
                  v10 = v22 - 1;
                  goto LABEL_30;
                }
              }
LABEL_2:
              inited = v27;
              v7 = v29;
              LOBYTE(v6) = sub_248750938();
              if (v29 != 5)
                continue;
              v25 = 0;
LABEL_34:
              swift_bridgeObjectRelease();
              LOBYTE(v6) = v25;
              return v6;
            }
          }
        }
      }
LABEL_30:
      v11 = (v21 - 1) & v21;
      v18 = __clz(__rbit64(v21)) + (v10 << 6);
      goto LABEL_31;
    }
    break;
  }
  __break(1u);
LABEL_37:
  __break(1u);
  return v6;
}

BOOL TTSVBDataStoreEvent.MergeEvent.voicesDidChange.getter()
{
  id v0;
  Swift::Bool v1;

  type metadata accessor for TTSVBLocalVoiceMO();
  v0 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entity);
  v1 = TTSVBDataStoreEvent.MergeEvent.anyObjectIsEntity(_:)((NSEntityDescription)v0);

  return v1;
}

id TTSVBDataStoreEvent.CloudKitSyncEvent.event.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for TTSVBDataStoreEvent.CloudKitSyncEvent(0) + 20));
}

uint64_t TTSVBDataStoreEvent.CloudKitSyncEvent.isFinished.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = objc_msgSend(*(id *)(v0 + *(int *)(type metadata accessor for TTSVBDataStoreEvent.CloudKitSyncEvent(0) + 20)), sel_endDate);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v1)
  {
    v5 = sub_2487B51D4();
    v6 = *(_QWORD *)(v5 - 8);
    MEMORY[0x24BDAC7A8](v5);
    v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2487B51A4();

    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v4, v8, v5);
    v9 = 1;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
      goto LABEL_6;
  }
  else
  {
    v10 = sub_2487B51D4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
  }
  v9 = 0;
LABEL_6:
  sub_2486F5008((uint64_t)v4, &qword_25445ED38);
  return v9;
}

uint64_t TTSVBDataStoreEvent.CloudKitSyncEvent.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v56;
  uint64_t v57;
  unint64_t v58;
  id v59;
  uint64_t v60;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1A8);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2487B72B0;
  *(_QWORD *)(v1 + 32) = 0xD000000000000013;
  *(_QWORD *)(v1 + 40) = 0x80000002487C68B0;
  v2 = *(int *)(type metadata accessor for TTSVBDataStoreEvent.CloudKitSyncEvent(0) + 20);
  v3 = objc_msgSend(*(id *)(v0 + v2), sel_endDate);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v3)
  {
    v7 = sub_2487B51D4();
    v8 = *(_QWORD *)(v7 - 8);
    MEMORY[0x24BDAC7A8](v7);
    v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2487B51A4();

    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v6, v10, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    LOBYTE(v3) = (*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1;
  }
  else
  {
    v11 = sub_2487B51D4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 1, 1, v11);
  }
  sub_2486F5008((uint64_t)v6, &qword_25445ED38);
  v12 = *(void **)(v0 + v2);
  v13 = objc_msgSend(v12, sel_type);
  if (!v13)
  {
    v21 = *(_QWORD *)(v1 + 16);
    v20 = *(_QWORD *)(v1 + 24);
    v22 = v21 + 1;
    if ((v3 & 1) == 0)
    {
      if (v20 >> 1 <= v21)
        v1 = (uint64_t)sub_248709428((char *)(v20 > 1), v21 + 1, 1, (char *)v1);
      *(_QWORD *)(v1 + 16) = v22;
      v53 = v1 + 16 * v21;
      *(_QWORD *)(v53 + 32) = 0xD00000000000001ALL;
      *(_QWORD *)(v53 + 40) = 0x80000002487C6900;
      goto LABEL_49;
    }
    if (v20 >> 1 <= v21)
      v1 = (uint64_t)sub_248709428((char *)(v20 > 1), v21 + 1, 1, (char *)v1);
    *(_QWORD *)(v1 + 16) = v22;
    v23 = v1 + 16 * v21;
    *(_QWORD *)(v23 + 32) = 0xD00000000000001BLL;
    v18 = v23 + 32;
    v19 = "Finished setting up records";
    goto LABEL_19;
  }
  if (v13 == (id)2)
  {
    v25 = *(_QWORD *)(v1 + 16);
    v24 = *(_QWORD *)(v1 + 24);
    v26 = v25 + 1;
    if ((v3 & 1) != 0)
    {
      if (v24 >> 1 <= v25)
        v1 = (uint64_t)sub_248709428((char *)(v24 > 1), v25 + 1, 1, (char *)v1);
      *(_QWORD *)(v1 + 16) = v26;
      v27 = v1 + 16 * v25;
      *(_QWORD *)(v27 + 32) = 0xD00000000000001ALL;
      v18 = v27 + 32;
      v19 = "Finished uploading records";
      goto LABEL_19;
    }
    if (v24 >> 1 <= v25)
      v1 = (uint64_t)sub_248709428((char *)(v24 > 1), v25 + 1, 1, (char *)v1);
    *(_QWORD *)(v1 + 16) = v26;
    v35 = v1 + 16 * v25;
    v36 = 0xD000000000000019;
    v52 = "Started uploading records";
LABEL_47:
    v37 = (unint64_t)(v52 - 32) | 0x8000000000000000;
LABEL_48:
    *(_QWORD *)(v35 + 32) = v36;
    *(_QWORD *)(v35 + 40) = v37;
    goto LABEL_49;
  }
  if (v13 != (id)1)
  {
    v29 = *(_QWORD *)(v1 + 16);
    v28 = *(_QWORD *)(v1 + 24);
    if (v29 >= v28 >> 1)
      v1 = (uint64_t)sub_248709428((char *)(v28 > 1), v29 + 1, 1, (char *)v1);
    *(_QWORD *)(v1 + 16) = v29 + 1;
    v30 = v1 + 16 * v29;
    strcpy((char *)(v30 + 32), "Unknown event");
    *(_WORD *)(v30 + 46) = -4864;
    if ((v3 & 1) == 0)
      goto LABEL_49;
    goto LABEL_23;
  }
  v15 = *(_QWORD *)(v1 + 16);
  v14 = *(_QWORD *)(v1 + 24);
  v16 = v15 + 1;
  if ((v3 & 1) == 0)
  {
    if (v14 >> 1 <= v15)
      v1 = (uint64_t)sub_248709428((char *)(v14 > 1), v15 + 1, 1, (char *)v1);
    *(_QWORD *)(v1 + 16) = v16;
    v35 = v1 + 16 * v15;
    v36 = 0xD00000000000001BLL;
    v52 = "Started downloading records";
    goto LABEL_47;
  }
  if (v14 >> 1 <= v15)
    v1 = (uint64_t)sub_248709428((char *)(v14 > 1), v15 + 1, 1, (char *)v1);
  *(_QWORD *)(v1 + 16) = v16;
  v17 = v1 + 16 * v15;
  *(_QWORD *)(v17 + 32) = 0xD00000000000001CLL;
  v18 = v17 + 32;
  v19 = "Finished downloading records";
LABEL_19:
  *(_QWORD *)(v18 + 8) = (unint64_t)(v19 - 32) | 0x8000000000000000;
LABEL_23:
  v31 = objc_msgSend(v12, sel_succeeded);
  v33 = *(_QWORD *)(v1 + 16);
  v32 = *(_QWORD *)(v1 + 24);
  v34 = v33 + 1;
  if ((v31 & 1) != 0)
  {
    if (v32 >> 1 <= v33)
      v1 = (uint64_t)sub_248709428((char *)(v32 > 1), v33 + 1, 1, (char *)v1);
    *(_QWORD *)(v1 + 16) = v34;
    v35 = v1 + 16 * v33;
    v36 = 0x73736563637553;
    v37 = 0xE700000000000000;
    goto LABEL_48;
  }
  if (v32 >> 1 <= v33)
    v1 = (uint64_t)sub_248709428((char *)(v32 > 1), v33 + 1, 1, (char *)v1);
  *(_QWORD *)(v1 + 16) = v34;
  v38 = v1 + 16 * v33;
  *(_QWORD *)(v38 + 32) = 0x64656C696146;
  *(_QWORD *)(v38 + 40) = 0xE600000000000000;
  v39 = objc_msgSend(v12, sel_error);
  if (v39)
  {
    v60 = (uint64_t)v39;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25445ECF0);
    sub_24870A34C(0, qword_25445F708);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v40 = v59;
      v41 = objc_msgSend(v59, sel_debugDescription);
      v42 = sub_2487B5528();
      v44 = v43;

      v46 = *(_QWORD *)(v1 + 16);
      v45 = *(_QWORD *)(v1 + 24);
      v47 = v46 + 1;
      if (v46 >= v45 >> 1)
      {
        v58 = v46 + 1;
        v56 = sub_248709428((char *)(v45 > 1), v46 + 1, 1, (char *)v1);
        v47 = v58;
        v1 = (uint64_t)v56;
      }
      *(_QWORD *)(v1 + 16) = v47;
      v48 = v1 + 16 * v46;
      *(_QWORD *)(v48 + 32) = v42;
      *(_QWORD *)(v48 + 40) = v44;
      if (objc_msgSend(v40, sel_code) == (id)134400)
      {
        v50 = *(_QWORD *)(v1 + 16);
        v49 = *(_QWORD *)(v1 + 24);
        if (v50 >= v49 >> 1)
          v1 = (uint64_t)sub_248709428((char *)(v49 > 1), v50 + 1, 1, (char *)v1);
        *(_QWORD *)(v1 + 16) = v50 + 1;
        v51 = v1 + 16 * v50;
        *(_QWORD *)(v51 + 32) = 0xD000000000000024;
        *(_QWORD *)(v51 + 40) = 0x80000002487C68D0;
      }

    }
  }
LABEL_49:
  v60 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25445F138);
  sub_24871869C((unint64_t *)&qword_25445F140, &qword_25445F138, MEMORY[0x24BEE12B0]);
  v54 = sub_2487B5498();
  swift_bridgeObjectRelease();
  return v54;
}

BOOL TTSVBDataStoreEvent.voicesDidChange.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  Swift::Bool v8;
  id v9;
  uint64_t v11;

  v1 = v0;
  v2 = type metadata accessor for TTSVBDataStoreEvent(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTSVBDataStoreEvent.MergeEvent(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_248709554(v1, (uint64_t)v4, type metadata accessor for TTSVBDataStoreEvent);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2486EDA68((uint64_t)v4, type metadata accessor for TTSVBDataStoreEvent);
    return 0;
  }
  else
  {
    sub_24870A2C4((uint64_t)v4, (uint64_t)v7, type metadata accessor for TTSVBDataStoreEvent.MergeEvent);
    type metadata accessor for TTSVBLocalVoiceMO();
    v9 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entity);
    v8 = TTSVBDataStoreEvent.MergeEvent.anyObjectIsEntity(_:)((NSEntityDescription)v9);

    sub_2486EDA68((uint64_t)v7, type metadata accessor for TTSVBDataStoreEvent.MergeEvent);
  }
  return v8;
}

double sub_2487792A0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_248709700(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_248709D40();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_24870A40C((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_2487796D4(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

unint64_t sub_248779390(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2487B5A50();
  return sub_248779A8C(a1, v2);
}

uint64_t sub_2487793C0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F198);
  v6 = sub_2487B5B7C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_34;
      v23 = *(_QWORD *)(v36 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v23 = *(_QWORD *)(v36 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v14 = v24;
      }
    }
LABEL_21:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v40 = *(_QWORD *)(v25 + 32);
      v38 = v26;
      v39 = v27;
      sub_24870A40C((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_24877CEE0(v25, (uint64_t)&v38);
      sub_2486F0814(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    result = sub_2487B5A50();
    v28 = -1 << *(_BYTE *)(v7 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v7 + 48) + 40 * v15;
    v17 = v38;
    v18 = v39;
    *(_QWORD *)(v16 + 32) = v40;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    result = (uint64_t)sub_24870A40C(v37, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

unint64_t sub_2487796D4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_2487B5A08();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_2487B5D5C();
        swift_bridgeObjectRetain();
        sub_2487B557C();
        v10 = sub_2487B5D98();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_OWORD *sub_2487798A8(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_248779390(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
        return sub_24870A40C(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_248779B50();
      goto LABEL_7;
    }
    sub_2487793C0(v13, a3 & 1);
    v19 = sub_248779390(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_24877CEE0(a2, (uint64_t)v21);
      return sub_248779A14(v10, (uint64_t)v21, a1, v16);
    }
  }
  result = (_OWORD *)sub_2487B5D14();
  __break(1u);
  return result;
}

uint64_t sub_2487799E0(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

_OWORD *sub_248779A14(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  result = sub_24870A40C(a3, (_OWORD *)(a4[7] + 32 * a1));
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

unint64_t sub_248779A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_24877CEE0(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x24959A3C8](v9, a1);
      sub_2487799E0((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

void *sub_248779B50()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25445F198);
  v2 = *v0;
  v3 = sub_2487B5B70();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_24877CEE0(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_2486F0814(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    result = sub_24870A40C(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_248779D34(void *a1)
{
  id v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  id v27;
  void *v28;
  void *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  void *v36;

  v2 = objc_msgSend(a1, sel_entitiesByName);
  sub_24870A34C(0, &qword_25445F158);
  v3 = sub_2487B5474();

  if (!*(_QWORD *)(v3 + 16) || (v4 = sub_248709700(0xD000000000000012, 0x80000002487C65C0), (v5 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    sub_2487B5AA4();
    swift_bridgeObjectRelease();
    type metadata accessor for TTSVBError(0);
    sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
    swift_allocError();
    TTSVBError.init(_:_:_:)(0xD000000000000019, 0x80000002487C6C00, 0xD000000000000030, 0x80000002487C6C20, 0, v30);
    swift_willThrow();
    return;
  }
  v6 = *(id *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v6, sel_attributesByName);
  sub_24870A34C(0, &qword_25445F160);
  v8 = sub_2487B5474();

  if (qword_25445F7D0 == -1)
  {
    if (!*(_QWORD *)(v8 + 16))
    {
LABEL_17:
      swift_bridgeObjectRelease();
      sub_2487B5AA4();
      swift_bridgeObjectRelease();
      v31 = objc_msgSend(v6, sel_description);
      sub_2487B5528();

      sub_2487B55AC();
      swift_bridgeObjectRelease();
      type metadata accessor for TTSVBError(0);
      sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
      swift_allocError();
      TTSVBError.init(_:_:_:)(0xD000000000000019, 0x80000002487C6C00, 0xD000000000000038, 0x80000002487C6C60, 0, v32);
      swift_willThrow();

      return;
    }
  }
  else
  {
    swift_once();
    if (!*(_QWORD *)(v8 + 16))
      goto LABEL_17;
  }
  v9 = qword_25445F7C0;
  v10 = qword_25445F7B8;
  swift_bridgeObjectRetain();
  v11 = sub_248709700(v10, v9);
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  v36 = v6;
  v13 = *(id *)(*(_QWORD *)(v8 + 56) + 8 * v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((objc_msgSend(v13, sel_respondsToSelector_, sub_2487B527C()) & 1) != 0)
  {
    v14 = (void *)sub_2487B56D8();
    v15 = (void *)sub_2487B5504();
    objc_msgSend(v13, sel_setValue_forKey_, v14, v15);

    v16 = objc_msgSend(a1, sel_entitiesByName);
    v17 = sub_2487B5474();

    if (!*(_QWORD *)(v17 + 16) || (v18 = sub_248709700(0xD000000000000015, 0x80000002487C55B0), (v19 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      sub_2487B5AA4();
      swift_bridgeObjectRelease();
      type metadata accessor for TTSVBError(0);
      sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
      swift_allocError();
      TTSVBError.init(_:_:_:)(0xD000000000000019, 0x80000002487C6C00, 0xD000000000000033, 0x80000002487C6CA0, 0, v33);
      swift_willThrow();

      return;
    }
    v20 = *(id *)(*(_QWORD *)(v17 + 56) + 8 * v18);
    swift_bridgeObjectRelease();
    v21 = objc_msgSend(v20, sel_attributesByName);
    v22 = sub_2487B5474();

    if (qword_25445F7A8 != -1)
      swift_once();
    if (*(_QWORD *)(v22 + 16))
    {
      v23 = qword_25445F798;
      v24 = qword_25445F790;
      swift_bridgeObjectRetain();
      v25 = sub_248709700(v24, v23);
      if ((v26 & 1) != 0)
      {
        v27 = *(id *)(*(_QWORD *)(v22 + 56) + 8 * v25);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((objc_msgSend(v27, sel_respondsToSelector_, sub_2487B527C()) & 1) != 0)
        {
          v28 = (void *)sub_2487B56D8();
          v29 = (void *)sub_2487B5504();
          objc_msgSend(v27, sel_setValue_forKey_, v28, v29);

          return;
        }
        goto LABEL_23;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_2487B5AA4();
    swift_bridgeObjectRelease();
    v34 = objc_msgSend(v20, sel_description);
    sub_2487B5528();

    sub_2487B55AC();
    swift_bridgeObjectRelease();
    type metadata accessor for TTSVBError(0);
    sub_2486F4CA0((unint64_t *)&qword_25445ED48, type metadata accessor for TTSVBError, (uint64_t)&protocol conformance descriptor for TTSVBError);
    swift_allocError();
    TTSVBError.init(_:_:_:)(0xD000000000000019, 0x80000002487C6C00, 0xD000000000000037, 0x80000002487C6CE0, 0, v35);
    swift_willThrow();

    return;
  }
LABEL_23:
  sub_2487B5B58();
  __break(1u);
}

void sub_24877A534()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v1 = (void *)v0[2];
  v2 = v0[3];
  v3 = v0[4];
  v4 = v1;
  swift_retain();
  sub_24877A5A4((uint64_t)v4, v4, v2, v3);
  swift_release();

}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

void sub_24877A5A4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  BOOL v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint8_t *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  os_log_t v58;
  uint64_t v59;
  id v60;
  void *v61;
  id v62;
  id v63;
  id v64;
  id v65;
  void *v66;
  id v67;
  id v68;
  id v69;
  int v70;
  char v71;
  id v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  id v86;
  void *v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  id v92;
  id v93;
  uint64_t v94;
  id v95;
  id v96;
  uint64_t v97;
  char v98;
  void *v99;
  id v100;
  id v101;
  id v102;
  uint64_t v103;
  uint8_t *v104;
  os_log_t v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  __int128 v124;
  char v125;
  uint64_t v126;

  v122 = a4;
  v126 = *MEMORY[0x24BDAC8D0];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445F1C8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v121 = (uint64_t)&v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v111 = (uint64_t)&v103 - v10;
  v112 = type metadata accessor for TTSVBError.Reason(0);
  MEMORY[0x24BDAC7A8](v112);
  v113 = (uint64_t)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED50);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v115 = (uint64_t)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v114 = (uint64_t)&v103 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v103 - v17;
  v19 = type metadata accessor for TTSVBError(0);
  v119 = *(_QWORD *)(v19 - 8);
  v120 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v103 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = sub_2487B533C();
  v118 = *(_QWORD *)(v116 - 8);
  MEMORY[0x24BDAC7A8](v116);
  v117 = (char *)&v103 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_2487B542C();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (uint64_t *)((char *)&v103 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = *(void **)(a1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore_queue);
  *v26 = v27;
  (*(void (**)(_QWORD *, _QWORD, unint64_t))(v24 + 104))(v26, *MEMORY[0x24BEE5610], v23);
  v28 = v27;
  LOBYTE(v27) = sub_2487B5444();
  (*(void (**)(_QWORD *, unint64_t))(v24 + 8))(v26, v23);
  if ((v27 & 1) == 0)
  {
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v35 = sub_2487B5B64();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v29 = a1;
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore_queue_shouldAttemptLoad) != 1)
  {
    v47 = a1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore_queue_loadError;
    swift_beginAccess();
    sub_2486F4E74(v47, (uint64_t)v18, &qword_25445ED50);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v119 + 48))(v18, 1, v120) != 1)
    {
      sub_24870A2C4((uint64_t)v18, (uint64_t)v21, type metadata accessor for TTSVBError);
      v52 = v121;
      sub_248709554((uint64_t)v21, v121, type metadata accessor for TTSVBError);
      swift_storeEnumTagMultiPayload();
      sub_2487746E0(v52, (uint64_t)a2, a3, v122);
      sub_2486F5008(v52, &qword_25445F1C8);
      sub_2486EDA68((uint64_t)v21, type metadata accessor for TTSVBError);
      return;
    }
    sub_2486F5008((uint64_t)v18, &qword_25445ED50);
    v48 = v121;
    swift_storeEnumTagMultiPayload();
    v49 = v48;
    v50 = (uint64_t)a2;
    v51 = a3;
    goto LABEL_34;
  }
  *(_BYTE *)(a1 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore_queue_shouldAttemptLoad) = 0;
  v23 = sub_2487758FC();
  v30 = sub_2487B0D54();
  v32 = v117;
  v31 = v118;
  a1 = v116;
  (*(void (**)(char *, uint64_t, uint64_t))(v118 + 16))(v117, v30, v116);
  swift_bridgeObjectRetain_n();
  v24 = sub_2487B5324();
  v107 = sub_2487B57BC();
  v33 = os_log_type_enabled((os_log_t)v24, (os_log_type_t)v107);
  v110 = a3;
  if (!v33)
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, a1);
    goto LABEL_22;
  }
  v106 = v29;
  v34 = (uint8_t *)swift_slowAlloc();
  v103 = swift_slowAlloc();
  *(_QWORD *)&v124 = v103;
  v104 = v34;
  *(_DWORD *)v34 = 136315138;
  if (v23 >> 62)
    goto LABEL_37;
  v35 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_6:
  v36 = MEMORY[0x24BEE4AF8];
  v105 = (os_log_t)v24;
  if (v35)
  {
    v108 = v7;
    v109 = a2;
    v123 = MEMORY[0x24BEE4AF8];
    sub_24872A4C0(0, v35 & ~(v35 >> 63), 0);
    if (v35 < 0)
      __break(1u);
    v37 = 0;
    v36 = v123;
    do
    {
      if ((v23 & 0xC000000000000001) != 0)
        v38 = (id)MEMORY[0x24959A434](v37, v23);
      else
        v38 = *(id *)(v23 + 8 * v37 + 32);
      v39 = v38;
      v40 = objc_msgSend(v39, sel_description);
      v41 = sub_2487B5528();
      v43 = v42;

      v123 = v36;
      v45 = *(_QWORD *)(v36 + 16);
      v44 = *(_QWORD *)(v36 + 24);
      if (v45 >= v44 >> 1)
      {
        sub_24872A4C0((char *)(v44 > 1), v45 + 1, 1);
        v36 = v123;
      }
      ++v37;
      *(_QWORD *)(v36 + 16) = v45 + 1;
      v46 = v36 + 16 * v45;
      *(_QWORD *)(v46 + 32) = v41;
      *(_QWORD *)(v46 + 40) = v43;
    }
    while (v35 != v37);
    v53 = v109;
    v7 = v108;
    a1 = v116;
  }
  else
  {
    v53 = a2;
  }
  v123 = v36;
  v54 = v104;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25445F138);
  sub_24871869C((unint64_t *)&qword_25445F140, &qword_25445F138, MEMORY[0x24BEE12B0]);
  v55 = sub_2487B5498();
  v57 = v56;
  swift_bridgeObjectRelease();
  v123 = sub_2486EDE5C(v55, v57, (uint64_t *)&v124);
  sub_2487B593C();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  v58 = v105;
  _os_log_impl(&dword_2486E6000, v105, (os_log_type_t)v107, "Will create and load TTSVoiceBanking persistent stores: %s", v54, 0xCu);
  v59 = v103;
  swift_arrayDestroy();
  MEMORY[0x24959AF80](v59, -1, -1);
  MEMORY[0x24959AF80](v54, -1, -1);

  (*(void (**)(char *, uint64_t))(v118 + 8))(v117, a1);
  v29 = v106;
  a2 = v53;
  a3 = v110;
LABEL_22:
  v60 = sub_248774350();
  sub_24870A34C(0, &qword_25445F168);
  v61 = (void *)sub_2487B566C();
  swift_bridgeObjectRelease();
  objc_msgSend(v60, sel_setPersistentStoreDescriptions_, v61);

  v62 = sub_248774350();
  *(_QWORD *)&v124 = 0;
  LODWORD(v61) = objc_msgSend(v62, sel_load_, &v124);

  if ((_DWORD)v61)
  {
    v108 = v7;
    v109 = a2;
    v63 = (id)v124;
    v64 = sub_248774350();
    v65 = objc_msgSend(v64, sel_viewContext);

    v66 = (void *)sub_2487B5504();
    objc_msgSend(v65, sel_setName_, v66);

    v67 = sub_248774350();
    v68 = objc_msgSend(v67, sel_viewContext);

    v69 = objc_msgSend((id)objc_opt_self(), sel_mergeByPropertyObjectTrumpMergePolicy);
    objc_msgSend(v68, sel_setMergePolicy_, v69);

    v70 = *(unsigned __int8 *)(v29 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore_configureation);
    if ((v70 & 1) != 0)
    {
      v71 = sub_2487B5CE4();
      swift_bridgeObjectRelease();
      if ((v71 & 1) == 0)
        goto LABEL_30;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v85 = sub_248774350();
    v86 = objc_msgSend(v85, sel_viewContext);

    objc_msgSend(v86, sel_setAutomaticallyMergesChangesFromParent_, 1);
    v87 = (void *)objc_opt_self();
    v88 = objc_msgSend(v87, sel_defaultCenter);
    v89 = v29;
    v90 = *MEMORY[0x24BDBB450];
    v91 = sub_248774350();
    v92 = objc_msgSend(v91, sel_viewContext);

    objc_msgSend(v88, sel_addObserver_selector_name_object_, v29, sel_handleManagedObjectContextDidMergeChangesObjectIDs_, v90, v92);
    v93 = objc_msgSend(v87, sel_defaultCenter);
    v94 = *MEMORY[0x24BDBB510];
    v95 = sub_248774350();
    v96 = objc_msgSend(v95, sel_persistentStoreCoordinator);

    v97 = v94;
    v29 = v89;
    objc_msgSend(v93, sel_addObserver_selector_name_object_, v89, sel_handlePersistentStoreRemoteChange_, v97, v96);

    if (!v70)
    {
      v98 = sub_2487B5CE4();
      swift_bridgeObjectRelease();
      if ((v98 & 1) == 0)
      {
LABEL_33:
        v48 = v121;
        swift_storeEnumTagMultiPayload();
        v49 = v48;
        v50 = (uint64_t)v109;
        v51 = v110;
LABEL_34:
        sub_2487746E0(v49, v50, v51, v122);
        v84 = v48;
        goto LABEL_35;
      }
LABEL_32:
      v99 = (void *)objc_opt_self();
      v100 = objc_msgSend(v99, sel_defaultCenter);
      objc_msgSend(v100, sel_addObserver_selector_name_object_, v29, sel_handlePersistentCloudKitContainerEventChanged_, *MEMORY[0x24BDBB498], 0);

      v101 = objc_msgSend(v99, sel_defaultCenter);
      objc_msgSend(v101, sel_addObserver_selector_name_object_, v29, sel_handleWillResetCloudSync_, *MEMORY[0x24BDBB3F0], 0);

      v102 = objc_msgSend(v99, sel_defaultCenter);
      objc_msgSend(v102, sel_addObserver_selector_name_object_, v29, sel_handleDidResetCloudSync_, *MEMORY[0x24BDBB3E0], 0);

      goto LABEL_33;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  v72 = (id)v124;
  v73 = (void *)sub_2487B4F64();

  swift_willThrow();
  v124 = xmmword_2487BFB90;
  v125 = 3;
  v74 = v113;
  sub_248773CCC(&OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore____lazy_storage___localDatastoreURL, v113);
  swift_storeEnumTagMultiPayload();
  v75 = sub_2487B4F58();
  v76 = v114;
  TTSVBError.init(_:_:_:)((uint64_t)&v124, v74, v75, v114);
  v78 = v119;
  v77 = v120;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v119 + 56))(v76, 0, 1, v120);
  v79 = v29 + OBJC_IVAR____TtC31TextToSpeechVoiceBankingSupport14TTSVBDataStore_queue_loadError;
  swift_beginAccess();
  sub_24877CF1C(v76, v79, &qword_25445ED50);
  swift_endAccess();
  v80 = v79;
  v81 = v115;
  sub_2486F4E74(v80, v115, &qword_25445ED50);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v81, 1, v77) != 1)
  {
    v82 = v81;
    v83 = v111;
    sub_24870A2C4(v82, v111, type metadata accessor for TTSVBError);
    swift_storeEnumTagMultiPayload();
    sub_2487746E0(v83, (uint64_t)a2, a3, v122);

    v84 = v83;
LABEL_35:
    sub_2486F5008(v84, &qword_25445F1C8);
    return;
  }
  swift_release();

  __break(1u);
}

uint64_t sub_24877B27C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD v18[3];
  _BYTE v19[40];
  __int128 v20;
  __int128 v21;

  v2 = sub_2487B533C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, sel_userInfo, v4);
  if (!v7)
  {
    v20 = 0u;
    v21 = 0u;
    return sub_2486F5008((uint64_t)&v20, (uint64_t *)&unk_25777CBD0);
  }
  v8 = v7;
  v9 = sub_2487B5474();

  v18[1] = sub_2487B5528();
  v18[2] = v10;
  sub_2487B5A68();
  if (*(_QWORD *)(v9 + 16) && (v11 = sub_248779390((uint64_t)v19), (v12 & 1) != 0))
  {
    sub_2486F0814(*(_QWORD *)(v9 + 56) + 32 * v11, (uint64_t)&v20);
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_2487799E0((uint64_t)v19);
  if (!*((_QWORD *)&v21 + 1))
    return sub_2486F5008((uint64_t)&v20, (uint64_t *)&unk_25777CBD0);
  sub_2486F5008((uint64_t)&v20, (uint64_t *)&unk_25777CBD0);
  v13 = sub_2487B0D54();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v13, v2);
  v14 = sub_2487B5324();
  v15 = sub_2487B57BC();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_2486E6000, v14, v15, "*** Got note *** should invalidate all objects", v16, 2u);
    MEMORY[0x24959AF80](v16, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t type metadata accessor for TTSVBDataStoreEvent(uint64_t a1)
{
  return sub_2487095AC(a1, (uint64_t *)&unk_25445F8E0);
}

uint64_t type metadata accessor for TTSVBDataStoreEvent.CloudKitSyncEvent(uint64_t a1)
{
  return sub_2487095AC(a1, (uint64_t *)&unk_25445F8C0);
}

uint64_t type metadata accessor for TTSVBDataStoreEvent.MergeEvent(uint64_t a1)
{
  return sub_2487095AC(a1, (uint64_t *)&unk_25445F8D0);
}

void sub_24877B4A8(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = a1;
  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_2487B5B64();
    swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_25777D770);
      v3 = sub_2487B5A98();
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_2487B5B64();
      swift_bridgeObjectRelease();
      if (!v4)
        return;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x24BEE4B08];
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return;
LABEL_9:
  v6 = v3 + 56;
  v42 = v4;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v7 = 0;
    v40 = v1;
    while (1)
    {
      while (1)
      {
        v8 = MEMORY[0x24959A434](v7, v1);
        v9 = __OFADD__(v7++, 1);
        if (v9)
        {
          __break(1u);
          goto LABEL_36;
        }
        v10 = v8;
        v11 = sub_2487B58F4();
        v12 = -1 << *(_BYTE *)(v3 + 32);
        v13 = v11 & ~v12;
        v14 = v13 >> 6;
        v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
        v16 = 1 << v13;
        if (((1 << v13) & v15) != 0)
          break;
LABEL_20:
        *(_QWORD *)(v6 + 8 * v14) = v16 | v15;
        *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13) = v10;
        v22 = *(_QWORD *)(v3 + 16);
        v9 = __OFADD__(v22, 1);
        v23 = v22 + 1;
        if (v9)
          goto LABEL_37;
        *(_QWORD *)(v3 + 16) = v23;
        if (v7 == v4)
          return;
      }
      sub_24870A34C(0, &qword_25777D728);
      v17 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
      v18 = sub_2487B5900();

      if ((v18 & 1) == 0)
      {
        v19 = ~v12;
        while (1)
        {
          v13 = (v13 + 1) & v19;
          v14 = v13 >> 6;
          v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
          v16 = 1 << v13;
          if ((v15 & (1 << v13)) == 0)
            break;
          v20 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
          v21 = sub_2487B5900();

          if ((v21 & 1) != 0)
            goto LABEL_11;
        }
        v1 = v40;
        v4 = v42;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      v1 = v40;
      v4 = v42;
      if (v7 == v42)
        return;
    }
  }
  v24 = 0;
  v39 = v1 + 32;
  v41 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v24 != v41)
  {
    v25 = *(id *)(v39 + 8 * v24);
    v26 = sub_2487B58F4();
    v27 = -1 << *(_BYTE *)(v3 + 32);
    v28 = v26 & ~v27;
    v29 = v28 >> 6;
    v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
    v31 = 1 << v28;
    if (((1 << v28) & v30) != 0)
    {
      sub_24870A34C(0, &qword_25777D728);
      v32 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
      v33 = sub_2487B5900();

      if ((v33 & 1) != 0)
      {
LABEL_24:

        goto LABEL_25;
      }
      v34 = ~v27;
      while (1)
      {
        v28 = (v28 + 1) & v34;
        v29 = v28 >> 6;
        v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
        v31 = 1 << v28;
        if ((v30 & (1 << v28)) == 0)
          break;
        v35 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
        v36 = sub_2487B5900();

        if ((v36 & 1) != 0)
          goto LABEL_24;
      }
    }
    *(_QWORD *)(v6 + 8 * v29) = v31 | v30;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v28) = v25;
    v37 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v37, 1);
    v38 = v37 + 1;
    if (v9)
      goto LABEL_38;
    *(_QWORD *)(v3 + 16) = v38;
LABEL_25:
    if (++v24 == v42)
      return;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_24877B804(void *a1, const char *a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  id v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  void *v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  const char *v26;
  _QWORD v28[3];
  id v29[5];
  __int128 v30;
  __int128 v31;

  v4 = sub_2487B533C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(a1, sel_userInfo, v6);
  if (!v9)
  {
    v30 = 0u;
    v31 = 0u;
LABEL_10:
    sub_2486F5008((uint64_t)&v30, (uint64_t *)&unk_25777CBD0);
    goto LABEL_11;
  }
  v10 = v9;
  v11 = sub_2487B5474();

  v28[1] = sub_2487B5528();
  v28[2] = v12;
  sub_2487B5A68();
  if (*(_QWORD *)(v11 + 16) && (v13 = sub_248779390((uint64_t)v29), (v14 & 1) != 0))
  {
    sub_2486F0814(*(_QWORD *)(v11 + 56) + 32 * v13, (uint64_t)&v30);
  }
  else
  {
    v30 = 0u;
    v31 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_2487799E0((uint64_t)v29);
  if (!*((_QWORD *)&v31 + 1))
    goto LABEL_10;
  sub_24870A34C(0, &qword_25445F178);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v15 = v29[0];
    v16 = (char *)objc_msgSend(v29[0], sel_unsignedIntegerValue);

    goto LABEL_12;
  }
LABEL_11:
  v16 = 0;
LABEL_12:
  v17 = sub_2487B0D54();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v17, v4);
  v18 = sub_2487B5324();
  v19 = sub_2487B57E0();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = (void *)swift_slowAlloc();
    v29[0] = v21;
    *(_DWORD *)v20 = 136315138;
    v22 = v16 - 1;
    v23 = 0xD000000000000010;
    v24 = 0x80000002487C6BE0;
    switch((unint64_t)v22)
    {
      case 0uLL:
        v24 = 0xED00006E69676F4CLL;
        goto LABEL_19;
      case 1uLL:
        v25 = 0x74756F676F4CLL;
        goto LABEL_18;
      case 2uLL:
        v25 = 0x65676E616843;
LABEL_18:
        v24 = v25 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
LABEL_19:
        v23 = 0x20746E756F636341;
        break;
      case 3uLL:
        break;
      case 4uLL:
        v24 = 0xEC00000064657465;
        v23 = 0x6C654420656E6F5ALL;
        break;
      case 5uLL:
        v23 = 0xD000000000000015;
        v26 = "History Token Expired";
        goto LABEL_23;
      case 6uLL:
        v23 = 0xD00000000000001BLL;
        v26 = "Server Change Token Expired";
LABEL_23:
        v24 = (unint64_t)(v26 - 32) | 0x8000000000000000;
        break;
      default:
        v24 = 0xEF746C7561666544;
        v23 = 0x206E776F6E6B6E55;
        break;
    }
    *(_QWORD *)&v30 = sub_2486EDE5C(v23, v24, (uint64_t *)v29);
    sub_2487B593C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2486E6000, v18, v19, a2, v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v21, -1, -1);
    MEMORY[0x24959AF80](v20, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_24877BBCC()
{
  uint64_t *v0;

  return sub_248776568(v0[2], v0[3], v0[4]);
}

unint64_t sub_24877BBD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25777D730;
  if (!qword_25777D730)
  {
    v1 = sub_24870A34C(255, &qword_25777D728);
    result = MEMORY[0x24959AEB4](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_25777D730);
  }
  return result;
}

unint64_t sub_24877BC34()
{
  unint64_t result;

  result = qword_25777D738;
  if (!qword_25777D738)
  {
    result = MEMORY[0x24959AEB4](&protocol conformance descriptor for TTSVBDataStore.Configuration, &type metadata for TTSVBDataStore.Configuration);
    atomic_store(result, (unint64_t *)&qword_25777D738);
  }
  return result;
}

unint64_t sub_24877BC7C()
{
  unint64_t result;

  result = qword_25777D740;
  if (!qword_25777D740)
  {
    result = MEMORY[0x24959AEB4](&protocol conformance descriptor for TTSVBDataStore.OperationContext, &type metadata for TTSVBDataStore.OperationContext);
    atomic_store(result, (unint64_t *)&qword_25777D740);
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSVBDataStoreEntity()
{
  return &type metadata for TTSVBDataStoreEntity;
}

ValueMetadata *type metadata accessor for TTSVBDataStoreAttribute()
{
  return &type metadata for TTSVBDataStoreAttribute;
}

uint64_t sub_24877BCE0()
{
  return type metadata accessor for TTSVBDataStore(0);
}

uint64_t type metadata accessor for TTSVBDataStore(uint64_t a1)
{
  return sub_2487095AC(a1, qword_25445F880);
}

void sub_24877BCFC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_2487B50CC();
  if (v0 <= 0x3F)
  {
    sub_24877BE14(319, (unint64_t *)&qword_25445ED30, (void (*)(uint64_t))MEMORY[0x24BDCDAB8]);
    if (v1 <= 0x3F)
    {
      sub_24877BE14(319, qword_25445ED58, (void (*)(uint64_t))type metadata accessor for TTSVBError);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for TTSVBDataStore()
{
  return swift_lookUpClassMethod();
}

void sub_24877BE14(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_2487B5924();
    if (!v5)
      atomic_store(v4, a2);
  }
}

ValueMetadata *type metadata accessor for TTSVBDataStore.Configuration()
{
  return &type metadata for TTSVBDataStore.Configuration;
}

uint64_t *initializeBufferWithCopyOfBuffer for TTSVBDataStore.XPCServiceConfig(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2487B50CC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    v11 = a3[7];
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for TTSVBDataStore.XPCServiceConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2487B50CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TTSVBDataStore.XPCServiceConfig(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;

  v6 = sub_2487B50CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v10 = a3[7];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  v14 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TTSVBDataStore.XPCServiceConfig(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  v6 = sub_2487B50CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = a3[7];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for TTSVBDataStore.XPCServiceConfig(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_2487B50CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for TTSVBDataStore.XPCServiceConfig(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_2487B50CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  v9 = a3[7];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (uint64_t *)(a2 + v9);
  v13 = *v11;
  v12 = v11[1];
  *v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTSVBDataStore.XPCServiceConfig()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24877C1D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BDCDAB8]);
}

uint64_t storeEnumTagSinglePayload for TTSVBDataStore.XPCServiceConfig()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24877C1F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCDAB8]);
}

uint64_t sub_24877C1FC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2487B50CC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s31TextToSpeechVoiceBankingSupport14TTSVBDataStoreC13ConfigurationOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24877C2D4 + 4 * byte_2487BFBB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24877C308 + 4 * byte_2487BFBB0[v4]))();
}

uint64_t sub_24877C308(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24877C310(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24877C318);
  return result;
}

uint64_t sub_24877C324(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24877C32CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24877C330(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24877C338(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTSVBDataStore.OperationContext()
{
  return &type metadata for TTSVBDataStore.OperationContext;
}

uint64_t *initializeBufferWithCopyOfBuffer for TTSVBDataStoreEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = sub_2487B4EB0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = *(int *)(type metadata accessor for TTSVBDataStoreEvent.CloudKitSyncEvent(0) + 20);
      v9 = *(void **)((char *)a2 + v8);
      *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
      v10 = v9;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for TTSVBDataStoreEvent(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v3 = sub_2487B4EB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  if (EnumCaseMultiPayload == 1)

}

uint64_t initializeWithCopy for TTSVBDataStoreEvent(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = sub_2487B4EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    v6 = *(int *)(type metadata accessor for TTSVBDataStoreEvent.CloudKitSyncEvent(0) + 20);
    v7 = *(void **)(a2 + v6);
    *(_QWORD *)(a1 + v6) = v7;
    v8 = v7;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for TTSVBDataStoreEvent(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  if (a1 != a2)
  {
    sub_2486EDA68(a1, type metadata accessor for TTSVBDataStoreEvent);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = sub_2487B4EB0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      v6 = *(int *)(type metadata accessor for TTSVBDataStoreEvent.CloudKitSyncEvent(0) + 20);
      v7 = *(void **)(a2 + v6);
      *(_QWORD *)(a1 + v6) = v7;
      v8 = v7;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for TTSVBDataStoreEvent(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = sub_2487B4EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    v6 = type metadata accessor for TTSVBDataStoreEvent.CloudKitSyncEvent(0);
    *(_QWORD *)(a1 + *(int *)(v6 + 20)) = *(_QWORD *)(a2 + *(int *)(v6 + 20));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for TTSVBDataStoreEvent(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;

  if (a1 != a2)
  {
    sub_2486EDA68(a1, type metadata accessor for TTSVBDataStoreEvent);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = sub_2487B4EB0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      v6 = type metadata accessor for TTSVBDataStoreEvent.CloudKitSyncEvent(0);
      *(_QWORD *)(a1 + *(int *)(v6 + 20)) = *(_QWORD *)(a2 + *(int *)(v6 + 20));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24877C70C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2487B4EB0();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TTSVBDataStoreEvent.CloudKitSyncEvent(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for TTSVBDataStoreEvent.MergeEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2487B4EB0();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for TTSVBDataStoreEvent.MergeEvent(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2487B4EB0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for TTSVBDataStoreEvent.MergeEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2487B4EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for TTSVBDataStoreEvent.MergeEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2487B4EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for TTSVBDataStoreEvent.MergeEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2487B4EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for TTSVBDataStoreEvent.MergeEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2487B4EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTSVBDataStoreEvent.MergeEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24877C918(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2487B4EB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for TTSVBDataStoreEvent.MergeEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24877C960(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2487B4EB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_24877C9A0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2487B4EB0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for TTSVBDataStoreEvent.CloudKitSyncEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2487B4EB0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    v10 = v9;
  }
  return a1;
}

void destroy for TTSVBDataStoreEvent.CloudKitSyncEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2487B4EB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t initializeWithCopy for TTSVBDataStoreEvent.CloudKitSyncEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v6 = sub_2487B4EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v9 = v8;
  return a1;
}

uint64_t assignWithCopy for TTSVBDataStoreEvent.CloudKitSyncEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v6 = sub_2487B4EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  return a1;
}

uint64_t initializeWithTake for TTSVBDataStoreEvent.CloudKitSyncEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_2487B4EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for TTSVBDataStoreEvent.CloudKitSyncEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = sub_2487B4EB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  return a1;
}

uint64_t getEnumTagSinglePayload for TTSVBDataStoreEvent.CloudKitSyncEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24877CC6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BDCB938]);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v10;

  v7 = a4(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, a2, v7);
  v10 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for TTSVBDataStoreEvent.CloudKitSyncEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24877CD00(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCB938]);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;
  uint64_t v10;

  result = a5(0);
  v10 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_24877CD84()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2487B4EB0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24877CDF8()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24877CE24()
{
  uint64_t v0;

  return sub_248776DA4(*(void (**)(char *))(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_24877CE30()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24877CE54()
{
  id *v0;

  return swift_deallocObject();
}

void sub_24877CE88()
{
  uint64_t v0;

  sub_24877761C(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(char ***)(v0 + 32));
}

uint64_t sub_24877CE94()
{
  return swift_deallocObject();
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_24877CEE0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_24877CF1C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_24877CF60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25445F1C8) - 8) + 80);
  swift_release();
  v2 = v0 + ((v1 + 32) & ~v1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2486F507C(*(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_BYTE *)(v2 + 16));
    v3 = type metadata accessor for TTSVBError(0);
    v4 = v2 + *(int *)(v3 + 20);
    type metadata accessor for TTSVBError.Reason(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 7u:
      case 0x16u:
      case 0x1Au:
      case 0x1Cu:
        swift_bridgeObjectRelease();
        break;
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xEu:
      case 0xFu:
      case 0x10u:
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x18u:
        v5 = sub_2487B50CC();
        goto LABEL_4;
      case 0xCu:
      case 0xDu:
        v7 = sub_2487B50CC();
        v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
        v8(v4, v7);
        v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25777C260);
        v8(v4 + *(int *)(v9 + 48), v7);
        break;
      case 0x15u:
      case 0x17u:
      case 0x1Bu:
      case 0x1Du:
        v5 = sub_2487B5228();
LABEL_4:
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
        break;
      default:
        break;
    }

  }
  return swift_deallocObject();
}

uint64_t TTSVBSiriTTSTrainingAsset.inferenceAssetURL.getter()
{
  return sub_24877D138();
}

uint64_t TTSVBSiriTTSTrainingAsset.trainingAssetURL.getter()
{
  return sub_24877D138();
}

uint64_t sub_24877D138()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;

  v1 = objc_msgSend(v0, sel_path);
  if (v1)
  {
    v2 = v1;
    sub_2487B5528();

    v3 = sub_2487B50CC();
    v4 = *(_QWORD *)(v3 - 8);
    MEMORY[0x24BDAC7A8](v3);
    v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2487B500C();
    swift_bridgeObjectRelease();
    sub_2487B5054();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    result = sub_2487B5B58();
    __break(1u);
  }
  return result;
}

uint64_t TTSVBSiriTTSTrainingAsset.metadataURL.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t);
  uint64_t result;
  uint64_t v9;

  v1 = sub_2487B50CC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(_QWORD *)(v2 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = objc_msgSend(v0, sel_path, MEMORY[0x24BDAC7A8](v1));
  if (v4)
  {
    v5 = v4;
    sub_2487B5528();

    MEMORY[0x24BDAC7A8](v6);
    sub_2487B500C();
    swift_bridgeObjectRelease();
    sub_2487B5054();
    v7 = *(void (**)(char *, uint64_t))(v2 + 8);
    v7((char *)&v9 - v3, v1);
    sub_2487B5054();
    return ((uint64_t (*)(char *, uint64_t))v7)((char *)&v9 - v3, v1);
  }
  else
  {
    result = sub_2487B5B58();
    __break(1u);
  }
  return result;
}

uint64_t TTSVBSiriTTSTrainingAsset.trainingScript.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_2487B50CC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTSVBSiriTTSTrainingAsset.metadataURL.getter();
  static TTSVBTrainingScript.parseScript(fromMetadatFile:)((uint64_t)v5, a1);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t static TTSVBLiveSpeechSupport.localPrefsDomain.getter()
{
  return 0xD000000000000022;
}

unint64_t static TTSVBLiveSpeechSupport.cloudPrefsDomain.getter()
{
  return 0xD000000000000022;
}

uint64_t static TTSVBLiveSpeechSupport.favoritePhrasesKey.getter()
{
  return 0x657469726F766166;
}

unint64_t static TTSVBLiveSpeechSupport.favoritePhraseCategoriesKey.getter()
{
  return 0xD000000000000018;
}

uint64_t static TTSVBLiveSpeechSupport.maxRecentsKey.getter()
{
  return 0x6E6563655278616DLL;
}

uint64_t static TTSVBLiveSpeechSupport.phraseTextKey.getter()
{
  return 1954047348;
}

uint64_t static TTSVBLiveSpeechSupport.phraseShortcutKey.getter()
{
  return 0x74756374726F6873;
}

uint64_t static TTSVBLiveSpeechSupport.phraseInputIDKey.getter()
{
  return 0x44497475706E69;
}

uint64_t static TTSVBLiveSpeechSupport.phraseCategoryIDKey.getter()
{
  return 0x79726F6765746163;
}

uint64_t static TTSVBLiveSpeechSupport.phraseCreationDateKey.getter()
{
  return 0x6E6F697461657263;
}

uint64_t static TTSVBLiveSpeechSupport.phraseCategoryNameKey.getter()
{
  return 1701667182;
}

uint64_t static TTSVBLiveSpeechSupport.phraseCategorySymbolKey.getter()
{
  return 0x6C6F626D7973;
}

unint64_t static TTSVBLiveSpeechSupport.localPrefsDidChangeNotifyName.getter()
{
  return 0xD000000000000026;
}

id sub_24877D604(void *a1, uint64_t a2)
{
  return sub_24877D688(a1, a2, (void (*)(void))NSUserDefaults.favoritePhrases.getter);
}

uint64_t sub_24877D614(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25777CBD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_24877D664(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24877D948(a1, (SEL *)&selRef_favoritePhrases, a2);
}

void sub_24877D670(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_24877D9B4(a1, a2, a3, a4, (SEL *)&selRef_setFavoritePhrases_);
}

id sub_24877D67C(void *a1, uint64_t a2)
{
  return sub_24877D688(a1, a2, (void (*)(void))NSUserDefaults.liveSpeechPhrases.getter);
}

id sub_24877D688(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  void *v5;

  v4 = a1;
  a3();

  __swift_instantiateConcreteTypeFromMangledName(&qword_25445F120);
  v5 = (void *)sub_2487B566C();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t _sSo14NSUserDefaultsC31TextToSpeechVoiceBankingSupportE15favoritePhrasesSaySDySSypGGvg_0()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  v1 = (void *)sub_2487B5504();
  v2 = objc_msgSend(v0, sel_objectForKey_, v1);

  if (v2)
  {
    sub_2487B59A8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_24877D614((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25777D780);
    if ((swift_dynamicCast() & 1) != 0)
      return v4;
  }
  else
  {
    sub_2486F5008((uint64_t)v6, (uint64_t *)&unk_25777CBD0);
  }
  return MEMORY[0x24BEE4AF8];
}

void sub_24877D7E4(void *a1)
{
  id v2;
  void *v3;
  id v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25445F120);
  sub_2487B5684();
  v2 = a1;
  v3 = (void *)sub_2487B566C();
  swift_bridgeObjectRelease();
  v4 = (id)sub_2487B5504();
  objc_msgSend(v2, sel_setObject_forKey_, v3, v4);

}

void _sSo14NSUserDefaultsC31TextToSpeechVoiceBankingSupportE15favoritePhrasesSaySDySSypGGvs_0()
{
  void *v0;
  void *v1;
  id v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25445F120);
  v1 = (void *)sub_2487B566C();
  swift_bridgeObjectRelease();
  v2 = (id)sub_2487B5504();
  objc_msgSend(v0, sel_setObject_forKey_, v1, v2);

}

void sub_24877D93C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24877D948(a1, (SEL *)&selRef_liveSpeechPhrases, a2);
}

void sub_24877D948(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4;
  uint64_t v5;

  v4 = objc_msgSend(*a1, *a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25445F120);
  v5 = sub_2487B5684();

  *a3 = v5;
}

void sub_24877D9A8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_24877D9B4(a1, a2, a3, a4, (SEL *)&selRef_setLiveSpeechPhrases_);
}

void sub_24877D9B4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void *v6;
  id v7;

  v6 = *a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25445F120);
  v7 = (id)sub_2487B566C();
  objc_msgSend(v6, *a5, v7);

}

id sub_24877DA18(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  NSUserDefaults.liveSpeechCategories.getter();

  __swift_instantiateConcreteTypeFromMangledName(&qword_25777D790);
  v2 = (void *)sub_2487B545C();
  swift_bridgeObjectRelease();
  return v2;
}

void sub_24877DA80(void *a1)
{
  id v2;
  void *v3;
  id v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25777D790);
  sub_2487B5474();
  v2 = a1;
  v3 = (void *)sub_2487B545C();
  swift_bridgeObjectRelease();
  v4 = (id)sub_2487B5504();
  objc_msgSend(v2, sel_setObject_forKey_, v3, v4);

}

void NSUserDefaults.liveSpeechCategories.setter()
{
  void *v0;
  void *v1;
  id v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25777D790);
  v1 = (void *)sub_2487B545C();
  swift_bridgeObjectRelease();
  v2 = (id)sub_2487B5504();
  objc_msgSend(v0, sel_setObject_forKey_, v1, v2);

}

void sub_24877DBFC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(*a1, sel_liveSpeechCategories);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777D790);
  v4 = sub_2487B5474();

  *a2 = v4;
}

void sub_24877DC70(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777D790);
  v3 = (id)sub_2487B545C();
  objc_msgSend(v2, sel_setLiveSpeechCategories_, v3);

}

unint64_t sub_24877DCDC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777D870);
  v2 = (_QWORD *)sub_2487B5B88();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_248709700(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24877DDF4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777D860);
  v2 = (_QWORD *)sub_2487B5B88();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_248709700(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_24877DF14(void *a1)
{
  id v1;
  void *v2;
  id v3;

  v1 = a1;
  v2 = (void *)sub_2487B5504();
  v3 = objc_msgSend(v1, sel_integerForKey_, v2);

  return v3;
}

id NSUserDefaults.liveSpeechMaxRecentsCount.getter()
{
  void *v0;
  void *v1;
  id v2;

  v1 = (void *)sub_2487B5504();
  v2 = objc_msgSend(v0, sel_integerForKey_, v1);

  return v2;
}

void sub_24877DFD8(void *a1)
{
  id v1;
  void *v2;
  id v3;

  v1 = a1;
  v2 = (void *)sub_2487B5768();
  v3 = (id)sub_2487B5504();
  objc_msgSend(v1, sel_setValue_forKey_, v2, v3);

}

void NSUserDefaults.liveSpeechMaxRecentsCount.setter()
{
  void *v0;
  void *v1;
  id v2;

  v1 = (void *)sub_2487B5768();
  v2 = (id)sub_2487B5504();
  objc_msgSend(v0, sel_setValue_forKey_, v1, v2);

}

id sub_24877E0BC@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_liveSpeechMaxRecentsCount);
  *a2 = result;
  return result;
}

id sub_24877E0EC(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLiveSpeechMaxRecentsCount_, *a1);
}

uint64_t sub_24877E100(char a1)
{
  if ((a1 & 1) != 0)
    return 0x73746E65636552;
  else
    return 0x6465766153;
}

uint64_t sub_24877E134(char *a1, char *a2)
{
  return sub_24877E140(*a1, *a2);
}

uint64_t sub_24877E140(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x73746E65636552;
  else
    v3 = 0x6465766153;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x73746E65636552;
  else
    v5 = 0x6465766153;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_2487B5CE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_24877E1DC()
{
  return sub_24877E1E4();
}

uint64_t sub_24877E1E4()
{
  sub_2487B5D5C();
  sub_2487B557C();
  swift_bridgeObjectRelease();
  return sub_2487B5D98();
}

uint64_t sub_24877E260()
{
  return sub_24877E268();
}

uint64_t sub_24877E268()
{
  sub_2487B557C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24877E2BC()
{
  return sub_24877E2C4();
}

uint64_t sub_24877E2C4()
{
  sub_2487B5D5C();
  sub_2487B557C();
  swift_bridgeObjectRelease();
  return sub_2487B5D98();
}

uint64_t sub_24877E33C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_2487B5BAC();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_24877E398@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_24877E100(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_24877E3C0(_QWORD *a1@<X8>)
{
  *a1 = &unk_2519954B8;
}

id sub_24877E3D0()
{
  char *v0;
  char *v1;
  char *v2;
  char *v3;
  char *v4;
  char *v5;
  objc_super v7;

  v1 = &v0[OBJC_IVAR___LiveSpeechPhrase_categoryID];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = &v0[OBJC_IVAR___LiveSpeechPhrase_inputID];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  v3 = &v0[OBJC_IVAR___LiveSpeechPhrase_anyCreationDate];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  v4 = &v0[OBJC_IVAR___LiveSpeechPhrase_text];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0xE000000000000000;
  swift_beginAccess();
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  v5 = v0;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;

  swift_bridgeObjectRelease();
  v7.receiver = v5;
  v7.super_class = (Class)LiveSpeechPhrase;
  return objc_msgSendSuper2(&v7, sel_init);
}

char *sub_24877E4D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v26;

  v14 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v15 = &v14[OBJC_IVAR___LiveSpeechPhrase_text];
  swift_beginAccess();
  *(_QWORD *)v15 = a1;
  *((_QWORD *)v15 + 1) = a2;
  v16 = v14;
  swift_bridgeObjectRelease();
  v17 = &v16[OBJC_IVAR___LiveSpeechPhrase_inputID];
  swift_beginAccess();
  *(_QWORD *)v17 = a3;
  *((_QWORD *)v17 + 1) = a4;
  swift_bridgeObjectRelease();
  v18 = &v16[OBJC_IVAR___LiveSpeechPhrase_categoryID];
  swift_beginAccess();
  *(_QWORD *)v18 = a5;
  *((_QWORD *)v18 + 1) = a6;
  swift_bridgeObjectRelease();
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2486F4E74(a7, (uint64_t)v21, &qword_25445ED38);
  v22 = sub_2487B51D4();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) != 1)
  {
    v24 = (void *)sub_2487B5174();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v22);
  }
  objc_msgSend(v16, sel_setCreationDate_, v24);

  sub_2486F5008(a7, &qword_25445ED38);
  return v16;
}

char *sub_24877E6A0(uint64_t a1)
{
  id v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  unint64_t v10;
  char v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  char v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  _QWORD v33[10];
  __int128 v34;
  __int128 v35;

  v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = (char *)v2;
  if (v3
    && (v5 = sub_248709700(1954047348, 0xE400000000000000), (v6 & 1) != 0)
    && (sub_2486F0814(*(_QWORD *)(a1 + 56) + 32 * v5, (uint64_t)&v34), swift_dynamicCast()))
  {
    v7 = v33[7];
    v8 = v33[8];
  }
  else
  {
    v7 = 0;
    v8 = 0xE000000000000000;
  }
  v9 = &v4[OBJC_IVAR___LiveSpeechPhrase_text];
  swift_beginAccess();
  *(_QWORD *)v9 = v7;
  *((_QWORD *)v9 + 1) = v8;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 16) && (v10 = sub_248709700(0x44497475706E69, 0xE700000000000000), (v11 & 1) != 0))
  {
    sub_2486F0814(*(_QWORD *)(a1 + 56) + 32 * v10, (uint64_t)&v34);
    v12 = swift_dynamicCast();
    if (v12)
      v13 = v33[4];
    else
      v13 = 0;
    if (v12)
      v14 = v33[5];
    else
      v14 = 0;
  }
  else
  {
    v13 = 0;
    v14 = 0;
  }
  v15 = &v4[OBJC_IVAR___LiveSpeechPhrase_inputID];
  swift_beginAccess();
  *(_QWORD *)v15 = v13;
  *((_QWORD *)v15 + 1) = v14;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 16) && (v16 = sub_248709700(0x79726F6765746163, 0xEA00000000004449), (v17 & 1) != 0))
  {
    sub_2486F0814(*(_QWORD *)(a1 + 56) + 32 * v16, (uint64_t)&v34);
    v18 = swift_dynamicCast();
    if (v18)
      v19 = v33[1];
    else
      v19 = 0;
    if (v18)
      v20 = v33[2];
    else
      v20 = 0;
  }
  else
  {
    v19 = 0;
    v20 = 0;
  }
  v21 = &v4[OBJC_IVAR___LiveSpeechPhrase_categoryID];
  swift_beginAccess();
  *(_QWORD *)v21 = v19;
  *((_QWORD *)v21 + 1) = v20;
  swift_bridgeObjectRelease();
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16) && (v25 = sub_248709700(0x6E6F697461657263, 0xEC00000065746144), (v26 & 1) != 0))
  {
    sub_2486F0814(*(_QWORD *)(a1 + 56) + 32 * v25, (uint64_t)&v34);
  }
  else
  {
    v34 = 0u;
    v35 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v35 + 1))
  {
    v27 = sub_2487B51D4();
    v28 = swift_dynamicCast();
    v29 = *(_QWORD *)(v27 - 8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v24, v28 ^ 1u, 1, v27);
    v30 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v24, 1, v27) != 1)
    {
      v30 = (void *)sub_2487B5174();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v24, v27);
    }
  }
  else
  {
    sub_2486F5008((uint64_t)&v34, (uint64_t *)&unk_25777CBD0);
    v31 = sub_2487B51D4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v24, 1, 1, v31);
    v30 = 0;
  }
  objc_msgSend(v4, sel_setCreationDate_, v30);

  return v4;
}

id sub_24877EA80(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  void *v4;

  v3 = a1 + *a3;
  swift_beginAccess();
  if (!*(_QWORD *)(v3 + 8))
    return 0;
  swift_bridgeObjectRetain();
  v4 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_24877EB00(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;

  if (a3)
  {
    v6 = sub_2487B5528();
    v8 = v7;
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  v9 = (uint64_t *)(a1 + *a4);
  swift_beginAccess();
  *v9 = v6;
  v9[1] = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_24877EC3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v7;
  _BYTE v8[24];
  uint64_t v9;

  v3 = v1 + OBJC_IVAR___LiveSpeechPhrase_anyCreationDate;
  swift_beginAccess();
  sub_2486F4E74(v3, (uint64_t)v8, (uint64_t *)&unk_25777CBD0);
  if (v9)
  {
    v4 = sub_2487B51D4();
    v5 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, v5 ^ 1u, 1, v4);
  }
  else
  {
    sub_2486F5008((uint64_t)v8, (uint64_t *)&unk_25777CBD0);
    v7 = sub_2487B51D4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1, 1, 1, v7);
  }
}

uint64_t sub_24877EDE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v9;
  uint64_t v11;
  __int128 v12;
  __int128 v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2486F4E74(a1, (uint64_t)v5, &qword_25445ED38);
  v6 = sub_2487B51D4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_2486F5008(a1, &qword_25445ED38);
    sub_2486F5008((uint64_t)v5, &qword_25445ED38);
    v12 = 0u;
    v13 = 0u;
  }
  else
  {
    *((_QWORD *)&v13 + 1) = v6;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v12);
    (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 32))(boxed_opaque_existential_0, v5, v6);
    sub_2486F5008(a1, &qword_25445ED38);
  }
  v9 = v1 + OBJC_IVAR___LiveSpeechPhrase_anyCreationDate;
  swift_beginAccess();
  sub_248782A74((uint64_t)&v12, v9);
  return swift_endAccess();
}

uint64_t sub_24877EFC0(_QWORD **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[5];
  uint64_t v33;

  v29 = a6;
  v13 = sub_2487B533C();
  v14 = *(_QWORD *)(v13 - 8);
  v30 = v13;
  v31 = v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = swift_bridgeObjectRetain();
  v19 = sub_248783CD0(v18, a2, a3, a4, a5);
  LOBYTE(a2) = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
  {
    v32[3] = MEMORY[0x24BEE0D00];
    v32[0] = v29;
    v32[1] = a7;
    swift_bridgeObjectRetain();
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) != 0)
    {
      if ((v19 & 0x8000000000000000) == 0)
        goto LABEL_4;
    }
    else
    {
      result = (uint64_t)sub_2487839E4(v17);
      v17 = (_QWORD *)result;
      if ((v19 & 0x8000000000000000) == 0)
      {
LABEL_4:
        if (v19 < v17[2])
        {
          sub_24877F2CC((uint64_t)v32, 1954047348, 0xE400000000000000);
          *a1 = v17;
          return notify_post("com.apple.livespeech.localprefschanged");
        }
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_11:
    __break(1u);
    return result;
  }
  v22 = sub_2487B1130();
  swift_beginAccess();
  v23 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v16, v22, v30);
  v24 = sub_2487B5324();
  v25 = sub_2487B57D4();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    v33 = v27;
    *(_DWORD *)v26 = 136315138;
    v32[4] = sub_2486EDE5C(0xD00000000000003CLL, 0x80000002487C7390, &v33);
    sub_2487B593C();
    _os_log_impl(&dword_2486E6000, v24, v25, "%s", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v27, -1, -1);
    MEMORY[0x24959AF80](v26, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v31 + 8))(v16, v23);
  type metadata accessor for TTSVBError(0);
  sub_2486EDB24();
  swift_allocError();
  TTSVBError.init(_:_:_:)(0xD00000000000003CLL, 0x80000002487C7390, 0, 0, 0, v28);
  return swift_willThrow();
}

uint64_t sub_24877F2CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _OWORD v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_24870A40C((_OWORD *)a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = 0x8000000000000000;
    sub_248709BA8(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_2486F5008(a1, (uint64_t *)&unk_25777CBD0);
    sub_2487792A0(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_2486F5008((uint64_t)v9, (uint64_t *)&unk_25777CBD0);
  }
}

unint64_t _sSo14NSUserDefaultsC31TextToSpeechVoiceBankingSupportE04liveE10CategoriesSDySSSDyS2SGGvg_0()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  v1 = (void *)sub_2487B5504();
  v2 = objc_msgSend(v0, sel_objectForKey_, v1);

  if (v2)
  {
    sub_2487B59A8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_24877D614((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25777D788);
    if ((swift_dynamicCast() & 1) != 0)
      return v4;
  }
  else
  {
    sub_2486F5008((uint64_t)v6, (uint64_t *)&unk_25777CBD0);
  }
  return sub_24877DCDC(MEMORY[0x24BEE4AF8]);
}

uint64_t sub_24877F4A4(_QWORD **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[5];
  uint64_t v33;

  v29 = a6;
  v13 = sub_2487B533C();
  v14 = *(_QWORD *)(v13 - 8);
  v30 = v13;
  v31 = v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = swift_bridgeObjectRetain();
  v19 = sub_248783CD0(v18, a2, a3, a4, a5);
  LOBYTE(a2) = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
  {
    v32[3] = MEMORY[0x24BEE0D00];
    v32[0] = v29;
    v32[1] = a7;
    swift_bridgeObjectRetain();
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) != 0)
    {
      if ((v19 & 0x8000000000000000) == 0)
        goto LABEL_4;
    }
    else
    {
      result = (uint64_t)sub_2487839E4(v17);
      v17 = (_QWORD *)result;
      if ((v19 & 0x8000000000000000) == 0)
      {
LABEL_4:
        if (v19 < v17[2])
        {
          sub_24877F2CC((uint64_t)v32, 0x79726F6765746163, 0xEA00000000004449);
          *a1 = v17;
          return notify_post("com.apple.livespeech.localprefschanged");
        }
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_11:
    __break(1u);
    return result;
  }
  v22 = sub_2487B1130();
  swift_beginAccess();
  v23 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v16, v22, v30);
  v24 = sub_2487B5324();
  v25 = sub_2487B57D4();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    v33 = v27;
    *(_DWORD *)v26 = 136315138;
    v32[4] = sub_2486EDE5C(0xD000000000000045, 0x80000002487C7340, &v33);
    sub_2487B593C();
    _os_log_impl(&dword_2486E6000, v24, v25, "%s", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v27, -1, -1);
    MEMORY[0x24959AF80](v26, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v31 + 8))(v16, v23);
  type metadata accessor for TTSVBError(0);
  sub_2486EDB24();
  swift_allocError();
  TTSVBError.init(_:_:_:)(0xD000000000000045, 0x80000002487C7340, 0, 0, 0, v28);
  return swift_willThrow();
}

uint64_t sub_24877F7C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_2487B5528();
  v10 = v9;
  v11 = sub_2487B5528();
  v13 = v12;
  v14 = sub_2487B5528();
  a7(v8, v10, v11, v13, v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_24877F8C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v21 = MEMORY[0x24BEE4AF8];
    sub_2487B5B1C();
    v4 = sub_2487839F8(a1);
    v6 = v5;
    v7 = a1 + 64;
    result = type metadata accessor for LiveSpeechCategory(v4);
    v8 = 0;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(a1 + 32))
    {
      v10 = (unint64_t)v4 >> 6;
      if ((*(_QWORD *)(v7 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0)
        goto LABEL_22;
      if (*(_DWORD *)(a1 + 36) != v6)
        goto LABEL_23;
      v20 = v8;
      v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v4);
      v13 = *v11;
      v12 = v11[1];
      v14 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_248780180(v13, v12, v14);
      sub_2487B5B04();
      sub_2487B5B28();
      sub_2487B5B34();
      result = sub_2487B5B10();
      v9 = 1 << *(_BYTE *)(a1 + 32);
      if (v4 >= v9)
        goto LABEL_24;
      v15 = *(_QWORD *)(v7 + 8 * v10);
      if ((v15 & (1 << v4)) == 0)
        goto LABEL_25;
      if (*(_DWORD *)(a1 + 36) != v6)
        goto LABEL_26;
      v16 = v15 & (-2 << (v4 & 0x3F));
      if (v16)
      {
        v9 = __clz(__rbit64(v16)) | v4 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        v17 = v10 + 1;
        v18 = (unint64_t)(v9 + 63) >> 6;
        if (v10 + 1 < v18)
        {
          v19 = *(_QWORD *)(v7 + 8 * v17);
          if (v19)
          {
LABEL_18:
            v9 = __clz(__rbit64(v19)) + (v17 << 6);
          }
          else
          {
            while (v18 - 2 != v10)
            {
              v19 = *(_QWORD *)(a1 + 80 + 8 * v10++);
              if (v19)
              {
                v17 = v10 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      v8 = v20 + 1;
      v4 = v9;
      if (v20 + 1 == v2)
        return v21;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

uint64_t static LiveSpeechPhrase.observeChanges(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_2487822EC(a1, a2, a3);
}

id static LiveSpeechPhrase.maxPreferredPhraseCount.getter()
{
  id v0;
  void *v1;
  id v2;

  if (qword_25778E050 != -1)
    swift_once();
  v0 = (id)qword_25778E058;
  v1 = (void *)sub_2487B5504();
  v2 = objc_msgSend(v0, sel_integerForKey_, v1);

  return v2;
}

void static LiveSpeechPhrase.maxPreferredPhraseCount.setter()
{
  id v0;
  void *v1;
  id v2;

  if (qword_25778E050 != -1)
    swift_once();
  v0 = (id)qword_25778E058;
  v1 = (void *)sub_2487B5768();
  v2 = (id)sub_2487B5504();
  objc_msgSend(v0, sel_setValue_forKey_, v1, v2);

}

uint64_t static LiveSpeechPhrase.observeChangesAsync()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  if (qword_25778E050 != -1)
    swift_once();
  v0 = (void *)qword_25778E058;
  swift_getKeyPath();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777D7B8);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0;
  sub_2487B4FC4();
  sub_2487872F4(&qword_25777D7C0, &qword_25777D7B8);
  v6 = sub_2487B539C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v10[1] = v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777D7C8);
  v8 = sub_24871869C(&qword_25777D7D0, &qword_25777D7C8, MEMORY[0x24BDB9AF8]);
  MEMORY[0x249599D38](v7, v8);

  swift_release();
  return swift_release();
}

uint64_t LiveSpeechCategory.id.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, sel_categoryID);
  v2 = sub_2487B5528();

  return v2;
}

void sub_2487800C4(uint64_t *a1@<X8>)
{
  id *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*v1, sel_categoryID);
  v4 = sub_2487B5528();
  v6 = v5;

  *a1 = v4;
  a1[1] = v6;
}

char *sub_248780180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v6;
  char *v7;
  char *v8;
  unint64_t v9;
  char v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;

  v6 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v7 = &v6[OBJC_IVAR___LiveSpeechCategory_categoryID];
  swift_beginAccess();
  *(_QWORD *)v7 = a1;
  *((_QWORD *)v7 + 1) = a2;
  v8 = v6;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a3 + 16) && (v9 = sub_248709700(1701667182, 0xE400000000000000), (v10 & 1) != 0))
  {
    v11 = (uint64_t *)(*(_QWORD *)(a3 + 56) + 16 * v9);
    v13 = *v11;
    v12 = v11[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    v13 = 0;
    v12 = 0xE000000000000000;
  }
  v14 = &v8[OBJC_IVAR___LiveSpeechCategory_name];
  swift_beginAccess();
  *(_QWORD *)v14 = v13;
  *((_QWORD *)v14 + 1) = v12;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a3 + 16) && (v15 = sub_248709700(0x6C6F626D7973, 0xE600000000000000), (v16 & 1) != 0))
  {
    v17 = (uint64_t *)(*(_QWORD *)(a3 + 56) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    v19 = 0;
    v18 = 0xE000000000000000;
  }
  swift_bridgeObjectRelease();
  v20 = &v8[OBJC_IVAR___LiveSpeechCategory_symbol];
  swift_beginAccess();
  *(_QWORD *)v20 = v19;
  *((_QWORD *)v20 + 1) = v18;

  swift_bridgeObjectRelease();
  return v8;
}

id sub_248780338()
{
  void *v0;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  v0 = (void *)sub_2487B5504();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2487803A8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;

  v6 = sub_2487B5528();
  v8 = v7;
  v9 = (uint64_t *)(a1 + *a4);
  swift_beginAccess();
  *v9 = v6;
  v9[1] = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2487805E4()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  char v12;

  v1 = objc_msgSend(v0, sel_categoryID);
  v2 = sub_2487B5528();
  v4 = v3;

  v5 = v2 == 0x73746E65636552 && v4 == 0xE700000000000000;
  if (v5 || (sub_2487B5CE4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v6 = (void *)sub_2487B5504();
    v7 = TTSVBSupportLocString(v6);
  }
  else
  {
    if (v2 == 0x6465766153 && v4 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v12 = sub_2487B5CE4();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        v8 = objc_msgSend(v0, sel_name);
        goto LABEL_8;
      }
    }
    v6 = (void *)sub_2487B5504();
    v7 = TTSVBSupportLocString(v6);
  }
  v8 = v7;

LABEL_8:
  v9 = sub_2487B5528();

  return v9;
}

void sub_248780850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  unint64_t v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34[4];

  v34[3] = *(id *)MEMORY[0x24BDAC8D0];
  v10 = sub_2487B533C();
  v30 = *(_QWORD *)(v10 - 8);
  v31 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25778E050 != -1)
    swift_once();
  v13 = (id)qword_25778E058;
  v34[0] = (id)_sSo14NSUserDefaultsC31TextToSpeechVoiceBankingSupportE15favoritePhrasesSaySDySSypGGvg_0();
  sub_248780CE4(v34, v4, a1, a2, a3, a4);
  if (v5)
  {

LABEL_20:
    swift_bridgeObjectRelease();
    return;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25445F120);
  v14 = (void *)sub_2487B566C();
  swift_bridgeObjectRelease();
  v15 = (void *)sub_2487B5504();
  objc_msgSend(v13, sel_setObject_forKey_, v14, v15);

  v16 = objc_msgSend(v4, sel_phrases);
  type metadata accessor for LiveSpeechPhrase((uint64_t)v16);
  v17 = sub_2487B5684();

  if ((objc_msgSend(v4, sel_isRecents) & 1) == 0)
    goto LABEL_20;
  if (!(v17 >> 62))
  {
    if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10) <= 0x64uLL)
      goto LABEL_20;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v22 = sub_2487B5B64();
  swift_bridgeObjectRelease();
  if (v22 <= 100)
    goto LABEL_20;
  swift_bridgeObjectRetain();
  v23 = sub_2487B5B64();
  swift_bridgeObjectRelease();
  if (v23)
  {
LABEL_8:
    if ((v17 & 0xC000000000000001) != 0)
    {
      v18 = (id)MEMORY[0x24959A434](0, v17);
    }
    else
    {
      if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
        __break(1u);
      v18 = *(id *)(v17 + 32);
    }
    v19 = v18;
    swift_bridgeObjectRelease();
    v34[0] = 0;
    if (objc_msgSend(v4, sel_deletePhrase_error_, v19, v34))
    {
      v20 = v34[0];
    }
    else
    {
      v21 = v34[0];
      sub_2487B4F64();

      swift_willThrow();
    }

    return;
  }
  swift_bridgeObjectRelease();
  v24 = sub_2487B1130();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v12, v24, v31);
  v25 = sub_2487B5324();
  v26 = sub_2487B57D4();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    v33 = v28;
    *(_DWORD *)v27 = 136315138;
    v32 = sub_2486EDE5C(0xD000000000000032, 0x80000002487C6EE0, &v33);
    sub_2487B593C();
    _os_log_impl(&dword_2486E6000, v25, v26, "%s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v28, -1, -1);
    MEMORY[0x24959AF80](v27, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v31);
  type metadata accessor for TTSVBError(0);
  sub_2486EDB24();
  swift_allocError();
  TTSVBError.init(_:_:_:)(0xD000000000000032, 0x80000002487C6EE0, 0, 0, 0, v29);
  swift_willThrow();
}

uint64_t sub_248780CE4(_QWORD *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  unint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE v67[32];
  uint64_t v68;

  v58 = a5;
  v59 = a6;
  v62 = a4;
  v63 = a3;
  v64 = a2;
  v7 = sub_2487B533C();
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = a1;
  v12 = (_QWORD *)*a1;
  v13 = *(_QWORD *)(*a1 + 16);
  if (!v13)
  {
LABEL_26:
    type metadata accessor for LiveSpeechPhrase(v8);
    v30 = v59;
    swift_bridgeObjectRetain();
    v31 = v62;
    swift_bridgeObjectRetain();
    v32 = objc_msgSend(v64, sel_categoryID);
    v33 = sub_2487B5528();
    v35 = v34;

    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
    MEMORY[0x24BDAC7A8](v36);
    v38 = (char *)&v54 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2487B51C8();
    v39 = sub_2487B51D4();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v38, 0, 1, v39);
    v40 = sub_24877E4D0(v63, v31, v58, v30, v33, v35, (uint64_t)v38);
    v41 = sub_24878129C();

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_248782870(0, v12[2] + 1, 1, v12);
    v43 = v12[2];
    v42 = v12[3];
    if (v43 >= v42 >> 1)
      v12 = sub_248782870((_QWORD *)(v42 > 1), v43 + 1, 1, v12);
    v12[2] = v43 + 1;
    v12[v43 + 4] = v41;
    *v60 = v12;
    return notify_post("com.apple.livespeech.localprefschanged");
  }
  v55 = v11;
  v56 = v9;
  v57 = v8;
  swift_bridgeObjectRetain();
  v14 = 0;
  v61 = MEMORY[0x24BEE4AD8] + 8;
  v15 = v12;
  while (1)
  {
    v16 = v12[v14 + 4];
    swift_bridgeObjectRetain();
    if (*(_QWORD *)(v16 + 16)
      && (v17 = sub_248709700(0x79726F6765746163, 0xEA00000000004449), (v18 & 1) != 0)
      && (sub_2486F0814(*(_QWORD *)(v16 + 56) + 32 * v17, (uint64_t)v67), swift_dynamicCast()))
    {
      v20 = v65;
      v19 = v66;
    }
    else
    {
      v20 = 0;
      v19 = 0;
    }
    v21 = objc_msgSend(v64, sel_categoryID);
    v22 = sub_2487B5528();
    v24 = v23;

    if (!v19)
    {
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    if (v20 == v22 && v19 == v24)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!*(_QWORD *)(v16 + 16))
        goto LABEL_4;
    }
    else
    {
      v26 = sub_2487B5CE4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v26 & 1) == 0 || !*(_QWORD *)(v16 + 16))
        goto LABEL_4;
    }
    v27 = sub_248709700(1954047348, 0xE400000000000000);
    if ((v28 & 1) == 0)
      goto LABEL_4;
    sub_2486F0814(*(_QWORD *)(v16 + 56) + 32 * v27, (uint64_t)v67);
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_4;
    if (v65 == v63 && v66 == v62)
      break;
    v29 = sub_2487B5CE4();
    swift_bridgeObjectRelease();
    if ((v29 & 1) != 0)
      goto LABEL_32;
LABEL_4:
    ++v14;
    swift_bridgeObjectRelease();
    v12 = v15;
    if (v13 == v14)
    {
      v8 = swift_bridgeObjectRelease();
      goto LABEL_26;
    }
  }
  swift_bridgeObjectRelease();
LABEL_32:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v45 = sub_2487B1130();
  swift_beginAccess();
  v46 = v55;
  v47 = v56;
  v48 = v57;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v55, v45, v57);
  v49 = sub_2487B5324();
  v50 = sub_2487B57D4();
  if (os_log_type_enabled(v49, v50))
  {
    v51 = (uint8_t *)swift_slowAlloc();
    v52 = swift_slowAlloc();
    v65 = v52;
    *(_DWORD *)v51 = 136315138;
    v68 = sub_2486EDE5C(0xD000000000000039, 0x80000002487C72B0, &v65);
    sub_2487B593C();
    _os_log_impl(&dword_2486E6000, v49, v50, "%s", v51, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v52, -1, -1);
    MEMORY[0x24959AF80](v51, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v48);
  type metadata accessor for TTSVBError(0);
  sub_2486EDB24();
  swift_allocError();
  TTSVBError.init(_:_:_:)(0xD000000000000039, 0x80000002487C72B0, 0, 0, 0, v53);
  return swift_willThrow();
}

unint64_t sub_24878129C()
{
  void *v0;
  void *v1;
  uint64_t inited;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t *boxed_opaque_existential_0;
  char v32;
  unint64_t v34;
  _OWORD v35[2];
  __int128 v36;
  uint64_t v37;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777D890);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2487B72B0;
  *(_QWORD *)(inited + 32) = 1954047348;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v3 = objc_msgSend(v0, sel_text);
  v4 = sub_2487B5528();
  v6 = v5;

  v7 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)(inited + 56) = v6;
  v8 = sub_2486F9814(inited);
  v9 = objc_msgSend(v1, sel_categoryID);
  if (v9)
  {
    v10 = v9;
    v11 = sub_2487B5528();
    v13 = v12;

    v37 = v7;
    *(_QWORD *)&v36 = v11;
    *((_QWORD *)&v36 + 1) = v13;
    sub_24870A40C(&v36, v35);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v34 = v8;
    sub_248709BA8(v35, 0x79726F6765746163, 0xEA00000000004449, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
  }
  v15 = objc_msgSend(v1, sel_inputID, v34);
  if (v15)
  {
    v16 = v15;
    v17 = sub_2487B5528();
    v19 = v18;

    v37 = v7;
    *(_QWORD *)&v36 = v17;
    *((_QWORD *)&v36 + 1) = v19;
    sub_24870A40C(&v36, v35);
    v20 = swift_isUniquelyReferenced_nonNull_native();
    v34 = v8;
    sub_248709BA8(v35, 0x44497475706E69, 0xE700000000000000, v20);
    swift_bridgeObjectRelease();
  }
  v21 = sub_2487B51D4();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v24 = objc_msgSend(v1, sel_creationDate, MEMORY[0x24BDAC7A8](v21));
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25445ED38);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v34 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v24)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v22 + 56))(v29, 1, 1, v21, v27);
    goto LABEL_9;
  }
  MEMORY[0x24BDAC7A8](v26);
  sub_2487B51A4();

  v30 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
  v30(v29, (char *)&v34 - v23, v21);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v29, 0, 1, v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v29, 1, v21) == 1)
  {
LABEL_9:
    sub_2486F5008((uint64_t)v29, &qword_25445ED38);
    return v8;
  }
  v30((char *)&v34 - v23, v29, v21);
  v37 = v21;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v36);
  (*(void (**)(uint64_t *, char *, uint64_t))(v22 + 16))(boxed_opaque_existential_0, (char *)&v34 - v23, v21);
  sub_24870A40C(&v36, v35);
  v32 = swift_isUniquelyReferenced_nonNull_native();
  v34 = v8;
  sub_248709BA8(v35, 0x6E6F697461657263, 0xEC00000065746144, v32);
  v8 = v34;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v22 + 8))((char *)&v34 - v23, v21);
  return v8;
}

uint64_t sub_248781708(void *a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  char v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t result;
  id v26;
  uint64_t v27;
  _QWORD *v28;

  v3 = v1;
  if (qword_25778E050 != -1)
    goto LABEL_34;
  while (1)
  {
    v5 = (id)qword_25778E058;
    v6 = _sSo14NSUserDefaultsC31TextToSpeechVoiceBankingSupportE15favoritePhrasesSaySDySSypGGvg_0();
    v28 = (_QWORD *)v6;
    v7 = *(_QWORD *)(v6 + 16);
    if (!v7)
      break;
    v8 = (_QWORD *)v6;
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      v27 = v8[v9 + 4];
      swift_bridgeObjectRetain();
      v10 = sub_2487819F8(&v27, v3, a1);
      if (v2)
        goto LABEL_37;
      v11 = v10;
      swift_bridgeObjectRelease();
      if ((v11 & 1) != 0)
        break;
      if (v7 == ++v9)
      {
        swift_bridgeObjectRelease();
        v9 = v8[2];
        v12 = v9;
        goto LABEL_27;
      }
    }
    swift_bridgeObjectRelease();
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_36;
    v13 = v8[2];
    if (v12 == v13)
    {
LABEL_26:
      if (v12 >= v9)
        goto LABEL_27;
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      __break(1u);
      return result;
    }
    v26 = v5;
    v14 = v9 + 5;
    while (1)
    {
      v18 = v14 - 4;
      if (v14 - 4 >= v13)
        break;
      v27 = v8[v14];
      swift_bridgeObjectRetain();
      v19 = sub_2487819F8(&v27, v3, a1);
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0)
      {
        if (v18 != v9)
        {
          if (v9 < 0)
            goto LABEL_30;
          v20 = v8[2];
          if (v9 >= v20)
            goto LABEL_31;
          if (v18 >= v20)
            goto LABEL_32;
          v21 = v8[v9 + 4];
          v22 = v8[v14];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v8 = sub_2487839E4(v8);
          v8[v9 + 4] = v22;
          swift_bridgeObjectRelease();
          if (v18 >= v8[2])
            goto LABEL_33;
          v8[v14] = v21;
          swift_bridgeObjectRelease();
          v28 = v8;
        }
        if (__OFADD__(v9++, 1))
          goto LABEL_29;
      }
      v13 = v8[2];
      v16 = v14 + 1;
      v17 = v14 - 3;
      ++v14;
      if (v17 == v13)
      {
        v12 = v16 - 4;
        v5 = v26;
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    swift_once();
  }
  v9 = 0;
  v12 = 0;
LABEL_27:
  sub_248784654(v9, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25445F120);
  v23 = (void *)sub_2487B566C();
  swift_bridgeObjectRelease();
  v24 = (void *)sub_2487B5504();
  objc_msgSend(v5, sel_setObject_forKey_, v23, v24);

  return notify_post("com.apple.livespeech.localprefschanged");
}

uint64_t sub_2487819F8(uint64_t *a1, void *a2, void *a3)
{
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[32];

  v5 = *a1;
  if (*(_QWORD *)(*a1 + 16)
    && (v6 = sub_248709700(0x79726F6765746163, 0xEA00000000004449), (v7 & 1) != 0)
    && (sub_2486F0814(*(_QWORD *)(v5 + 56) + 32 * v6, (uint64_t)v27), swift_dynamicCast()))
  {
    v9 = v25;
    v8 = v26;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  v10 = objc_msgSend(a2, sel_categoryID);
  v11 = sub_2487B5528();
  v13 = v12;

  if (!v8)
    goto LABEL_26;
  if (v9 == v11 && v8 == v13)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(v5 + 16))
      goto LABEL_18;
    goto LABEL_15;
  }
  v15 = sub_2487B5CE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LOBYTE(v8) = 0;
  if ((v15 & 1) != 0)
  {
    if (!*(_QWORD *)(v5 + 16))
      goto LABEL_18;
LABEL_15:
    v16 = sub_248709700(1954047348, 0xE400000000000000);
    if ((v17 & 1) != 0)
    {
      sub_2486F0814(*(_QWORD *)(v5 + 56) + 32 * v16, (uint64_t)v27);
      if (swift_dynamicCast())
      {
        v19 = v25;
        v18 = v26;
        goto LABEL_19;
      }
    }
LABEL_18:
    v19 = 0;
    v18 = 0;
LABEL_19:
    v20 = objc_msgSend(a3, sel_text);
    v21 = sub_2487B5528();
    v23 = v22;

    if (v18)
    {
      if (v19 == v21 && v18 == v23)
        LOBYTE(v8) = 1;
      else
        LOBYTE(v8) = sub_2487B5CE4();
      swift_bridgeObjectRelease();
    }
    else
    {
      LOBYTE(v8) = 0;
    }
LABEL_26:
    swift_bridgeObjectRelease();
  }
  return v8 & 1;
}

id sub_248781CD0(uint64_t a1, uint64_t a2, void (*a3)(void), void (*a4)(void))
{
  void *v5;

  a3();
  a4();
  v5 = (void *)sub_2487B566C();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_248781ECC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  char v17;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;

  v28 = sub_2487B533C();
  v10 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_248782AD0(a2, a3);
  if (v13)
  {
    v14 = v13;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = v14;
    sub_248783504(a4, a5, 0x6C6F626D7973, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
    v16 = v30;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v17 = swift_isUniquelyReferenced_nonNull_native();
    v30 = *a1;
    *a1 = 0x8000000000000000;
    sub_2487833A8(v16, a2, a3, v17);
    *a1 = v30;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v30 = 0;
    v31 = 0xE000000000000000;
    sub_2487B5AA4();
    sub_2487B55AC();
    sub_2487B55AC();
    v19 = v30;
    v20 = v31;
    v21 = sub_2487B1130();
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v21, v28);
    swift_bridgeObjectRetain_n();
    v22 = sub_2487B5324();
    v23 = sub_2487B57D4();
    if (os_log_type_enabled(v22, v23))
    {
      v27 = v19;
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v32 = v25;
      *(_DWORD *)v24 = 136315138;
      swift_bridgeObjectRetain();
      v29 = sub_2486EDE5C(v27, v20, &v32);
      v19 = v27;
      sub_2487B593C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2486E6000, v22, v23, "%s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v25, -1, -1);
      MEMORY[0x24959AF80](v24, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v28);
    type metadata accessor for TTSVBError(0);
    sub_2486EDB24();
    swift_allocError();
    TTSVBError.init(_:_:_:)(v19, v20, 0, 0, 0, v26);
    return swift_willThrow();
  }
}

uint64_t sub_248782218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7 = sub_2487B5528();
  v9 = v8;
  v10 = sub_2487B5528();
  a6(v7, v9, v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t static LiveSpeechCategory.observeChanges(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_2487822EC(a1, a2, a3);
}

uint64_t sub_2487822EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  void *v11;

  if (qword_25778E050 != -1)
    swift_once();
  v6 = (void *)qword_25778E058;
  v11 = (void *)qword_25778E058;
  swift_getKeyPath();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  v8 = v6;
  swift_retain();
  v9 = sub_2487B4FA0();
  swift_release();
  swift_release();

  result = sub_2487B4F4C();
  a3[3] = result;
  *a3 = v9;
  return result;
}

uint64_t sub_2487823EC(uint64_t (*a1)(uint64_t), uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;

  v5 = sub_2487B533C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2487B1130();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  v10 = sub_2487B5324();
  v11 = sub_2487B57C8();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_2486E6000, v10, v11, a3, v12, 2u);
    MEMORY[0x24959AF80](v12, -1, -1);
  }

  v13 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return a1(v13);
}

uint64_t static LiveSpeechCategory.observeChangesAsync()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  if (qword_25778E050 != -1)
    swift_once();
  v0 = (void *)qword_25778E058;
  swift_getKeyPath();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777D7F0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0;
  sub_2487B4FC4();
  sub_2487872F4(&qword_25777D7F8, &qword_25777D7F0);
  v6 = sub_2487B539C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v10[1] = v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25777D800);
  v8 = sub_24871869C(&qword_25777D808, &qword_25777D800, MEMORY[0x24BDB9AF8]);
  MEMORY[0x249599D38](v7, v8);

  swift_release();
  return swift_release();
}

void sub_2487827FC()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_2487B5504();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
    qword_25778E058 = (uint64_t)v2;
  else
    __break(1u);
}

_QWORD *sub_248782870(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25777D888);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_248783A80(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_24878297C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25777D878);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v12 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_248786C14(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_248782A74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25777CBD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for LiveSpeechPhrase(uint64_t a1)
{
  return sub_24870A34C(a1, &qword_25778E0F0);
}

uint64_t sub_248782AD0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_248709700(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_248783678();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_2487831D4(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_248782B9C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777D870);
  v36 = a2;
  v6 = sub_2487B5B7C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_2487B5D5C();
    sub_2487B557C();
    result = sub_2487B5D98();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_248782EB0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777D860);
  v42 = a2;
  v6 = sub_2487B5B7C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_2487B5D5C();
    sub_2487B557C();
    result = sub_2487B5D98();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

unint64_t sub_2487831D4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_2487B5A08();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_2487B5D5C();
        swift_bridgeObjectRetain();
        sub_2487B557C();
        v9 = sub_2487B5D98();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_2487833A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_248709700(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_248783678();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_248782B9C(v15, a4 & 1);
  v21 = sub_248709700(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_2487B5D14();
  __break(1u);
  return result;
}

uint64_t sub_248783504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v6 = v5;
  v12 = *v5;
  v14 = sub_248709700(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_24878382C();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      result = swift_bridgeObjectRelease();
      *v21 = a1;
      v21[1] = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v20[7] + 16 * v14);
    *v26 = a1;
    v26[1] = a2;
    v27 = v20[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_248782EB0(v17, a5 & 1);
  v23 = sub_248709700(a3, a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_2487B5D14();
  __break(1u);
  return result;
}

void *sub_248783678()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777D870);
  v2 = *v0;
  v3 = sub_2487B5B70();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24878382C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777D860);
  v2 = *v0;
  v3 = sub_2487B5B70();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

_QWORD *sub_2487839E4(_QWORD *a1)
{
  return sub_248782870(0, a1[2], 0, a1);
}

uint64_t sub_2487839F8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_248783A80(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25445F120);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2487B5B94();
  __break(1u);
  return result;
}

void sub_248783B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  id v13;
  void *v14;
  void *v15;
  _QWORD *v16;

  if (qword_25778E050 != -1)
    swift_once();
  v13 = (id)qword_25778E058;
  v16 = (_QWORD *)_sSo14NSUserDefaultsC31TextToSpeechVoiceBankingSupportE15favoritePhrasesSaySDySSypGGvg_0();
  sub_24877EFC0(&v16, a3, a4, a1, a2, a5, a6);
  if (v6)
  {

    swift_bridgeObjectRelease();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25445F120);
    v14 = (void *)sub_2487B566C();
    swift_bridgeObjectRelease();
    v15 = (void *)sub_2487B5504();
    objc_msgSend(v13, sel_setObject_forKey_, v14, v15);

  }
}

uint64_t sub_248783CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  char v14;
  unint64_t v15;
  char v16;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[32];
  uint64_t v23;

  v23 = a2;
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
    return 0;
  v8 = 0;
  v9 = a1 + 32;
  while (1)
  {
    v10 = *(_QWORD *)(v9 + 8 * v8);
    swift_bridgeObjectRetain();
    if (*(_QWORD *)(v10 + 16))
    {
      v11 = sub_248709700(0x79726F6765746163, 0xEA00000000004449);
      if ((v12 & 1) != 0)
      {
        sub_2486F0814(*(_QWORD *)(v10 + 56) + 32 * v11, (uint64_t)v22);
        if ((swift_dynamicCast() & 1) != 0)
        {
          if (v20 == v23 && v21 == a3)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            v13 = sub_2487B5CE4();
            swift_bridgeObjectRelease();
            v14 = 0;
            if ((v13 & 1) == 0)
              goto LABEL_17;
          }
          if (*(_QWORD *)(v10 + 16))
          {
            v15 = sub_248709700(1954047348, 0xE400000000000000);
            if ((v16 & 1) != 0)
            {
              sub_2486F0814(*(_QWORD *)(v10 + 56) + 32 * v15, (uint64_t)v22);
              if ((swift_dynamicCast() & 1) != 0)
                break;
            }
          }
        }
      }
    }
    v14 = 0;
LABEL_17:
    if (v5)
      goto LABEL_24;
    swift_bridgeObjectRelease();
    if ((v14 & 1) != 0)
      return v8;
    if (v6 == ++v8)
      return 0;
  }
  if (v20 != a4 || v21 != a5)
  {
    v14 = sub_2487B5CE4();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  swift_bridgeObjectRelease();
LABEL_24:
  swift_bridgeObjectRelease();
  return v8;
}

void sub_248783EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v32 = a2;
  v11 = sub_2487B533C();
  v30 = *(_QWORD *)(v11 - 8);
  v31 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25778E050 != -1)
    swift_once();
  v14 = (id)qword_25778E058;
  swift_bridgeObjectRetain();
  v15 = _sSo14NSUserDefaultsC31TextToSpeechVoiceBankingSupportE04liveE10CategoriesSDySSSDyS2SGGvg_0();

  if (*(_QWORD *)(v15 + 16))
  {
    sub_248709700(a5, a6);
    if ((v16 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v17 = sub_2487B5BAC();
  swift_bridgeObjectRelease();
  if (v17 <= 1)
  {
LABEL_7:
    v18 = (id)qword_25778E058;
    v35 = (_QWORD *)_sSo14NSUserDefaultsC31TextToSpeechVoiceBankingSupportE15favoritePhrasesSaySDySSypGGvg_0();
    v19 = v33;
    sub_24877F4A4(&v35, a3, a4, a1, v32, a5, a6);
    if (v19)
    {

      swift_bridgeObjectRelease();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25445F120);
      v28 = (void *)sub_2487B566C();
      swift_bridgeObjectRelease();
      v29 = (void *)sub_2487B5504();
      objc_msgSend(v18, sel_setObject_forKey_, v28, v29);

    }
    return;
  }
  v20 = sub_2487B1130();
  swift_beginAccess();
  v21 = v30;
  v22 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v13, v20, v31);
  v23 = sub_2487B5324();
  v24 = sub_2487B57D4();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v36 = v26;
    *(_DWORD *)v25 = 136315138;
    v34 = sub_2486EDE5C(0xD000000000000048, 0x80000002487C72F0, &v36);
    sub_2487B593C();
    _os_log_impl(&dword_2486E6000, v23, v24, "%s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24959AF80](v26, -1, -1);
    MEMORY[0x24959AF80](v25, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v22);
  type metadata accessor for TTSVBError(0);
  sub_2486EDB24();
  swift_allocError();
  TTSVBError.init(_:_:_:)(0xD000000000000048, 0x80000002487C72F0, 0, 0, 0, v27);
  swift_willThrow();
}

uint64_t sub_248784298()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  if (qword_25778E050 != -1)
    swift_once();
  v0 = (id)qword_25778E058;
  v1 = _sSo14NSUserDefaultsC31TextToSpeechVoiceBankingSupportE15favoritePhrasesSaySDySSypGGvg_0();

  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    v3 = sub_2487B5B1C();
    type metadata accessor for LiveSpeechPhrase(v3);
    v4 = 0;
    do
    {
      v5 = v4 + 1;
      v6 = swift_bridgeObjectRetain();
      sub_24877E6A0(v6);
      sub_2487B5B04();
      sub_2487B5B28();
      sub_2487B5B34();
      sub_2487B5B10();
      v4 = v5;
    }
    while (v2 != v5);
    v7 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v7;
}

char *keypath_get_selector_liveSpeechPhrases()
{
  return sel_liveSpeechPhrases;
}

uint64_t sub_2487843CC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2487843F0()
{
  uint64_t v0;

  return sub_2487823EC(*(uint64_t (**)(uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), "Phrases did change. Notifying observers");
}

uint64_t sub_248784410(uint64_t a1, void *a2, char a3)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[32];
  uint64_t v29;

  result = MEMORY[0x24BEE4AF8];
  v29 = MEMORY[0x24BEE4AF8];
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    v6 = 0;
    v22 = MEMORY[0x24BEE4AD8] + 8;
    while (1)
    {
      v7 = *(_QWORD *)(a1 + 8 * v6 + 32);
      swift_bridgeObjectRetain();
      if (*(_QWORD *)(v7 + 16)
        && (v8 = sub_248709700(0x79726F6765746163, 0xEA00000000004449), (v9 & 1) != 0)
        && (sub_2486F0814(*(_QWORD *)(v7 + 56) + 32 * v8, (uint64_t)v28), swift_dynamicCast()))
      {
        v11 = v26;
        v10 = v27;
      }
      else
      {
        v11 = 0;
        v10 = 0;
      }
      v12 = objc_msgSend(a2, sel_categoryID, v22);
      v13 = sub_2487B5528();
      v15 = v14;

      if (v10)
      {
        if (v11 == v13 && v10 == v15)
        {
          swift_bridgeObjectRelease();
          v18 = swift_bridgeObjectRelease();
LABEL_21:
          type metadata accessor for LiveSpeechPhrase(v18);
          v20 = swift_bridgeObjectRetain();
          v19 = sub_24877E6A0(v20);
          if (v25)
          {
LABEL_25:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
          goto LABEL_22;
        }
        v17 = sub_2487B5CE4();
        swift_bridgeObjectRelease();
        v18 = swift_bridgeObjectRelease();
        if ((v17 & 1) != 0)
          goto LABEL_21;
      }
      else
      {
        v18 = swift_bridgeObjectRelease();
        if ((a3 & 1) != 0)
          goto LABEL_21;
      }
      v19 = 0;
      if (v25)
        goto LABEL_25;
LABEL_22:
      v21 = swift_bridgeObjectRelease();
      if (v19)
      {
        MEMORY[0x249599FCC](v21);
        if (*(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2487B569C();
        sub_2487B56C0();
        sub_2487B5690();
      }
      if (v5 == ++v6)
      {
        swift_bridgeObjectRelease();
        return v29;
      }
    }
  }
  return result;
}

uint64_t sub_248784654(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_248782870(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25445F120);
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_20;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[a2 + 4];
    if (a1 != a2 || &v4[a1 + 4] >= (_QWORD *)&v16[8 * v15])
      result = (uint64_t)memmove(&v4[a1 + 4], v16, 8 * v15);
    v17 = v4[2];
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(_QWORD *)v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_2487B5B94();
  __break(1u);
  return result;
}

char *sub_2487847C4()
{
  char *v0;
  char *v1;
  char *v2;
  char *v3;
  char *v4;

  v0 = (char *)objc_msgSend(objc_allocWithZone((Class)LiveSpeechCategory), sel_init);
  v1 = &v0[OBJC_IVAR___LiveSpeechCategory_name];
  swift_beginAccess();
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0xE000000000000000;
  v2 = v0;
  swift_bridgeObjectRelease();
  v3 = &v2[OBJC_IVAR___LiveSpeechCategory_symbol];
  swift_beginAccess();
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0xE000000000000000;
  swift_bridgeObjectRelease();
  v4 = &v2[OBJC_IVAR___LiveSpeechCategory_categoryID];
  swift_beginAccess();
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0xE000000000000000;

  swift_bridgeObjectRelease();
  return v2;
}

unint64_t sub_2487848A8()
{
  id v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  unsigned int v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  unsigned int v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  unint64_t v28;

  if (qword_25778E050 != -1)
    goto LABEL_33;
  while (1)
  {
    v0 = (id)qword_25778E058;
    v1 = _sSo14NSUserDefaultsC31TextToSpeechVoiceBankingSupportE04liveE10CategoriesSDySSSDyS2SGGvg_0();

    v2 = sub_24877F8C0(v1);
    swift_bridgeObjectRelease();
    v28 = v2;
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v3 = sub_2487B5B64();
    }
    else
    {
      v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
    }
    if (v3)
      break;
LABEL_12:
    swift_bridgeObjectRelease_n();
    v9 = (char *)objc_msgSend(objc_allocWithZone((Class)LiveSpeechCategory), sel_init);
    v10 = &v9[OBJC_IVAR___LiveSpeechCategory_name];
    swift_beginAccess();
    *(_QWORD *)v10 = 0x6465766153;
    *((_QWORD *)v10 + 1) = 0xE500000000000000;
    v11 = v9;
    swift_bridgeObjectRelease();
    v12 = &v11[OBJC_IVAR___LiveSpeechCategory_symbol];
    swift_beginAccess();
    *(_QWORD *)v12 = 0x6B72616D6B6F6F62;
    *((_QWORD *)v12 + 1) = 0xE800000000000000;
    swift_bridgeObjectRelease();
    v13 = &v11[OBJC_IVAR___LiveSpeechCategory_categoryID];
    swift_beginAccess();
    *(_QWORD *)v13 = 0x6465766153;
    *((_QWORD *)v13 + 1) = 0xE500000000000000;

    v14 = swift_bridgeObjectRelease();
    MEMORY[0x249599FCC](v14);
    if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2487B569C();
    sub_2487B56C0();
    sub_2487B5690();
    v2 = v28;
    if (v28 >> 62)
      goto LABEL_27;
LABEL_15:
    v15 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v15)
      goto LABEL_23;
LABEL_16:
    v16 = 4;
    while (1)
    {
      v17 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24959A434](v16 - 4, v2) : *(id *)(v2 + 8 * v16);
      v18 = v17;
      v19 = v16 - 3;
      if (__OFADD__(v16 - 4, 1))
        break;
      v20 = objc_msgSend(v17, sel_isRecents);

      if (v20)
      {
        swift_bridgeObjectRelease_n();
        return v2;
      }
      ++v16;
      if (v19 == v15)
        goto LABEL_23;
    }
LABEL_32:
    __break(1u);
LABEL_33:
    swift_once();
  }
  v4 = 4;
  while (1)
  {
    if ((v2 & 0xC000000000000001) != 0)
      v5 = (id)MEMORY[0x24959A434](v4 - 4, v2);
    else
      v5 = *(id *)(v2 + 8 * v4);
    v6 = v5;
    v7 = v4 - 3;
    if (__OFADD__(v4 - 4, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    v8 = objc_msgSend(v5, sel_isSaved);

    if (v8)
      break;
    ++v4;
    if (v7 == v3)
      goto LABEL_12;
  }
  swift_bridgeObjectRelease_n();
  if (!(v2 >> 62))
    goto LABEL_15;
LABEL_27:
  swift_bridgeObjectRetain_n();
  v15 = sub_2487B5B64();
  if (v15)
    goto LABEL_16;
LABEL_23:
  swift_bridgeObjectRelease_n();
  v21 = (char *)objc_msgSend(objc_allocWithZone((Class)LiveSpeechCategory), sel_init);
  v22 = &v21[OBJC_IVAR___LiveSpeechCategory_name];
  swift_beginAccess();
  *(_QWORD *)v22 = 0x73746E65636552;
  *((_QWORD *)v22 + 1) = 0xE700000000000000;
  v23 = v21;
  swift_bridgeObjectRelease();
  v24 = &v23[OBJC_IVAR___LiveSpeechCategory_symbol];
  swift_beginAccess();
  *(_QWORD *)v24 = 0x6B636F6C63;
  *((_QWORD *)v24 + 1) = 0xE500000000000000;
  swift_bridgeObjectRelease();
  v25 = &v23[OBJC_IVAR___LiveSpeechCategory_categoryID];
  swift_beginAccess();
  *(_QWORD *)v25 = 0x73746E65636552;
  *((_QWORD *)v25 + 1) = 0xE700000000000000;

  v26 = swift_bridgeObjectRelease();
  MEMORY[0x249599FCC](v26);
  if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_2487B569C();
  sub_2487B56C0();
  sub_2487B5690();
  return v28;
}

uint64_t sub_248784D18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  BOOL v18;
  int64_t v19;
  int64_t v20;

  v2 = v1;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v20 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  if (!v7)
    goto LABEL_5;
LABEL_4:
  v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v16 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16 && (sub_248709700(1701667182, 0xE400000000000000), (v17 & 1) != 0))
    {
      sub_2486ED9E0();
      v18 = sub_2487B599C() == 0;
      if (v2)
        goto LABEL_30;
    }
    else
    {
      v18 = 0;
      if (v2)
      {
LABEL_30:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v15;
      }
    }
    if (v18)
    {
      swift_release();
      return v15;
    }
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v7)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v9++, 1))
      break;
    if (v9 >= v20)
      goto LABEL_32;
    v13 = *(_QWORD *)(v4 + 8 * v9);
    if (!v13)
    {
      v14 = v9 + 1;
      if (v9 + 1 >= v20)
        goto LABEL_32;
      v13 = *(_QWORD *)(v4 + 8 * v14);
      if (v13)
        goto LABEL_14;
      v14 = v9 + 2;
      if (v9 + 2 >= v20)
        goto LABEL_32;
      v13 = *(_QWORD *)(v4 + 8 * v14);
      if (v13)
        goto LABEL_14;
      v14 = v9 + 3;
      if (v9 + 3 >= v20)
        goto LABEL_32;
      v13 = *(_QWORD *)(v4 + 8 * v14);
      if (v13)
      {
LABEL_14:
        v9 = v14;
        goto LABEL_15;
      }
      v19 = v9 + 4;
      if (v9 + 4 >= v20)
      {
LABEL_32:
        swift_release();
        return 0;
      }
      v13 = *(_QWORD *)(v4 + 8 * v19);
      for (v9 += 4; !v13; ++v19)
      {
        v9 = v19 + 1;
        if (__OFADD__(v19, 1))
          goto LABEL_35;
        if (v9 >= v20)
          goto LABEL_32;
        v13 = *(_QWORD *)(v4 + 8 * v9);
      }
    }
LABEL_15:
    v7 = (v13 - 1) & v13;
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

char *sub_248784F80(uint64_t a1, uint64_t a2)
{
  id v4;
  unint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t *v20;

  if (qword_25778E050 != -1)
    swift_once();
  v4 = (id)qword_25778E058;
  swift_bridgeObjectRetain();
  v5 = _sSo14NSUserDefaultsC31TextToSpeechVoiceBankingSupportE04liveE10CategoriesSDySSSDyS2SGGvg_0();

  if (*(_QWORD *)(v5 + 16) && (v6 = sub_248709700(a1, a2), (v7 & 1) != 0))
  {
    v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v9 = swift_bridgeObjectRelease();
    type metadata accessor for LiveSpeechCategory(v9);
    swift_bridgeObjectRetain();
    return sub_248780180(a1, a2, v8);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v11 = sub_2487B5BAC();
    v12 = swift_bridgeObjectRelease();
    if (v11 == 1)
    {
      v13 = 0xE700000000000000;
      v14 = 0x73746E65636552;
      v15 = 0xE500000000000000;
      v16 = 0x6B636F6C63;
    }
    else
    {
      if (v11)
        return 0;
      v13 = 0xE500000000000000;
      v14 = 0x6465766153;
      v15 = 0xE800000000000000;
      v16 = 0x6B72616D6B6F6F62;
    }
    type metadata accessor for LiveSpeechCategory(v12);
    v17 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    v18 = (uint64_t *)&v17[OBJC_IVAR___LiveSpeechCategory_name];
    swift_beginAccess();
    *v18 = v14;
    v18[1] = v13;
    v10 = v17;
    swift_bridgeObjectRelease();
    v19 = (uint64_t *)&v10[OBJC_IVAR___LiveSpeechCategory_symbol];
    swift_beginAccess();
    *v19 = v16;
    v19[1] = v15;
    swift_bridgeObjectRelease();
    v20 = (uint64_t *)&v10[OBJC_IVAR___LiveSpeechCategory_categoryID];
    swift_beginAccess();
    *v20 = v14;
    v20[1] = v13;
    swift_bridgeObjectRelease();

  }
  return v10;
}

uint64_t sub_2487851BC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v30 = a6;
  v31 = a7;
  v32 = a4;
  v33 = a5;
  v34 = sub_2487B533C();
  v10 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25778E050 != -1)
    swift_once();
  v13 = (id)qword_25778E058;
  v14 = _sSo14NSUserDefaultsC31TextToSpeechVoiceBankingSupportE04liveE10CategoriesSDySSSDyS2SGGvg_0();

  swift_bridgeObjectRetain();
  sub_248784D18(v14);
  v16 = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v16)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 = sub_2487B1130();
    swift_beginAccess();
    v18 = v34;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v17, v34);
    v19 = sub_2487B5324();
    v20 = sub_2487B57D4();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v37 = v22;
      *(_DWORD *)v21 = 136315138;
      v35 = sub_2486EDE5C(0xD00000000000004BLL, 0x80000002487C7220, &v37);
      sub_2487B593C();
      _os_log_impl(&dword_2486E6000, v19, v20, "%s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v22, -1, -1);
      MEMORY[0x24959AF80](v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v18);
    type metadata accessor for TTSVBError(0);
    sub_2486EDB24();
    swift_allocError();
    TTSVBError.init(_:_:_:)(0xD00000000000004BLL, 0x80000002487C7220, 0, 0, 0, v23);
    return swift_willThrow();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25777D880);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2487BD7B0;
    *(_QWORD *)(inited + 32) = 1701667182;
    *(_QWORD *)(inited + 40) = 0xE400000000000000;
    *(_QWORD *)(inited + 48) = a2;
    *(_QWORD *)(inited + 56) = a3;
    *(_QWORD *)(inited + 64) = 0x6C6F626D7973;
    *(_QWORD *)(inited + 72) = 0xE600000000000000;
    v26 = v31;
    *(_QWORD *)(inited + 80) = v30;
    *(_QWORD *)(inited + 88) = v26;
    swift_bridgeObjectRetain();
    v27 = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = sub_24877DDF4(inited);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v36 = *a1;
    *a1 = 0x8000000000000000;
    sub_2487833A8(v28, v32, v27, isUniquelyReferenced_nonNull_native);
    *a1 = v36;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

char *sub_248785550(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  void *v20;
  id v21;
  char *v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v28;
  unint64_t v29[3];
  uint64_t v30;

  v8 = sub_2487B5228();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0) + 40;
  sub_2487B521C();
  v12 = sub_2487B51EC();
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (qword_25778E050 != -1)
    swift_once();
  v15 = (id)qword_25778E058;
  v29[0] = _sSo14NSUserDefaultsC31TextToSpeechVoiceBankingSupportE04liveE10CategoriesSDySSSDyS2SGGvg_0();
  v16 = v30;
  sub_2487851BC((uint64_t *)v29, a1, a2, v12, v14, a3, (uint64_t)a4);
  if (v16)
  {
    swift_bridgeObjectRelease();

  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25777D790);
    v17 = sub_2487B545C();
    v30 = v12;
    v18 = a4;
    v28 = v14;
    v19 = (void *)v17;
    swift_bridgeObjectRelease();
    v20 = (void *)sub_2487B5504();
    objc_msgSend(v15, sel_setObject_forKey_, v19, v20);

    notify_post("com.apple.livespeech.localprefschanged");
    v21 = objc_allocWithZone((Class)LiveSpeechCategory);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22 = (char *)objc_msgSend(v21, sel_init);
    v23 = (uint64_t *)&v22[OBJC_IVAR___LiveSpeechCategory_name];
    swift_beginAccess();
    *v23 = a1;
    v23[1] = a2;
    a4 = v22;
    swift_bridgeObjectRelease();
    v24 = (uint64_t *)&a4[OBJC_IVAR___LiveSpeechCategory_symbol];
    swift_beginAccess();
    *v24 = a3;
    v24[1] = (uint64_t)v18;
    swift_bridgeObjectRelease();
    v25 = (uint64_t *)&a4[OBJC_IVAR___LiveSpeechCategory_categoryID];
    swift_beginAccess();
    v26 = v28;
    *v25 = v30;
    v25[1] = v26;

  }
  swift_bridgeObjectRelease();
  return a4;
}

uint64_t sub_248785800(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  char **v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  uint64_t result;
  int64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[4];

  v4 = sub_2487B533C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  v44 = a1;
  v8 = sub_2487B5BAC();
  swift_bridgeObjectRelease();
  if (v8 <= 1)
  {
    v9 = sub_2487B1130();
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
    swift_bridgeObjectRetain_n();
    v10 = sub_2487B5324();
    v11 = sub_2487B57D4();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v46 = v13;
      *(_DWORD *)v12 = 136315138;
      swift_bridgeObjectRetain();
      v45 = sub_2486EDE5C(v44, a2, &v46);
      sub_2487B593C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2486E6000, v10, v11, "Cannot delete category with ID: %s. System categories cant be deleted", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v13, -1, -1);
      MEMORY[0x24959AF80](v12, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  if (qword_25778E050 != -1)
LABEL_50:
    swift_once();
  v14 = (id)qword_25778E058;
  v48[0] = _sSo14NSUserDefaultsC31TextToSpeechVoiceBankingSupportE04liveE10CategoriesSDySSSDyS2SGGvg_0();
  sub_248782AD0(v44, a2);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777D790);
  v15 = (void *)sub_2487B545C();
  swift_bridgeObjectRelease();
  v16 = (void *)sub_2487B5504();
  v17 = &selRef_setPredicate_;
  objc_msgSend(v14, sel_setObject_forKey_, v15, v16);

  v18 = (id)qword_25778E058;
  v19 = _sSo14NSUserDefaultsC31TextToSpeechVoiceBankingSupportE15favoritePhrasesSaySDySSypGGvg_0();
  v45 = v19;
  v20 = *(_QWORD *)(v19 + 16);
  if (!v20)
  {
    v22 = 0;
    v28 = 0;
    goto LABEL_47;
  }
  v21 = (_QWORD *)v19;
  swift_bridgeObjectRetain();
  v22 = 0;
  while (1)
  {
    v23 = v21[v22 + 4];
    if (!*(_QWORD *)(v23 + 16))
      goto LABEL_8;
    swift_bridgeObjectRetain();
    v24 = sub_248709700(0x79726F6765746163, 0xEA00000000004449);
    if ((v25 & 1) != 0)
    {
      sub_2486F0814(*(_QWORD *)(v23 + 56) + 32 * v24, (uint64_t)v48);
      if ((swift_dynamicCast() & 1) != 0)
        break;
    }
    swift_bridgeObjectRelease();
LABEL_8:
    if (v20 == ++v22)
    {
      swift_bridgeObjectRelease();
      v22 = v21[2];
      v28 = v22;
      v17 = &selRef_setPredicate_;
LABEL_47:
      sub_248784654(v22, v28);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25445F120);
      v42 = (void *)sub_2487B566C();
      swift_bridgeObjectRelease();
      v43 = (void *)sub_2487B5504();
      objc_msgSend(v18, v17[32], v42, v43);

      return notify_post("com.apple.livespeech.localprefschanged");
    }
  }
  if (v46 != v44 || v47 != a2)
  {
    v26 = sub_2487B5CE4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v26 & 1) != 0)
      goto LABEL_21;
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_21:
  result = swift_bridgeObjectRelease();
  v28 = v22 + 1;
  v17 = &selRef_setPredicate_;
  if (__OFADD__(v22, 1))
    goto LABEL_56;
  v29 = v21[2];
  if (v28 == v29)
  {
LABEL_46:
    if (v28 < v22)
      goto LABEL_55;
    goto LABEL_47;
  }
  v30 = v22 + 5;
  while (2)
  {
    v34 = v30 - 4;
    if (v30 - 4 >= v29)
    {
      __break(1u);
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    v35 = v21[v30];
    swift_bridgeObjectRetain();
    if (*(_QWORD *)(v35 + 16)
      && (v36 = sub_248709700(0x79726F6765746163, 0xEA00000000004449), (v37 & 1) != 0)
      && (sub_2486F0814(*(_QWORD *)(v35 + 56) + 32 * v36, (uint64_t)v48), (swift_dynamicCast() & 1) != 0))
    {
      if (v46 == v44 && v47 == a2)
      {
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        goto LABEL_26;
      }
      v41 = sub_2487B5CE4();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if ((v41 & 1) != 0)
      {
LABEL_26:
        v29 = v21[2];
        v32 = v30 + 1;
        v33 = v30 - 3;
        ++v30;
        if (v33 == v29)
        {
          v28 = v32 - 4;
          v17 = &selRef_setPredicate_;
          goto LABEL_46;
        }
        continue;
      }
    }
    else
    {
      result = swift_bridgeObjectRelease();
    }
    break;
  }
  if (v34 == v22)
  {
LABEL_25:
    if (__OFADD__(v22++, 1))
      goto LABEL_49;
    goto LABEL_26;
  }
  if ((v22 & 0x8000000000000000) == 0)
  {
    v38 = v21[2];
    if (v22 >= v38)
      goto LABEL_52;
    if (v34 >= v38)
      goto LABEL_53;
    v39 = v21[v22 + 4];
    v40 = v21[v30];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v21 = sub_2487839E4(v21);
    v21[v22 + 4] = v40;
    result = swift_bridgeObjectRelease();
    if (v34 >= v21[2])
      goto LABEL_54;
    v21[v30] = v39;
    result = swift_bridgeObjectRelease();
    v45 = (uint64_t)v21;
    goto LABEL_25;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
  return result;
}

uint64_t sub_248785E8C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v34;
  char v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;

  v48 = a5;
  v9 = sub_2487B533C();
  v49 = *(_QWORD *)(v9 - 8);
  v50 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v47 = (char *)&v47 - v13;
  if (qword_25778E050 != -1)
    swift_once();
  v14 = (id)qword_25778E058;
  v15 = _sSo14NSUserDefaultsC31TextToSpeechVoiceBankingSupportE04liveE10CategoriesSDySSSDyS2SGGvg_0();

  swift_bridgeObjectRetain();
  sub_248784D18(v15);
  v17 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v17)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = sub_2487B1130();
    swift_beginAccess();
    v20 = v49;
    v19 = v50;
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v11, v18, v50);
    v21 = sub_2487B5324();
    v22 = sub_2487B57D4();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v54 = v24;
      *(_DWORD *)v23 = 136315138;
      v51 = sub_2486EDE5C(0xD00000000000004BLL, 0x80000002487C7220, &v54);
      sub_2487B593C();
      _os_log_impl(&dword_2486E6000, v21, v22, "%s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v24, -1, -1);
      MEMORY[0x24959AF80](v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v19);
    type metadata accessor for TTSVBError(0);
    sub_2486EDB24();
    swift_allocError();
    v26 = v25;
    v27 = 0xD00000000000004BLL;
    v28 = 0x80000002487C7220;
LABEL_7:
    TTSVBError.init(_:_:_:)(v27, v28, 0, 0, 0, v26);
    return swift_willThrow();
  }
  v30 = v48;
  v31 = sub_248782AD0(a4, v48);
  if (!v31)
  {
    v52 = 0;
    v53 = 0xE000000000000000;
    sub_2487B5AA4();
    sub_2487B55AC();
    sub_2487B55AC();
    v36 = v52;
    v37 = v53;
    v38 = sub_2487B1130();
    swift_beginAccess();
    v39 = v49;
    v40 = v50;
    v41 = v47;
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v47, v38, v50);
    swift_bridgeObjectRetain_n();
    v42 = sub_2487B5324();
    v43 = sub_2487B57D4();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      v45 = swift_slowAlloc();
      v54 = v45;
      *(_DWORD *)v44 = 136315138;
      swift_bridgeObjectRetain();
      v51 = sub_2486EDE5C(v36, v37, &v54);
      sub_2487B593C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2486E6000, v42, v43, "%s", v44, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v45, -1, -1);
      MEMORY[0x24959AF80](v44, -1, -1);

      (*(void (**)(char *, uint64_t))(v39 + 8))(v47, v50);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v40);
    }
    type metadata accessor for TTSVBError(0);
    sub_2486EDB24();
    swift_allocError();
    v26 = v46;
    v27 = v36;
    v28 = v37;
    goto LABEL_7;
  }
  v32 = v31;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v52 = v32;
  sub_248783504(a2, a3, 1701667182, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
  v34 = v52;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v35 = swift_isUniquelyReferenced_nonNull_native();
  v52 = *a1;
  *a1 = 0x8000000000000000;
  sub_2487833A8(v34, a4, v30, v35);
  *a1 = v52;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return notify_post("com.apple.livespeech.localprefschanged");
}

void sub_24878642C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;

  v9 = sub_2487B533C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  v13 = sub_2487B5BAC();
  swift_bridgeObjectRelease();
  if (v13 > 1)
  {
    if (qword_25778E050 != -1)
      swift_once();
    v21 = (id)qword_25778E058;
    v28 = _sSo14NSUserDefaultsC31TextToSpeechVoiceBankingSupportE04liveE10CategoriesSDySSSDyS2SGGvg_0();
    sub_248785E8C((uint64_t *)&v28, a3, a4, a1, a2);
    if (v4)
    {

      swift_bridgeObjectRelease();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25777D790);
      v23 = (void *)sub_2487B545C();
      swift_bridgeObjectRelease();
      v24 = (void *)sub_2487B5504();
      objc_msgSend(v21, sel_setObject_forKey_, v23, v24);

    }
  }
  else
  {
    v28 = 0;
    v29 = 0xE000000000000000;
    sub_2487B5AA4();
    sub_2487B55AC();
    sub_2487B55AC();
    sub_2487B55AC();
    v14 = v28;
    v15 = v29;
    v16 = sub_2487B1130();
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v16, v9);
    swift_bridgeObjectRetain_n();
    v17 = sub_2487B5324();
    v18 = sub_2487B57D4();
    if (os_log_type_enabled(v17, v18))
    {
      v26 = v14;
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v30 = v20;
      v25 = v9;
      *(_DWORD *)v19 = 136315138;
      swift_bridgeObjectRetain();
      v27 = sub_2486EDE5C(v26, v15, &v30);
      v14 = v26;
      sub_2487B593C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2486E6000, v17, v18, "%s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v20, -1, -1);
      MEMORY[0x24959AF80](v19, -1, -1);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v25);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
    type metadata accessor for TTSVBError(0);
    sub_2486EDB24();
    swift_allocError();
    TTSVBError.init(_:_:_:)(v14, v15, 0, 0, 0, v22);
    swift_willThrow();
  }
}

uint64_t sub_248786804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  id v21;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;

  v9 = sub_2487B533C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  v13 = sub_2487B5BAC();
  swift_bridgeObjectRelease();
  if (v13 > 1)
  {
    if (qword_25778E050 != -1)
      swift_once();
    v21 = (id)qword_25778E058;
    v29 = _sSo14NSUserDefaultsC31TextToSpeechVoiceBankingSupportE04liveE10CategoriesSDySSSDyS2SGGvg_0();
    sub_248781ECC((uint64_t *)&v29, a1, a2, a3, a4);
    if (v4)
    {

      return swift_bridgeObjectRelease();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25777D790);
      v24 = (void *)sub_2487B545C();
      swift_bridgeObjectRelease();
      v25 = (void *)sub_2487B5504();
      objc_msgSend(v21, sel_setObject_forKey_, v24, v25);

      return notify_post("com.apple.livespeech.localprefschanged");
    }
  }
  else
  {
    v29 = 0;
    v30 = 0xE000000000000000;
    sub_2487B5AA4();
    sub_2487B55AC();
    sub_2487B55AC();
    sub_2487B55AC();
    v14 = v29;
    v15 = v30;
    v16 = sub_2487B1130();
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v16, v9);
    swift_bridgeObjectRetain_n();
    v17 = sub_2487B5324();
    v18 = sub_2487B57D4();
    if (os_log_type_enabled(v17, v18))
    {
      v27 = v14;
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v31 = v20;
      v26 = v9;
      *(_DWORD *)v19 = 136315138;
      swift_bridgeObjectRetain();
      v28 = sub_2486EDE5C(v27, v15, &v31);
      v14 = v27;
      sub_2487B593C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2486E6000, v17, v18, "%s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24959AF80](v20, -1, -1);
      MEMORY[0x24959AF80](v19, -1, -1);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v26);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
    type metadata accessor for TTSVBError(0);
    sub_2486EDB24();
    swift_allocError();
    TTSVBError.init(_:_:_:)(v14, v15, 0, 0, 0, v23);
    return swift_willThrow();
  }
}

char *keypath_get_selector_liveSpeechCategories()
{
  return sel_liveSpeechCategories;
}

uint64_t sub_248786BF4()
{
  uint64_t v0;

  return sub_2487823EC(*(uint64_t (**)(uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), "Categories did change. Notifying observers");
}

char *sub_248786C14(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_2487B5B94();
  __break(1u);
  return result;
}

void _sSo18LiveSpeechCategoryC06TextToB19VoiceBankingSupportE27addSystemCategoriesIfNeededyyFZ_0()
{
  id v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  unsigned int v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  unsigned __int8 v18;
  unint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  char v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char isUniquelyReferenced_nonNull_native;
  void *v42;
  void *v43;
  id v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;

  if (qword_25778E050 != -1)
    goto LABEL_56;
  while (1)
  {
    v0 = (id)qword_25778E058;
    v1 = _sSo14NSUserDefaultsC31TextToSpeechVoiceBankingSupportE04liveE10CategoriesSDySSSDyS2SGGvg_0();

    v2 = sub_24877F8C0(v1);
    swift_bridgeObjectRelease();
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      v3 = sub_2487B5B64();
      if (v3)
      {
LABEL_4:
        v4 = v2 & 0xC000000000000001;
        v5 = 4;
        do
        {
          v6 = v4 ? (id)MEMORY[0x24959A434](v5 - 4, v2) : *(id *)(v2 + 8 * v5);
          v7 = v6;
          v8 = v5 - 3;
          if (__OFADD__(v5 - 4, 1))
            goto LABEL_55;
          v9 = objc_msgSend(v6, sel_isSaved);

          if (v9)
          {
            swift_bridgeObjectRelease();
            v13 = (char *)MEMORY[0x24BEE4AF8];
            goto LABEL_16;
          }
          ++v5;
        }
        while (v8 != v3);
      }
    }
    else
    {
      v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v3)
        goto LABEL_4;
    }
    swift_bridgeObjectRelease();
    v10 = sub_24878297C(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v12 = *((_QWORD *)v10 + 2);
    v11 = *((_QWORD *)v10 + 3);
    if (v12 >= v11 >> 1)
      v10 = sub_24878297C((char *)(v11 > 1), v12 + 1, 1, v10);
    *((_QWORD *)v10 + 2) = v12 + 1;
    v10[v12 + 32] = 0;
    if (v3)
    {
      v13 = v10;
      v4 = v2 & 0xC000000000000001;
LABEL_16:
      swift_bridgeObjectRetain();
      v14 = 4;
      while (1)
      {
        v15 = v4 ? (id)MEMORY[0x24959A434](v14 - 4, v2) : *(id *)(v2 + 8 * v14);
        v16 = v15;
        v17 = v14 - 3;
        if (__OFADD__(v14 - 4, 1))
          goto LABEL_54;
        v18 = objc_msgSend(v15, sel_isRecents);

        if ((v18 & 1) != 0)
        {
          swift_bridgeObjectRelease_n();
          v10 = v13;
          if (*((_QWORD *)v13 + 2))
            goto LABEL_30;
          swift_bridgeObjectRelease();
          return;
        }
        ++v14;
        if (v17 == v3)
        {
          swift_bridgeObjectRelease();
          v10 = v13;
          break;
        }
      }
    }
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_24878297C(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v20 = *((_QWORD *)v10 + 2);
    v19 = *((_QWORD *)v10 + 3);
    if (v20 >= v19 >> 1)
      v10 = sub_24878297C((char *)(v19 > 1), v20 + 1, 1, v10);
    *((_QWORD *)v10 + 2) = v20 + 1;
    v10[v20 + 32] = 1;
LABEL_30:
    v21 = (id)qword_25778E058;
    _sSo14NSUserDefaultsC31TextToSpeechVoiceBankingSupportE04liveE10CategoriesSDySSSDyS2SGGvg_0();
    v46 = *((_QWORD *)v10 + 2);
    if (!v46)
      break;
    v44 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25777D860);
    swift_bridgeObjectRetain();
    v22 = 0;
    v45 = v10;
    while (1)
    {
      if (v10[v22 + 32])
        v23 = 0x73746E65636552;
      else
        v23 = 0x6465766153;
      v24 = 0xE500000000000000;
      if (v10[v22 + 32])
        v25 = 0xE700000000000000;
      else
        v25 = 0xE500000000000000;
      v26 = 0x6B72616D6B6F6F62;
      if (v10[v22 + 32])
        v26 = 0x6B636F6C63;
      v47 = v26;
      if (!v10[v22 + 32])
        v24 = 0xE800000000000000;
      v48 = v24;
      v27 = (_QWORD *)sub_2487B5B88();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v28 = sub_248709700(1701667182, 0xE400000000000000);
      if ((v29 & 1) != 0)
        break;
      *(_QWORD *)((char *)v27 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v28;
      v30 = (_QWORD *)(v27[6] + 16 * v28);
      *v30 = 1701667182;
      v30[1] = 0xE400000000000000;
      v31 = (uint64_t *)(v27[7] + 16 * v28);
      *v31 = v23;
      v31[1] = v25;
      v32 = v27[2];
      v33 = __OFADD__(v32, 1);
      v34 = v32 + 1;
      if (v33)
        goto LABEL_51;
      v27[2] = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v35 = sub_248709700(0x6C6F626D7973, 0xE600000000000000);
      if ((v36 & 1) != 0)
        goto LABEL_52;
      *(_QWORD *)((char *)v27 + ((v35 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v35;
      v37 = (_QWORD *)(v27[6] + 16 * v35);
      *v37 = 0x6C6F626D7973;
      v37[1] = 0xE600000000000000;
      v38 = (uint64_t *)(v27[7] + 16 * v35);
      *v38 = v47;
      v38[1] = v48;
      v39 = v27[2];
      v33 = __OFADD__(v39, 1);
      v40 = v39 + 1;
      if (v33)
        goto LABEL_53;
      ++v22;
      v27[2] = v40;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25777D868);
      swift_arrayDestroy();
      swift_release();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_2487833A8((uint64_t)v27, v23, v25, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = v45;
      if (v46 == v22)
      {
        swift_bridgeObjectRelease();
        v21 = v44;
        goto LABEL_48;
      }
    }
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    swift_once();
  }
LABEL_48:
  __swift_instantiateConcreteTypeFromMangledName(&qword_25777D790);
  v42 = (void *)sub_2487B545C();
  swift_bridgeObjectRelease();
  v43 = (void *)sub_2487B5504();
  objc_msgSend(v21, sel_setObject_forKey_, v42, v43);
  swift_bridgeObjectRelease();

}

