uint64_t sub_2413E0758()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2413E0764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 80);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543813D8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v9);
  }
}

uint64_t sub_2413E07F0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2413E07FC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 80) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543813D8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2413E0874()
{
  return sub_2412DC484(&qword_254380DD8, &qword_254380DE0, (uint64_t (*)(void))sub_2412CF0DC, MEMORY[0x24BDF0390]);
}

uint64_t sub_2413E08C8()
{
  return sub_24130288C(sub_2413DE508);
}

uint64_t sub_2413E08D8(char *a1, unsigned __int8 *a2)
{
  unsigned __int8 v4;
  unsigned __int8 v6;
  char v7;

  type metadata accessor for ArtworkCornerModifier(0);
  v4 = *a2;
  v7 = *a1;
  v6 = v4;
  return sub_2413DE684(&v7, &v6);
}

uint64_t sub_2413E0944()
{
  return sub_24130288C(sub_2413DEA60);
}

uint64_t sub_2413E0950()
{
  uint64_t v0;

  return sub_2413DEB5C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2413E0968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for ArtworkCornerModifier(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  sub_2412C821C(*(_QWORD *)v3, *(_BYTE *)(v3 + 8));
  if ((*(_BYTE *)(v3 + 56) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1(v3 + 16);
  else
    swift_release();
  sub_2412C821C(*(_QWORD *)(v3 + 64), *(_BYTE *)(v3 + 72));
  swift_release();
  swift_release();
  v4 = v3 + *(int *)(v1 + 36);
  v5 = v4 + *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
  v6 = sub_2414B38C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813D8);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2413E0A5C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for ArtworkCornerModifier(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_2413DED28(v0 + v2, *(unsigned __int8 *)(v0 + v2 + *(_QWORD *)(v1 + 64)));
}

uint64_t sub_2413E0A94()
{
  uint64_t v0;

  return sub_2413DEFD4(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_2413E0AB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for ArtworkCornerModifier(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 17) & ~v2);
  sub_2412C821C(*(_QWORD *)v3, *(_BYTE *)(v3 + 8));
  if ((*(_BYTE *)(v3 + 56) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1(v3 + 16);
  else
    swift_release();
  sub_2412C821C(*(_QWORD *)(v3 + 64), *(_BYTE *)(v3 + 72));
  swift_release();
  swift_release();
  v4 = v3 + *(int *)(v1 + 36);
  v5 = v4 + *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
  v6 = sub_2414B38C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813D8);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2413E0BA0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ArtworkCornerModifier(0) - 8) + 80);
  return sub_2413DF0C4(*(_BYTE *)(v0 + 16), v0 + ((v1 + 17) & ~v1));
}

uint64_t sub_2413E0BD0()
{
  return swift_deallocObject();
}

uint64_t sub_2413E0BE0()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543813B0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543813B8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380DD0);
  sub_2412DC484(&qword_254380DC8, &qword_254380DD0, (uint64_t (*)(void))sub_2412CF178, MEMORY[0x24BDF0910]);
  sub_2412DC440();
  swift_getOpaqueTypeConformance2();
  sub_2412DC4EC();
  swift_getOpaqueTypeConformance2();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2413E0CE0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2413E0CF4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571271F0;
  if (!qword_2571271F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571271E0);
    v2[0] = sub_241300CB4(&qword_2571271F8, &qword_2571271D8, (unint64_t *)&unk_257127200, &qword_2571271E8);
    v2[1] = sub_2412C8030(qword_254380330, type metadata accessor for ArtworkInnerStrokeModifier, (uint64_t)&unk_2414C37C8);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571271F0);
  }
  return result;
}

uint64_t sub_2413E0D98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v4 = sub_2414B28C0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v40 - v9;
  v44 = a1;
  v45 = a2;
  sub_2414B2890();
  sub_2414B28B4();
  v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v10, v4);
  v42 = sub_2412F6D88();
  v12 = sub_2414B5434();
  v11(v7, v4);
  v13 = *(_QWORD *)(v12 + 16);
  v14 = MEMORY[0x24BEE4AF8];
  if (v13)
  {
    v15 = (unint64_t *)(v12 + 40);
    v16 = (unint64_t *)MEMORY[0x24BEE4AF8];
    do
    {
      v21 = *(v15 - 1);
      v20 = *v15;
      v22 = HIBYTE(*v15) & 0xF;
      if ((*v15 & 0x2000000000000000) == 0)
        v22 = v21 & 0xFFFFFFFFFFFFLL;
      if (v22)
      {
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v44 = (uint64_t)v16;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_2412FD870(0, v16[2] + 1, 1);
          v16 = (unint64_t *)v44;
        }
        v18 = v16[2];
        v17 = v16[3];
        if (v18 >= v17 >> 1)
        {
          sub_2412FD870(v17 > 1, v18 + 1, 1);
          v16 = (unint64_t *)v44;
        }
        v16[2] = v18 + 1;
        v19 = &v16[2 * v18];
        v19[4] = v21;
        v19[5] = v20;
      }
      v15 += 2;
      --v13;
    }
    while (v13);
  }
  else
  {
    v16 = (unint64_t *)MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  v24 = v16[2];
  if (!v24)
  {
    swift_release();
    return v24;
  }
  result = sub_2414B4D98();
  if (v16[2] >= v24)
  {
    v27 = result;
    v28 = v26;
    v29 = v24 - 1;
    if (v24 == 1)
    {
      swift_release();
      v30 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v40 = v26;
      v41 = result;
      v43 = v14;
      sub_2412FD870(0, v24 - 1, 0);
      v30 = v43;
      v31 = (uint64_t *)(v16 + 7);
      do
      {
        v32 = *v31;
        v44 = *(v31 - 1);
        v45 = v32;
        v33 = sub_2414B5440();
        v35 = v34;
        v43 = v30;
        v37 = *(_QWORD *)(v30 + 16);
        v36 = *(_QWORD *)(v30 + 24);
        if (v37 >= v36 >> 1)
        {
          sub_2412FD870(v36 > 1, v37 + 1, 1);
          v30 = v43;
        }
        v31 += 2;
        *(_QWORD *)(v30 + 16) = v37 + 1;
        v38 = v30 + 16 * v37;
        *(_QWORD *)(v38 + 32) = v33;
        *(_QWORD *)(v38 + 40) = v35;
        --v29;
      }
      while (v29);
      swift_release();
      v28 = v40;
      v27 = v41;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543815F0);
    v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_2414B72B0;
    *(_QWORD *)(v39 + 32) = v27;
    *(_QWORD *)(v39 + 40) = v28;
    v44 = v39;
    sub_2413CB4F8(v30);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543814A0);
    sub_2413000B8();
    v24 = sub_2414B4CB4();
    swift_bridgeObjectRelease();
    return v24;
  }
  __break(1u);
  return result;
}

uint64_t sub_2413E10CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543844C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2413E1114(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1)
    return v5 ^ 1u;
  if (a1 >> 14 >= v4)
  {
    v7 = sub_2414B4E64();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v14 = *(_QWORD **)(a4 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_2412F7650(0, v14[2] + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_2412F7650((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  result = sub_2414B5668();
  __break(1u);
  return result;
}

uint64_t sub_2413E126C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2413E1290()
{
  return swift_deallocObject();
}

uint64_t sub_2413E12A0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 + 128) = a2;
  *(_QWORD *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = v2;
  *(_QWORD *)(v3 + 48) = swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  *(_QWORD *)(v3 + 56) = swift_task_alloc();
  *(_QWORD *)(v3 + 64) = sub_2414B4FC0();
  *(_QWORD *)(v3 + 72) = sub_2414B4FB4();
  *(_QWORD *)(v3 + 80) = sub_2414B4F90();
  *(_QWORD *)(v3 + 88) = v4;
  return swift_task_switch();
}

uint64_t sub_2413E1344()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (**v4)(uint64_t, void *, void *);
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;

  v1 = *(_BYTE *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_textureProvider + 8) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v3 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_resizeTexture) = 0;
  v4 = (uint64_t (**)(uint64_t, void *, void *))(v3
                                                        + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_textureFallbackCopyAllocator);
  *v4 = sub_2413E3700;
  v4[1] = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer____lazy_storage___isBlurDisabled) = 2;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_context) = v2;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_contentMode) = v1;
  v5 = type metadata accessor for MaterialRenderer();
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 24) = v5;
  swift_retain();
  v6 = objc_msgSendSuper2((objc_super *)(v0 + 16), sel_init);
  v7 = v6;
  *(_QWORD *)(v0 + 96) = v6;
  if (qword_257127218)
  {
    v8 = v6;
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 48);
    v9 = *(_QWORD *)(v0 + 56);
    v11 = *(_QWORD *)(v0 + 32);
    v12 = sub_2414B4FE4();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v9, 1, 1, v12);
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    v13[4] = v10;
    v13[5] = v11;
    swift_retain();
    v14 = v7;
    v15 = sub_24135F590(v9, (uint64_t)&unk_257127308, (uint64_t)v13);
    sub_2412D7894(v9);
    qword_257127218 = v15;
    swift_release();
  }
  if (!qword_257127228)
  {
    v17 = *(_QWORD *)(v0 + 48);
    v16 = *(_QWORD *)(v0 + 56);
    v18 = *(_QWORD *)(v0 + 32);
    v19 = sub_2414B4FE4();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v16, 1, 1, v19);
    v20 = (_QWORD *)swift_allocObject();
    v20[2] = 0;
    v20[3] = 0;
    v20[4] = v17;
    v20[5] = v18;
    swift_retain();
    v21 = sub_24135F590(v16, (uint64_t)&unk_2571272F8, (uint64_t)v20);
    sub_2412D7894(v16);
    qword_257127228 = v21;
    swift_release();
  }
  v22 = *(_QWORD *)(v0 + 48);
  v23 = swift_unknownObjectRetain();
  sub_2413E169C(v23);
  swift_unknownObjectRelease();
  *(_QWORD *)(v0 + 104) = sub_2414B4FB4();
  v24 = swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v24;
  *(_QWORD *)(v24 + 16) = v22;
  v25 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v25;
  *v25 = v0;
  v25[1] = sub_2413E15D8;
  return sub_2414B55E4();
}

uint64_t sub_2413E15D8()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2413E1640()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 96);
  swift_release();

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 96));
}

void sub_2413E169C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!qword_257127240)
  {
    v6 = sub_2414B4FE4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
    v7 = (_QWORD *)swift_allocObject();
    v7[2] = 0;
    v7[3] = 0;
    v7[4] = a1;
    v7[5] = v1;
    swift_unknownObjectRetain();
    qword_257127240 = sub_2413EE440((uint64_t)v5, (uint64_t)&unk_257127378, (uint64_t)v7);
    swift_release();
  }
}

uint64_t sub_2413E1780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[2] = a2;
  v3[3] = a3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  v3[4] = swift_task_alloc();
  sub_2414B4FC0();
  v3[5] = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_2413E1810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 24);
  swift_release();
  v3 = sub_2414B4FE4();
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
  v4(v1, 1, 1, v3);
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = 0;
  v5[3] = 0;
  v5[4] = v2;
  sub_2413E1A4C(v1, (uint64_t)&unk_257127338, (uint64_t)v5);
  sub_2412D7894(v1);
  v4(v1, 1, 1, v3);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v2;
  sub_2413E1A4C(v1, (uint64_t)&unk_257127348, (uint64_t)v6);
  sub_2412D7894(v1);
  v4(v1, 1, 1, v3);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v2;
  sub_2413E1A4C(v1, (uint64_t)&unk_257127358, (uint64_t)v7);
  sub_2412D7894(v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2413E1954()
{
  return swift_task_switch();
}

uint64_t sub_2413E1968()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = qword_257127218;
  *(_QWORD *)(v0 + 16) = qword_257127218;
  if (!v1)
    return (*(uint64_t (**)(void))(v0 + 8))();
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v2;
  *v2 = v0;
  v2[1] = sub_2413E19F0;
  return sub_2414B5068();
}

uint64_t sub_2413E19F0()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_2413E1A4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[4];
  _QWORD v21[4];

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2412D78D4(a1, (uint64_t)v10);
  v11 = sub_2414B4FE4();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_2412D7894((uint64_t)v10);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v13 = sub_2414B4F90();
      v15 = v14;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_2414B4FD8();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v16 = *v4;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  v18 = (_QWORD *)(v15 | v13);
  if (v15 | v13)
  {
    v21[0] = 0;
    v21[1] = 0;
    v18 = v21;
    v21[2] = v13;
    v21[3] = v15;
  }
  v20[1] = 1;
  v20[2] = v18;
  v20[3] = v16;
  swift_task_create();
  return swift_release();
}

uint64_t sub_2413E1BE8()
{
  return swift_task_switch();
}

uint64_t sub_2413E1BFC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = qword_257127228;
  *(_QWORD *)(v0 + 16) = qword_257127228;
  if (!v1)
    return (*(uint64_t (**)(void))(v0 + 8))();
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v2;
  *v2 = v0;
  v2[1] = sub_2413E1C84;
  return sub_2414B5068();
}

uint64_t sub_2413E1C84()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_2413E1CE0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2413E1CE8()
{
  return swift_task_switch();
}

uint64_t sub_2413E1CFC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = qword_257127240;
  *(_QWORD *)(v0 + 16) = qword_257127240;
  if (!v1)
    return (*(uint64_t (**)(void))(v0 + 8))();
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v2;
  *v2 = v0;
  v2[1] = sub_2413E19F0;
  return sub_2414B5068();
}

uint64_t sub_2413E1D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a5;
  return swift_task_switch();
}

uint64_t sub_2413E1D9C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[2];
  sub_2413E3A5C(0x5020657A69736552, 0xEF656E696C657069, v1);
  v3 = v2;
  v0[3] = v2;
  v4 = *(_QWORD *)(v1 + 16);
  v0[4] = v4;
  swift_unknownObjectRetain();
  v5 = (_QWORD *)swift_task_alloc();
  v0[5] = v5;
  *v5 = v0;
  v5[1] = sub_2413E1E7C;
  v5[17] = v3;
  v5[18] = v4;
  return swift_task_switch();
}

uint64_t sub_2413E1E7C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_2413E1EE0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 24);
  qword_257127210 = *(_QWORD *)(v0 + 48);

  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2413E1F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a5;
  return swift_task_switch();
}

uint64_t sub_2413E1F40()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[2];
  sub_2413E3A5C(0xD000000000000012, 0x80000002414D26B0, v1);
  v3 = v2;
  v0[3] = v2;
  v4 = *(_QWORD *)(v1 + 16);
  v0[4] = v4;
  swift_unknownObjectRetain();
  v5 = (_QWORD *)swift_task_alloc();
  v0[5] = v5;
  *v5 = v0;
  v5[1] = sub_2413E2018;
  v5[17] = v3;
  v5[18] = v4;
  return swift_task_switch();
}

uint64_t sub_2413E2018(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_2413E207C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 24);
  qword_257127220 = *(_QWORD *)(v0 + 48);

  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2413E20C4(uint64_t result, uint64_t a2, void *a3)
{
  _QWORD *v4;
  id v5;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254382990);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(result + 32) + 64) + 40) = a2;
    swift_unknownObjectRetain();
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2413E21A8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  double v4;
  double v5;
  void *v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  int v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  NSObject *v39;
  uint64_t v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  float v62;
  id v63;
  void *v64;
  void *v65;
  unint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  void *v75;
  uint64_t v76;
  void *v77;
  id v78;
  id v79;
  void *v80;
  id v81;
  void *v82;
  id v83;
  void *v84;
  id v85;
  void *v86;
  id v87;
  void *v88;
  id v89;
  void *v90;
  void *v91;
  unint64_t v92;
  unsigned int v93;
  unsigned int v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  NSObject *v98;
  os_log_type_t v99;
  void *v100;
  uint8_t *v101;
  uint64_t v102;
  uint64_t v103;
  os_log_type_t v104;
  uint8_t *v105;
  uint64_t v106;
  os_log_type_t v107;
  uint8_t *v108;
  void *v109;
  id v110;
  uint64_t v111;
  NSObject *v112;
  id v113;
  NSObject *v114;
  uint64_t aBlock;
  uint64_t v116;
  void *v117;
  void *v118;
  void (*v119)();
  uint64_t v120;
  uint64_t v121[2];

  v2 = v1;
  v121[1] = *MEMORY[0x24BDAC8D0];
  objc_msgSend(a1, sel_bounds);
  if (v5 > 0.0 && v4 > 0.0)
  {
    v112 = objc_msgSend(a1, sel_layer);
    objc_opt_self();
    v6 = (void *)swift_dynamicCastObjCClass();
    if (v6)
    {
      v7 = objc_msgSend(v6, sel_isDrawableAvailable);

      if (!v7)
        return;
      v8 = v1 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_textureProvider;
      if (MEMORY[0x242695CC8](v1 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_textureProvider))
      {
        v9 = *(_QWORD *)(v8 + 8);
        v10 = objc_msgSend(*(id *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_context) + 24), sel_commandBuffer);
        if (v10)
        {
          v11 = v10;
          v12 = qword_257127210;
          if (!qword_257127210 || (v13 = qword_257127220) == 0)
          {
            if (qword_257120970 != -1)
              swift_once();
            v43 = sub_2414B2CA4();
            __swift_project_value_buffer(v43, (uint64_t)qword_257127248);
            v44 = sub_2414B2C8C();
            v45 = sub_2414B51A0();
            if (os_log_type_enabled(v44, v45))
            {
              v46 = swift_slowAlloc();
              v47 = swift_slowAlloc();
              aBlock = v47;
              *(_DWORD *)v46 = 136446466;
              v121[0] = qword_257127210;
              swift_unknownObjectRetain();
              __swift_instantiateConcreteTypeFromMangledName(&qword_2571272B8);
              v48 = sub_2414B4D8C();
              v121[0] = sub_2412E4890(v48, v49, &aBlock);
              sub_2414B541C();
              swift_bridgeObjectRelease();
              *(_WORD *)(v46 + 12) = 2082;
              v121[0] = qword_257127220;
              swift_unknownObjectRetain();
              v50 = sub_2414B4D8C();
              v121[0] = sub_2412E4890(v50, v51, &aBlock);
              sub_2414B541C();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_2412C1000, v44, v45, "Pipeline states weren't ready - resize: %{public}s, treatment: %{public}s", (uint8_t *)v46, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x242695BD8](v47, -1, -1);
              MEMORY[0x242695BD8](v46, -1, -1);
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();

              return;
            }

            swift_unknownObjectRelease();
            goto LABEL_47;
          }
          ObjectType = swift_getObjectType();
          v15 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
          swift_unknownObjectRetain();
          v111 = v13;
          swift_unknownObjectRetain();
          v16 = v15(ObjectType, v9);
          if (v16)
          {
            v17 = (void *)v16;
            v18 = *(void **)(v2 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_resizeTexture);
            if (v18)
            {
              swift_unknownObjectRetain();
              v113 = objc_msgSend(a1, sel_currentRenderPassDescriptor);
              if (v113)
              {
                v109 = v17;
                v110 = v18;
                v19 = objc_msgSend(v113, sel_colorAttachments);
                v20 = objc_msgSend(v19, sel_objectAtIndexedSubscript_, 0);

                if (v20)
                {
                  objc_msgSend(v20, sel_setTexture_, v18);

                  v21 = objc_msgSend(v113, sel_colorAttachments);
                  v22 = objc_msgSend(v21, sel_objectAtIndexedSubscript_, 0);

                  if (v22)
                  {
                    objc_msgSend(v22, sel_setLoadAction_, 2);

                    v23 = objc_msgSend(v113, sel_colorAttachments);
                    v24 = objc_msgSend(v23, sel_objectAtIndexedSubscript_, 0);

                    if (v24)
                    {
                      objc_msgSend(v24, sel_setStoreAction_, 1);

                      v25 = objc_msgSend(v113, sel_depthAttachment);
                      if (v25)
                      {
                        v26 = v25;
                        objc_msgSend(v25, sel_setLoadAction_, 0);

                        v27 = objc_msgSend(v113, sel_depthAttachment);
                        if (v27)
                        {
                          v28 = v27;
                          objc_msgSend(v27, sel_setStoreAction_, 0);

                          v29 = objc_msgSend(v113, sel_stencilAttachment);
                          if (v29)
                          {
                            v30 = v29;
                            objc_msgSend(v29, sel_setLoadAction_, 0);

                            v31 = objc_msgSend(v113, sel_stencilAttachment);
                            if (v31)
                            {
                              v32 = v31;
                              objc_msgSend(v31, sel_setStoreAction_, 0);

                              v121[0] = 0xBF8000003F800000;
                              v33 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_contentMode);
                              if (v33 == 2)
                                goto LABEL_50;
                              v34 = (float)(uint64_t)objc_msgSend(v18, sel_width);
                              v35 = v34 / (float)(uint64_t)objc_msgSend(v109, sel_width);
                              v36 = (float)(uint64_t)objc_msgSend(v18, sel_height);
                              v37 = v36 / (float)(uint64_t)objc_msgSend(v109, sel_height);
                              if ((v33 & 1) != 0)
                              {
                                if (v35 < v37)
                                  goto LABEL_22;
                              }
                              else if (v35 >= v37)
                              {
LABEL_22:
                                v38 = v37 * (float)(uint64_t)objc_msgSend(v109, sel_width);
                                *(float *)v121 = 1.0 / (float)(v38 / (float)(uint64_t)objc_msgSend(v18, sel_width));
                                goto LABEL_50;
                              }
                              v62 = v35 * (float)(uint64_t)objc_msgSend(v109, sel_height);
                              *((float *)v121 + 1) = 1.0 / (float)(v62 / (float)(uint64_t)objc_msgSend(v18, sel_height));
LABEL_50:
                              v63 = objc_msgSend(v11, sel_renderCommandEncoderWithDescriptor_, v113);
                              if (v63)
                              {
                                v64 = v63;
                                v65 = (void *)sub_2414B4D44();
                                objc_msgSend(v64, sel_setLabel_, v65);

                                objc_msgSend(v64, sel_setRenderPipelineState_, v12);
                                if (qword_257120968 != -1)
                                  swift_once();
                                v66 = *((_QWORD *)off_257127230 + 2);
                                if (!(v66 >> 61))
                                {
                                  objc_msgSend(v64, sel_setVertexBytes_length_atIndex_, (char *)off_257127230 + 32, 4 * v66, 0);
                                  objc_msgSend(v64, sel_setVertexBytes_length_atIndex_, v121, 8, 1);
                                  objc_msgSend(v64, sel_setFragmentTexture_atIndex_, v109, 0);
                                  objc_msgSend(v64, sel_drawPrimitives_vertexStart_vertexCount_, 4, 0, 4);
                                  objc_msgSend(v64, sel_endEncoding);
                                  v67 = (_QWORD *)swift_slowAlloc();
                                  v68 = swift_allocObject();
                                  *(_QWORD *)(v68 + 16) = v67;
                                  v119 = sub_2413E3A54;
                                  v120 = v68;
                                  v69 = MEMORY[0x24BDAC760];
                                  aBlock = MEMORY[0x24BDAC760];
                                  v116 = 1107296256;
                                  v117 = sub_2413E35D4;
                                  v118 = &block_descriptor_13;
                                  v70 = _Block_copy(&aBlock);
                                  swift_release();
                                  objc_msgSend(v11, sel_addCompletedHandler_, v70);
                                  _Block_release(v70);
                                  *v67 = v18;
                                  if ((sub_2413E3888() & 1) != 0)
                                  {
                                    swift_unknownObjectRetain();
                                    goto LABEL_61;
                                  }
                                  v75 = (void *)qword_257127238;
                                  if (qword_257127238)
                                  {
                                    v76 = *(_QWORD *)(v2
                                                    + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_textureFallbackCopyAllocator
                                                    + 8);
                                    v119 = *(void (**)())(v2
                                                                   + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_textureFallbackCopyAllocator);
                                    v120 = v76;
                                    aBlock = v69;
                                    v116 = 1107296256;
                                    v117 = sub_2413E361C;
                                    v118 = &block_descriptor_4;
                                    v77 = _Block_copy(&aBlock);
                                    swift_unknownObjectRetain();
                                    v78 = v75;
                                    swift_retain();
                                    swift_release();
                                    objc_msgSend(v78, sel_encodeToCommandBuffer_inPlaceTexture_fallbackCopyAllocator_, v11, v67, v77);
                                    _Block_release(v77);

LABEL_61:
                                    v79 = objc_msgSend(a1, sel_currentRenderPassDescriptor);
                                    if (!v79)
                                    {
                                      swift_unknownObjectRelease();
                                      swift_unknownObjectRelease();
                                      swift_unknownObjectRelease();
                                      swift_unknownObjectRelease();
                                      swift_unknownObjectRelease();
                                      goto LABEL_85;
                                    }
                                    v80 = v79;
                                    v81 = objc_msgSend(v79, sel_depthAttachment);
                                    if (v81)
                                    {
                                      v82 = v81;
                                      objc_msgSend(v81, sel_setLoadAction_, 0);

                                      v83 = objc_msgSend(v80, sel_depthAttachment);
                                      if (v83)
                                      {
                                        v84 = v83;
                                        objc_msgSend(v83, sel_setStoreAction_, 0);

                                        v85 = objc_msgSend(v80, sel_stencilAttachment);
                                        if (v85)
                                        {
                                          v86 = v85;
                                          objc_msgSend(v85, sel_setLoadAction_, 0);

                                          v87 = objc_msgSend(v80, sel_stencilAttachment);
                                          if (v87)
                                          {
                                            v88 = v87;
                                            objc_msgSend(v87, sel_setStoreAction_, 0);

                                            v89 = objc_msgSend(v11, sel_renderCommandEncoderWithDescriptor_, v80);
                                            if (v89)
                                            {
                                              v90 = v89;
                                              v91 = (void *)sub_2414B4D44();
                                              objc_msgSend(v90, sel_setLabel_, v91);

                                              objc_msgSend(v90, sel_setRenderPipelineState_, v111);
                                              v92 = *((_QWORD *)off_257127230 + 2);
                                              if (!(v92 >> 61))
                                              {
                                                objc_msgSend(v90, sel_setVertexBytes_length_atIndex_, (char *)off_257127230 + 32, 4 * v92, 0);
                                                sub_2413E41AC((uint64_t)objc_msgSend(a1, sel_colorPixelFormat));
                                                aBlock = __PAIR64__(v94, v93);
                                                v116 = v95;
                                                objc_msgSend(v90, sel_setFragmentBytes_length_atIndex_, &aBlock, 16, 0);
                                                objc_msgSend(v90, sel_setFragmentTexture_atIndex_, v110, 0);
                                                objc_msgSend(v90, sel_drawPrimitives_vertexStart_vertexCount_, 4, 0, 4);
                                                objc_msgSend(v90, sel_endEncoding);
                                                v96 = objc_msgSend(a1, sel_currentDrawable);
                                                if (v96)
                                                {
                                                  objc_msgSend(v11, sel_presentDrawable_, v96);
                                                  objc_msgSend(v11, sel_commit);
                                                  swift_unknownObjectRelease();
                                                  swift_unknownObjectRelease();
                                                  swift_unknownObjectRelease();
                                                  swift_unknownObjectRelease();
                                                  swift_unknownObjectRelease();
                                                  swift_unknownObjectRelease();
                                                  swift_unknownObjectRelease();

LABEL_85:
                                                  swift_unknownObjectRelease();

                                                  goto LABEL_91;
                                                }
                                                if (qword_257120970 != -1)
                                                  swift_once();
                                                v106 = sub_2414B2CA4();
                                                __swift_project_value_buffer(v106, (uint64_t)qword_257127248);
                                                v98 = sub_2414B2C8C();
                                                v107 = sub_2414B51A0();
                                                if (os_log_type_enabled(v98, v107))
                                                {
                                                  v100 = v80;
                                                  v108 = (uint8_t *)swift_slowAlloc();
                                                  *(_WORD *)v108 = 0;
                                                  _os_log_impl(&dword_2412C1000, v98, v107, "Nil current drawable", v108, 2u);
                                                  MEMORY[0x242695BD8](v108, -1, -1);
                                                  swift_unknownObjectRelease();
                                                  swift_unknownObjectRelease();
                                                  swift_unknownObjectRelease();
                                                  swift_unknownObjectRelease();
                                                  swift_unknownObjectRelease();
                                                  goto LABEL_84;
                                                }

                                                swift_unknownObjectRelease();
LABEL_89:

                                                swift_unknownObjectRelease();
                                                swift_unknownObjectRelease();
                                                goto LABEL_90;
                                              }
                                              __break(1u);
                                            }
                                            else if (qword_257120970 == -1)
                                            {
LABEL_73:
                                              v97 = sub_2414B2CA4();
                                              __swift_project_value_buffer(v97, (uint64_t)qword_257127248);
                                              v98 = sub_2414B2C8C();
                                              v99 = sub_2414B51A0();
                                              if (os_log_type_enabled(v98, v99))
                                              {
                                                v100 = v80;
                                                v101 = (uint8_t *)swift_slowAlloc();
                                                *(_WORD *)v101 = 0;
                                                _os_log_impl(&dword_2412C1000, v98, v99, "Couldn't make treatment render encoder", v101, 2u);
                                                MEMORY[0x242695BD8](v101, -1, -1);
                                                swift_unknownObjectRelease();
                                                swift_unknownObjectRelease();
                                                swift_unknownObjectRelease();
                                                swift_unknownObjectRelease();
LABEL_84:
                                                swift_unknownObjectRelease();

                                                goto LABEL_85;
                                              }

                                              goto LABEL_89;
                                            }
                                            swift_once();
                                            goto LABEL_73;
                                          }
LABEL_107:
                                          __break(1u);
                                          return;
                                        }
LABEL_106:
                                        __break(1u);
                                        goto LABEL_107;
                                      }
LABEL_105:
                                      __break(1u);
                                      goto LABEL_106;
                                    }
LABEL_104:
                                    __break(1u);
                                    goto LABEL_105;
                                  }
                                  v102 = qword_257120970;
                                  swift_unknownObjectRetain();
                                  if (v102 != -1)
                                    swift_once();
                                  v103 = sub_2414B2CA4();
                                  __swift_project_value_buffer(v103, (uint64_t)qword_257127248);
                                  v72 = sub_2414B2C8C();
                                  v104 = sub_2414B51A0();
                                  if (os_log_type_enabled(v72, v104))
                                  {
                                    v105 = (uint8_t *)swift_slowAlloc();
                                    *(_WORD *)v105 = 0;
                                    _os_log_impl(&dword_2412C1000, v72, v104, "Skipped frame because gaussian blur wasn't ready", v105, 2u);
                                    MEMORY[0x242695BD8](v105, -1, -1);
                                    swift_unknownObjectRelease();
                                    swift_unknownObjectRelease();
                                    swift_unknownObjectRelease();
                                    swift_unknownObjectRelease();
                                    goto LABEL_79;
                                  }

                                  swift_unknownObjectRelease();
                                  swift_unknownObjectRelease();
                                  goto LABEL_90;
                                }
                                __break(1u);
                              }
                              else if (qword_257120970 == -1)
                              {
LABEL_57:
                                v71 = sub_2414B2CA4();
                                __swift_project_value_buffer(v71, (uint64_t)qword_257127248);
                                v72 = sub_2414B2C8C();
                                v73 = sub_2414B51A0();
                                if (os_log_type_enabled(v72, v73))
                                {
                                  v74 = (uint8_t *)swift_slowAlloc();
                                  *(_WORD *)v74 = 0;
                                  _os_log_impl(&dword_2412C1000, v72, v73, "Couldn't make resize render encoder", v74, 2u);
                                  MEMORY[0x242695BD8](v74, -1, -1);
                                  swift_unknownObjectRelease();
                                  swift_unknownObjectRelease();
                                  swift_unknownObjectRelease();
LABEL_79:
                                  swift_unknownObjectRelease();

                                  goto LABEL_85;
                                }

                                swift_unknownObjectRelease();
LABEL_90:
                                swift_unknownObjectRelease();
                                swift_unknownObjectRelease();

                                swift_unknownObjectRelease();
                                swift_unknownObjectRelease();
                                goto LABEL_91;
                              }
                              swift_once();
                              goto LABEL_57;
                            }
LABEL_103:
                            __break(1u);
                            goto LABEL_104;
                          }
LABEL_102:
                          __break(1u);
                          goto LABEL_103;
                        }
LABEL_101:
                        __break(1u);
                        goto LABEL_102;
                      }
LABEL_100:
                      __break(1u);
                      goto LABEL_101;
                    }
LABEL_99:
                    __break(1u);
                    goto LABEL_100;
                  }
                }
                else
                {
                  __break(1u);
                }
                __break(1u);
                goto LABEL_99;
              }
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
LABEL_47:
              swift_unknownObjectRelease();
              return;
            }
            swift_unknownObjectRelease();
          }
          if (qword_257120970 != -1)
            swift_once();
          v55 = sub_2414B2CA4();
          __swift_project_value_buffer(v55, (uint64_t)qword_257127248);
          swift_unknownObjectRetain_n();
          v56 = sub_2414B2C8C();
          v57 = sub_2414B51A0();
          if (os_log_type_enabled(v56, v57))
          {
            v58 = (uint8_t *)swift_slowAlloc();
            v59 = swift_slowAlloc();
            v121[0] = v59;
            *(_DWORD *)v58 = 136446210;
            v116 = v9;
            swift_unknownObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName(&qword_2571272C0);
            v60 = sub_2414B4D8C();
            aBlock = sub_2412E4890(v60, v61, v121);
            sub_2414B541C();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_2412C1000, v56, v57, "Skipping frame, draw was called without necessary textures, textureProvider=%{public}s", v58, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x242695BD8](v59, -1, -1);
            MEMORY[0x242695BD8](v58, -1, -1);
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();

            swift_unknownObjectRelease();
LABEL_91:
            swift_unknownObjectRelease();
            return;
          }

          swift_unknownObjectRelease_n();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          goto LABEL_47;
        }
        if (qword_257120970 != -1)
          swift_once();
        v52 = sub_2414B2CA4();
        __swift_project_value_buffer(v52, (uint64_t)qword_257127248);
        v114 = sub_2414B2C8C();
        v53 = sub_2414B51A0();
        if (!os_log_type_enabled(v114, v53))
        {

          goto LABEL_47;
        }
        v54 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v54 = 0;
        _os_log_impl(&dword_2412C1000, v114, v53, "Couldn't make command buffer", v54, 2u);
        MEMORY[0x242695BD8](v54, -1, -1);
        swift_unknownObjectRelease();
      }
      else
      {
        if (qword_257120970 != -1)
          swift_once();
        v40 = sub_2414B2CA4();
        __swift_project_value_buffer(v40, (uint64_t)qword_257127248);
        v114 = sub_2414B2C8C();
        v41 = sub_2414B51A0();
        if (os_log_type_enabled(v114, v41))
        {
          v42 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v42 = 0;
          _os_log_impl(&dword_2412C1000, v114, v41, "No texture provider", v42, 2u);
          MEMORY[0x242695BD8](v42, -1, -1);
        }
      }
      v39 = v114;
    }
    else
    {
      v39 = v112;
    }

  }
}

void sub_2413E3590()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571272C8);
  swift_arrayDestroy();
  JUMPOUT(0x242695BD8);
}

uint64_t sub_2413E35D4(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_2413E361C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v7)(id, uint64_t, uint64_t);
  id v8;
  uint64_t v9;

  v7 = *(uint64_t (**)(id, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v8 = a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v9 = v7(v8, a3, a4);
  swift_release();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v9;
}

uint64_t sub_2413E3700(uint64_t a1, void *a2, void *a3)
{
  id v4;
  id v5;
  uint64_t result;

  v4 = objc_msgSend((id)objc_opt_self(), sel_texture2DDescriptorWithPixelFormat_width_height_mipmapped_, objc_msgSend(a3, sel_pixelFormat), objc_msgSend(a3, sel_width), objc_msgSend(a3, sel_height), 0);
  v5 = objc_msgSend(objc_msgSend(a2, sel_device), sel_newTextureWithDescriptor_, v4);
  result = swift_unknownObjectRelease();
  if (v5)
  {

    return (uint64_t)v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2413E37EC()
{
  off_257127230 = &unk_251168118;
}

uint64_t sub_2413E3800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_2413E3818()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  double v3;
  id v4;
  void *v5;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = objc_allocWithZone(MEMORY[0x24BDDE3C8]);
  LODWORD(v3) = 30.0;
  v4 = objc_msgSend(v2, sel_initWithDevice_sigma_, v1, v3);
  objc_msgSend(v4, sel_setEdgeMode_, 0);
  v5 = (void *)qword_257127238;
  qword_257127238 = (uint64_t)v4;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2413E3888()
{
  uint64_t v0;
  int v1;
  uint64_t result;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer____lazy_storage___isBlurDisabled);
  if (v1 != 2)
    return v1 & 1;
  result = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer____lazy_storage___isBlurDisabled) = 0;
  return result;
}

id sub_2413E38DC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MaterialRenderer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MaterialRenderer()
{
  return objc_opt_self();
}

uint64_t sub_2413E3988@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for MaterialRenderer();
  result = sub_2414B2DA0();
  *a1 = result;
  return result;
}

uint64_t sub_2413E39C0()
{
  uint64_t v0;

  v0 = sub_2414B2CA4();
  __swift_allocate_value_buffer(v0, qword_257127248);
  __swift_project_value_buffer(v0, (uint64_t)qword_257127248);
  return sub_2414B2C98();
}

uint64_t sub_2413E3A44()
{
  return swift_deallocObject();
}

void sub_2413E3A54()
{
  sub_2413E3590();
}

void sub_2413E3A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDD6B8]), sel_init);
  v5 = (void *)sub_2414B4D44();
  objc_msgSend(v4, sel_setLabel_, v5);

  v6 = objc_msgSend(v4, sel_colorAttachments);
  v7 = objc_msgSend(v6, sel_objectAtIndexedSubscript_, 0);

  if (v7)
  {
    objc_msgSend(v7, sel_setPixelFormat_, *(_QWORD *)(a3 + 48));

    v8 = *(void **)(a3 + 32);
    swift_unknownObjectRetain();
    v9 = (void *)sub_2414B4D44();
    v10 = objc_msgSend(v8, sel_newFunctionWithName_, v9);

    swift_unknownObjectRelease();
    objc_msgSend(v4, sel_setVertexFunction_, v10);
    swift_unknownObjectRelease();
    v11 = *(void **)(a3 + 32);
    swift_unknownObjectRetain();
    v12 = (void *)sub_2414B4D44();
    v13 = objc_msgSend(v11, sel_newFunctionWithName_, v12);

    swift_unknownObjectRelease();
    objc_msgSend(v4, sel_setFragmentFunction_, v13);
    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2413E3C00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 136) = a1;
  *(_QWORD *)(v2 + 144) = a2;
  return swift_task_switch();
}

uint64_t sub_2413E3C18()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[17];
  v1 = (void *)v0[18];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_2413E3CB8;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_2413E20C4;
  v4[3] = &block_descriptor_16;
  v4[4] = v3;
  objc_msgSend(v1, sel_newRenderPipelineStateWithDescriptor_completionHandler_, v2, v4);
  return swift_continuation_await();
}

uint64_t sub_2413E3CB8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 152) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_2413E3D18()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 120));
}

uint64_t sub_2413E3D24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  void *v13;
  uint64_t *v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void *v21;
  id v22;
  _QWORD *v23;
  uint64_t v24;
  NSObject *log;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 152);
  swift_willThrow();
  *(_QWORD *)(v0 + 80) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254382990);
  sub_2413E4420();
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    v3 = *(void **)(v0 + 120);
    if (qword_257120970 != -1)
      swift_once();
    v4 = *(void **)(v0 + 136);
    v5 = sub_2414B2CA4();
    __swift_project_value_buffer(v5, (uint64_t)qword_257127248);
    v6 = v4;
    v7 = v3;
    v8 = v6;
    v9 = v7;
    v10 = sub_2414B2C8C();
    v11 = sub_2414B51A0();
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(void **)(v0 + 136);
    if (v12)
    {
      v14 = (uint64_t *)(v0 + 128);
      v15 = swift_slowAlloc();
      v23 = (_QWORD *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v26 = v24;
      *(_DWORD *)v15 = 136315394;
      v16 = objc_msgSend(v13, sel_label);
      log = v10;
      if (v16)
      {
        v17 = v16;
        v18 = sub_2414B4D68();
        v20 = v19;

      }
      else
      {
        v20 = 0xE300000000000000;
        v18 = 7104878;
      }
      v21 = *(void **)(v0 + 136);
      *v14 = sub_2412E4890(v18, v20, &v26);
      sub_2414B541C();
      swift_bridgeObjectRelease();

      *(_WORD *)(v15 + 12) = 2114;
      *v14 = (uint64_t)v9;
      v22 = v9;
      sub_2414B541C();
      *v23 = v9;

      _os_log_impl(&dword_2412C1000, log, v11, "Failed to create render pipeline state (%s, privacy: .public). error=%{public}@", (uint8_t *)v15, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25712B570);
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v23, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v24, -1, -1);
      MEMORY[0x242695BD8](v15, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  return result;
}

id sub_2413E402C(void *a1)
{
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  id result;
  uint64_t v8;
  id v9;

  objc_msgSend(a1, sel_bounds);
  if (v2 <= 0.0 || (v4 = v3, v3 <= 0.0))
  {
    *(_QWORD *)(v1 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_resizeTexture) = 0;
    return (id)swift_unknownObjectRelease();
  }
  v5 = v2;
  result = (id)objc_opt_self();
  if (v5 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v5 >= 9.22337204e18)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if ((*(_QWORD *)&v5 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&v4 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_17;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v4 >= 9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_context);
  v9 = objc_msgSend(result, sel_texture2DDescriptorWithPixelFormat_width_height_mipmapped_, *(_QWORD *)(v8 + 48), (uint64_t)v5 / 4, (uint64_t)v4 / 4, 0);
  objc_msgSend(v9, sel_setUsage_, 7);
  result = objc_msgSend(*(id *)(v8 + 16), sel_newTextureWithDescriptor_, v9);
  if (result)
  {
    *(_QWORD *)(v1 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_resizeTexture) = result;

    return (id)swift_unknownObjectRelease();
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_2413E41AC(uint64_t result)
{
  if (result != 552 && result != 80)
  {
    sub_2414B5578();
    swift_bridgeObjectRelease();
    sub_2414B57A0();
    sub_2414B4DF8();
    swift_bridgeObjectRelease();
    result = sub_2414B5674();
    __break(1u);
  }
  return result;
}

uint64_t sub_2413E42A0(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_2413E42C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_241310C28;
  return sub_2413E1780(a1, a2, v6);
}

uint64_t sub_2413E4330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 40);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_241310C28;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t objectdestroy_8Tm_0()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2413E43C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 40);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_241310C28;
  v3[2] = v2;
  return swift_task_switch();
}

unint64_t sub_2413E4420()
{
  unint64_t result;

  result = qword_257127320;
  if (!qword_257127320)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257127320);
  }
  return result;
}

uint64_t sub_2413E445C()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2413E4480()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_241310C28;
  return swift_task_switch();
}

uint64_t sub_2413E44D8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_241310C28;
  return swift_task_switch();
}

uint64_t sub_2413E4530()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_241310C28;
  return swift_task_switch();
}

uint64_t sub_2413E4588()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2413E45AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_241310430;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_257127360 + dword_257127360))(a1, v4);
}

uint64_t sub_2413E461C()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2413E4648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_241310430;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_2413E46BC@<X0>(float *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  float v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  vDSP_Length v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  float v17;
  float v18;
  unint64_t v19;
  _QWORD __C[2];

  __C[1] = *MEMORY[0x24BDAC8D0];
  v5 = *a1;
  __C[0] = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  sub_2413BEE70(0, 0, 0);
  v6 = __C[0];
  v7 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v7)
  {
    v8 = *(_DWORD *)(a2 + 32);
    v10 = *(_QWORD *)(__C[0] + 16);
    v9 = *(_QWORD *)(__C[0] + 24);
    if (v10 >= v9 >> 1)
    {
      sub_2413BEE70(v9 > 1, v10 + 1, 1);
      v6 = __C[0];
    }
    *(_QWORD *)(v6 + 16) = v10 + 1;
    *(_DWORD *)(v6 + 4 * v10 + 32) = v8;
    v11 = v7 - 1;
    if (v11)
    {
      v14 = 0;
      v15 = v10 + 9;
      do
      {
        v16 = v14 + 1;
        v17 = *(float *)(a2 + 36 + 4 * v14);
        v18 = powf(v5, (float)(v14 + 1));
        __C[0] = v6;
        v19 = *(_QWORD *)(v6 + 24);
        if (v15 - 8 >= v19 >> 1)
        {
          sub_2413BEE70(v19 > 1, v15 - 7, 1);
          v6 = __C[0];
        }
        *(_QWORD *)(v6 + 16) = v15 - 7;
        *(float *)(v6 + 4 * v15++) = v17 * v18;
        v14 = v16;
      }
      while (v11 != v16);
    }
  }
  swift_bridgeObjectRelease_n();
  v12 = *(_QWORD *)(v6 + 16);
  LODWORD(__C[0]) = 2143289344;
  vDSP_sve((const float *)(v6 + 32), 1, (float *)__C, v12);
  result = swift_release();
  *a3 = __C[0];
  return result;
}

uint64_t sub_2413E4884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v7 + 16))(v6, v4);
  return sub_2413E4900((uint64_t)v6, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

uint64_t sub_2413E4900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  _QWORD *v18;
  float v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  float v24;
  _QWORD v25[2];
  float v26;
  char v27;

  v8 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for WaveformBinnedFFT(0, v11, v12, v13);
  v15 = *(_QWORD *)(a1 + *(int *)(v14 + 40));
  v17 = (int *)type metadata accessor for WaveformBinnedFFT.Iterator(0, a2, a3, v16);
  v18 = (_QWORD *)(a4 + v17[9]);
  *v18 = v15;
  v18[1] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a2);
  swift_bridgeObjectRetain();
  sub_2414B4E70();
  v19 = *(float *)(a1 + *(int *)(v14 + 36));
  v20 = sub_2414B5104();
  *(float *)(a4 + v17[10]) = v19 / (float)((float)v20 + (float)v20);
  v25[1] = v15;
  type metadata accessor for WaveformBinnedFFT.Band(255, a2, a3, v21);
  v22 = sub_2414B4F60();
  swift_bridgeObjectRetain();
  MEMORY[0x242695AE8](MEMORY[0x24BEE12E0], v22);
  sub_2414B5140();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a1, v14);
  result = swift_bridgeObjectRelease();
  v24 = v26;
  if (v27)
    v24 = 0.0;
  *(float *)(a4 + v17[11]) = v24;
  return result;
}

unint64_t sub_2413E4A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t v13;
  float v14;
  uint64_t v15;
  uint64_t v16;
  float v17;
  float v18;
  float v19;
  char v20;

  v6 = (uint64_t *)(v4 + *(int *)(a1 + 36));
  v8 = *v6;
  v7 = v6[1];
  v9 = type metadata accessor for WaveformBinnedFFT.Band(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  v10 = MEMORY[0x2426947D4](v8, v9);
  result = 0;
  if (v7 == v10)
    return result;
  v12 = sub_2414B4F18();
  result = sub_2414B4EE8();
  if ((v12 & 1) == 0)
  {
    v8 = sub_2414B55A8();
    result = swift_unknownObjectRelease();
    v14 = *((float *)&v8 + 1);
    v15 = v7 + 1;
    if (!__OFADD__(v7, 1))
      goto LABEL_4;
LABEL_12:
    __break(1u);
    return result;
  }
  v13 = v8 + 8 * v7;
  LODWORD(v8) = *(_DWORD *)(v13 + 32);
  v14 = *(float *)(v13 + 36);
  v15 = v7 + 1;
  if (__OFADD__(v7, 1))
    goto LABEL_12;
LABEL_4:
  v6[1] = v15;
  v16 = *(int *)(a1 + 44);
  v17 = *(float *)(v4 + v16);
  v18 = 0.0;
  if (v17 < v14)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    do
    {
      sub_2414B5410();
      if ((v20 & 1) != 0)
        break;
      v18 = v18 + v19;
      v17 = v17 + *(float *)(v4 + *(int *)(a1 + 40));
      *(float *)(v4 + v16) = v17;
    }
    while (v17 < v14);
  }
  return v8 | ((unint64_t)LODWORD(v14) << 32);
}

unint64_t sub_2413E4C5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  unint64_t result;
  int v7;
  char v8;

  result = sub_2413E4A9C(a1, a2, a3, a4);
  *(_QWORD *)a5 = result;
  *(_DWORD *)(a5 + 8) = v7;
  *(_BYTE *)(a5 + 12) = v8 & 1;
  return result;
}

uint64_t sub_2413E4C8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_2413E4884(a1, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v2, a1);
}

uint64_t sub_2413E4CBC()
{
  return 0;
}

uint64_t sub_2413E4CC4()
{
  return 2;
}

uint64_t sub_2413E4CD4()
{
  return sub_2414B4EA0();
}

uint64_t sub_2413E4CF4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2413E4D7C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _DWORD *v10;
  _DWORD *v11;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_DWORD *)(((unint64_t)v4 + v6 + 3) & 0xFFFFFFFFFFFFFCLL);
    v11 = (_DWORD *)(((unint64_t)a2 + v6 + 3) & 0xFFFFFFFFFFFFFCLL);
    *v10 = *v11;
    *(_QWORD *)(((unint64_t)v10 + 11) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v11 + 11) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_2413E4E48(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2413E4E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 3;
  v7 = (_DWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFFCLL);
  v8 = (_DWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFFCLL);
  *v7 = *v8;
  *(_QWORD *)(((unint64_t)v7 + 11) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + 11) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2413E4F00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 3;
  v7 = (_DWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFFCLL);
  v8 = (_DWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFFCLL);
  *v7 = *v8;
  *(_QWORD *)(((unint64_t)v7 + 11) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + 11) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2413E4F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 3;
  v7 = (_DWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFFCLL);
  v8 = (_DWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFFCLL);
  *v7 = *v8;
  *(_QWORD *)(((unint64_t)v7 + 11) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + 11) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2413E4FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 3;
  v7 = (_DWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFFCLL);
  v8 = (_DWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFFCLL);
  *v7 = *v8;
  *(_QWORD *)(((unint64_t)v7 + 11) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + 11) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2413E505C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((((a1 + v7 + 3) & 0xFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((v7 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_2413E50E0 + 4 * byte_2414C3B60[v10]))();
  }
}

void sub_2413E516C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((*(_DWORD *)(v5 + 64) + 3) & 0xFFFFFFFC) + 11) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((*(_DWORD *)(v5 + 64) + 3) & 0xFFFFFFFC) + 11) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((*(_QWORD *)(v5 + 64) + 3) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_2413E5268()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x2413E52E4);
}

void sub_2413E5270(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x2413E5278);
  JUMPOUT(0x2413E52E4);
}

void sub_2413E52C0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x2413E52E4);
}

void sub_2413E52C8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x2413E52E4);
}

uint64_t sub_2413E52D0(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x2413E52E4);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x2413E52E0);
    JUMPOUT(0x2413E52DCLL);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t type metadata accessor for WaveformBinnedFFT(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WaveformBinnedFFT);
}

uint64_t type metadata accessor for WaveformBinnedFFT.Band(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WaveformBinnedFFT.Band);
}

void sub_2413E5314()
{
  JUMPOUT(0x242695AE8);
}

uint64_t type metadata accessor for WaveformBinnedFFT.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WaveformBinnedFFT.Iterator);
}

uint64_t sub_2413E5330()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2413E53C8(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _DWORD *v12;
  _DWORD *v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v10 = (_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v10 = *v11;
    v10[1] = v11[1];
    v12 = (_DWORD *)(((unint64_t)v10 + 19) & 0xFFFFFFFFFFFFFFF8);
    v13 = (_DWORD *)(((unint64_t)v11 + 19) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v13;
    v12[1] = v13[1];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_2413E54CC(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2413E5530(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _DWORD *v9;
  _DWORD *v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v9 = (_DWORD *)(((unint64_t)v7 + 19) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_DWORD *)(((unint64_t)v8 + 19) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2413E55E0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _DWORD *v9;
  _DWORD *v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[1] = v8[1];
  v9 = (_DWORD *)(((unint64_t)v7 + 19) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_DWORD *)(((unint64_t)v8 + 19) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  return a1;
}

uint64_t sub_2413E569C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  _DWORD *v9;
  _DWORD *v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_DWORD *)(((unint64_t)v7 + 19) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_DWORD *)(((unint64_t)v8 + 19) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  return a1;
}

uint64_t sub_2413E5738(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _DWORD *v9;
  _DWORD *v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_bridgeObjectRelease();
  v7[1] = v8[1];
  v9 = (_DWORD *)(((unint64_t)v7 + 19) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_DWORD *)(((unint64_t)v8 + 19) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  return a1;
}

uint64_t sub_2413E57EC(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 < a2)
  {
    if (((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    __asm { BR              X15 }
  }
  if (v5 >= 0x7FFFFFFF)
    return (*(uint64_t (**)(uint64_t))(v4 + 48))(a1);
  v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  return (v12 + 1);
}

void sub_2413E5940(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v6 + 84) <= 0x7FFFFFFFu)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 >= a3)
  {
    v10 = 0;
    if (a2 <= v7)
      goto LABEL_17;
  }
  else
  {
    if (((((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) + 19) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v8 = a3 - v7 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (a2 <= v7)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) + 19) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v11 = ~v7 + a2;
    bzero(a1, ((((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v11;
  }
  __asm { BR              X10 }
}

void sub_2413E5A60()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x2413E5ADCLL);
}

void sub_2413E5A68()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x2413E5A70);
  JUMPOUT(0x2413E5ADCLL);
}

void sub_2413E5AB4()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x2413E5ADCLL);
}

void sub_2413E5ABC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x2413E5ADCLL);
}

uint64_t sub_2413E5AC4@<X0>(unsigned int a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_WORD *)(v3 + v5) = 0;
  if (!(_DWORD)v4)
    JUMPOUT(0x2413E5ADCLL);
  if (a1 < 0x7FFFFFFF)
  {
    if ((v4 & 0x80000000) == 0)
      JUMPOUT(0x2413E5AD8);
    JUMPOUT(0x2413E5AD0);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56))(v3, v4);
}

uint64_t type metadata accessor for WaveformBinnedFFT.Bin(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WaveformBinnedFFT.Bin);
}

uint64_t (*sub_2413E5B00())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

double sub_2413E5B3C@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  double result;

  v3 = *a1;
  swift_getKeyPath();
  sub_2413E5CE4();
  sub_2414B2B84();
  swift_release();
  swift_beginAccess();
  result = *(double *)(v3 + 16);
  *a2 = result;
  return result;
}

uint64_t sub_2413E5BC4()
{
  swift_getKeyPath();
  sub_2413E5CE4();
  sub_2414B2B78();
  return swift_release();
}

double sub_2413E5C5C()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_2413E5CE4();
  sub_2414B2B84();
  swift_release();
  swift_beginAccess();
  return *(double *)(v0 + 16);
}

unint64_t sub_2413E5CE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2571245A0;
  if (!qword_2571245A0)
  {
    v1 = type metadata accessor for ParallaxContext();
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for ParallaxContext, v1);
    atomic_store(result, (unint64_t *)&qword_2571245A0);
  }
  return result;
}

uint64_t type metadata accessor for ParallaxContext()
{
  uint64_t result;

  result = qword_254382560;
  if (!qword_254382560)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2413E5D68()
{
  swift_getKeyPath();
  sub_2413E5CE4();
  sub_2414B2B78();
  return swift_release();
}

uint64_t sub_2413E5E00(uint64_t a1, double a2)
{
  uint64_t result;

  result = swift_beginAccess();
  *(double *)(a1 + 16) = a2;
  return result;
}

uint64_t sub_2413E5E50()
{
  return sub_2413E66FC();
}

void (*sub_2413E5E64(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC11MediaCoreUI15ParallaxContext___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_2413E5CE4();
  sub_2414B2B84();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_2414B2B9C();
  swift_release();
  v4[7] = sub_2413E5B00();
  return sub_2413E5F34;
}

void sub_2413E5F34(_QWORD *a1)
{
  sub_2413E62FC(a1);
}

uint64_t (*sub_2413E5F40())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

double sub_2413E5F7C@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  double result;

  v3 = *a1;
  swift_getKeyPath();
  sub_2413E5CE4();
  sub_2414B2B84();
  swift_release();
  swift_beginAccess();
  result = *(double *)(v3 + 24);
  *a2 = result;
  return result;
}

uint64_t sub_2413E6004()
{
  swift_getKeyPath();
  sub_2413E5CE4();
  sub_2414B2B78();
  return swift_release();
}

double sub_2413E609C()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_2413E5CE4();
  sub_2414B2B84();
  swift_release();
  swift_beginAccess();
  return *(double *)(v0 + 24);
}

uint64_t sub_2413E6124()
{
  swift_getKeyPath();
  sub_2413E5CE4();
  sub_2414B2B78();
  return swift_release();
}

uint64_t sub_2413E61BC(uint64_t a1, double a2)
{
  uint64_t result;

  result = swift_beginAccess();
  *(double *)(a1 + 24) = a2;
  return result;
}

uint64_t sub_2413E620C()
{
  return sub_2413E66AC();
}

void (*sub_2413E6220(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC11MediaCoreUI15ParallaxContext___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_2413E5CE4();
  sub_2414B2B84();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_2414B2B9C();
  swift_release();
  v4[7] = sub_2413E5F40();
  return sub_2413E62F0;
}

void sub_2413E62F0(_QWORD *a1)
{
  sub_2413E62FC(a1);
}

void sub_2413E62FC(_QWORD *a1)
{
  _QWORD *v1;

  v1 = (_QWORD *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 56))(*a1, 0);
  *v1 = v1[4];
  swift_getKeyPath();
  sub_2414B2B90();
  swift_release();
  free(v1);
}

uint64_t sub_2413E636C()
{
  swift_getKeyPath();
  sub_2413E5CE4();
  sub_2414B2B84();
  swift_release();
  return swift_retain();
}

uint64_t sub_2413E63DC(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 32) = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_2413E6414()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_2413E5CE4();
  sub_2414B2B84();
  swift_release();
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t sub_2413E6480(uint64_t result, char a2)
{
  *(_BYTE *)(result + 40) = a2;
  return result;
}

double sub_2413E6488()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_2413E5CE4();
  sub_2414B2B84();
  swift_release();
  return *(double *)(v0 + 48);
}

uint64_t sub_2413E64F4(uint64_t result, double a2)
{
  *(double *)(result + 48) = a2;
  return result;
}

uint64_t ParallaxContext.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI15ParallaxContext___observationRegistrar;
  v2 = sub_2414B2BB4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ParallaxContext.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI15ParallaxContext___observationRegistrar;
  v2 = sub_2414B2BB4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_2413E65A0()
{
  return type metadata accessor for ParallaxContext();
}

uint64_t sub_2413E65A8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2414B2BB4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ParallaxContext()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ParallaxContext.animationProgress.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ParallaxContext.animationProgress.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of ParallaxContext.animationProgress.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of ParallaxContext.headerScrollOffset.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of ParallaxContext.headerScrollOffset.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of ParallaxContext.headerScrollOffset.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t sub_2413E66AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  result = swift_beginAccess();
  *(_QWORD *)(v1 + 24) = v2;
  return result;
}

uint64_t sub_2413E66FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  result = swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v2;
  return result;
}

uint64_t sub_2413E674C(uint64_t a1, OpaqueAudioQueue *a2, AudioQueueBuffer *a3, uint64_t a4, unsigned int a5, const AudioStreamPacketDescription *a6)
{
  return sub_2413E68A4(a1, a2, a3, a5, a6);
}

uint64_t sub_2413E6758()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AudioTapCallbackWrapper()
{
  return objc_opt_self();
}

uint64_t sub_2413E679C(OpaqueAudioQueue *a1, AudioQueueBuffer *a2, unsigned int a3, const AudioStreamPacketDescription *a4)
{
  uint64_t v4;
  uint64_t v8;
  char *mAudioData;
  uint64_t v10;
  char *v11;
  uint64_t result;

  v8 = a3;
  if (a3)
  {
    mAudioData = (char *)a2->mAudioData;
    v10 = sub_2414B4F0C();
    *(_QWORD *)(v10 + 16) = v8;
    v11 = (char *)(v10 + 32);
    if ((unint64_t)mAudioData < v10 + 32 + 4 * v8 && v11 < &mAudioData[4 * v8])
    {
      result = sub_2414B56F8();
      __break(1u);
      return result;
    }
    memcpy(v11, mAudioData, 4 * v8);
  }
  else
  {
    v10 = MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)(v10 + 16) = v8;
  (*(void (**)(uint64_t))(v4 + 16))(v10);
  swift_bridgeObjectRelease();
  return AudioQueueEnqueueBuffer(a1, a2, 0, a4);
}

uint64_t sub_2413E68A4(uint64_t a1, OpaqueAudioQueue *a2, AudioQueueBuffer *a3, unsigned int a4, const AudioStreamPacketDescription *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;

  v10 = sub_2414B2CA4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_retain();
    sub_2413E679C(a2, a3, a4, a5);
    return swift_release();
  }
  else
  {
    if (qword_2543827B0 != -1)
      swift_once();
    v15 = __swift_project_value_buffer(v10, (uint64_t)qword_25438E848);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v15, v10);
    v16 = sub_2414B2C8C();
    v17 = sub_2414B51A0();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_2412C1000, v16, v17, "AudioTapCallbackWrapper's wrappedCallback object is nil. Did not forward the call to callback wrapper", v18, 2u);
      MEMORY[0x242695BD8](v18, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

void sub_2413E6A30(os_log_type_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  NSObject *log;
  uint64_t v13;

  v7 = *(_QWORD *)(a4 + 8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  log = sub_2414B2C8C();
  if (os_log_type_enabled(log, a1))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v13 = v9;
    *(_DWORD *)v8 = 136446466;
    if (v7)
    {
      swift_bridgeObjectRetain();
      sub_2414B4DF8();
      sub_2414B4DF8();
      swift_bridgeObjectRelease();
      v10 = 60;
      v11 = 0xE100000000000000;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      v10 = 0;
      v11 = 0xE000000000000000;
    }
    sub_2412E4890(v10, v11, &v13);
    sub_2414B541C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_2412E4890(a2, a3, &v13);
    sub_2414B541C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2412C1000, log, a1, "%{public}s%{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v9, -1, -1);
    MEMORY[0x242695BD8](v8, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

  }
}

uint64_t sub_2413E6C64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  void (*v28)(char *, uint64_t);
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];

  v34 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380D78);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257127500);
  v5 = *(_QWORD *)(a1 + 24);
  v31 = *(_QWORD *)(a1 + 16);
  v32 = v5;
  swift_getAssociatedTypeWitness();
  sub_2414B49B4();
  sub_2414B53B0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257124850);
  swift_getTupleTypeMetadata3();
  v6 = sub_2414B4B1C();
  v7 = sub_241300998();
  v8 = MEMORY[0x24BDF5428];
  v35[1] = v4;
  v35[2] = v6;
  v35[3] = v7;
  v35[4] = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v6);
  sub_2414B3FA0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254384168);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257127508);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2543812C0);
  sub_2414B3514();
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543844D0);
  sub_2414B3514();
  swift_getTupleTypeMetadata2();
  v9 = sub_2414B4B1C();
  v30[2] = MEMORY[0x242695AE8](v8, v9);
  v10 = sub_2414B4804();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v30 - v15;
  v17 = sub_2414B53B0();
  v33 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)v30 - v21;
  v23 = v2;
  v24 = *(_QWORD *)(v2 + 32);
  v25 = swift_beginAccess();
  if (*(_BYTE *)(v24 + 16) == 1)
  {
    v30[1] = v30;
    MEMORY[0x24BDAC7A8](v25);
    v26 = v32;
    v30[-4] = v31;
    v30[-3] = v26;
    v30[-2] = v23;
    sub_2414B3880();
    sub_2414B47F8();
    MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v10);
    sub_2412FBF34((uint64_t)v13, v10, (uint64_t)v16);
    v27 = *(void (**)(char *, uint64_t))(v11 + 8);
    v27(v13, v10);
    sub_2412EEA1C((uint64_t)v16, v10, (uint64_t)v19);
    v27(v16, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v19, 1, 1, v10);
    MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v10);
  }
  sub_2412F65F0((uint64_t)v19, (uint64_t)v22);
  v28 = *(void (**)(char *, uint64_t))(v33 + 8);
  v28(v19, v17);
  v35[0] = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v10);
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v17, v35);
  sub_2412EEA1C((uint64_t)v22, v17, v34);
  return ((uint64_t (*)(char *, uint64_t))v28)(v22, v17);
}

uint64_t sub_2413E70A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  _OWORD *v51;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t);
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD v103[2];
  uint64_t v104;
  char v105;
  _QWORD v106[2];
  _QWORD v107[2];
  _QWORD v108[2];
  _QWORD v109[2];
  _QWORD v110[2];
  uint64_t *v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;

  v69 = a3;
  v72 = a2;
  v86 = a1;
  v97 = a4;
  v96 = sub_2414B38C8();
  v95 = *(_QWORD *)(v96 - 8);
  MEMORY[0x24BDAC7A8](v96);
  v94 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_2414B35A4();
  MEMORY[0x24BDAC7A8](v93);
  v92 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_2414B2F8C();
  v90 = *(_QWORD *)(v91 - 8);
  MEMORY[0x24BDAC7A8](v91);
  v89 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_2414B4A08();
  v83 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v74 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127510);
  MEMORY[0x24BDAC7A8](v82);
  v70 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380D78);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257127500);
  swift_getAssociatedTypeWitness();
  sub_2414B49B4();
  sub_2414B53B0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257124850);
  swift_getTupleTypeMetadata3();
  v10 = sub_2414B4B1C();
  v11 = sub_241300998();
  v68 = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v10);
  v111 = (uint64_t *)v9;
  v112 = v10;
  v113 = v11;
  v114 = v68;
  v12 = sub_2414B3FA0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v66 - v14;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254384168);
  v16 = sub_2414B3514();
  v75 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v67 = (char *)&v66 - v17;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257127508);
  v18 = sub_2414B3514();
  v78 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v71 = (char *)&v66 - v19;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2543812C0);
  v20 = sub_2414B3514();
  v79 = *(_QWORD *)(v20 - 8);
  v77 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v73 = (char *)&v66 - v21;
  v22 = sub_2414B3514();
  v87 = *(_QWORD *)(v22 - 8);
  v81 = v22;
  MEMORY[0x24BDAC7A8](v22);
  v76 = (char *)&v66 - v23;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543844D0);
  v24 = sub_2414B3514();
  v88 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v80 = (char *)&v66 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v85 = (uint64_t)&v66 - v27;
  v98 = v72;
  v99 = v69;
  v100 = v86;
  sub_2414B3F94();
  sub_2414B46C0();
  v28 = MEMORY[0x242695AE8](MEMORY[0x24BDF1A70], v12);
  sub_2414B4180();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v29 = v74;
  sub_2414B49FC();
  v30 = v83;
  v31 = (uint64_t)v70;
  v32 = v84;
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v70, v29, v84);
  *(_DWORD *)(v31 + *(int *)(v82 + 36)) = 1061997773;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v32);
  sub_2414B3E44();
  v33 = sub_2412C8FC4(&qword_254384160, &qword_254384168, MEMORY[0x24BDF1028]);
  v110[0] = v28;
  v110[1] = v33;
  v34 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v16, v110);
  sub_2412C8FC4(&qword_257127518, &qword_257127510, MEMORY[0x24BDEECA0]);
  v35 = v71;
  v36 = v67;
  sub_2414B412C();
  sub_2412CBE78(v31, &qword_257127510);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v36, v16);
  v37 = v90;
  v38 = v89;
  v39 = v91;
  (*(void (**)(char *, _QWORD, uint64_t))(v90 + 104))(v89, *MEMORY[0x24BDEB3F0], v91);
  v40 = sub_2412C8FC4(&qword_257127520, &qword_257127508, MEMORY[0x24BDF06D0]);
  v109[0] = v34;
  v109[1] = v40;
  v41 = MEMORY[0x24BDED308];
  v42 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v18, v109);
  v43 = v73;
  sub_2414B41B0();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v39);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v35, v18);
  sub_2414B4A44();
  v44 = sub_2412C8FC4(&qword_2543812B8, (uint64_t *)&unk_2543812C0, MEMORY[0x24BDF1028]);
  v108[0] = v42;
  v108[1] = v44;
  v45 = v77;
  v46 = MEMORY[0x242695AE8](v41, v77, v108);
  v47 = v76;
  sub_2414B44A4();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v43, v45);
  v48 = v95;
  v49 = v94;
  v50 = v96;
  (*(void (**)(char *, _QWORD, uint64_t))(v95 + 104))(v94, *MEMORY[0x24BDEEB68], v96);
  v51 = v92;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(&v92[*(int *)(v93 + 20)], v49, v50);
  __asm { FMOV            V0.2D, #12.0 }
  *v51 = _Q0;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
  v107[0] = v46;
  v107[1] = MEMORY[0x24BDEBEE0];
  v57 = v81;
  v58 = MEMORY[0x242695AE8](v41, v81, v107);
  sub_2412C8030((unint64_t *)&unk_2543844F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDED998], MEMORY[0x24BDED990]);
  v59 = (uint64_t)v80;
  sub_2414B4594();
  sub_241307648((uint64_t)v51);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v47, v57);
  v60 = sub_2412C8FC4(&qword_2543844C8, &qword_2543844D0, MEMORY[0x24BDEB950]);
  v106[0] = v58;
  v106[1] = v60;
  v61 = MEMORY[0x242695AE8](v41, v24, v106);
  v62 = v85;
  sub_2412FBF34(v59, v24, v85);
  v63 = v88;
  v64 = *(void (**)(uint64_t, uint64_t))(v88 + 8);
  v64(v59, v24);
  v104 = 0;
  v105 = 1;
  v111 = &v104;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16))(v59, v62, v24);
  v112 = v59;
  v103[0] = MEMORY[0x24BDF4638];
  v103[1] = v24;
  v101 = MEMORY[0x24BDF4610];
  v102 = v61;
  sub_2412F68CC((uint64_t *)&v111, 2uLL, (uint64_t)v103);
  v64(v62, v24);
  return ((uint64_t (*)(uint64_t, uint64_t))v64)(v59, v24);
}

uint64_t sub_2413E7A58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  id v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t AssociatedConformanceWitness;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  __int128 v60;
  uint64_t v61;
  __int128 v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  void (*v72)(uint64_t, uint64_t);
  void (*v73)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD v97[3];
  uint64_t v98;
  _QWORD v99[6];
  _QWORD v100[3];
  uint64_t v101;
  unint64_t v102;
  char *v103;
  _QWORD v104[3];
  __int128 v105;
  __int128 v106;

  v90 = a4;
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124850);
  v89 = *(_QWORD *)(v92 - 8);
  MEMORY[0x24BDAC7A8](v92);
  v91 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v88 = (char *)&v75 - v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = sub_2414B49B4();
  v80 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v77 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v78 = (uint64_t)&v75 - v14;
  v76 = sub_2414B53B0();
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v84 = (char *)&v75 - v15;
  v93 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v16);
  v79 = (char *)&v75 - v17;
  v83 = v11;
  v87 = sub_2414B53B0();
  v81 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v86 = (uint64_t)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v96 = (uint64_t)&v75 - v20;
  v21 = sub_2414B2B48();
  MEMORY[0x24BDAC7A8](v21);
  v22 = sub_2414B4D38();
  MEMORY[0x24BDAC7A8](v22);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127500);
  v95 = *(_QWORD *)(v85 - 8);
  MEMORY[0x24BDAC7A8](v85);
  v82 = (char *)&v75 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v75 - v25;
  sub_2414B4CF0();
  if (qword_2543846C8 != -1)
    swift_once();
  v27 = (id)qword_25438E910;
  sub_2414B2B3C();
  v101 = sub_2414B4D80();
  v102 = v28;
  MEMORY[0x24BDAC7A8](v101);
  *(&v75 - 4) = a2;
  *(&v75 - 3) = a3;
  *(&v75 - 2) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257127528);
  v29 = a1;
  v30 = a2;
  sub_2412C8FC4(&qword_257127530, &qword_257127528, MEMORY[0x24BDF5428]);
  sub_2412F6D88();
  v94 = v26;
  v31 = v29;
  v32 = a3;
  sub_2414B4990();
  v33 = *(_QWORD *)v31;
  v34 = v84;
  (*(void (**)(uint64_t, uint64_t))(v32 + 352))(v30, v32);
  v35 = v93;
  v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v93 + 48))(v34, 1, AssociatedTypeWitness);
  v37 = MEMORY[0x24BDF5138];
  v38 = AssociatedTypeWitness;
  if (v36 == 1)
  {
    (*(void (**)(char *, uint64_t))(v75 + 8))(v34, v76);
    v39 = a3;
    v40 = v86;
    v41 = v83;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v80 + 56))(v86, 1, 1, v83);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v104[0] = MEMORY[0x24BDF1F80];
    v104[1] = AssociatedConformanceWitness;
    v84 = (char *)AssociatedConformanceWitness;
    v104[2] = v37;
    MEMORY[0x242695AE8](MEMORY[0x24BDF4AF8], v41, v104);
    v43 = v30;
    sub_2412F65F0(v40, v96);
    v44 = v81;
    v45 = v87;
    v80 = *(_QWORD *)(v81 + 8);
    ((void (*)(uint64_t, uint64_t))v80)(v40, v87);
  }
  else
  {
    v46 = v79;
    (*(void (**)(void))(v35 + 32))();
    v47 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v48 = sub_2413E8C88();
    v76 = v33;
    v49 = v48;
    v51 = v50;

    v53 = 0x41206D6F74737543;
    if (v51)
      v53 = v49;
    v54 = 0xEE00736E6F697463;
    if (v51)
      v54 = v51;
    v101 = v53;
    v102 = v54;
    MEMORY[0x24BDAC7A8](v52);
    *(&v75 - 4) = v30;
    *(&v75 - 3) = a3;
    *(&v75 - 2) = (uint64_t)v46;
    v55 = swift_getAssociatedConformanceWitness();
    v56 = (uint64_t)v77;
    sub_2414B4990();
    v97[0] = MEMORY[0x24BDF1F80];
    v84 = (char *)v55;
    v97[1] = v55;
    v97[2] = MEMORY[0x24BDF5138];
    v41 = v83;
    MEMORY[0x242695AE8](MEMORY[0x24BDF4AF8], v83, v97);
    v57 = v78;
    sub_2412FBF34(v56, v41, v78);
    v58 = v80;
    v59 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
    v59(v56, v41);
    v39 = v32;
    v40 = v86;
    sub_2412EEA1C(v57, v41, v86);
    v59(v57, v41);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v58 + 56))(v40, 0, 1, v41);
    v43 = v30;
    sub_2412F65F0(v40, v96);
    v44 = v81;
    v45 = v87;
    v80 = *(_QWORD *)(v81 + 8);
    ((void (*)(uint64_t, uint64_t))v80)(v40, v87);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v79, v38);
  }
  v60 = *(_OWORD *)(v31 + 8);
  v105 = *(_OWORD *)(v31 + 24);
  v106 = v60;
  v61 = swift_allocObject();
  *(_QWORD *)(v61 + 16) = v43;
  *(_QWORD *)(v61 + 24) = v39;
  v62 = *(_OWORD *)(v31 + 16);
  *(_OWORD *)(v61 + 32) = *(_OWORD *)v31;
  *(_OWORD *)(v61 + 48) = v62;
  *(_QWORD *)(v61 + 64) = *(_QWORD *)(v31 + 32);
  swift_unknownObjectRetain();
  sub_2412EAFBC((uint64_t)&v106);
  sub_2412EAFBC((uint64_t)&v105);
  v63 = v88;
  sub_2414B47D4();
  v64 = (uint64_t)v82;
  v65 = v85;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v82, v94, v85);
  v101 = v64;
  v66 = v96;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v40, v96, v45);
  v102 = v40;
  v67 = v89;
  v68 = v91;
  v69 = v45;
  v70 = v92;
  (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v91, v63, v92);
  v103 = v68;
  v100[0] = v65;
  v100[1] = v69;
  v100[2] = v70;
  v99[3] = sub_2413E966C();
  v99[0] = MEMORY[0x24BDF1F80];
  v99[1] = v84;
  v99[2] = MEMORY[0x24BDF5138];
  v98 = MEMORY[0x242695AE8](MEMORY[0x24BDF4AF8], v41, v99);
  v99[4] = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v69, &v98);
  v99[5] = sub_2412C8FC4(&qword_257124848, &qword_257124850, MEMORY[0x24BDF43B0]);
  sub_2412F68CC(&v101, 3uLL, (uint64_t)v100);
  v71 = *(void (**)(char *, uint64_t))(v67 + 8);
  v71(v63, v70);
  v72 = (void (*)(uint64_t, uint64_t))v80;
  ((void (*)(uint64_t, uint64_t))v80)(v66, v69);
  v73 = *(void (**)(char *, uint64_t))(v95 + 8);
  v73(v94, v65);
  v71(v68, v70);
  v72(v40, v69);
  return ((uint64_t (*)(uint64_t, uint64_t))v73)(v64, v65);
}

uint64_t sub_2413E8454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  char *v31;
  uint64_t v32;
  __int128 v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  int *v43;
  void (*v44)(char *, uint64_t);
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;

  v53 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124850);
  v51 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v52 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v50 = (char *)&v46 - v10;
  MEMORY[0x24BDAC7A8](v11);
  v49 = (char *)&v46 - v12;
  MEMORY[0x24BDAC7A8](v13);
  v48 = (char *)&v46 - v14;
  MEMORY[0x24BDAC7A8](v15);
  v47 = (char *)&v46 - v16;
  MEMORY[0x24BDAC7A8](v17);
  v54 = (char *)&v46 - v18;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v46 - v20;
  MEMORY[0x24BDAC7A8](v22);
  v55 = (char *)&v46 - v23;
  v24 = *(_OWORD *)(a1 + 8);
  v68 = *(_OWORD *)(a1 + 24);
  v69 = v24;
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = a2;
  *(_QWORD *)(v25 + 24) = a3;
  v26 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v25 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v25 + 48) = v26;
  *(_QWORD *)(v25 + 64) = *(_QWORD *)(a1 + 32);
  v65 = a2;
  v66 = a3;
  v67 = a1;
  swift_unknownObjectRetain();
  sub_2412EAFBC((uint64_t)&v69);
  sub_2412EAFBC((uint64_t)&v68);
  sub_2414B47D4();
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = a2;
  *(_QWORD *)(v27 + 24) = a3;
  v28 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v27 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v27 + 48) = v28;
  *(_QWORD *)(v27 + 64) = *(_QWORD *)(a1 + 32);
  v62 = a2;
  v63 = a3;
  v64 = a1;
  swift_unknownObjectRetain();
  sub_2412EAFBC((uint64_t)&v69);
  sub_2412EAFBC((uint64_t)&v68);
  v46 = v21;
  sub_2414B47D4();
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = a2;
  *(_QWORD *)(v29 + 24) = a3;
  v30 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v29 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v29 + 48) = v30;
  *(_QWORD *)(v29 + 64) = *(_QWORD *)(a1 + 32);
  v59 = a2;
  v60 = a3;
  v61 = a1;
  swift_unknownObjectRetain();
  sub_2412EAFBC((uint64_t)&v69);
  sub_2412EAFBC((uint64_t)&v68);
  v31 = v54;
  sub_2414B47D4();
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = a2;
  *(_QWORD *)(v32 + 24) = a3;
  v33 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v32 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v32 + 48) = v33;
  *(_QWORD *)(v32 + 64) = *(_QWORD *)(a1 + 32);
  v56 = a2;
  v57 = a3;
  v58 = a1;
  swift_unknownObjectRetain();
  sub_2412EAFBC((uint64_t)&v69);
  sub_2412EAFBC((uint64_t)&v68);
  v34 = v47;
  sub_2414B47D4();
  v35 = v51;
  v36 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
  v37 = v48;
  v36(v48, v55, v7);
  v38 = v49;
  v36(v49, v21, v7);
  v39 = v50;
  v36(v50, v31, v7);
  v40 = v52;
  v41 = v34;
  v36(v52, v34, v7);
  v42 = v53;
  v36(v53, v37, v7);
  v43 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_257127540);
  v36(&v42[v43[12]], v38, v7);
  v36(&v42[v43[16]], v39, v7);
  v36(&v42[v43[20]], v40, v7);
  v44 = *(void (**)(char *, uint64_t))(v35 + 8);
  v44(v41, v7);
  v44(v54, v7);
  v44(v46, v7);
  v44(v55, v7);
  v44(v40, v7);
  v44(v39, v7);
  v44(v38, v7);
  return ((uint64_t (*)(char *, uint64_t))v44)(v37, v7);
}

uint64_t sub_2413E8948()
{
  sub_2414B4AC8();
  sub_2414B3328();
  return swift_release();
}

uint64_t sub_2413E89A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  char v4;

  v1 = *(_QWORD *)(a1 + 16);
  KeyPath = swift_getKeyPath();
  v3 = swift_getKeyPath();
  swift_beginAccess();
  v4 = *(_BYTE *)(v1 + 16);
  swift_retain();
  return sub_24143F444((v4 & 1) == 0, v1, KeyPath, v3);
}

uint64_t sub_2413E8A34(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  char v4;

  v1 = *(_QWORD *)(a1 + 32);
  KeyPath = swift_getKeyPath();
  v3 = swift_getKeyPath();
  swift_beginAccess();
  v4 = *(_BYTE *)(v1 + 17);
  swift_retain();
  return sub_24143F460((v4 & 1) == 0, v1, KeyPath, v3);
}

uint64_t sub_2413E8AB8()
{
  void (*v0)(uint64_t *, _QWORD);
  BOOL *v1;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  v0 = (void (*)(uint64_t *, _QWORD))sub_2414B2E30();
  *v1 = !*v1;
  v0(&v3, 0);
  swift_release();
  return swift_release();
}

uint64_t sub_2413E8B48@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  unint64_t v3;
  char v4;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  result = swift_release();
  if (v4)
    v3 = 0x80000002414D2940;
  else
    v3 = 0x80000002414D2920;
  *(_QWORD *)a1 = 0xD000000000000011;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t sub_2413E8C04(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  char v4;

  v1 = *(_QWORD *)(a1 + 32);
  KeyPath = swift_getKeyPath();
  v3 = swift_getKeyPath();
  swift_beginAccess();
  v4 = *(_BYTE *)(v1 + 18);
  swift_retain();
  return sub_24143F460((v4 & 1) == 0, v1, KeyPath, v3);
}

uint64_t sub_2413E8C88()
{
  void *v0;
  void *v1;
  id v2;
  void *v4;
  id v5;
  __int128 v6;
  __int128 v7;
  _BYTE v8[24];
  uint64_t v9;
  uint64_t v10;

  v1 = (void *)sub_2414B4D44();
  v2 = objc_msgSend(v0, sel_objectForInfoDictionaryKey_, v1);

  if (v2)
  {
    sub_2414B544C();
    swift_unknownObjectRelease();
  }
  else
  {
    v6 = 0u;
    v7 = 0u;
  }
  sub_2412FFB60((uint64_t)&v6, (uint64_t)v8);
  if (v9)
  {
    if (swift_dynamicCast())
      return v10;
  }
  else
  {
    sub_2412CBE78((uint64_t)v8, &qword_25437D280);
  }
  v4 = (void *)sub_2414B4D44();
  v5 = objc_msgSend(v0, sel_objectForInfoDictionaryKey_, v4);

  if (v5)
  {
    sub_2414B544C();
    swift_unknownObjectRelease();
  }
  else
  {
    v6 = 0u;
    v7 = 0u;
  }
  sub_2412FFB60((uint64_t)&v6, (uint64_t)v8);
  if (v9)
  {
    if (swift_dynamicCast())
      return v10;
    else
      return 0;
  }
  else
  {
    sub_2412CBE78((uint64_t)v8, &qword_25437D280);
    return 0;
  }
}

uint64_t sub_2413E8E38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v7 = (char *)&v9 - v6;
  swift_getAssociatedConformanceWitness();
  sub_2412FBF34(a1, AssociatedTypeWitness, (uint64_t)v7);
  sub_2412EEA1C((uint64_t)v7, AssociatedTypeWitness, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
}

uint64_t sub_2413E8F24(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = *(_QWORD *)(a1 + 32);
  KeyPath = swift_getKeyPath();
  v3 = swift_getKeyPath();
  swift_retain();
  return sub_24143F460(0, v1, KeyPath, v3);
}

double sub_2413E8F80@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 9.79706241e165;
  *(_OWORD *)a1 = xmmword_2414C3E50;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t sub_2413E8FA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = sub_2414B4714();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414B4708();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3FD0], v2);
  v6 = sub_2414B4738();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  LOBYTE(v2) = sub_2414B3E44();
  result = sub_2414B2F20();
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v11;
  *(_BYTE *)(a1 + 48) = 0;
  return result;
}

uint64_t sub_2413E90A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2413E6C64(a1, a2);
}

uint64_t sub_2413E90DC()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_2413E910C()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t sub_2413E913C()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_2413E91AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel5Debug__showRedBackdrop;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254384338);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_2413E9200()
{
  return _s5DebugCMa();
}

uint64_t sub_2413E9208@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  _s5DebugCMa();
  result = sub_2414B2DA0();
  *a1 = result;
  return result;
}

uint64_t sub_2413E9244(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath();
  v5 = swift_getKeyPath();
  swift_retain();
  return sub_24143F460(v2, v3, KeyPath, v5);
}

uint64_t sub_2413E92A0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_2413E931C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_2414B2E48();
}

uint64_t sub_2413E938C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v8 = *(void (**)(uint64_t, uint64_t))(a3 + 208);
  swift_unknownObjectRetain();
  v8(a2, a3);
  swift_retain();
  swift_release();
  _s6BannerCMa();
  sub_2412C8030((unint64_t *)&qword_254383BE0, (uint64_t (*)(uint64_t))_s6BannerCMa, (uint64_t)&unk_2414C6ED0);
  v9 = sub_2414B33C4();
  v11 = v10;
  v8(a2, a3);
  swift_retain();
  swift_release();
  _s5DebugCMa();
  sub_2412C8030((unint64_t *)&qword_25437F060, (uint64_t (*)(uint64_t))_s5DebugCMa, (uint64_t)&unk_2414C3E98);
  result = sub_2414B33C4();
  *a4 = a1;
  a4[1] = v9;
  a4[2] = v11;
  a4[3] = result;
  a4[4] = v13;
  return result;
}

uint64_t sub_2413E94A8()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_release();
}

_QWORD *sub_2413E94D8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_2413E952C(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_2413E95B0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  swift_unknownObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_release();
  v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_release();
  return a1;
}

uint64_t sub_2413E9604()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2413E9638@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_2413E70A4(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_2413E9644@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_2413E7A58(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_2413E9650@<X0>(char *a1@<X8>)
{
  uint64_t *v1;

  return sub_2413E8454(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_2413E9660()
{
  uint64_t v0;

  return sub_2413E8F24(v0 + 32);
}

unint64_t sub_2413E966C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[3];

  result = qword_257127538;
  if (!qword_257127538)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257127500);
    v2 = sub_2412C8FC4(&qword_257127530, &qword_257127528, MEMORY[0x24BDF5428]);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    v3[2] = MEMORY[0x24BDF5138];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF4AF8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_257127538);
  }
  return result;
}

uint64_t sub_2413E96FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2413E8E38(*(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_2413E9714()
{
  return sub_2413E8948();
}

uint64_t sub_2413E9720@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 32) + 16);
  result = swift_beginAccess();
  v5 = 0x6E614220776F6853;
  if (*(_BYTE *)(v3 + 16))
    v5 = 0x6E61422065646948;
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = 0xEB0000000072656ELL;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t sub_2413E97B0()
{
  uint64_t v0;

  return sub_2413E8A34(v0 + 32);
}

uint64_t sub_2413E97BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 32) + 32);
  result = swift_beginAccess();
  if (*(_BYTE *)(v3 + 17))
    v5 = 0x80000002414D2980;
  else
    v5 = 0x80000002414D2960;
  *(_QWORD *)a1 = 0xD000000000000013;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t sub_2413E9848()
{
  return sub_2413E8AB8();
}

uint64_t sub_2413E9854@<X0>(uint64_t a1@<X8>)
{
  return sub_2413E8B48(a1);
}

uint64_t sub_2413E9864()
{
  uint64_t v0;

  return sub_2413E8C04(v0 + 32);
}

uint64_t sub_2413E9870@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 32) + 32);
  result = swift_beginAccess();
  if (*(_BYTE *)(v3 + 18))
    v5 = 0x80000002414D2900;
  else
    v5 = 0x80000002414D28E0;
  *(_QWORD *)a1 = 0xD000000000000014;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t sub_2413E98F8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 18);
  return result;
}

uint64_t sub_2413E993C(char *a1, uint64_t *a2)
{
  return sub_2413E9244(a1, a2);
}

uint64_t sub_2413E9960@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 17);
  return result;
}

uint64_t sub_2413E99A4(char *a1, uint64_t *a2)
{
  return sub_2413E9244(a1, a2);
}

uint64_t sub_2413E99C8()
{
  uint64_t v0;

  return sub_2413E89A8(*(_QWORD *)(v0 + 32));
}

uint64_t sub_2413E99EC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[5];

  v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380D78);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257127500);
  swift_getAssociatedTypeWitness();
  sub_2414B49B4();
  sub_2414B53B0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257124850);
  swift_getTupleTypeMetadata3();
  v1 = sub_2414B4B1C();
  v2 = sub_241300998();
  v3 = MEMORY[0x24BDF5428];
  v8[1] = v0;
  v8[2] = v1;
  v8[3] = v2;
  v8[4] = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v1);
  sub_2414B3FA0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254384168);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257127508);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2543812C0);
  sub_2414B3514();
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543844D0);
  sub_2414B3514();
  swift_getTupleTypeMetadata2();
  v4 = sub_2414B4B1C();
  MEMORY[0x242695AE8](v3, v4);
  v5 = sub_2414B4804();
  v6 = sub_2414B53B0();
  v8[0] = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v5);
  return MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v6, v8);
}

uint64_t sub_2413E9C04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  void (*v19)(_BYTE *, uint64_t);
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD v25[7];
  char v26;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  _s18PlayerControlsViewVMa(255, v5, v6, a2);
  sub_2414B3514();
  sub_2414B3514();
  _s17VolumeControlViewVMa(255, v5, v6, v7);
  sub_2414B3514();
  sub_2414B3514();
  swift_getTupleTypeMetadata2();
  v8 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v8);
  v9 = sub_2414B4894();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = &v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13);
  v15 = &v21[-v14];
  v16 = *(_OWORD *)(v3 + 80);
  v25[4] = *(_OWORD *)(v3 + 64);
  v25[5] = v16;
  v25[6] = *(_OWORD *)(v3 + 96);
  v26 = *(_BYTE *)(v3 + 112);
  v17 = *(_OWORD *)(v3 + 16);
  v25[0] = *(_OWORD *)v3;
  v25[1] = v17;
  v18 = *(_OWORD *)(v3 + 48);
  v25[2] = *(_OWORD *)(v3 + 32);
  v25[3] = v18;
  v22 = v5;
  v23 = v6;
  v24 = v25;
  sub_2414B3964();
  sub_2414B4888();
  MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v9);
  sub_2412FBF34((uint64_t)v12, v9, (uint64_t)v15);
  v19 = *(void (**)(_BYTE *, uint64_t))(v10 + 8);
  v19(v12, v9);
  sub_2412EEA1C((uint64_t)v15, v9, a3);
  return ((uint64_t (*)(_BYTE *, uint64_t))v19)(v15, v9);
}

uint64_t sub_2413E9E0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  char *v46;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[2];
  _QWORD v66[2];
  _QWORD v67[2];
  _QWORD v68[2];
  __int128 v69;
  __int128 v70;
  char v71;
  __int128 v72;
  __int128 v73;
  char v74;
  __int128 v75;
  _QWORD v76[2];
  __int128 v77;
  __int128 v78;
  char v79;
  __int128 v80;
  __int128 v81;
  char v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  char v86;
  __int128 v87;
  __int128 v88;
  char v89;
  __int128 v90;
  _OWORD v91[3];
  _OWORD v92[2];
  _BYTE v93[96];

  v62 = a5;
  v8 = _s17VolumeControlViewVMa(0, a2, a3, a4);
  v57 = *(_QWORD *)(v8 - 8);
  v54 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v51 = (uint64_t)&v48 - v9;
  v10 = sub_2414B3514();
  v11 = *(_QWORD *)(v10 - 8);
  v55 = v10;
  *(_QWORD *)&v59 = v11;
  MEMORY[0x24BDAC7A8](v10);
  v52 = (char *)&v48 - v12;
  v58 = sub_2414B3514();
  v60 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v61 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v53 = (char *)&v48 - v15;
  MEMORY[0x24BDAC7A8](v16);
  v56 = (uint64_t)&v48 - v17;
  sub_2412C84FC(*(_QWORD *)(a1 + 80));
  v18 = *(void (**)(uint64_t, uint64_t))(a3 + 208);
  swift_unknownObjectRetain();
  v18(a2, a3);
  swift_unknownObjectRelease();
  swift_retain();
  swift_release();
  v49 = a2;
  *(_QWORD *)&v69 = sub_24135E2F8();
  *((_QWORD *)&v69 + 1) = v19;
  *(_QWORD *)&v70 = v20;
  *((_QWORD *)&v70 + 1) = v21;
  sub_2414B3E5C();
  v22 = *(_OWORD *)(a1 + 48);
  v91[2] = *(_OWORD *)(a1 + 32);
  v92[0] = v22;
  *(_OWORD *)((char *)v92 + 10) = *(_OWORD *)(a1 + 58);
  v23 = *(_OWORD *)(a1 + 16);
  v91[0] = *(_OWORD *)a1;
  v91[1] = v23;
  sub_2412FD220((uint64_t)v91, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
  sub_2412FD278((uint64_t)&v77);
  sub_2412FD220((uint64_t)v91, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
  v84 = v77;
  LOBYTE(v85) = v78;
  *(_WORD *)((char *)&v85 + 1) = *(_WORD *)((char *)&v78 + 1);
  *((_QWORD *)&v85 + 1) = *((_QWORD *)&v78 + 1);
  v86 = v79;
  v87 = v80;
  v88 = v81;
  v89 = v82;
  sub_2413EA4C4();
  v25 = _s18PlayerControlsViewVMa(0, a2, a3, v24);
  v26 = MEMORY[0x242695AE8](&unk_2414BC750, v25);
  sub_2414B4528();
  swift_release();
  swift_unknownObjectRelease();
  v69 = v84;
  v50 = v85;
  v70 = v85;
  v71 = v86;
  v72 = v87;
  v73 = v88;
  v74 = v89;
  sub_2413139F4((uint64_t)v91, (uint64_t)v93);
  v27 = sub_2414B3514();
  v76[0] = v26;
  v76[1] = MEMORY[0x24BDECC60];
  v28 = MEMORY[0x24BDED308];
  v29 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v27, v76);
  sub_2414B44C8();
  swift_release();
  swift_unknownObjectRelease();
  v69 = v77;
  v48 = v78;
  v70 = v78;
  v71 = v79;
  v72 = v80;
  v73 = v81;
  v74 = v82;
  v75 = v83;
  v30 = sub_2414B3514();
  v31 = MEMORY[0x24BDEC438];
  v68[0] = v29;
  v68[1] = MEMORY[0x24BDEC438];
  *(_QWORD *)&v50 = MEMORY[0x242695AE8](v28, v30, v68);
  sub_2412FBF34((uint64_t)&v69, v30, (uint64_t)&v84);
  swift_release();
  swift_unknownObjectRelease();
  v32 = v51;
  sub_241369684(v49, a3, v51);
  sub_2414B3E5C();
  sub_2412FD220((uint64_t)v93, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
  sub_2412FD278((uint64_t)&v77);
  sub_2412FD220((uint64_t)v91, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
  v69 = v77;
  LOBYTE(v70) = v78;
  *(_WORD *)((char *)&v70 + 1) = *(_WORD *)((char *)&v78 + 1);
  *((_QWORD *)&v70 + 1) = *((_QWORD *)&v78 + 1);
  v71 = v79;
  v72 = v80;
  v73 = v81;
  v74 = v82;
  sub_2413EA8C0();
  v33 = v54;
  v34 = MEMORY[0x242695AE8](&unk_2414BD070, v54);
  v35 = v52;
  sub_2414B4528();
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v32, v33);
  v67[0] = v34;
  v67[1] = MEMORY[0x24BDECC60];
  v36 = MEMORY[0x24BDED308];
  v37 = v55;
  v38 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v55, v67);
  v39 = (uint64_t)v53;
  sub_2414B44C8();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v35, v37);
  v66[0] = v38;
  v66[1] = v31;
  v40 = v58;
  v41 = MEMORY[0x242695AE8](v36, v58, v66);
  v42 = v56;
  v43 = v39;
  sub_2412FBF34(v39, v40, v56);
  v44 = v60;
  v45 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
  v45(v43, v40);
  v77 = v84;
  v59 = v85;
  v78 = v85;
  v79 = v86;
  v80 = v87;
  v81 = v88;
  v82 = v89;
  v83 = v90;
  *(_QWORD *)&v69 = &v77;
  v46 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v61, v42, v40);
  *((_QWORD *)&v69 + 1) = v46;
  swift_unknownObjectRetain();
  swift_retain();
  v65[0] = v30;
  v65[1] = v40;
  v63 = v50;
  v64 = v41;
  sub_2412F68CC((uint64_t *)&v69, 2uLL, (uint64_t)v65);
  v45(v42, v40);
  swift_release();
  swift_unknownObjectRelease();
  v45((uint64_t)v46, v40);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_2413EA4C4()
{
  __asm { BR              X11 }
}

void sub_2413EA8C0()
{
  __asm { BR              X11 }
}

double sub_2413EABA8@<D0>(uint64_t a1@<X8>)
{
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;

  KeyPath = swift_getKeyPath();
  v3 = sub_2414B3658();
  v5 = v4;
  _s17TransportControlsCMa();
  sub_2413EACE4();
  v6 = sub_2414B3658();
  *(_QWORD *)a1 = KeyPath;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_WORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = v3;
  *(_QWORD *)(a1 + 88) = v5;
  *(_QWORD *)(a1 + 96) = v6;
  *(_QWORD *)(a1 + 104) = v8;
  *(_BYTE *)(a1 + 112) = 1;
  return result;
}

uint64_t sub_2413EAC48@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  *(_QWORD *)a2 = swift_getKeyPath();
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 56) = 0u;
  *(_WORD *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = sub_2414B3658();
  *(_QWORD *)(a2 + 88) = v4;
  _s17TransportControlsCMa();
  sub_2413EACE4();
  result = sub_2414B3658();
  *(_QWORD *)(a2 + 96) = result;
  *(_QWORD *)(a2 + 104) = v6;
  *(_BYTE *)(a2 + 112) = a1;
  return result;
}

unint64_t sub_2413EACE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25437EDE0;
  if (!qword_25437EDE0)
  {
    v1 = _s17TransportControlsCMa();
    result = MEMORY[0x242695AE8](&unk_2414C0048, v1);
    atomic_store(result, (unint64_t *)&qword_25437EDE0);
  }
  return result;
}

uint64_t sub_2413EAD2C(uint64_t a1)
{
  sub_2412C823C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_BYTE *)(a1 + 72), *(_BYTE *)(a1 + 73));
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t sub_2413EAD88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;
  char v17;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v15 = *(_QWORD *)(a2 + 64);
  v16 = *(_BYTE *)(a2 + 72);
  v17 = *(_BYTE *)(a2 + 73);
  sub_2412C6F48(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v15, v16, v17);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v15;
  *(_BYTE *)(a1 + 72) = v16;
  *(_BYTE *)(a1 + 73) = v17;
  v12 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v12;
  v13 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v13;
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_2413EAE74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v24;
  char v25;
  char v26;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v24 = *(_QWORD *)(a2 + 64);
  v25 = *(_BYTE *)(a2 + 72);
  v26 = *(_BYTE *)(a2 + 73);
  sub_2412C6F48(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v24, v25, v26);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_QWORD *)(a1 + 64);
  v21 = *(_BYTE *)(a1 + 72);
  v22 = *(_BYTE *)(a1 + 73);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v24;
  *(_BYTE *)(a1 + 72) = v25;
  *(_BYTE *)(a1 + 73) = v26;
  sub_2412C823C(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  return a1;
}

__n128 __swift_memcpy113_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t sub_2413EAFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  v4 = *(_QWORD *)(a2 + 64);
  v5 = *(_BYTE *)(a2 + 72);
  v6 = *(_BYTE *)(a2 + 73);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 48);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *(_QWORD *)(a1 + 64);
  v16 = *(_BYTE *)(a1 + 72);
  v17 = *(_BYTE *)(a1 + 73);
  v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  *(_QWORD *)(a1 + 64) = v4;
  *(_BYTE *)(a1 + 72) = v5;
  *(_BYTE *)(a1 + 73) = v6;
  sub_2412C823C(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_unknownObjectRelease();
  v20 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v20;
  swift_release();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  return a1;
}

uint64_t sub_2413EB08C(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 113))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 80);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_2413EB0E8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 112) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 113) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 113) = 0;
    if (a2)
      *(_QWORD *)(result + 80) = a2;
  }
  return result;
}

uint64_t _s12ControlsViewVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s12ControlsViewVMn);
}

uint64_t sub_2413EB168()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2413EB1A0@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_2413E9E0C(v2[4], v2[2], v2[3], a1, a2);
}

void sub_2413EB1AC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v5 = a1[1];
  _s18PlayerControlsViewVMa(255, *a1, v5, a4);
  sub_2414B3514();
  sub_2414B3514();
  _s17VolumeControlViewVMa(255, v4, v5, v6);
  sub_2414B3514();
  sub_2414B3514();
  swift_getTupleTypeMetadata2();
  v7 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v7);
  sub_2414B4894();
  JUMPOUT(0x242695AE8);
}

uint64_t destroy for GradientBottomMask(uint64_t a1)
{
  sub_2412C823C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_BYTE *)(a1 + 72), *(_BYTE *)(a1 + 73));
  return swift_release();
}

uint64_t initializeWithCopy for GradientBottomMask(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  char v16;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v14 = *(_QWORD *)(a2 + 64);
  v15 = *(_BYTE *)(a2 + 72);
  v16 = *(_BYTE *)(a2 + 73);
  sub_2412C6F48(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v14, v15, v16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v14;
  *(_BYTE *)(a1 + 72) = v15;
  *(_BYTE *)(a1 + 73) = v16;
  v12 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v12;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for GradientBottomMask(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v24;
  char v25;
  char v26;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v24 = *(_QWORD *)(a2 + 64);
  v25 = *(_BYTE *)(a2 + 72);
  v26 = *(_BYTE *)(a2 + 73);
  sub_2412C6F48(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v24, v25, v26);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_QWORD *)(a1 + 64);
  v21 = *(_BYTE *)(a1 + 72);
  v22 = *(_BYTE *)(a1 + 73);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v24;
  *(_BYTE *)(a1 + 72) = v25;
  *(_BYTE *)(a1 + 73) = v26;
  sub_2412C823C(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  return a1;
}

uint64_t assignWithTake for GradientBottomMask(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  __int128 v18;
  __int128 v19;

  v4 = *(_QWORD *)(a2 + 64);
  v5 = *(_BYTE *)(a2 + 72);
  v6 = *(_BYTE *)(a2 + 73);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 48);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *(_QWORD *)(a1 + 64);
  v16 = *(_BYTE *)(a1 + 72);
  v17 = *(_BYTE *)(a1 + 73);
  v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  *(_QWORD *)(a1 + 64) = v4;
  *(_BYTE *)(a1 + 72) = v5;
  *(_BYTE *)(a1 + 73) = v6;
  sub_2412C823C(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for GradientBottomMask(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 96))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 80);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GradientBottomMask(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 96) = 0;
    if (a2)
      *(_QWORD *)(result + 80) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for GradientBottomMask()
{
  return &type metadata for GradientBottomMask;
}

uint64_t *sub_2413EB64C(uint64_t *a1, uint64_t *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_DWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v5 = sub_2414B3934();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2413EB714(uint64_t a1)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v2 = sub_2414B3934();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

_QWORD *sub_2413EB778(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2414B3934();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_2413EB814(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_2412CBE78((uint64_t)a1, &qword_25437DAA0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_2414B3934();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_2413EB8C8(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2414B3934();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_2413EB960(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != a2)
  {
    sub_2412CBE78((uint64_t)a1, &qword_25437DAA0);
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v5 = sub_2414B3934();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2413EBA10()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2413EBA1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571226F0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_2413EBA5C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2413EBA68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571226F0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for NowPlayingContrastSensitiveBackdrop()
{
  uint64_t result;

  result = qword_2571275A0;
  if (!qword_2571275A0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2413EBAE8()
{
  unint64_t v0;

  sub_24133ACB8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_2413EBB50()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2413EBB60@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  __int128 v23;
  __int128 v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t *v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (**v78)();
  uint64_t result;
  uint64_t (*v80)();
  unint64_t *v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  _BYTE v97[48];
  __int128 v98;
  char v99;
  __int16 v100;
  uint64_t v101;
  char v102;
  __int128 v103;
  __int128 v104;
  char v105;
  __int128 v106;
  char v107;
  __int16 v108;
  uint64_t v109;
  char v110;
  __int128 v111;
  __int128 v112;
  char v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  _OWORD v117[3];
  _OWORD v118[2];
  _BYTE v119[96];

  v96 = a2;
  v3 = type metadata accessor for NowPlayingContrastSensitiveBackdrop();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (uint64_t *)((char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v83 - v7;
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571275D8);
  MEMORY[0x24BDAC7A8](v83);
  v10 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127680);
  MEMORY[0x24BDAC7A8](v84);
  v12 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127688);
  MEMORY[0x24BDAC7A8](v85);
  v14 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127690);
  MEMORY[0x24BDAC7A8](v86);
  v89 = (uint64_t)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127698);
  MEMORY[0x24BDAC7A8](v87);
  v90 = (uint64_t)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571276A0);
  MEMORY[0x24BDAC7A8](v88);
  v95 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571276A8);
  MEMORY[0x24BDAC7A8](v93);
  v94 = (uint64_t)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571276B0);
  MEMORY[0x24BDAC7A8](v91);
  v92 = (uint64_t)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2571208D8 != -1)
    swift_once();
  v20 = *(double *)&qword_257136FD8;
  sub_2414B3250();
  v22 = v21;
  v23 = *(_OWORD *)(a1 + 48);
  v117[2] = *(_OWORD *)(a1 + 32);
  v118[0] = v23;
  *(_OWORD *)((char *)v118 + 10) = *(_OWORD *)(a1 + 58);
  v24 = *(_OWORD *)(a1 + 16);
  v117[0] = *(_OWORD *)a1;
  v117[1] = v24;
  sub_2412EAEA4((uint64_t)v117, (uint64_t)v119, &qword_254380B18);
  sub_2412FD220((uint64_t)v119, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
  sub_2412FD278((uint64_t)&v106);
  sub_2412FD220((uint64_t)v117, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
  v98 = v106;
  v99 = v107;
  v100 = v108;
  v101 = v109;
  v102 = v110;
  v103 = v111;
  v104 = v112;
  v105 = v113;
  sub_24144FEC4((uint64_t)&v98);
  v26 = v25;
  *v5 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  swift_storeEnumTagMultiPayload();
  sub_2413D1D7C((uint64_t)v5, (uint64_t)v8);
  v27 = sub_2414B4A44();
  v29 = *(_QWORD *)(a1 + 80);
  if (!v29)
  {
    _s5DebugCMa();
    v80 = _s5DebugCMa;
    v81 = (unint64_t *)&qword_25437F060;
    v82 = &unk_2414C3E98;
LABEL_18:
    sub_2412C8030(v81, (uint64_t (*)(uint64_t))v80, (uint64_t)v82);
    result = sub_2414B364C();
    __break(1u);
    return result;
  }
  v30 = v27;
  v31 = v28;
  v32 = v20 + v22 + v26 + 4.0 - v20;
  swift_beginAccess();
  v33 = 0;
  if ((*(_BYTE *)(v29 + 17) & 1) != 0)
    v33 = sub_2414B4630();
  sub_2413ED154((uint64_t)v8, (uint64_t)v10);
  v34 = (uint64_t *)&v10[*(int *)(v83 + 36)];
  *v34 = v33;
  v34[1] = v30;
  v34[2] = v31;
  sub_2413ED198((uint64_t)v8);
  sub_2414B4A2C();
  sub_2414B31B4();
  sub_2412DC3FC((uint64_t)v10, (uint64_t)v12, &qword_2571275D8);
  v35 = &v12[*(int *)(v84 + 36)];
  v36 = v115;
  *(_OWORD *)v35 = v114;
  *((_OWORD *)v35 + 1) = v36;
  *((_OWORD *)v35 + 2) = v116;
  sub_2412CBE78((uint64_t)v10, &qword_2571275D8);
  v37 = sub_2414B4A2C();
  v39 = v38;
  sub_2414B4B4C();
  v41 = v40;
  v43 = v42;
  sub_2414B4B58();
  v45 = v44;
  v47 = v46;
  sub_2412DC3FC((uint64_t)v12, (uint64_t)v14, &qword_257127680);
  v48 = &v14[*(int *)(v85 + 36)];
  *(_QWORD *)v48 = v37;
  *((_QWORD *)v48 + 1) = v39;
  *((double *)v48 + 2) = v32;
  *((double *)v48 + 3) = v20;
  *((_QWORD *)v48 + 4) = v41;
  *((_QWORD *)v48 + 5) = v43;
  *((_QWORD *)v48 + 6) = v45;
  *((_QWORD *)v48 + 7) = v47;
  sub_2412CBE78((uint64_t)v12, &qword_257127680);
  LOBYTE(v39) = sub_2414B3E68();
  sub_2412FD220((uint64_t)v119, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
  sub_2412FD278((uint64_t)&v106);
  sub_2412FD220((uint64_t)v117, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
  v98 = v106;
  v99 = v107;
  v100 = v108;
  v101 = v109;
  v102 = v110;
  v103 = v111;
  v104 = v112;
  v105 = v113;
  sub_2413EC404();
  sub_2414B2F20();
  v50 = v49;
  v52 = v51;
  v54 = v53;
  v56 = v55;
  v57 = v89;
  sub_2412DC3FC((uint64_t)v14, v89, &qword_257127688);
  v58 = v57 + *(int *)(v86 + 36);
  *(_BYTE *)v58 = v39;
  *(_QWORD *)(v58 + 8) = v50;
  *(_QWORD *)(v58 + 16) = v52;
  *(_QWORD *)(v58 + 24) = v54;
  *(_QWORD *)(v58 + 32) = v56;
  *(_BYTE *)(v58 + 40) = 0;
  sub_2412CBE78((uint64_t)v14, &qword_257127688);
  v59 = sub_2414B3E80();
  sub_2412FD220((uint64_t)v119, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
  sub_2412FD278((uint64_t)&v106);
  sub_2412FD220((uint64_t)v117, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
  v98 = v106;
  v99 = v107;
  if (HIBYTE(v108))
  {
    v100 = v108;
    v101 = v109;
    v102 = v110;
    v103 = v111;
    v104 = v112;
    v105 = v113;
    sub_24144F9F0((uint64_t)v97);
  }
  else
  {
    v100 = v108;
    v101 = v109;
    v102 = v110;
    v103 = v111;
    v104 = v112;
    v105 = v113;
    sub_24144F8F8((uint64_t)v97);
  }
  v60 = (uint64_t)v95;
  if (qword_257120B98 != -1)
    swift_once();
  sub_2414B2F20();
  v62 = v61;
  v64 = v63;
  v66 = v65;
  v68 = v67;
  v69 = v90;
  sub_2412DC3FC(v57, v90, &qword_257127690);
  v70 = v69 + *(int *)(v87 + 36);
  *(_BYTE *)v70 = v59;
  *(_QWORD *)(v70 + 8) = v62;
  *(_QWORD *)(v70 + 16) = v64;
  *(_QWORD *)(v70 + 24) = v66;
  *(_QWORD *)(v70 + 32) = v68;
  *(_BYTE *)(v70 + 40) = 0;
  sub_2412CBE78(v57, &qword_257127690);
  v71 = sub_2414B3520();
  v72 = sub_2414B3E44();
  sub_2412DC3FC(v69, v60, &qword_257127698);
  v73 = v60 + *(int *)(v88 + 36);
  *(_QWORD *)v73 = v71;
  *(_BYTE *)(v73 + 8) = v72;
  sub_2412CBE78(v69, &qword_257127698);
  v74 = *(_QWORD *)(a1 + 96);
  if (!v74)
  {
    _s5QueueCMa();
    v80 = _s5QueueCMa;
    v81 = &qword_25437F1A8;
    v82 = &unk_2414C2E08;
    goto LABEL_18;
  }
  swift_beginAccess();
  if (*(_BYTE *)(v74 + 16))
    v75 = 1.0;
  else
    v75 = 0.0;
  v76 = v94;
  sub_2412DC3FC(v60, v94, &qword_2571276A0);
  *(double *)(v76 + *(int *)(v93 + 36)) = v75;
  sub_2412CBE78(v60, &qword_2571276A0);
  v77 = v92;
  sub_2412DC3FC(v76, v92, &qword_2571276A8);
  v78 = (uint64_t (**)())(v77 + *(int *)(v91 + 36));
  *v78 = sub_2413EC5C8;
  v78[1] = 0;
  sub_2412CBE78(v76, &qword_2571276A8);
  return sub_2412EAEA4(v77, v96, &qword_2571276B0);
}

void sub_2413EC404()
{
  uint64_t v0;
  _BYTE v1[8];

  if (!*(_BYTE *)(v0 + 18))
  {
    sub_24144F8F8((uint64_t)v1);
    goto LABEL_7;
  }
  if (*(_BYTE *)(v0 + 18) != 2)
  {
    sub_24144F9F0((uint64_t)v1);
LABEL_7:
    if (qword_257120B98 == -1)
      return;
    goto LABEL_8;
  }
  sub_24144F9F0((uint64_t)v1);
  sub_2414174EC();
  if (qword_2571208E8 != -1)
LABEL_8:
    swift_once();
}

uint64_t sub_2413EC5C8()
{
  return sub_2414B3088();
}

uint64_t sub_2413EC5EC@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t result;
  _OWORD v20[7];

  v3 = sub_2414B38A4();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEE9A8];
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v20 - v9;
  v11 = v1[5];
  v20[4] = v1[4];
  v20[5] = v11;
  v20[6] = v1[6];
  v12 = v1[1];
  v20[0] = *v1;
  v20[1] = v12;
  v13 = v1[3];
  v20[2] = v1[2];
  v20[3] = v13;
  v14 = (_OWORD *)swift_allocObject();
  v15 = v1[5];
  v14[5] = v1[4];
  v14[6] = v15;
  v14[7] = v1[6];
  v16 = v1[1];
  v14[1] = *v1;
  v14[2] = v16;
  v17 = v1[3];
  v14[3] = v1[2];
  v14[4] = v17;
  sub_2413EDA1C((uint64_t)v20);
  sub_2414B3898();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v3);
  sub_2412C8030(&qword_2571271D0, v4, MEMORY[0x24BDEE998]);
  v18 = sub_2414B3220();
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v3);
  *(_QWORD *)a1 = sub_2413EDA14;
  *(_QWORD *)(a1 + 8) = v14;
  *(_QWORD *)(a1 + 16) = v18;
  *(_QWORD *)(a1 + 24) = 0x408F400000000000;
  *(_BYTE *)(a1 + 32) = 0;
  return result;
}

uint64_t sub_2413EC758@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  char *v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t result;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE v79[24];
  __int128 v80;
  char v81;
  __int16 v82;
  uint64_t v83;
  char v84;
  __int128 v85;
  __int128 v86;
  char v87;
  __int128 v88;
  char v89;
  __int16 v90;
  uint64_t v91;
  char v92;
  __int128 v93;
  __int128 v94;
  char v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  _OWORD v99[3];
  _OWORD v100[2];
  _BYTE v101[96];

  v3 = type metadata accessor for NowPlayingContrastSensitiveBackdrop();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (uint64_t *)((char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v68 - v7;
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571275D8);
  MEMORY[0x24BDAC7A8](v69);
  v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571275E0);
  MEMORY[0x24BDAC7A8](v70);
  v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571275E8);
  MEMORY[0x24BDAC7A8](v71);
  v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571275F0);
  MEMORY[0x24BDAC7A8](v72);
  v77 = (uint64_t)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571275F8);
  MEMORY[0x24BDAC7A8](v73);
  v76 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127600);
  MEMORY[0x24BDAC7A8](v75);
  v74 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_OWORD *)(v1 + 48);
  v99[2] = *(_OWORD *)(v1 + 32);
  v100[0] = v18;
  *(_OWORD *)((char *)v100 + 10) = *(_OWORD *)(v1 + 58);
  v19 = *(_OWORD *)(v1 + 16);
  v99[0] = *(_OWORD *)v1;
  v99[1] = v19;
  v20 = *(_QWORD *)(v1 + 80);
  v68 = *(_QWORD *)(v1 + 88);
  if (qword_2571208E0 != -1)
    swift_once();
  v78 = a1;
  v21 = qword_257136FE0;
  *v5 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  swift_storeEnumTagMultiPayload();
  sub_2413D1D7C((uint64_t)v5, (uint64_t)v8);
  v22 = sub_2414B4A44();
  if (v20)
  {
    v24 = v22;
    v25 = v23;
    swift_beginAccess();
    v26 = 0;
    if ((*(_BYTE *)(v20 + 17) & 1) != 0)
      v26 = sub_2414B4630();
    sub_2413ED154((uint64_t)v8, (uint64_t)v10);
    v27 = (uint64_t *)&v10[*(int *)(v69 + 36)];
    *v27 = v26;
    v27[1] = v24;
    v27[2] = v25;
    sub_2413ED198((uint64_t)v8);
    v28 = sub_2414B4A2C();
    v30 = v29;
    sub_2414B4B58();
    v32 = v31;
    v34 = v33;
    sub_2414B4B4C();
    v36 = v35;
    v38 = v37;
    sub_2412DC3FC((uint64_t)v10, (uint64_t)v12, &qword_2571275D8);
    v39 = (uint64_t *)&v12[*(int *)(v70 + 36)];
    *v39 = v28;
    v39[1] = v30;
    v39[2] = 0;
    v39[3] = v21;
    v39[4] = v32;
    v39[5] = v34;
    v39[6] = v36;
    v39[7] = v38;
    sub_2412CBE78((uint64_t)v10, &qword_2571275D8);
    sub_2414B4A44();
    sub_2414B31B4();
    sub_2412DC3FC((uint64_t)v12, (uint64_t)v14, &qword_2571275E0);
    v40 = &v14[*(int *)(v71 + 36)];
    v41 = v97;
    *(_OWORD *)v40 = v96;
    *((_OWORD *)v40 + 1) = v41;
    *((_OWORD *)v40 + 2) = v98;
    sub_2412CBE78((uint64_t)v12, &qword_2571275E0);
    LOBYTE(v30) = sub_2414B3E68();
    sub_2412EAEA4((uint64_t)v99, (uint64_t)v101, &qword_254380B18);
    sub_2412FD220((uint64_t)v101, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
    sub_2412FD278((uint64_t)&v88);
    sub_2412FD220((uint64_t)v99, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
    v80 = v88;
    v81 = v89;
    v82 = v90;
    v83 = v91;
    v84 = v92;
    v85 = v93;
    v86 = v94;
    v87 = v95;
    sub_2413ECE14();
    sub_2414B2F20();
    v43 = v42;
    v45 = v44;
    v47 = v46;
    v49 = v48;
    v50 = v77;
    sub_2412DC3FC((uint64_t)v14, v77, &qword_2571275E8);
    v51 = v50 + *(int *)(v72 + 36);
    *(_BYTE *)v51 = v30;
    *(_QWORD *)(v51 + 8) = v43;
    *(_QWORD *)(v51 + 16) = v45;
    *(_QWORD *)(v51 + 24) = v47;
    *(_QWORD *)(v51 + 32) = v49;
    *(_BYTE *)(v51 + 40) = 0;
    sub_2412CBE78((uint64_t)v14, &qword_2571275E8);
    v52 = sub_2414B3E80();
    sub_2412FD220((uint64_t)v101, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
    sub_2412FD278((uint64_t)&v88);
    sub_2412FD220((uint64_t)v99, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
    if (HIBYTE(v90) == 2)
    {
      v53 = v78;
      v55 = v75;
      v54 = (uint64_t)v76;
      v57 = v73;
      v56 = (uint64_t)v74;
    }
    else
    {
      v53 = v78;
      v55 = v75;
      v54 = (uint64_t)v76;
      v57 = v73;
      v56 = (uint64_t)v74;
      v80 = v88;
      v81 = v89;
      LOBYTE(v82) = v90;
      if (HIBYTE(v90))
      {
        HIBYTE(v82) = HIBYTE(v90);
        v83 = v91;
        v84 = v92;
        v85 = v93;
        v86 = v94;
        v87 = v95;
        sub_24144F9F0((uint64_t)v79);
      }
      else
      {
        HIBYTE(v82) = 0;
        v83 = v91;
        v84 = v92;
        v85 = v93;
        v86 = v94;
        v87 = v95;
        sub_24144F8F8((uint64_t)v79);
      }
      if (qword_257120B98 != -1)
        swift_once();
    }
    sub_2414B2F20();
    v59 = v58;
    v61 = v60;
    v63 = v62;
    v65 = v64;
    sub_2412DC3FC(v50, v54, &qword_2571275F0);
    v66 = v54 + *(int *)(v57 + 36);
    *(_BYTE *)v66 = v52;
    *(_QWORD *)(v66 + 8) = v59;
    *(_QWORD *)(v66 + 16) = v61;
    *(_QWORD *)(v66 + 24) = v63;
    *(_QWORD *)(v66 + 32) = v65;
    *(_BYTE *)(v66 + 40) = 0;
    sub_2412CBE78(v50, &qword_2571275F0);
    sub_2412DC3FC(v54, v56, &qword_2571275F8);
    *(_BYTE *)(v56 + *(int *)(v55 + 36)) = 0;
    sub_2412CBE78(v54, &qword_2571275F8);
    return sub_2412EAEA4(v56, v53, &qword_257127600);
  }
  else
  {
    _s5DebugCMa();
    sub_2412C8030((unint64_t *)&qword_25437F060, (uint64_t (*)(uint64_t))_s5DebugCMa, (uint64_t)&unk_2414C3E98);
    result = sub_2414B364C();
    __break(1u);
  }
  return result;
}

void sub_2413ECE14()
{
  __asm { BR              X10 }
}

double sub_2413ECE78()
{
  double v0;
  _QWORD v2[17];

  sub_24144F8F8((uint64_t)v2);
  v0 = *(double *)&v2[1];
  if (qword_257120B98 != -1)
    swift_once();
  return v0 - *(double *)&qword_257137280;
}

uint64_t sub_2413ECF90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  char v11;
  void (*v12)(char *, uint64_t);
  void *v13;
  char **v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t result;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = sub_2414B3934();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v22 - v7;
  sub_2412C8A04((uint64_t)&v22 - v7);
  v9 = *MEMORY[0x24BDEEDE8];
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v10(v5, v9, v2);
  v11 = sub_2414B2F80();
  v12 = *(void (**)(char *, uint64_t))(v3 + 8);
  v12(v5, v2);
  v12(v8, v2);
  v13 = (void *)objc_opt_self();
  v14 = &selRef_clearColor;
  if ((v11 & 1) == 0)
    v14 = &selRef_systemBackgroundColor;
  v15 = MEMORY[0x242693E80](objc_msgSend(v13, *v14));
  v23 = sub_2414B4A44();
  v17 = v16;
  sub_2412C8A04((uint64_t)v8);
  v10(v5, v9, v2);
  v18 = sub_2414B2F80();
  v12(v5, v2);
  result = ((uint64_t (*)(char *, uint64_t))v12)(v8, v2);
  v20 = 0xD00000000000001ELL;
  if ((v18 & 1) == 0)
    v20 = 0;
  *(_QWORD *)a1 = v15;
  *(_QWORD *)(a1 + 8) = v20;
  v21 = 0x80000002414D29A0;
  if ((v18 & 1) == 0)
    v21 = 0;
  *(_QWORD *)(a1 + 16) = v21;
  *(_BYTE *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = v23;
  *(_QWORD *)(a1 + 40) = v17;
  return result;
}

uint64_t sub_2413ED140()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2413ED154(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NowPlayingContrastSensitiveBackdrop();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2413ED198(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NowPlayingContrastSensitiveBackdrop();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_2413ED1D4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  sub_2414B325C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257122088);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_2414B9400;
  sub_2414B463C();
  *(_QWORD *)(v2 + 32) = sub_2414B49C0();
  *(_QWORD *)(v2 + 40) = v3;
  sub_2414B4648();
  *(_QWORD *)(v2 + 48) = sub_2414B49C0();
  *(_QWORD *)(v2 + 56) = v4;
  MEMORY[0x24269424C](v2);
  sub_2414B33B8();
  result = *(double *)&v6;
  *(_OWORD *)a1 = v6;
  *(_OWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  return result;
}

__n128 sub_2413ED2B8@<Q0>(double (**a1)@<D0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __n128 result;

  v3 = swift_allocObject();
  v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v3 + 32) = v4;
  result = *(__n128 *)(v1 + 32);
  *(__n128 *)(v3 + 48) = result;
  *a1 = sub_2413EDAA0;
  a1[1] = (double (*)@<D0>(uint64_t@<X8>))v3;
  return result;
}

uint64_t destroy for GradientTopMask(uint64_t a1)
{
  sub_2412C823C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_BYTE *)(a1 + 72), *(_BYTE *)(a1 + 73));
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for GradientTopMask(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;
  char v17;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v15 = *(_QWORD *)(a2 + 64);
  v16 = *(_BYTE *)(a2 + 72);
  v17 = *(_BYTE *)(a2 + 73);
  sub_2412C6F48(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v15, v16, v17);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v15;
  *(_BYTE *)(a1 + 72) = v16;
  *(_BYTE *)(a1 + 73) = v17;
  v12 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v12;
  v13 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v13;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for GradientTopMask(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v24;
  char v25;
  char v26;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v24 = *(_QWORD *)(a2 + 64);
  v25 = *(_BYTE *)(a2 + 72);
  v26 = *(_BYTE *)(a2 + 73);
  sub_2412C6F48(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v24, v25, v26);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_QWORD *)(a1 + 64);
  v21 = *(_BYTE *)(a1 + 72);
  v22 = *(_BYTE *)(a1 + 73);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v24;
  *(_BYTE *)(a1 + 72) = v25;
  *(_BYTE *)(a1 + 73) = v26;
  sub_2412C823C(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  return a1;
}

uint64_t assignWithTake for GradientTopMask(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  v4 = *(_QWORD *)(a2 + 64);
  v5 = *(_BYTE *)(a2 + 72);
  v6 = *(_BYTE *)(a2 + 73);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 48);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *(_QWORD *)(a1 + 64);
  v16 = *(_BYTE *)(a1 + 72);
  v17 = *(_BYTE *)(a1 + 73);
  v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  *(_QWORD *)(a1 + 64) = v4;
  *(_BYTE *)(a1 + 72) = v5;
  *(_BYTE *)(a1 + 73) = v6;
  sub_2412C823C(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release();
  v20 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v20;
  swift_release();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for GradientTopMask(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 112))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 80);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GradientTopMask(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 112) = 0;
    if (a2)
      *(_QWORD *)(result + 80) = a2;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for GradientView(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for GradientView(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

ValueMetadata *type metadata accessor for GradientView()
{
  return &type metadata for GradientView;
}

uint64_t sub_2413ED754()
{
  return sub_2413EDAD4(&qword_257127608, &qword_257127600, sub_2413ED780);
}

uint64_t sub_2413ED780()
{
  return sub_2412DC484(&qword_257127610, &qword_2571275F8, sub_2413ED7A4, MEMORY[0x24BDECC60]);
}

uint64_t sub_2413ED7A4()
{
  return sub_2412DC484(&qword_257127618, &qword_2571275F0, sub_2413ED7C8, MEMORY[0x24BDECC60]);
}

uint64_t sub_2413ED7C8()
{
  return sub_2412DC484(&qword_257127620, &qword_2571275E8, (uint64_t (*)(void))sub_2413ED7EC, MEMORY[0x24BDEBEE0]);
}

unint64_t sub_2413ED7EC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257127628;
  if (!qword_257127628)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571275E0);
    v2[0] = sub_2413ED870();
    v2[1] = sub_2412C8FC4(&qword_257127650, &qword_257127658, MEMORY[0x24BDEF828]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257127628);
  }
  return result;
}

unint64_t sub_2413ED870()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257127630;
  if (!qword_257127630)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571275D8);
    v2[0] = sub_2412C8030(&qword_257127638, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingContrastSensitiveBackdrop, (uint64_t)&unk_2414C41E4);
    v2[1] = sub_2412C8FC4(&qword_257127640, &qword_257127648, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257127630);
  }
  return result;
}

unint64_t sub_2413ED910()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257127660;
  if (!qword_257127660)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257127668);
    v2 = sub_2412C8FC4(&qword_257127670, &qword_257127678, MEMORY[0x24BDEDC10]);
    v3[0] = MEMORY[0x24BDF3E20];
    v3[1] = v2;
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_257127660);
  }
  return result;
}

uint64_t sub_2413ED994()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2413ED9A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2413ED9B4()
{
  uint64_t v0;

  sub_2412C823C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 88), *(_BYTE *)(v0 + 89));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2413EDA14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2413EBB60(v1 + 16, a1);
}

uint64_t sub_2413EDA1C(uint64_t a1)
{
  sub_2412C6F48(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_BYTE *)(a1 + 72), *(_BYTE *)(a1 + 73));
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_2413EDA90()
{
  return swift_deallocObject();
}

double sub_2413EDAA0@<D0>(uint64_t a1@<X8>)
{
  return sub_2413ED1D4(a1);
}

uint64_t sub_2413EDAA8()
{
  return sub_2413EDAD4(&qword_2571276B8, &qword_2571276C0, (uint64_t (*)(void))sub_2413EDB40);
}

uint64_t sub_2413EDAD4(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = sub_24130CB04();
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2413EDB40()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571276C8;
  if (!qword_2571276C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571276D0);
    v2[0] = sub_2413EDBC4();
    v2[1] = sub_2412C8FC4(&qword_254381068, &qword_254381070, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571276C8);
  }
  return result;
}

unint64_t sub_2413EDBC4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571276D8;
  if (!qword_2571276D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571276E0);
    v2[0] = sub_2412C8FC4(&qword_2571276E8, &qword_2571276F0, MEMORY[0x24BDEC6F8]);
    v2[1] = sub_2412C8FC4((unint64_t *)&qword_2571228F8, qword_257122900, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571276D8);
  }
  return result;
}

uint64_t sub_2413EDC60()
{
  return sub_2412C8FC4(&qword_2571276F8, &qword_257127700, MEMORY[0x24BDEC6F8]);
}

MediaCoreUI::NowPlayingButtonID __swiftcall NowPlayingButtonID.init(_:)(MediaCoreUI::NowPlayingButtonID result)
{
  MediaCoreUI::NowPlayingButtonID *v1;

  *v1 = result;
  return result;
}

uint64_t static NowPlayingButtonID.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_2414B57D0();
}

uint64_t NowPlayingButtonID.geometryID.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  sub_2414B5578();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2414B4DF8();
  result = swift_bridgeObjectRelease();
  *a1 = 0xD000000000000011;
  a1[1] = 0x80000002414D2060;
  return result;
}

void static NowPlayingButtonID.spacer.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x726563617073;
  a1[1] = 0xE600000000000000;
}

uint64_t NowPlayingButtonID.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_2414B4DD4();
  return swift_bridgeObjectRelease();
}

uint64_t NowPlayingButtonID.hashValue.getter()
{
  sub_2414B58CC();
  swift_bridgeObjectRetain();
  sub_2414B4DD4();
  swift_bridgeObjectRelease();
  return sub_2414B58FC();
}

unint64_t sub_2413EDE0C()
{
  unint64_t result;

  result = qword_257127708;
  if (!qword_257127708)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingButtonID, &type metadata for NowPlayingButtonID);
    atomic_store(result, &qword_257127708);
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingButtonID()
{
  return &type metadata for NowPlayingButtonID;
}

uint64_t dispatch thunk of NowPlayingButton.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of NowPlayingButton.content.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

id static UIAlertController.alertController(with:overrideStyle:)(uint64_t a1, _BOOL8 a2, char a3)
{
  return sub_2413EE008(a1, a2, a3 & 1);
}

void sub_2413EDE78(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a2 + 40);
  if (v6)
  {
    v7 = *(_QWORD *)(a2 + 48);
    v8 = sub_2414B4FE4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
    sub_2414B4FC0();
    swift_retain_n();
    v9 = sub_2414B4FB4();
    v10 = (_QWORD *)swift_allocObject();
    v11 = MEMORY[0x24BEE6930];
    v10[2] = v9;
    v10[3] = v11;
    v10[4] = v6;
    v10[5] = v7;
    sub_2413EE440((uint64_t)v5, (uint64_t)&unk_257127718, (uint64_t)v10);
    sub_2412C9444(v6);
    swift_release();
  }
}

void sub_2413EDF78(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

id Alert.uiAlertController.getter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  __int128 v3;
  _OWORD v5[2];
  char v6;
  uint64_t v7;

  v1 = *(_BYTE *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_OWORD *)(v0 + 16);
  v5[0] = *(_OWORD *)v0;
  v5[1] = v3;
  v6 = v1;
  v7 = v2;
  return sub_2413EE008((uint64_t)v5, 0, 1);
}

id sub_2413EE008(uint64_t a1, _BOOL8 a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  void *v19;
  void *v20;
  id v21;
  _QWORD v23[6];
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  char v28;
  char v29;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 40);
  if ((a3 & 1) != 0)
    a2 = (*(_BYTE *)(a1 + 32) & 1) == 0;
  if (*(_QWORD *)(a1 + 8))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = (void *)sub_2414B4D44();
    swift_bridgeObjectRelease();
    if (v3)
    {
LABEL_6:
      v7 = (void *)sub_2414B4D44();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    v6 = 0;
    if (v3)
      goto LABEL_6;
  }
  v7 = 0;
LABEL_9:
  v8 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v6, v7, a2);

  if (a2)
  {
    v9 = *(_QWORD *)(v4 + 16);
    if (!v9)
      return v8;
  }
  else
  {
    objc_msgSend(v8, sel_setModalPresentationStyle_, 7);
    v9 = *(_QWORD *)(v4 + 16);
    if (!v9)
      return v8;
  }
  v10 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v11 = 32;
  do
  {
    v12 = *(_OWORD *)(v4 + v11);
    v13 = *(_OWORD *)(v4 + v11 + 16);
    v14 = *(_OWORD *)(v4 + v11 + 32);
    v27 = *(_QWORD *)(v4 + v11 + 48);
    v25 = v13;
    v26 = v14;
    v24 = v12;
    sub_2413EE2C4((uint64_t)&v26, (uint64_t)&v28);
    sub_2413EE2C4((uint64_t)&v28, (uint64_t)&v29);
    v15 = 1;
    if ((v29 & 1) != 0)
      v15 = 2;
    if (v29 == 2)
      v16 = 0;
    else
      v16 = v15;
    v17 = swift_allocObject();
    v18 = v25;
    *(_OWORD *)(v17 + 16) = v24;
    *(_OWORD *)(v17 + 32) = v18;
    *(_OWORD *)(v17 + 48) = v26;
    *(_QWORD *)(v17 + 64) = v27;
    sub_241385798((uint64_t)&v24);
    sub_241385798((uint64_t)&v24);
    swift_bridgeObjectRetain();
    v19 = (void *)sub_2414B4D44();
    swift_bridgeObjectRelease();
    v23[4] = sub_2413EE348;
    v23[5] = v17;
    v23[0] = MEMORY[0x24BDAC760];
    v23[1] = 1107296256;
    v23[2] = sub_2413EDF78;
    v23[3] = &block_descriptor_14;
    v20 = _Block_copy(v23);
    swift_release();
    v21 = objc_msgSend(v10, sel_actionWithTitle_style_handler_, v19, v16, v20);
    _Block_release(v20);

    objc_msgSend(v8, sel_addAction_, v21);
    sub_2413EE350((uint64_t)&v24);
    v11 += 56;
    --v9;
  }
  while (v9);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_2413EE2C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124878);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2413EE30C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 56))
    swift_release();
  return swift_deallocObject();
}

void sub_2413EE348(uint64_t a1)
{
  uint64_t v1;

  sub_2413EDE78(a1, v1 + 16);
}

uint64_t sub_2413EE350(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2412C9444(v2);
  return a1;
}

uint64_t sub_2413EE39C()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2413EE3C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_241310430;
  return sub_241385404(a1, v4, v5, v6);
}

uint64_t sub_2413EE440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2413EE5D0(a1, a2, a3);
}

uint64_t sub_2413EE460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_2414B4FE4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_2414B4FD8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_2412CBE78(a1, (uint64_t *)&unk_254384360);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2414B4F90();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257126680);
  return swift_task_create();
}

uint64_t sub_2413EE5B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2413EE5D0(a1, a2, a3);
}

uint64_t sub_2413EE5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_2414B4FE4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_2414B4FD8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_2412CBE78(a1, (uint64_t *)&unk_254384360);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2414B4F90();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_2413EE720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t result;

  type metadata accessor for NowPlayingViewModel(0);
  sub_2412C8030(&qword_25437D730, type metadata accessor for NowPlayingViewModel, (uint64_t)&protocol conformance descriptor for NowPlayingViewModel);
  *(_QWORD *)a3 = sub_2414B3658();
  *(_QWORD *)(a3 + 8) = v6;
  result = swift_getKeyPath();
  *(_QWORD *)(a3 + 16) = result;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  *(_QWORD *)(a3 + 40) = 0;
  *(_BYTE *)(a3 + 48) = 0;
  *(_QWORD *)(a3 + 56) = a1;
  *(_QWORD *)(a3 + 64) = a2;
  return result;
}

uint64_t sub_2413EE7A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a4 = swift_getKeyPath();
  *(_OWORD *)(a4 + 8) = 0u;
  *(_OWORD *)(a4 + 24) = 0u;
  *(_OWORD *)(a4 + 40) = 0u;
  *(_OWORD *)(a4 + 56) = 0u;
  *(_WORD *)(a4 + 72) = 0;
  *(_QWORD *)(a4 + 80) = swift_getKeyPath();
  *(_BYTE *)(a4 + 88) = 0;
  v9 = a4 + *(int *)(type metadata accessor for NowPlayingHostedViewControllerStack(0, a2, a3, v8) + 40);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(v9, a1, a2);
}

uint64_t sub_2413EE834(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _OWORD *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  uint64_t v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543842B0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DA10);
  v23 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 24) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v1 + 40) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v1 + 48) = 0;
  v10 = (_OWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 64) = 0x40000;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_BYTE *)(v1 + 120) = 0;
  *(_QWORD *)(v1 + 16) = a1;
  v11 = *(_QWORD *)(a1 + 136);
  swift_getKeyPath();
  v26 = v11;
  swift_unownedRetain();
  sub_2412C8030((unint64_t *)&qword_25437E490, (uint64_t (*)(uint64_t))type metadata accessor for WindowProperties, (uint64_t)&unk_2414BE240);
  sub_2414B2B84();
  swift_release();
  v12 = *(_OWORD *)(v11 + 16);
  v21 = *(_OWORD *)(v11 + 32);
  v22 = v12;
  v13 = *(_OWORD *)(v11 + 48);
  v19 = *(_OWORD *)(v11 + 64);
  v20 = v13;
  v14 = *(_QWORD *)(v11 + 80);
  v15 = *(_BYTE *)(v11 + 88);
  swift_beginAccess();
  *v10 = v22;
  v16 = v20;
  *(_OWORD *)(v2 + 64) = v21;
  *(_OWORD *)(v2 + 80) = v16;
  *(_OWORD *)(v2 + 96) = v19;
  *(_QWORD *)(v2 + 112) = v14;
  *(_BYTE *)(v2 + 120) = v15;
  v24 = *(_QWORD *)(*(_QWORD *)(a1 + 136) + 96);
  sub_2412FFFC8();
  swift_retain();
  v25 = (id)sub_2414B5230();
  v17 = sub_2414B520C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v6, 1, 1, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DA78);
  sub_2412C8FC4(&qword_25437DA70, &qword_25437DA78, MEMORY[0x24BDB9D10]);
  sub_2412C8030((unint64_t *)&qword_2543843B0, (uint64_t (*)(uint64_t))sub_2412FFFC8, MEMORY[0x24BEE5670]);
  sub_2414B2E84();
  sub_2412CBE78((uint64_t)v6, (uint64_t *)&unk_2543842B0);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_2412C8FC4((unint64_t *)&unk_25437DA00, &qword_25437DA10, MEMORY[0x24BDB9A08]);
  sub_2414B2EB4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v7);
  swift_beginAccess();
  sub_2414B2D70();
  swift_endAccess();
  swift_release();
  swift_release();
  return v2;
}

void sub_2413EEB88(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];
  __int16 v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  v1 = a1[1];
  v17 = *a1;
  v3 = a1[2];
  v2 = a1[3];
  v5 = a1[4];
  v4 = a1[5];
  v6 = a1[6];
  v7 = a1[7];
  v8 = a1[8];
  v9 = *((_BYTE *)a1 + 72);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v11 = Strong;
    swift_beginAccess();
    *(_QWORD *)(v11 + 48) = v17;
    *(_QWORD *)(v11 + 56) = v1;
    *(_QWORD *)(v11 + 64) = v3;
    *(_QWORD *)(v11 + 72) = v2;
    *(_QWORD *)(v11 + 80) = v5;
    *(_QWORD *)(v11 + 88) = v4;
    *(_QWORD *)(v11 + 96) = v6;
    *(_QWORD *)(v11 + 104) = v7;
    *(_QWORD *)(v11 + 112) = v8;
    *(_BYTE *)(v11 + 120) = v9;
    if ((v3 & 0xFF0000) == 0x40000 || (v16 = v2, (v12 = MEMORY[0x242695CC8](v11 + 32)) == 0))
    {
      swift_release();
    }
    else
    {
      v15 = *(_QWORD *)(v11 + 40);
      v13 = (void *)v12;
      ObjectType = swift_getObjectType();
      v18[0] = v17;
      v18[1] = v1;
      v19 = v3 & 0xFF01;
      v20 = BYTE2(v3);
      v21 = v16;
      v22 = v5 & 1;
      v23 = v4;
      v24 = v6;
      v25 = v7;
      v26 = v8;
      v27 = v9 & 1;
      (*(void (**)(_QWORD *, uint64_t))(v15 + 40))(v18, ObjectType);
      swift_release();

    }
  }
}

__n128 sub_2413EECEC@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  __int128 v6;
  __n128 result;
  __int128 v8;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 112);
  v5 = *(_BYTE *)(v3 + 120);
  v6 = *(_OWORD *)(v3 + 64);
  *(_OWORD *)a2 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(a2 + 16) = v6;
  result = *(__n128 *)(v3 + 80);
  v8 = *(_OWORD *)(v3 + 96);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v8;
  *(_QWORD *)(a2 + 64) = v4;
  *(_BYTE *)(a2 + 72) = v5;
  return result;
}

void sub_2413EED48(uint64_t a1)
{
  uint64_t v1;
  char v2;
  __int128 v3;
  __int128 v4;
  _OWORD v5[4];
  uint64_t v6;
  char v7;

  v1 = *(_QWORD *)(a1 + 64);
  v2 = *(_BYTE *)(a1 + 72);
  v3 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v3;
  v4 = *(_OWORD *)(a1 + 48);
  v5[2] = *(_OWORD *)(a1 + 32);
  v5[3] = v4;
  v6 = v1;
  v7 = v2;
  sub_2413EEDEC((uint64_t *)v5);
}

__n128 sub_2413EED94@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  __int128 v5;
  __n128 result;
  __int128 v7;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 112);
  v4 = *(_BYTE *)(v1 + 120);
  v5 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 16) = v5;
  result = *(__n128 *)(v1 + 80);
  v7 = *(_OWORD *)(v1 + 96);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 64) = v3;
  *(_BYTE *)(a1 + 72) = v4;
  return result;
}

void sub_2413EEDEC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];
  __int16 v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  v2 = *a1;
  v17 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v6 = a1[4];
  v5 = a1[5];
  v7 = a1[6];
  v8 = a1[7];
  v9 = a1[8];
  v10 = *((_BYTE *)a1 + 72);
  swift_beginAccess();
  v15 = v4;
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 56) = v17;
  *(_QWORD *)(v1 + 64) = v3;
  *(_QWORD *)(v1 + 72) = v4;
  *(_QWORD *)(v1 + 80) = v6;
  v16 = v5;
  *(_QWORD *)(v1 + 88) = v5;
  *(_QWORD *)(v1 + 96) = v7;
  *(_QWORD *)(v1 + 104) = v8;
  *(_QWORD *)(v1 + 112) = v9;
  *(_BYTE *)(v1 + 120) = v10;
  if ((v3 & 0xFF0000) != 0x40000)
  {
    v11 = MEMORY[0x242695CC8](v1 + 32);
    if (v11)
    {
      v12 = (void *)v11;
      v13 = *(_QWORD *)(v1 + 40);
      ObjectType = swift_getObjectType();
      v18[0] = v2;
      v18[1] = v17;
      v19 = v3 & 0xFF01;
      v20 = BYTE2(v3);
      v21 = v15;
      v22 = v6 & 1;
      v23 = v16;
      v24 = v7;
      v25 = v8;
      v26 = v9;
      v27 = v10 & 1;
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v13 + 40))(v18, ObjectType, v13);

    }
  }
}

uint64_t sub_2413EEF18@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  swift_unownedRetainStrong();
  v4 = *(_QWORD *)(v3 + 96);
  swift_retain();
  swift_release();
  swift_beginAccess();
  LOBYTE(v3) = *(_BYTE *)(v4 + 58);
  result = swift_release();
  *a2 = v3;
  return result;
}

uint64_t sub_2413EEF8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  swift_unownedRetainStrong();
  v2 = *(_QWORD *)(v1 + 96);
  swift_retain();
  swift_release();
  swift_beginAccess();
  v3 = *(unsigned __int8 *)(v2 + 58);
  swift_release();
  return v3;
}

uint64_t sub_2413EEFF0(char a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _DWORD v20[2];

  v2 = v1;
  v4 = a1 & 1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DBC0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 16);
  swift_unownedRetainStrong();
  v9 = *(_QWORD *)(v8 + 96);
  swift_retain();
  swift_release();
  swift_beginAccess();
  LODWORD(v8) = *(unsigned __int8 *)(v9 + 58);
  result = swift_release();
  if ((_DWORD)v8 != v4)
  {
    if (qword_2543809C0 != -1)
      swift_once();
    v11 = sub_2414B2CA4();
    __swift_project_value_buffer(v11, (uint64_t)qword_25438E7B8);
    swift_retain_n();
    v12 = sub_2414B2C8C();
    v13 = sub_2414B51B8();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v14 = 67109120;
      v15 = *(_QWORD *)(v2 + 16);
      swift_unownedRetainStrong();
      v16 = *(_QWORD *)(v15 + 96);
      swift_retain();
      swift_release();
      swift_beginAccess();
      LODWORD(v15) = *(unsigned __int8 *)(v16 + 58);
      swift_release();
      swift_release();
      v20[1] = v15;
      sub_2414B541C();
      swift_release();
      _os_log_impl(&dword_2412C1000, v12, v13, "HostedContentSession client set controls hidden to %{BOOL}d", v14, 8u);
      MEMORY[0x242695BD8](v14, -1, -1);

    }
    else
    {

      v17 = swift_release_n();
    }
    MEMORY[0x24BDAC7A8](v17);
    *(_QWORD *)&v20[-4] = v2;
    LOBYTE(v20[-2]) = a1 & 1;
    v18 = sub_2414B4AC8();
    v19 = sub_2414B3D24();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v7, 1, 1, v19);
    sub_2412DECAC(v18, 1, (uint64_t)v7, 0);
    sub_2412CBE78((uint64_t)v7, &qword_25437DBC0);
    sub_2414B3550();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_2413EF2C0(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;

  v3 = *(_QWORD *)(a1 + 16);
  swift_unownedRetainStrong();
  v4 = *(_QWORD *)(v3 + 96);
  swift_retain();
  swift_release();
  KeyPath = swift_getKeyPath();
  v6 = swift_getKeyPath();
  return sub_241303978(a2, v4, KeyPath, v6);
}

void (*sub_2413EF33C(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_unownedRetainStrong();
  v5 = *(_QWORD *)(v4 + 96);
  swift_retain();
  swift_release();
  swift_beginAccess();
  LOBYTE(v4) = *(_BYTE *)(v5 + 58);
  swift_release();
  *((_BYTE *)v3 + 32) = v4;
  return sub_2413EF3C4;
}

void sub_2413EF3C4(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  sub_2413EEFF0(*(_BYTE *)(*(_QWORD *)a1 + 32));
  free(v1);
}

uint64_t NowPlayingHostedContentSession.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2414B4FE4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = swift_allocObject();
  v7 = (void *)MEMORY[0x242695CC8](v0 + 32);
  *(_QWORD *)(v6 + 24) = *(_QWORD *)(v0 + 40);
  swift_unknownObjectWeakInit();

  sub_2414B4FC0();
  swift_retain();
  v8 = sub_2414B4FB4();
  v9 = (_QWORD *)swift_allocObject();
  v10 = MEMORY[0x24BEE6930];
  v9[2] = v8;
  v9[3] = v10;
  v9[4] = v6;
  swift_release();
  sub_2413EE5D0((uint64_t)v4, (uint64_t)&unk_257127728, (uint64_t)v9);
  swift_release();
  swift_unownedRelease();
  swift_bridgeObjectRelease();
  sub_2413E42A0(v1 + 32);
  return v1;
}

uint64_t NowPlayingHostedContentSession.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2414B4FE4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = swift_allocObject();
  v7 = (void *)MEMORY[0x242695CC8](v0 + 32);
  *(_QWORD *)(v6 + 24) = *(_QWORD *)(v0 + 40);
  swift_unknownObjectWeakInit();

  sub_2414B4FC0();
  swift_retain();
  v8 = sub_2414B4FB4();
  v9 = (_QWORD *)swift_allocObject();
  v10 = MEMORY[0x24BEE6930];
  v9[2] = v8;
  v9[3] = v10;
  v9[4] = v6;
  swift_release();
  sub_2413EE5D0((uint64_t)v4, (uint64_t)&unk_257127730, (uint64_t)v9);
  swift_release();
  swift_unownedRelease();
  swift_bridgeObjectRelease();
  sub_2413E42A0(v1 + 32);
  return swift_deallocClassInstance();
}

uint64_t sub_2413EF6E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  _OWORD v5[2];
  char v6;

  v3 = *(_OWORD *)(v1 + 32);
  v5[0] = *(_OWORD *)(v1 + 16);
  v5[1] = v3;
  v6 = *(_BYTE *)(v1 + 48);
  sub_2412C8378((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2412C72F4);
  sub_2412E1CCC(a1);
  return sub_2412C8378((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2412C68A4);
}

uint64_t NowPlayingHostedViewControllerRepresentable.makeUIViewController(context:)(uint64_t a1, uint64_t a2)
{
  return sub_2413F02FC(a2);
}

void NowPlayingHostedViewControllerRepresentable.updateUIViewController(_:context:)(void *a1)
{
  sub_2413F0470(a1);
}

uint64_t static NowPlayingHostedViewControllerRepresentable.dismantleUIViewController(_:coordinator:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
  qword_2571370F0 = 0;
  return swift_release();
}

uint64_t sub_2413EF790@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  _OWORD v6[3];
  _OWORD v7[2];

  v3 = v1[3];
  v6[2] = v1[2];
  v7[0] = v3;
  *(_OWORD *)((char *)v7 + 10) = *(_OWORD *)((char *)v1 + 58);
  v4 = v1[1];
  v6[0] = *v1;
  v6[1] = v4;
  sub_2412FD220((uint64_t)v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
  sub_2412FD278(a1);
  return sub_2412FD220((uint64_t)v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
}

uint64_t sub_2413EF7F8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_BYTE *)(v0 + 88);
  sub_2412C7080(v1, v2);
  v3 = sub_2412F0F50(v1, v2);
  sub_2412C821C(v1, v2);
  return v3;
}

uint64_t sub_2413EF84C(uint64_t a1, uint64_t a2)
{
  return sub_2413F02FC(a2);
}

void sub_2413EF854(void *a1)
{
  sub_2413F0470(a1);
}

uint64_t sub_2413EF85C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static NowPlayingHostedViewControllerRepresentable.dismantleUIViewController(_:coordinator:)(a1, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_2413EF864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingHostedViewControllerRepresentable<A>, a3);
  return sub_2414B3D90();
}

uint64_t sub_2413EF8C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingHostedViewControllerRepresentable<A>, a3);
  return sub_2414B3D60();
}

void sub_2413EF91C(uint64_t a1)
{
  MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingHostedViewControllerRepresentable<A>, a1);
  sub_2414B3D84();
  __break(1u);
}

uint64_t NowPlayingHostedViewControllerStack.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  __int128 v27;
  char v28;
  __int16 v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  __int128 v33;
  char v34;
  __int128 v35;
  char v36;
  __int16 v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  __int128 v41;
  char v42;

  v22 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257127738);
  v4 = *(_QWORD *)(a1 + 16);
  swift_getTupleTypeMetadata2();
  v5 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v5);
  v6 = sub_2414B4894();
  v20 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - v7;
  v9 = sub_2414B3514();
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v19 - v13;
  v15 = *(_QWORD *)(a1 + 24);
  v23 = v4;
  v24 = v15;
  v25 = v2;
  sub_2414B3964();
  sub_2414B4888();
  sub_2414B3E50();
  sub_2413EF790((uint64_t)&v35);
  v27 = v35;
  v28 = v36;
  v29 = v37;
  v30 = v38;
  v31 = v39;
  v32 = v40;
  v33 = v41;
  v34 = v42;
  sub_24144FEC4((uint64_t)&v27);
  if (qword_2571208D8 != -1)
    swift_once();
  v16 = MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v6);
  sub_2414B4528();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v6);
  v26[0] = v16;
  v26[1] = MEMORY[0x24BDECC60];
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v9, v26);
  sub_2412FBF34((uint64_t)v11, v9, (uint64_t)v14);
  v17 = *(void (**)(char *, uint64_t))(v21 + 8);
  v17(v11, v9);
  sub_2412EEA1C((uint64_t)v14, v9, v22);
  return ((uint64_t (*)(char *, uint64_t))v17)(v14, v9);
}

uint64_t sub_2413EFC54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD v45[2];
  _QWORD v46[2];
  __int16 v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56[2];
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  unint64_t v77;
  __int16 v78;
  char v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;

  v8 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v38 - v12;
  v17 = type metadata accessor for NowPlayingHostedViewControllerStack(0, v14, v15, v16);
  sub_2413EF790((uint64_t)&v76);
  if (v79 == 2)
  {
    sub_2413F1528((uint64_t)&v57);
    sub_2413F1314((uint64_t)&v57, (uint64_t)&v76);
  }
  else
  {
    v41 = sub_2413EF7F8();
    v40 = sub_2414B3CA0();
    sub_2414B4B64();
    v19 = v18;
    v21 = v20;
    v39 = sub_2414B3E68();
    sub_2413EF790((uint64_t)&v76);
    v42 = a4;
    v57 = v76;
    v58 = v77;
    LOWORD(v59) = v78;
    if (v79)
    {
      BYTE2(v59) = v79;
      v60 = v80;
      LOBYTE(v61) = v81;
      v62 = v82;
      v63 = v83;
      v64 = v84;
      v65 = v85;
      LOBYTE(v66) = v86;
      sub_24144F9F0((uint64_t)v46);
    }
    else
    {
      BYTE2(v59) = 0;
      v60 = v80;
      LOBYTE(v61) = v81;
      v62 = v82;
      v63 = v83;
      v64 = v84;
      v65 = v85;
      LOBYTE(v66) = v86;
      sub_24144F8F8((uint64_t)v46);
    }
    sub_2414B2F20();
    v23 = v22;
    v25 = v24;
    v27 = v26;
    v29 = v28;
    v30 = sub_2414B3E80();
    sub_2413EF790((uint64_t)v46);
    v76 = v46[0];
    v77 = v46[1];
    v78 = v47;
    if (v48)
    {
      v79 = v48;
      v80 = v49;
      v81 = v50;
      v82 = v51;
      v83 = v52;
      v84 = v53;
      v85 = v54;
      v86 = v55;
      sub_24144F9F0((uint64_t)&v57);
    }
    else
    {
      v79 = 0;
      v80 = v49;
      v81 = v50;
      v82 = v51;
      v83 = v52;
      v84 = v53;
      v85 = v54;
      v86 = v55;
      sub_24144F8F8((uint64_t)&v57);
    }
    sub_2414B2F20();
    LOBYTE(v56[0]) = 0;
    LOBYTE(v45[0]) = 0;
    v57 = 0x49676E6979616C70;
    v58 = 0xEB000000006D6574;
    v59 = v41;
    LODWORD(v60) = v40;
    v61 = v19;
    v62 = v21;
    LOBYTE(v63) = 1;
    LOBYTE(v64) = v39;
    v65 = v23;
    v66 = v25;
    v67 = v27;
    v68 = v29;
    v69 = 0;
    v70 = v30;
    v71 = v31;
    v72 = v32;
    v73 = v33;
    v74 = v34;
    v75 = 0;
    CGSizeMake(&v57, v35);
    sub_2413F1314((uint64_t)&v57, (uint64_t)&v76);
  }
  sub_2412FBF34(a1 + *(int *)(v17 + 40), a2, (uint64_t)v13);
  sub_2413F1314((uint64_t)&v76, (uint64_t)v46);
  v56[0] = (uint64_t)v46;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, a2);
  v56[1] = (uint64_t)v10;
  v45[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_257127738);
  v45[1] = a2;
  v43 = sub_2413F135C();
  v44 = a3;
  sub_2412F68CC(v56, 2uLL, (uint64_t)v45);
  v36 = *(void (**)(char *, uint64_t))(v8 + 8);
  v36(v13, a2);
  v36(v10, a2);
  sub_2413F1314((uint64_t)v46, (uint64_t)&v57);
  return sub_2412FAA34((uint64_t)&v57);
}

uint64_t sub_2413F000C()
{
  uint64_t v0;

  return sub_2413EF2C0(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_2413F0028()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2413F0050()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_241310C28;
  return sub_24137AE50();
}

uint64_t sub_2413F00C0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_241310430;
  return sub_24137AE50();
}

uint64_t sub_2413F012C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_2413F0194;
  return v5(v2 + 32);
}

uint64_t sub_2413F0194()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_2413F01E4(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 24) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 32) = v3;
  *v3 = v2;
  v3[1] = sub_2413F024C;
  return v5(v2 + 16);
}

uint64_t sub_2413F024C()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD **)(*v0 + 24);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_QWORD *)(v1 + 16);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_2413F029C()
{
  uint64_t *v0;
  uint64_t result;

  result = *v0;
  if (!*v0)
  {
    type metadata accessor for NowPlayingViewModel(0);
    sub_2412C8030(&qword_25437D730, type metadata accessor for NowPlayingViewModel, (uint64_t)&protocol conformance descriptor for NowPlayingViewModel);
    result = sub_2414B364C();
    __break(1u);
  }
  return result;
}

uint64_t sub_2413F02FC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t (*v28)(_QWORD);
  uint64_t v29;

  v3 = v1[1];
  v4 = v1[2];
  v17 = v1[3];
  v15 = v1[5];
  v16 = v1[4];
  v14 = *((_BYTE *)v1 + 48);
  v6 = (uint64_t (*)(_QWORD))v1[7];
  v5 = v1[8];
  v21 = *v1;
  v18 = v21;
  v22 = v3;
  v23 = v4;
  v24 = v17;
  v25 = v16;
  v26 = v15;
  v27 = v14;
  v28 = v6;
  v29 = v5;
  sub_2413F029C();
  type metadata accessor for NowPlayingHostedContentSession();
  v7 = swift_allocObject();
  v8 = swift_retain();
  sub_2413EE834(v8);
  qword_2571370F0 = v7;
  swift_retain();
  swift_release();
  v9 = v6(v7);
  v10 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v7 + 40) = v10;
  swift_unknownObjectWeakAssign();
  v11 = *(_QWORD *)(a1 + 16);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v10);
  v21 = v18;
  v22 = v3;
  v23 = v4;
  v24 = v17;
  v25 = v16;
  v26 = v15;
  v27 = v14;
  v28 = v6;
  v29 = v5;
  sub_2413EF6E8((uint64_t)&v19);
  v12 = v20;
  sub_2412C68C0(v19, v20);
  if (v12 == 1)
    (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v11, v10);
  swift_release();
  return v9;
}

void sub_2413F0470(void *a1)
{
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(a1, sel_view);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    objc_msgSend(v2, sel_setBackgroundColor_, v3);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2413F04F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_2413EFC54(v1[4], v1[2], v1[3], a1);
}

void sub_2413F04FC()
{
  JUMPOUT(0x242695AE8);
}

uint64_t sub_2413F050C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2413F054C(char *a1)
{
  return sub_2413EEFF0(*a1);
}

uint64_t type metadata accessor for NowPlayingHostedContentSession()
{
  return objc_opt_self();
}

uint64_t method lookup function for NowPlayingHostedContentSession()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NowPlayingHostedContentSession.deviceMetrics.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of NowPlayingHostedContentSession.controlsHidden.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of NowPlayingHostedContentSession.controlsHidden.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of NowPlayingHostedContentSession.controlsHidden.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of NowPlayingHostedViewController.willPresentHostedContent()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of NowPlayingHostedViewController.didPresentHostedContent()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of NowPlayingHostedViewController.willDismissHostedContent()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of NowPlayingHostedViewController.didDismissHostedContent()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of NowPlayingHostedViewController.didUpdateDeviceMetrics(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_2413F05F4(uint64_t a1)
{
  swift_release();
  sub_2412C68A4(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  return swift_release();
}

uint64_t sub_2413F062C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  swift_retain();
  sub_2412C72F4(v5, v6, v7, v8, v9);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  v10 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v10;
  swift_retain();
  return a1;
}

uint64_t sub_2413F06B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_BYTE *)(a2 + 48);
  sub_2412C72F4(v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = v8;
  sub_2412C68A4(v9, v10, v11, v12, v13);
  v14 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v14;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2413F0764(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v4;
  *(_BYTE *)(a1 + 48) = v5;
  sub_2412C68A4(v6, v7, v8, v9, v10);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t sub_2413F07D8(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_2413F0820(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_2413F0870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 89) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    v9 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16));
    swift_retain();
  }
  else
  {
    v26 = *(_QWORD *)(a3 + 16);
    v21 = *(_QWORD *)a2;
    v22 = *(_QWORD *)(a2 + 8);
    v10 = *(_QWORD *)(a2 + 16);
    v11 = *(_QWORD *)(a2 + 24);
    v12 = *(_QWORD *)(a2 + 32);
    v13 = *(_QWORD *)(a2 + 40);
    v15 = *(_QWORD *)(a2 + 48);
    v14 = *(_QWORD *)(a2 + 56);
    v23 = *(_QWORD *)(a2 + 64);
    v24 = *(_BYTE *)(a2 + 72);
    v25 = *(_BYTE *)(a2 + 73);
    sub_2412C6F48(*(_QWORD *)a2, v22, v10, v11, v12, v13, v15, v14, v23, v24, v25);
    *(_QWORD *)a1 = v21;
    *(_QWORD *)(a1 + 8) = v22;
    *(_QWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 24) = v11;
    *(_QWORD *)(a1 + 32) = v12;
    *(_QWORD *)(a1 + 40) = v13;
    *(_QWORD *)(a1 + 48) = v15;
    *(_QWORD *)(a1 + 56) = v14;
    *(_QWORD *)(a1 + 64) = v23;
    *(_BYTE *)(a1 + 72) = v24;
    *(_BYTE *)(a1 + 73) = v25;
    v16 = (a1 + 81) & 0xFFFFFFFFFFFFFFF8;
    v17 = (a2 + 81) & 0xFFFFFFFFFFFFFFF8;
    v18 = *(_QWORD *)v17;
    v19 = *(_BYTE *)(v17 + 8);
    sub_2412C7080(*(_QWORD *)v17, v19);
    *(_QWORD *)v16 = v18;
    *(_BYTE *)(v16 + 8) = v19;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))((v16 + v6 + 9) & ~v6, (v17 + v6 + 9) & ~v6, v26);
  }
  return a1;
}

uint64_t sub_2413F09EC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  sub_2412C823C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_BYTE *)(a1 + 72), *(_BYTE *)(a1 + 73));
  v4 = (a1 + 81) & 0xFFFFFFFFFFFFFFF8;
  sub_2412C821C(*(_QWORD *)v4, *(_BYTE *)(v4 + 8));
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((v4 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_2413F0A70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;

  v3 = a2;
  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v12 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v18 = *(_QWORD *)(a2 + 64);
  v19 = *(_BYTE *)(a2 + 72);
  v20 = *(_BYTE *)(a2 + 73);
  sub_2412C6F48(*(_QWORD *)a2, v6, v7, v8, v9, v10, v12, v11, v18, v19, v20);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v18;
  *(_BYTE *)(a1 + 72) = v19;
  *(_BYTE *)(a1 + 73) = v20;
  v13 = (a1 + 81) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v3 + 81) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)v14;
  LOBYTE(v3) = *(_BYTE *)(v14 + 8);
  sub_2412C7080(*(_QWORD *)v14, v3);
  *(_QWORD *)v13 = v15;
  *(_BYTE *)(v13 + 8) = v3;
  v16 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v16 + 16))((*(unsigned __int8 *)(v16 + 80) + 9 + v13) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), (*(unsigned __int8 *)(v16 + 80) + 9 + v14) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  return a1;
}

uint64_t sub_2413F0B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v31;
  char v32;
  char v33;

  v3 = a2;
  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v12 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v31 = *(_QWORD *)(a2 + 64);
  v32 = *(_BYTE *)(a2 + 72);
  v33 = *(_BYTE *)(a2 + 73);
  sub_2412C6F48(*(_QWORD *)a2, v6, v7, v8, v9, v10, v12, v11, v31, v32, v33);
  v13 = *(_QWORD *)a1;
  v14 = *(_QWORD *)(a1 + 8);
  v15 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 24);
  v17 = *(_QWORD *)(a1 + 32);
  v18 = *(_QWORD *)(a1 + 40);
  v19 = *(_QWORD *)(a1 + 48);
  v20 = *(_QWORD *)(a1 + 56);
  v21 = *(_QWORD *)(a1 + 64);
  v22 = *(_BYTE *)(a1 + 72);
  v23 = *(_BYTE *)(a1 + 73);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v31;
  *(_BYTE *)(a1 + 72) = v32;
  *(_BYTE *)(a1 + 73) = v33;
  sub_2412C823C(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23);
  v24 = (a1 + 81) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v3 + 81) & 0xFFFFFFFFFFFFFFF8;
  v26 = *(_QWORD *)v25;
  LOBYTE(v3) = *(_BYTE *)(v25 + 8);
  sub_2412C7080(*(_QWORD *)v25, v3);
  v27 = *(_QWORD *)v24;
  v28 = *(_BYTE *)(v24 + 8);
  *(_QWORD *)v24 = v26;
  *(_BYTE *)(v24 + 8) = v3;
  sub_2412C821C(v27, v28);
  v29 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v29 + 24))((*(unsigned __int8 *)(v29 + 80) + 9 + v24) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80), (*(unsigned __int8 *)(v29 + 80) + 9 + v25) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
  return a1;
}

_OWORD *sub_2413F0CF0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  *(_OWORD *)((char *)a1 + 58) = *(_OWORD *)((char *)a2 + 58);
  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = ((unint64_t)a1 + 81) & 0xFFFFFFFFFFFFFFF8;
  v7 = ((unint64_t)a2 + 81) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)v7;
  *(_BYTE *)(v6 + 8) = *(_BYTE *)(v7 + 8);
  *(_QWORD *)v6 = v8;
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 32))((*(unsigned __int8 *)(v9 + 80) + 9 + v6) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), (*(unsigned __int8 *)(v9 + 80) + 9 + v7) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

uint64_t sub_2413F0D70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  __int128 v20;
  __int128 v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a2 + 64);
  v7 = *(_BYTE *)(a2 + 72);
  v8 = *(_BYTE *)(a2 + 73);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  v15 = *(_QWORD *)(a1 + 48);
  v16 = *(_QWORD *)(a1 + 56);
  v17 = *(_QWORD *)(a1 + 64);
  v18 = *(_BYTE *)(a1 + 72);
  v19 = *(_BYTE *)(a1 + 73);
  v20 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v20;
  v21 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v21;
  *(_QWORD *)(a1 + 64) = v6;
  *(_BYTE *)(a1 + 72) = v7;
  *(_BYTE *)(a1 + 73) = v8;
  sub_2412C823C(v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
  v22 = (a1 + 81) & 0xFFFFFFFFFFFFFFF8;
  v23 = (a2 + 81) & 0xFFFFFFFFFFFFFFF8;
  v24 = *(_BYTE *)(v23 + 8);
  v25 = *(_QWORD *)v22;
  v26 = *(_BYTE *)(v22 + 8);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_BYTE *)(v22 + 8) = v24;
  sub_2412C821C(v25, v26);
  v27 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v27 + 40))((*(unsigned __int8 *)(v27 + 80) + 9 + v22) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80), (*(unsigned __int8 *)(v27 + 80) + 9 + v23) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
  return a1;
}

uint64_t sub_2413F0E50(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unsigned int v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0xFE)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 89) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if (v5 > 0xFE)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((((a1 + 81) & 0xFFFFFFFFFFFFFFF8) + v7 + 9) & ~v7);
      v15 = *(unsigned __int8 *)(a1 + 73);
      if (v15 > 1)
        return (v15 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_2413F0F24 + 4 * byte_2414C4430[(v9 - 1)]))();
}

void sub_2413F0F9C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFEu)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 89) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t sub_2413F11BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257127738);
  swift_getTupleTypeMetadata2();
  v0 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v0);
  v1 = sub_2414B4894();
  v2 = sub_2414B3514();
  v4[0] = MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v1);
  v4[1] = MEMORY[0x24BDECC60];
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v4);
}

uint64_t sub_2413F1280()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2413F12A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_241310430;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_257127870 + dword_257127870))(a1, v4);
}

uint64_t sub_2413F1314(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2413F135C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_257127888;
  if (!qword_257127888)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257127738);
    v2 = sub_2413F13F4(&qword_257127890, &qword_257127898, sub_2413F13D8);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_257127888);
  }
  return result;
}

uint64_t sub_2413F13D8()
{
  return sub_2413F13F4(&qword_2571278A0, &qword_2571278A8, (uint64_t (*)(void))sub_2413F1460);
}

uint64_t sub_2413F13F4(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2413F1460()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571278B0;
  if (!qword_2571278B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571278B8);
    v2[0] = sub_2413F14E4();
    v2[1] = sub_2412C8FC4(&qword_2571278C8, &qword_2571278D0, MEMORY[0x24BDEFFA0]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571278B0);
  }
  return result;
}

unint64_t sub_2413F14E4()
{
  unint64_t result;

  result = qword_2571278C0;
  if (!qword_2571278C0)
  {
    result = MEMORY[0x242695AE8]("1", &type metadata for PlayingItemPlaceholder);
    atomic_store(result, (unint64_t *)&qword_2571278C0);
  }
  return result;
}

double sub_2413F1528(uint64_t a1)
{
  double result;

  *(_BYTE *)(a1 + 144) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_2413F1550()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_2413F1574(uint64_t *a1)
{
  sub_2413EEB88(a1);
}

uint64_t MCUINamespace<A>.fittedToMaxLines(_:)()
{
  sub_2413F1634();
  return sub_2414B41E0();
}

unint64_t sub_2413F1634()
{
  unint64_t result;

  result = qword_254382798;
  if (!qword_254382798)
  {
    result = MEMORY[0x242695AE8](&unk_2414BCE98, &type metadata for LineLimit);
    atomic_store(result, (unint64_t *)&qword_254382798);
  }
  return result;
}

uint64_t MCUINamespace<A>.fittedToMaxLines(_:)(uint64_t (*a1)(void))
{
  a1();
  sub_2413F1634();
  return sub_2414B41E0();
}

uint64_t View.fittedToMaxLines(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v5 = type metadata accessor for MCUINamespace(0, a3, a3, a4);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - v7;
  View.mcui.getter(a3, (uint64_t)&v10 - v7);
  MCUINamespace<A>.fittedToMaxLines(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t View.fittedToMaxLines(_:)(uint64_t (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v6 = type metadata accessor for MCUINamespace(0, a3, a3, a4);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - v8;
  View.mcui.getter(a3, (uint64_t)&v11 - v8);
  MCUINamespace<A>.fittedToMaxLines(_:)(a1);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_2413F1888(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571278D8);
  v2 = sub_2414B3514();
  v4[0] = v1;
  v4[1] = sub_2413F18E8();
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_2413F18E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2571278E0;
  if (!qword_2571278E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571278D8);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDEFB48], v1);
    atomic_store(result, (unint64_t *)&qword_2571278E0);
  }
  return result;
}

uint64_t static Backdrop.PerformanceConcessions.getter()
{
  return 15;
}

uint64_t sub_2413F1944()
{
  char v0;
  uint64_t result;

  v0 = 0;
  result = MGGetProductType();
  if (result > 2270970152)
  {
    if (result > 3242623366)
    {
      if (result != 3645319985 && result != 3242623367)
        goto LABEL_15;
    }
    else if (result != 2270970153 && result != 2311900306)
    {
      goto LABEL_15;
    }
  }
  else if (result > 1429914405)
  {
    if (result != 1429914406 && result != 1721691077)
      goto LABEL_15;
  }
  else if (result != 228444038 && result != 502329937)
  {
LABEL_15:
    v0 = 1;
  }
  byte_2571278F0 = v0;
  return result;
}

uint64_t static Backdrop.supportsHighFrameRate.getter()
{
  if (qword_257120980 != -1)
    swift_once();
  return byte_2571278F0;
}

BOOL static Backdrop.State.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t Backdrop.State.hash(into:)()
{
  return sub_2414B58D8();
}

uint64_t Backdrop.State.hashValue.getter()
{
  sub_2414B58CC();
  sub_2414B58D8();
  return sub_2414B58FC();
}

uint64_t sub_2413F1AF0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_observer;
  swift_beginAccess();
  return MEMORY[0x242695CC8](v1);
}

uint64_t sub_2413F1B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_observer;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_2413F1BA4(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_observer;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x242695CC8](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_2413F1C18;
}

void sub_2413F1C18(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48) + 8) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t sub_2413F1C8C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_state);
  result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

uint64_t sub_2413F1CD8(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  _BYTE *v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  v2 = *a1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_state);
  result = swift_beginAccess();
  v5 = *v3;
  *v3 = v2;
  if (v2 != v5)
  {
    v6 = v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_observer;
    swift_beginAccess();
    result = MEMORY[0x242695CC8](v6);
    if (result)
    {
      v7 = *(_QWORD *)(v6 + 8);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8))(v1, ObjectType, v7);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_2413F1D8C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_framebufferPixelFormat;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_2413F1DD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_framebufferPixelFormat);
  result = swift_beginAccess();
  v5 = *v3;
  *v3 = a1;
  if (v5 != a1)
  {
    v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers + 16);
    *(_QWORD *)(v6 + 16) = a1;
    *(_QWORD *)(v6 + 160) = sub_2413F6798();
    return swift_unknownObjectRelease();
  }
  return result;
}

void (*sub_2413F1E54(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_framebufferPixelFormat;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess();
  v3[3] = *v5;
  return sub_2413F1EC0;
}

void sub_2413F1EC0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v5 = *(_QWORD *)(v4 + v3);
  *(_QWORD *)(v4 + v3) = v2;
  if (v5 != v2)
  {
    v6 = *(_QWORD *)(v1[4] + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers + 16);
    *(_QWORD *)(v6 + 16) = v2;
    *(_QWORD *)(v6 + 160) = sub_2413F6798();
    swift_unknownObjectRelease();
  }
  free(v1);
}

uint64_t sub_2413F1F28()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_colorPixelFormat;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

void sub_2413F1F6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_colorPixelFormat);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;
  if (v4 != a1)
  {
    v5 = (uint64_t *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers);
    v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers + 8);
    *(_QWORD *)(v6 + 16) = a1;
    *(_QWORD *)(v6 + 136) = sub_2413F7FA0();
    swift_unknownObjectRelease();
    v7 = *v5;
    *(_QWORD *)(*v5 + 16) = *v3;
    v8 = sub_2413F6D3C();
    v9 = *(void **)(v7 + 152);
    *(_QWORD *)(v7 + 152) = v8;

    *(_QWORD *)(v7 + 160) = sub_2413F6F90();
    swift_unknownObjectRelease();
    sub_2413F7310(*(void **)(v7 + 48));
  }
}

void (*sub_2413F2028(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_colorPixelFormat);
  swift_beginAccess();
  v3[3] = *v4;
  return sub_2413F2094;
}

void sub_2413F2094(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  sub_2413F1F6C(*(_QWORD *)(*(_QWORD *)a1 + 24));
  free(v1);
}

BOOL sub_2413F20BC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis;
  swift_beginAccess();
  return *(float *)(*(_QWORD *)v1 + 64) == 1.0;
}

double sub_2413F2110(char a1)
{
  uint64_t v1;
  uint64_t v3;
  float v4;
  double result;

  v3 = v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis;
  swift_beginAccess();
  v4 = 0.2;
  if ((a1 & 1) != 0)
    v4 = 1.0;
  *(float *)(*(_QWORD *)v3 + 64) = v4;
  *(_QWORD *)&result = sub_2413F31BC().n128_u64[0];
  return result;
}

void (*sub_2413F2180(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis;
  v3[3] = v1;
  v3[4] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  *((_BYTE *)v3 + 40) = *(float *)(*(_QWORD *)v5 + 64) == 1.0;
  return sub_2413F21FC;
}

void sub_2413F21FC(uint64_t a1)
{
  void *v1;
  float v2;

  v1 = *(void **)a1;
  v2 = 0.2;
  if (*(_BYTE *)(*(_QWORD *)a1 + 40))
    v2 = 1.0;
  *(float *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 24) + *(_QWORD *)(*(_QWORD *)a1 + 32)) + 64) = v2;
  sub_2413F31BC();
  free(v1);
}

uint64_t sub_2413F2248()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_isPaused);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_2413F228C(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_isPaused);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_2413F22D4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_2413F2318(void *a1)
{
  uint64_t v1;
  id v2;
  id v3;
  _BYTE *v5;

  if ((objc_msgSend(a1, sel_supportsFamily_, 1005) & 1) != 0)
  {
    v2 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    v3 = objc_msgSend(v2, sel_maximumFramesPerSecond);

    return (uint64_t)v3;
  }
  else
  {
    v5 = (_BYTE *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_state);
    swift_beginAccess();
    if (*v5)
      return 30;
    else
      return 15;
  }
}

void sub_2413F23C0(id *a1, _QWORD *a2)
{
  id v2;
  char v3;
  id v4;

  v2 = *a1;
  v3 = *(_QWORD *)(*(_QWORD *)(*a2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers) + 96) != 0;
  v4 = *a1;
  sub_2413F2548(v2, v3);

}

void sub_2413F2420(void *a1)
{
  uint64_t v1;

  sub_2413F2548(a1, *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers) + 96) != 0);

}

void *sub_2413F245C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_imageStorage);
  v2 = v1;
  return v1;
}

void (*sub_2413F2488(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_imageStorage);
  *a1 = v2;
  a1[1] = v1;
  v3 = v2;
  return sub_2413F24C8;
}

void sub_2413F24C8(uint64_t a1, char a2)
{
  uint64_t v2;
  char v3;
  id v4;
  id v5;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers)
                 + 96);
  v5 = *(id *)a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2 != 0;
    v4 = v5;
    sub_2413F2548(v5, v3);

  }
  else
  {
    sub_2413F2548(v5, v2 != 0);

  }
}

void sub_2413F2548(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  char v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  double v16;
  double v17;
  void *v18;
  CGImageRef v19;
  id v20;
  id v21;
  float v22;
  uint64_t v23;
  CGImage *v24;

  v3 = v2;
  v6 = OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_imageStorage;
  v7 = *(void **)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_imageStorage);
  if (a1)
  {
    if (v7)
    {
      sub_2412CC884(0, (unint64_t *)&qword_254384FE0);
      v8 = a1;
      v9 = v7;
      v10 = sub_2414B532C();

      if ((v10 & 1) != 0)
        return;
      v6 = OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_imageStorage;
    }
    v12 = *(void **)(v3 + v6);
    *(_QWORD *)(v3 + v6) = a1;
    v13 = a1;

    v14 = objc_msgSend(v13, sel_CGImage);
    if (v14)
    {
      v15 = *(_QWORD *)(v3 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers);
      v16 = *(double *)(v15 + 24);
      if ((~*(_QWORD *)&v16 & 0x7FF0000000000000) != 0)
      {
        if (v16 > -9.22337204e18)
        {
          if (v16 < 9.22337204e18)
          {
            v17 = *(double *)(v15 + 32);
            if ((~*(_QWORD *)&v17 & 0x7FF0000000000000) != 0)
            {
              if (v17 > -9.22337204e18)
              {
                if (v17 < 9.22337204e18)
                {
                  v18 = v14;
                  v19 = sub_2413F27B8((uint64_t)v16, 0, (uint64_t)v17, 0);

                  if (v19)
                  {
                    v24 = v19;
                    sub_2413F3674(v19, 0, a2 & 1);

                    return;
                  }
                  goto LABEL_16;
                }
LABEL_24:
                __break(1u);
                return;
              }
LABEL_23:
              __break(1u);
              goto LABEL_24;
            }
LABEL_22:
            __break(1u);
            goto LABEL_23;
          }
LABEL_21:
          __break(1u);
          goto LABEL_22;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_21;
    }
  }
  else
  {
    *(_QWORD *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_imageStorage) = 0;
    v11 = 0;

  }
LABEL_16:
  v20 = *(id *)(v3 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_placeholderColor);
  v21 = sub_2413F3E38(v20);
  v22 = 1.0;
  if ((a2 & 1) != 0)
    v22 = 0.0;
  *(float *)(v3 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_textureTransitionMix) = v22;
  v23 = *(_QWORD *)(v3 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers);
  *(_QWORD *)(v23 + 96) = v21;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_BYTE *)(v23 + 104) = 1;

  swift_unknownObjectRelease();
}

CGImageRef sub_2413F27B8(int64_t Width, char a2, int64_t Height, char a4)
{
  CGImage *v4;
  int64_t v8;
  int64_t v9;
  CGColorSpace *v10;
  CGColorSpace *v11;
  CGColorSpaceModel Model;
  CGColorSpace *DeviceRGB;
  CGContext *v14;
  os_log_type_t v15;
  CGImage *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  CGImage *v21;
  uint64_t v22;
  unint64_t v23;
  CGImageRef Image;
  uint64_t v26;

  if ((a2 & 1) != 0)
    Width = CGImageGetWidth(v4);
  v8 = CGImageGetWidth(v4);
  if (v8 < Width)
    Width = v8;
  if ((a4 & 1) != 0)
    Height = CGImageGetHeight(v4);
  v9 = CGImageGetHeight(v4);
  if (v9 < Height)
    Height = v9;
  v10 = CGImageGetColorSpace(v4);
  if (!v10 || (v11 = v10, Model = CGColorSpaceGetModel(v10), v11, Model))
  {
    if (CGImageGetAlphaInfo(v4) != kCGImageAlphaNoneSkipFirst
      && CGImageGetAlphaInfo(v4) != kCGImageAlphaPremultipliedFirst)
    {
      return v4;
    }
  }
  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  v14 = CGBitmapContextCreate(0, Width, Height, 8uLL, 0, DeviceRGB, 5u);

  if (!v14)
    return v4;
  v15 = sub_2414B5188();
  sub_2412CC884(0, (unint64_t *)&qword_2543846A0);
  v16 = v4;
  v17 = sub_2414B53A4();
  v18 = v15;
  if (os_log_type_enabled(v17, v15))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v26 = v20;
    *(_DWORD *)v19 = 136315138;
    type metadata accessor for CGImage(0);
    v21 = v16;
    v22 = sub_2414B4D8C();
    sub_2412E4890(v22, v23, &v26);
    sub_2414B541C();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2412C1000, v17, v18, "Backdrop: Redrawing incompatible image: %s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v20, -1, -1);
    MEMORY[0x242695BD8](v19, -1, -1);
  }
  else
  {

  }
  sub_2414B5170();
  Image = CGBitmapContextCreateImage(v14);

  return Image;
}

void sub_2413F2A5C(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  float v9;
  uint64_t v10;

  v4 = OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_placeholderColor;
  v5 = *(void **)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_placeholderColor);
  *(_QWORD *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_placeholderColor) = a1;
  v6 = a1;

  if (!*(_QWORD *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_imageStorage))
  {
    v7 = *(id *)(v2 + v4);
    v8 = sub_2413F3E38(v7);
    v9 = 1.0;
    if ((a2 & 1) != 0)
      v9 = 0.0;
    *(float *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_textureTransitionMix) = v9;
    v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers);
    *(_QWORD *)(v10 + 96) = v8;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    *(_BYTE *)(v10 + 104) = 1;

    swift_unknownObjectRelease();
  }
}

void sub_2413F2B20(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_beginAccess();
  v2 = v1;
  swift_retain();
  sub_241497B88(v1);
  swift_release();

}

void *sub_2413F2B98()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis;
  swift_beginAccess();
  v2 = *(void **)(*(_QWORD *)v1 + 16);
  v3 = v2;
  return v2;
}

void sub_2413F2BE8(void *a1)
{
  swift_beginAccess();
  swift_retain();
  sub_241497B88(a1);
  swift_release();

}

void (*sub_2413F2C4C(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = *(void **)(*(_QWORD *)v5 + 16);
  v3[3] = v6;
  v7 = v6;
  return sub_2413F2CC4;
}

void sub_2413F2CC4(void **a1, char a2)
{
  void *v2;
  void *v3;
  void **v4;
  id v5;

  v2 = *a1;
  v4 = (void **)((char *)*a1 + 24);
  v3 = *v4;
  if ((a2 & 1) != 0)
  {
    v5 = v3;
    swift_retain();
    sub_241497B88(v3);

    swift_release();
    v3 = *v4;
  }
  else
  {
    swift_retain();
    sub_241497B88(v3);
    swift_release();
  }

  free(v2);
}

id Backdrop.CompositeRenderer.context.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v8;

  v2 = v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_context;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_context);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_context + 8);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_context + 16);
  v8 = *(id *)(v2 + 24);
  v6 = *(_QWORD *)(v2 + 32);
  LOBYTE(v2) = *(_BYTE *)(v2 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = v2;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return v8;
}

id Backdrop.CompositeRenderer.__allocating_init(context:configuration:)(uint64_t *a1, char *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return Backdrop.CompositeRenderer.init(context:configuration:)(a1, a2);
}

id Backdrop.CompositeRenderer.init(context:configuration:)(uint64_t *a1, char *a2)
{
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  void *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  id v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  id v26;
  double v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  char *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t *v44;
  id v45;
  char v47;
  char v48;
  objc_super v49;
  __int128 v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  char v54;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = (void *)a1[3];
  v7 = a1[4];
  v48 = *((_BYTE *)a1 + 40);
  v8 = *a2;
  *(_QWORD *)&v2[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_observer + 8] = 0;
  swift_unknownObjectWeakInit();
  v2[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_state] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_framebufferPixelFormat] = 80;
  *(_QWORD *)&v2[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_colorPixelFormat] = 115;
  v2[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_isPaused] = 0;
  *(_DWORD *)&v2[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_crossfadeDuration] = 1061997773;
  *(_QWORD *)&v2[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_imageStorage] = 0;
  v9 = OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_placeholderColor;
  v10 = (void *)objc_opt_self();
  v11 = v2;
  *(_QWORD *)&v2[v9] = objc_msgSend(v10, sel_systemRedColor);
  v12 = &v11[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_environment];
  *v12 = 0;
  *(_QWORD *)(v12 + 4) = 0x432000004019999ALL;
  v13 = OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_crossfadeTimingFunction;
  v14 = objc_allocWithZone(MEMORY[0x24BDE56F0]);
  LODWORD(v15) = 1050253722;
  LODWORD(v16) = 0;
  LODWORD(v17) = 0;
  LODWORD(v18) = 1.0;
  *(_QWORD *)&v11[v13] = objc_msgSend(v14, sel_initWithControlPoints__::, v16, v17, v15, v18);
  v19 = OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_modeTimingFunction;
  v20 = objc_allocWithZone(MEMORY[0x24BDE56F0]);
  LODWORD(v21) = 0;
  LODWORD(v22) = 1.0;
  LODWORD(v23) = 1054280253;
  LODWORD(v24) = 1058306785;
  *(_QWORD *)&v11[v19] = objc_msgSend(v20, sel_initWithControlPoints__::, v23, v21, v24, v22);
  v25 = OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_warpTimingFunction;
  v26 = objc_allocWithZone(MEMORY[0x24BDE56F0]);
  LODWORD(v27) = 0;
  LODWORD(v28) = 1.0;
  LODWORD(v29) = 1054280253;
  LODWORD(v30) = 1058306785;
  *(_QWORD *)&v11[v25] = objc_msgSend(v26, sel_initWithControlPoints__::, v29, v27, v30, v28);
  *(_QWORD *)&v11[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_warpTimingSpeed] = 0x400C000000000000;
  *(_DWORD *)&v11[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_textureTransitionMix] = 0;
  *(_DWORD *)&v11[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_pinchMix] = 0;
  v31 = OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_uniforms;
  if (qword_2543845F0 != -1)
    swift_once();
  memmove(&v11[v31], &dword_25438EA90, 0x170uLL);
  v32 = OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis;
  type metadata accessor for SpectrumAnalysis();
  swift_allocObject();
  *(_QWORD *)&v11[v32] = sub_241496EB4();
  __asm { FMOV            V0.2S, #1.0 }
  *(_QWORD *)&v11[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_aspectRatio] = _D0;
  v47 = v8 & 1;
  v38 = &v11[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_context];
  *(_QWORD *)v38 = v3;
  *((_QWORD *)v38 + 1) = v4;
  *((_QWORD *)v38 + 2) = v5;
  *((_QWORD *)v38 + 3) = v6;
  *((_QWORD *)v38 + 4) = v7;
  v38[40] = v48;
  *(_QWORD *)&v50 = v3;
  *((_QWORD *)&v50 + 1) = v4;
  v51 = v5;
  v52 = v6;
  v53 = v7;
  v54 = v48;
  type metadata accessor for Backdrop.TextureBlender();
  v39 = swift_allocObject();
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  v40 = v6;
  sub_2413F6B50(&v50);
  *(_QWORD *)&v50 = v3;
  *((_QWORD *)&v50 + 1) = v4;
  v51 = v5;
  v52 = v40;
  v53 = v7;
  v54 = v48;
  type metadata accessor for Backdrop.RotatingArtworkRenderer();
  v41 = swift_allocObject();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v42 = v40;
  sub_2413F78EC((uint64_t)&v50);
  *(_QWORD *)&v50 = v3;
  *((_QWORD *)&v50 + 1) = v4;
  v51 = v5;
  v52 = v42;
  v53 = v7;
  v54 = v48;
  type metadata accessor for Backdrop.PinchRenderer();
  v43 = swift_allocObject();
  sub_2413F62C0((uint64_t)&v50, v47);
  v44 = (uint64_t *)&v11[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers];
  *v44 = v39;
  v44[1] = v41;
  v44[2] = v43;

  v49.receiver = v11;
  v49.super_class = (Class)type metadata accessor for Backdrop.CompositeRenderer();
  v45 = objc_msgSendSuper2(&v49, sel_init);
  sub_2413F3474();

  return v45;
}

__n128 sub_2413F31BC()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  int8x8_t v6;
  __n128 v7;
  uint64_t v8;
  __n128 result;
  __n128 v10;

  v1 = v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers;
  v2 = *(double *)(*(_QWORD *)(v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers + 8) + 40) < *(double *)(*(_QWORD *)(v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers + 8) + 32);
  v3 = v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis;
  swift_beginAccess();
  v4 = *(float *)(*(_QWORD *)v3 + 64) == 1.0;
  v5 = v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_environment;
  *(_BYTE *)v5 = v2;
  v6 = (int8x8_t)vcltz_s32(vshl_n_s32(vdup_n_s32(v4), 0x1FuLL));
  v7.n128_u64[0] = (unint64_t)vbsl_s8((int8x8_t)vcltz_s32(vshl_n_s32(vdup_n_s32(v2), 0x1FuLL)), vbsl_s8(v6, (int8x8_t)0x42F000004019999ALL, (int8x8_t)0x434800004039999ALL), vbsl_s8(v6, (int8x8_t)0x42AA000040000000, (int8x8_t)0x432000004019999ALL));
  v10 = v7;
  *(_QWORD *)(v5 + 4) = v7.n128_u64[0];
  *(_BYTE *)(*(_QWORD *)(v1 + 16) + 104) = v2;
  v8 = v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_uniforms;
  swift_beginAccess();
  result = v10;
  *(_DWORD *)(v8 + 340) = v10.n128_u32[0];
  return result;
}

void sub_2413F32C0(float a1)
{
  uint64_t v1;
  float v2;
  char *v3;
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  v2 = *(float *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_pinchMix);
  if (v2 != a1)
  {
    v3 = (char *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_state);
    if (v2 >= 1.0 || v2 <= 0.0)
    {
      swift_beginAccess();
      v5 = *v3;
      *v3 = 0;
      if (v5 != 1)
        return;
    }
    else
    {
      swift_beginAccess();
      v4 = *v3;
      *v3 = 1;
      if ((v4 & 1) != 0)
        return;
    }
    v6 = v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_observer;
    swift_beginAccess();
    if (MEMORY[0x242695CC8](v6))
    {
      v7 = *(_QWORD *)(v6 + 8);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8))(v1, ObjectType, v7);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_2413F33C4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis);
  swift_beginAccess();
  *v3 = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_2413F342C()
{
  swift_beginAccess();
  return swift_retain();
}

void sub_2413F3474()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  float32x4_t v4;
  float32x4_t v5;
  float32x4_t v6;
  float32x4_t v7;
  float32x4_t v8;
  float32x4_t v9;
  float32x4_t v10;
  float32x4_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  sub_2413F9668();
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v2 == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v2 >= 3)
  {
    v14 = *(_OWORD *)(v1 + 48);
    v15 = *(_OWORD *)(v1 + 32);
    v12 = *(_OWORD *)(v1 + 80);
    v13 = *(_OWORD *)(v1 + 64);
    v11 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_2414BDDD0, COERCE_FLOAT(*(_OWORD *)(v1 + 96))), (float32x4_t)xmmword_2414BDDE0, *(float32x2_t *)(v1 + 96), 1), (float32x4_t)xmmword_2414BDDF0, *(float32x4_t *)(v1 + 96), 2), (float32x4_t)xmmword_2414C47D0, *(float32x4_t *)(v1 + 96), 3);
    v10 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_2414BDDD0, COERCE_FLOAT(*(_OWORD *)(v1 + 112))), (float32x4_t)xmmword_2414BDDE0, *(float32x2_t *)(v1 + 112), 1), (float32x4_t)xmmword_2414BDDF0, *(float32x4_t *)(v1 + 112), 2), (float32x4_t)xmmword_2414C47D0, *(float32x4_t *)(v1 + 112), 3);
    v9 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_2414BDDD0, COERCE_FLOAT(*(_OWORD *)(v1 + 128))), (float32x4_t)xmmword_2414BDDE0, *(float32x2_t *)(v1 + 128), 1), (float32x4_t)xmmword_2414BDDF0, *(float32x4_t *)(v1 + 128), 2), (float32x4_t)xmmword_2414C47D0, *(float32x4_t *)(v1 + 128), 3);
    v8 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_2414BDDD0, COERCE_FLOAT(*(_OWORD *)(v1 + 144))), (float32x4_t)xmmword_2414BDDE0, *(float32x2_t *)(v1 + 144), 1), (float32x4_t)xmmword_2414BDDF0, *(float32x4_t *)(v1 + 144), 2), (float32x4_t)xmmword_2414C47D0, *(float32x4_t *)(v1 + 144), 3);
    v6 = *(float32x4_t *)(v1 + 176);
    v7 = *(float32x4_t *)(v1 + 160);
    v4 = *(float32x4_t *)(v1 + 208);
    v5 = *(float32x4_t *)(v1 + 192);
    swift_bridgeObjectRelease();
    v3 = v0 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_uniforms;
    swift_beginAccess();
    *(_OWORD *)(v3 + 80) = v15;
    *(_OWORD *)(v3 + 96) = v14;
    *(_OWORD *)(v3 + 112) = v13;
    *(_OWORD *)(v3 + 128) = v12;
    *(_WORD *)(v3 + 144) = -1;
    *(_DWORD *)(v3 + 148) = 1123024896;
    *(float32x4_t *)(v3 + 160) = v11;
    *(float32x4_t *)(v3 + 176) = v10;
    *(float32x4_t *)(v3 + 192) = v9;
    *(float32x4_t *)(v3 + 208) = v8;
    *(_WORD *)(v3 + 224) = -1;
    *(_DWORD *)(v3 + 228) = 1116471296;
    *(float32x4_t *)(v3 + 240) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_2414BDDD0, v7.f32[0]), (float32x4_t)xmmword_2414BDDE0, *(float32x2_t *)v7.f32, 1), (float32x4_t)xmmword_2414BDDF0, v7, 2), (float32x4_t)xmmword_2414C47E0, v7, 3);
    *(float32x4_t *)(v3 + 256) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_2414BDDD0, v6.f32[0]), (float32x4_t)xmmword_2414BDDE0, *(float32x2_t *)v6.f32, 1), (float32x4_t)xmmword_2414BDDF0, v6, 2), (float32x4_t)xmmword_2414C47E0, v6, 3);
    *(float32x4_t *)(v3 + 272) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_2414BDDD0, v5.f32[0]), (float32x4_t)xmmword_2414BDDE0, *(float32x2_t *)v5.f32, 1), (float32x4_t)xmmword_2414BDDF0, v5, 2), (float32x4_t)xmmword_2414C47E0, v5, 3);
    *(float32x4_t *)(v3 + 288) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_2414BDDD0, v4.f32[0]), (float32x4_t)xmmword_2414BDDE0, *(float32x2_t *)v4.f32, 1), (float32x4_t)xmmword_2414BDDF0, v4, 2), (float32x4_t)xmmword_2414C47E0, v4, 3);
    *(_WORD *)(v3 + 304) = 0;
    *(_DWORD *)(v3 + 308) = 1119092736;
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_2413F3674(void *a1, char a2, char a3)
{
  char *v3;
  uint64_t v6;
  uint64_t inited;
  void *v8;
  id v9;
  char *v10;
  id v11;
  char *v12;
  id v13;
  unint64_t v14;
  void *v15;
  void *v16;
  _QWORD *v17;
  void *v18;
  id v19;
  id v20;
  float v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28[14];

  v28[13] = *(id *)MEMORY[0x24BDAC8D0];
  if ((a2 & 1) != 0)
  {
    v19 = a1;
    v20 = sub_2413F3E38(v19);
    v21 = 1.0;
    if ((a3 & 1) != 0)
      v21 = 0.0;
    *(float *)&v3[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_textureTransitionMix] = v21;
    v22 = *(_QWORD *)&v3[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers];
    *(_QWORD *)(v22 + 96) = v20;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    *(_BYTE *)(v22 + 104) = 1;

    swift_unknownObjectRelease();
  }
  else
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = a1;
    *(_BYTE *)(v6 + 24) = 0;
    *(_QWORD *)(v6 + 32) = v3;
    *(_BYTE *)(v6 + 40) = a3 & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254385018);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2414B72B0;
    v8 = (void *)*MEMORY[0x24BDDDB10];
    *(_QWORD *)(inited + 32) = *MEMORY[0x24BDDDB10];
    *(_BYTE *)(inited + 40) = 0;
    v9 = a1;
    v10 = v3;
    v11 = v9;
    v12 = v10;
    v13 = v8;
    v14 = sub_2413123EC(inited);
    v15 = *(void **)&v12[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_context + 24];
    sub_2414277C8(v14);
    swift_bridgeObjectRelease();
    type metadata accessor for Option(0);
    sub_2412C8030((unint64_t *)&qword_254384FD0, (uint64_t (*)(uint64_t))type metadata accessor for Option, (uint64_t)&unk_2414B8714);
    v16 = (void *)sub_2414B4C00();
    swift_bridgeObjectRelease();
    if ((a3 & 1) != 0)
    {
      v17 = (_QWORD *)swift_allocObject();
      v17[2] = sub_2413F9710;
      v17[3] = v6;
      v28[4] = sub_2413F9748;
      v28[5] = v17;
      v28[0] = (id)MEMORY[0x24BDAC760];
      v28[1] = (id)1107296256;
      v28[2] = sub_2414523F8;
      v28[3] = &block_descriptor_28;
      v18 = _Block_copy(v28);
      swift_retain();
      swift_release();
      objc_msgSend(v15, sel_newTextureWithCGImage_options_completionHandler_, v11, v16, v18);
      _Block_release(v18);

      swift_release();
    }
    else
    {
      v28[0] = 0;
      v23 = objc_msgSend(v15, sel_newTextureWithCGImage_options_error_, v11, v16, v28);

      v24 = v28[0];
      if (v23)
      {
        v25 = (uint64_t)v23;
      }
      else
      {
        v26 = v24;
        v27 = (void *)sub_2414B29D4();

        swift_willThrow();
        v25 = 0;
      }
      sub_2413F39C8(v25, (uint64_t)a1, 0, (uint64_t)v12, 0);

      swift_release();
      swift_unknownObjectRelease();
    }
  }
}

void sub_2413F39C8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  void *v8;
  id v9;
  char v10;
  float v11;
  uint64_t v12;

  if ((a3 & 1) != 0
    || (v8 = *(void **)(a4 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_imageStorage)) == 0
    || (sub_2412CC884(0, (unint64_t *)&qword_254384FE0),
        v9 = v8,
        v10 = sub_2414B532C(),
        v9,
        (v10 & 1) != 0))
  {
    v11 = 1.0;
    if ((a5 & 1) != 0)
      v11 = 0.0;
    *(float *)(a4 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_textureTransitionMix) = v11;
    v12 = *(_QWORD *)(a4 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers);
    *(_QWORD *)(v12 + 96) = a1;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    *(_BYTE *)(v12 + 104) = 1;
  }
}

uint64_t sub_2413F3A90(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  os_log_type_t v15;
  id v16;
  id v17;
  NSObject *v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  void *v27;
  _QWORD *v28;
  void *v29;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t aBlock[6];

  v36 = a1;
  v7 = sub_2414B4B94();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_2414B4BB8();
  v11 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v35 = v11;
    v14 = a2;
    v15 = sub_2414B51A0();
    sub_2412CC884(0, (unint64_t *)&qword_2543846A0);
    v16 = a2;
    v17 = a2;
    v18 = sub_2414B53A4();
    if (os_log_type_enabled(v18, v15))
    {
      v19 = swift_slowAlloc();
      v34 = v8;
      v20 = (uint8_t *)v19;
      v21 = swift_slowAlloc();
      v33 = a4;
      v22 = v21;
      aBlock[0] = v21;
      v32 = a3;
      *(_DWORD *)v20 = 136315138;
      v31 = v20 + 4;
      swift_getErrorValue();
      v23 = sub_2414B5878();
      v38 = sub_2412E4890(v23, v24, aBlock);
      a3 = v32;
      sub_2414B541C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2412C1000, v18, v15, "Error loading texture: %s", v20, 0xCu);
      swift_arrayDestroy();
      v25 = v22;
      a4 = v33;
      MEMORY[0x242695BD8](v25, -1, -1);
      v26 = v20;
      v8 = v34;
      MEMORY[0x242695BD8](v26, -1, -1);

    }
    else
    {

    }
    v11 = v35;
  }
  sub_2412CC884(0, (unint64_t *)&qword_254384FC0);
  v27 = (void *)sub_2414B5230();
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = a3;
  v28[3] = a4;
  v28[4] = v36;
  aBlock[4] = (uint64_t)sub_2413F977C;
  aBlock[5] = (uint64_t)v28;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_2413002C8;
  aBlock[3] = (uint64_t)&block_descriptor_34;
  v29 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  sub_2414B4BAC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_2412C8030((unint64_t *)&qword_254384690, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543846C0);
  sub_241381774();
  sub_2414B5464();
  MEMORY[0x242694ABC](0, v13, v10, v29);
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v37);
}

id sub_2413F3E38(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  double v5;
  double v6;
  double v7;
  _QWORD v9[3];
  int64x2_t v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  _BYTE v15[8];
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v3 = objc_msgSend((id)objc_opt_self(), sel_texture2DDescriptorWithPixelFormat_width_height_mipmapped_, 80, 1, 1, 0);
  v4 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_context), sel_newTextureWithDescriptor_, v3);
  if (v4)
  {
    v13 = 0.0;
    v14 = 0.0;
    v12 = 0.0;
    objc_msgSend(a1, sel_getRed_green_blue_alpha_, &v14, &v13, &v12, 0);
    v5 = v12 * 255.0;
    if ((~COERCE__INT64(v12 * 255.0) & 0x7FF0000000000000) != 0)
    {
      if (v5 > -1.0)
      {
        if (v5 < 256.0)
        {
          v15[0] = (int)v5;
          v6 = v13 * 255.0;
          if ((~COERCE__INT64(v13 * 255.0) & 0x7FF0000000000000) != 0)
          {
            if (v6 > -1.0)
            {
              if (v6 < 256.0)
              {
                v15[1] = (int)v6;
                v7 = v14 * 255.0;
                if ((~COERCE__INT64(v14 * 255.0) & 0x7FF0000000000000) != 0)
                {
                  if (v7 > -1.0)
                  {
                    if (v7 < 256.0)
                    {
                      v15[2] = (int)v7;
                      v15[3] = -1;
                      memset(v9, 0, sizeof(v9));
                      v10 = vdupq_n_s64(1uLL);
                      v11 = 1;
                      objc_msgSend(v4, sel_replaceRegion_mipmapLevel_withBytes_bytesPerRow_, v9, 0, v15, 4);
                      goto LABEL_12;
                    }
LABEL_21:
                    __break(1u);
                  }
LABEL_20:
                  __break(1u);
                  goto LABEL_21;
                }
LABEL_19:
                __break(1u);
                goto LABEL_20;
              }
LABEL_18:
              __break(1u);
              goto LABEL_19;
            }
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
LABEL_16:
          __break(1u);
          goto LABEL_17;
        }
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_15;
  }
LABEL_12:

  return v4;
}

id Backdrop.CompositeRenderer.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void Backdrop.CompositeRenderer.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id Backdrop.CompositeRenderer.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Backdrop.CompositeRenderer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_2413F41E0(void *a1, float a2)
{
  uint64_t v2;
  uint64_t v5;
  __int128 v6;
  float v7;
  float v8;
  double v9;
  int v10;
  double v11;
  id result;
  int v13;
  uint64_t v14;
  double v15;
  double v16;

  v5 = v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_uniforms;
  swift_beginAccess();
  *(float *)v5 = *(float *)v5 + a2;
  swift_beginAccess();
  sub_2414974F4();
  *(double *)&v6 = sub_241496F30();
  *(_OWORD *)(v5 + 352) = v6;
  sub_2413F43F4(a2 + a2);
  v7 = *(double *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_warpTimingSpeed);
  v8 = 0.5;
  *(float *)(v5 + 324) = (float)(sinf(*(float *)v5 / v7) + 1.0) * 0.5;
  if (a1)
  {
    if (objc_msgSend(a1, sel_userInterfaceStyle) == (id)1)
      v8 = 0.35;
  }
  *(float *)(v5 + 348) = v8;
  *(_DWORD *)(v5 + 344) = 1036831949;
  LODWORD(v9) = *(_DWORD *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_pinchMix);
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_modeTimingFunction), sel__solveForInput_, v9);
  *(_DWORD *)(v5 + 328) = v10;
  LODWORD(v11) = *(_DWORD *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_textureTransitionMix);
  result = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_crossfadeTimingFunction), sel__solveForInput_, v11);
  *(_DWORD *)(v5 + 320) = v13;
  *(_DWORD *)(v5 + 332) = 1082130432;
  v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers + 8);
  v15 = *(double *)(v14 + 32);
  if ((~*(_QWORD *)&v15 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v15 <= -32769.0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v15 >= 32768.0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  *(_WORD *)(v5 + 336) = (int)v15;
  v16 = *(double *)(v14 + 40);
  if ((~*(_QWORD *)&v16 & 0x7FF0000000000000) == 0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v16 <= -32769.0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v16 < 32768.0)
  {
    *(_WORD *)(v5 + 338) = (int)v16;
    return result;
  }
LABEL_16:
  __break(1u);
  return result;
}

void sub_2413F43F4(float a1)
{
  uint64_t v1;
  uint64_t v2;
  float v3;
  float v4;
  uint64_t v5;
  float v6;
  float v7;
  float v8;
  float v9;
  uint64_t v10;
  float v11;
  float v12;
  float v13;

  v2 = v1;
  v3 = a1 / *(float *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_crossfadeDuration);
  v4 = v3 + *(float *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_textureTransitionMix);
  if (v4 > 1.0)
    v4 = 1.0;
  *(float *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_textureTransitionMix) = v4;
  v5 = v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis;
  swift_beginAccess();
  v6 = *(float *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_pinchMix);
  v7 = v6 - v3;
  if ((float)(v6 - v3) <= 0.0)
    v7 = 0.0;
  v8 = v3 + v6;
  if ((float)(v3 + v6) > 1.0)
    v8 = 1.0;
  if (*(float *)(*(_QWORD *)v5 + 64) == 1.0)
    v9 = v8;
  else
    v9 = v7;
  *(float *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_pinchMix) = v9;
  sub_2413F32C0(v6);
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers + 8);
  v11 = *(float *)(v10 + 24);
  v12 = *(float *)(v2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_environment + 8);
  v13 = -1.0;
  if (v12 < v11 || (v13 = 1.0, v11 < v12))
  {
    *(float *)(v10 + 24) = v11 + v13;
    sub_2413F84C0();
  }
}

void sub_2413F44FC(double a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  float v8;
  float v9;
  float *v10;
  unint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  double v14;
  double v15;
  __int128 v17;
  __int128 v18;

  v4 = v3;
  v8 = a1 / a2;
  v9 = 1.0 / v8;
  if (v8 < 1.0)
    v8 = 1.0;
  else
    v9 = 1.0;
  v10 = (float *)(v3 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_aspectRatio);
  *v10 = v9;
  v10[1] = v8;
  v18 = LODWORD(v9);
  LODWORD(v11) = 0;
  *((float *)&v11 + 1) = v8;
  v17 = v11;
  v12 = (_OWORD *)(v3 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_uniforms);
  swift_beginAccess();
  v12[1] = v18;
  v12[2] = v17;
  v12[3] = xmmword_2414BDDF0;
  v12[4] = xmmword_2414BDE00;
  v13 = *(_QWORD *)(v4 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers + 8);
  v14 = *(double *)(v13 + 32);
  v15 = *(double *)(v13 + 40);
  *(double *)(v13 + 32) = a1;
  *(double *)(v13 + 40) = a2;
  *(double *)(v13 + 48) = a3;
  if (v14 != a1 || v15 != a2)
  {
    sub_2413F830C(*(void **)(v13 + 56));
    sub_2413F84C0();
  }
  sub_2413F31BC();
}

uint64_t static Backdrop.CompositeRenderer.snapshot(configuration:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v3 = sub_2414B2C50();
  *(_QWORD *)(v1 + 160) = v3;
  *(_QWORD *)(v1 + 168) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v1 + 176) = swift_task_alloc();
  *(_QWORD *)(v1 + 184) = swift_task_alloc();
  *(_QWORD *)(v1 + 192) = swift_task_alloc();
  *(_QWORD *)(v1 + 200) = swift_task_alloc();
  *(_QWORD *)(v1 + 208) = swift_task_alloc();
  v4 = sub_2414B2C14();
  *(_QWORD *)(v1 + 216) = v4;
  *(_QWORD *)(v1 + 224) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v1 + 232) = swift_task_alloc();
  *(_QWORD *)(v1 + 240) = swift_task_alloc();
  *(_QWORD *)(v1 + 248) = swift_task_alloc();
  *(_QWORD *)(v1 + 256) = swift_task_alloc();
  *(_QWORD *)(v1 + 264) = swift_task_alloc();
  *(_QWORD *)(v1 + 272) = swift_task_alloc();
  v5 = swift_task_alloc();
  v6 = *a1;
  *(_QWORD *)(v1 + 280) = v5;
  *(_QWORD *)(v1 + 288) = v6;
  v7 = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(v1 + 296) = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v1 + 312) = v7;
  *(_QWORD *)(v1 + 328) = a1[5];
  return swift_task_switch();
}

uint64_t sub_2413F4728()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint8_t *v8;
  os_signpost_id_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char v20;
  double v21;
  double v22;
  double v23;
  void *v24;
  id v25;
  id v26;
  char *v27;
  float v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  id v33;
  void *v34;
  char *v35;
  uint64_t result;
  double v37;
  double v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  double v47;
  float v48;
  _QWORD *v49;
  _QWORD *v50;
  NSObject *v51;
  os_signpost_type_t v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  const char *v57;
  _QWORD *v58;
  NSObject *v59;
  os_signpost_type_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  const char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint8_t *v72;
  os_signpost_id_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint8_t *v77;
  os_signpost_id_t v78;
  void (*v79)(uint64_t, uint64_t);
  void (*v80)(uint64_t, uint64_t, uint64_t);
  uint64_t v81[5];
  char v82;
  char v83[9];

  if (qword_254384218 != -1)
    swift_once();
  v1 = sub_2414B2C44();
  *(_QWORD *)(v0 + 336) = __swift_project_value_buffer(v1, (uint64_t)qword_25438E8C8);
  sub_2414B2C08();
  v2 = sub_2414B2C2C();
  v3 = sub_2414B5260();
  if ((sub_2414B5398() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 272);
    v5 = *(_QWORD *)(v0 + 216);
    v6 = *(_QWORD *)(v0 + 224);
    v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    v7(v4, *(_QWORD *)(v0 + 280), v5);
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    v9 = sub_2414B2BFC();
    _os_signpost_emit_with_name_impl(&dword_2412C1000, v2, v3, v9, "Backdrop Snapshot Generation", "", v8, 2u);
    MEMORY[0x242695BD8](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 224);

    v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  }
  *(_QWORD *)(v0 + 344) = v7;
  v11 = *(_QWORD *)(v0 + 280);
  v12 = *(_QWORD *)(v0 + 216);
  v13 = *(_QWORD *)(v0 + 224);
  v80 = v7;
  v7(*(_QWORD *)(v0 + 272), v11, v12);
  sub_2414B2C74();
  swift_allocObject();
  *(_QWORD *)(v0 + 352) = sub_2414B2C68();
  v14 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  *(_QWORD *)(v0 + 360) = v14;
  v14(v11, v12);
  if (qword_2543845D0 != -1)
    swift_once();
  v15 = qword_254384630;
  v16 = qword_254384638;
  *(_QWORD *)(v0 + 368) = qword_254384630;
  *(_QWORD *)(v0 + 376) = v16;
  v17 = qword_254384640;
  v18 = (void *)qword_254384648;
  *(_QWORD *)(v0 + 384) = qword_254384640;
  *(_QWORD *)(v0 + 392) = v18;
  v19 = qword_254384650;
  *(_QWORD *)(v0 + 400) = qword_254384650;
  v20 = byte_254384658;
  *(_BYTE *)(v0 + 464) = byte_254384658;
  if (!v15)
  {
    sub_2413F8688();
    swift_allocError();
    *v50 = 2;
    swift_willThrow();
    v51 = sub_2414B2C2C();
    sub_2414B2C5C();
    v52 = sub_2414B5254();
    if ((sub_2414B5398() & 1) != 0)
    {
      v53 = v14;
      v54 = *(_QWORD *)(v0 + 184);
      v55 = *(_QWORD *)(v0 + 160);
      v56 = *(_QWORD *)(v0 + 168);
      swift_retain();
      sub_2414B2C80();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v56 + 88))(v54, v55) == *MEMORY[0x24BEE7810])
      {
        v57 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 160));
        v57 = "";
      }
      v69 = *(_QWORD *)(v0 + 272);
      v70 = *(_QWORD *)(v0 + 240);
      v71 = *(_QWORD *)(v0 + 216);
      v80(v69, v70, v71);
      v72 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v72 = 0;
      v73 = sub_2414B2BFC();
      _os_signpost_emit_with_name_impl(&dword_2412C1000, v51, v52, v73, "Backdrop Snapshot Generation", v57, v72, 2u);
      MEMORY[0x242695BD8](v72, -1, -1);

      v53(v70, v71);
      v53(v69, v71);
    }
    else
    {
      v65 = *(_QWORD *)(v0 + 240);
      v66 = *(_QWORD *)(v0 + 216);

      v14(v65, v66);
    }
    goto LABEL_31;
  }
  v79 = v14;
  v22 = *(double *)(v0 + 304);
  v21 = *(double *)(v0 + 312);
  v23 = *(double *)(v0 + 296);
  v24 = *(void **)(v0 + 288);
  v81[0] = v15;
  v81[1] = v16;
  v81[2] = v17;
  v81[3] = (uint64_t)v18;
  v81[4] = v19;
  v82 = v20 & 1;
  v83[0] = 2;
  v25 = objc_allocWithZone((Class)type metadata accessor for Backdrop.CompositeRenderer());
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  v26 = v18;
  v27 = (char *)Backdrop.CompositeRenderer.init(context:configuration:)(v81, v83);
  *(_QWORD *)(v0 + 408) = v27;
  v28 = *(float *)&v27[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_pinchMix];
  *(_DWORD *)&v27[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_pinchMix] = 1065353216;
  sub_2413F32C0(v28);
  v29 = &v27[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_environment];
  *v29 = 0;
  *(_QWORD *)(v29 + 4) = 0x42AA000040000000;
  v30 = &v27[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers];
  *(_BYTE *)(*(_QWORD *)&v27[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers + 16] + 104) = 0;
  v31 = &v27[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_uniforms];
  swift_beginAccess();
  *((_DWORD *)v31 + 85) = 0x40000000;
  v32 = &v27[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis];
  swift_beginAccess();
  *(_DWORD *)(*(_QWORD *)v32 + 64) = 1065353216;
  sub_2413F31BC();
  LOBYTE(v32) = *(_QWORD *)(*(_QWORD *)v30 + 96) != 0;
  v33 = v24;
  sub_2413F2548(v24, (char)v32);

  sub_2413F44FC(v23, v22, v21);
  v34 = (void *)objc_opt_self();
  v35 = &v27[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_framebufferPixelFormat];
  result = swift_beginAccess();
  v37 = v21 * v23;
  if (v21 * v23 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v37 >= 9.22337204e18)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if ((*(_QWORD *)&v37 & 0x7FF0000000000000) == 0x7FF0000000000000)
    goto LABEL_34;
  v38 = *(double *)(v0 + 312) * *(double *)(v0 + 304);
  if ((*(_QWORD *)&v38 & 0x7FF0000000000000) == 0x7FF0000000000000)
    goto LABEL_34;
  if (v38 <= -9.22337204e18)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v38 >= 9.22337204e18)
  {
LABEL_36:
    __break(1u);
    return result;
  }
  v39 = objc_msgSend(v34, sel_texture2DDescriptorWithPixelFormat_width_height_mipmapped_, *(_QWORD *)v35, (uint64_t)v37, (uint64_t)v38, 0);
  *(_QWORD *)(v0 + 416) = v39;
  objc_msgSend(v39, sel_setStorageMode_, 0);
  objc_msgSend(v39, sel_setUsage_, 7);
  v40 = objc_msgSend(*(id *)&v27[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_context], sel_newTextureWithDescriptor_, v39);
  *(_QWORD *)(v0 + 424) = v40;
  if (!v40)
  {
    sub_2413F8688();
    swift_allocError();
    *v58 = 5;
    swift_willThrow();

    sub_2413F86CC(v15, v16, v17, v18);
    v59 = sub_2414B2C2C();
    sub_2414B2C5C();
    v60 = sub_2414B5254();
    if ((sub_2414B5398() & 1) != 0)
    {
      v61 = *(_QWORD *)(v0 + 192);
      v62 = *(_QWORD *)(v0 + 160);
      v63 = *(_QWORD *)(v0 + 168);
      swift_retain();
      sub_2414B2C80();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v63 + 88))(v61, v62) == *MEMORY[0x24BEE7810])
      {
        v64 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 160));
        v64 = "";
      }
      v74 = *(_QWORD *)(v0 + 272);
      v75 = *(_QWORD *)(v0 + 248);
      v76 = *(_QWORD *)(v0 + 216);
      v80(v74, v75, v76);
      v77 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v77 = 0;
      v78 = sub_2414B2BFC();
      _os_signpost_emit_with_name_impl(&dword_2412C1000, v59, v60, v78, "Backdrop Snapshot Generation", v64, v77, 2u);
      MEMORY[0x242695BD8](v77, -1, -1);

      v79(v75, v76);
      v79(v74, v76);
    }
    else
    {
      v67 = *(_QWORD *)(v0 + 248);
      v68 = *(_QWORD *)(v0 + 216);

      v79(v67, v68);
    }
LABEL_31:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v41 = v40;
  v42 = objc_allocWithZone(MEMORY[0x24BDDD690]);
  swift_unknownObjectRetain();
  v43 = objc_msgSend(v42, sel_init);
  *(_QWORD *)(v0 + 432) = v43;
  v44 = objc_msgSend(v43, sel_colorAttachments);
  v45 = objc_msgSend(v44, sel_objectAtIndexedSubscript_, 0);
  *(_QWORD *)(v0 + 440) = v45;

  if (!v45)
    return sub_2414B5674();
  v46 = *(void **)(v0 + 328);
  v47 = *(double *)(v0 + 320);
  objc_msgSend(v45, sel_setTexture_, v41);
  objc_msgSend(v45, sel_setLoadAction_, 2);
  objc_msgSend(v45, sel_setClearColor_, 0.0, 0.0, 0.0, 0.0);
  v48 = v47;
  sub_2413F41E0(v46, v48);
  v49 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 448) = v49;
  *v49 = v0;
  v49[1] = sub_2413F5124;
  v49[17] = v43;
  v49[18] = v27;
  return swift_task_switch();
}

uint64_t sub_2413F5124()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 456) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2413F5188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  void *v3;
  id v4;
  CGColorSpaceRef DeviceRGB;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  os_signpost_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  _QWORD *v27;
  NSObject *v28;
  os_signpost_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  const char *v33;
  _QWORD *v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint8_t *v41;
  os_signpost_id_t v42;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint8_t *v48;
  os_signpost_id_t v49;
  uint64_t v50;
  void *v51;
  id v52;

  v1 = *(_QWORD *)(v0 + 424);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254384418);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2414B72B0;
  v3 = (void *)*MEMORY[0x24BDBF8E8];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDBF8E8];
  v4 = v3;
  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  type metadata accessor for CGColorSpace(0);
  *(_QWORD *)(inited + 64) = v6;
  *(_QWORD *)(inited + 40) = DeviceRGB;
  sub_2413124E8(inited);
  v7 = objc_allocWithZone(MEMORY[0x24BDBF660]);
  type metadata accessor for CIImageOption(0);
  sub_2412C8030((unint64_t *)&unk_254384380, (uint64_t (*)(uint64_t))type metadata accessor for CIImageOption, (uint64_t)&unk_2414B7BA4);
  swift_unknownObjectRetain();
  v8 = (void *)sub_2414B4C00();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_initWithMTLTexture_options_, v1, v8);
  swift_unknownObjectRelease();

  v10 = *(void **)(v0 + 416);
  v11 = *(_QWORD *)(v0 + 384);
  v12 = *(void **)(v0 + 392);
  v13 = *(_QWORD *)(v0 + 376);
  if (v9)
  {
    v50 = *(_QWORD *)(v0 + 368);
    v14 = *(void **)(v0 + 408);
    v15 = *(void **)(v0 + 432);
    v16 = *(void **)(v0 + 440);
    v52 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD640]), sel_initWithCIImage_scale_orientation_, v9, 4, *(double *)(v0 + 312));

    swift_unknownObjectRelease_n();
    sub_2413F86CC(v50, v13, v11, v12);
    v17 = sub_2414B2C2C();
    sub_2414B2C5C();
    v18 = sub_2414B5254();
    if ((sub_2414B5398() & 1) != 0)
    {
      v19 = *(_QWORD *)(v0 + 208);
      v20 = *(_QWORD *)(v0 + 160);
      v21 = *(_QWORD *)(v0 + 168);
      swift_retain();
      sub_2414B2C80();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v21 + 88))(v19, v20) == *MEMORY[0x24BEE7810])
      {
        v22 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 160));
        v22 = "";
      }
      v38 = *(void (**)(uint64_t, uint64_t))(v0 + 360);
      v34 = (_QWORD *)(v0 + 272);
      v39 = *(_QWORD *)(v0 + 264);
      v40 = *(_QWORD *)(v0 + 216);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 344))(*(_QWORD *)(v0 + 272), v39, v40);
      v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v41 = 0;
      v42 = sub_2414B2BFC();
      _os_signpost_emit_with_name_impl(&dword_2412C1000, v17, v18, v42, "Backdrop Snapshot Generation", v22, v41, 2u);
      MEMORY[0x242695BD8](v41, -1, -1);

      v38(v39, v40);
    }
    else
    {
      v34 = (_QWORD *)(v0 + 264);

    }
    (*(void (**)(_QWORD, _QWORD))(v0 + 360))(*v34, *(_QWORD *)(v0 + 216));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(id))(v0 + 8))(v52);
  }
  else
  {
    v51 = *(void **)(v0 + 392);
    v23 = *(void **)(v0 + 408);
    v24 = *(_QWORD *)(v0 + 368);
    v25 = *(void **)(v0 + 432);
    v26 = *(void **)(v0 + 440);
    sub_2413F8688();
    swift_allocError();
    *v27 = 6;
    swift_willThrow();

    swift_unknownObjectRelease_n();
    sub_2413F86CC(v24, v13, v11, v51);
    v28 = sub_2414B2C2C();
    sub_2414B2C5C();
    v29 = sub_2414B5254();
    if ((sub_2414B5398() & 1) != 0)
    {
      v30 = *(_QWORD *)(v0 + 200);
      v31 = *(_QWORD *)(v0 + 160);
      v32 = *(_QWORD *)(v0 + 168);
      swift_retain();
      sub_2414B2C80();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v32 + 88))(v30, v31) == *MEMORY[0x24BEE7810])
      {
        v33 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 160));
        v33 = "";
      }
      v44 = *(void (**)(uint64_t, uint64_t))(v0 + 360);
      v45 = *(_QWORD *)(v0 + 272);
      v46 = *(_QWORD *)(v0 + 256);
      v47 = *(_QWORD *)(v0 + 216);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 344))(v45, v46, v47);
      v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v48 = 0;
      v49 = sub_2414B2BFC();
      _os_signpost_emit_with_name_impl(&dword_2412C1000, v28, v29, v49, "Backdrop Snapshot Generation", v33, v48, 2u);
      MEMORY[0x242695BD8](v48, -1, -1);

      v44(v46, v47);
      v44(v45, v47);
    }
    else
    {
      v35 = *(void (**)(uint64_t, uint64_t))(v0 + 360);
      v36 = *(_QWORD *)(v0 + 256);
      v37 = *(_QWORD *)(v0 + 216);

      v35(v36, v37);
    }
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2413F57CC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_signpost_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  os_signpost_id_t v22;

  v1 = *(void **)(v0 + 432);
  v2 = *(void **)(v0 + 416);
  v3 = *(void **)(v0 + 408);
  v5 = *(_QWORD *)(v0 + 384);
  v4 = *(void **)(v0 + 392);
  v7 = *(_QWORD *)(v0 + 368);
  v6 = *(_QWORD *)(v0 + 376);

  swift_unknownObjectRelease_n();
  sub_2413F86CC(v7, v6, v5, v4);
  v8 = sub_2414B2C2C();
  sub_2414B2C5C();
  v9 = sub_2414B5254();
  if ((sub_2414B5398() & 1) != 0)
  {
    v11 = *(_QWORD *)(v0 + 168);
    v10 = *(_QWORD *)(v0 + 176);
    v12 = *(_QWORD *)(v0 + 160);
    swift_retain();
    sub_2414B2C80();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v11 + 88))(v10, v12) == *MEMORY[0x24BEE7810])
    {
      v13 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
      v13 = "";
    }
    v17 = *(void (**)(uint64_t, uint64_t))(v0 + 360);
    v18 = *(_QWORD *)(v0 + 272);
    v19 = *(_QWORD *)(v0 + 232);
    v20 = *(_QWORD *)(v0 + 216);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 344))(v18, v19, v20);
    v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v21 = 0;
    v22 = sub_2414B2BFC();
    _os_signpost_emit_with_name_impl(&dword_2412C1000, v8, v9, v22, "Backdrop Snapshot Generation", v13, v21, 2u);
    MEMORY[0x242695BD8](v21, -1, -1);

    v17(v19, v20);
    v17(v18, v20);
  }
  else
  {
    v14 = *(void (**)(uint64_t, uint64_t))(v0 + 360);
    v15 = *(_QWORD *)(v0 + 232);
    v16 = *(_QWORD *)(v0 + 216);

    v14(v15, v16);
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2413F5A50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 136) = a1;
  *(_QWORD *)(v2 + 144) = v1;
  return swift_task_switch();
}

uint64_t sub_2413F5A68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v13;
  _QWORD *v14;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 144) + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_context + 8);
  *(_QWORD *)(v0 + 128) = &unk_25715BC30;
  *(_QWORD *)(v0 + 152) = v1;
  v2 = swift_dynamicCastObjCProtocolConditional();
  if (v2)
  {
    v3 = (void *)v2;
    swift_unknownObjectRetain();
    objc_msgSend(v3, sel_setBackgroundGPUPriority_, 2);
    v4 = objc_msgSend(v3, sel_commandBuffer);
    *(_QWORD *)(v0 + 160) = v4;
    if (v4)
    {
      v5 = v4;
      v7 = *(void **)(v0 + 136);
      v6 = *(_QWORD *)(v0 + 144);
      v8 = v6 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers;
      v9 = *(_QWORD *)(v6 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers);
      v10 = v6 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_uniforms;
      swift_beginAccess();
      sub_2413F7490(v5, v10);
      swift_endAccess();
      v11 = *(_QWORD *)(v8 + 8);
      *(_QWORD *)(v11 + 152) = *(_QWORD *)(v9 + 40);
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      swift_beginAccess();
      sub_2413F7A78(v5, v10);
      swift_endAccess();
      *(_QWORD *)(*(_QWORD *)(v8 + 16) + 32) = *(_QWORD *)(v11 + 168);
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      swift_beginAccess();
      sub_2413F63CC(v5, v10, v7);
      swift_endAccess();
      return swift_task_switch();
    }
    sub_2413F8688();
    swift_allocError();
    *v14 = 1;
    swift_willThrow();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_2413F8688();
    swift_allocError();
    *v13 = 3;
    swift_willThrow();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2413F5C9C()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v1 = v0;
  v2 = (void *)v0[20];
  v1[2] = v1;
  v1[3] = sub_2413F5D84;
  v3 = swift_continuation_init();
  v4 = swift_allocObject();
  v1[10] = MEMORY[0x24BDAC760];
  v1 += 10;
  *(_QWORD *)(v4 + 16) = v3;
  v1[4] = sub_2413F93D8;
  v1[5] = v4;
  v1[1] = 1107296256;
  v1[2] = sub_2413E35D4;
  v1[3] = &block_descriptor_15;
  v5 = _Block_copy(v1);
  swift_release();
  objc_msgSend(v2, sel_addCompletedHandler_, v5);
  _Block_release(v5);
  objc_msgSend(v2, sel_commit);
  return swift_continuation_await();
}

uint64_t sub_2413F5D84()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 168) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_2413F5DF0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2413F5E2C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2413F5E68()
{
  uint64_t v0;

  v0 = sub_2414B2C44();
  __swift_allocate_value_buffer(v0, qword_25438E8C8);
  __swift_project_value_buffer(v0, (uint64_t)qword_25438E8C8);
  return sub_2414B2C38();
}

Swift::Void __swiftcall Backdrop.CompositeRenderer.mtkView(_:drawableSizeWillChange:)(MTKView *_, CGSize drawableSizeWillChange)
{
  double height;
  double width;
  id v4;
  double v5;
  double v6;

  height = drawableSizeWillChange.height;
  width = drawableSizeWillChange.width;
  v4 = -[MTKView traitCollection](_, sel_traitCollection);
  objc_msgSend(v4, sel_displayScale);
  v6 = v5;

  sub_2413F44FC(width, height, v6);
}

Swift::Void __swiftcall Backdrop.CompositeRenderer.draw(in:)(MTKView *in)
{
  uint64_t v1;
  _BYTE *v3;
  id v4;
  void *v5;
  unsigned int v6;
  float v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  MTLRenderPassDescriptor *v15;
  id v16;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_isPaused);
  swift_beginAccess();
  if ((*v3 & 1) == 0)
  {
    v4 = -[MTKView layer](in, sel_layer);
    objc_opt_self();
    v5 = (void *)swift_dynamicCastObjCClass();
    if (v5)
    {
      v6 = objc_msgSend(v5, sel_isDrawableAvailable);

      if (v6)
      {
        v7 = UIAccessibilityIsReduceMotionEnabled() ? 0.0016667 : 0.016667;
        v8 = -[MTKView traitCollection](in, sel_traitCollection);
        sub_2413F41E0(v8, v7);

        v9 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_context + 8), sel_commandBuffer);
        if (v9)
        {
          v10 = v9;
          v11 = v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers;
          v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers);
          v13 = v1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_uniforms;
          swift_beginAccess();
          sub_2413F7490(v10, v13);
          swift_endAccess();
          v14 = *(_QWORD *)(v11 + 8);
          *(_QWORD *)(v14 + 152) = *(_QWORD *)(v12 + 40);
          swift_unknownObjectRetain();
          swift_unknownObjectRelease();
          swift_beginAccess();
          sub_2413F7A78(v10, v13);
          swift_endAccess();
          *(_QWORD *)(*(_QWORD *)(v11 + 16) + 32) = *(_QWORD *)(v14 + 168);
          swift_unknownObjectRetain();
          swift_unknownObjectRelease();
          v15 = -[MTKView currentRenderPassDescriptor](in, sel_currentRenderPassDescriptor);
          swift_beginAccess();
          sub_2413F63CC(v10, v13, v15);
          swift_endAccess();

          v16 = -[MTKView currentDrawable](in, sel_currentDrawable);
          if (v16)
          {
            objc_msgSend(v10, sel_presentDrawable_, v16);
            swift_unknownObjectRelease();
          }
          objc_msgSend(v10, sel_commit);
          swift_unknownObjectRelease();
        }
      }
    }
    else
    {

    }
  }
}

uint64_t sub_2413F62C0(uint64_t a1, char a2)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(void **)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(v2 + 16) = 80;
  *(_QWORD *)(v2 + 32) = 0;
  *(_BYTE *)(v2 + 104) = 0;
  *(_QWORD *)(v2 + 160) = 0;
  *(_QWORD *)(v2 + 168) = 0;
  *(_QWORD *)(v2 + 112) = v4;
  *(_QWORD *)(v2 + 120) = v5;
  *(_QWORD *)(v2 + 128) = v6;
  *(_QWORD *)(v2 + 136) = v7;
  *(_QWORD *)(v2 + 144) = v8;
  *(_BYTE *)(v2 + 152) = v9;
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v10 = v7;
  *(_QWORD *)(v2 + 40) = sub_2413F93E0(1, v4);
  *(_QWORD *)(v2 + 48) = v11;
  *(_QWORD *)(v2 + 56) = v12;
  *(_QWORD *)(v2 + 64) = v13;
  swift_unknownObjectRetain();
  v14 = sub_2413F93E0(0, v4);
  v16 = v15;
  v18 = v17;
  v20 = v19;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_QWORD *)(v2 + 72) = v14;
  *(_QWORD *)(v2 + 80) = v16;
  *(_QWORD *)(v2 + 88) = v18;
  *(_QWORD *)(v2 + 96) = v20;
  *(_BYTE *)(v2 + 24) = a2;
  *(_QWORD *)(v2 + 160) = sub_2413F6798();
  swift_unknownObjectRelease();
  return v2;
}

void sub_2413F63CC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  id v17;

  v4 = *(_QWORD *)(v3 + 160);
  if (v4)
  {
    v5 = 88;
    if (*(_BYTE *)(v3 + 104))
      v5 = 56;
    v6 = *(_QWORD *)(v3 + v5);
    if (v6)
    {
      v7 = 96;
      if (*(_BYTE *)(v3 + 104))
        v7 = 64;
      v8 = *(_QWORD *)(v3 + v7);
      if (v8)
      {
        v9 = *(_QWORD *)(v3 + 32);
        if (v9)
        {
          if (a3)
          {
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            v17 = a3;
            v13 = objc_msgSend(a1, sel_renderCommandEncoderWithDescriptor_);
            if (v13)
            {
              v14 = v13;
              v15 = (void *)sub_2414B4D44();
              objc_msgSend(v14, sel_setLabel_, v15);

              objc_msgSend(v14, sel_setRenderPipelineState_, v4);
              objc_msgSend(v14, sel_setVertexBuffer_offset_atIndex_, v6, 0, 0);
              objc_msgSend(v14, sel_setVertexBytes_length_atIndex_, a2, 368, 1);
              objc_msgSend(v14, sel_setFragmentBytes_length_atIndex_, a2, 368, 1);
              objc_msgSend(v14, sel_setFragmentTexture_atIndex_, v9, 0);
              v16 = 80;
              if (*(_BYTE *)(v3 + 104))
                v16 = 48;
              objc_msgSend(v14, sel_drawIndexedPrimitives_indexCount_indexType_indexBuffer_indexBufferOffset_instanceCount_, 3, *(_QWORD *)(*(_QWORD *)(v3 + v16) + 16), 0, v8, 0, 1);
              objc_msgSend(v14, sel_endEncoding);
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();

              swift_unknownObjectRelease();
            }
            else
            {
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();

            }
          }
        }
      }
    }
  }
}

id sub_2413F6634()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v9;

  v1 = *(void **)(v0 + 168);
  if (v1)
  {
    v2 = *(id *)(v0 + 168);
  }
  else
  {
    v3 = v0;
    v9 = *(void **)(v0 + 136);
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    v4 = v9;
    v5 = sub_241470728();

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    v6 = *(void **)(v3 + 168);
    *(_QWORD *)(v3 + 168) = v5;
    v2 = v5;

    v1 = 0;
  }
  v7 = v1;
  return v2;
}

id sub_2413F6798()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  unint64_t v14;
  id v16;
  unint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v1 = sub_2413F6634();
  if (qword_2543848E8 != -1)
    swift_once();
  objc_msgSend(v1, sel_setVertexDescriptor_, qword_25438E9F0);
  v2 = objc_msgSend(v1, sel_colorAttachments);
  v3 = objc_msgSend(v2, sel_objectAtIndexedSubscript_, 0);

  if (!v3)
  {
    sub_2414B51A0();
    sub_2412CC884(0, (unint64_t *)&qword_2543846A0);
    v7 = (void *)sub_2414B53A4();
    sub_2414B2BD8();

    return 0;
  }
  objc_msgSend(v3, sel_setPixelFormat_, *(_QWORD *)(v0 + 16));
  v4 = *(void **)(v0 + 112);
  v16 = 0;
  v5 = objc_msgSend(v4, sel_newRenderPipelineStateWithDescriptor_error_, v1, &v16);
  v6 = v16;
  if (!v5)
  {
    v8 = v6;
    v9 = (void *)sub_2414B29D4();

    swift_willThrow();
    v19 = v9;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254382990);
    sub_2412CC884(0, (unint64_t *)&qword_257127320);
    swift_dynamicCast();
    v10 = v18;
    __swift_instantiateConcreteTypeFromMangledName(qword_254384428);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_2414B72B0;
    v16 = 0;
    v17 = 0xE000000000000000;
    sub_2414B5578();
    swift_bridgeObjectRelease();
    v16 = (id)0xD00000000000001FLL;
    v17 = 0x80000002414D3170;
    v12 = objc_msgSend(v10, sel_description);
    sub_2414B4D68();

    sub_2414B4DF8();
    swift_bridgeObjectRelease();
    v13 = v16;
    v14 = v17;
    *(_QWORD *)(v11 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v11 + 32) = v13;
    *(_QWORD *)(v11 + 40) = v14;
    sub_2414B58B4();

    swift_bridgeObjectRelease();
    return 0;
  }

  return v5;
}

uint64_t sub_2413F6A88()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return v0;
}

uint64_t sub_2413F6B30()
{
  sub_2413F6A88();
  return swift_deallocClassInstance();
}

_QWORD *sub_2413F6B50(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  __int128 v12;
  __int128 v13;

  v12 = a1[1];
  v13 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = *((_BYTE *)a1 + 40);
  *(_QWORD *)(v1 + 16) = 115;
  *(int64x2_t *)(v1 + 24) = vdupq_n_s64(0x4060000000000000uLL);
  *(_QWORD *)(v1 + 40) = 0;
  *(_QWORD *)(v1 + 96) = 0;
  *(_BYTE *)(v1 + 104) = 0;
  *(_QWORD *)(v1 + 112) = 0;
  if (qword_2543848F0 != -1)
    swift_once();
  *(_QWORD *)(v1 + 120) = qword_25438EA00;
  v4 = qword_2543848D8;
  result = (_QWORD *)swift_bridgeObjectRetain();
  if (v4 != -1)
  {
    swift_once();
    result = *(_QWORD **)(v1 + 120);
  }
  v6 = qword_25438E9E8;
  *(_QWORD *)(v1 + 128) = qword_25438E9E8;
  *(_QWORD *)(v1 + 160) = 0;
  *(_QWORD *)(v1 + 168) = 0;
  *(_QWORD *)(v1 + 152) = 0;
  *(_OWORD *)(v1 + 48) = v13;
  *(_OWORD *)(v1 + 64) = v12;
  *(_QWORD *)(v1 + 80) = v2;
  *(_BYTE *)(v1 + 88) = v3;
  v7 = result[2];
  if (v7 >> 57)
  {
    __break(1u);
  }
  else
  {
    v8 = v7 << 6;
    v9 = (char *)(result + 4);
    swift_bridgeObjectRetain();
    result = objc_msgSend((id)v13, sel_newBufferWithBytes_length_options_, v9, v8, 0);
    *(_QWORD *)(v1 + 136) = result;
    v10 = *(_QWORD *)(v6 + 16);
    if (v10 + 0x4000000000000000 >= 0)
    {
      *(_QWORD *)(v1 + 144) = objc_msgSend((id)v13, sel_newBufferWithBytes_length_options_, v6 + 32, 2 * v10, 0);
      *(_QWORD *)(v1 + 160) = sub_2413F6F90();
      swift_unknownObjectRelease();
      v11 = (void *)swift_unknownObjectRetain();
      sub_2413F7310(v11);
      swift_unknownObjectRelease();
      return (_QWORD *)v1;
    }
  }
  __break(1u);
  return result;
}

id sub_2413F6CE8()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 152);
  if (v1)
  {
    v2 = *(id *)(v0 + 152);
  }
  else
  {
    v3 = (void *)sub_2413F6D3C();
    v4 = *(void **)(v0 + 152);
    *(_QWORD *)(v0 + 152) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

uint64_t sub_2413F6D3C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t result;
  id v8;

  v1 = v0;
  v2 = *(void **)(v0 + 72);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v3 = v2;
  v4 = sub_241470728();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v5 = objc_msgSend(v4, sel_colorAttachments);
  v6 = objc_msgSend(v5, sel_objectAtIndexedSubscript_, 0);

  if (v6)
  {
    objc_msgSend(v6, sel_setPixelFormat_, *(_QWORD *)(v1 + 16));
    if (qword_2543848E8 != -1)
      swift_once();
    objc_msgSend(v4, sel_setVertexDescriptor_, qword_25438E9F0);

    return (uint64_t)v4;
  }
  else
  {
    sub_2414B5578();
    sub_2414B4DF8();
    v8 = objc_msgSend(v4, sel_description);
    sub_2414B4D68();

    sub_2414B4DF8();
    swift_bridgeObjectRelease();
    result = sub_2414B5674();
    __break(1u);
  }
  return result;
}

id sub_2413F6F90()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  unint64_t v11;
  id v13;
  unint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0 + 48);
  v2 = sub_2413F6CE8();
  v13 = 0;
  v3 = objc_msgSend(v1, sel_newRenderPipelineStateWithDescriptor_error_, v2, &v13);

  v4 = v13;
  if (!v3)
  {
    v5 = v4;
    v6 = (void *)sub_2414B29D4();

    swift_willThrow();
    v16 = v6;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254382990);
    sub_2412CC884(0, (unint64_t *)&qword_257127320);
    swift_dynamicCast();
    v7 = v15;
    __swift_instantiateConcreteTypeFromMangledName(qword_254384428);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_2414B72B0;
    v13 = 0;
    v14 = 0xE000000000000000;
    sub_2414B5578();
    swift_bridgeObjectRelease();
    v13 = (id)0xD00000000000001FLL;
    v14 = 0x80000002414D3170;
    v9 = objc_msgSend(v7, sel_description);
    sub_2414B4D68();

    sub_2414B4DF8();
    swift_bridgeObjectRelease();
    v10 = v13;
    v11 = v14;
    *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v8 + 32) = v10;
    *(_QWORD *)(v8 + 40) = v11;
    sub_2414B58B4();

    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t sub_2413F7174()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  uint64_t result;
  id v5;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDD690]), sel_init);
  v2 = objc_msgSend(v1, sel_colorAttachments);
  v3 = objc_msgSend(v2, sel_objectAtIndexedSubscript_, 0);

  if (v3)
  {
    objc_msgSend(v3, sel_setTexture_, *(_QWORD *)(v0 + 40));
    objc_msgSend(v3, sel_setLoadAction_, 2);
    objc_msgSend(v3, sel_setStoreAction_, 1);
    objc_msgSend(v3, sel_setClearColor_, 0.0, 0.0, 0.0, 0.0);

    return (uint64_t)v1;
  }
  else
  {
    sub_2414B5578();
    sub_2414B4DF8();
    v5 = objc_msgSend(v1, sel_description);
    sub_2414B4D68();

    sub_2414B4DF8();
    swift_bridgeObjectRelease();
    result = sub_2414B5674();
    __break(1u);
  }
  return result;
}

void sub_2413F7310(void *a1)
{
  uint64_t v1;
  double v2;
  double v3;
  id v6;
  uint64_t v7;
  void *v8;

  v2 = *(double *)(v1 + 24);
  if (v2 > 0.0)
  {
    v3 = *(double *)(v1 + 32);
    if (v3 > 0.0)
    {
      if (v2 <= -9.22337204e18)
      {
        __break(1u);
      }
      else if (v2 < 9.22337204e18)
      {
        if ((*(_QWORD *)&v2 & 0x7FF0000000000000) != 0x7FF0000000000000
          && (*(_QWORD *)&v3 & 0x7FF0000000000000) != 0x7FF0000000000000)
        {
          if (v3 > -9.22337204e18)
          {
            if (v3 < 9.22337204e18)
            {
              v6 = objc_msgSend((id)objc_opt_self(), sel_texture2DDescriptorWithPixelFormat_width_height_mipmapped_, *(_QWORD *)(v1 + 16), (uint64_t)v2, (uint64_t)v3, 0);
              objc_msgSend(v6, sel_setStorageMode_, 0);
              objc_msgSend(v6, sel_setUsage_, 7);
              *(_QWORD *)(v1 + 40) = objc_msgSend(a1, sel_newTextureWithDescriptor_, v6);
              swift_unknownObjectRelease();
              *(_QWORD *)(v1 + 112) = objc_msgSend(a1, sel_newTextureWithDescriptor_, v6);
              swift_unknownObjectRelease();
              v7 = sub_2413F7174();

              v8 = *(void **)(v1 + 168);
              *(_QWORD *)(v1 + 168) = v7;

              return;
            }
            goto LABEL_17;
          }
LABEL_16:
          __break(1u);
LABEL_17:
          __break(1u);
          return;
        }
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
      __break(1u);
      goto LABEL_15;
    }
  }
}

void sub_2413F7490(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;

  v3 = *(_QWORD *)(v2 + 160);
  if (!v3 || (v4 = *(_QWORD *)(v2 + 136)) == 0 || (v5 = *(_QWORD *)(v2 + 144)) == 0 || (v6 = *(_QWORD *)(v2 + 96)) == 0)
  {
    sub_2414B5188();
    sub_2412CC884(0, (unint64_t *)&qword_2543846A0);
    v16 = (id)sub_2414B53A4();
    sub_2414B2BD8();
LABEL_11:

    return;
  }
  if (*(_BYTE *)(v2 + 104) == 1 && (v9 = *(_QWORD *)(v2 + 40)) != 0 && (v10 = *(_QWORD *)(v2 + 112)) != 0)
  {
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    v11 = objc_msgSend(a1, sel_blitCommandEncoder);
    if (v11)
    {
      v12 = v11;
      objc_msgSend(v11, sel_copyFromTexture_toTexture_, v9, v10);
      *(_BYTE *)(v2 + 104) = 0;
      objc_msgSend(v12, sel_endEncoding);
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    if (!*(_QWORD *)(v2 + 168))
      goto LABEL_17;
  }
  else
  {
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    if (!*(_QWORD *)(v2 + 168))
      goto LABEL_17;
  }
  v13 = objc_msgSend(a1, sel_renderCommandEncoderWithDescriptor_);
  if (!v13)
  {
LABEL_17:
    sub_2414B51A0();
    sub_2412CC884(0, (unint64_t *)&qword_2543846A0);
    v16 = (id)sub_2414B53A4();
    sub_2414B2BD8();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_11;
  }
  v14 = v13;
  v15 = (void *)sub_2414B4D44();
  objc_msgSend(v14, sel_setLabel_, v15);

  objc_msgSend(v14, sel_setRenderPipelineState_, v3);
  objc_msgSend(v14, sel_setVertexBuffer_offset_atIndex_, v4, 0, 0);
  objc_msgSend(v14, sel_setVertexBytes_length_atIndex_, a2, 368, 1);
  objc_msgSend(v14, sel_setFragmentTexture_atIndex_, v6, 0);
  objc_msgSend(v14, sel_setFragmentTexture_atIndex_, *(_QWORD *)(v2 + 112), 1);
  objc_msgSend(v14, sel_setFragmentBytes_length_atIndex_, a2, 368, 1);
  objc_msgSend(v14, sel_drawIndexedPrimitives_indexCount_indexType_indexBuffer_indexBufferOffset_instanceCount_, 3, *(_QWORD *)(*(_QWORD *)(v2 + 128) + 16), 0, v5, 0, 1);
  objc_msgSend(v14, sel_endEncoding);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
}

id *sub_2413F7834()
{
  id *v0;

  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_2413F78CC()
{
  sub_2413F7834();
  return swift_deallocClassInstance();
}

uint64_t sub_2413F78EC(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_OWORD *)(v1 + 152) = 0u;
  *(_OWORD *)(v1 + 168) = 0u;
  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 56) = *(_OWORD *)a1;
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(v1 + 16) = 115;
  *(_DWORD *)(v1 + 24) = 1117782016;
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = 0;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_OWORD *)(v1 + 72) = v2;
  *(_QWORD *)(v1 + 88) = v3;
  *(_BYTE *)(v1 + 96) = v4;
  if (qword_2543848F0 != -1)
    swift_once();
  *(_QWORD *)(v1 + 104) = qword_25438EA00;
  v5 = qword_2543848D8;
  result = swift_bridgeObjectRetain();
  if (v5 != -1)
  {
    swift_once();
    result = *(_QWORD *)(v1 + 104);
  }
  *(_QWORD *)(v1 + 112) = qword_25438E9E8;
  v7 = *(_QWORD *)(result + 16);
  if (v7 >> 57)
  {
    __break(1u);
  }
  else
  {
    v8 = v7 << 6;
    v9 = *(void **)(v1 + 56);
    v10 = result + 32;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v1 + 120) = objc_msgSend(v9, sel_newBufferWithBytes_length_options_, v10, v8, 0);
    result = swift_unknownObjectRelease();
    v11 = *(_QWORD *)(v1 + 112);
    v12 = *(_QWORD *)(v11 + 16);
    if (v12 + 0x4000000000000000 >= 0)
    {
      *(_QWORD *)(v1 + 128) = objc_msgSend(*(id *)(v1 + 56), sel_newBufferWithBytes_length_options_, v11 + 32, 2 * v12, 0);
      swift_unknownObjectRelease();
      *(_QWORD *)(v1 + 136) = sub_2413F7FA0();
      swift_unknownObjectRelease();
      return v1;
    }
  }
  __break(1u);
  return result;
}

void sub_2413F7A78(void *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;

  v3 = v2[17];
  if (!v3 || (v4 = v2[15]) == 0 || (v5 = v2[16]) == 0 || (v6 = v2[20]) == 0 || (v7 = v2[21]) == 0)
  {
    sub_2414B5188();
    sub_2412CC884(0, (unint64_t *)&qword_2543846A0);
    v16 = (id)sub_2414B53A4();
    sub_2414B2BD8();
LABEL_12:

    return;
  }
  v8 = v2[18];
  if (!v8)
  {
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    goto LABEL_14;
  }
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v11 = objc_msgSend(a1, sel_renderCommandEncoderWithDescriptor_, v8);
  if (!v11)
  {
LABEL_14:
    sub_2414B51A0();
    sub_2412CC884(0, (unint64_t *)&qword_2543846A0);
    v16 = (id)sub_2414B53A4();
    sub_2414B2BD8();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_12;
  }
  v12 = v11;
  v13 = (void *)sub_2414B4D44();
  objc_msgSend(v12, sel_setLabel_, v13);

  objc_msgSend(v12, sel_setRenderPipelineState_, v3);
  objc_msgSend(v12, sel_setVertexBuffer_offset_atIndex_, v4, 0, 0);
  objc_msgSend(v12, sel_setVertexBytes_length_atIndex_, a2, 368, 1);
  objc_msgSend(v12, sel_setFragmentBytes_length_atIndex_, a2, 368, 1);
  objc_msgSend(v12, sel_setFragmentTexture_atIndex_, v2[19], 0);
  objc_msgSend(v12, sel_drawIndexedPrimitives_indexCount_indexType_indexBuffer_indexBufferOffset_instanceCount_, 3, *(_QWORD *)(v2[14] + 16), 0, v5, 0, 3);
  objc_msgSend(v12, sel_endEncoding);
  v14 = (void *)v2[22];
  if (v14)
  {
    v15 = v14;
    objc_msgSend(v15, sel_encodeToCommandBuffer_sourceTexture_destinationTexture_, a1, v6, v7);

  }
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
}

uint64_t sub_2413F7DB0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t result;
  void *v7;

  v1 = v0;
  v7 = *(void **)(v0 + 80);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v2 = v7;
  v3 = sub_241470728();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v4 = objc_msgSend(v3, sel_colorAttachments);
  v5 = objc_msgSend(v4, sel_objectAtIndexedSubscript_, 0);

  if (v5)
  {
    objc_msgSend(v5, sel_setPixelFormat_, *(_QWORD *)(v1 + 16));
    objc_msgSend(v5, sel_setBlendingEnabled_, 0);
    if (qword_2543848E8 != -1)
      swift_once();
    objc_msgSend(v3, sel_setVertexDescriptor_, qword_25438E9F0);

    return (uint64_t)v3;
  }
  else
  {
    result = sub_2414B5674();
    __break(1u);
  }
  return result;
}

id sub_2413F7FA0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  unint64_t v11;
  id v13;
  unint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0 + 56);
  v2 = (void *)sub_2413F7DB0();
  v13 = 0;
  v3 = objc_msgSend(v1, sel_newRenderPipelineStateWithDescriptor_error_, v2, &v13);

  v4 = v13;
  if (!v3)
  {
    v5 = v4;
    v6 = (void *)sub_2414B29D4();

    swift_willThrow();
    v16 = v6;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254382990);
    sub_2412CC884(0, (unint64_t *)&qword_257127320);
    swift_dynamicCast();
    v7 = v15;
    __swift_instantiateConcreteTypeFromMangledName(qword_254384428);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_2414B72B0;
    v13 = 0;
    v14 = 0xE000000000000000;
    sub_2414B5578();
    swift_bridgeObjectRelease();
    v13 = (id)0xD00000000000001FLL;
    v14 = 0x80000002414D3170;
    v9 = objc_msgSend(v7, sel_description);
    sub_2414B4D68();

    sub_2414B4DF8();
    swift_bridgeObjectRelease();
    v10 = v13;
    v11 = v14;
    *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v8 + 32) = v10;
    *(_QWORD *)(v8 + 40) = v11;
    sub_2414B58B4();

    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t sub_2413F8184()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  uint64_t result;
  id v5;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDD690]), sel_init);
  v2 = objc_msgSend(v1, sel_colorAttachments);
  v3 = objc_msgSend(v2, sel_objectAtIndexedSubscript_, 0);

  if (v3)
  {
    objc_msgSend(v3, sel_setTexture_, *(_QWORD *)(v0 + 160));
    objc_msgSend(v3, sel_setLoadAction_, 2);
    objc_msgSend(v3, sel_setClearColor_, 0.0, 0.0, 0.0, 0.0);

    return (uint64_t)v1;
  }
  else
  {
    sub_2414B5578();
    sub_2414B4DF8();
    v5 = objc_msgSend(v1, sel_description);
    sub_2414B4D68();

    sub_2414B4DF8();
    swift_bridgeObjectRelease();
    result = sub_2414B5674();
    __break(1u);
  }
  return result;
}

void sub_2413F830C(void *a1)
{
  uint64_t v1;
  double v2;
  double v3;
  id v6;
  uint64_t v7;
  void *v8;

  v2 = *(double *)(v1 + 32);
  if (v2 <= 0.0 || (v3 = *(double *)(v1 + 40), v3 <= 0.0))
  {
    *(_QWORD *)(v1 + 160) = 0;
    swift_unknownObjectRelease();
    *(_QWORD *)(v1 + 168) = 0;
    swift_unknownObjectRelease();
    return;
  }
  if (v2 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v2 >= 9.22337204e18)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if ((*(_QWORD *)&v2 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&v3 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_15;
  }
  if (v3 > -9.22337204e18)
  {
    if (v3 < 9.22337204e18)
    {
      v6 = objc_msgSend((id)objc_opt_self(), sel_texture2DDescriptorWithPixelFormat_width_height_mipmapped_, *(_QWORD *)(v1 + 16), (uint64_t)v2 / 4, (uint64_t)v3 / 4, 0);
      objc_msgSend(v6, sel_setStorageMode_, 0);
      objc_msgSend(v6, sel_setUsage_, 7);
      *(_QWORD *)(v1 + 160) = objc_msgSend(a1, sel_newTextureWithDescriptor_, v6);
      swift_unknownObjectRelease();
      *(_QWORD *)(v1 + 168) = objc_msgSend(a1, sel_newTextureWithDescriptor_, v6);
      swift_unknownObjectRelease();
      v7 = sub_2413F8184();

      v8 = *(void **)(v1 + 144);
      *(_QWORD *)(v1 + 144) = v7;

      return;
    }
    goto LABEL_17;
  }
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
}

void sub_2413F84C0()
{
  uint64_t v0;
  float v1;
  float v2;
  void *v3;
  float v4;
  uint64_t v5;
  id v6;
  double v7;
  id v8;
  void *v9;

  v1 = *(double *)(v0 + 48);
  v2 = *(float *)(v0 + 24) / (float)(4.0 / v1);
  v3 = *(void **)(v0 + 176);
  if (!v3 || (objc_msgSend(v3, sel_sigma), v2 != v4))
  {
    v5 = *(_QWORD *)(v0 + 56);
    v6 = objc_allocWithZone(MEMORY[0x24BDDE3C8]);
    *(float *)&v7 = v2;
    v8 = objc_msgSend(v6, sel_initWithDevice_sigma_, v5, v7);
    v9 = *(void **)(v0 + 176);
    *(_QWORD *)(v0 + 176) = v8;

  }
}

id *sub_2413F8550()
{
  id *v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return v0;
}

uint64_t sub_2413F85E8()
{
  sub_2413F8550();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Backdrop.TextureBlender()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for Backdrop.RotatingArtworkRenderer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for Backdrop.PinchRenderer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for Backdrop.CompositeRenderer()
{
  return objc_opt_self();
}

unint64_t sub_2413F8688()
{
  unint64_t result;

  result = qword_2571279A8;
  if (!qword_2571279A8)
  {
    result = MEMORY[0x242695AE8](&unk_2414C4A9C, &type metadata for Backdrop.Error);
    atomic_store(result, &qword_2571279A8);
  }
  return result;
}

void sub_2413F86CC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a1)
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

  }
}

unint64_t sub_2413F871C()
{
  unint64_t result;

  result = qword_2571279B8;
  if (!qword_2571279B8)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for Backdrop.State, &type metadata for Backdrop.State);
    atomic_store(result, (unint64_t *)&qword_2571279B8);
  }
  return result;
}

uint64_t sub_2413F8760@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_observer;
  swift_beginAccess();
  result = MEMORY[0x242695CC8](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_2413F87B8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_observer;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_2413F8818@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_3Tm(a1, &OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_state, a2);
}

uint64_t sub_2413F8824(unsigned __int8 *a1)
{
  unsigned __int8 v2;

  v2 = *a1;
  return sub_2413F1CD8(&v2);
}

uint64_t sub_2413F8858@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_framebufferPixelFormat, a2);
}

uint64_t sub_2413F8864(uint64_t *a1)
{
  return sub_2413F1DD0(*a1);
}

uint64_t sub_2413F8888@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_colorPixelFormat, a2);
}

uint64_t keypath_get_5Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  uint64_t result;

  v4 = (_QWORD *)(*a1 + *a2);
  result = swift_beginAccess();
  *a3 = *v4;
  return result;
}

void sub_2413F88E0(uint64_t *a1)
{
  sub_2413F1F6C(*a1);
}

uint64_t sub_2413F8904@<X0>(_QWORD *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis;
  result = swift_beginAccess();
  *a2 = *(float *)(*(_QWORD *)v3 + 64) == 1.0;
  return result;
}

double sub_2413F8964(unsigned __int8 *a1, _QWORD *a2)
{
  int v2;
  uint64_t v3;
  float v4;
  double result;

  v2 = *a1;
  v3 = *a2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis;
  swift_beginAccess();
  v4 = 0.2;
  if (v2)
    v4 = 1.0;
  *(float *)(*(_QWORD *)v3 + 64) = v4;
  *(_QWORD *)&result = sub_2413F31BC().n128_u64[0];
  return result;
}

uint64_t sub_2413F89D8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_3Tm(a1, &OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_isPaused, a2);
}

uint64_t keypath_get_3Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _BYTE *a3@<X8>)
{
  _BYTE *v4;
  uint64_t result;

  v4 = (_BYTE *)(*a1 + *a2);
  result = swift_beginAccess();
  *a3 = *v4;
  return result;
}

uint64_t sub_2413F8A30(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_isPaused);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

id sub_2413F8A7C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *(void **)(*a1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_imageStorage);
  *a2 = v2;
  return v2;
}

id sub_2413F8A98@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;

  v3 = *a1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis;
  swift_beginAccess();
  v4 = *(void **)(*(_QWORD *)v3 + 16);
  *a2 = v4;
  return v4;
}

uint64_t sub_2413F8AF0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis);
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

ValueMetadata *type metadata accessor for Backdrop()
{
  return &type metadata for Backdrop;
}

uint64_t dispatch thunk of BackdropObserver.didChangeState(renderer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t storeEnumTagSinglePayload for Backdrop.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2413F8BAC + 4 * byte_2414C4835[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2413F8BE0 + 4 * byte_2414C4830[v4]))();
}

uint64_t sub_2413F8BE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2413F8BE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2413F8BF0);
  return result;
}

uint64_t sub_2413F8BFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2413F8C04);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2413F8C08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2413F8C10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Backdrop.State()
{
  return &type metadata for Backdrop.State;
}

uint64_t method lookup function for Backdrop.CompositeRenderer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.observer.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.observer.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.observer.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.state.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.framebufferPixelFormat.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x120))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.framebufferPixelFormat.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x128))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.framebufferPixelFormat.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x130))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.colorPixelFormat.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x138))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.colorPixelFormat.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x140))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.colorPixelFormat.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x148))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.isBehindLyrics.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x150))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.isBehindLyrics.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x158))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.isBehindLyrics.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x160))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.isPaused.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x168))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.isPaused.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x170))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.isPaused.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x178))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.preferredFramesPerSecond(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x180))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.image.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.image.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.image.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1D0))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.setImage(_:animated:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1D8))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.setPlaceholderColor(_:animated:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1F8))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.analyzer.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x200))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.analyzer.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x208))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.analyzer.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x210))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.__allocating_init(context:configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 536))();
}

uint64_t dispatch thunk of Backdrop.CompositeRenderer.spectrumAnalysis.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x2F0))();
}

uint64_t destroy for Backdrop.PinchRenderer.MeshModel()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

_QWORD *initializeWithCopy for Backdrop.PinchRenderer.MeshModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for Backdrop.PinchRenderer.MeshModel(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = a2[3];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

_OWORD *assignWithTake for Backdrop.PinchRenderer.MeshModel(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_unknownObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Backdrop.PinchRenderer.MeshModel()
{
  return &type metadata for Backdrop.PinchRenderer.MeshModel;
}

ValueMetadata *type metadata accessor for Backdrop.Specs()
{
  return &type metadata for Backdrop.Specs;
}

uint64_t getEnumTagSinglePayload for Backdrop.Specs.Environment(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[12])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Backdrop.Specs.Environment(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 12) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 12) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for Backdrop.Specs.Environment()
{
  return &type metadata for Backdrop.Specs.Environment;
}

_QWORD *initializeBufferWithCopyOfBuffer for Backdrop.Error(_QWORD *a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  if (((_DWORD)v4 + 1) <= 1)
    v5 = v3;
  *a1 = v3;
  return a1;
}

void destroy for Backdrop.Error(void **a1)
{
  void *v1;
  int v2;

  v1 = *a1;
  v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF)
    v2 = (int)v1;
  if ((v2 + 1) <= 1)

}

void **assignWithCopy for Backdrop.Error(void **a1, void **a2)
{
  void *v3;
  void *v4;
  void *v5;
  unsigned int v6;
  void *v7;
  unsigned int v8;
  id v9;
  id v10;

  v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v5) = -1;
  else
    v5 = *a1;
  v6 = (_DWORD)v5 + 1;
  v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = (_DWORD)v4 + 1;
  if (v6 > 1)
  {
    if (v8 <= 1)
    {
      *a1 = v7;
      v10 = v7;
      return a1;
    }
LABEL_12:
    *a1 = v7;
    return a1;
  }
  if (v8 > 1)
  {

    v7 = *a2;
    goto LABEL_12;
  }
  *a1 = v7;
  v9 = v7;

  return a1;
}

void **assignWithTake for Backdrop.Error(void **a1, void **a2)
{
  void *v3;
  void *v4;
  void *v5;
  unsigned int v6;
  void *v7;
  unsigned int v8;

  v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v5) = -1;
  else
    v5 = *a1;
  v6 = (_DWORD)v5 + 1;
  v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = (_DWORD)v4 + 1;
  if (v6 > 1)
    goto LABEL_11;
  if (v8 > 1)
  {

LABEL_11:
    *a1 = v7;
    return a1;
  }
  *a1 = v7;

  return a1;
}

uint64_t getEnumTagSinglePayload for Backdrop.Error(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFF9 && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483641);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) < 2)
    LODWORD(v3) = 0;
  if (v3 >= 7)
    return (v3 - 6);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Backdrop.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF9)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483641;
    if (a3 >= 0x7FFFFFF9)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFF9)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 6;
  }
  return result;
}

uint64_t sub_2413F9368(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  if ((v1 + 1) >= 2)
    return v1;
  else
    return 0;
}

_QWORD *sub_2413F9388(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Backdrop.Error()
{
  return &type metadata for Backdrop.Error;
}

uint64_t sub_2413F93C8()
{
  return swift_deallocObject();
}

uint64_t sub_2413F93D8()
{
  return swift_continuation_throwingResume();
}

_QWORD *sub_2413F93E0(char a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  _QWORD *result;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_2413D1F00(a1, &v28);
  v2 = v30;
  v3 = v31;
  v4 = *(_QWORD *)(v28 + 16);
  v5 = v28;
  v6 = *(_QWORD *)(v29 + 16);
  v7 = v29;
  sub_2414B4D68();
  v8 = objc_allocWithZone(MEMORY[0x24BDE56F8]);
  v9 = (void *)sub_2414B4D44();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v8, sel_initWithVertexCount_vertices_faceCount_faces_depthNormalization_, v4, v5 + 32, v6, v7 + 32, v9);

  v11 = objc_msgSend(v10, sel_subdividedMesh_, 2);
  v12 = *(_QWORD *)(v2 + 16);
  v13 = *(_QWORD *)(v3 + 16);
  sub_2414B4D68();
  v14 = objc_allocWithZone(MEMORY[0x24BDE56F8]);
  v15 = (void *)sub_2414B4D44();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v14, sel_initWithVertexCount_vertices_faceCount_faces_depthNormalization_, v12, v2 + 32, v13, v3 + 32, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v17 = objc_msgSend(v16, sel_subdividedMesh_, 2);
  result = (_QWORD *)sub_24137E024(v17);
  v20 = result[2];
  if (v20 >> 57)
  {
    __break(1u);
  }
  else
  {
    v21 = result;
    v22 = v19;
    v23 = v20 << 6;
    v24 = (char *)(result + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = objc_msgSend(a2, sel_newBufferWithBytes_length_options_, v24, v23, 0);
    v25 = *(_QWORD *)(v22 + 16);
    if (v25 + 0x4000000000000000 >= 0)
    {
      v26 = 2 * v25;
      swift_unknownObjectRetain();
      objc_msgSend(a2, sel_newBufferWithBytes_length_options_, v22 + 32, v26, 0);

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v21;
    }
  }
  __break(1u);
  return result;
}

double sub_2413F9668()
{
  _OWORD *v0;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254385010);
  v0 = (_OWORD *)swift_allocObject();
  v0[1] = xmmword_2414B8AC0;
  v0[2] = xmmword_2414C47F0;
  v0[3] = xmmword_2414C4800;
  v0[4] = xmmword_2414BDDF0;
  result = 0.0;
  v0[5] = xmmword_2414BDE00;
  v0[6] = xmmword_2414C4810;
  v0[7] = xmmword_2414C4820;
  v0[8] = xmmword_2414BDDF0;
  v0[9] = xmmword_2414BDE00;
  v0[10] = xmmword_2414C4810;
  v0[11] = xmmword_2414C4820;
  v0[12] = xmmword_2414BDDF0;
  v0[13] = xmmword_2414BDE00;
  return result;
}

uint64_t sub_2413F96E4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_2413F9710(uint64_t a1)
{
  uint64_t v1;

  sub_2413F39C8(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40));
}

uint64_t sub_2413F9724()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2413F9748(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_2413F3A90(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_2413F9750()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2413F977C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

uint64_t sub_2413F97B8()
{
  uint64_t v1;

  sub_24135B978();
  sub_2414B3838();
  return v1;
}

uint64_t sub_2413F97F0()
{
  sub_2412E34A8();
  return sub_2414B3340();
}

uint64_t MCUINamespace<A>.motionCacheBucket(id:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))(v10, v3, v6, v8);
  swift_getKeyPath();
  v12[0] = a1;
  v12[1] = a2;
  swift_bridgeObjectRetain();
  sub_2414B41C8();
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))(v10, v3, v6, v8);
  swift_getKeyPath();
  v12[0] = a1;
  v12[1] = a2;
  sub_2414B41C8();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

double sub_2413F992C@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_24135B978();
  sub_2414B3838();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_2413F9978()
{
  sub_24135B978();
  swift_bridgeObjectRetain();
  return sub_2414B3844();
}

uint64_t sub_2413F9AB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381800);
  v2 = sub_2414B3514();
  v4[0] = v1;
  v4[1] = sub_2413F9B10();
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_2413F9B10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2543828A0;
  if (!qword_2543828A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381800);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_2543828A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MotionCacheBucketKey()
{
  return &type metadata for MotionCacheBucketKey;
}

uint64_t sub_2413F9B6C()
{
  return sub_2414B3670();
}

uint64_t sub_2413F9B8C(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_2414B2F44();
  v3 = MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, double))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_2414B367C();
}

uint64_t ContentBelowSliderStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  id v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t *v34;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;

  v37 = a2;
  v4 = type metadata accessor for SpringyViewModifier(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127AF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (double *)((char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127AF8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127B00);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)v2;
  v17 = *(_BYTE *)(v2 + 8);
  v18 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  objc_msgSend(v18, sel_displayScale);
  v20 = v19;

  v21 = 1.0;
  if ((*(_QWORD *)&v20 & 0xFFFFFFFFFFFFFLL) != 0)
    v22 = 1.0;
  else
    v22 = v20;
  if ((~*(_QWORD *)&v20 & 0x7FF0000000000000) != 0)
    v22 = v20;
  if (v20 >= 1.0)
    v21 = v22;
  v23 = 2.0 / v21 + 8.0;
  *(_QWORD *)v9 = sub_2414B3964();
  v9[1] = v23;
  *((_BYTE *)v9 + 16) = 0;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127B08);
  sub_2413F9F74(a1, v16, v17, (uint64_t)v9 + *(int *)(v24 + 44));
  v25 = sub_2414B3C34();
  sub_2413FA934(v25, v26, &qword_257127AF0, &qword_257127AF8, (uint64_t)v12, v27);
  swift_release();
  swift_release();
  sub_2412CBE78((uint64_t)v9, &qword_257127AF0);
  if (qword_254383C50 != -1)
    swift_once();
  v38 = xmmword_254383BE8;
  v39 = unk_254383BF8;
  v40 = xmmword_254383C08;
  v41 = unk_254383C18;
  v42 = xmmword_254383C28;
  v43 = qword_254383C38;
  v44 = unk_254383C40;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2414B4798();
  v28 = v51;
  v29 = v49;
  v30 = v50;
  v31 = v46;
  v32 = v47;
  v33 = v48;
  *(_OWORD *)v6 = v45;
  *((_OWORD *)v6 + 1) = v31;
  *((_OWORD *)v6 + 2) = v32;
  *((_OWORD *)v6 + 3) = v33;
  *((_OWORD *)v6 + 4) = v29;
  *((_OWORD *)v6 + 5) = v30;
  *((_QWORD *)v6 + 12) = v28;
  v34 = (uint64_t *)&v6[*(int *)(v4 + 20)];
  *v34 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
  swift_storeEnumTagMultiPayload();
  sub_2412DC3B8((uint64_t)v6, (uint64_t)&v15[*(int *)(v13 + 36)], type metadata accessor for SpringyViewModifier);
  sub_2412EAEA4((uint64_t)v12, (uint64_t)v15, &qword_257127AF8);
  return sub_2412EAEA4((uint64_t)v15, v37, &qword_257127B00);
}

uint64_t type metadata accessor for SpringyViewModifier(uint64_t a1)
{
  return sub_2412C6CA0(a1, qword_257127C58);
}

uint64_t sub_2413F9F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t result;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;

  v40 = a2;
  v38 = a4;
  v39 = a3 & 1;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122240);
  MEMORY[0x24BDAC7A8](v36);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127CE0);
  MEMORY[0x24BDAC7A8](v35);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127CE8);
  v37 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v35 - v13;
  v15 = (int *)type metadata accessor for CapsuleProgress(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (uint64_t *)((char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v35 - v19;
  sub_2414B3C28();
  v22 = v21;
  *v17 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  swift_storeEnumTagMultiPayload();
  *(uint64_t *)((char *)v17 + v15[5]) = v22;
  v23 = (char *)v17 + v15[6];
  *(_QWORD *)v23 = swift_getKeyPath();
  *(_OWORD *)(v23 + 8) = 0u;
  *(_OWORD *)(v23 + 24) = 0u;
  *(_OWORD *)(v23 + 40) = 0u;
  *(_OWORD *)(v23 + 56) = 0u;
  *(_OWORD *)(v23 + 65) = 0u;
  v24 = (char *)v17 + v15[7];
  *(_QWORD *)v24 = swift_getKeyPath();
  v24[8] = 0;
  sub_2412DC3B8((uint64_t)v17, (uint64_t)v20, type metadata accessor for CapsuleProgress);
  *(_QWORD *)v8 = sub_2414B3880();
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 1;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383E28);
  sub_2413FA35C(v40, v39, a1, (uint64_t)&v8[*(int *)(v25 + 44)]);
  v26 = *MEMORY[0x24BDECF28];
  v27 = sub_2414B346C();
  v28 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v6, v26, v27);
  sub_2412C8030(qword_257122270, v28, MEMORY[0x24BDECF78]);
  result = sub_2414B4CE4();
  if ((result & 1) != 0)
  {
    sub_2412C8FC4(&qword_257127CF0, &qword_257127CE0, MEMORY[0x24BDF4498]);
    sub_2412C8FC4(&qword_257122248, &qword_257122240, MEMORY[0x24BEE30C8]);
    sub_2414B42B8();
    sub_2412CBE78((uint64_t)v6, &qword_257122240);
    sub_2412CBE78((uint64_t)v8, &qword_257127CE0);
    v30 = v37;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v14, v11, v9);
    sub_2412C6A50((uint64_t)v20, (uint64_t)v17, type metadata accessor for CapsuleProgress);
    v31 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
    v31(v11, v14, v9);
    v32 = v38;
    sub_2412C6A50((uint64_t)v17, v38, type metadata accessor for CapsuleProgress);
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127CF8);
    v31((char *)(v32 + *(int *)(v33 + 48)), v11, v9);
    v34 = *(void (**)(char *, uint64_t))(v30 + 8);
    v34(v14, v9);
    sub_2412C68F4((uint64_t)v20, type metadata accessor for CapsuleProgress);
    v34(v11, v9);
    return sub_2412C68F4((uint64_t)v17, type metadata accessor for CapsuleProgress);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2413FA35C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;

  v8 = sub_2414B3BF8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v27 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254384078);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v27 - v19;
  v29 = a1;
  v30 = a2 & 1;
  sub_2413FA528(a3, (uint64_t)&v27 - v19);
  sub_2414B3C10();
  sub_2412DC3FC((uint64_t)v20, (uint64_t)v17, &qword_254384078);
  v28 = 1;
  v21 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v21(v11, v14, v8);
  sub_2412DC3FC((uint64_t)v17, a4, &qword_254384078);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254384080);
  v23 = a4 + *(int *)(v22 + 48);
  v24 = v28;
  *(_QWORD *)v23 = 0;
  *(_BYTE *)(v23 + 8) = v24;
  v21((char *)(a4 + *(int *)(v22 + 64)), v11, v8);
  v25 = *(void (**)(char *, uint64_t))(v9 + 8);
  v25(v14, v8);
  sub_2412CBE78((uint64_t)v20, &qword_254384078);
  v25(v11, v8);
  return sub_2412CBE78((uint64_t)v17, &qword_254384078);
}

uint64_t sub_2413FA528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t KeyPath;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v38 = a1;
  v45 = a2;
  v46 = sub_2414B3C04();
  v41 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v40 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_254384070);
  MEMORY[0x24BDAC7A8](v43);
  v44 = (uint64_t)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2414B2FA4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383E08);
  v36 = *(_QWORD *)(v9 - 8);
  v37 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383E90);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383F68);
  MEMORY[0x24BDAC7A8](v42);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v39 = (uint64_t)&v35 - v18;
  v19 = *(_QWORD *)v2;
  v20 = *(_BYTE *)(v2 + 8);
  sub_2412C7080(v19, v20);
  v21 = sub_2412F9C24(v19, v20);
  sub_2412C821C(v19, v20);
  if ((v21 & 1) != 0)
  {
    sub_2414B30DC();
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BDEB480], v5);
    KeyPath = swift_getKeyPath();
    v23 = (uint64_t *)&v14[*(int *)(v12 + 36)];
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254384158);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v23 + *(int *)(v24 + 28), v8, v5);
    *v23 = KeyPath;
    v26 = v36;
    v25 = v37;
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v14, v11, v37);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v25);
    v27 = sub_2414B4654();
    v28 = swift_getKeyPath();
    sub_2412DC3FC((uint64_t)v14, (uint64_t)v16, &qword_254383E90);
    v29 = (uint64_t *)&v16[*(int *)(v42 + 36)];
    *v29 = v28;
    v29[1] = v27;
    sub_2412CBE78((uint64_t)v14, &qword_254383E90);
    v30 = v39;
    sub_2412EAEA4((uint64_t)v16, v39, &qword_254383F68);
    sub_2412DC3FC(v30, v44, &qword_254383F68);
    swift_storeEnumTagMultiPayload();
    sub_241401310();
    sub_2412C8030(&qword_257127D00, (uint64_t (*)(uint64_t))MEMORY[0x24BDF05D0], MEMORY[0x24BDF05C8]);
    sub_2414B3A84();
    return sub_2412CBE78(v30, &qword_254383F68);
  }
  else
  {
    v32 = v40;
    sub_2414B3C1C();
    v33 = v41;
    v34 = v46;
    (*(void (**)(uint64_t, char *, uint64_t))(v41 + 16))(v44, v32, v46);
    swift_storeEnumTagMultiPayload();
    sub_241401310();
    sub_2412C8030(&qword_257127D00, (uint64_t (*)(uint64_t))MEMORY[0x24BDF05D0], MEMORY[0x24BDF05C8]);
    sub_2414B3A84();
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v32, v34);
  }
}

uint64_t sub_2413FA934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v9 = v6;
  v14 = type metadata accessor for DraggableViewModifier(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v16 = a1;
  *((_QWORD *)v16 + 1) = a2;
  *((double *)v16 + 2) = a6;
  v24 = 0;
  swift_retain();
  swift_retain();
  sub_2414B4798();
  v17 = v27;
  *((_QWORD *)v16 + 3) = v26;
  *((_QWORD *)v16 + 4) = v17;
  v24 = 0;
  v25 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841F8);
  sub_2414B4798();
  v18 = v27;
  v19 = v28;
  *((_QWORD *)v16 + 5) = v26;
  v16[48] = v18;
  *((_QWORD *)v16 + 7) = v19;
  *((_QWORD *)v16 + 8) = swift_getKeyPath();
  *((_QWORD *)v16 + 9) = 0;
  *((_QWORD *)v16 + 10) = 0;
  *((_QWORD *)v16 + 11) = 0;
  v16[96] = 0;
  v20 = (uint64_t *)&v16[*(int *)(v14 + 32)];
  *v20 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B68);
  swift_storeEnumTagMultiPayload();
  sub_2412DC3FC(v9, a5, a3);
  v21 = __swift_instantiateConcreteTypeFromMangledName(a4);
  return sub_2412DC3B8((uint64_t)v16, a5 + *(int *)(v21 + 36), type metadata accessor for DraggableViewModifier);
}

uint64_t ContentInlineSliderStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t *v21;
  uint64_t v22;
  _OWORD v24[5];
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;

  v2 = type metadata accessor for SpringyViewModifier(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127B10);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127B18);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = sub_2414B3880();
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127B20);
  sub_2413FAD4C(&v7[*(int *)(v11 + 44)]);
  v12 = sub_2414B3C34();
  sub_2413FA934(v12, v13, &qword_257127B10, &qword_257127B18, (uint64_t)v10, v14);
  swift_release();
  swift_release();
  sub_2412CBE78((uint64_t)v7, &qword_257127B10);
  if (qword_254383C50 != -1)
    swift_once();
  v24[0] = xmmword_254383BE8;
  v24[1] = unk_254383BF8;
  v24[2] = xmmword_254383C08;
  v24[3] = unk_254383C18;
  v24[4] = xmmword_254383C28;
  v25 = qword_254383C38;
  v26 = unk_254383C40;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2414B4798();
  v15 = v33;
  v16 = v31;
  v17 = v32;
  v18 = v28;
  v19 = v29;
  v20 = v30;
  *(_OWORD *)v4 = v27;
  *((_OWORD *)v4 + 1) = v18;
  *((_OWORD *)v4 + 2) = v19;
  *((_OWORD *)v4 + 3) = v20;
  *((_OWORD *)v4 + 4) = v16;
  *((_OWORD *)v4 + 5) = v17;
  *((_QWORD *)v4 + 12) = v15;
  v21 = (uint64_t *)&v4[*(int *)(v2 + 20)];
  *v21 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
  swift_storeEnumTagMultiPayload();
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127B28);
  sub_2412DC3B8((uint64_t)v4, a1 + *(int *)(v22 + 36), type metadata accessor for SpringyViewModifier);
  return sub_2412EAEA4((uint64_t)v10, a1, &qword_257127B18);
}

uint64_t sub_2413FAD4C@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  void (*v34)(char *, uint64_t);
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;

  v43 = a1;
  v1 = sub_2414B3BF8();
  v41 = *(_QWORD *)(v1 - 8);
  v42 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v40 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v36 - v4;
  v6 = (int *)type metadata accessor for CapsuleProgress(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (uint64_t *)((char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v36 - v10;
  v12 = sub_2414B3C04();
  v39 = *(_QWORD *)(v12 - 8);
  v13 = v39;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v36 - v17;
  v38 = (char *)&v36 - v17;
  sub_2414B3C1C();
  sub_2414B3C28();
  v20 = v19;
  *v8 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  swift_storeEnumTagMultiPayload();
  *(uint64_t *)((char *)v8 + v6[5]) = v20;
  v21 = (char *)v8 + v6[6];
  *(_QWORD *)v21 = swift_getKeyPath();
  *(_OWORD *)(v21 + 8) = 0u;
  *(_OWORD *)(v21 + 24) = 0u;
  *(_OWORD *)(v21 + 40) = 0u;
  *(_OWORD *)(v21 + 56) = 0u;
  *(_OWORD *)(v21 + 65) = 0u;
  v22 = (char *)v8 + v6[7];
  *(_QWORD *)v22 = swift_getKeyPath();
  v22[8] = 0;
  v36 = v11;
  sub_2412DC3B8((uint64_t)v8, (uint64_t)v11, type metadata accessor for CapsuleProgress);
  sub_2414B3C10();
  v23 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v37 = v15;
  v24 = v12;
  v23(v15, v18, v12);
  sub_2412C6A50((uint64_t)v11, (uint64_t)v8, type metadata accessor for CapsuleProgress);
  v26 = v40;
  v25 = v41;
  v27 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
  v28 = v5;
  v29 = v5;
  v30 = v42;
  v27(v40, v28, v42);
  v31 = v43;
  v23(v43, v15, v24);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127CD8);
  sub_2412C6A50((uint64_t)v8, (uint64_t)&v31[*(int *)(v32 + 48)], type metadata accessor for CapsuleProgress);
  v27(&v31[*(int *)(v32 + 64)], v26, v30);
  v33 = *(void (**)(char *, uint64_t))(v25 + 8);
  v33(v29, v30);
  sub_2412C68F4((uint64_t)v36, type metadata accessor for CapsuleProgress);
  v34 = *(void (**)(char *, uint64_t))(v39 + 8);
  v34(v38, v24);
  v33(v26, v30);
  sub_2412C68F4((uint64_t)v8, type metadata accessor for CapsuleProgress);
  return ((uint64_t (*)(char *, uint64_t))v34)(v37, v24);
}

uint64_t sub_2413FB050@<X0>(uint64_t a1@<X8>)
{
  return ContentInlineSliderStyle.makeBody(configuration:)(a1);
}

uint64_t sub_2413FB064()
{
  swift_getKeyPath();
  sub_2414B41C8();
  return swift_release();
}

uint64_t sub_2413FB0D4()
{
  unsigned __int8 v1;

  sub_2414019D0();
  sub_2414B3838();
  return v1;
}

uint64_t sub_2413FB10C()
{
  swift_getKeyPath();
  sub_2414B41C8();
  return swift_release();
}

double sub_2413FB19C()
{
  double v1;

  sub_2414012C4();
  sub_2414B3838();
  return v1;
}

double sub_2413FB1D8@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;

  sub_2414012C4();
  sub_2414B3838();
  result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_2413FB224()
{
  sub_2414012C4();
  return sub_2414B3844();
}

uint64_t sub_2413FB26C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t KeyPath;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  __int128 v63;
  __int128 v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;

  v3 = (uint64_t)v2;
  *(_QWORD *)&v63 = a1;
  v78 = a2;
  v73 = type metadata accessor for SpringyViewModifier(0);
  v74 = *(_QWORD *)(v73 - 8);
  v75 = *(_QWORD *)(v74 + 64);
  MEMORY[0x24BDAC7A8](v73);
  v72 = (uint64_t)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_2414B2F44();
  v77 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v71 = (uint64_t)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383E20);
  *(_QWORD *)&v70 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  *(_QWORD *)&v64 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383E58);
  MEMORY[0x24BDAC7A8](v59);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383F38);
  MEMORY[0x24BDAC7A8](v61);
  v60 = (uint64_t)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_254384198);
  v67 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v62 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383EC8);
  MEMORY[0x24BDAC7A8](v66);
  v65 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v2[1];
  *(_QWORD *)&v58 = *v2;
  *(_QWORD *)&v57 = v12;
  v13 = v2[2];
  v14 = v2[3];
  v15 = v2[4];
  v16 = v2[5];
  v17 = v2[7];
  *(_QWORD *)&v56 = v2[6];
  v55 = v17;
  v18 = v2[8];
  v54 = v2[9];
  v20 = v2[10];
  v19 = v2[11];
  v21 = v2[12];
  *(_QWORD *)&v79 = v58;
  *((_QWORD *)&v79 + 1) = v12;
  *(_QWORD *)&v80 = v13;
  *((_QWORD *)&v80 + 1) = v14;
  *(_QWORD *)&v81 = v15;
  *((_QWORD *)&v81 + 1) = v16;
  *(_QWORD *)&v82 = v56;
  *((_QWORD *)&v82 + 1) = v17;
  *(_QWORD *)&v83 = v18;
  *((_QWORD *)&v83 + 1) = v54;
  *(_QWORD *)&v84 = v20;
  *((_QWORD *)&v84 + 1) = v19;
  v85 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841A8);
  sub_2414B47A4();
  v22 = v86;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_2414B4B64();
  v24 = v23;
  v26 = v25;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543840B0);
  (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v8, v63, v27);
  v28 = &v8[*(int *)(v59 + 36)];
  *(_OWORD *)v28 = v22;
  *((_QWORD *)v28 + 2) = v24;
  *((_QWORD *)v28 + 3) = v26;
  v29 = sub_2414B4ABC();
  *(_QWORD *)&v79 = v58;
  *((_QWORD *)&v79 + 1) = v57;
  *(_QWORD *)&v80 = v13;
  *((_QWORD *)&v80 + 1) = v14;
  *(_QWORD *)&v81 = v15;
  *((_QWORD *)&v81 + 1) = v16;
  *(_QWORD *)&v82 = v56;
  *((_QWORD *)&v82 + 1) = v55;
  *(_QWORD *)&v83 = v18;
  *((_QWORD *)&v83 + 1) = v54;
  *(_QWORD *)&v84 = v20;
  *((_QWORD *)&v84 + 1) = v19;
  v85 = v21;
  sub_2414B47A4();
  v63 = v86;
  v59 = v87;
  v58 = v88;
  v30 = v89;
  v31 = v90;
  v57 = v91;
  v56 = v92;
  v32 = v60;
  sub_2412DC3FC((uint64_t)v8, v60, &qword_254383E58);
  v33 = v32 + *(int *)(v61 + 36);
  *(_QWORD *)v33 = v29;
  *(_OWORD *)(v33 + 8) = v63;
  *(_OWORD *)(v33 + 24) = v59;
  *(_OWORD *)(v33 + 40) = v58;
  *(_QWORD *)(v33 + 56) = v30;
  *(_QWORD *)(v33 + 64) = v31;
  *(_OWORD *)(v33 + 72) = v57;
  *(_OWORD *)(v33 + 88) = v56;
  sub_2412CBE78((uint64_t)v8, &qword_254383E58);
  v34 = v64;
  sub_2413FBA64(v64);
  sub_2414B2FF8();
  sub_24140087C();
  sub_2412C8FC4(&qword_254383E18, &qword_254383E20, MEMORY[0x24BDEC410]);
  v35 = v62;
  v36 = v68;
  sub_2414B43A8();
  (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v34, v36);
  sub_2412CBE78(v32, &qword_254383F38);
  KeyPath = swift_getKeyPath();
  v38 = v2[12];
  v39 = *((_OWORD *)v2 + 1);
  v79 = *(_OWORD *)v2;
  v80 = v39;
  v40 = *((_OWORD *)v2 + 3);
  v81 = *((_OWORD *)v2 + 2);
  v82 = v40;
  v41 = *((_OWORD *)v2 + 5);
  v83 = *((_OWORD *)v2 + 4);
  v84 = v41;
  v85 = v38;
  sub_2414B47A4();
  v70 = v87;
  v68 = v88;
  v42 = v89;
  v43 = v90;
  v64 = v91;
  v63 = v92;
  v44 = v67;
  v45 = (uint64_t)v65;
  v46 = v69;
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v65, v35, v69);
  v47 = v45 + *(int *)(v66 + 36);
  *(_QWORD *)v47 = KeyPath;
  *(_OWORD *)(v47 + 8) = v70;
  *(_OWORD *)(v47 + 24) = v68;
  *(_QWORD *)(v47 + 40) = v42;
  *(_QWORD *)(v47 + 48) = v43;
  *(_OWORD *)(v47 + 56) = v64;
  *(_OWORD *)(v47 + 72) = v63;
  (*(void (**)(char *, uint64_t))(v44 + 8))(v35, v46);
  v48 = v71;
  sub_2412C8890(v71);
  v49 = v72;
  sub_2412C6A50(v3, v72, type metadata accessor for SpringyViewModifier);
  v50 = (*(unsigned __int8 *)(v74 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
  v51 = swift_allocObject();
  sub_2412DC3B8(v49, v51 + v50, type metadata accessor for SpringyViewModifier);
  sub_2414009BC();
  sub_2412C8030(&qword_254380B00, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB1F0], MEMORY[0x24BDEB200]);
  v52 = v76;
  sub_2414B4564();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v48, v52);
  return sub_2412CBE78(v45, &qword_254383EC8);
}

uint64_t sub_2413FBA64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = v1;
  v24 = a1;
  v3 = type metadata accessor for SpringyViewModifier(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2414B3AB4();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_2414B2FC8();
  v21 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383FA0);
  v12 = *(_QWORD *)(v11 - 8);
  v22 = v11;
  v23 = v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414B3B80();
  sub_2414B2FB0();
  sub_2412C6A50(v2, (uint64_t)v6, type metadata accessor for SpringyViewModifier);
  v15 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v16 = swift_allocObject();
  sub_2412DC3B8((uint64_t)v6, v16 + v15, type metadata accessor for SpringyViewModifier);
  sub_2412C8030(&qword_254382B68, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB540], MEMORY[0x24BDEB530]);
  sub_2412C8030(&qword_254383DC0, MEMORY[0x24BDEB500], MEMORY[0x24BDEB520]);
  sub_2414B496C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
  sub_2412C6A50(v20[1], (uint64_t)v6, type metadata accessor for SpringyViewModifier);
  v17 = swift_allocObject();
  sub_2412DC3B8((uint64_t)v6, v17 + v15, type metadata accessor for SpringyViewModifier);
  sub_2412C8FC4(&qword_254383F98, &qword_254383FA0, MEMORY[0x24BDED570]);
  v18 = v22;
  sub_2414B4960();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v14, v18);
}

__n128 sub_2413FBD18@<Q0>(_OWORD *a1@<X8>)
{
  __n128 result;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 v7;

  sub_241400E34();
  sub_2414B3838();
  result = v7;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  return result;
}

__n128 sub_2413FBD70@<Q0>(_OWORD *a1@<X8>)
{
  __n128 result;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 v7;

  sub_241400E34();
  sub_2414B3838();
  result = v7;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  return result;
}

uint64_t sub_2413FBDCC()
{
  sub_241400E34();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return sub_2414B3844();
}

uint64_t sub_2413FBE60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _OWORD v39[6];
  uint64_t v40;

  v2 = type metadata accessor for SpringyViewModifier(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v29 - v6;
  v8 = sub_2414B2F44();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v29 - v13;
  sub_2412C8890((uint64_t)&v29 - v13);
  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v14, v8);
  if ((_DWORD)result == *MEMORY[0x24BDEB1D0] || (_DWORD)result == *MEMORY[0x24BDEB1E8])
  {
    if (qword_254383C50 != -1)
      swift_once();
    v17 = *(_QWORD *)(a1 + 96);
    v18 = *(_OWORD *)(a1 + 16);
    v39[0] = *(_OWORD *)a1;
    v39[1] = v18;
    v19 = *(_OWORD *)(a1 + 48);
    v39[2] = *(_OWORD *)(a1 + 32);
    v39[3] = v19;
    v20 = *(_OWORD *)(a1 + 80);
    v39[4] = *(_OWORD *)(a1 + 64);
    v39[5] = v20;
    v40 = v17;
    v33 = xmmword_254383BE8;
    v34 = unk_254383BF8;
    v35 = xmmword_254383C08;
    v36 = unk_254383C18;
    v37 = xmmword_254383C28;
    v38 = xmmword_254383C38;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543841A8);
    return sub_2414B47B0();
  }
  else if ((_DWORD)result != *MEMORY[0x24BDEB1E0])
  {
    if (qword_2543809C0 != -1)
      swift_once();
    v21 = sub_2414B2CA4();
    __swift_project_value_buffer(v21, (uint64_t)qword_25438E7B8);
    sub_2412C6A50(a1, (uint64_t)v7, type metadata accessor for SpringyViewModifier);
    sub_2412C6A50(a1, (uint64_t)v4, type metadata accessor for SpringyViewModifier);
    v22 = sub_2414B2C8C();
    v23 = sub_2414B51AC();
    v24 = v23;
    if (os_log_type_enabled(v22, v23))
    {
      v25 = swift_slowAlloc();
      v31 = swift_slowAlloc();
      *(_QWORD *)&v39[0] = v31;
      *(_DWORD *)v25 = 136315394;
      v29 = v25 + 4;
      v30 = v24;
      sub_2412C8890((uint64_t)v11);
      v32 = *(void (**)(char *, uint64_t))(v9 + 8);
      v32(v11, v8);
      *(_QWORD *)&v33 = sub_2412E4890(0x616850656E656353, 0xEA00000000006573, (uint64_t *)v39);
      sub_2414B541C();
      sub_2412C68F4((uint64_t)v7, type metadata accessor for SpringyViewModifier);
      *(_WORD *)(v25 + 12) = 2080;
      sub_2412C8890((uint64_t)v11);
      v26 = sub_2414B4D8C();
      *(_QWORD *)&v33 = sub_2412E4890(v26, v27, (uint64_t *)v39);
      sub_2414B541C();
      swift_bridgeObjectRelease();
      sub_2412C68F4((uint64_t)v4, type metadata accessor for SpringyViewModifier);
      _os_log_impl(&dword_2412C1000, v22, (os_log_type_t)v30, "Unhandled case for %s: %s", (uint8_t *)v25, 0x16u);
      v28 = v31;
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v28, -1, -1);
      MEMORY[0x242695BD8](v25, -1, -1);

      return ((uint64_t (*)(char *, uint64_t))v32)(v14, v8);
    }
    else
    {
      sub_2412C68F4((uint64_t)v7, type metadata accessor for SpringyViewModifier);
      sub_2412C68F4((uint64_t)v4, type metadata accessor for SpringyViewModifier);

      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
  }
  return result;
}

uint64_t sub_2413FC2C0(uint64_t a1, __int128 *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t result;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _QWORD v32[2];
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  double v47[12];
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;

  v3 = sub_2414B2F44();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v32 - v8;
  type metadata accessor for SpringyViewModifier(0);
  sub_2412C8890((uint64_t)v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDEB1E0], v3);
  v10 = sub_2414B2F38();
  v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v6, v3);
  v11(v9, v3);
  if ((v10 & 1) == 0)
  {
    if (qword_254383C50 != -1)
      swift_once();
    v28 = *((_QWORD *)a2 + 12);
    v29 = a2[1];
    v40 = *a2;
    v41 = v29;
    v30 = a2[3];
    v42 = a2[2];
    v43 = v30;
    v31 = a2[5];
    v44 = a2[4];
    v45 = v31;
    v46 = v28;
    v48 = xmmword_254383BE8;
    v49 = unk_254383BF8;
    v50 = xmmword_254383C08;
    v51 = unk_254383C18;
    v52 = xmmword_254383C28;
    v53 = xmmword_254383C38;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543841A8);
    return sub_2414B47B0();
  }
  v12 = *(_QWORD *)a2;
  v13 = *((_QWORD *)a2 + 1);
  v14 = *((_QWORD *)a2 + 2);
  v15 = *((_QWORD *)a2 + 3);
  v16 = *((_QWORD *)a2 + 4);
  v17 = *((_QWORD *)a2 + 5);
  v18 = *((_QWORD *)a2 + 6);
  v19 = *((_QWORD *)a2 + 7);
  v20 = *((_QWORD *)a2 + 8);
  v21 = *((_QWORD *)a2 + 9);
  v22 = *((_QWORD *)a2 + 10);
  v23 = *((_QWORD *)a2 + 11);
  v24 = *((_QWORD *)a2 + 12);
  *(_QWORD *)&v40 = *(_QWORD *)a2;
  *((_QWORD *)&v40 + 1) = v13;
  *(_QWORD *)&v41 = v14;
  *((_QWORD *)&v41 + 1) = v15;
  *(_QWORD *)&v42 = v16;
  *((_QWORD *)&v42 + 1) = v17;
  *(_QWORD *)&v43 = v18;
  *((_QWORD *)&v43 + 1) = v19;
  *(_QWORD *)&v44 = v20;
  *((_QWORD *)&v44 + 1) = v21;
  *(_QWORD *)&v45 = v22;
  *((_QWORD *)&v45 + 1) = v23;
  v46 = v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543841A8);
  sub_2414B47A4();
  if (qword_257120988 != -1)
    swift_once();
  v50 = xmmword_257127A40;
  v51 = unk_257127A50;
  v52 = xmmword_257127A60;
  v53 = *(_OWORD *)&qword_257127A70;
  v48 = xmmword_257127A20;
  v49 = *(_OWORD *)algn_257127A30;
  v26 = sub_241401018(v47, (double *)&v48);
  result = sub_241401104((uint64_t)v47);
  if (!v26)
  {
    v32[1] = v25;
    *(_QWORD *)&v40 = v12;
    *((_QWORD *)&v40 + 1) = v13;
    *(_QWORD *)&v41 = v14;
    *((_QWORD *)&v41 + 1) = v15;
    *(_QWORD *)&v42 = v16;
    *((_QWORD *)&v42 + 1) = v17;
    *(_QWORD *)&v43 = v18;
    *((_QWORD *)&v43 + 1) = v19;
    *(_QWORD *)&v44 = v20;
    *((_QWORD *)&v44 + 1) = v21;
    *(_QWORD *)&v45 = v22;
    *((_QWORD *)&v45 + 1) = v23;
    v46 = v24;
    v33 = xmmword_257127A20;
    v34 = *(_OWORD *)algn_257127A30;
    v35 = xmmword_257127A40;
    v36 = unk_257127A50;
    v37 = xmmword_257127A60;
    v38 = qword_257127A70;
    v39 = unk_257127A78;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return sub_2414B47B0();
  }
  return result;
}

uint64_t sub_2413FC5AC()
{
  BOOL v0;
  uint64_t result;
  double v2[12];
  _OWORD v3[7];

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841A8);
  sub_2414B47A4();
  if (qword_254383C50 != -1)
    swift_once();
  v3[2] = xmmword_254383C08;
  v3[3] = unk_254383C18;
  v3[4] = xmmword_254383C28;
  v3[5] = xmmword_254383C38;
  v3[0] = xmmword_254383BE8;
  v3[1] = unk_254383BF8;
  v0 = sub_241401018(v2, (double *)v3);
  result = sub_241401104((uint64_t)v2);
  if (!v0)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return sub_2414B47B0();
  }
  return result;
}

uint64_t sub_2413FC72C()
{
  if (qword_254383B30 != -1)
    swift_once();
  __asm { FMOV            V0.2D, #1.0 }
  xmmword_254383BE8 = _Q0;
  unk_254383BF8 = xmmword_254383AE0;
  xmmword_254383C08 = *(_OWORD *)algn_254383AF0;
  unk_254383C18 = xmmword_254383B00;
  xmmword_254383C28 = xmmword_254383B10;
  qword_254383C38 = qword_254383B20;
  unk_254383C40 = unk_254383B28;
  swift_retain();
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t sub_2413FC7C0()
{
  return sub_2414B3670();
}

uint64_t sub_2413FC7E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2413FC7F4()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for ContentBelowSliderStyle()
{
  return &type metadata for ContentBelowSliderStyle;
}

ValueMetadata *type metadata accessor for ContentInlineSliderStyle()
{
  return &type metadata for ContentInlineSliderStyle;
}

unint64_t sub_2413FC828()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257127B30;
  if (!qword_257127B30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257127B00);
    v2[0] = sub_2413FC8AC();
    v2[1] = sub_2412C8030(&qword_254383C58, type metadata accessor for SpringyViewModifier, (uint64_t)&unk_2414C4DE8);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257127B30);
  }
  return result;
}

unint64_t sub_2413FC8AC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257127B38;
  if (!qword_257127B38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257127AF8);
    v2[0] = sub_2412C8FC4(&qword_257127B40, &qword_257127AF0, MEMORY[0x24BDF4700]);
    v2[1] = sub_2412C8030(&qword_254383C88, type metadata accessor for DraggableViewModifier, (uint64_t)&unk_2414C4E38);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257127B38);
  }
  return result;
}

uint64_t type metadata accessor for DraggableViewModifier(uint64_t a1)
{
  return sub_2412C6CA0(a1, qword_254383C90);
}

unint64_t sub_2413FC960()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257127B48;
  if (!qword_257127B48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257127B28);
    v2[0] = sub_2413FC9E4();
    v2[1] = sub_2412C8030(&qword_254383C58, type metadata accessor for SpringyViewModifier, (uint64_t)&unk_2414C4DE8);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257127B48);
  }
  return result;
}

unint64_t sub_2413FC9E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257127B50;
  if (!qword_257127B50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257127B18);
    v2[0] = sub_2412C8FC4(qword_257127B58, &qword_257127B10, MEMORY[0x24BDF4498]);
    v2[1] = sub_2412C8030(&qword_254383C88, type metadata accessor for DraggableViewModifier, (uint64_t)&unk_2414C4E38);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257127B50);
  }
  return result;
}

uint64_t destroy for SpringyViewModifier.Specs()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for SpringyViewModifier.Specs(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v3 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v3;
  v4 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v4;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for SpringyViewModifier.Specs(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for SpringyViewModifier.Specs(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  __int128 v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_release();
  a1[4] = a2[4];
  swift_release();
  swift_release();
  a1[5] = a2[5];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SpringyViewModifier.Specs(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SpringyViewModifier.Specs(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 64) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SpringyViewModifier.Specs()
{
  return &type metadata for SpringyViewModifier.Specs;
}

uint64_t sub_2413FCD14(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  char v18;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    v8 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v8;
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    v9 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    v10 = a2[9];
    v11 = a2[10];
    v12 = a2[11];
    v18 = *((_BYTE *)a2 + 96);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_2413FCE88(v9, v10, v11, v12, v18);
    *(_QWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 72) = v10;
    *(_QWORD *)(a1 + 80) = v11;
    *(_QWORD *)(a1 + 88) = v12;
    *(_BYTE *)(a1 + 96) = v18;
    v13 = *(int *)(a3 + 32);
    v14 = (_QWORD *)(a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_2414B3484();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2413FCE88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t sub_2413FCE94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_24134E088(*(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_BYTE *)(a1 + 96));
  v4 = a1 + *(int *)(a2 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B68);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_2414B3484();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_2413FCF34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 72);
  v9 = *(_QWORD *)(a2 + 80);
  v10 = *(_QWORD *)(a2 + 88);
  v11 = *(_BYTE *)(a2 + 96);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2413FCE88(v7, v8, v9, v10, v11);
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 88) = v10;
  *(_BYTE *)(a1 + 96) = v11;
  v12 = *(int *)(a3 + 32);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = sub_2414B3484();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2413FD070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 72);
  v9 = *(_QWORD *)(a2 + 80);
  v10 = *(_QWORD *)(a2 + 88);
  v11 = *(_BYTE *)(a2 + 96);
  sub_2413FCE88(v7, v8, v9, v10, v11);
  v12 = *(_QWORD *)(a1 + 64);
  v13 = *(_QWORD *)(a1 + 72);
  v14 = *(_QWORD *)(a1 + 80);
  v15 = *(_QWORD *)(a1 + 88);
  v16 = *(_BYTE *)(a1 + 96);
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 88) = v10;
  *(_BYTE *)(a1 + 96) = v11;
  sub_24134E088(v12, v13, v14, v15, v16);
  if (a1 != a2)
  {
    v17 = *(int *)(a3 + 32);
    v18 = (_QWORD *)(a1 + v17);
    v19 = (_QWORD *)(a2 + v17);
    sub_2412CBE78(a1 + v17, &qword_254380B68);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v20 = sub_2414B3484();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2413FD1FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  const void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  v5 = *(int *)(a3 + 32);
  v6 = (const void *)(a2 + v5);
  v7 = (void *)(a1 + v5);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_2414B3484();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v6, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_2413FD2D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  v6 = *(_BYTE *)(a2 + 96);
  v7 = *(_QWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 72);
  v9 = *(_QWORD *)(a1 + 80);
  v10 = *(_QWORD *)(a1 + 88);
  v11 = *(_BYTE *)(a1 + 96);
  v12 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v12;
  *(_BYTE *)(a1 + 96) = v6;
  sub_24134E088(v7, v8, v9, v10, v11);
  if (a1 != a2)
  {
    v13 = *(int *)(a3 + 32);
    v14 = (void *)(a1 + v13);
    v15 = (const void *)(a2 + v13);
    sub_2412CBE78(a1 + v13, &qword_254380B68);
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_2414B3484();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2413FD40C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2413FD418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122060);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_2413FD498()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2413FD4A4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122060);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

void sub_2413FD51C()
{
  unint64_t v0;

  sub_2412C8EDC(319, (unint64_t *)&qword_254380B70, (void (*)(uint64_t))MEMORY[0x24BDED130]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

_QWORD *sub_2413FD5BC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2414B3934();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(a3 + 24);
    *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
    v27 = a3;
    v10 = (char *)a1 + v9;
    v11 = *(_QWORD *)((char *)a2 + v9);
    v12 = *(_QWORD *)((char *)a2 + v9 + 8);
    v13 = *(_QWORD *)((char *)a2 + v9 + 16);
    v14 = *(_QWORD *)((char *)a2 + v9 + 24);
    v15 = *(_QWORD *)((char *)a2 + v9 + 32);
    v16 = *(_QWORD *)((char *)a2 + v9 + 40);
    v17 = *(_QWORD *)((char *)a2 + v9 + 48);
    v23 = *(_QWORD *)((char *)a2 + v9 + 56);
    v24 = *(_QWORD *)((char *)a2 + v9 + 64);
    v25 = *(_QWORD *)((char *)a2 + v9 + 72);
    v26 = *((_BYTE *)a2 + v9 + 80);
    sub_24134E128(v11, v12, v13, v14, v15, v16, v17, v23, v24, v25, v26);
    *(_QWORD *)v10 = v11;
    *((_QWORD *)v10 + 1) = v12;
    *((_QWORD *)v10 + 2) = v13;
    *((_QWORD *)v10 + 3) = v14;
    *((_QWORD *)v10 + 4) = v15;
    *((_QWORD *)v10 + 5) = v16;
    *((_QWORD *)v10 + 6) = v17;
    *((_QWORD *)v10 + 7) = v23;
    *((_QWORD *)v10 + 8) = v24;
    *((_QWORD *)v10 + 9) = v25;
    v10[80] = v26;
    v18 = *(int *)(v27 + 28);
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = *(_QWORD *)v20;
    LOBYTE(v10) = v20[8];
    sub_2412C7080(*(_QWORD *)v20, (char)v10);
    *(_QWORD *)v19 = v21;
    v19[8] = (char)v10;
  }
  return a1;
}

uint64_t sub_2413FD760(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2414B3934();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + *(int *)(a2 + 24);
  sub_24134E1CC(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48), *(_QWORD *)(v5 + 56), *(_QWORD *)(v5 + 64), *(_QWORD *)(v5 + 72), *(_BYTE *)(v5 + 80));
  return sub_2412C821C(*(_QWORD *)(a1 + *(int *)(a2 + 28)), *(_BYTE *)(a1 + *(int *)(a2 + 28) + 8));
}

_QWORD *sub_2413FD80C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  char v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2414B3934();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  v8 = a2;
  v28 = a3;
  v29 = a2;
  v9 = (char *)a1 + v7;
  v10 = (char *)v8 + v7;
  v11 = *(_QWORD *)v10;
  v12 = *((_QWORD *)v10 + 1);
  v13 = *((_QWORD *)v10 + 2);
  v14 = *((_QWORD *)v10 + 3);
  v15 = *((_QWORD *)v10 + 4);
  v16 = *((_QWORD *)v10 + 5);
  v18 = *((_QWORD *)v10 + 6);
  v17 = *((_QWORD *)v10 + 7);
  v27 = a1;
  v19 = *((_QWORD *)v10 + 8);
  v25 = *((_QWORD *)v10 + 9);
  v26 = v10[80];
  sub_24134E128(*(_QWORD *)v10, v12, v13, v14, v15, v16, v18, v17, v19, v25, v26);
  *(_QWORD *)v9 = v11;
  *((_QWORD *)v9 + 1) = v12;
  *((_QWORD *)v9 + 2) = v13;
  *((_QWORD *)v9 + 3) = v14;
  *((_QWORD *)v9 + 4) = v15;
  *((_QWORD *)v9 + 5) = v16;
  *((_QWORD *)v9 + 6) = v18;
  *((_QWORD *)v9 + 7) = v17;
  *((_QWORD *)v9 + 8) = v19;
  *((_QWORD *)v9 + 9) = v25;
  v9[80] = v26;
  v20 = *(int *)(v28 + 28);
  v21 = (char *)v27 + v20;
  v22 = (char *)v29 + v20;
  v23 = *(_QWORD *)v22;
  LOBYTE(v17) = v22[8];
  sub_2412C7080(*(_QWORD *)v22, v17);
  *(_QWORD *)v21 = v23;
  v21[8] = v17;
  return v27;
}

_QWORD *sub_2413FD988(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v38;
  char v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;

  if (a1 != a2)
  {
    sub_2412CBE78((uint64_t)a1, &qword_25437DAA0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_2414B3934();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  v7 = *(int *)(a3 + 24);
  v8 = a2;
  v41 = a3;
  v42 = a2;
  v9 = (char *)a1 + v7;
  v10 = (char *)v8 + v7;
  v11 = *(_QWORD *)v10;
  v12 = *((_QWORD *)v10 + 1);
  v13 = *((_QWORD *)v10 + 2);
  v14 = *((_QWORD *)v10 + 3);
  v15 = *((_QWORD *)v10 + 4);
  v16 = *((_QWORD *)v10 + 5);
  v18 = *((_QWORD *)v10 + 6);
  v17 = *((_QWORD *)v10 + 7);
  v40 = a1;
  v19 = *((_QWORD *)v10 + 8);
  v38 = *((_QWORD *)v10 + 9);
  v39 = v10[80];
  sub_24134E128(*(_QWORD *)v10, v12, v13, v14, v15, v16, v18, v17, v19, v38, v39);
  v20 = *(_QWORD *)v9;
  v21 = *((_QWORD *)v9 + 1);
  v22 = *((_QWORD *)v9 + 2);
  v23 = *((_QWORD *)v9 + 3);
  v24 = *((_QWORD *)v9 + 4);
  v25 = *((_QWORD *)v9 + 5);
  v26 = *((_QWORD *)v9 + 6);
  v27 = *((_QWORD *)v9 + 7);
  v28 = *((_QWORD *)v9 + 8);
  v29 = *((_QWORD *)v9 + 9);
  v30 = v9[80];
  *(_QWORD *)v9 = v11;
  *((_QWORD *)v9 + 1) = v12;
  *((_QWORD *)v9 + 2) = v13;
  *((_QWORD *)v9 + 3) = v14;
  *((_QWORD *)v9 + 4) = v15;
  *((_QWORD *)v9 + 5) = v16;
  *((_QWORD *)v9 + 6) = v18;
  *((_QWORD *)v9 + 7) = v17;
  *((_QWORD *)v9 + 8) = v19;
  *((_QWORD *)v9 + 9) = v38;
  v9[80] = v39;
  sub_24134E1CC(v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30);
  v31 = *(int *)(v41 + 28);
  v32 = (char *)v40 + v31;
  v33 = (char *)v42 + v31;
  v34 = *(_QWORD *)v33;
  LOBYTE(v17) = v33[8];
  sub_2412C7080(*(_QWORD *)v33, v17);
  v35 = *(_QWORD *)v32;
  v36 = v32[8];
  *(_QWORD *)v32 = v34;
  v32[8] = v17;
  sub_2412C821C(v35, v36);
  return v40;
}

char *sub_2413FDB50(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_2414B3934();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *((_OWORD *)v10 + 1);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v11;
  v9[80] = v10[80];
  v12 = *((_OWORD *)v10 + 4);
  v13 = *((_OWORD *)v10 + 2);
  *((_OWORD *)v9 + 3) = *((_OWORD *)v10 + 3);
  *((_OWORD *)v9 + 4) = v12;
  *((_OWORD *)v9 + 2) = v13;
  v14 = a3[7];
  v15 = &a1[v14];
  v16 = &a2[v14];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v15[8] = v16[8];
  return a1;
}

char *sub_2413FDC3C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  if (a1 != a2)
  {
    sub_2412CBE78((uint64_t)a1, &qword_25437DAA0);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2414B3934();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = v10[80];
  v12 = *(_QWORD *)v9;
  v13 = *((_QWORD *)v9 + 1);
  v14 = *((_QWORD *)v9 + 2);
  v15 = *((_QWORD *)v9 + 3);
  v16 = *((_QWORD *)v9 + 4);
  v17 = *((_QWORD *)v9 + 5);
  v18 = *((_QWORD *)v9 + 6);
  v19 = *((_QWORD *)v9 + 7);
  v20 = *((_QWORD *)v9 + 8);
  v21 = *((_QWORD *)v9 + 9);
  v22 = v9[80];
  v23 = *((_OWORD *)v10 + 1);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v23;
  v24 = *((_OWORD *)v10 + 3);
  *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
  *((_OWORD *)v9 + 3) = v24;
  *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
  v9[80] = v11;
  sub_24134E1CC(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  v25 = a3[7];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = *(_QWORD *)v27;
  LOBYTE(v27) = v27[8];
  v29 = *(_QWORD *)v26;
  v30 = v26[8];
  *(_QWORD *)v26 = v28;
  v26[8] = (char)v27;
  sub_2412C821C(v29, v30);
  return a1;
}

uint64_t sub_2413FDD78()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2413FDD84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571226F0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 80);
  if (v9 > 1)
    return (v9 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_2413FDE04()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2413FDE10(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_2571226F0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24) + 80) = -(char)a2;
  return result;
}

uint64_t type metadata accessor for CapsuleProgress(uint64_t a1)
{
  return sub_2412C6CA0(a1, qword_257127BB8);
}

void sub_2413FDEA4()
{
  unint64_t v0;

  sub_2412C8EDC(319, (unint64_t *)&qword_25437DAA8, (void (*)(uint64_t))MEMORY[0x24BDEEE00]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

_QWORD *sub_2413FDF3C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    v5 = a2[8];
    v3[7] = a2[7];
    v3[8] = v5;
    v6 = a2[10];
    v3[9] = a2[9];
    v3[10] = v6;
    v7 = a2[12];
    v8 = *(int *)(a3 + 20);
    v9 = (_QWORD *)((char *)v3 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v3[11] = a2[11];
    v3[12] = v7;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_2414B2F44();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_2413FE078(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_2414B2F44();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_2413FE110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  v5 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v5;
  v6 = *(_QWORD *)(a2 + 96);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2414B2F44();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_2413FE218(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  a1[12] = a2[12];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_2412CBE78((uint64_t)a1 + v6, &qword_254380B48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2414B2F44();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2413FE38C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_OWORD *)(a2 + 48);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2414B2F44();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  return a1;
}

uint64_t sub_2413FE44C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_release();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_release();
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 20);
    v9 = (void *)(a1 + v8);
    v10 = (const void *)(a2 + v8);
    sub_2412CBE78(a1 + v8, &qword_254380B48);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2414B2F44();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2413FE56C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2413FE578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 64);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_257127BF8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_2413FE5F8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2413FE604(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 64) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_257127BF8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_2413FE67C()
{
  unint64_t v0;

  sub_2412C8EDC(319, &qword_254380B50, (void (*)(uint64_t))MEMORY[0x24BDEB1F0]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_2413FE700()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2413FE710()
{
  if (qword_257120998 != -1)
    swift_once();
  xmmword_257127A20 = (__int128)vdupq_n_s64(0x3FF0CCCCCCCCCCCDuLL);
  *(_OWORD *)algn_257127A30 = xmmword_257127AA0;
  xmmword_257127A40 = *(_OWORD *)algn_257127AB0;
  unk_257127A50 = xmmword_257127AC0;
  xmmword_257127A60 = xmmword_257127AD0;
  qword_257127A70 = qword_257127AE0;
  unk_257127A78 = qword_257127AE8;
  swift_retain();
  swift_retain();
  swift_retain();
  return swift_retain();
}

BOOL sub_2413FE7B0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[6];
  _OWORD v10[6];

  v2 = a1[3];
  v9[2] = a1[2];
  v9[3] = v2;
  v3 = a1[5];
  v9[4] = a1[4];
  v9[5] = v3;
  v4 = a1[1];
  v9[0] = *a1;
  v9[1] = v4;
  v5 = a2[3];
  v10[2] = a2[2];
  v10[3] = v5;
  v6 = a2[5];
  v10[4] = a2[4];
  v10[5] = v6;
  v7 = a2[1];
  v10[0] = *a2;
  v10[1] = v7;
  return sub_241401018((double *)v9, (double *)v10);
}

uint64_t sub_2413FE80C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __int128 v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (**v34)(uint64_t);
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD v65[2];
  char v66;
  _BYTE v67[48];

  v3 = (uint64_t *)v2;
  v52 = a1;
  v59 = a2;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383E20);
  v56 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v54 = (uint64_t)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DraggableViewModifier(0);
  v53 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v53 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383E68);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383F48);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383F88);
  MEMORY[0x24BDAC7A8](v50);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543841A0);
  v58 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v51 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_OWORD *)(v2 + 80);
  v65[0] = *(_OWORD *)(v2 + 64);
  v65[1] = v16;
  v66 = *(_BYTE *)(v2 + 96);
  sub_2412EAEA4((uint64_t)v65, (uint64_t)v67, &qword_254383DC8);
  sub_2412C8378((uint64_t)v67, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2413FCE88);
  v17 = sub_241345D20();
  v19 = v18;
  v21 = v20;
  v23 = v22;
  sub_2412C8378((uint64_t)v65, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24134E088);
  v24 = sub_2414B3E44();
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543840C0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v9, v52, v25);
  v26 = &v9[*(int *)(v7 + 36)];
  *v26 = v24;
  *((double *)v26 + 1) = v17;
  *((_QWORD *)v26 + 2) = v19;
  *((_QWORD *)v26 + 3) = v21;
  *((_QWORD *)v26 + 4) = v23;
  v26[40] = 0;
  sub_2412DC3FC((uint64_t)v9, (uint64_t)v12, &qword_254383E68);
  v12[*(int *)(v10 + 36)] = 0;
  sub_2412CBE78((uint64_t)v9, &qword_254383E68);
  v27 = sub_2414B4A44();
  v29 = v28;
  v49 = (uint64_t)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2412C6A50((uint64_t)v3, v49, type metadata accessor for DraggableViewModifier);
  v30 = *(unsigned __int8 *)(v53 + 80);
  v31 = (v30 + 16) & ~v30;
  v53 = v31 + v6;
  v52 = v30 | 7;
  v32 = swift_allocObject();
  sub_2412DC3B8((uint64_t)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v32 + v31, type metadata accessor for DraggableViewModifier);
  sub_2412DC3FC((uint64_t)v12, (uint64_t)v14, &qword_254383F48);
  v33 = v50;
  v34 = (uint64_t (**)(uint64_t))&v14[*(int *)(v50 + 36)];
  *v34 = sub_2414003D0;
  v34[1] = (uint64_t (*)(uint64_t))v32;
  v34[2] = (uint64_t (*)(uint64_t))v27;
  v34[3] = v29;
  sub_2412CBE78((uint64_t)v12, &qword_254383F48);
  v35 = v54;
  sub_2413FF010(v54);
  sub_2414B2FF8();
  v36 = sub_2414003E4();
  v37 = sub_2412C8FC4(&qword_254383E18, &qword_254383E20, MEMORY[0x24BDEC410]);
  v38 = v51;
  v39 = v55;
  sub_2414B43A8();
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v35, v39);
  sub_2412CBE78((uint64_t)v14, &qword_254383F88);
  v40 = v3[1];
  v41 = v3[2];
  v60 = *v3;
  v61 = v40;
  v62 = v41;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381458);
  MEMORY[0x242694144](&v64, v42);
  v43 = (uint64_t)v3;
  v44 = v49;
  sub_2412C6A50(v43, v49, type metadata accessor for DraggableViewModifier);
  v45 = swift_allocObject();
  sub_2412DC3B8(v44, v45 + v31, type metadata accessor for DraggableViewModifier);
  v46 = swift_allocObject();
  *(_QWORD *)(v46 + 16) = sub_241400574;
  *(_QWORD *)(v46 + 24) = v45;
  v60 = v33;
  v61 = v39;
  v62 = v36;
  v63 = v37;
  swift_getOpaqueTypeConformance2();
  v47 = v57;
  sub_2414B4558();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v38, v47);
}

uint64_t sub_2413FED40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void (*v17)(unint64_t, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)();
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v26 = a2;
  v27 = a3;
  v5 = sub_2414B3274();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DraggableViewModifier(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_2414B4648();
  sub_2412C6A50(a2, (uint64_t)v12, type metadata accessor for DraggableViewModifier);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v13 = v5;
  v25(v8, a1, v5);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = (v11 + *(unsigned __int8 *)(v6 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v16 = swift_allocObject();
  sub_2412DC3B8((uint64_t)v12, v16 + v14, type metadata accessor for DraggableViewModifier);
  v17 = *(void (**)(unint64_t, char *, uint64_t))(v6 + 32);
  v17(v16 + v15, v8, v13);
  v30 = v24;
  v31 = sub_241400684;
  v33 = 0;
  v34 = 0;
  v32 = v16;
  sub_2414B325C();
  v28 = v18;
  v29 = v19;
  sub_2412C6A50(v26, (uint64_t)v12, type metadata accessor for DraggableViewModifier);
  v20 = v13;
  v25(v8, a1, v13);
  v21 = swift_allocObject();
  sub_2412DC3B8((uint64_t)v12, v21 + v14, type metadata accessor for DraggableViewModifier);
  v17(v21 + v15, v8, v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254383EF0);
  type metadata accessor for CGSize(0);
  sub_241400818();
  sub_2412C8030(&qword_254381548, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x24BDBD858]);
  sub_2414B4564();
  swift_release();
  swift_release();
  sub_2412C9444((uint64_t)v31);
  return sub_2412C9444(v33);
}

uint64_t sub_2413FEFB8()
{
  sub_2414B325C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C0);
  return sub_2414B47B0();
}

uint64_t sub_2413FF010@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = v1;
  v24 = a1;
  v3 = type metadata accessor for DraggableViewModifier(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2414B3AB4();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_2414B2FC8();
  v21 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383FA0);
  v12 = *(_QWORD *)(v11 - 8);
  v22 = v11;
  v23 = v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414B3B80();
  sub_2414B2FB0();
  sub_2412C6A50(v2, (uint64_t)v6, type metadata accessor for DraggableViewModifier);
  v15 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v16 = swift_allocObject();
  sub_2412DC3B8((uint64_t)v6, v16 + v15, type metadata accessor for DraggableViewModifier);
  sub_2412C8030(&qword_254382B68, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB540], MEMORY[0x24BDEB530]);
  sub_2412C8030(&qword_254383DC0, MEMORY[0x24BDEB500], MEMORY[0x24BDEB520]);
  sub_2414B496C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
  sub_2412C6A50(v20[1], (uint64_t)v6, type metadata accessor for DraggableViewModifier);
  v17 = swift_allocObject();
  sub_2412DC3B8((uint64_t)v6, v17 + v15, type metadata accessor for DraggableViewModifier);
  sub_2412C8FC4(&qword_254383F98, &qword_254383FA0, MEMORY[0x24BDED570]);
  v18 = v22;
  sub_2414B4960();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v14, v18);
}

uint64_t sub_2413FF2C4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v17;
  char v18;
  void (*v19)(char *, uint64_t);
  double v20;
  uint64_t v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  char v31;

  v26 = a1;
  v3 = sub_2414B3484();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v26 - v8;
  v10 = a2[5];
  v11 = *((_BYTE *)a2 + 48);
  v12 = a2[7];
  v27 = v10;
  LOBYTE(v28) = v11;
  v29 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C8);
  sub_2414B47A4();
  if ((v31 & 1) != 0)
  {
    v13 = a2[1];
    v14 = a2[2];
    v27 = *a2;
    v28 = v13;
    v29 = v14;
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381458);
    MEMORY[0x242694144](&v30, v15);
    v27 = v10;
    LOBYTE(v28) = v11;
    v29 = v12;
    v31 = 0;
    return sub_2414B47B0();
  }
  else
  {
    v17 = v30;
    type metadata accessor for DraggableViewModifier(0);
    sub_2412D4710((uint64_t)v9);
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDED100], v3);
    v18 = sub_2414B3478();
    v19 = *(void (**)(char *, uint64_t))(v4 + 8);
    v19(v6, v3);
    v19(v9, v3);
    sub_2414B2FBC();
    v21 = a2[4];
    if ((v18 & 1) != 0)
      v22 = v20;
    else
      v22 = -v20;
    v27 = a2[3];
    v28 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C0);
    sub_2414B47A4();
    v23 = v17 + v22 / v30;
    if (v23 > 1.0)
      v23 = 1.0;
    v24 = a2[1];
    v25 = a2[2];
    v27 = *a2;
    v28 = v24;
    if (v23 <= 0.0)
      v23 = 0.0;
    v29 = v25;
    v30 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254381458);
    return sub_2414B48D0();
  }
}

uint64_t sub_2413FF4D4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C8);
  return sub_2414B47B0();
}

void sub_2413FF534(double a1, double a2)
{
  BOOL v4;
  id v5;
  char v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C8);
  sub_2414B47A4();
  v4 = a2 == 1.0 || a2 == 0.0;
  if (v4 && (v6 & 1) == 0 && a1 != a2)
  {
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD670]), sel_initWithStyle_, 0);
    objc_msgSend(v5, sel_impactOccurred);

  }
}

double sub_2413FF5EC()
{
  double result;

  result = 0.0;
  xmmword_257127A80 = 0u;
  *(_OWORD *)algn_257127A90 = 0u;
  return result;
}

double sub_2413FF600@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  if (qword_254383FC0 != -1)
    swift_once();
  result = *(double *)&xmmword_257127A80;
  v3 = *(_OWORD *)algn_257127A90;
  *a1 = xmmword_257127A80;
  a1[1] = v3;
  return result;
}

double sub_2413FF654@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  double result;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[8];
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD v33[5];
  char v34;

  v3 = type metadata accessor for CapsuleProgress(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  sub_2412C6A50(v1, (uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CapsuleProgress);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v22 = swift_allocObject();
  sub_2412DC3B8((uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v6, type metadata accessor for CapsuleProgress);
  v7 = v1 + *(int *)(v3 + 24);
  v8 = *(_OWORD *)(v7 + 48);
  v33[2] = *(_OWORD *)(v7 + 32);
  v33[3] = v8;
  v33[4] = *(_OWORD *)(v7 + 64);
  v34 = *(_BYTE *)(v7 + 80);
  v9 = *(_OWORD *)(v7 + 16);
  v33[0] = *(_OWORD *)v7;
  v33[1] = v9;
  sub_24134E178((uint64_t)v33, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_24134E128);
  sub_241345EFC((uint64_t)v23);
  sub_24134E178((uint64_t)v33, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_24134E1CC);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_2414B4A44();
  sub_2414B31B4();
  v21 = v27;
  LOBYTE(v6) = v28;
  v10 = v29;
  v11 = v30;
  v12 = v31;
  v20 = v32;
  sub_24134E178((uint64_t)v33, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_24134E128);
  sub_241345EFC((uint64_t)v23);
  sub_24134E178((uint64_t)v33, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_24134E1CC);
  v19 = v24;
  v13 = v25;
  v14 = v26;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v15 = sub_2414B3E44();
  v16 = v22;
  *(_QWORD *)a1 = sub_241401240;
  *(_QWORD *)(a1 + 8) = v16;
  *(_QWORD *)(a1 + 16) = v21;
  *(_BYTE *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v10;
  *(_BYTE *)(a1 + 40) = v11;
  v17 = v20;
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v17;
  *(_BYTE *)(a1 + 64) = v15;
  result = *(double *)&v19;
  *(_OWORD *)(a1 + 72) = v19;
  *(_QWORD *)(a1 + 88) = v13;
  *(_QWORD *)(a1 + 96) = v14;
  *(_BYTE *)(a1 + 104) = 0;
  return result;
}

uint64_t sub_2413FF8AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  unsigned int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  double v33;
  uint64_t v34;
  double v35;
  double *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(void);
  uint64_t v42;
  uint64_t v43;
  double v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (**v49)();
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  double *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[10];
  _OWORD v66[5];
  char v67;
  _OWORD v68[5];
  char v69;

  v64 = a3;
  v59 = sub_2414B35A4();
  MEMORY[0x24BDAC7A8](v59);
  v58 = (double *)((char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_2414B3934();
  v55 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v51 - v10;
  v12 = sub_2414B4AE0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127C90);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127C98);
  MEMORY[0x24BDAC7A8](v54);
  v53 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127CA0);
  MEMORY[0x24BDAC7A8](v57);
  v56 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127CA8);
  MEMORY[0x24BDAC7A8](v62);
  v63 = (uint64_t)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127CB0);
  MEMORY[0x24BDAC7A8](v60);
  v61 = (uint64_t)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v18 = sub_2414B3880();
  *((_QWORD *)v18 + 1) = 0;
  v18[16] = 0;
  v23 = (uint64_t)&v18[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257127CB8) + 44)];
  v52 = a2;
  sub_2413FFE88(a2, a1, v23);
  sub_2412C8A04((uint64_t)v11);
  v24 = v55;
  (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v8, *MEMORY[0x24BDEEDE8], v6);
  LOBYTE(a1) = sub_2414B2F80();
  v25 = *(void (**)(char *, uint64_t))(v24 + 8);
  v25(v8, v6);
  v25(v11, v6);
  v26 = (unsigned int *)MEMORY[0x24BDF5098];
  if ((a1 & 1) == 0)
    v26 = (unsigned int *)MEMORY[0x24BDF50D0];
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *v26, v12);
  v27 = (uint64_t)v53;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(&v53[*(int *)(v54 + 36)], v15, v12);
  sub_2412DC3FC((uint64_t)v18, v27, &qword_257127C90);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_2412CBE78((uint64_t)v18, &qword_257127C90);
  v28 = type metadata accessor for CapsuleProgress(0);
  v29 = v52;
  v30 = v52 + *(int *)(v28 + 24);
  v31 = *(_OWORD *)(v30 + 48);
  v68[2] = *(_OWORD *)(v30 + 32);
  v68[3] = v31;
  v68[4] = *(_OWORD *)(v30 + 64);
  v69 = *(_BYTE *)(v30 + 80);
  v32 = *(_OWORD *)(v30 + 16);
  v68[0] = *(_OWORD *)v30;
  v68[1] = v32;
  sub_24134E178((uint64_t)v68, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_24134E128);
  sub_241345EFC((uint64_t)v66);
  sub_24134E178((uint64_t)v68, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_24134E1CC);
  v33 = *(double *)v66;
  swift_release();
  v34 = (uint64_t)v56;
  swift_release();
  swift_release();
  swift_release();
  v35 = v33 * 0.5;
  v36 = v58;
  v37 = (char *)v58 + *(int *)(v59 + 20);
  v38 = *MEMORY[0x24BDEEB68];
  v39 = sub_2414B38C8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v37, v38, v39);
  *v36 = v35;
  v36[1] = v35;
  v40 = v34 + *(int *)(v57 + 36);
  v41 = MEMORY[0x24BDED998];
  sub_2412C6A50((uint64_t)v36, v40, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  *(_WORD *)(v40 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543844D0) + 36)) = 256;
  sub_2412DC3FC(v27, v34, &qword_257127C98);
  sub_2412C68F4((uint64_t)v36, (uint64_t (*)(_QWORD))v41);
  sub_2412CBE78(v27, &qword_257127C98);
  v42 = v29 + *(int *)(v28 + 28);
  v43 = *(_QWORD *)v42;
  LOBYTE(v28) = *(_BYTE *)(v42 + 8);
  sub_2412C7080(*(_QWORD *)v42, v28);
  LOBYTE(v41) = sub_2412F9C24(v43, v28);
  sub_2412C821C(v43, v28);
  v44 = 1.0;
  if ((v41 & 1) == 0)
  {
    v45 = *(_OWORD *)(v30 + 48);
    v66[2] = *(_OWORD *)(v30 + 32);
    v66[3] = v45;
    v66[4] = *(_OWORD *)(v30 + 64);
    v67 = *(_BYTE *)(v30 + 80);
    v46 = *(_OWORD *)(v30 + 16);
    v66[0] = *(_OWORD *)v30;
    v66[1] = v46;
    sub_24134E178((uint64_t)v66, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_24134E128);
    sub_241345EFC((uint64_t)v65);
    sub_24134E178((uint64_t)v66, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_24134E1CC);
    v44 = *(double *)&v65[5];
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  v47 = v63;
  sub_2412DC3FC(v34, v63, &qword_257127CA0);
  *(double *)(v47 + *(int *)(v62 + 36)) = v44;
  sub_2412CBE78(v34, &qword_257127CA0);
  v48 = v61;
  sub_2412DC3FC(v47, v61, &qword_257127CA8);
  v49 = (uint64_t (**)())(v48 + *(int *)(v60 + 36));
  *v49 = sub_241400384;
  v49[1] = 0;
  sub_2412CBE78(v47, &qword_257127CA8);
  return sub_2412EAEA4(v48, v64, &qword_257127CB0);
}

uint64_t sub_2413FFE88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[10];
  __int128 v48;
  __int128 v49;
  __int128 v50;
  _OWORD v51[3];
  __int128 v52;
  __int128 v53;
  char v54;
  _OWORD v55[5];
  char v56;

  v41 = a2;
  v39 = a1;
  v43 = a3;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126D48);
  MEMORY[0x24BDAC7A8](v46);
  v5 = (uint64_t *)((char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v37 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127CC0);
  MEMORY[0x24BDAC7A8](v9);
  v42 = (uint64_t)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v44 = (uint64_t)&v37 - v12;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127CC8);
  MEMORY[0x24BDAC7A8](v40);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v45 = (uint64_t)&v37 - v16;
  v38 = type metadata accessor for CapsuleProgress(0);
  v17 = a1 + *(int *)(v38 + 24);
  v18 = *(_OWORD *)(v17 + 48);
  v55[2] = *(_OWORD *)(v17 + 32);
  v55[3] = v18;
  v55[4] = *(_OWORD *)(v17 + 64);
  v56 = *(_BYTE *)(v17 + 80);
  v19 = *(_OWORD *)(v17 + 16);
  v55[0] = *(_OWORD *)v17;
  v55[1] = v19;
  sub_24134E178((uint64_t)v55, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_24134E128);
  sub_241345EFC((uint64_t)v51);
  sub_24134E178((uint64_t)v55, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_24134E1CC);
  v20 = *((_QWORD *)&v52 + 1);
  swift_release();
  swift_release();
  swift_release();
  sub_24134E178((uint64_t)v55, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_24134E128);
  sub_241345EFC((uint64_t)v51);
  sub_24134E178((uint64_t)v55, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_24134E1CC);
  v21 = *((_QWORD *)&v53 + 1);
  swift_release();
  swift_release();
  swift_release();
  v22 = (_QWORD *)((char *)v5 + *(int *)(v46 + 56));
  *v22 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  swift_storeEnumTagMultiPayload();
  *v5 = v20;
  v5[1] = v21;
  sub_2412EAEA4((uint64_t)v5, (uint64_t)v8, &qword_257126D48);
  v23 = v44;
  sub_2412DC3FC((uint64_t)v8, v44, &qword_257126D48);
  sub_2412CBE78((uint64_t)v8, &qword_257126D48);
  sub_2414B325C();
  sub_2414B4A44();
  sub_2414B31B4();
  sub_2412DC3FC(v23, (uint64_t)v14, &qword_257127CC0);
  v24 = &v14[*(int *)(v40 + 36)];
  v25 = v49;
  *(_OWORD *)v24 = v48;
  *((_OWORD *)v24 + 1) = v25;
  *((_OWORD *)v24 + 2) = v50;
  sub_2412CBE78(v23, &qword_257127CC0);
  sub_2412EAEA4((uint64_t)v14, v45, &qword_257127CC8);
  v26 = *(_OWORD *)(v17 + 48);
  v51[2] = *(_OWORD *)(v17 + 32);
  v52 = v26;
  v53 = *(_OWORD *)(v17 + 64);
  v54 = *(_BYTE *)(v17 + 80);
  v27 = *(_OWORD *)(v17 + 16);
  v51[0] = *(_OWORD *)v17;
  v51[1] = v27;
  sub_24134E178((uint64_t)v51, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_24134E128);
  sub_241345EFC((uint64_t)v47);
  sub_24134E178((uint64_t)v51, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_24134E1CC);
  v28 = v47[6];
  swift_release();
  swift_release();
  swift_release();
  sub_24134E178((uint64_t)v51, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_24134E128);
  sub_241345EFC((uint64_t)v47);
  sub_24134E178((uint64_t)v51, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_24134E1CC);
  v29 = v47[8];
  swift_release();
  swift_release();
  swift_release();
  v30 = (_QWORD *)((char *)v5 + *(int *)(v46 + 56));
  *v30 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  *v5 = v28;
  v5[1] = v29;
  sub_2412EAEA4((uint64_t)v5, (uint64_t)v8, &qword_257126D48);
  v31 = v42;
  sub_2412DC3FC((uint64_t)v8, v42, &qword_257126D48);
  sub_2412CBE78((uint64_t)v8, &qword_257126D48);
  v32 = v44;
  sub_2412EAEA4(v31, v44, &qword_257127CC0);
  v33 = v45;
  sub_2412DC3FC(v45, (uint64_t)v14, &qword_257127CC8);
  sub_2412DC3FC(v32, v31, &qword_257127CC0);
  v34 = v43;
  sub_2412DC3FC((uint64_t)v14, v43, &qword_257127CC8);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127CD0);
  sub_2412DC3FC(v31, v34 + *(int *)(v35 + 48), &qword_257127CC0);
  sub_2412CBE78(v32, &qword_257127CC0);
  sub_2412CBE78(v33, &qword_257127CC8);
  sub_2412CBE78(v31, &qword_257127CC0);
  return sub_2412CBE78((uint64_t)v14, &qword_257127CC8);
}

uint64_t sub_241400384()
{
  return sub_2414B3058();
}

uint64_t sub_2414003AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2414003BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2414003D0(uint64_t a1)
{
  return sub_241401254(a1, type metadata accessor for DraggableViewModifier, (uint64_t (*)(uint64_t, uint64_t))sub_2413FED40);
}

unint64_t sub_2414003E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254383F80;
  if (!qword_254383F80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383F88);
    v2[0] = sub_241400468();
    v2[1] = sub_2412C8FC4(&qword_254384060, &qword_254384068, MEMORY[0x24BDEF370]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254383F80);
  }
  return result;
}

unint64_t sub_241400468()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254383F40;
  if (!qword_254383F40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383F48);
    v2[0] = sub_2414004EC();
    v2[1] = sub_2412C8FC4(&qword_254381058, &qword_254381060, MEMORY[0x24BDEFAD8]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254383F40);
  }
  return result;
}

unint64_t sub_2414004EC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254383E60;
  if (!qword_254383E60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383E68);
    v2[0] = sub_2412C8FC4(&qword_2543840B8, &qword_2543840C0, MEMORY[0x24BDEFB78]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254383E60);
  }
  return result;
}

void sub_241400574(double a1, double a2)
{
  type metadata accessor for DraggableViewModifier(0);
  sub_2413FF534(a1, a2);
}

uint64_t sub_2414005B8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2414005DC(double *a1, double *a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(double, double))(v2 + 16))(*a1, *a2);
}

uint64_t sub_241400608(uint64_t a1)
{
  return sub_241400634(a1, type metadata accessor for DraggableViewModifier, (uint64_t (*)(uint64_t, uint64_t))sub_2413FF2C4);
}

uint64_t sub_241400620(uint64_t a1)
{
  return sub_241400634(a1, type metadata accessor for DraggableViewModifier, (uint64_t (*)(uint64_t, uint64_t))sub_2413FF4D4);
}

uint64_t sub_241400634(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(a2(0) - 8) + 80);
  return a3(a1, v3 + ((v5 + 16) & ~v5));
}

uint64_t objectdestroy_20Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for DraggableViewModifier(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_2414B3274();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_24134E088(*(_QWORD *)(v0 + v3 + 64), *(_QWORD *)(v0 + v3 + 72), *(_QWORD *)(v0 + v3 + 80), *(_QWORD *)(v0 + v3 + 88), *(_BYTE *)(v0 + v3 + 96));
  v8 = v0 + v3 + *(int *)(v1 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_2414B3484();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + ((v3 + v4 + v7) & ~v7), v5);
  return swift_deallocObject();
}

uint64_t sub_2414007B4()
{
  type metadata accessor for DraggableViewModifier(0);
  sub_2414B3274();
  return sub_2413FEFB8();
}

unint64_t sub_241400818()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254383EE8;
  if (!qword_254383EE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383EF0);
    v2[0] = MEMORY[0x24BDF3E20];
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254383EE8);
  }
  return result;
}

unint64_t sub_24140087C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254383F30;
  if (!qword_254383F30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383F38);
    v2[0] = sub_241400900();
    v2[1] = sub_2412C8FC4(&qword_254384038, &qword_254384040, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254383F30);
  }
  return result;
}

unint64_t sub_241400900()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254383E50;
  if (!qword_254383E50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383E58);
    v2[0] = sub_2412C8FC4(&qword_2543840A8, &qword_2543840B0, MEMORY[0x24BDEFB78]);
    v2[1] = MEMORY[0x24BDEBF50];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254383E50);
  }
  return result;
}

uint64_t sub_241400990()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SpringyViewModifier(0) - 8) + 80);
  return sub_2413FBE60(v0 + ((v1 + 16) & ~v1));
}

unint64_t sub_2414009BC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_254383EC0;
  if (!qword_254383EC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383EC8);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383F38);
    v2[3] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383E20);
    v2[4] = sub_24140087C();
    v2[5] = sub_2412C8FC4(&qword_254383E18, &qword_254383E20, MEMORY[0x24BDEC410]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_2412C8FC4(&qword_254384138, &qword_254384140, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254383EC0);
  }
  return result;
}

uint64_t sub_241400AAC()
{
  if (qword_254383B30 != -1)
    swift_once();
  xmmword_254383FD0 = xmmword_254383AE0;
  unk_254383FE0 = *(_OWORD *)algn_254383AF0;
  xmmword_254383FF0 = xmmword_254383B00;
  xmmword_254384000 = xmmword_254383B10;
  qword_254384010 = qword_254383B20;
  unk_254384018 = unk_254383B28;
  swift_retain();
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t sub_241400B3C@<X0>(uint64_t a1@<X8>)
{
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  if (qword_254384028 != -1)
    swift_once();
  v2 = xmmword_254384000;
  v3 = qword_254384010;
  v4 = unk_254384018;
  v5 = unk_254383FE0;
  *(_OWORD *)a1 = xmmword_254383FD0;
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = xmmword_254383FF0;
  *(_OWORD *)(a1 + 48) = v2;
  *(_QWORD *)(a1 + 64) = v3;
  *(_QWORD *)(a1 + 72) = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t sub_241400BC8()
{
  sub_241401984();
  return sub_2414B3340();
}

double sub_241400C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  if (qword_2571207D0 != -1)
    swift_once();
  v0 = qword_257136EB8;
  v1 = qword_2571207C8;
  swift_retain();
  if (v1 != -1)
    swift_once();
  v2 = qword_257136EB0;
  v3 = (void *)objc_opt_self();
  swift_retain();
  v4 = MEMORY[0x242693E80](objc_msgSend(v3, sel_systemFillColor));
  v5 = MEMORY[0x242693E80](objc_msgSend(v3, sel_systemGrayColor));
  xmmword_254383AE0 = xmmword_2414C4B70;
  *(_OWORD *)algn_254383AF0 = xmmword_2414C4B80;
  result = 0.0;
  xmmword_254383B00 = xmmword_2414C4B90;
  qword_254383B10 = v0;
  unk_254383B18 = v2;
  qword_254383B20 = v4;
  unk_254383B28 = v5;
  return result;
}

double sub_241400D24()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  if (qword_2571207D0 != -1)
    swift_once();
  v0 = qword_257136EB8;
  swift_retain();
  v1 = sub_2414B4654();
  v2 = objc_msgSend((id)objc_opt_self(), sel_systemFillColor);
  v3 = MEMORY[0x242693E80](v2);
  v4 = sub_2414B4678();
  *(_QWORD *)&xmmword_257127AA0 = 0x4030000000000000;
  result = 0.0;
  *(__int128 *)((char *)&xmmword_257127AA0 + 8) = 0u;
  *(_OWORD *)&algn_257127AB0[8] = 0u;
  *((_QWORD *)&xmmword_257127AC0 + 1) = 0x3FD0000000000000;
  qword_257127AD0 = v0;
  qword_257127AD8 = v1;
  qword_257127AE0 = v3;
  qword_257127AE8 = v4;
  return result;
}

uint64_t sub_241400DDC(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[5];
  _OWORD v9[5];

  v2 = a1[3];
  v8[2] = a1[2];
  v8[3] = v2;
  v3 = a1[4];
  v4 = a1[1];
  v8[0] = *a1;
  v8[1] = v4;
  v5 = a2[3];
  v9[2] = a2[2];
  v9[3] = v5;
  v9[4] = a2[4];
  v6 = *a2;
  v9[1] = a2[1];
  v8[4] = v3;
  v9[0] = v6;
  return sub_241400F78((double *)v8, (double *)v9) & 1;
}

unint64_t sub_241400E34()
{
  unint64_t result;

  result = qword_254384030;
  if (!qword_254384030)
  {
    result = MEMORY[0x242695AE8](&unk_2414C5068, &_s23CapsuleProgressSpecsKeyVN);
    atomic_store(result, (unint64_t *)&qword_254384030);
  }
  return result;
}

uint64_t objectdestroy_30Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for SpringyViewModifier(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2414B2F44();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_241400F4C(uint64_t a1)
{
  return sub_241400634(a1, type metadata accessor for SpringyViewModifier, (uint64_t (*)(uint64_t, uint64_t))sub_2413FC2C0);
}

uint64_t sub_241400F64(uint64_t a1)
{
  return sub_241400634(a1, type metadata accessor for SpringyViewModifier, (uint64_t (*)(uint64_t, uint64_t))sub_2413FC5AC);
}

uint64_t sub_241400F78(double *a1, double *a2)
{
  if (*a1 == *a2
    && (sub_2414B2F14() & 1) != 0
    && a1[5] == a2[5]
    && (sub_2414B4624() & 1) != 0
    && (sub_2414B4624() & 1) != 0
    && (sub_2414B4624() & 1) != 0)
  {
    return sub_2414B4624();
  }
  else
  {
    return 0;
  }
}

BOOL sub_241401018(double *a1, double *a2)
{
  double v2;
  double v3;
  _BOOL8 result;

  result = 0;
  if (*a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2])
  {
    v2 = a2[7];
    v3 = a1[7];
    if ((sub_2414B2F14() & 1) != 0
      && v3 == v2
      && (sub_2414B4624() & 1) != 0
      && (sub_2414B4624() & 1) != 0
      && (sub_2414B4624() & 1) != 0
      && (sub_2414B4624() & 1) != 0)
    {
      return 1;
    }
  }
  return result;
}

uint64_t sub_241401104(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_241401150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for CapsuleProgress(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = v0 + v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2414B3934();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  v6 = v4 + *(int *)(v1 + 24);
  sub_24134E1CC(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), *(_QWORD *)(v6 + 48), *(_QWORD *)(v6 + 56), *(_QWORD *)(v6 + 64), *(_QWORD *)(v6 + 72), *(_BYTE *)(v6 + 80));
  sub_2412C821C(*(_QWORD *)(v4 + *(int *)(v1 + 28)), *(_BYTE *)(v4 + *(int *)(v1 + 28) + 8));
  return swift_deallocObject();
}

uint64_t sub_241401240(uint64_t a1)
{
  return sub_241401254(a1, type metadata accessor for CapsuleProgress, (uint64_t (*)(uint64_t, uint64_t))sub_2413FF8AC);
}

uint64_t sub_241401254(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(a2(0) - 8) + 80);
  return a3(a1, v3 + ((v5 + 16) & ~v5));
}

unint64_t sub_2414012C4()
{
  unint64_t result;

  result = qword_254383FC8;
  if (!qword_254383FC8)
  {
    result = MEMORY[0x242695AE8](&unk_2414C5030, &_s17DragAreaInsetsKeyVN);
    atomic_store(result, (unint64_t *)&qword_254383FC8);
  }
  return result;
}

unint64_t sub_241401310()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254383F60;
  if (!qword_254383F60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383F68);
    v2[0] = sub_241401394();
    v2[1] = sub_2412C8FC4(&qword_254384160, &qword_254384168, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254383F60);
  }
  return result;
}

unint64_t sub_241401394()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254383E80;
  if (!qword_254383E80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383E90);
    v2[0] = sub_2412C8FC4((unint64_t *)&unk_254383DF8, &qword_254383E08, MEMORY[0x24BDEBC00]);
    v2[1] = sub_2412C8FC4((unint64_t *)&unk_254384148, &qword_254384158, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254383E80);
  }
  return result;
}

uint64_t sub_241401438@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2414B3808();
  *a1 = result;
  return result;
}

uint64_t sub_241401460()
{
  swift_retain();
  return sub_2414B3814();
}

ValueMetadata *_s17DragAreaInsetsKeyVMa()
{
  return &_s17DragAreaInsetsKeyVN;
}

ValueMetadata *_s23CapsuleProgressSpecsKeyVMa()
{
  return &_s23CapsuleProgressSpecsKeyVN;
}

uint64_t destroy for CapsuleProgress.Specs()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for CapsuleProgress.Specs(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v3;
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for CapsuleProgress.Specs(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

_OWORD *assignWithTake for CapsuleProgress.Specs(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  swift_release();
  a1[4] = a2[4];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CapsuleProgress.Specs(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CapsuleProgress.Specs(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CapsuleProgress.Specs()
{
  return &type metadata for CapsuleProgress.Specs;
}

uint64_t sub_24140173C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543841A0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383F88);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383E20);
  sub_2414003E4();
  sub_2412C8FC4(&qword_254383E18, &qword_254383E20, MEMORY[0x24BDEC410]);
  swift_getOpaqueTypeConformance2();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241401808()
{
  uint64_t (*v0)(uint64_t);

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383EC8);
  sub_2414B2F44();
  v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB1F0];
  sub_2414009BC();
  sub_2412C8030(&qword_254380B00, v0, MEMORY[0x24BDEB200]);
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_241401894()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257127D08;
  if (!qword_257127D08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257127D10);
    v2[0] = sub_241401900();
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257127D08);
  }
  return result;
}

unint64_t sub_241401900()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257127D18;
  if (!qword_257127D18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257127D20);
    v2[0] = sub_2412C8FC4(&qword_257127D28, &qword_257127D30, MEMORY[0x24BDEC6F8]);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257127D18);
  }
  return result;
}

unint64_t sub_241401984()
{
  unint64_t result;

  result = qword_257127D38;
  if (!qword_257127D38)
  {
    result = MEMORY[0x242695AE8](&unk_2414C5008, &type metadata for CapsuleProgress.Specs);
    atomic_store(result, (unint64_t *)&qword_257127D38);
  }
  return result;
}

unint64_t sub_2414019D0()
{
  unint64_t result;

  result = qword_2543830D8[0];
  if (!qword_2543830D8[0])
  {
    result = MEMORY[0x242695AE8](&unk_2414C50D8, &type metadata for IsLoadingKey);
    atomic_store(result, qword_2543830D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for IsLoadingKey()
{
  return &type metadata for IsLoadingKey;
}

void sub_241401A24(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  unint64_t v6;
  id v8;
  void *v9;
  id v10;

  if (a3 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return;
  }
  while (1)
  {
    while (__OFSUB__(v6--, 1))
    {
      __break(1u);
LABEL_14:
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      v6 = sub_2414B56C8();
      if (!v6)
        goto LABEL_11;
    }
    if ((a3 & 0xC000000000000001) != 0)
    {
      v8 = (id)MEMORY[0x242694E34](v6, a3);
      goto LABEL_9;
    }
    if ((v6 & 0x8000000000000000) != 0)
      goto LABEL_14;
    if (v6 >= *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_15;
    v8 = *(id *)(a3 + 32 + 8 * v6);
LABEL_9:
    v9 = v8;
    v10 = v8;
    a1(&v10);
    if (v3)
      break;

    if (!v6)
      goto LABEL_11;
  }
  swift_bridgeObjectRelease();

}

id ScopeBar.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

_QWORD *ScopeBar.__allocating_init(scopes:)(uint64_t a1)
{
  objc_class *v1;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_init);
  v4 = (_QWORD *)((char *)v3 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v3) + 0x70));
  swift_beginAccess();
  *v4 = a1;
  v5 = v3;
  swift_bridgeObjectRelease();
  sub_241405F78();

  return v5;
}

id ScopeBar.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void sub_241401C38(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _s11MediaCoreUI8ScopeBarC5coderACyxGSgSo7NSCoderC_tcfc_0();
}

id sub_241401C5C(uint64_t a1, double a2, double a3)
{
  _QWORD *v3;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  objc_class *v10;
  id result;
  void *v12;
  objc_super v13;
  objc_super v14;

  v7 = *MEMORY[0x24BEE4EA0] & *v3;
  v8 = objc_msgSend(v3, sel_isHidden);
  v10 = (objc_class *)type metadata accessor for ScopeBar(0, *(_QWORD *)(v7 + 80), *(_QWORD *)(v7 + 88), v9);
  if ((v8 & 1) != 0)
  {
    v13.receiver = v3;
    v13.super_class = v10;
    return objc_msgSendSuper2(&v13, sel_hitTest_withEvent_, a1, a2, a3);
  }
  else
  {
    v14.receiver = v3;
    v14.super_class = v10;
    result = objc_msgSendSuper2(&v14, sel_hitTest_withEvent_, a1, a2, a3);
    if (result)
    {
      v12 = result;
      objc_opt_self();
      result = (id)swift_dynamicCastObjCClass();
      if (!result)
      {

        return 0;
      }
    }
  }
  return result;
}

id sub_241401D50(void *a1, double a2, double a3, uint64_t a4, void *a5)
{
  id v9;
  id v10;
  id v11;

  v9 = a5;
  v10 = a1;
  v11 = sub_241401C5C((uint64_t)a5, a2, a3);

  return v11;
}

double sub_241401DB8()
{
  _QWORD *v0;

  return *(double *)((char *)v0 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x60));
}

void sub_241401DE0(double a1, double a2, double a3, double a4)
{
  _QWORD *v4;
  double *v5;

  v5 = (double *)((char *)v4 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x60));
  *v5 = a1;
  v5[1] = a2;
  v5[2] = a3;
  v5[3] = a4;
}

id sub_241401E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  objc_class *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double *v15;
  double *v16;
  void *v17;
  objc_super v19;

  v5 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v6 = (objc_class *)type metadata accessor for ScopeBar(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x58), a4);
  v19.receiver = v4;
  v19.super_class = v6;
  objc_msgSendSuper2(&v19, sel_layoutSubviews);
  objc_msgSend(v4, sel_bounds);
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v15 = (double *)((char *)v4 + *(_QWORD *)((*v5 & *v4) + 0x60));
  if (sub_241376460(v15[2], v15[3], v11, v13))
  {
    sub_2414053D8();
    sub_24140564C();
    sub_2412CE288();
  }
  v16 = (double *)((char *)v4 + *(_QWORD *)((*v5 & *v4) + 0x60));
  *v16 = v8;
  v16[1] = v10;
  v16[2] = v12;
  v16[3] = v14;
  v17 = (void *)objc_opt_self();
  objc_msgSend(v17, sel_begin);
  objc_msgSend(v17, sel_setDisableActions_, 1);
  objc_msgSend(*(id *)((char *)v4 + *(_QWORD *)((*v5 & *v4) + 0x98)), sel_setFrame_, v8, v10, v12, v14);
  return objc_msgSend(v17, sel_commit);
}

void sub_241401F4C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v4 = a1;
  sub_241401E08((uint64_t)v4, v1, v2, v3);

}

void sub_241401F80(void *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v12 = a1;
  sub_241401FE4(a2, a3, a4, a5, (uint64_t)v12, v9, v10, v11);

}

void sub_241401FE4(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  objc_class *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  objc_super v22;
  objc_super v23;

  v13 = (objc_class *)type metadata accessor for ScopeBar(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v8) + 0x50), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v8) + 0x58), a8);
  v23.receiver = v8;
  v23.super_class = v13;
  objc_msgSendSuper2(&v23, sel_contentInset);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v22.receiver = v8;
  v22.super_class = v13;
  objc_msgSendSuper2(&v22, sel_setContentInset_, a1, a2, a3, a4);
  sub_2414020B4(v15, v17, v19, v21);
}

void sub_2414020B4(double a1, double a2, double a3, double a4)
{
  _QWORD *v4;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  _QWORD *v27;
  uint64_t v28;
  _QWORD v29[2];
  char v30;

  v9 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v10 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50);
  v11 = sub_2414B53B0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v29 - v13;
  v15 = *(_QWORD *)(v10 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v29 - v18;
  objc_msgSend(v4, sel_contentInset, v17);
  if (v23 != a1 || v20 != a2 || v21 != a3 || v22 != a4)
  {
    sub_241403130((uint64_t)v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v10) == 1)
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v19, v14, v10);
      v27 = (_QWORD *)((char *)v4 + *(_QWORD *)((*v9 & *v4) + 0x70));
      swift_beginAccess();
      v29[0] = *v27;
      v28 = sub_2414B4F60();
      MEMORY[0x242695AE8](MEMORY[0x24BEE12E0], v28);
      sub_2414B5158();
      if (v30 != 1)
        sub_241406EC8(v29[1], 0, 0);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v10);
    }
    sub_2412CE288();
  }
}

double sub_2414022AC(void *a1)
{
  id v1;
  double v2;
  double v3;

  v1 = a1;
  sub_2414022EC();
  v3 = v2;

  return v3;
}

uint64_t sub_2414022EC()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  double v5;
  double v6;
  id v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v1 = *(_QWORD *)((char *)v0 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0));
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_2414B56C8();
    v2 = result;
    v19 = v0;
    if (!result)
      goto LABEL_21;
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    v19 = v0;
    if (!v2)
      goto LABEL_21;
  }
  if (v2 < 1)
  {
LABEL_27:
    __break(1u);
    return result;
  }
  v4 = 0;
  v5 = 0.0;
  v6 = 0.0;
  do
  {
    if ((v1 & 0xC000000000000001) != 0)
      v7 = (id)MEMORY[0x242694E34](v4, v1);
    else
      v7 = *(id *)(v1 + 8 * v4 + 32);
    v8 = v7;
    objc_msgSend(v7, sel_intrinsicContentSize);
    v10 = v9;
    v12 = v11;
    if (qword_254384530 != -1)
      swift_once();
    v13 = *(double *)&qword_254384550;
    v14 = *(double *)&qword_254384560;
    if (qword_2543845C0 != -1)
      swift_once();
    ++v4;
    v6 = v6 + v10 - (v13 + v14);
    v15 = *(double *)&qword_2543845B0;

    if (v5 > v12)
      v16 = v5;
    else
      v16 = v12;
    if (v16 > v15)
      v5 = v16;
    else
      v5 = v15;
  }
  while (v2 != v4);
LABEL_21:
  result = swift_bridgeObjectRelease();
  v17 = *(_QWORD *)((char *)v19 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v19) + 0xA0));
  if (!(v17 >> 62))
  {
    if (!__OFSUB__(*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10), 1))
      return result;
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  v18 = sub_2414B56C8();
  result = swift_bridgeObjectRelease();
  if (__OFSUB__(v18, 1))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  return result;
}

double sub_241402528(double a1, double a2)
{
  void *v2;
  double v5;
  double v6;

  objc_msgSend(v2, sel_intrinsicContentSize);
  v6 = v5;
  if (sub_2412FE7EC(a1, 0.0) || a1 == 1.79769313e308)
    a1 = v6;
  sub_2412FE7EC(a2, 0.0);
  return a1;
}

double sub_2414025C8(void *a1, double a2, double a3)
{
  id v5;
  double v6;

  v5 = a1;
  v6 = sub_241402528(a2, a3);

  return v6;
}

void sub_241402618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  id v6;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for ScopeBar(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  objc_msgSendSuper2(&v7, sel_tintColorDidChange);
  v6 = sub_24140525C();
  if (qword_254384528 != -1)
    swift_once();
  objc_msgSend(v6, sel_setBackgroundColor_, qword_254384520);

}

void sub_2414026B8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v4 = a1;
  sub_241402618((uint64_t)v4, v1, v2, v3);

}

id sub_2414026EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  objc_class *v6;
  double *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  objc_super v14;

  v5 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v6 = (objc_class *)type metadata accessor for ScopeBar(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x58), a4);
  v14.receiver = v4;
  v14.super_class = v6;
  objc_msgSendSuper2(&v14, sel_layoutMarginsDidChange);
  v7 = (double *)((char *)v4 + *(_QWORD *)((*v5 & *v4) + 0x68));
  swift_beginAccess();
  if (((_BYTE)v7[4] & 1) != 0)
  {
    objc_msgSend(v4, sel_layoutMargins);
    v9 = v8;
    objc_msgSend(v4, sel_layoutMargins);
    v11 = 0.0;
    v12 = 0.0;
  }
  else
  {
    v12 = v7[2];
    v10 = v7[3];
    v11 = *v7;
    v9 = v7[1];
  }
  return objc_msgSend(v4, sel_setContentInset_, v11, v9, v12, v10);
}

void sub_2414027C0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v4 = a1;
  sub_2414026EC((uint64_t)v4, v1, v2, v3);

}

uint64_t sub_2414027F4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  objc_class *v7;
  objc_super v8;

  v3 = *v1;
  v4 = *MEMORY[0x24BEE4EA0];
  objc_opt_self();
  if (swift_dynamicCastObjCClass())
    return 1;
  v7 = (objc_class *)type metadata accessor for ScopeBar(0, *(_QWORD *)((v4 & v3) + 0x50), *(_QWORD *)((v4 & v3) + 0x58), v5);
  v8.receiver = v1;
  v8.super_class = v7;
  return (uint64_t)objc_msgSendSuper2(&v8, sel_touchesShouldCancelInContentView_, a1);
}

uint64_t sub_241402878(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  LOBYTE(a1) = sub_2414027F4((uint64_t)v4);

  return a1 & 1;
}

uint64_t ScopeBar.ContentInsetMode.hash(into:)()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 32) & 1) != 0)
    return sub_2414B58D8();
  sub_2414B58D8();
  return UIEdgeInsets.hash(into:)();
}

uint64_t static ScopeBar.ContentInsetMode.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2;

  v2 = *(_BYTE *)(a1 + 32) & *(_BYTE *)(a2 + 32);
  if ((*(_BYTE *)(a1 + 32) & 1) == 0 && (*(_BYTE *)(a2 + 32) & 1) == 0)
    v2 = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)a1, *(float64x2_t *)a2), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 16), *(float64x2_t *)(a2 + 16)))), 0xFuLL)));
  return v2 & 1;
}

uint64_t ScopeBar.ContentInsetMode.hashValue.getter()
{
  sub_2414B58CC();
  ScopeBar.ContentInsetMode.hash(into:)();
  return sub_2414B58FC();
}

uint64_t sub_2414029DC()
{
  sub_2414B58CC();
  ScopeBar.ContentInsetMode.hash(into:)();
  return sub_2414B58FC();
}

id sub_241402A18()
{
  _QWORD *v0;
  double *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;

  v1 = (double *)((char *)v0 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x68));
  swift_beginAccess();
  if (((_BYTE)v1[4] & 1) != 0)
  {
    objc_msgSend(v0, sel_layoutMargins);
    v3 = v2;
    objc_msgSend(v0, sel_layoutMargins);
    v5 = 0.0;
    v6 = 0.0;
  }
  else
  {
    v6 = v1[2];
    v4 = v1[3];
    v5 = *v1;
    v3 = v1[1];
  }
  return objc_msgSend(v0, sel_setContentInset_, v5, v3, v6, v4);
}

__n128 sub_241402AC0@<Q0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  char *v3;
  char v4;
  __n128 result;
  __int128 v6;

  v3 = (char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x68);
  swift_beginAccess();
  v4 = v3[32];
  result = *(__n128 *)v3;
  v6 = *((_OWORD *)v3 + 1);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = v4;
  return result;
}

id sub_241402B24(__int128 *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char *v5;
  __int128 v7;

  v7 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  v4 = *((_BYTE *)a1 + 32);
  v5 = (char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x68);
  swift_beginAccess();
  *(_OWORD *)v5 = v7;
  *((_QWORD *)v5 + 2) = v2;
  *((_QWORD *)v5 + 3) = v3;
  v5[32] = v4;
  return sub_241402A18();
}

id (*sub_241402BA8(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_241402C00;
}

id sub_241402C00(uint64_t a1, char a2)
{
  id result;

  result = (id)swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_241402A18();
  return result;
}

uint64_t sub_241402C30()
{
  sub_24140B964();
  return swift_bridgeObjectRetain();
}

uint64_t sub_241402C44(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = (_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x70));
  swift_beginAccess();
  *v3 = a1;
  swift_bridgeObjectRelease();
  return sub_241405F78();
}

uint64_t (*sub_241402CB0(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_241402D08;
}

uint64_t sub_241402D08(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_241405F78();
  return result;
}

uint64_t sub_241402D38@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *);
  __int128 v10;

  v10 = *(_OWORD *)(a2 + a1 - 16);
  v4 = sub_24140BE54();
  v5 = v4;
  v7 = v6;
  if (v4)
  {
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = v10;
    *(_QWORD *)(v4 + 32) = v5;
    *(_QWORD *)(v4 + 40) = v7;
    v8 = sub_24140C444;
  }
  else
  {
    v8 = 0;
  }
  *a3 = v8;
  a3[1] = v4;
  return sub_2412D2824(v5);
}

uint64_t sub_241402DC0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);

  v4 = *a1;
  v5 = a1[1];
  if (*a1)
  {
    v6 = a4 + a3;
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = *(_OWORD *)(v6 - 16);
    *(_QWORD *)(v7 + 32) = v4;
    *(_QWORD *)(v7 + 40) = v5;
    v8 = sub_24140C414;
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  sub_2412D2824(v4);
  return sub_241402E7C((uint64_t)v8, v7);
}

uint64_t sub_241402E4C()
{
  uint64_t v0;

  v0 = sub_24140BE54();
  sub_2412D2824(v0);
  return v0;
}

uint64_t sub_241402E7C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (_QWORD *)((char *)v2 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + 0x78));
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return sub_2412C9444(v6);
}

uint64_t (*sub_241402EE8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_241402F3C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD *, _QWORD *);

  v2 = sub_24140BEA8();
  v3 = v2;
  v5 = v4;
  if (v2)
  {
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = v3;
    *(_QWORD *)(v2 + 24) = v5;
    v6 = sub_24140C3C8;
  }
  else
  {
    v6 = 0;
  }
  *a1 = v6;
  a1[1] = v2;
  return sub_2412D2824(v3);
}

uint64_t sub_241402FA8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_24140C394;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  sub_2412D2824(v1);
  return sub_2413014DC((uint64_t)v4, v3);
}

uint64_t sub_241403028()
{
  uint64_t v0;

  v0 = sub_24140BEA8();
  sub_2412D2824(v0);
  return v0;
}

uint64_t (*sub_241403058())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_2414030AC(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_2414B53B0();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - v4;
  (*(void (**)(char *, uint64_t, double))(v6 + 16))((char *)&v8 - v4, a1, v3);
  return sub_2414031B0((uint64_t)v5);
}

uint64_t sub_241403130@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  char *v3;
  uint64_t v4;

  v3 = (char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x88);
  swift_beginAccess();
  v4 = sub_2414B53B0();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2414031B0(uint64_t a1)
{
  _QWORD *v1;
  char *v3;
  uint64_t v4;

  v3 = (char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x88);
  swift_beginAccess();
  v4 = sub_2414B53B0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t sub_241403238(uint64_t a1, int a2)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  _BYTE *v15;
  unint64_t v16;
  int v17;
  uint64_t *v18;
  uint64_t v19;
  _BYTE v21[12];
  int v22;
  uint64_t v23;
  unint64_t v24;
  unsigned __int8 v25;

  v3 = v2;
  v22 = a2;
  v5 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v6 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + 0x50);
  v7 = sub_2414B53B0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v21[-v9];
  v11 = *(_QWORD *)(v6 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = &v21[-v14];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v8 + 16))(v10, a1, v7, v13);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v6) == 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
    v16 = 0;
    v17 = 1;
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32))(v15, v10, v6);
    v18 = (_QWORD *)((char *)v3 + *(_QWORD *)((*v5 & *v3) + 0x70));
    swift_beginAccess();
    v23 = *v18;
    v19 = sub_2414B4F60();
    MEMORY[0x242695AE8](MEMORY[0x24BEE12E0], v19);
    sub_2414B5158();
    (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v15, v6);
    v16 = v24;
    v17 = v25;
  }
  return sub_2414033F8(v16, v17, v22 & 1);
}

uint64_t sub_2414033F8(unint64_t a1, int a2, int a3)
{
  _QWORD *v3;
  _QWORD *v4;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(void (*)(_QWORD, _QWORD), uint64_t, uint64_t, int64_t);
  void (*v36)(_QWORD, _QWORD);
  void (*v37)(_QWORD, _QWORD);
  char *v38;
  void (*v39)(char *, uint64_t, uint64_t);
  char *v40;
  unsigned int (*v41)(char *, uint64_t, int64_t);
  unsigned int v42;
  unint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  unint64_t v47;
  int v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  unint64_t isUniquelyReferenced_nonNull_native;
  void (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  unint64_t *p_aBlock;
  void *v57;
  uint64_t v58;
  unint64_t v59;
  id v60;
  id v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char v70;
  void (*v71)(char *, int64_t);
  char *v72;
  id v73;
  id v74;
  void (*v75)(uint64_t, uint64_t);
  id v76;
  void (*v77)(_QWORD, _QWORD);
  char *v78;
  _BOOL8 v79;
  id v80;
  uint64_t v81;
  char *v82;
  _QWORD *v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t, uint64_t);
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  unint64_t v89;
  uint64_t v90;
  _BOOL8 v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  BOOL v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  char v101;
  BOOL v102;
  id v103;
  void *v104;
  uint64_t v105;
  unint64_t v106;
  void *v107;
  _QWORD *v108;
  _QWORD *v109;
  void *v110;
  _QWORD *v111;
  uint64_t result;
  char *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  int v119;
  uint64_t v120;
  char *v121;
  char *v122;
  _QWORD *v123;
  int64_t v124;
  unsigned int (*v125)(char *, uint64_t, int64_t);
  char *v126;
  uint64_t v127;
  void (*v128)(_QWORD, _QWORD);
  uint64_t TupleTypeMetadata2;
  void (*v130)(char *, uint64_t, uint64_t);
  unint64_t v131;
  char **v132;
  uint64_t v133;
  unint64_t v134;
  void (*v135)(_QWORD, _QWORD, _QWORD);
  void (*v136)(_QWORD, _QWORD);
  unint64_t aBlock;
  uint64_t v138;
  void *v139;
  void *v140;
  void *v141;
  _QWORD *v142;
  uint64_t v143;

  v4 = v3;
  LODWORD(v124) = a3;
  v131 = a1;
  v120 = *MEMORY[0x24BEE4EA0] & *v3;
  v6 = *(_QWORD *)(v120 + 80);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v121 = (char *)&v113 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v115 = (char *)&v113 - v10;
  MEMORY[0x24BDAC7A8](v11);
  v113 = (char *)&v113 - v12;
  v13 = sub_2414B53B0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v116 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v15 = (char *)&v113 - v14;
  v16 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v114 = (char *)&v113 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v117 = (char *)&v113 - v20;
  MEMORY[0x24BDAC7A8](v21);
  v118 = (char *)&v113 - v22;
  MEMORY[0x24BDAC7A8](v23);
  v132 = (char **)((char *)&v113 - v24);
  MEMORY[0x24BDAC7A8](v25);
  v122 = (char *)&v113 - v26;
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v113 - v28;
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&v113 - v31;
  MEMORY[0x24BDAC7A8](v33);
  v126 = (char *)&v113 - v34;
  v127 = swift_allocBox();
  v133 = v7;
  v35 = *(void (**)(void (*)(_QWORD, _QWORD), uint64_t, uint64_t, int64_t))(v7 + 56);
  v37 = v36;
  v35(v36, 1, 1, v6);
  v128 = v37;
  v119 = a2;
  if ((a2 & 1) == 0)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v38 = v126;
    sub_2414B4F78();
    v37 = v128;
    swift_bridgeObjectRelease();
    v35((void (*)(_QWORD, _QWORD))v38, 0, 1, v6);
    (*(void (**)(void (*)(_QWORD, _QWORD), char *, uint64_t))(v16 + 40))(v37, v38, v13);
  }
  v39 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v39(v32, (uint64_t)v37, v13);
  sub_241403130((uint64_t)v29);
  v40 = &v15[*(int *)(TupleTypeMetadata2 + 48)];
  v39(v15, (uint64_t)v32, v13);
  v39(v40, (uint64_t)v29, v13);
  v41 = *(unsigned int (**)(char *, uint64_t, int64_t))(v133 + 48);
  v42 = v41(v15, 1, v6);
  v123 = v4;
  v130 = v39;
  if (v42 == 1)
  {
    v43 = *(_QWORD *)(v16 + 8);
    ((void (*)(char *, uint64_t))v43)(v29, v13);
    ((void (*)(char *, uint64_t))v43)(v32, v13);
    if (v41(v40, 1, v6) == 1)
    {
      ((void (*)(char *, uint64_t))v43)(v15, v13);
      return swift_release();
    }
    v125 = v41;
  }
  else
  {
    v44 = v122;
    v39(v122, (uint64_t)v15, v13);
    v125 = v41;
    if (v41(v40, 1, v6) != 1)
    {
      v68 = v133;
      v69 = v113;
      (*(void (**)(char *, char *, int64_t))(v133 + 32))(v113, v40, v6);
      v70 = sub_2414B4CE4();
      v71 = *(void (**)(char *, int64_t))(v68 + 8);
      v71(v69, v6);
      v43 = *(_QWORD *)(v16 + 8);
      ((void (*)(char *, uint64_t))v43)(v29, v13);
      ((void (*)(char *, uint64_t))v43)(v32, v13);
      v71(v122, v6);
      v45 = v123;
      ((void (*)(char *, uint64_t))v43)(v15, v13);
      v46 = v127;
      v47 = MEMORY[0x24BEE4EA0];
      if ((v70 & 1) != 0)
        return swift_release();
      goto LABEL_10;
    }
    v43 = *(_QWORD *)(v16 + 8);
    ((void (*)(char *, uint64_t))v43)(v29, v13);
    ((void (*)(char *, uint64_t))v43)(v32, v13);
    (*(void (**)(char *, int64_t))(v133 + 8))(v44, v6);
  }
  v45 = v123;
  (*(void (**)(char *, uint64_t))(v116 + 8))(v15, TupleTypeMetadata2);
  v46 = v127;
  v47 = MEMORY[0x24BEE4EA0];
LABEL_10:
  v48 = v119 & 1;
  sub_241403130((uint64_t)v132);
  v49 = *(_QWORD *)((char *)v45 + *(_QWORD *)((*(_QWORD *)v47 & *v45) + 0xA8));
  v50 = (uint64_t)v126;
  v130(v126, (uint64_t)v128, v13);
  v123 = (id)v49;
  sub_2414031B0(v50);
  LODWORD(TupleTypeMetadata2) = v48;
  if (v48)
  {
    v51 = *(_QWORD *)v47 & *v45;
    v52 = *(void **)((char *)v45 + *(_QWORD *)(v51 + 0xA8));
    isUniquelyReferenced_nonNull_native = v131;
    if (v52)
    {
      objc_msgSend(v52, sel_removeFromSuperview);
      v51 = *(_QWORD *)v47 & *v45;
    }
    v54 = v130;
    v55 = *(_QWORD *)(v51 + 168);
    p_aBlock = *(unint64_t **)((char *)v45 + v55);
    *(_QWORD *)((char *)v45 + v55) = 0;
    goto LABEL_21;
  }
  v126 = (char *)v49;
  v49 = v43;
  isUniquelyReferenced_nonNull_native = v131;
  v57 = (void *)sub_24140440C(v131, v45, v124 & 1);
  v58 = *(_QWORD *)((*(_QWORD *)v47 & *v45) + 0xA8);
  v59 = *(_QWORD *)((char *)v45 + v58);
  *(_QWORD *)((char *)v45 + v58) = v57;
  p_aBlock = v57;

  v43 = *(_QWORD *)((char *)v45 + *(_QWORD *)((*(_QWORD *)v47 & *v45) + 0xA0));
  if ((v43 & 0xC000000000000001) != 0)
    goto LABEL_80;
  if ((isUniquelyReferenced_nonNull_native & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10) > isUniquelyReferenced_nonNull_native)
  {
    v60 = *(id *)(v43 + 8 * isUniquelyReferenced_nonNull_native + 32);
    goto LABEL_18;
  }
  __break(1u);
LABEL_83:
  __break(1u);
  do
  {
    swift_bridgeObjectRetain();
    v73 = (id)MEMORY[0x242694E34](p_aBlock, v59);
    swift_bridgeObjectRelease();
    v72 = v115;
    v46 = v127;
    isUniquelyReferenced_nonNull_native = v131;
LABEL_31:
    v74 = objc_msgSend(v73, sel_hoverStyle);

    if (v74)
    {
      objc_msgSend(v74, sel_setEnabled_, 1);

    }
    (*(void (**)(char *, int64_t))(v133 + 8))(v72, v6);
    while (2)
    {
      v67 = v117;
LABEL_35:
      v59 = sub_241312FC8(MEMORY[0x24BEE4AF8]);
      if ((v124 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_24140478C(v45, v46, isUniquelyReferenced_nonNull_native, TupleTypeMetadata2, 0);
        v76 = sub_24140525C();
        v77 = v128;
        swift_beginAccess();
        v78 = v114;
        v130(v114, (uint64_t)v77, v13);
        v79 = v125(v78, 1, v6) == 1;
        ((void (*)(char *, uint64_t))v43)(v78, v13);
        objc_msgSend(v76, sel_setHidden_, v79);

        if (v49)
        {
          v80 = v123;
          objc_msgSend(v123, sel_removeFromSuperview);

        }
        ((void (*)(char **, uint64_t))v43)(v132, v13);
        return swift_release();
      }
      v130(v67, (uint64_t)v132, v13);
      if (v125(v67, 1, v6) == 1)
      {
        ((void (*)(char *, uint64_t))v43)(v67, v13);
        v75 = (void (*)(uint64_t, uint64_t))v43;
LABEL_77:
        v102 = (_DWORD)TupleTypeMetadata2 != 0;
        v103 = sub_24140525C();
        objc_msgSend(v103, sel_setHidden_, 0);

        v104 = (void *)objc_opt_self();
        v105 = swift_allocObject();
        *(_QWORD *)(v105 + 16) = v45;
        *(_QWORD *)(v105 + 24) = v46;
        *(_QWORD *)(v105 + 32) = isUniquelyReferenced_nonNull_native;
        *(_BYTE *)(v105 + 40) = v102;
        *(_BYTE *)(v105 + 41) = 1;
        *(_QWORD *)(v105 + 48) = v59;
        v141 = sub_24140BF30;
        v142 = (_QWORD *)v105;
        v106 = MEMORY[0x24BDAC760];
        aBlock = MEMORY[0x24BDAC760];
        v138 = 1107296256;
        v139 = sub_2413002C8;
        v140 = &block_descriptor_16;
        v107 = _Block_copy(&aBlock);
        v108 = v45;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_release();
        v109 = (_QWORD *)swift_allocObject();
        v109[2] = v59;
        v109[3] = v46;
        v109[4] = v108;
        v141 = sub_24140BF7C;
        v142 = v109;
        aBlock = v106;
        v138 = 1107296256;
        v139 = sub_24132A888;
        v140 = &block_descriptor_9;
        v110 = _Block_copy(&aBlock);
        v111 = v108;
        swift_retain();
        swift_release();
        objc_msgSend(v104, sel_animateWithDuration_delay_usingSpringWithDamping_initialSpringVelocity_options_animations_completion_, 2, v107, v110, 0.35, 0.0, 0.8, 1.0);
        _Block_release(v110);
        _Block_release(v107);

        v75((uint64_t)v132, v13);
        return swift_release();
      }
      v126 = (char *)v43;
      v81 = v133;
      v82 = v121;
      (*(void (**)(char *, char *, int64_t))(v133 + 32))(v121, v67, v6);
      if ((_DWORD)TupleTypeMetadata2)
      {
        (*(void (**)(char *, int64_t))(v81 + 8))(v82, v6);
LABEL_76:
        v75 = (void (*)(uint64_t, uint64_t))v126;
        goto LABEL_77;
      }
      v125 = (unsigned int (*)(char *, uint64_t, int64_t))v13;
      v83 = (_QWORD *)((char *)v45 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v45) + 0x70));
      swift_beginAccess();
      v136 = (void (*)(_QWORD, _QWORD))*v83;
      v84 = sub_2414B4F60();
      MEMORY[0x242695AE8](MEMORY[0x24BEE12E0], v84);
      sub_2414B5158();
      v13 = (uint64_t)v82;
      if (v138 == 1)
      {
        (*(void (**)(char *, int64_t))(v133 + 8))(v82, v6);
LABEL_75:
        v13 = (uint64_t)v125;
        goto LABEL_76;
      }
      v124 = v6;
      v85 = (void (*)(char *, uint64_t, uint64_t))aBlock;
      v135 = (void (*)(_QWORD, _QWORD, _QWORD))isUniquelyReferenced_nonNull_native;
      v136 = (void (*)(_QWORD, _QWORD))aBlock;
      p_aBlock = (unint64_t *)MEMORY[0x24BEE1768];
      v47 = MEMORY[0x24BEE1780];
      sub_2414B5818();
      v6 = aBlock;
      v130 = v85;
      v134 = isUniquelyReferenced_nonNull_native;
      v135 = (void (*)(_QWORD, _QWORD, _QWORD))v85;
      sub_2414B580C();
      v43 = (unint64_t)v136;
      if ((uint64_t)v136 < v6)
        goto LABEL_87;
      v86 = v133;
      v128 = v136;
      do
      {
        if (isUniquelyReferenced_nonNull_native == v6)
          goto LABEL_63;
        if (v130 != (void (*)(char *, uint64_t, uint64_t))v6)
        {
          v46 = v49;
          v87 = (_QWORD *)sub_24140440C(v6, v45, 1);
          v43 = (unint64_t)v87;
LABEL_52:
          v88 = v87;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          aBlock = v59;
          p_aBlock = (unint64_t *)v59;
          v49 = sub_2413D7758(v6);
          v90 = *(_QWORD *)(v59 + 16);
          v91 = (v89 & 1) == 0;
          v92 = v90 + v91;
          if (__OFADD__(v90, v91))
            goto LABEL_79;
          v47 = v89;
          if (*(_QWORD *)(v59 + 24) >= v92)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
              goto LABEL_57;
            v13 = (uint64_t)v45;
            p_aBlock = &aBlock;
            sub_24140B0CC();
          }
          else
          {
            sub_241409454(v92, isUniquelyReferenced_nonNull_native);
            p_aBlock = (unint64_t *)aBlock;
            v93 = sub_2413D7758(v6);
            if ((v47 & 1) != (v94 & 1))
              goto LABEL_88;
            v49 = v93;
LABEL_57:
            v13 = (uint64_t)v45;
          }
          isUniquelyReferenced_nonNull_native = v131;
          v59 = aBlock;
          if ((v47 & 1) != 0)
          {
            p_aBlock = *(unint64_t **)(aBlock + 56);

            p_aBlock[v49] = v43;
          }
          else
          {
            *(_QWORD *)(aBlock + 8 * (v49 >> 6) + 64) |= 1 << v49;
            v95 = 8 * v49;
            *(_QWORD *)(*(_QWORD *)(v59 + 48) + v95) = v6;
            *(_QWORD *)(*(_QWORD *)(v59 + 56) + v95) = v43;
            v96 = *(_QWORD *)(v59 + 16);
            v97 = __OFADD__(v96, 1);
            v98 = v96 + 1;
            if (v97)
              goto LABEL_83;
            *(_QWORD *)(v59 + 16) = v98;
          }

          swift_bridgeObjectRelease();
          v45 = (_QWORD *)v13;
          v86 = v133;
          v13 = (uint64_t)v121;
          v49 = v46;
          v43 = (unint64_t)v128;
LABEL_63:
          if (v43 == v6)
            goto LABEL_74;
          goto LABEL_64;
        }
        if (v49)
        {
          v87 = v123;
          v46 = v49;
          v43 = v49;
          goto LABEL_52;
        }
        p_aBlock = (unint64_t *)v59;
        v99 = sub_2413D7758((uint64_t)v130);
        if ((v100 & 1) != 0)
        {
          v47 = v99;
          v101 = swift_isUniquelyReferenced_nonNull_native();
          aBlock = v59;
          if ((v101 & 1) == 0)
          {
            sub_24140B0CC();
            v59 = aBlock;
          }
          p_aBlock = *(unint64_t **)(*(_QWORD *)(v59 + 56) + 8 * v47);
          sub_24140A098(v47, v59);

          swift_bridgeObjectRelease();
        }
        v86 = v133;
        if (v43 == v6)
        {
LABEL_74:
          (*(void (**)(uint64_t, int64_t))(v86 + 8))(v13, v124);
          v46 = v127;
          goto LABEL_75;
        }
LABEL_64:
        v97 = __OFADD__(v6++, 1);
      }
      while (!v97);
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      swift_bridgeObjectRetain();
      v60 = (id)MEMORY[0x242694E34](isUniquelyReferenced_nonNull_native, v43);
      swift_bridgeObjectRelease();
LABEL_18:
      v61 = objc_msgSend(v60, sel_hoverStyle);

      if (v61)
      {
        objc_msgSend(v61, sel_setEnabled_, 0);

      }
      v43 = v49;
      v49 = (unint64_t)v126;
      v54 = v130;
LABEL_21:

      v62 = v118;
      v54(v118, (uint64_t)v132, v13);
      if (v125(v62, 1, v6) == 1)
      {
        ((void (*)(char *, uint64_t))v43)(v62, v13);
        continue;
      }
      break;
    }
    v63 = v133;
    v64 = v115;
    (*(void (**)(char *, char *, int64_t))(v133 + 32))(v115, v62, v6);
    v65 = (_QWORD *)((char *)v45 + *(_QWORD *)((*(_QWORD *)v47 & *v45) + 0x70));
    swift_beginAccess();
    v143 = *v65;
    v66 = sub_2414B4F60();
    MEMORY[0x242695AE8](MEMORY[0x24BEE12E0], v66);
    sub_2414B5158();
    if (v138 == 1)
    {
      (*(void (**)(char *, int64_t))(v63 + 8))(v64, v6);
      v46 = v127;
      v67 = v117;
      isUniquelyReferenced_nonNull_native = v131;
      goto LABEL_35;
    }
    p_aBlock = (unint64_t *)aBlock;
    v59 = *(_QWORD *)((char *)v45 + *(_QWORD *)((*(_QWORD *)v47 & *v45) + 0xA0));
  }
  while ((v59 & 0xC000000000000001) != 0);
  v72 = v115;
  v46 = v127;
  isUniquelyReferenced_nonNull_native = v131;
  if ((aBlock & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (aBlock < *(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v73 = *(id *)(v59 + 8 * aBlock + 32);
    goto LABEL_31;
  }
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  result = sub_2414B583C();
  __break(1u);
  return result;
}

uint64_t sub_24140440C(unint64_t a1, _QWORD *a2, char a3)
{
  double v3;
  double v4;
  double v5;
  double v6;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  id v22;
  id v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t result;
  _QWORD aBlock[6];

  v9 = a1;
  v10 = (_QWORD *)(*MEMORY[0x24BEE4EA0] & *a2);
  v11 = v10[10];
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v14 = (char *)&aBlock[-1] - v13;
  v16 = *(_QWORD *)(v15 + v10[20]);
  if ((v16 & 0xC000000000000001) == 0)
  {
    if ((v9 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10) > v9)
    {
      v17 = *(id *)(v16 + 8 * v9 + 32);
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  v17 = (id)MEMORY[0x242694E34](v9, v16);
  swift_bridgeObjectRelease();
LABEL_5:
  objc_msgSend(v17, sel_frame);
  v3 = v18;
  v4 = v19;
  v5 = v20;
  v6 = v21;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_2414B4F78();
  swift_bridgeObjectRelease();
  v9 = (unint64_t)sub_24140B9B8((uint64_t)v14, v11, v10[11]);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (qword_254384590 != -1)
LABEL_12:
    swift_once();
  objc_msgSend((id)v9, sel_setTitleColor_forState_, qword_254384580, 2);
  objc_msgSend((id)v9, sel_setEnabled_, 0);
  v22 = (id)v9;
  v23 = sub_24140525C();
  objc_msgSend(a2, sel_convertRect_toCoordinateSpace_, v23, v3, v4, v5, v6);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;

  objc_msgSend(v22, sel_setFrame_, v25, v27, v29, v31);
  v32 = sub_24140525C();
  objc_msgSend(v32, sel_addSubview_, v22);

  if ((a3 & 1) == 0)
    return (uint64_t)v22;
  v33 = objc_opt_self();
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = v22;
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = sub_24140C48C;
  *(_QWORD *)(v35 + 24) = v34;
  aBlock[4] = sub_24130CDD4;
  aBlock[5] = v35;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24148CD7C;
  aBlock[3] = &block_descriptor_46;
  v36 = _Block_copy(aBlock);
  v37 = v22;
  swift_retain();
  swift_release();
  objc_msgSend((id)v33, sel_performWithoutAnimation_, v36);
  _Block_release(v36);
  LOBYTE(v33) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v33 & 1) == 0)
    return (uint64_t)v22;
  __break(1u);
  return result;
}

void sub_24140478C(_QWORD *a1, uint64_t a2, unint64_t a3, char a4, char a5)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  double v15;
  uint64_t v16;

  v7 = a4 & 1;
  v8 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *a1) + 0x50);
  v9 = sub_2414B53B0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v16 - v11;
  v13 = swift_projectBox();
  v14 = sub_24140525C();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v12, 1, v8) == 1)
    v15 = 0.0;
  else
    v15 = 1.0;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  objc_msgSend(v14, sel_setAlpha_, v15);

  sub_241405C20();
  sub_241406EC8(a3, v7, a5);
}

void sub_2414048D8(_QWORD *a1, uint64_t a2, unint64_t a3, char a4, char a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  id v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  id v43;

  sub_24140478C(a1, a2, a3, a4 & 1, a5);
  v8 = a6 + 64;
  v9 = 1 << *(_BYTE *)(a6 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a6 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain();
  v13 = 0;
  if (!v11)
    goto LABEL_5;
LABEL_4:
  v14 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    v19 = 8 * i;
    v20 = *(_QWORD *)(*(_QWORD *)(a6 + 48) + v19);
    v21 = *(void **)(*(_QWORD *)(a6 + 56) + v19);
    v22 = *(_QWORD *)((char *)a1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *a1) + 0xA0));
    if ((v22 & 0xC000000000000001) != 0)
    {
      v43 = v21;
      swift_bridgeObjectRetain();
      v25 = (id)MEMORY[0x242694E34](v20, v22);
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v20 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      if (v20 >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_28;
      v23 = *(void **)(v22 + 8 * v20 + 32);
      v24 = v21;
      v25 = v23;
    }
    objc_msgSend(v25, sel_frame);
    v27 = v26;
    v29 = v28;
    v31 = v30;
    v33 = v32;

    v34 = sub_24140525C();
    objc_msgSend(a1, sel_convertRect_toCoordinateSpace_, v34, v27, v29, v31, v33);
    v36 = v35;
    v38 = v37;
    v40 = v39;
    v42 = v41;

    objc_msgSend(v21, sel_setFrame_, v36, v38, v40, v42);
    if (v11)
      goto LABEL_4;
LABEL_5:
    v16 = v13 + 1;
    if (__OFADD__(v13, 1))
      goto LABEL_29;
    if (v16 >= v12)
      goto LABEL_26;
    v17 = *(_QWORD *)(v8 + 8 * v16);
    ++v13;
    if (!v17)
    {
      v13 = v16 + 1;
      if (v16 + 1 >= v12)
        goto LABEL_26;
      v17 = *(_QWORD *)(v8 + 8 * v13);
      if (!v17)
      {
        v13 = v16 + 2;
        if (v16 + 2 >= v12)
          goto LABEL_26;
        v17 = *(_QWORD *)(v8 + 8 * v13);
        if (!v17)
          break;
      }
    }
LABEL_18:
    v11 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v12)
  {
LABEL_26:
    swift_release();
    return;
  }
  v17 = *(_QWORD *)(v8 + 8 * v18);
  if (v17)
  {
    v13 = v18;
    goto LABEL_18;
  }
  while (1)
  {
    v13 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v13 >= v12)
      goto LABEL_26;
    v17 = *(_QWORD *)(v8 + 8 * v13);
    ++v18;
    if (v17)
      goto LABEL_18;
  }
LABEL_30:
  __break(1u);
}

void sub_241404B4C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  void (*v31)(void);
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  void (*v37)(char *, uint64_t);
  char *v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  id v44;
  uint64_t v45;
  char *v46;
  _BOOL8 v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  char *v57;
  uint64_t v58;
  uint64_t TupleTypeMetadata2;

  v56 = a4;
  v49 = *MEMORY[0x24BEE4EA0] & *a4;
  v53 = *(_QWORD *)(*(_QWORD *)(v49 + 80) - 8);
  MEMORY[0x24BDAC7A8](a1);
  v48 = (char *)&v48 - v5;
  v54 = v6;
  v7 = sub_2414B53B0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v52 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v9 = (char *)&v48 - v8;
  v58 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v50 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v51 = (char *)&v48 - v13;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v48 - v15;
  MEMORY[0x24BDAC7A8](v17);
  v57 = (char *)&v48 - v18;
  v55 = swift_projectBox();
  v19 = a2 + 64;
  v20 = 1 << *(_BYTE *)(a2 + 32);
  v21 = -1;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  v22 = v21 & *(_QWORD *)(a2 + 64);
  v23 = (unint64_t)(v20 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  v24 = 0;
  while (1)
  {
    if (v22)
    {
      v25 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      v26 = v25 | (v24 << 6);
      goto LABEL_5;
    }
    v27 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v27 >= v23)
      goto LABEL_25;
    v28 = *(_QWORD *)(v19 + 8 * v27);
    ++v24;
    if (!v28)
    {
      v24 = v27 + 1;
      if (v27 + 1 >= v23)
        goto LABEL_25;
      v28 = *(_QWORD *)(v19 + 8 * v24);
      if (!v28)
      {
        v24 = v27 + 2;
        if (v27 + 2 >= v23)
          goto LABEL_25;
        v28 = *(_QWORD *)(v19 + 8 * v24);
        if (!v28)
        {
          v24 = v27 + 3;
          if (v27 + 3 >= v23)
            goto LABEL_25;
          v28 = *(_QWORD *)(v19 + 8 * v24);
          if (!v28)
          {
            v24 = v27 + 4;
            if (v27 + 4 >= v23)
              goto LABEL_25;
            v28 = *(_QWORD *)(v19 + 8 * v24);
            if (!v28)
              break;
          }
        }
      }
    }
LABEL_24:
    v22 = (v28 - 1) & v28;
    v26 = __clz(__rbit64(v28)) + (v24 << 6);
LABEL_5:
    objc_msgSend(*(id *)(*(_QWORD *)(a2 + 56) + 8 * v26), sel_removeFromSuperview);
  }
  v29 = v27 + 5;
  if (v29 >= v23)
  {
LABEL_25:
    swift_release();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v30 = v58;
    v31 = *(void (**)(void))(v58 + 16);
    v32 = v57;
    v31();
    sub_241403130((uint64_t)v16);
    v33 = &v9[*(int *)(TupleTypeMetadata2 + 48)];
    ((void (*)(char *, char *, uint64_t))v31)(v9, v32, v7);
    ((void (*)(char *, char *, uint64_t))v31)(v33, v16, v7);
    v34 = v53;
    v35 = v54;
    v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
    if (v36(v9, 1, v54) == 1)
    {
      v37 = *(void (**)(char *, uint64_t))(v30 + 8);
      v37(v16, v7);
      v37(v32, v7);
      if (v36(v33, 1, v35) == 1)
      {
        v37(v9, v7);
LABEL_32:
        v44 = sub_24140525C();
        v45 = v55;
        swift_beginAccess();
        v46 = v50;
        ((void (*)(char *, uint64_t, uint64_t))v31)(v50, v45, v7);
        v47 = v36(v46, 1, v35) == 1;
        v37(v46, v7);
        objc_msgSend(v44, sel_setHidden_, v47);

        return;
      }
    }
    else
    {
      v38 = v51;
      ((void (*)(char *, char *, uint64_t))v31)(v51, v9, v7);
      if (v36(v33, 1, v35) != 1)
      {
        v41 = v48;
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v48, v33, v35);
        LODWORD(TupleTypeMetadata2) = sub_2414B4CE4();
        v42 = v38;
        v43 = *(void (**)(char *, uint64_t))(v34 + 8);
        v43(v41, v35);
        v37 = *(void (**)(char *, uint64_t))(v58 + 8);
        v37(v16, v7);
        v37(v57, v7);
        v43(v42, v35);
        v37(v9, v7);
        if ((TupleTypeMetadata2 & 1) == 0)
          return;
        goto LABEL_32;
      }
      v39 = v38;
      v40 = *(void (**)(char *, uint64_t))(v58 + 8);
      v40(v16, v7);
      v40(v57, v7);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v39, v35);
    }
    (*(void (**)(char *, uint64_t))(v52 + 8))(v9, TupleTypeMetadata2);
    return;
  }
  v28 = *(_QWORD *)(v19 + 8 * v29);
  if (v28)
  {
    v24 = v29;
    goto LABEL_24;
  }
  while (1)
  {
    v24 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v24 >= v23)
      goto LABEL_25;
    v28 = *(_QWORD *)(v19 + 8 * v24);
    ++v29;
    if (v28)
      goto LABEL_24;
  }
LABEL_35:
  __break(1u);
}

void sub_241405068(void *a1)
{
  void *v1;
  id v3;
  id v4;
  double v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;

  v3 = objc_msgSend(v1, sel_traitCollection);
  v4 = objc_msgSend(v3, sel_horizontalSizeClass);

  v5 = 0.0;
  if (v4 == (id)2)
    v5 = 20.0;
  sub_2414051CC(v5);
  v6 = objc_msgSend(v1, sel_traitCollection);
  v7 = objc_msgSend(v6, sel_preferredContentSizeCategory);

  v8 = objc_msgSend(a1, sel_preferredContentSizeCategory);
  v9 = sub_2414B4D68();
  v11 = v10;
  if (v9 == sub_2414B4D68() && v11 == v12)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    v14 = sub_2414B57D0();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
      sub_2414053D8();
  }
}

double sub_2414051AC()
{
  _QWORD *v0;

  return *(double *)((char *)v0 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x90));
}

void sub_2414051CC(double a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  double v4;

  v2 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v3 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x90);
  v4 = *(double *)((char *)v1 + v3);
  *(double *)((char *)v1 + v3) = a1;
  if (*(double *)((char *)v1 + *(_QWORD *)((*v2 & *v1) + 0x90)) != v4)
    sub_2414053D8();
}

uint64_t sub_241405210(uint64_t a1)
{
  _QWORD *v1;

  *(_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0xA0)) = a1;
  return swift_bridgeObjectRelease();
}

void sub_241405238(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0xA8);
  v3 = *(void **)((char *)v1 + v2);
  *(_QWORD *)((char *)v1 + v2) = a1;

}

id sub_24140525C()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0);
  v2 = *(void **)((char *)v0 + v1);
  if (v2)
  {
    v3 = *(id *)((char *)v0 + v1);
  }
  else
  {
    v4 = sub_2414052CC(v0);
    v5 = *(void **)((char *)v0 + v1);
    *(_QWORD *)((char *)v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_2414052CC(void *a1)
{
  id v2;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_init);
  if (qword_254384528 != -1)
    swift_once();
  objc_msgSend(v2, sel_setBackgroundColor_, qword_254384520);
  objc_msgSend(v2, sel_setHidden_, 1);
  objc_msgSend(v2, sel_setClipsToBounds_, 1);
  objc_msgSend(v2, sel_setUserInteractionEnabled_, 0);
  objc_msgSend(a1, sel_addSubview_, v2);
  return v2;
}

uint64_t sub_241405398()
{
  _QWORD *v0;

  return *((unsigned __int8 *)v0 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8));
}

uint64_t sub_2414053B8(uint64_t result)
{
  _QWORD *v1;

  *((_BYTE *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0xB8)) = result;
  return result;
}

void sub_2414053D8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_2414B4B94();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2414B4BB8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)MEMORY[0x24BEE4EA0];
  if ((*((_BYTE *)v0 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8)) & 1) == 0)
  {
    v11 = *(_QWORD *)((char *)v0 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0));
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      v16 = sub_2414B56C8();
      swift_bridgeObjectRelease();
      if (!v16)
        return;
    }
    else if (!*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      return;
    }
    *((_BYTE *)v1 + *(_QWORD *)((*v10 & *v1) + 0xB8)) = 1;
    sub_2412CC884(0, (unint64_t *)&qword_254384FC0);
    v12 = (void *)sub_2414B5230();
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = v1;
    aBlock[4] = sub_24140C4CC;
    aBlock[5] = v13;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2413002C8;
    aBlock[3] = &block_descriptor_52;
    v14 = _Block_copy(aBlock);
    v15 = v1;
    swift_release();
    sub_2414B4BAC();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_2412C8030((unint64_t *)&qword_254384690, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543846C0);
    sub_241381774();
    sub_2414B5464();
    MEMORY[0x242694ABC](0, v9, v5, v14);
    _Block_release(v14);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

void sub_24140564C()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  double v8;
  double v9;
  double Width;
  double v11;
  double v12;
  double v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD v16[9];
  id v17;
  double v18;
  double v19;
  CGRect v20;
  CGRect v21;

  v1 = (_QWORD *)MEMORY[0x24BEE4EA0];
  if (*((_BYTE *)v0 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8)) != 1)
    return;
  v2 = objc_msgSend(v0, sel_effectiveUserInterfaceLayoutDirection);
  v18 = 0.0;
  v19 = 0.0;
  v3 = *(_QWORD *)((char *)v0 + *(_QWORD *)((*v1 & *v0) + 0xA0));
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v4 = sub_2414B56C8();
    if (v4)
      goto LABEL_4;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v4)
    {
LABEL_4:
      if (v4 < 1)
      {
        __break(1u);
        return;
      }
      v5 = 0;
      do
      {
        if ((v3 & 0xC000000000000001) != 0)
          v6 = (id)MEMORY[0x242694E34](v5, v3);
        else
          v6 = *(id *)(v3 + 8 * v5 + 32);
        v7 = v6;
        ++v5;
        v17 = v6;
        sub_2414058B8(&v17, &v18, v0);

      }
      while (v4 != v5);
      swift_bridgeObjectRelease_n();
      v8 = v18;
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease_n();
  v8 = 0.0;
LABEL_13:
  v9 = v8 - *(double *)((char *)v0 + *(_QWORD *)((*v1 & *v0) + 0x90));
  if (v2 == (id)1)
  {
    objc_msgSend(v0, sel_bounds);
    Width = CGRectGetWidth(v20);
    objc_msgSend(v0, sel_adjustedContentInset);
    if (Width - (v11 + v12) > v9)
      v13 = Width - (v11 + v12);
    else
      v13 = v9;
    objc_msgSend(v0, sel_bounds);
    CGRectGetHeight(v21);
    v14 = *(_QWORD *)((char *)v0 + *(_QWORD *)((*v1 & *v0) + 0xA0));
    v16[3] = 0;
    v16[4] = 0;
    v16[2] = v0;
    *(double *)&v16[5] = v13;
    v16[6] = MEMORY[0x24BDAC7A8](v15);
    swift_bridgeObjectRetain();
    sub_241401A24((void (*)(id *))sub_24140C4AC, (uint64_t)v16, v14);
    swift_bridgeObjectRelease();
  }
  sub_241405C20();
  objc_msgSend(v0, sel_setContentSize_, v9, v19);
  *((_BYTE *)v0 + *(_QWORD *)((*v1 & *v0) + 0xB8)) = 0;
}

double sub_2414058B8(id *a1, double *a2, _QWORD *a3)
{
  id v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double Height;
  double v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  id v30;
  double v31;
  double v32;
  double MinY;
  double v34;
  double v35;
  double result;
  double v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;

  v5 = *a1;
  objc_msgSend(*a1, sel_frame);
  v7 = v6;
  v9 = v8;
  objc_msgSend(v5, sel_intrinsicContentSize);
  v11 = v10;
  v13 = v12;
  if (qword_254384530 != -1)
    swift_once();
  v15 = *(double *)&qword_254384548;
  v14 = *(double *)&qword_254384550;
  v17 = *(double *)&qword_254384558;
  v16 = *(double *)&qword_254384560;
  if (qword_2543845C0 != -1)
    swift_once();
  v38.size.height = v13 - v15 - v17;
  v18 = v11 - v14 - v16;
  v19 = *(double *)&qword_2543845B0;
  v38.origin.x = v7;
  v38.origin.y = v9;
  v38.size.width = v18;
  Height = CGRectGetHeight(v38);
  if (v19 > Height)
    Height = v19;
  v37 = Height;
  v21 = *a2;
  objc_msgSend(a3, sel_bounds);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v30 = objc_msgSend(a3, sel_traitCollection);
  objc_msgSend(v30, sel_displayScale);
  v32 = v31;

  v39.origin.x = v23;
  v39.origin.y = v25;
  v39.size.width = v27;
  v39.size.height = v29;
  MinY = CGRectGetMinY(v39);
  v40.origin.x = v23;
  v40.origin.y = v25;
  v40.size.width = v27;
  v40.size.height = v29;
  v34 = CGRectGetHeight(v40);
  v41.origin.y = 0.0;
  v41.origin.x = v21;
  v41.size.width = v18;
  v41.size.height = v37;
  v35 = round(v32 * (MinY + (v34 - CGRectGetHeight(v41)) * 0.5));
  objc_msgSend(v5, sel_setFrame_, v21, v35 / sub_2412E2570(v32), v18, v37);
  objc_msgSend(v5, sel_layoutIfNeeded);
  v42.origin.y = 0.0;
  v42.origin.x = v21;
  v42.size.width = v18;
  v42.size.height = v37;
  result = *a2 + CGRectGetWidth(v42) + *(double *)((char *)a3 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *a3) + 0x90));
  *a2 = result;
  return result;
}

id sub_241405B04(id *a1, void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  id v11;
  double v12;
  double v13;
  double v14;
  double MinY;
  double v16;
  double v17;
  double v18;
  double v19;
  double MaxX;
  double v21;
  double v22;
  CGRect v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;

  v11 = *a1;
  objc_msgSend(*a1, sel_frame);
  v13 = v12;
  MinY = v14;
  v17 = v16;
  v19 = v18;
  if (objc_msgSend(a2, sel_effectiveUserInterfaceLayoutDirection) == (id)1)
  {
    v24.origin.x = a3;
    v24.origin.y = a4;
    v24.size.width = a5;
    v24.size.height = a6;
    MaxX = CGRectGetMaxX(v24);
    v25.origin.x = v13;
    v25.origin.y = MinY;
    v25.size.width = v17;
    v25.size.height = v19;
    v21 = MaxX - CGRectGetMinX(v25);
    v26.origin.x = v13;
    v26.origin.y = MinY;
    v26.size.width = v17;
    v26.size.height = v19;
    v22 = v21 - CGRectGetWidth(v26);
    v27.origin.x = v13;
    v27.origin.y = MinY;
    v27.size.width = v17;
    v27.size.height = v19;
    MinY = CGRectGetMinY(v27);
    v13 = v22;
  }
  return objc_msgSend(v11, sel_setFrame_, v13, MinY, v17, v19);
}

uint64_t sub_241405C20()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  id v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  void *v40;
  id v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;

  v1 = v0;
  v2 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v3 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x50);
  v4 = sub_2414B53B0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v42 - v7;
  v9 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v42 - v10;
  sub_241403130((uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v3) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v8, v3);
  v13 = (_QWORD *)((char *)v0 + *(_QWORD *)((*v2 & *v0) + 0x70));
  swift_beginAccess();
  v44 = *v13;
  v14 = sub_2414B4F60();
  MEMORY[0x242695AE8](MEMORY[0x24BEE12E0], v14);
  result = sub_2414B5158();
  if ((BYTE8(v42) & 1) != 0)
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v3);
  v15 = v42;
  v16 = *(_QWORD *)((char *)v1 + *(_QWORD *)((*v2 & *v1) + 0xA0));
  if ((v16 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v17 = (id)MEMORY[0x242694E34](v15, v16);
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  if ((v42 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if ((unint64_t)v42 < *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v17 = *(id *)(v16 + 8 * v42 + 32);
LABEL_8:
    objc_msgSend(v17, sel_frame);
    v19 = v18;
    v21 = v20;
    v23 = v22;
    v25 = v24;

    v26 = sub_24140525C();
    objc_msgSend(v26, sel_setFrame_, v19, v21, v23, v25);

    v27 = sub_24140525C();
    v42 = xmmword_2414C5110;
    v43 = 15;
    UIView.corner.setter((uint64_t)&v42);

    v28 = *v2 & *v1;
    v29 = *(void **)((char *)v1 + *(_QWORD *)(v28 + 0xA8));
    if (v29)
    {
      v30 = v29;
      v31 = sub_24140525C();
      objc_msgSend(v1, sel_convertRect_toCoordinateSpace_, v31, v19, v21, v23, v25);
      v33 = v32;
      v35 = v34;
      v37 = v36;
      v39 = v38;

      objc_msgSend(v30, sel_setFrame_, v33, v35, v37, v39);
      v28 = *v2 & *v1;
    }
    v40 = *(void **)((char *)v1 + *(_QWORD *)(v28 + 168));
    if (v40)
      objc_msgSend(v40, sel_layoutIfNeeded);
    v41 = sub_24140525C();
    objc_msgSend(v1, sel_bringSubviewToFront_, v41);

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v3);
  }
  __break(1u);
  return result;
}

uint64_t sub_241405F78()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  uint64_t *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  void (*v39)(uint64_t, uint64_t);
  char *v40;
  void (*v41)(uint64_t, uint64_t);
  char *v42;
  char v43;
  void (*v44)(char *, uint64_t);
  void (*v45)(uint64_t, uint64_t);
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  void *v62;
  _QWORD *v63;
  void *v64;
  void *v65;
  id v66;
  uint64_t result;
  uint64_t v68;
  uint64_t i;
  id v70;
  void *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  void *v78;
  id v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t TupleTypeMetadata2;
  uint64_t v99;
  _QWORD aBlock[8];
  uint64_t v101;
  char v102;
  uint64_t v103;
  unint64_t v104;

  v1 = (_QWORD *)(*MEMORY[0x24BEE4EA0] & *v0);
  v2 = v1[10];
  v3 = sub_2414B53B0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v83 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v5 = (char *)&v80 - v4;
  v6 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v97 = (uint64_t)&v80 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v96 = (char *)&v80 - v13;
  v99 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v81 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v80 - v17;
  v91 = swift_getTupleTypeMetadata2();
  v90 = sub_2414B53B0();
  v89 = *(_QWORD *)(v90 - 8);
  MEMORY[0x24BDAC7A8](v90);
  v88 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v87 = (char *)&v80 - v21;
  v104 = *(_QWORD *)((char *)v0 + v1[20]);
  v103 = MEMORY[0x24BEE4AF8];
  v101 = 0;
  v102 = 1;
  v92 = v1;
  v22 = v1[14];
  v94 = v0;
  v23 = (_QWORD *)((char *)v0 + v22);
  swift_beginAccess();
  aBlock[0] = *v23;
  v24 = sub_2414B4F60();
  swift_bridgeObjectRetain();
  MEMORY[0x242695AE8](MEMORY[0x24BEE12C8], v24);
  sub_2414B4E7C();
  aBlock[6] = aBlock[7];
  sub_2414B56BC();
  sub_2414B5698();
  v86 = sub_2414B56B0();
  v85 = v5;
  v95 = v6;
  v84 = v18;
  v82 = v9;
  while (1)
  {
    v25 = v88;
    sub_2414B56A4();
    v26 = (uint64_t *)v87;
    (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v87, v25, v90);
    v27 = v91;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 48))(v26, 1, v91) == 1)
      break;
    v93 = *v26;
    v28 = (char *)v26 + *(int *)(v27 + 48);
    v29 = v99;
    v30 = *(void (**)(char *, char *, uint64_t))(v99 + 32);
    v30(v18, v28, v2);
    v31 = v18;
    v32 = v2;
    v33 = v96;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v96, v31, v32);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v33, 0, 1, v32);
    v34 = v97;
    sub_241403130(v97);
    v35 = &v5[*(int *)(TupleTypeMetadata2 + 48)];
    v36 = v6;
    v37 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    v37(v5, v33, v3);
    v37(v35, (char *)v34, v3);
    v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
    if (v38(v5, 1, v32) == 1)
    {
      v39 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
      v39(v34, v3);
      v39((uint64_t)v33, v3);
      v2 = v32;
      if (v38(v35, 1, v32) != 1)
        goto LABEL_8;
      v39((uint64_t)v5, v3);
LABEL_10:
      v101 = v93;
      v102 = 0;
      goto LABEL_11;
    }
    v40 = v82;
    v37(v82, v5, v3);
    v2 = v32;
    if (v38(v35, 1, v32) == 1)
    {
      v41 = *(void (**)(uint64_t, uint64_t))(v95 + 8);
      v41(v97, v3);
      v41((uint64_t)v96, v3);
      (*(void (**)(char *, uint64_t))(v99 + 8))(v40, v32);
LABEL_8:
      (*(void (**)(char *, uint64_t))(v83 + 8))(v5, TupleTypeMetadata2);
      goto LABEL_11;
    }
    v42 = v81;
    v30(v81, v35, v32);
    v43 = sub_2414B4CE4();
    v44 = *(void (**)(char *, uint64_t))(v99 + 8);
    v44(v42, v32);
    v45 = *(void (**)(uint64_t, uint64_t))(v95 + 8);
    v45(v97, v3);
    v45((uint64_t)v96, v3);
    v44(v40, v32);
    v45((uint64_t)v5, v3);
    if ((v43 & 1) != 0)
      goto LABEL_10;
LABEL_11:
    v46 = v104;
    v47 = v104 >> 62;
    if (v104 >> 62)
    {
      swift_bridgeObjectRetain();
      if (!sub_2414B56C8())
      {
LABEL_30:
        swift_bridgeObjectRelease();
        v58 = v92[11];
        v59 = (uint64_t)v84;
        v60 = sub_24140B9B8((uint64_t)v84, v2, v58);
        sub_2412CC884(0, &qword_2543843F0);
        v61 = swift_allocObject();
        v62 = v94;
        swift_unknownObjectWeakInit();
        v63 = (_QWORD *)swift_allocObject();
        v63[2] = v2;
        v63[3] = v58;
        v63[4] = v61;
        v51 = v60;
        v18 = (char *)v59;
        v64 = (void *)sub_2414B5344();
        objc_msgSend(v51, sel_addAction_forControlEvents_, v64, 64);

        objc_msgSend(v62, sel_addSubview_, v51);
        v5 = v85;
        goto LABEL_31;
      }
    }
    else
    {
      v48 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v48)
        goto LABEL_30;
    }
    v49 = v46 & 0xC000000000000001;
    if ((v46 & 0xC000000000000001) != 0)
    {
      v50 = (id)MEMORY[0x242694E34](0, v46);
    }
    else
    {
      if (!*(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      v50 = *(id *)(v46 + 32);
    }
    v51 = v50;
    swift_bridgeObjectRelease();
    if (v47)
    {
      swift_bridgeObjectRetain();
      v53 = v51;
      v54 = sub_2414B56C8();
      swift_bridgeObjectRelease();
      if (!v54)
        goto LABEL_46;
      swift_bridgeObjectRetain();
      v55 = sub_2414B56C8();
      swift_bridgeObjectRelease();
      if (!v55)
        goto LABEL_44;
    }
    else
    {
      if (!*(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_45;
      v52 = v51;
    }
    if (v49)
    {
      v56 = (id)MEMORY[0x242694E34](0, v46);
      if (v47)
        goto LABEL_26;
    }
    else
    {
      if (!*(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_48;
      v56 = *(id *)(v46 + 32);
      if (v47)
      {
LABEL_26:
        swift_bridgeObjectRetain();
        v57 = sub_2414B56C8();
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
    }
    v57 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_27:
    v5 = v85;
    v18 = v84;
    if (!v57)
      goto LABEL_47;
    sub_24132E98C(0, 1);

    v58 = v92[11];
LABEL_31:
    (*(void (**)(uint64_t, uint64_t))(v58 + 16))(v2, v58);
    v65 = (void *)sub_2414B4D44();
    swift_bridgeObjectRelease();
    objc_msgSend(v51, sel_setTitle_forState_, v65, 0);

    v66 = v51;
    MEMORY[0x24269472C]();
    if (*(_QWORD *)((v103 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v103 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2414B4EF4();
    sub_2414B4F24();
    sub_2414B4EDC();

    (*(void (**)(char *, uint64_t))(v99 + 8))(v18, v2);
    v6 = v95;
  }
  result = swift_bridgeObjectRelease();
  v49 = v104;
  if (!(v104 >> 62))
  {
    v68 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v68)
      goto LABEL_50;
    goto LABEL_37;
  }
LABEL_49:
  swift_bridgeObjectRetain();
  v68 = sub_2414B56C8();
  result = swift_bridgeObjectRelease();
  if (!v68)
    goto LABEL_50;
LABEL_37:
  if (v68 < 1)
    goto LABEL_52;
  for (i = 0; i != v68; ++i)
  {
    if ((v49 & 0xC000000000000001) != 0)
      v70 = (id)MEMORY[0x242694E34](i, v49);
    else
      v70 = *(id *)(v49 + 8 * i + 32);
    v71 = v70;
    objc_msgSend(v70, sel_removeFromSuperview);

  }
LABEL_50:
  swift_bridgeObjectRelease();
  v72 = v94;
  v73 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v94) + 0xA0);
  v74 = *(_QWORD *)((char *)v94 + v73);
  *(_QWORD *)((char *)v94 + v73) = v103;
  v75 = objc_opt_self();
  v76 = (_QWORD *)swift_allocObject();
  v76[2] = v72;
  v76[3] = v74;
  v76[4] = &v101;
  v77 = swift_allocObject();
  *(_QWORD *)(v77 + 16) = sub_24140C518;
  *(_QWORD *)(v77 + 24) = v76;
  aBlock[4] = sub_24140C588;
  aBlock[5] = v77;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24148CD7C;
  aBlock[3] = &block_descriptor_62;
  v78 = _Block_copy(aBlock);
  v79 = v72;
  swift_retain();
  swift_release();
  objc_msgSend((id)v75, sel_performWithoutAnimation_, v78);
  _Block_release(v78);
  LOBYTE(v75) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v75 & 1) == 0)
    return result;
  __break(1u);
LABEL_52:
  __break(1u);
  return result;
}

void sub_241406A64(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  char v18;
  void (**v19)(unint64_t, char *);
  void (*v20)(unint64_t, char *);
  _QWORD v21[2];
  _OWORD v22[2];
  _BYTE v23[24];
  uint64_t v24;

  v5 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v8 + 16;
  swift_beginAccess();
  v10 = MEMORY[0x242695CC8](v9);
  if (v10)
  {
    v11 = (_QWORD *)v10;
    if (objc_msgSend(a1, sel_sender))
    {
      sub_2414B544C();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v22, 0, sizeof(v22));
    }
    sub_2412FFB60((uint64_t)v22, (uint64_t)v23);
    if (v24)
    {
      sub_2412CC884(0, qword_25437CE70);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v12 = (void *)v21[1];
        v13 = (_QWORD *)MEMORY[0x24BEE4EA0];
        v14 = *(_QWORD *)((char *)v11 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v11) + 0xA0));
        swift_bridgeObjectRetain();
        sub_241411704((uint64_t)v12, v14);
        v16 = v15;
        v18 = v17;
        swift_bridgeObjectRelease();
        if ((v18 & 1) == 0 && !UIAccessibilityIsVoiceOverRunning())
        {
          v19 = (void (**)(unint64_t, char *))((char *)v11 + *(_QWORD *)((*v13 & *v11) + 0x78));
          swift_beginAccess();
          v20 = *v19;
          if (*v19)
          {
            swift_beginAccess();
            sub_2412D2824((uint64_t)v20);
            swift_bridgeObjectRetain();
            sub_2414B4F78();
            swift_bridgeObjectRelease();
            v20(v16, v7);
            sub_2412C9444((uint64_t)v20);
            (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a3);
          }
          sub_2414033F8(v16, 0, 1);
        }

      }
      else
      {

      }
    }
    else
    {

      sub_24135C67C((uint64_t)v23);
    }
  }
}

void sub_241406CC8(_QWORD *a1, unint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  void (**v7)(unint64_t, uint64_t);
  void (*v8)(unint64_t, uint64_t);
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_2414053D8();
  sub_24140564C();
  v6 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v7 = (void (**)(unint64_t, uint64_t))((char *)a1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *a1) + 0x80));
  swift_beginAccess();
  v8 = *v7;
  if (*v7)
  {
    sub_2412D2824((uint64_t)v8);
    if (a2 >> 62)
    {
      sub_2412CC884(0, (unint64_t *)&qword_2543843E0);
      swift_bridgeObjectRetain();
      v11 = sub_2414B5680();
      swift_bridgeObjectRelease();
      a2 = v11;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_2414B57E8();
      sub_2412CC884(0, (unint64_t *)&qword_2543843E0);
    }
    v9 = *(_QWORD *)((char *)a1 + *(_QWORD *)((*v6 & *a1) + 0xA0));
    if (v9 >> 62)
    {
      sub_2412CC884(0, (unint64_t *)&qword_2543843E0);
      swift_bridgeObjectRetain();
      v10 = sub_2414B5680();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      sub_2414B57E8();
      sub_2412CC884(0, (unint64_t *)&qword_2543843E0);
      v10 = v9;
    }
    swift_bridgeObjectRelease();
    v8(a2, v10);
    sub_2412C9444((uint64_t)v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_241406EC8(*(_QWORD *)a3, *(_BYTE *)(a3 + 8), 1);
}

void sub_241406EC8(unint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  uint64_t v6;
  id v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  double MinX;
  double v37;
  double v38;
  CGFloat v39;
  double MaxX;
  double v41;
  double v42;
  double MinY;
  double v44;
  double v45;
  double v47;
  double v48;
  CGFloat rect;
  CGRect v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;

  if ((a2 & 1) != 0)
    return;
  v6 = *(_QWORD *)((char *)v3 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v3) + 0xA0));
  if ((v6 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v7 = (id)MEMORY[0x242694E34](a1, v6);
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10) <= a1)
  {
LABEL_18:
    __break(1u);
    return;
  }
  v7 = *(id *)(v6 + 8 * a1 + 32);
LABEL_6:
  objc_msgSend(v7, sel_frame);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;

  objc_msgSend(v3, sel_contentInset);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  objc_msgSend(v3, sel_visibleBounds);
  v47 = v21;
  v48 = v19;
  v26 = UIEdgeInsetsInsetRect(v22, v23, v24, v25, v17, v19);
  v28 = v27;
  v30 = v29;
  v32 = v31;
  rect = v9;
  v50.origin.x = v9;
  v33 = v11;
  v50.origin.y = v11;
  v34 = v13;
  v50.size.width = v13;
  v35 = v15;
  v50.size.height = v15;
  MinX = CGRectGetMinX(v50);
  v51.origin.x = v26;
  v51.origin.y = v28;
  v51.size.width = v30;
  v51.size.height = v32;
  if (MinX >= CGRectGetMinX(v51))
  {
    v53.origin.x = rect;
    v39 = v33;
    v53.origin.y = v33;
    v53.size.width = v34;
    v53.size.height = v35;
    MaxX = CGRectGetMaxX(v53);
    v54.origin.x = v26;
    v54.origin.y = v28;
    v54.size.width = v30;
    v54.size.height = v32;
    if (CGRectGetMaxX(v54) >= MaxX)
      return;
    v55.origin.x = rect;
    v55.origin.y = v39;
    v55.size.width = v34;
    v55.size.height = v35;
    v41 = CGRectGetMaxX(v55);
    v56.origin.x = v26;
    v56.origin.y = v28;
    v56.size.width = v30;
    v56.size.height = v32;
    v37 = v41 - CGRectGetWidth(v56);
    v38 = v47;
  }
  else
  {
    v52.origin.x = rect;
    v52.origin.y = v33;
    v52.size.width = v34;
    v52.size.height = v35;
    v37 = CGRectGetMinX(v52);
    v38 = v48;
  }
  v42 = v37 - v38;
  v57.origin.x = v26;
  v57.origin.y = v28;
  v57.size.width = v30;
  v57.size.height = v32;
  MinY = CGRectGetMinY(v57);
  objc_msgSend(v3, sel_contentOffset);
  if (v42 != v45 || MinY != v44)
    objc_msgSend(v3, sel_setContentOffset_animated_, a3 & 1, v42, MinY);
}

BOOL sub_24140714C()
{
  return AXDoesRequestingClientDeserveAutomation() == 0;
}

void sub_241407168(void *a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v5;
  id v6;

  v6 = a1;
  sub_2414071A8(a3, (uint64_t)v6, v4, v5);

}

id sub_2414071A8(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v6;
  objc_super v8;

  v6 = (objc_class *)type metadata accessor for ScopeBar(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x58), a4);
  v8.receiver = v4;
  v8.super_class = v6;
  return objc_msgSendSuper2(&v8, sel_setIsAccessibilityElement_, a1 & 1);
}

uint64_t sub_241407204()
{
  return *MEMORY[0x24BEBDEF0];
}

void sub_241407214(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  id v6;

  v6 = a1;
  sub_241407254(a3, (uint64_t)v6, v4, v5);

}

id sub_241407254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v6;
  objc_super v8;

  v6 = (objc_class *)type metadata accessor for ScopeBar(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x58), a4);
  v8.receiver = v4;
  v8.super_class = v6;
  return objc_msgSendSuper2(&v8, sel_setAccessibilityTraits_, a1);
}

id sub_2414072B0(void *a1, uint64_t a2)
{
  return sub_241407474(a1, a2, (void (*)(void))sub_2414072BC);
}

uint64_t sub_2414072BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  id v6;
  void *v7;
  uint64_t v8;
  objc_super v10;

  v5 = (objc_class *)type metadata accessor for ScopeBar(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x58), a4);
  v10.receiver = v4;
  v10.super_class = v5;
  v6 = objc_msgSendSuper2(&v10, sel_accessibilityLabel);
  if (!v6)
    return 0;
  v7 = v6;
  v8 = sub_2414B4D68();

  return v8;
}

void sub_24140734C(void *a1, uint64_t a2, uint64_t a3)
{
  sub_2414075EC(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_241407358);
}

void sub_241407358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  objc_class *v8;
  objc_super v9;

  v5 = *v4;
  v6 = *MEMORY[0x24BEE4EA0];
  if (a2)
  {
    v7 = (void *)sub_2414B4D44();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  v8 = (objc_class *)type metadata accessor for ScopeBar(0, *(_QWORD *)((v6 & v5) + 0x50), *(_QWORD *)((v6 & v5) + 0x58), a4);
  v9.receiver = v4;
  v9.super_class = v8;
  objc_msgSendSuper2(&v9, sel_setAccessibilityLabel_, v7);

  sub_2414073E8();
}

void sub_2414073E8()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  objc_class *v4;
  objc_super v5;

  v1 = *MEMORY[0x24BEE4EA0] & *v0;
  v2 = objc_msgSend(v0, sel_accessibilityLabel);
  v4 = (objc_class *)type metadata accessor for ScopeBar(0, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), v3);
  v5.receiver = v0;
  v5.super_class = v4;
  objc_msgSendSuper2(&v5, sel_setAccessibilityValue_, v2);

}

id sub_241407468(void *a1, uint64_t a2)
{
  return sub_241407474(a1, a2, (void (*)(void))sub_2414074DC);
}

id sub_241407474(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v4 = a1;
  a3();
  v6 = v5;

  if (v6)
  {
    v7 = (void *)sub_2414B4D44();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  return v7;
}

uint64_t sub_2414074DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  objc_class *v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  objc_super v15;

  v5 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v6 = (objc_class *)type metadata accessor for ScopeBar(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x58), a4);
  v15.receiver = v4;
  v15.super_class = v6;
  v7 = objc_msgSendSuper2(&v15, sel_accessibilityValue);
  if (v7)
  {
    v8 = v7;
    v9 = sub_2414B4D68();

  }
  else
  {
    v9 = 0;
  }
  v10 = *(void **)((char *)v4 + *(_QWORD *)((*v5 & *v4) + 0xA8));
  if (v10)
  {
    v11 = v10;
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(v11, sel_accessibilityLabel);
    if (v12)
    {
      v13 = v12;
      v9 = sub_2414B4D68();

    }
    else
    {

      return 0;
    }
  }
  return v9;
}

void sub_2414075E0(void *a1, uint64_t a2, uint64_t a3)
{
  sub_2414075EC(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_24140765C);
}

void sub_2414075EC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  if (a3)
  {
    v6 = sub_2414B4D68();
    v8 = v7;
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  v9 = a1;
  a4(v6, v8);

}

void sub_24140765C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  objc_class *v8;
  objc_super v9;

  v5 = *v4;
  v6 = *MEMORY[0x24BEE4EA0];
  if (a2)
  {
    v7 = (void *)sub_2414B4D44();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  v8 = (objc_class *)type metadata accessor for ScopeBar(0, *(_QWORD *)((v6 & v5) + 0x50), *(_QWORD *)((v6 & v5) + 0x58), a4);
  v9.receiver = v4;
  v9.super_class = v8;
  objc_msgSendSuper2(&v9, sel_setAccessibilityValue_, v7);

}

uint64_t sub_2414076E8()
{
  return sub_241407760(1);
}

void sub_2414076F0(void *a1)
{
  id v1;

  v1 = a1;
  sub_2414076E8();

}

uint64_t sub_241407724()
{
  return sub_241407760(0);
}

void sub_24140772C(void *a1)
{
  id v1;

  v1 = a1;
  sub_241407724();

}

uint64_t sub_241407760(int a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (**v23)(uint64_t, char *);
  void (*v24)(uint64_t, char *);
  char *v25;
  void (*v26)(char *, uint64_t);
  char *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v2 = v1;
  v28 = a1;
  v3 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v4 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x50);
  v5 = sub_2414B53B0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v27 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v27 - v13;
  sub_241403130((uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v4) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v8, v4);
  v16 = (_QWORD *)((char *)v1 + *(_QWORD *)((*v3 & *v1) + 0x70));
  swift_beginAccess();
  v29 = *v16;
  v17 = sub_2414B4F60();
  MEMORY[0x242695AE8](MEMORY[0x24BEE12E0], v17);
  sub_2414B5158();
  if (v31 == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v4);
  v18 = v30;
  if ((v28 & 1) != 0)
  {
    swift_beginAccess();
    v20 = swift_bridgeObjectRetain();
    v21 = MEMORY[0x2426947B0](v20, v4);
    result = swift_bridgeObjectRelease();
    if (__OFSUB__(v21, 1))
    {
      __break(1u);
      return result;
    }
    if (v18 < v21 - 1)
    {
      v19 = 1;
LABEL_12:
      v22 = v18 + v19;
      sub_2414033F8(v18 + v19, 0, 1);
      v23 = (void (**)(uint64_t, char *))((char *)v2 + *(_QWORD *)((*v3 & *v2) + 0x78));
      swift_beginAccess();
      v24 = *v23;
      if (*v23)
      {
        swift_beginAccess();
        sub_2412D2824((uint64_t)v24);
        swift_bridgeObjectRetain();
        v25 = v27;
        sub_2414B4F78();
        swift_bridgeObjectRelease();
        v24(v22, v25);
        sub_2412C9444((uint64_t)v24);
        v26 = *(void (**)(char *, uint64_t))(v9 + 8);
        v26(v25, v4);
        return ((uint64_t (*)(char *, uint64_t))v26)(v14, v4);
      }
    }
  }
  else if (v30 > 0)
  {
    v19 = -1;
    goto LABEL_12;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v4);
}

uint64_t sub_241407A7C()
{
  return 0;
}

id ScopeBar.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void ScopeBar.init(frame:)()
{
  sub_24140BF88();
}

void sub_241407AF0()
{
  sub_24140BF88();
}

id ScopeBar.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for ScopeBar(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

void sub_241407B58(_QWORD *a1)
{
  _QWORD *v2;
  char *v3;
  uint64_t v4;

  v2 = (_QWORD *)MEMORY[0x24BEE4EA0];
  swift_bridgeObjectRelease();
  sub_2412C9444(*(_QWORD *)((char *)a1 + *(_QWORD *)((*v2 & *a1) + 0x78)));
  sub_2412C9444(*(_QWORD *)((char *)a1 + *(_QWORD *)((*v2 & *a1) + 0x80)));
  v3 = (char *)a1 + *(_QWORD *)((*v2 & *a1) + 0x88);
  v4 = sub_2414B53B0();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  swift_bridgeObjectRelease();
}

id sub_241407C64()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_variant_, *MEMORY[0x24BEBE1F0], 1024);
  if (result)
    qword_254384538 = (uint64_t)result;
  else
    __break(1u);
  return result;
}

void sub_241407CC0()
{
  qword_254384568 = 0x4028000000000000;
}

void sub_241407CD0()
{
  qword_2543845B0 = 0x4040000000000000;
}

id sub_241407CE0(uint64_t a1)
{
  return sub_241407D1C(a1, (SEL *)&selRef_tintColor, &qword_254384520);
}

id sub_241407CF4(uint64_t a1)
{
  return sub_241407D1C(a1, (SEL *)&selRef_whiteColor, &qword_254384580);
}

id sub_241407D08(uint64_t a1)
{
  return sub_241407D1C(a1, (SEL *)&selRef_labelColor, &qword_254384598);
}

id sub_241407D1C(uint64_t a1, SEL *a2, _QWORD *a3)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), *a2);
  *a3 = result;
  return result;
}

double sub_241407D5C()
{
  double result;

  if (qword_254384578 != -1)
    swift_once();
  qword_254384548 = 0;
  result = -*(double *)&qword_254384568;
  *(double *)&qword_254384550 = -*(double *)&qword_254384568;
  qword_254384558 = 0;
  *(double *)&qword_254384560 = -*(double *)&qword_254384568;
  return result;
}

uint64_t sub_241407DB8()
{
  return swift_deallocObject();
}

void sub_241407DC8(uint64_t a1, void *a2)
{
  sub_241405068(a2);
}

uint64_t sub_241407DEC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121A90);
  result = sub_2414B56E0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v35 = a2;
    v34 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v32 = -1 << v10;
    v33 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13)
          goto LABEL_31;
        v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v13)
            goto LABEL_31;
          v20 = v9[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                result = swift_release();
                v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v32;
              v3 = v34;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v20 = v9[v8];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v8 = v21;
          }
        }
LABEL_21:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v22 = 8 * v18;
      v23 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v22);
      v24 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v22);
      result = sub_2414B58C0();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = 8 * v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v16) = v23;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v16) = v24;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_241408098(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_2414B2B30();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121AB8);
  v42 = a2;
  v10 = sub_2414B56E0();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      swift_bridgeObjectRetain();
    }
    sub_2412C8030(&qword_257126EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_2414B4C78();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_24140842C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121A68);
  v37 = a2;
  v6 = sub_2414B56E0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_2414B58CC();
    sub_2414B4DD4();
    result = sub_2414B58FC();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_241408734(uint64_t a1, char a2)
{
  return sub_241408A84(a1, a2, &qword_257121A78);
}

uint64_t sub_241408740(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  void *v21;
  _OWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  char v35;
  _OWORD v36[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(qword_257127D48);
  v35 = a2;
  v6 = sub_2414B56E0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v33 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33)
      break;
    v18 = (_QWORD *)(v5 + 64);
    v19 = *(_QWORD *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v33)
        goto LABEL_34;
      v19 = *(_QWORD *)(v34 + 8 * v13);
      if (!v19)
      {
        v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v19 = *(_QWORD *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            v13 = v20 + 1;
            if (__OFADD__(v20, 1))
              goto LABEL_43;
            if (v13 >= v33)
              goto LABEL_34;
            v19 = *(_QWORD *)(v34 + 8 * v13);
            ++v20;
            if (v19)
              goto LABEL_21;
          }
        }
        v13 = v20;
      }
    }
LABEL_21:
    v10 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    v21 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v22 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v16);
    if ((v35 & 1) != 0)
    {
      sub_2412D8D3C(v22, v36);
    }
    else
    {
      sub_2412E4960((uint64_t)v22, (uint64_t)v36);
      v23 = v21;
    }
    sub_2414B4D68();
    sub_2414B58CC();
    sub_2414B4DD4();
    v24 = sub_2414B58FC();
    result = swift_bridgeObjectRelease();
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v14) = v21;
    result = (uint64_t)sub_2412D8D3C(v36, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v18 = (_QWORD *)(v5 + 64);
  if ((v35 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v18 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_241408A78(uint64_t a1, char a2)
{
  return sub_241408A84(a1, a2, &qword_257121A70);
}

uint64_t sub_241408A84(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v37 = a2;
  v7 = sub_2414B56E0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_2414B58CC();
    sub_2414B4DD4();
    result = sub_2414B58FC();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_241408D94(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_2414B2A88();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121A60);
  v42 = a2;
  v10 = sub_2414B56E0();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      swift_retain();
    }
    sub_2412C8030(&qword_257126EE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
    result = sub_2414B4C78();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_241409128(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  uint64_t v39;
  char v40;
  __int128 v41;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257127D40);
  v40 = a2;
  v6 = sub_2414B56E0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v39 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v37 = v2;
  v38 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v38)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v39 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v38)
        goto LABEL_33;
      v24 = *(_QWORD *)(v39 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v38)
        {
LABEL_33:
          swift_release();
          v3 = v37;
          if ((v40 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v39 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v13 >= v38)
              goto LABEL_33;
            v24 = *(_QWORD *)(v39 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v13 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(v5 + 56) + 32 * v21;
    v41 = *(_OWORD *)v33;
    v34 = *(_QWORD *)(v33 + 16);
    v35 = *(_QWORD *)(v33 + 24);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_2414B58CC();
    sub_2414B4DD4();
    result = sub_2414B58FC();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v32;
    v18[1] = v31;
    v19 = *(_QWORD *)(v7 + 56) + 32 * v17;
    *(_OWORD *)v19 = v41;
    *(_QWORD *)(v19 + 16) = v34;
    *(_QWORD *)(v19 + 24) = v35;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v37;
  v23 = (_QWORD *)(v5 + 64);
  if ((v40 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_241409454(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121A98);
  result = sub_2414B56E0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v32 = -1 << v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = 1 << *(_BYTE *)(v5 + 32);
    v34 = v3;
    v35 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v35)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v35)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v35)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v34;
                goto LABEL_40;
              }
              if (v33 >= 64)
                bzero((void *)(v5 + 64), 8 * v35);
              else
                *v9 = v32;
              v3 = v34;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v8 >= v35)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(void **)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        v31 = v30;
      result = sub_2414B58C0();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_241409704(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;

  v3 = v2;
  v5 = sub_2414B2A88();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121A50);
  result = sub_2414B56E0();
  v11 = result;
  if (*(_QWORD *)(v9 + 16))
  {
    v36 = v3;
    v12 = 0;
    v13 = *(_QWORD *)(v9 + 64);
    v39 = (_QWORD *)(v9 + 64);
    v14 = 1 << *(_BYTE *)(v9 + 32);
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v16 = v15 & v13;
    v38 = (unint64_t)(v14 + 63) >> 6;
    v17 = result + 64;
    v37 = a2;
    v18 = 16;
    if ((a2 & 1) != 0)
      v18 = 32;
    v40 = v18;
    while (1)
    {
      if (v16)
      {
        v20 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v21 = v20 | (v12 << 6);
      }
      else
      {
        v22 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = (uint64_t)v39;
        if (v22 >= v38)
          goto LABEL_33;
        v23 = v39[v22];
        ++v12;
        if (!v23)
        {
          v12 = v22 + 1;
          if (v22 + 1 >= v38)
            goto LABEL_33;
          v23 = v39[v12];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_33:
              if ((v37 & 1) == 0)
              {
                result = swift_release();
                v3 = v36;
                goto LABEL_40;
              }
              v34 = 1 << *(_BYTE *)(v9 + 32);
              if (v34 >= 64)
                bzero(v39, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v39 = -1 << v34;
              v3 = v36;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                v12 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_42;
                if (v12 >= v38)
                  goto LABEL_33;
                v23 = v39[v12];
                ++v24;
                if (v23)
                  goto LABEL_23;
              }
            }
            v12 = v24;
          }
        }
LABEL_23:
        v16 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v12 << 6);
      }
      v25 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v21);
      v26 = *(_QWORD *)(v6 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + v40))(v8, *(_QWORD *)(v9 + 56) + v26 * v21, v5);
      result = sub_2414B58C0();
      v27 = -1 << *(_BYTE *)(v11 + 32);
      v28 = result & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v17 + 8 * v29);
        }
        while (v33 == -1);
        v19 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v17 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v19) = v25;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 56) + v26 * v19, v8, v5);
      ++*(_QWORD *)(v11 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v11;
  return result;
}

unint64_t sub_241409A34(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_2414B5470();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_2414B58CC();
        swift_bridgeObjectRetain();
        sub_2414B4DD4();
        v9 = sub_2414B58FC();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_241409C08(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_2414B5470();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v6);
        sub_2414B4D68();
        sub_2414B58CC();
        v11 = v10;
        sub_2414B4DD4();
        v12 = sub_2414B58FC();

        result = swift_bridgeObjectRelease();
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || v15 >= v16 + 1)
            *v15 = *v16;
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (_OWORD *)(v17 + 32 * v3);
          v19 = (_OWORD *)(v17 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v18 >= v19 + 2))
          {
            v9 = v19[1];
            *v18 = *v19;
            v18[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_241409DF8(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, unint64_t, uint64_t);
  unint64_t v33;
  uint64_t v34;

  v4 = sub_2414B2A88();
  v34 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = sub_2414B5470();
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v33 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v34 + 72);
      v32 = *(void (**)(char *, unint64_t, uint64_t))(v34 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12;
        v16 = v12 * v9;
        v17 = v13;
        v32(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        sub_2412C8030(&qword_257126EE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
        v18 = sub_2414B4C78();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v33)
        {
          if (v19 >= v33 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v7 = v14;
            if (v15 * a1 < v16
              || (v12 = v15, *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15)))
            {
              swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v22 = *(_QWORD *)(a2 + 56);
            v23 = (_QWORD *)(v22 + 8 * a1);
            v24 = (_QWORD *)(v22 + 8 * v9);
            if (a1 != v9 || (a1 = v9, v23 >= v24 + 1))
            {
              *v23 = *v24;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v33 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v7 = v14;
        v12 = v15;
LABEL_5:
        v9 = (v9 + 1) & v13;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v25 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v26 = *v25;
    v27 = (-1 << a1) - 1;
  }
  else
  {
    v25 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v25;
    v26 = (-1 << a1) - 1;
  }
  *v25 = v27 & v26;
  v28 = *(_QWORD *)(a2 + 16);
  v29 = __OFSUB__(v28, 1);
  v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_24140A098(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_2414B5470();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_2414B58C0();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24140A22C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_2414B5470();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_2414B58C0();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_QWORD *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        v16 = *(_QWORD *)(*(_QWORD *)(sub_2414B2A88() - 8) + 72);
        v17 = v16 * v3;
        result = v15 + v16 * v3;
        v18 = v16 * v6;
        v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v17 == v18)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void *sub_24140A3E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121A90);
  v2 = *v0;
  v3 = sub_2414B56D4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v21 = __clz(__rbit64(v19));
    v12 = (v19 - 1) & v19;
    v15 = v21 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24140A574()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_2414B2B30();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121AB8);
  v24 = v0;
  v5 = *v0;
  v6 = sub_2414B56D4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24140A7A4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121A68);
  v2 = *v0;
  v3 = sub_2414B56D4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v19;
    v22[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24140A950()
{
  return sub_24140AB2C(&qword_257121A78);
}

id sub_24140A95C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _OWORD v22[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_257127D48);
  v2 = *v0;
  v3 = sub_2414B56D4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_2412E4960(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_2412D8D3C(v22, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24140AB20()
{
  return sub_24140AB2C(&qword_257121A70);
}

void *sub_24140AB2C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_2414B56D4();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24140ACD8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_2414B2A88();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121A60);
  v24 = v0;
  v5 = *v0;
  v6 = sub_2414B56D4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = (void *)swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24140AF08()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  __int128 v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257127D40);
  v2 = *v0;
  v3 = sub_2414B56D4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      v9 = v27 + 1;
      if (v27 + 1 >= v13)
        goto LABEL_26;
      v28 = *(_QWORD *)(v6 + 8 * v9);
      if (!v28)
        break;
    }
LABEL_25:
    v12 = (v28 - 1) & v28;
    v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)(v21 + 16);
    v23 = *(_QWORD *)(v21 + 24);
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v25 = *(_OWORD *)v21;
    *v24 = v19;
    v24[1] = v18;
    v26 = *(_QWORD *)(v4 + 56) + v20;
    *(_OWORD *)v26 = v25;
    *(_QWORD *)(v26 + 16) = v22;
    *(_QWORD *)(v26 + 24) = v23;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v29 = v27 + 2;
  if (v29 >= v13)
    goto LABEL_26;
  v28 = *(_QWORD *)(v6 + 8 * v29);
  if (v28)
  {
    v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v9);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_24140B0CC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121A98);
  v2 = *v0;
  v3 = sub_2414B56D4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24140B26C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DC68);
  v2 = *v0;
  v3 = sub_2414B56D4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v16 >= v13)
      goto LABEL_26;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_26;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
        break;
    }
LABEL_25:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + 16 * v15) = *(_OWORD *)(*(_QWORD *)(v2 + 56) + 16 * v15);
    result = (void *)swift_retain();
  }
  v18 = v16 + 2;
  if (v18 >= v13)
    goto LABEL_26;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24140B404()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DC70);
  v2 = *v0;
  v3 = sub_2414B56D4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24140B5B8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543815D0);
  v2 = *v0;
  v3 = sub_2414B56D4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24140B744()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_2414B2A88();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257121A50);
  v24 = v0;
  v5 = *v0;
  v6 = sub_2414B56D4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v19 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v19, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v17) = v18;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v19, v4, v1);
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24140B964()
{
  _QWORD *v0;
  char *v1;

  v1 = (char *)v0 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x70);
  swift_beginAccess();
  return *(_QWORD *)v1;
}

id sub_24140B9B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384208);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2414B2CE0();
  MEMORY[0x24BDAC7A8](v8);
  v9 = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 0);
  v10 = objc_msgSend(v9, sel_titleLabel);
  if (v10)
  {
    v11 = v10;
    if (qword_254384540 != -1)
      swift_once();
    objc_msgSend(v11, sel_setFont_, qword_254384538);

  }
  v12 = objc_msgSend(v9, sel_titleLabel);
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v12, sel_setAdjustsFontForContentSizeCategory_, 1);

  }
  objc_msgSend(v9, sel_setMaximumContentSizeCategory_, *MEMORY[0x24BEBE090]);
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  v14 = (void *)sub_2414B4D44();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setTitle_forState_, v14, 0);

  if (qword_2543845A8 != -1)
    swift_once();
  objc_msgSend(v9, sel_setTitleColor_forState_, qword_254384598, 0);
  if (qword_254384590 != -1)
    swift_once();
  objc_msgSend(v9, sel_setTitleColor_forState_, qword_254384580, 4);
  sub_2412CC884(0, &qword_2543845C8);
  v15 = v9;
  sub_2414B2CB0();
  sub_2414B2D34();
  v16 = sub_2414B2D40();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v7, 0, 1, v16);
  v17 = (void *)sub_2414B517C();
  objc_msgSend(v15, sel_setHoverStyle_, v17);

  return v15;
}

void _s11MediaCoreUI8ScopeBarC5coderACyxGSgSo7NSCoderC_tcfc_0()
{
  char *v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  v1 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v2 = *MEMORY[0x24BEE4EA0] & *(_QWORD *)v0;
  v3 = &v0[*(_QWORD *)(v2 + 0x60)];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  v4 = &v0[*(_QWORD *)((*v1 & *(_QWORD *)v0) + 0x68)];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  v4[32] = 1;
  v5 = *(_QWORD *)((*v1 & *(_QWORD *)v0) + 0x70);
  v6 = *(_QWORD *)(v2 + 80);
  *(_QWORD *)&v0[v5] = sub_2414B4F00();
  v7 = &v0[*(_QWORD *)((*v1 & *(_QWORD *)v0) + 0x78)];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v8 = &v0[*(_QWORD *)((*v1 & *(_QWORD *)v0) + 0x80)];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(&v0[*(_QWORD *)((*v1 & *(_QWORD *)v0) + 0x88)], 1, 1, v6);
  *(_QWORD *)&v0[*(_QWORD *)((*v1 & *(_QWORD *)v0) + 0x90)] = 0;
  v9 = *(_QWORD *)((*v1 & *(_QWORD *)v0) + 0x98);
  *(_QWORD *)&v0[v9] = sub_2412D0BB4();
  *(_QWORD *)&v0[*(_QWORD *)((*v1 & *(_QWORD *)v0) + 0xA0)] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v0[*(_QWORD *)((*v1 & *(_QWORD *)v0) + 0xA8)] = 0;
  *(_QWORD *)&v0[*(_QWORD *)((*v1 & *(_QWORD *)v0) + 0xB0)] = 0;
  v0[*(_QWORD *)((*v1 & *(_QWORD *)v0) + 0xB8)] = 0;

  sub_2414B5674();
  __break(1u);
}

uint64_t type metadata accessor for ScopeBar.ContentInsetMode(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ScopeBar.ContentInsetMode);
}

uint64_t sub_24140BE54()
{
  _QWORD *v0;
  char *v1;

  v1 = (char *)v0 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x78);
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_24140BEA8()
{
  _QWORD *v0;
  char *v1;

  v1 = (char *)v0 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x80);
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_24140BEFC()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_24140BF30()
{
  uint64_t v0;

  sub_2414048D8(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40), *(_BYTE *)(v0 + 41), *(_QWORD *)(v0 + 48));
}

uint64_t sub_24140BF48()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_24140BF7C(uint64_t a1)
{
  uint64_t v1;

  sub_241404B4C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD **)(v1 + 32));
}

void sub_24140BF88()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_24140BFB4()
{
  JUMPOUT(0x242695AE8);
}

double sub_24140BFC4@<D0>(uint64_t a1@<X8>)
{
  char v2;
  double result;
  __int128 v4;
  _OWORD v5[2];
  char v6;

  sub_241402AC0((uint64_t)v5);
  v2 = v6;
  result = *(double *)v5;
  v4 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

id sub_24140C004(uint64_t a1)
{
  char v1;
  __int128 v2;
  __int128 v4[2];
  char v5;

  v1 = *(_BYTE *)(a1 + 32);
  v2 = *(_OWORD *)(a1 + 16);
  v4[0] = *(_OWORD *)a1;
  v4[1] = v2;
  v5 = v1;
  return sub_241402B24(v4);
}

uint64_t sub_24140C040()
{
  return 16;
}

__n128 sub_24140C04C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24140C058@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_24140B964();
  return swift_bridgeObjectRetain();
}

uint64_t sub_24140C080()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_241402C44(v0);
}

uint64_t sub_24140C0A8()
{
  return 16;
}

__n128 sub_24140C0B4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24140C0C8()
{
  return 16;
}

__n128 sub_24140C0D4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24140C0E8()
{
  return 16;
}

__n128 sub_24140C0F4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24140C100@<X0>(uint64_t a1@<X8>)
{
  return sub_241403130(a1);
}

uint64_t sub_24140C124()
{
  return 16;
}

__n128 sub_24140C130(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of ScopeBarItemRepresentable.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t method lookup function for ScopeBar()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ScopeBar.contentInsetMode.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of ScopeBar.contentInsetMode.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of ScopeBar.contentInsetMode.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of ScopeBar.scopes.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of ScopeBar.scopes.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of ScopeBar.scopes.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of ScopeBar.selectionHandler.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of ScopeBar.selectionHandler.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x110))();
}

uint64_t dispatch thunk of ScopeBar.selectionHandler.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x118))();
}

uint64_t dispatch thunk of ScopeBar.onScopeViewsDidChange.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x120))();
}

uint64_t dispatch thunk of ScopeBar.onScopeViewsDidChange.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x130))();
}

uint64_t dispatch thunk of ScopeBar.selectedScope.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x138))();
}

uint64_t dispatch thunk of ScopeBar.selectScope(_:animated:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x150))();
}

uint64_t dispatch thunk of ScopeBar.selectScope(at:animated:)(uint64_t a1, char a2)
{
  _QWORD *v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))((*MEMORY[0x24BEE4EA0] & *v2) + 0x158))(a1, a2 & 1);
}

uint64_t getEnumTagSinglePayload for MotionCacheEntryLookupError(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MotionCacheEntryLookupError(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 33) = v3;
  return result;
}

uint64_t sub_24140C330(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_24140C34C(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    *(_BYTE *)(result + 32) = 0;
  }
  return result;
}

uint64_t sub_24140C370()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24140C394(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *, uint64_t *);
  uint64_t v5;
  uint64_t v6;

  v3 = *(uint64_t (**)(uint64_t *, uint64_t *))(v2 + 16);
  v5 = a2;
  v6 = a1;
  return v3(&v6, &v5);
}

uint64_t sub_24140C3C8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*a1, *a2);
}

uint64_t sub_24140C3F0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24140C414(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 32);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_24140C444(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 32))(*a1);
}

uint64_t sub_24140C468()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_24140C48C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_layoutIfNeeded);
}

uint64_t sub_24140C49C()
{
  return swift_deallocObject();
}

id sub_24140C4AC(id *a1)
{
  uint64_t v1;

  return sub_241405B04(a1, *(void **)(v1 + 16), *(CGFloat *)(v1 + 24), *(CGFloat *)(v1 + 32), *(CGFloat *)(v1 + 40), *(CGFloat *)(v1 + 48));
}

void sub_24140C4CC()
{
  sub_24140564C();
}

uint64_t sub_24140C4EC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_24140C518()
{
  uint64_t v0;

  sub_241406CC8(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_24140C524()
{
  return swift_deallocObject();
}

uint64_t sub_24140C534()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_24140C558()
{
  swift_release();
  return swift_deallocObject();
}

void sub_24140C57C(void *a1)
{
  uint64_t v1;

  sub_241406A64(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16));
}

uint64_t sub_24140C5B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t);
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v74[2];
  _QWORD v75[2];
  _QWORD v76[2];
  _QWORD v77[2];
  _QWORD v78[2];
  __int128 v79;
  char v80;
  __int16 v81;
  uint64_t v82;
  char v83;
  __int128 v84;
  __int128 v85;
  char v86;
  __int128 v87;
  char v88;
  __int16 v89;
  uint64_t v90;
  char v91;
  __int128 v92;
  __int128 v93;
  char v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  _OWORD v98[2];
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  _OWORD v103[3];
  _OWORD v104[3];
  _OWORD v105[2];
  _QWORD v106[12];

  v73 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383EE0);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v7 = _s24HeaderArtworkPlaceholderVMa(255, v4, v5, v6);
  MEMORY[0x242695AE8](&unk_2414BEE48, v7);
  sub_2414B3604();
  sub_2414B3514();
  sub_2414B3DB4();
  sub_2414B3514();
  _s32HeaderMetadataAndContextMenuViewVMa(255, v4, v5, v8);
  swift_getTupleTypeMetadata2();
  v9 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v9);
  v10 = sub_2414B4804();
  v58 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v56 - v11;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571278D0);
  v13 = sub_2414B3514();
  v60 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v57 = (char *)&v56 - v14;
  v15 = sub_2414B3514();
  v63 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v61 = (char *)&v56 - v16;
  v59 = v17;
  v18 = sub_2414B3514();
  v64 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v62 = (char *)&v56 - v19;
  v65 = v20;
  v21 = sub_2414B3514();
  v67 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v66 = (char *)&v56 - v22;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_257122900);
  v69 = v21;
  v23 = sub_2414B3514();
  v71 = *(_QWORD *)(v23 - 8);
  v72 = v23;
  MEMORY[0x24BDAC7A8](v23);
  v68 = (char *)&v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v70 = (uint64_t)&v56 - v26;
  v27 = v2[5];
  v103[0] = v2[4];
  v103[1] = v27;
  *(_OWORD *)((char *)&v103[1] + 10) = *(__int128 *)((char *)v2 + 90);
  v28 = v2[1];
  v99 = *v2;
  v100 = v28;
  v29 = v2[3];
  v101 = v2[2];
  v102 = v29;
  v30 = sub_2414B3880();
  if (qword_257120B88 != -1)
    v30 = swift_once();
  MEMORY[0x24BDAC7A8](v30);
  *(&v56 - 4) = v4;
  *(&v56 - 3) = v5;
  *(&v56 - 2) = (uint64_t)&v99;
  sub_2414B47F8();
  v106[0] = 0x49676E6979616C70;
  v106[1] = 0xEB000000006D6574;
  v31 = *(_QWORD *)&v103[2];
  v32 = BYTE8(v103[2]);
  sub_2412C7080(*(uint64_t *)&v103[2], SBYTE8(v103[2]));
  sub_2412F0F50(v31, v32);
  sub_2412C821C(v31, v32);
  sub_2414B3CA0();
  sub_2414B4B64();
  v33 = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v10);
  sub_24140DA48();
  v34 = v57;
  sub_2414B43D8();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v12, v10);
  sub_2414B3E68();
  v104[2] = v102;
  v105[0] = v103[0];
  *(_OWORD *)((char *)v105 + 10) = *(_OWORD *)((char *)v103 + 10);
  v104[0] = v100;
  v104[1] = v101;
  v97 = v102;
  v98[0] = v103[0];
  *(_OWORD *)((char *)v98 + 10) = *(_OWORD *)((char *)v103 + 10);
  v95 = v100;
  v96 = v101;
  sub_2413139F4((uint64_t)v104, (uint64_t)v106);
  sub_2412FD220((uint64_t)v104, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
  sub_2412FD278((uint64_t)&v87);
  sub_2412FD220((uint64_t)v104, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
  v79 = v87;
  v80 = v88;
  v81 = v89;
  v82 = v90;
  v83 = v91;
  v84 = v92;
  v85 = v93;
  v86 = v94;
  sub_2413D22DC();
  v35 = sub_2412C8FC4(&qword_2571278C8, &qword_2571278D0, MEMORY[0x24BDEFFA0]);
  v78[0] = v33;
  v78[1] = v35;
  v36 = MEMORY[0x24BDED308];
  v37 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v13, v78);
  v38 = v61;
  sub_2414B4528();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v34, v13);
  sub_2414B3E80();
  sub_2412FD220((uint64_t)v106, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
  sub_2412FD278((uint64_t)&v87);
  sub_2412FD220((uint64_t)v104, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
  v79 = v87;
  v80 = v88;
  v81 = v89;
  v82 = v90;
  v83 = v91;
  v84 = v92;
  v85 = v93;
  v86 = v94;
  sub_2413D2440();
  v39 = MEMORY[0x24BDECC60];
  v77[0] = v37;
  v77[1] = MEMORY[0x24BDECC60];
  v40 = v59;
  v41 = MEMORY[0x242695AE8](v36, v59, v77);
  v42 = v62;
  sub_2414B4528();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v38, v40);
  sub_2414B3E50();
  if (qword_2571208D8 != -1)
    swift_once();
  sub_2412FD220((uint64_t)v106, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
  sub_2412FD278((uint64_t)&v87);
  sub_2412FD220((uint64_t)v104, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
  v79 = v87;
  v80 = v88;
  v81 = v89;
  v82 = v90;
  v83 = v91;
  v84 = v92;
  v85 = v93;
  v86 = v94;
  sub_24144FEC4((uint64_t)&v79);
  v76[0] = v41;
  v76[1] = v39;
  v43 = MEMORY[0x24BDED308];
  v44 = v65;
  v45 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v65, v76);
  v46 = v66;
  sub_2414B4528();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v42, v44);
  sub_24140D3C4();
  v75[0] = v45;
  v75[1] = v39;
  v47 = v69;
  v48 = MEMORY[0x242695AE8](v43, v69, v75);
  v49 = (uint64_t)v68;
  sub_2414B4174();
  swift_release();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v46, v47);
  v50 = sub_2412C8FC4((unint64_t *)&qword_2571228F8, qword_257122900, MEMORY[0x24BDEFB48]);
  v74[0] = v48;
  v74[1] = v50;
  v51 = v43;
  v52 = v72;
  MEMORY[0x242695AE8](v51, v72, v74);
  v53 = v70;
  sub_2412FBF34(v49, v52, v70);
  v54 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
  v54(v49, v52);
  sub_2412EEA1C(v53, v52, v73);
  return ((uint64_t (*)(uint64_t, uint64_t))v54)(v53, v52);
}

uint64_t sub_24140CE34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  _QWORD v34[2];
  __int128 v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[2];
  uint64_t v46;
  __int128 v47;
  _QWORD v48[2];
  _QWORD v49[2];
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  char v53;
  __int128 v54;
  uint64_t v55;
  char v56;
  __int128 v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  char v61;
  __int128 v62;
  uint64_t v63;
  char v64;
  __int128 v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char v69;
  __int128 v70;

  v42 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383EE0);
  v9 = _s24HeaderArtworkPlaceholderVMa(255, a2, a3, v8);
  v34[1] = MEMORY[0x242695AE8](&unk_2414BEE48, v9);
  *(_QWORD *)&v35 = v7;
  v36 = sub_2414B3604();
  v10 = sub_2414B3514();
  sub_2414B3DB4();
  v37 = (void (*)(uint64_t, uint64_t))v10;
  v11 = sub_2414B3514();
  v38 = *(_QWORD *)(v11 - 8);
  v39 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v40 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v41 = (uint64_t)v34 - v14;
  v15 = sub_2414B4648();
  if (qword_257120B90 != -1)
    swift_once();
  sub_2414B4A44();
  v16 = sub_2414B31B4();
  v50 = v15;
  *(_QWORD *)&v51 = v66;
  BYTE8(v51) = v67;
  v52 = v68;
  v53 = v69;
  v54 = v70;
  MEMORY[0x24BDAC7A8](v16);
  v34[-4] = a2;
  v34[-3] = a3;
  v34[-2] = a1;
  sub_2414B4A44();
  v34[0] = a1;
  v17 = sub_2413D6340();
  sub_2414B4504();
  swift_release();
  v18 = v63;
  v19 = v64;
  v50 = v58;
  *(_QWORD *)&v51 = v59;
  BYTE8(v51) = BYTE8(v59);
  v52 = v60;
  v53 = v61;
  v54 = v62;
  v55 = v63;
  v56 = v64;
  v57 = v65;
  v20 = MEMORY[0x242695AE8](MEMORY[0x24BDEDC10], v36);
  v49[0] = v17;
  v49[1] = v20;
  v21 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v37, v49);
  v22 = (uint64_t)v40;
  sub_2414B439C();
  swift_release();
  sub_2412C821C(v18, v19);
  v23 = sub_24136DCDC();
  v48[0] = v21;
  v48[1] = v23;
  v24 = v39;
  v36 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v39, v48);
  v25 = v41;
  sub_2412FBF34(v22, v24, v41);
  v26 = v38;
  v37 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
  v37(v22, v24);
  sub_2412C84FC(*(_QWORD *)v34[0]);
  NowPlayingController.sharedViews.getter(v45);
  v58 = v45[0];
  v28 = type metadata accessor for NowPlayingViews(0, a2, a3, v27);
  NowPlayingViews.metadata.getter(v28, &v50);
  swift_unknownObjectRelease();
  v46 = v50;
  v35 = v51;
  v47 = v51;
  v30 = _s32HeaderMetadataAndContextMenuViewVMa(0, a2, a3, v29);
  v31 = MEMORY[0x242695AE8](&unk_2414C8110, v30);
  sub_2412FBF34((uint64_t)&v46, v30, (uint64_t)&v58);
  swift_release();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v22, v25, v24);
  v50 = v58;
  v51 = v59;
  v46 = v22;
  *(_QWORD *)&v47 = &v50;
  swift_unknownObjectRetain();
  swift_retain();
  v45[0] = v24;
  v45[1] = v30;
  v43 = v36;
  v44 = v31;
  sub_2412F68CC(&v46, 2uLL, (uint64_t)v45);
  swift_release();
  swift_unknownObjectRelease();
  v32 = (uint64_t (*)(uint64_t, uint64_t))v37;
  v37(v25, v24);
  swift_release();
  swift_unknownObjectRelease();
  return v32(v22, v24);
}

uint64_t sub_24140D2B0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  sub_2412C84FC(*a1);
  NowPlayingController.sharedViews.getter(&v20);
  v8 = type metadata accessor for NowPlayingViews(0, a2, a3, v7);
  NowPlayingViews.artwork.getter(v8, (uint64_t)&v18);
  swift_unknownObjectRelease();
  v9 = v18;
  v10 = v19;
  v16 = v18;
  v17 = v19;
  v12 = _s24HeaderArtworkPlaceholderVMa(0, a2, a3, v11);
  MEMORY[0x242695AE8](&unk_2414BEE48, v12);
  sub_2412FBF34((uint64_t)&v16, v12, (uint64_t)&v21);
  sub_2412C821C(v9, v10);
  v13 = v21;
  v14 = v22;
  v18 = v21;
  v19 = v22;
  sub_2412EEA1C((uint64_t)&v18, v12, a4);
  return sub_2412C821C(v13, v14);
}

uint64_t sub_24140D3C4()
{
  uint64_t v0;

  sub_2414B31E4();
  if (qword_257120728 != -1)
    swift_once();
  swift_retain();
  sub_2414B3214();
  swift_release();
  swift_release();
  sub_2414B31F0();
  sub_2414B4A68();
  sub_2414B4A8C();
  swift_release();
  sub_2414B3214();
  swift_release();
  swift_release();
  sub_2414B31FC();
  swift_release();
  swift_release();
  sub_2414B31E4();
  if (qword_257120730 != -1)
    swift_once();
  swift_retain();
  sub_2414B3214();
  swift_release();
  swift_release();
  sub_2414B31F0();
  sub_2414B4A68();
  sub_2414B4A8C();
  swift_release();
  sub_2414B3214();
  swift_release();
  swift_release();
  sub_2414B31FC();
  swift_release();
  swift_release();
  v0 = sub_2414B31CC();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_24140D5F8@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  *(_QWORD *)a2 = sub_2414B3658();
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = swift_getKeyPath();
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 56) = 0u;
  *(_OWORD *)(a2 + 72) = 0u;
  *(_WORD *)(a2 + 88) = 0;
  result = swift_getKeyPath();
  *(_QWORD *)(a2 + 96) = result;
  *(_BYTE *)(a2 + 104) = 0;
  *(_BYTE *)(a2 + 105) = a1;
  return result;
}

uint64_t sub_24140D68C(uint64_t a1)
{
  swift_unknownObjectRelease();
  sub_2412C823C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88), *(_BYTE *)(a1 + 89));
  return sub_2412C821C(*(_QWORD *)(a1 + 96), *(_BYTE *)(a1 + 104));
}

uint64_t sub_24140D6EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  v17 = *(_QWORD *)(a2 + 24);
  v18 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 80);
  v16 = *(_QWORD *)(a2 + 72);
  v11 = *(_BYTE *)(a2 + 88);
  v12 = *(_BYTE *)(a2 + 89);
  swift_unknownObjectRetain();
  sub_2412C6F48(v18, v17, v5, v6, v7, v8, v9, v16, v10, v11, v12);
  *(_QWORD *)(a1 + 16) = v18;
  *(_QWORD *)(a1 + 24) = v17;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v16;
  *(_QWORD *)(a1 + 80) = v10;
  *(_BYTE *)(a1 + 88) = v11;
  *(_BYTE *)(a1 + 89) = v12;
  v13 = *(_QWORD *)(a2 + 96);
  v14 = *(_BYTE *)(a2 + 104);
  sub_2412C7080(v13, v14);
  *(_QWORD *)(a1 + 96) = v13;
  *(_BYTE *)(a1 + 104) = v14;
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  return a1;
}

uint64_t sub_24140D7F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v27;
  char v28;
  char v29;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 72);
  v27 = *(_QWORD *)(a2 + 80);
  v28 = *(_BYTE *)(a2 + 88);
  v29 = *(_BYTE *)(a2 + 89);
  sub_2412C6F48(v4, v5, v6, v7, v8, v9, v10, v11, v27, v28, v29);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 48);
  v17 = *(_QWORD *)(a1 + 56);
  v18 = *(_QWORD *)(a1 + 64);
  v19 = *(_QWORD *)(a1 + 72);
  v20 = *(_QWORD *)(a1 + 80);
  v21 = *(_BYTE *)(a1 + 88);
  v22 = *(_BYTE *)(a1 + 89);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v27;
  *(_BYTE *)(a1 + 88) = v28;
  *(_BYTE *)(a1 + 89) = v29;
  sub_2412C823C(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  v23 = *(_QWORD *)(a2 + 96);
  LOBYTE(v5) = *(_BYTE *)(a2 + 104);
  sub_2412C7080(v23, v5);
  v24 = *(_QWORD *)(a1 + 96);
  v25 = *(_BYTE *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = v23;
  *(_BYTE *)(a1 + 104) = v5;
  sub_2412C821C(v24, v25);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  return a1;
}

uint64_t sub_24140D934(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRelease();
  v4 = *(_BYTE *)(a2 + 88);
  v5 = *(_BYTE *)(a2 + 89);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_QWORD *)(a1 + 64);
  v13 = *(_QWORD *)(a1 + 72);
  v14 = *(_QWORD *)(a1 + 80);
  v15 = *(_BYTE *)(a1 + 88);
  v16 = *(_BYTE *)(a1 + 89);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = v4;
  *(_BYTE *)(a1 + 89) = v5;
  sub_2412C823C(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16);
  v17 = *(_BYTE *)(a2 + 104);
  v18 = *(_QWORD *)(a1 + 96);
  v19 = *(_BYTE *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = v17;
  sub_2412C821C(v18, v19);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  return a1;
}

uint64_t _s10HeaderViewVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s10HeaderViewVMn);
}

uint64_t sub_24140DA04()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24140DA3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_24140CE34(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_24140DA48()
{
  unint64_t result;

  result = qword_257127DD0;
  if (!qword_257127DD0)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingGeometryIdentifier, &type metadata for NowPlayingGeometryIdentifier);
    atomic_store(result, (unint64_t *)&qword_257127DD0);
  }
  return result;
}

uint64_t sub_24140DA8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24140D2B0(*(uint64_t **)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_24140DA98(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];
  _QWORD v18[2];
  _QWORD v19[2];
  _QWORD v20[2];
  _QWORD v21[2];

  v1 = *a1;
  v2 = a1[1];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383EE0);
  v4 = _s24HeaderArtworkPlaceholderVMa(255, v1, v2, v3);
  MEMORY[0x242695AE8](&unk_2414BEE48, v4);
  sub_2414B3604();
  sub_2414B3514();
  sub_2414B3DB4();
  sub_2414B3514();
  _s32HeaderMetadataAndContextMenuViewVMa(255, v1, v2, v5);
  swift_getTupleTypeMetadata2();
  v6 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v6);
  v7 = sub_2414B4804();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571278D0);
  v8 = sub_2414B3514();
  v9 = sub_2414B3514();
  v10 = sub_2414B3514();
  v11 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_257122900);
  v12 = sub_2414B3514();
  v21[0] = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v7);
  v21[1] = sub_2412C8FC4(&qword_2571278C8, &qword_2571278D0, MEMORY[0x24BDEFFA0]);
  v13 = MEMORY[0x24BDED308];
  v14 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v8, v21);
  v15 = MEMORY[0x24BDECC60];
  v20[0] = v14;
  v20[1] = MEMORY[0x24BDECC60];
  v19[0] = MEMORY[0x242695AE8](v13, v9, v20);
  v19[1] = v15;
  v18[0] = MEMORY[0x242695AE8](v13, v10, v19);
  v18[1] = v15;
  v17[0] = MEMORY[0x242695AE8](v13, v11, v18);
  v17[1] = sub_2412C8FC4((unint64_t *)&qword_2571228F8, qword_257122900, MEMORY[0x24BDEFB48]);
  return MEMORY[0x242695AE8](v13, v12, v17);
}

uint64_t sub_24140DCF0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)v1;
  v4 = *(unsigned __int8 *)(v1 + 8);
  sub_2412C6F44(v3, v4);
  sub_241346104(v3, v4, a1);
  return sub_2412C8228(v3, v4);
}

void NowPlayingQueueChapterList.init(_:isExpanded:title:chapterBuilder:)(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = swift_getKeyPath();
  *(_BYTE *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = a1;
  *(_BYTE *)(a3 + 24) = a2;
  type metadata accessor for NowPlayingQueueChapterList();
}

uint64_t sub_24140DDC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t result;
  _QWORD *v6;
  uint64_t v7;

  result = v2();
  v6 = (_QWORD *)(v3 + *(int *)(a1 + 80));
  *v6 = v1;
  v6[1] = v7;
  return result;
}

void type metadata accessor for NowPlayingQueueChapterList()
{
  JUMPOUT(0x242695A4CLL);
}

uint64_t NowPlayingQueueChapterList.body.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t OpaqueTypeConformance2;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);
  uint64_t v48;
  uint64_t result;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _OWORD *v55;
  uint64_t v61;
  uint64_t (*v62)(void);
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t);
  _QWORD v71[4];
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD v111[2];
  _QWORD v112[3];
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD v118[2];
  _QWORD v119[2];
  _QWORD v120[2];

  v94 = a2;
  v103 = sub_2414B3A9C();
  v93 = *(_QWORD *)(v103 - 8);
  MEMORY[0x24BDAC7A8](v103);
  v92 = (char *)v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_2414B38C8();
  v87 = *(_QWORD *)(v90 - 8);
  MEMORY[0x24BDAC7A8](v90);
  v85 = (char *)v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_2414B35A4();
  MEMORY[0x24BDAC7A8](v82);
  v83 = (char *)v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_2414B3598();
  MEMORY[0x24BDAC7A8](v91);
  v89 = (uint64_t)v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_2414B361C();
  v86 = *(_QWORD *)(v88 - 8);
  MEMORY[0x24BDAC7A8](v88);
  v84 = (char *)v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122240);
  MEMORY[0x24BDAC7A8](v8);
  v101 = (char *)v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = a1[3];
  v10 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126C00);
  v11 = sub_2414B3514();
  v12 = sub_2414B3514();
  v100 = a1[6];
  v120[0] = v100;
  v120[1] = MEMORY[0x24BDECC60];
  v13 = MEMORY[0x24BDED308];
  v14 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v10, v120);
  v15 = sub_2412C8FC4(&qword_257126C08, &qword_257126C00, MEMORY[0x24BDEFB48]);
  v119[0] = v14;
  v119[1] = v15;
  v16 = MEMORY[0x242695AE8](v13, v11, v119);
  v17 = sub_24140E828();
  v118[0] = v16;
  v118[1] = v17;
  v18 = MEMORY[0x242695AE8](v13, v12, v118);
  v113 = v12;
  v114 = MEMORY[0x24BEE1328];
  v115 = v18;
  v116 = MEMORY[0x24BEE1338];
  sub_2414B4810();
  v96 = a1[2];
  v19 = v96;
  swift_getTupleTypeMetadata2();
  v20 = sub_2414B4F60();
  v98 = a1[4];
  v97 = a1;
  sub_2414B3514();
  v21 = sub_2414B3514();
  v22 = MEMORY[0x242695AE8](MEMORY[0x24BEE12D8], v20);
  v95 = a1[5];
  v113 = v20;
  v114 = v19;
  v115 = v21;
  v116 = v22;
  v117 = v95;
  sub_2414B4954();
  sub_2414B53B0();
  swift_getTupleTypeMetadata2();
  v23 = sub_2414B4B1C();
  v24 = sub_2414B49B4();
  v75 = *(_QWORD *)(v24 - 8);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)v71 - v26;
  v28 = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v23, v25);
  v112[0] = MEMORY[0x24BDF5138];
  v112[1] = v28;
  v112[2] = MEMORY[0x24BDF5138];
  v29 = MEMORY[0x242695AE8](MEMORY[0x24BDF4AF8], v24, v112);
  v30 = sub_2412C8FC4(&qword_257122248, &qword_257122240, MEMORY[0x24BEE30C8]);
  v113 = v24;
  v114 = v8;
  v115 = v29;
  v116 = v30;
  v31 = MEMORY[0x242695A94](0, &v113, MEMORY[0x24BDF2800], 0);
  v78 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v76 = (char *)v71 - v32;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257127DE0);
  v80 = v31;
  v33 = sub_2414B3514();
  v79 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v77 = (char *)v71 - v34;
  v113 = v24;
  v114 = v8;
  v81 = v8;
  v71[2] = v29;
  v115 = v29;
  v116 = v30;
  v71[1] = v30;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v36 = sub_2412C8FC4(&qword_257127DE8, &qword_257127DE0, MEMORY[0x24BDF0960]);
  v71[3] = OpaqueTypeConformance2;
  v111[0] = OpaqueTypeConformance2;
  v111[1] = v36;
  v37 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v33, v111);
  v38 = sub_2412C8030(&qword_254382BA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEF428], MEMORY[0x24BDEF420]);
  v113 = v33;
  v114 = v103;
  v115 = v37;
  v116 = v38;
  v73 = v38;
  v39 = MEMORY[0x242695A94](0, &v113, MEMORY[0x24BDF2380], 0);
  v40 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v72 = (char *)v71 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v42);
  v74 = (uint64_t)v71 - v43;
  v104 = v96;
  v105 = v99;
  v106 = v98;
  v107 = v95;
  v44 = v97[7];
  v108 = v100;
  v109 = v44;
  v110 = v102;
  sub_2414B49A8();
  v45 = *MEMORY[0x24BDECF38];
  v46 = sub_2414B346C();
  v47 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
  v48 = (uint64_t)v101;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 104))(v101, v45, v46);
  sub_2412C8030(qword_257122270, v47, MEMORY[0x24BDECF78]);
  result = sub_2414B4CE4();
  if ((result & 1) != 0)
  {
    v102 = v40;
    v50 = v76;
    sub_2414B42B8();
    sub_2412CBE78(v48, &qword_257122240);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v27, v24);
    v51 = v84;
    sub_2414B3610();
    v52 = v87;
    v53 = v85;
    v54 = v90;
    (*(void (**)(char *, _QWORD, uint64_t))(v87 + 104))(v85, *MEMORY[0x24BDEEB68], v90);
    v55 = v83;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(&v83[*(int *)(v82 + 20)], v53, v54);
    __asm { FMOV            V0.2D, #4.0 }
    *v55 = _Q0;
    (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
    v61 = v89;
    sub_241307588((uint64_t)v55, v89);
    *(_QWORD *)(v61 + *(int *)(v91 + 20)) = 0xC000000000000000;
    sub_2412C68F4((uint64_t)v55, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
    v62 = MEMORY[0x24BDED970];
    sub_2412C8030(qword_257127DF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDED970], MEMORY[0x24BDED968]);
    v63 = v77;
    v64 = v80;
    sub_2414B4240();
    sub_2412C68F4(v61, (uint64_t (*)(_QWORD))v62);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v51, v88);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v50, v64);
    v65 = v92;
    sub_2414B3634();
    v66 = (uint64_t)v72;
    v67 = v103;
    v68 = v73;
    sub_2414B41D4();
    (*(void (**)(char *, uint64_t))(v93 + 8))(v65, v67);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v63, v33);
    v113 = v33;
    v114 = v67;
    v115 = v37;
    v116 = v68;
    swift_getOpaqueTypeConformance2();
    v69 = v74;
    sub_2412FBF34(v66, v39, v74);
    v70 = *(void (**)(uint64_t, uint64_t))(v102 + 8);
    v70(v66, v39);
    sub_2412EEA1C(v69, v39, v94);
    return ((uint64_t (*)(uint64_t, uint64_t))v70)(v69, v39);
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_24140E828()
{
  unint64_t result;

  result = qword_257127DD8;
  if (!qword_257127DD8)
  {
    result = MEMORY[0x242695AE8](&unk_2414CD9C8, &type metadata for PlayingItemBackgroundAppearanceModifier);
    atomic_store(result, (unint64_t *)&qword_257127DD8);
  }
  return result;
}

void sub_24140E86C()
{
  type metadata accessor for NowPlayingQueueChapterList();
}

uint64_t sub_24140E8CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t KeyPath;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(uint64_t, uint64_t);
  uint64_t v112;
  uint64_t v113;
  _BYTE v114[80];

  *(_QWORD *)(v1 + 272) = a1;
  v7 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v1 + 24) = v7;
  *(_QWORD *)(v1 + 8) = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v1 + 16) = &v114[-v8];
  *(_QWORD *)v1 = swift_getTupleTypeMetadata2();
  v9 = sub_2414B4F60();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126C00);
  *(_QWORD *)(v1 + 200) = v3;
  *(_QWORD *)(v1 + 320) = sub_2414B3514();
  v10 = sub_2414B3514();
  v11 = MEMORY[0x242695AE8](MEMORY[0x24BEE12D8], v9);
  *(_QWORD *)(v1 + 56) = v9;
  *(_QWORD *)(v6 - 192) = v9;
  *(_QWORD *)(v6 - 184) = v5;
  *(_QWORD *)(v1 + 192) = v5;
  *(_QWORD *)(v1 + 328) = v10;
  *(_QWORD *)(v6 - 176) = v10;
  *(_QWORD *)(v6 - 168) = v11;
  *(_QWORD *)(v1 + 32) = v11;
  *(_QWORD *)(v1 + 216) = v4;
  *(_QWORD *)(v6 - 160) = v4;
  v12 = sub_2414B4954();
  *(_QWORD *)(v1 + 184) = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v1 + 40) = &v114[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v1 + 48) = &v114[-v15];
  *(_QWORD *)(v1 + 232) = v16;
  v17 = sub_2414B53B0();
  *(_QWORD *)(v1 + 248) = v17;
  *(_QWORD *)(v1 + 208) = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v1 + 240) = &v114[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v1 + 224) = &v114[-v20];
  v21 = type metadata accessor for QueueHeaderBackground();
  *(_QWORD *)(v1 + 128) = v21;
  *(_QWORD *)(v1 + 152) = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v23 = &v114[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127E78);
  MEMORY[0x24BDAC7A8](v24);
  v26 = &v114[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v27 = sub_2414B3514();
  *(_QWORD *)(v1 + 144) = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  *(_QWORD *)(v1 + 64) = &v114[-v28];
  v29 = sub_2414B3514();
  *(_QWORD *)(v1 + 176) = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  *(_QWORD *)(v1 + 104) = &v114[-v30];
  *(_QWORD *)(v1 + 96) = v29;
  v31 = sub_2414B3514();
  *(_QWORD *)(v1 + 160) = *(_QWORD *)(v31 - 8);
  *(_QWORD *)(v1 + 120) = v31;
  v32 = MEMORY[0x24BDAC7A8](v31);
  *(_QWORD *)(v1 + 136) = &v114[-v33];
  v34 = MEMORY[0x24BDECC60];
  *(_QWORD *)(v6 - 104) = v2;
  *(_QWORD *)(v6 - 96) = v34;
  v35 = MEMORY[0x24BDED308];
  v36 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v27, v6 - 104, v32);
  *(_QWORD *)(v1 + 72) = v36;
  v37 = sub_2412C8FC4(&qword_257126C08, &qword_257126C00, MEMORY[0x24BDEFB48]);
  *(_QWORD *)(v6 - 120) = v36;
  *(_QWORD *)(v6 - 112) = v37;
  *(_QWORD *)(v1 + 304) = v37;
  v38 = MEMORY[0x242695AE8](v35, v29, v6 - 120);
  *(_QWORD *)(v1 + 88) = v38;
  v39 = sub_24140E828();
  *(_QWORD *)(v6 - 136) = v38;
  *(_QWORD *)(v6 - 128) = v39;
  v40 = MEMORY[0x242695AE8](v35, v31, v6 - 136);
  *(_QWORD *)(v1 + 112) = v40;
  v41 = MEMORY[0x24BEE1328];
  *(_QWORD *)(v6 - 192) = v31;
  *(_QWORD *)(v6 - 184) = v41;
  v42 = MEMORY[0x24BEE1338];
  *(_QWORD *)(v6 - 176) = v40;
  *(_QWORD *)(v6 - 168) = v42;
  v43 = sub_2414B4810();
  *(_QWORD *)(v1 + 288) = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  *(_QWORD *)(v1 + 168) = &v114[-((v44 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v45);
  *(_QWORD *)(v1 + 80) = &v114[-v46];
  MEMORY[0x24BDAC7A8](v47);
  *(_QWORD *)(v1 + 296) = &v114[-v48];
  sub_2414B3E80();
  v49 = *(_QWORD *)(v1 + 264);
  sub_24140DCF0((_BYTE *)(v6 - 192));
  v50 = *(_QWORD *)(v1 + 64);
  sub_2414B4528();
  sub_24140DCF0((_BYTE *)(v6 - 192));
  v51 = 3;
  if (!*(_BYTE *)(v49 + 24))
    v51 = -1;
  v52 = 12;
  if (*(_BYTE *)(v49 + 24))
    v52 = 0;
  if (*(_BYTE *)(v6 - 192) == 2)
    v53 = v51;
  else
    v53 = v52;
  *((_QWORD *)v23 + 2) = swift_getKeyPath();
  v23[24] = 0;
  v54 = *(_QWORD *)(v1 + 128);
  v55 = (uint64_t *)&v23[*(int *)(v54 + 28)];
  *v55 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)v23 = v53;
  v23[8] = 0;
  sub_241410434((uint64_t)v23, (uint64_t)v26);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1 + 152) + 56))(v26, 0, 1, v54);
  sub_2412C8030(&qword_257127E80, (uint64_t (*)(uint64_t))type metadata accessor for QueueHeaderBackground, (uint64_t)&unk_2414CD978);
  v56 = *(_QWORD *)(v1 + 104);
  sub_2414B4318();
  sub_2412CBE78((uint64_t)v26, &qword_257127E78);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 144) + 8))(v50, v27);
  *(_BYTE *)(v1 + 432) = 0;
  sub_2414B4798();
  LOBYTE(v55) = *(_BYTE *)(v6 - 192);
  v57 = *(_QWORD *)(v6 - 184);
  KeyPath = swift_getKeyPath();
  *(_BYTE *)(v6 - 192) = (_BYTE)v55;
  *(_QWORD *)(v6 - 184) = v57;
  *(_QWORD *)(v6 - 176) = KeyPath;
  *(_QWORD *)(v6 - 160) = 0;
  *(_QWORD *)(v6 - 152) = 0;
  *(_QWORD *)(v6 - 168) = 0;
  *(_BYTE *)(v6 - 144) = 0;
  v59 = *(_QWORD *)(v1 + 136);
  v60 = *(_QWORD *)(v1 + 96);
  MEMORY[0x242693DC0](v6 - 192, v60, &type metadata for PlayingItemBackgroundAppearanceModifier, *(_QWORD *)(v1 + 88));
  swift_release();
  sub_2412C68A4(KeyPath, 0, 0, 0, 0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 176) + 8))(v56, v60);
  *(_BYTE *)(v6 - 192) = *(_BYTE *)(v49 + 24);
  v61 = *(_QWORD *)(v1 + 80);
  v62 = *(_QWORD *)(v1 + 120);
  sub_2414B4450();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 160) + 8))(v59, v62);
  v63 = MEMORY[0x242695AE8](MEMORY[0x24BDF44C8], v43);
  v64 = *(_QWORD *)(v1 + 296);
  *(_QWORD *)(v1 + 152) = v63;
  sub_2412FBF34(v61, v43, v64);
  v65 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 288) + 8);
  *(_QWORD *)(v1 + 176) = v43;
  *(_QWORD *)(v1 + 160) = v65;
  v65(v61, v43);
  if (*(_BYTE *)(v49 + 24) == 1)
  {
    v66 = *(_QWORD *)(v49 + 16);
    *(_QWORD *)(v1 + 432) = v66;
    v67 = *(_QWORD *)(v1 + 192);
    v68 = sub_2414B4F60();
    MEMORY[0x242695AE8](MEMORY[0x24BEE12D8], v68);
    v69 = MEMORY[0x24BEE17A8];
    sub_2414B50EC();
    *(_OWORD *)(v1 + 384) = *(_OWORD *)(v6 - 192);
    *(_QWORD *)(v1 + 424) = v66;
    v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127E88);
    v71 = sub_241410480();
    *(_QWORD *)(v1 + 408) = v69;
    *(_QWORD *)(v1 + 416) = v71;
    v72 = MEMORY[0x242695AE8](MEMORY[0x24BEE1BB8], v70, v1 + 408);
    v73 = MEMORY[0x242695AE8](MEMORY[0x24BEE12C8], v68);
    sub_2414B5824();
    v74 = *(_QWORD *)(v1 + 448);
    *(_OWORD *)(v1 + 384) = *(_OWORD *)(v1 + 432);
    *(_QWORD *)(v1 + 400) = v74;
    *(_QWORD *)(v6 - 192) = v70;
    *(_QWORD *)(v6 - 184) = v68;
    *(_QWORD *)(v6 - 176) = v72;
    *(_QWORD *)(v6 - 168) = v73;
    v75 = sub_2414B559C();
    MEMORY[0x242695AE8](MEMORY[0x24BEE2620], v75);
    v76 = sub_2414B4F6C();
    *(_QWORD *)(v6 - 192) = v76;
    MEMORY[0x24BDAC7A8](v76);
    v77 = *(_QWORD *)(v1 + 280);
    *(_QWORD *)&v114[-48] = v67;
    *(_QWORD *)&v114[-40] = v77;
    v78 = *(_QWORD *)(v1 + 200);
    *(_QWORD *)&v114[-32] = v78;
    v79 = v78;
    v80 = *(_QWORD *)(v1 + 312);
    *(_QWORD *)&v114[-24] = *(_QWORD *)(v1 + 216);
    v112 = v80;
    v113 = *(_QWORD *)(v1 + 336);
    v81 = v113;
    *(_QWORD *)(v1 + 144) = swift_getKeyPath();
    v82 = *(_QWORD *)(v1 + 16);
    v83 = *(_QWORD *)(v1 + 24);
    v84 = *(_QWORD *)(v1 + 272);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v83 + 16))(v82, *(_QWORD *)(v1 + 264), v84);
    v85 = (*(unsigned __int8 *)(v83 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
    v86 = (char *)swift_allocObject();
    *((_QWORD *)v86 + 2) = v67;
    *((_QWORD *)v86 + 3) = v77;
    v87 = *(_QWORD *)(v1 + 216);
    *((_QWORD *)v86 + 4) = v79;
    *((_QWORD *)v86 + 5) = v87;
    v88 = *(_QWORD *)(v1 + 312);
    *((_QWORD *)v86 + 6) = v88;
    *((_QWORD *)v86 + 7) = v81;
    (*(void (**)(char *, uint64_t, uint64_t))(v83 + 32))(&v86[v85], v82, v84);
    v89 = (_QWORD *)swift_allocObject();
    v89[2] = *(_QWORD *)(v1 + 192);
    v89[3] = v77;
    v89[4] = *(_QWORD *)(v1 + 200);
    v89[5] = v87;
    v89[6] = v88;
    v89[7] = v81;
    v89[8] = sub_241410598;
    v89[9] = v86;
    v90 = *(_QWORD *)(v1 + 304);
    *(_QWORD *)(v1 + 368) = v81;
    *(_QWORD *)(v1 + 376) = v90;
    v91 = MEMORY[0x24BDED308];
    *(_QWORD *)(v1 + 352) = MEMORY[0x242695AE8](MEMORY[0x24BDED308], *(_QWORD *)(v1 + 320), v1 + 368);
    *(_QWORD *)(v1 + 360) = MEMORY[0x24BDECC60];
    v92 = MEMORY[0x242695AE8](v91, *(_QWORD *)(v1 + 328), v1 + 352);
    v112 = v92;
    v93 = *(_QWORD *)(v1 + 40);
    sub_2414B493C();
    *(_QWORD *)(v1 + 344) = v92;
    v94 = *(_QWORD *)(v1 + 232);
    MEMORY[0x242695AE8](MEMORY[0x24BDF4A08], v94, v1 + 344);
    v95 = *(_QWORD *)(v1 + 48);
    sub_2412FBF34(v93, v94, v95);
    v96 = *(_QWORD *)(v1 + 184);
    v97 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
    v97(v93, v94);
    v98 = *(_QWORD *)(v1 + 240);
    sub_2412EEA1C(v95, v94, v98);
    v97(v95, v94);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v96 + 56))(v98, 0, 1, v94);
  }
  else
  {
    v94 = *(_QWORD *)(v1 + 232);
    v98 = *(_QWORD *)(v1 + 240);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 184) + 56))(v98, 1, 1, v94);
    v99 = *(_QWORD *)(v1 + 304);
    *(_QWORD *)(v6 - 208) = *(_QWORD *)(v1 + 336);
    *(_QWORD *)(v6 - 200) = v99;
    v100 = MEMORY[0x24BDED308];
    *(_QWORD *)(v6 - 224) = MEMORY[0x242695AE8](MEMORY[0x24BDED308], *(_QWORD *)(v1 + 320), v6 - 208);
    *(_QWORD *)(v6 - 216) = MEMORY[0x24BDECC60];
    *(_QWORD *)(v6 - 232) = MEMORY[0x242695AE8](v100, *(_QWORD *)(v1 + 328), v6 - 224);
    MEMORY[0x242695AE8](MEMORY[0x24BDF4A08], v94, v6 - 232);
  }
  v101 = *(_QWORD *)(v1 + 224);
  sub_2412F65F0(v98, v101);
  v102 = *(_QWORD *)(v1 + 208);
  v103 = *(void (**)(uint64_t, uint64_t))(v102 + 8);
  v104 = *(_QWORD *)(v1 + 248);
  v103(v98, v104);
  v105 = *(_QWORD *)(v1 + 296);
  v106 = *(_QWORD *)(v1 + 168);
  v107 = *(_QWORD *)(v1 + 176);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 288) + 16))(v106, v105, v107);
  *(_QWORD *)(v6 - 192) = v106;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 16))(v98, v101, v104);
  *(_QWORD *)(v6 - 184) = v98;
  *(_QWORD *)(v1 + 432) = v107;
  *(_QWORD *)(v1 + 440) = v104;
  *(_QWORD *)(v1 + 384) = *(_QWORD *)(v1 + 152);
  v108 = *(_QWORD *)(v1 + 304);
  *(_QWORD *)(v6 - 248) = *(_QWORD *)(v1 + 336);
  *(_QWORD *)(v6 - 240) = v108;
  v109 = MEMORY[0x24BDED308];
  *(_QWORD *)(v1 + 472) = MEMORY[0x242695AE8](MEMORY[0x24BDED308], *(_QWORD *)(v1 + 320), v6 - 248);
  *(_QWORD *)(v1 + 480) = MEMORY[0x24BDECC60];
  *(_QWORD *)(v1 + 464) = MEMORY[0x242695AE8](v109, *(_QWORD *)(v1 + 328), v1 + 472);
  *(_QWORD *)(v1 + 456) = MEMORY[0x242695AE8](MEMORY[0x24BDF4A08], v94, v1 + 464);
  *(_QWORD *)(v1 + 392) = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v104, v1 + 456);
  sub_2412F68CC((uint64_t *)(v6 - 192), 2uLL, v1 + 432);
  v103(v101, v104);
  v110 = *(void (**)(uint64_t, uint64_t))(v1 + 160);
  v110(v105, v107);
  v103(v98, v104);
  return ((uint64_t (*)(uint64_t, uint64_t))v110)(v106, v107);
}

void sub_24140F464()
{
  sub_24140E86C();
}

uint64_t sub_24140F478()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_24140F4B4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v27 = a8;
  v26 = a7;
  v25 = a5;
  v28 = a1;
  v29 = a2;
  v33 = a9;
  v13 = type metadata accessor for QueueHeaderBackground();
  v14 = *(_QWORD *)(v13 - 8);
  v30 = v13;
  v31 = v14;
  MEMORY[0x24BDAC7A8](v13);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257127E78);
  MEMORY[0x24BDAC7A8](v15);
  v32 = *(_QWORD *)(a6 - 8);
  MEMORY[0x24BDAC7A8](v16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126C00);
  v17 = sub_2414B3514();
  v35 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v18 = sub_2414B3514();
  v37 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v34 = (char *)v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v36 = (char *)v24 - v22;
  v23 = MEMORY[0x2426947D4](*(_QWORD *)(a3 + 16), a4, v21);
  if (!__OFSUB__(v23, 1))
  {
    v24[0] = v23 - 1;
    v24[1] = a10;
    v38 = a4;
    v39 = v25;
    v40 = a6;
    v41 = v26;
    v42 = v27;
    v43 = a10;
    type metadata accessor for NowPlayingQueueChapterList();
  }
  __break(1u);
}

uint64_t sub_24140F8E0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24140F97C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  unint64_t v14;
  unint64_t v15;
  void (*v16)(unint64_t, unint64_t, uint64_t);
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;

  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64) + 7;
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((v8 + ((v7 + 25) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v11 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v11 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16));
  }
  else
  {
    v12 = *(_QWORD *)a2;
    v13 = *(_BYTE *)(a2 + 8);
    sub_2412C6F44(*(_QWORD *)a2, v13);
    *(_QWORD *)a1 = v12;
    *(_BYTE *)(a1 + 8) = v13;
    v14 = a1 & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)(v14 + 16) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
    *(_BYTE *)(v14 + 24) = *(_BYTE *)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
    v15 = ((a2 & 0xFFFFFFFFFFFFFFF8) + v7 + 25) & ~v7;
    v16 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
    swift_bridgeObjectRetain();
    v16(((a1 & 0xFFFFFFFFFFFFFFF8) + v7 + 25) & ~v7, v15, v5);
    v17 = (_QWORD *)((v8 + v15) & 0xFFFFFFFFFFFFFFF8);
    v18 = v17[1];
    v19 = (_QWORD *)((v8 + (((a1 & 0xFFFFFFFFFFFFFFF8) + v7 + 25) & ~v7)) & 0xFFFFFFFFFFFFFFF8);
    *v19 = *v17;
    v19[1] = v18;
  }
  swift_retain();
  return a1;
}

uint64_t sub_24140FAA4(uint64_t a1, uint64_t a2)
{
  sub_2412C8228(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))(((a1 & 0xFFFFFFFFFFFFFFF8)
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)
                                                                                            + 25) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
  return swift_release();
}

uint64_t sub_24140FB1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned __int8 v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v15)(unint64_t, uint64_t, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_2412C6F44(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = a1 & 0xFFFFFFFFFFFFFFF8;
  v9 = a2 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(_BYTE *)(v8 + 24) = *(_BYTE *)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
  v10 = *(_QWORD *)(a3 + 24);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v12 + 25 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v12;
  v14 = (v12 + 25 + v9) & ~v12;
  v15 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 16);
  swift_bridgeObjectRetain();
  v15(v13, v14, v10);
  v16 = *(_QWORD *)(v11 + 64) + 7;
  v17 = (_QWORD *)((v16 + v13) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)((v16 + v14) & 0xFFFFFFFFFFFFFFF8);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  swift_retain();
  return a1;
}

uint64_t sub_24140FBE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_2412C6F44(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(unsigned __int8 *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_2412C8228(v8, v9);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)((a1 & 0xFFFFFFFFFFFFFFF8) + 24) = *(_BYTE *)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v11 + 25 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v11;
  v13 = (v11 + 25 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~v11;
  (*(void (**)(unint64_t, unint64_t))(v10 + 24))(v12, v13);
  v14 = *(_QWORD *)(v10 + 64) + 7;
  v15 = (_QWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_24140FCCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = a1 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(_BYTE *)(v4 + 24) = *(_BYTE *)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 25 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v6;
  v8 = (v6 + 25 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~v6;
  (*(void (**)(unint64_t, unint64_t))(v5 + 32))(v7, v8);
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + v7) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + v8) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24140FD6C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v4 = a2;
  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(unsigned __int8 *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_2412C8228(v8, v9);
  v4 = (uint64_t *)((unint64_t)v4 & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16) = v4[2];
  swift_bridgeObjectRelease();
  *(_BYTE *)((a1 & 0xFFFFFFFFFFFFFFF8) + 24) = *((_BYTE *)v4 + 24);
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v11 + 25 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v11;
  v13 = ((unint64_t)v4 + v11 + 25) & ~v11;
  (*(void (**)(unint64_t, uint64_t))(v10 + 40))(v12, v13);
  *(_OWORD *)((*(_QWORD *)(v10 + 64) + 7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v10 + 64)
                                                                                       + 7
                                                                                       + v13) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_24140FE38(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;
  unint64_t v13;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  if (v6 >= a2)
  {
    v12 = a1 & 0xFFFFFFFFFFFFFFF8;
    if ((v5 & 0x80000000) != 0)
    {
      return (*(uint64_t (**)(unint64_t))(v4 + 48))((v12 + v7 + 25) & ~v7);
    }
    else
    {
      v13 = *(_QWORD *)(v12 + 16);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
  }
  else
  {
    if (((((*(_QWORD *)(v4 + 64) + ((v7 + 25) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_24140FEC4 + 4 * byte_2414C5390[v10]))();
  }
}

void sub_24140FF48(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 >= a3)
  {
    v10 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + (((_DWORD)v7 + 25) & ~(_DWORD)v7) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v8 = a3 - v6 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X13 }
  }
  if (((*(_DWORD *)(v5 + 64) + (((_DWORD)v7 + 25) & ~(_DWORD)v7) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v11 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + ((v7 + 25) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v11;
  }
  __asm { BR              X10 }
}

void sub_241410050()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x2414100BCLL);
}

void sub_241410058(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x241410060);
  JUMPOUT(0x2414100BCLL);
}

void sub_241410074()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x2414100BCLL);
}

void sub_24141007C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x2414100BCLL);
}

void sub_241410084(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_WORD *)(v3 + v4) = 0;
  if (a2)
  {
    if ((a3 & 0x80000000) == 0)
    {
      if ((a2 & 0x80000000) == 0)
        JUMPOUT(0x2414100B8);
      JUMPOUT(0x2414100B4);
    }
    JUMPOUT(0x241410090);
  }
  JUMPOUT(0x2414100BCLL);
}

uint64_t sub_2414100D4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  _QWORD v29[2];
  _QWORD v30[2];

  v1 = *a1;
  v2 = a1[3];
  v3 = a1[4];
  v4 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126C00);
  v5 = sub_2414B3514();
  v6 = sub_2414B3514();
  v30[0] = v3;
  v30[1] = MEMORY[0x24BDECC60];
  v7 = MEMORY[0x24BDED308];
  v29[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v4, v30);
  v29[1] = sub_2412C8FC4(&qword_257126C08, &qword_257126C00, MEMORY[0x24BDEFB48]);
  v28[0] = MEMORY[0x242695AE8](v7, v5, v29);
  v28[1] = sub_24140E828();
  MEMORY[0x242695AE8](v7, v6, v28);
  sub_2414B4810();
  swift_getTupleTypeMetadata2();
  v8 = sub_2414B4F60();
  sub_2414B3514();
  v23 = v8;
  v24 = v1;
  v25 = sub_2414B3514();
  v26 = MEMORY[0x242695AE8](MEMORY[0x24BEE12D8], v8);
  v27 = v2;
  sub_2414B4954();
  sub_2414B53B0();
  swift_getTupleTypeMetadata2();
  v9 = sub_2414B4B1C();
  v10 = sub_2414B49B4();
  v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122240);
  v12 = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v9);
  v22[0] = MEMORY[0x24BDF5138];
  v22[1] = v12;
  v22[2] = MEMORY[0x24BDF5138];
  v13 = MEMORY[0x242695AE8](MEMORY[0x24BDF4AF8], v10, v22);
  v14 = sub_2412C8FC4(&qword_257122248, &qword_257122240, MEMORY[0x24BEE30C8]);
  v23 = v10;
  v24 = v11;
  v25 = v13;
  v26 = v14;
  MEMORY[0x242695A94](255, &v23, MEMORY[0x24BDF2800], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257127DE0);
  v15 = sub_2414B3514();
  v16 = sub_2414B3A9C();
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEF428];
  v23 = v10;
  v24 = v11;
  v25 = v13;
  v26 = v14;
  v21[0] = swift_getOpaqueTypeConformance2();
  v21[1] = sub_2412C8FC4(&qword_257127DE8, &qword_257127DE0, MEMORY[0x24BDF0960]);
  v18 = MEMORY[0x242695AE8](v7, v15, v21);
  v19 = sub_2412C8030(&qword_254382BA0, v17, MEMORY[0x24BDEF420]);
  v23 = v15;
  v24 = v16;
  v25 = v18;
  v26 = v19;
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241410434(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for QueueHeaderBackground();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_241410480()
{
  unint64_t result;

  result = qword_257127E90[0];
  if (!qword_257127E90[0])
  {
    result = MEMORY[0x242695AE8](MEMORY[0x24BEE1790], MEMORY[0x24BEE1768]);
    atomic_store(result, qword_257127E90);
  }
  return result;
}

void sub_2414104C4()
{
  type metadata accessor for NowPlayingQueueChapterList();
}

uint64_t sub_24141050C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  v4 = v1 + ((v3 + 64) & ~v3);
  sub_2412C8228(*(_QWORD *)v4, *(unsigned __int8 *)(v4 + 8));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4 + *(int *)(a1 + 76));
  swift_release();
  return swift_deallocObject();
}

void sub_241410598()
{
  type metadata accessor for NowPlayingQueueChapterList();
}

#error "241410620: call analysis failed (funcsize=15)"

uint64_t sub_241410644()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_241410668(char *a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, char *);
  uint64_t v4;
  uint64_t TupleTypeMetadata2;

  v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 64);
  v4 = *(_QWORD *)a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(v4, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
}

uint64_t sub_2414106D0()
{
  return swift_release();
}

uint64_t sub_2414106D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_retain();
  return a1;
}

uint64_t sub_241410714(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_241410764(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t type metadata accessor for WithNamespace(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WithNamespace);
}

uint64_t sub_2414107B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2414107E4@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = 0;
  *(_QWORD *)(a5 + 8) = result;
  *(_BYTE *)(a5 + 16) = a2 & 1;
  *(_QWORD *)(a5 + 24) = a3;
  *(_QWORD *)(a5 + 32) = a4;
  return result;
}

uint64_t sub_2414107F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  uint64_t v14;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v14 - v9;
  if (*(_BYTE *)(v2 + 16) == 1)
    v11 = sub_2414B4B10();
  else
    v11 = *(_QWORD *)(v2 + 8);
  (*(void (**)(uint64_t))(v2 + 24))(v11);
  sub_2412FBF34((uint64_t)v7, v4, (uint64_t)v10);
  v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v7, v4);
  sub_2412EEA1C((uint64_t)v10, v4, a2);
  return ((uint64_t (*)(char *, uint64_t))v12)(v10, v4);
}

uint64_t sub_2414108F4(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

uint64_t getEnumTagSinglePayload for MotionPlayerError(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MotionPlayerError(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 17) = v3;
  return result;
}

uint64_t sub_24141094C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_241410968(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    *(_BYTE *)(result + 16) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for MotionPlayerError()
{
  return &type metadata for MotionPlayerError;
}

void sub_2414109A0()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_tintColor);
  v2 = objc_msgSend(v0, sel_labelColor);
  v3 = objc_msgSend(v2, sel_colorWithAlphaComponent_, 0.35);

  v4 = objc_msgSend(v0, sel_labelColor);
  v5 = objc_msgSend(v4, sel_colorWithAlphaComponent_, 0.2);

  v6 = objc_msgSend(v0, sel_labelColor);
  v7 = objc_msgSend(v6, sel_colorWithAlphaComponent_, 0.6);

  qword_2543826D8 = (uint64_t)v1;
  unk_2543826E0 = v3;
  qword_2543826E8 = (uint64_t)v5;
  unk_2543826F0 = v7;
}

id static WaveformColorPalette.accent.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10;

  if (qword_2543826F8 != -1)
    swift_once();
  v2 = (void *)qword_2543826D8;
  v3 = (void *)unk_2543826E0;
  v5 = (void *)qword_2543826E8;
  v4 = unk_2543826F0;
  v10 = (id)unk_2543826F0;
  *a1 = qword_2543826D8;
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  v6 = v2;
  v7 = v3;
  v8 = v5;
  return v10;
}

void sub_241410B40()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_whiteColor);
  v2 = objc_msgSend(v0, sel_whiteColor);
  v3 = objc_msgSend(v0, sel_whiteColor);
  v4 = objc_msgSend(v3, sel_colorWithAlphaComponent_, 0.2);

  v5 = objc_msgSend(v0, sel_whiteColor);
  v6 = objc_msgSend(v5, sel_colorWithAlphaComponent_, 0.6);

  qword_2543826A8 = (uint64_t)v1;
  unk_2543826B0 = v2;
  qword_2543826B8 = (uint64_t)v4;
  unk_2543826C0 = v6;
}

id static WaveformColorPalette.white.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10;

  if (qword_2543826D0 != -1)
    swift_once();
  v2 = (void *)qword_2543826A8;
  v3 = (void *)unk_2543826B0;
  v5 = (void *)qword_2543826B8;
  v4 = unk_2543826C0;
  v10 = (id)unk_2543826C0;
  *a1 = qword_2543826A8;
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  v6 = v2;
  v7 = v3;
  v8 = v5;
  return v10;
}

uint64_t WaveformColorPalette.init(playingColor:pausedColor:bufferingColorMin:bufferingColorMax:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  sub_2412CC884(0, (unint64_t *)&qword_2571241D8);
  swift_retain();
  v2 = sub_2414B52FC();
  swift_retain();
  v3 = sub_2414B52FC();
  swift_retain();
  v4 = sub_2414B52FC();
  v5 = sub_2414B52FC();
  swift_release();
  swift_release();
  result = swift_release();
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

id sub_241410D7C()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6;

  if (qword_2543826F8 != -1)
    swift_once();
  v0 = (void *)unk_2543826E0;
  v1 = (void *)qword_2543826E8;
  v6 = (id)unk_2543826F0;
  qword_254382718 = qword_2543826D8;
  unk_254382720 = unk_2543826E0;
  qword_254382728 = qword_2543826E8;
  unk_254382730 = unk_2543826F0;
  v2 = (id)qword_2543826D8;
  v3 = v0;
  v4 = v1;
  return v6;
}

id sub_241410DF8@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10;

  if (qword_254382738 != -1)
    swift_once();
  v2 = (void *)qword_254382718;
  v3 = (void *)unk_254382720;
  v5 = (void *)qword_254382728;
  v4 = unk_254382730;
  v10 = (id)unk_254382730;
  *a1 = qword_254382718;
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  v6 = v2;
  v7 = v3;
  v8 = v5;
  return v10;
}

uint64_t sub_241410E78()
{
  sub_2414113B0();
  return sub_2414B3340();
}

uint64_t sub_241410EC8()
{
  sub_2414112BC();
  return sub_2414B3838();
}

id sub_241410EFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v5;
  void *v6;
  void *v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t *v10;
  id v11;
  id v12;
  id v13;
  id v15;

  v5 = *(void **)v2;
  v6 = *(void **)(v2 + 8);
  v7 = *(void **)(v2 + 16);
  v15 = *(id *)(v2 + 24);
  KeyPath = swift_getKeyPath();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254382858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a2, a1, v9);
  v10 = (uint64_t *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254382820) + 36));
  *v10 = KeyPath;
  v10[1] = (uint64_t)v5;
  v10[2] = (uint64_t)v6;
  v10[3] = (uint64_t)v7;
  v10[4] = (uint64_t)v15;
  v11 = v5;
  v12 = v6;
  v13 = v7;
  return v15;
}

uint64_t View.waveformColorPalette(_:)(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  __int128 v3;
  _OWORD v5[2];

  v3 = a1[1];
  v5[0] = *a1;
  v5[1] = v3;
  return MEMORY[0x242693DC0](v5, a2, &type metadata for WaveformColorPaletteModifier, a3);
}

uint64_t _s11MediaCoreUI20WaveformColorPaletteV2eeoiySbAC_ACtFZ_0()
{
  sub_2412CC884(0, &qword_254382930);
  if ((sub_2414B532C() & 1) != 0 && (sub_2414B532C() & 1) != 0 && (sub_2414B532C() & 1) != 0)
    return sub_2414B532C() & 1;
  else
    return 0;
}

void destroy for WaveformColorPalette(id *a1)
{

}

ValueMetadata *type metadata accessor for WaveformColorPalette()
{
  return &type metadata for WaveformColorPalette;
}

uint64_t sub_2414110E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_2414B3514();
  v4[0] = v1;
  v4[1] = sub_241411138();
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_241411138()
{
  unint64_t result;

  result = qword_254382770;
  if (!qword_254382770)
  {
    result = MEMORY[0x242695AE8](&unk_2414C56C0, &type metadata for WaveformColorPaletteModifier);
    atomic_store(result, (unint64_t *)&qword_254382770);
  }
  return result;
}

_QWORD *_s11MediaCoreUI20WaveformColorPaletteVwcp_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  v7 = v3;
  v8 = v4;
  v9 = v5;
  v10 = v6;
  return a1;
}

uint64_t _s11MediaCoreUI20WaveformColorPaletteVwca_0(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 24);
  v14 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  v15 = v13;

  return a1;
}

uint64_t _s11MediaCoreUI20WaveformColorPaletteVwta_0(uint64_t a1, _OWORD *a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

ValueMetadata *type metadata accessor for WaveformColorPaletteModifier()
{
  return &type metadata for WaveformColorPaletteModifier;
}

uint64_t sub_2414112A4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2414112BC()
{
  unint64_t result;

  result = qword_254382740;
  if (!qword_254382740)
  {
    result = MEMORY[0x242695AE8](&unk_2414C5758, &type metadata for WaveformColorPaletteKey);
    atomic_store(result, (unint64_t *)&qword_254382740);
  }
  return result;
}

ValueMetadata *type metadata accessor for WaveformColorPaletteKey()
{
  return &type metadata for WaveformColorPaletteKey;
}

unint64_t sub_241411314()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254382818;
  if (!qword_254382818)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254382820);
    v2[0] = sub_2412C8FC4(&qword_254382850, &qword_254382858, MEMORY[0x24BDEFB78]);
    v2[1] = sub_2412C8FC4(&qword_254382880, &qword_254382888, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254382818);
  }
  return result;
}

unint64_t sub_2414113B0()
{
  unint64_t result;

  result = qword_254382700;
  if (!qword_254382700)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for WaveformColorPalette, &type metadata for WaveformColorPalette);
    atomic_store(result, (unint64_t *)&qword_254382700);
  }
  return result;
}

void sub_2414114CC()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  CGFloat Height;
  CATransform3D v5;
  CATransform3D v6;
  objc_super v7;
  CGRect v8;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for NowPlayingArtworkMotionReplicatorLayer();
  objc_msgSendSuper2(&v7, sel_layoutSublayers);
  v1 = (void *)objc_opt_self();
  objc_msgSend(v1, sel_begin);
  objc_msgSend(v1, sel_setDisableActions_, 1);
  v2 = *(void **)&v0[OBJC_IVAR____TtC11MediaCoreUI38NowPlayingArtworkMotionReplicatorLayer_originalContent];
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v0, sel_bounds);
    objc_msgSend(v3, sel_setFrame_);
    objc_msgSend(v0, sel_bounds);
    Height = CGRectGetHeight(v8);
    CATransform3DMakeTranslation(&v6, 0.0, Height * 3.0, 0.0);
    CATransform3DScale(&v5, &v6, 1.0, -2.0, 1.0);
    v6 = v5;
    objc_msgSend(v0, sel_setInstanceTransform_, &v6);
    objc_msgSend(v1, sel_commit);

  }
}

id sub_2414116A4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NowPlayingArtworkMotionReplicatorLayer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for NowPlayingArtworkMotionReplicatorLayer()
{
  return objc_opt_self();
}

void sub_241411704(uint64_t a1, unint64_t a2)
{
  sub_241411718(a1, a2, qword_25437CE70);
}

void sub_241411718(uint64_t a1, unint64_t a2, unint64_t *a3)
{
  uint64_t v5;
  id v6;
  void *v7;
  char v8;
  uint64_t i;
  id v10;
  void *v11;
  char v12;

  if (a2 >> 62)
    goto LABEL_20;
  v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v6 = (id)MEMORY[0x242694E34](0, a2);
      }
      else
      {
        if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        v6 = *(id *)(a2 + 32);
      }
      v7 = v6;
      sub_2412CC884(0, a3);
      v8 = sub_2414B532C();

      if ((v8 & 1) == 0)
      {
        for (i = 0; ; ++i)
        {
          a3 = (unint64_t *)(i + 1);
          if (__OFADD__(i, 1))
            break;
          if (a3 == (unint64_t *)v5)
            return;
          if ((a2 & 0xC000000000000001) != 0)
          {
            v10 = (id)MEMORY[0x242694E34](i + 1, a2);
          }
          else
          {
            if (((unint64_t)a3 & 0x8000000000000000) != 0)
              goto LABEL_18;
            if ((unint64_t)a3 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_19;
            v10 = *(id *)(a2 + 32 + 8 * (_QWORD)a3);
          }
          v11 = v10;
          v12 = sub_2414B532C();

          if ((v12 & 1) != 0)
            return;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        v5 = sub_2414B56C8();
        swift_bridgeObjectRelease();
        if (v5)
          continue;
      }
      return;
    }
  }
}

uint64_t sub_2414118B0()
{
  id *v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_2414118F4()
{
  uint64_t v0;

  type metadata accessor for AnimatedViewState();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_QWORD *)(v0 + 80) = 0;
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_241411940@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t *v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  id v13;
  _OWORD *v14;
  __int128 v15;
  void (**v16)();
  _OWORD *v17;
  __int128 v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _BYTE v24[16];

  v22 = a1;
  v2 = (int *)type metadata accessor for _CAPackageView();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257128108);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 8);
  v21 = *(_QWORD *)v1;
  sub_241413118(v1 + 24, (uint64_t)v24);
  swift_bridgeObjectRetain();
  sub_2412EAEE8((uint64_t)v24);
  type metadata accessor for AnimatedViewState();
  sub_2412C8030(&qword_257128110, (uint64_t (*)(uint64_t))type metadata accessor for AnimatedViewState, (uint64_t)&unk_2414C5844);
  sub_2414B3040();
  v9 = (uint64_t *)&v4[v2[6]];
  *v9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  swift_storeEnumTagMultiPayload();
  v10 = &v4[v2[7]];
  *(_QWORD *)v10 = swift_getKeyPath();
  v10[8] = 0;
  v11 = (uint64_t *)&v4[v2[8]];
  *v11 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
  swift_storeEnumTagMultiPayload();
  sub_241413118((uint64_t)v24, (uint64_t)v4);
  type metadata accessor for ViewState();
  sub_2412C8030(&qword_254380840, (uint64_t (*)(uint64_t))type metadata accessor for ViewState, (uint64_t)&unk_2414C5844);
  swift_retain();
  *((_QWORD *)v4 + 2) = sub_2414B33C4();
  *((_QWORD *)v4 + 3) = v12;
  if (qword_2543846C8 != -1)
    swift_once();
  v13 = (id)qword_25438E910;
  sub_2412DAB8C(v21, v8);

  swift_bridgeObjectRelease();
  swift_release();
  v14 = (_OWORD *)swift_allocObject();
  v15 = *(_OWORD *)(v1 + 16);
  v14[1] = *(_OWORD *)v1;
  v14[2] = v15;
  v14[3] = *(_OWORD *)(v1 + 32);
  *(_OWORD *)((char *)v14 + 57) = *(_OWORD *)(v1 + 41);
  sub_2412E3C04((uint64_t)v4, (uint64_t)v7);
  v16 = (void (**)())&v7[*(int *)(v5 + 36)];
  *v16 = sub_241413544;
  v16[1] = (void (*)())v14;
  v16[2] = 0;
  v16[3] = 0;
  sub_241413164(v1);
  sub_2412E3AE0((uint64_t)v4);
  v23 = *(_BYTE *)(v1 + 16);
  v17 = (_OWORD *)swift_allocObject();
  v18 = *(_OWORD *)(v1 + 16);
  v17[1] = *(_OWORD *)v1;
  v17[2] = v18;
  v17[3] = *(_OWORD *)(v1 + 32);
  *(_OWORD *)((char *)v17 + 57) = *(_OWORD *)(v1 + 41);
  sub_241413164(v1);
  sub_241413214();
  sub_2414B4564();
  swift_release();
  return sub_2412CBE78((uint64_t)v7, &qword_257128108);
}

void sub_241411C98(uint64_t a1)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v1 = *(_BYTE *)(a1 + 16);
  type metadata accessor for AnimatedViewState();
  sub_2412C8030(&qword_257128110, (uint64_t (*)(uint64_t))type metadata accessor for AnimatedViewState, (uint64_t)&unk_2414C5844);
  v2 = sub_2414B3040();
  v3 = v2;
  if ((v1 & 1) != 0)
  {
    sub_2414120C4();
    swift_release();
  }
  else
  {
    v4 = *(void **)(v2 + 72);
    v5 = *(id *)(v3 + 72);
    *(_QWORD *)(v3 + 72) = 0;
    objc_msgSend(v4, sel_invalidate);
    swift_release();

  }
}

uint64_t sub_241411D60@<X0>(uint64_t a1@<X8>)
{
  return sub_241411940(a1);
}

void sub_241411DA0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  id v31;

  v1 = *(void **)(v0 + 64);
  if (v1)
  {
    v2 = *(void **)(v0 + 56);
    v31 = *(id *)(v0 + 64);
    if (v2)
    {
      v3 = v1;
      v4 = objc_msgSend(v2, sel_rootLayer);
      if (v4)
      {
        v5 = v4;
        v6 = objc_msgSend(v4, sel_states);

        if (v6)
        {
          v7 = sub_2414B4EC4();

          v8 = sub_2412D301C(v7);
          swift_bridgeObjectRelease();
          if (v8)
          {
LABEL_10:
            sub_241411718((uint64_t)v31, v8, &qword_254381550);
            v11 = v10;
            v13 = v12;
            swift_bridgeObjectRelease();
            v14 = v31;
            if ((v13 & 1) != 0)
            {
LABEL_32:

              return;
            }
            v15 = v11 + 1;
            if (__OFADD__(v11, 1))
            {
              __break(1u);
            }
            else
            {
              v16 = *(void **)(v0 + 56);
              if (!v16)
                goto LABEL_16;
              v17 = objc_msgSend(v16, sel_rootLayer);
              if (!v17
                || (v18 = v17,
                    v19 = objc_msgSend(v17, sel_states),
                    v18,
                    !v19)
                || (v20 = sub_2414B4EC4(), v19, v8 = sub_2412D301C(v20), swift_bridgeObjectRelease(), !v8))
              {
LABEL_16:
                swift_bridgeObjectRelease();
                v8 = MEMORY[0x24BEE4AF8];
              }
              if (!(v8 >> 62))
              {
                v21 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
                goto LABEL_19;
              }
            }
            swift_bridgeObjectRetain();
            v21 = sub_2414B56C8();
            swift_bridgeObjectRelease();
LABEL_19:
            swift_bridgeObjectRelease();
            if (v21)
            {
              if (v15 == 0x8000000000000000 && v21 == -1)
              {
LABEL_39:
                __break(1u);
                return;
              }
              v8 = v15 % v21;
              v22 = *(void **)(v0 + 56);
              if (!v22)
                goto LABEL_26;
              v23 = objc_msgSend(v22, sel_rootLayer);
              if (!v23
                || (v24 = v23,
                    v25 = objc_msgSend(v23, sel_states),
                    v24,
                    !v25)
                || (v26 = sub_2414B4EC4(), v25,
                                           v21 = sub_2412D301C(v26),
                                           swift_bridgeObjectRelease(),
                                           !v21))
              {
LABEL_26:
                swift_bridgeObjectRelease();
                v21 = MEMORY[0x24BEE4AF8];
              }
              if ((v21 & 0xC000000000000001) == 0)
              {
                if ((v8 & 0x8000000000000000) != 0)
                {
                  __break(1u);
                }
                else if (v8 < *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
                {
                  v27 = *(id *)(v21 + 8 * v8 + 32);
LABEL_31:
                  v28 = v27;
                  swift_bridgeObjectRelease();
                  v29 = *(void **)(v0 + 64);
                  *(_QWORD *)(v0 + 64) = v28;
                  v30 = v28;
                  sub_2412CF7D4(v29);

                  v14 = v30;
                  goto LABEL_32;
                }
                __break(1u);
                goto LABEL_39;
              }
            }
            else
            {
              __break(1u);
            }
            v27 = (id)MEMORY[0x242694E34](v8, v21);
            goto LABEL_31;
          }
        }
      }
    }
    else
    {
      v9 = v1;
    }
    swift_bridgeObjectRelease();
    v8 = MEMORY[0x24BEE4AF8];
    goto LABEL_10;
  }
}

void sub_2414120C4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  _QWORD v7[6];

  v1 = (void *)objc_opt_self();
  v2 = swift_allocObject();
  swift_weakInit();
  v7[4] = sub_2414127DC;
  v7[5] = v2;
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 1107296256;
  v7[2] = sub_2413EDF78;
  v7[3] = &block_descriptor_17;
  v3 = _Block_copy(v7);
  swift_release();
  v4 = objc_msgSend(v1, sel_scheduledTimerWithTimeInterval_repeats_block_, 1, v3, 0.5);
  _Block_release(v3);
  v5 = *(void **)(v0 + 72);
  *(_QWORD *)(v0 + 72) = v4;
  v6 = v4;
  objc_msgSend(v5, sel_invalidate);

}

uint64_t sub_2414121C8()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_241411DA0();
    return swift_release();
  }
  return result;
}

void sub_24141221C()
{
  uint64_t v0;

}

uint64_t sub_241412224()
{
  id *v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AnimatedViewState()
{
  return objc_opt_self();
}

void sub_241412290(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = type metadata accessor for _CAPackageView();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a3[3];
  v10 = *(_QWORD *)(v9 + 40);
  if (!v10)
  {
LABEL_8:
    v25 = a3[1];
    if (!v25)
      return;
    goto LABEL_9;
  }
  v12 = *a1;
  v11 = a1[1];
  v14 = *a2;
  v13 = a2[1];
  v15 = *(_QWORD *)(v9 + 32);
  v16 = qword_25437D9E8;
  swift_bridgeObjectRetain();
  if (v16 != -1)
    swift_once();
  v17 = sub_2414B2CA4();
  __swift_project_value_buffer(v17, (uint64_t)qword_25438E770);
  sub_2412E3C04((uint64_t)a3, (uint64_t)v8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  v18 = sub_2414B2C8C();
  v19 = sub_2414B51B8();
  if (!os_log_type_enabled(v18, (os_log_type_t)v19))
  {
    swift_bridgeObjectRelease_n();
    sub_2412E3AE0((uint64_t)v8);

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_8;
  }
  v32 = v19;
  v33 = v12;
  v20 = swift_slowAlloc();
  v31 = swift_slowAlloc();
  v36 = v31;
  *(_DWORD *)v20 = 136446978;
  swift_bridgeObjectRetain();
  v35 = sub_2412E4890(v15, v10, &v36);
  sub_2414B541C();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v20 + 12) = 2082;
  v21 = *((_QWORD *)v8 + 3);
  v22 = *(_QWORD *)(v21 + 24);
  v34 = v14;
  if (v22)
  {
    v23 = *(_QWORD *)(v21 + 16);
    v24 = v22;
  }
  else
  {
    v24 = 0xE300000000000000;
    v23 = 7104878;
  }
  swift_bridgeObjectRetain();
  v35 = sub_2412E4890(v23, v24, &v36);
  sub_2414B541C();
  swift_bridgeObjectRelease();
  sub_2412E3AE0((uint64_t)v8);
  *(_WORD *)(v20 + 22) = 2082;
  if (v11)
    v26 = v33;
  else
    v26 = 7104878;
  if (v11)
    v27 = v11;
  else
    v27 = 0xE300000000000000;
  swift_bridgeObjectRetain();
  v35 = sub_2412E4890(v26, v27, &v36);
  sub_2414B541C();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v20 + 32) = 2082;
  if (v13)
    v28 = v34;
  else
    v28 = 7104878;
  if (v13)
    v29 = v13;
  else
    v29 = 0xE300000000000000;
  swift_bridgeObjectRetain();
  v35 = sub_2412E4890(v28, v29, &v36);
  sub_2414B541C();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_2412C1000, v18, (os_log_type_t)v32, "%{public}s: %{public}s CAPackageView selected state changed from %{public}s to %{public}s", (uint8_t *)v20, 0x2Au);
  v30 = v31;
  swift_arrayDestroy();
  MEMORY[0x242695BD8](v30, -1, -1);
  MEMORY[0x242695BD8](v20, -1, -1);

  v25 = a3[1];
  if (v25)
LABEL_9:
    sub_2412E41FC(*a3, v25);
}

id sub_24141274C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CAPackageViewLayer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2414127B8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2414127DC()
{
  return sub_2414121C8();
}

uint64_t sub_2414127E4()
{
  uint64_t v1;

  sub_2412C8A30();
  sub_2414B3838();
  return v1;
}

uint64_t sub_24141281C()
{
  sub_2412C8A30();
  swift_retain();
  return sub_2414B3844();
}

uint64_t assignWithTake for CAPackageView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = v6;
  sub_2412C8C2C();
  return a1;
}

uint64_t sub_2414128E0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_2412C8A30();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

ValueMetadata *type metadata accessor for CAPackageViewForegroundColorKey()
{
  return &type metadata for CAPackageViewForegroundColorKey;
}

uint64_t *sub_241412948(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2414B2F8C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v14 = a3[7];
    v15 = a3[8];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    v18 = *(_QWORD *)v17;
    LOBYTE(v17) = v17[8];
    *(_QWORD *)v16 = v18;
    v16[8] = (char)v17;
    v19 = (uint64_t *)((char *)a1 + v15);
    v20 = (uint64_t *)((char *)a2 + v15);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = sub_2414B2F44();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_241412AD4(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2414B2F8C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  v12 = a3[7];
  v13 = a3[8];
  v14 = (char *)a1 + v12;
  v15 = (char *)a2 + v12;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  v16 = (char *)a1 + v13;
  v17 = (char *)a2 + v13;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = sub_2414B2F44();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v16, v17, v19);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_241412C1C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_release();
  if (a1 != a2)
  {
    v8 = a3[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_2412CBE78((uint64_t)a1 + v8, &qword_254380B58);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2414B2F8C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  v13 = a3[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = *(_QWORD *)v15;
  LOBYTE(v15) = v15[8];
  *(_QWORD *)v14 = v16;
  v14[8] = (char)v15;
  swift_release();
  if (a1 != a2)
  {
    v17 = a3[8];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    sub_2412CBE78((uint64_t)a1 + v17, &qword_254380B48);
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = sub_2414B2F44();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v18, v19, v21);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_241412DB8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241412DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2571261F0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(qword_257127BF8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_241412E6C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_241412E78(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2571261F0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(qword_257127BF8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t destroy for AnimatedCAPackageView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_2412C8C2C();
}

uint64_t initializeWithCopy for AnimatedCAPackageView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2412D0590();
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 56) = v7;
  return a1;
}

uint64_t assignWithCopy for AnimatedCAPackageView(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *((_BYTE *)v2 + 16);
  *(_QWORD *)(a1 + 24) = v2[3];
  *(_QWORD *)(a1 + 32) = v2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = v2[5];
  v5 = v2[6];
  LOBYTE(v2) = *((_BYTE *)v2 + 56);
  sub_2412D0590();
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 56) = (_BYTE)v2;
  sub_2412C8C2C();
  return a1;
}

uint64_t assignWithTake for AnimatedCAPackageView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_BYTE *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = v6;
  sub_2412C8C2C();
  return a1;
}

ValueMetadata *type metadata accessor for AnimatedCAPackageView()
{
  return &type metadata for AnimatedCAPackageView;
}

uint64_t sub_2414130DC()
{
  return sub_2412C8030(qword_25437E2A8, (uint64_t (*)(uint64_t))type metadata accessor for _CAPackageView, (uint64_t)&unk_2414C5A08);
}

uint64_t sub_241413108()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241413118(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543844E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241413164(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2412D0590();
  return a1;
}

uint64_t objectdestroy_11Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2412C8C2C();
  return swift_deallocObject();
}

void sub_2414131FC()
{
  uint64_t v0;

  sub_241411C98(v0 + 16);
}

unint64_t sub_241413214()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257128118[0];
  if (!qword_257128118[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128108);
    v2[0] = sub_2412C8030(qword_25437E2A8, (uint64_t (*)(uint64_t))type metadata accessor for _CAPackageView, (uint64_t)&unk_2414C5A08);
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, qword_257128118);
  }
  return result;
}

void sub_2414132A4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for _CAPackageView() - 8) + 80);
  sub_241412290(a1, a2, (uint64_t *)(v2 + ((v5 + 16) & ~v5)));
}

uint64_t objectdestroy_17Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for _CAPackageView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  swift_release();
  v4 = v3 + *(int *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2414B2F8C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  v6 = v3 + *(int *)(v1 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_2414B2F44();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_241413410()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128108);
  sub_241413214();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241413470()
{
  uint64_t (*v0)(uint64_t);

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437DC18);
  sub_2414B2F44();
  v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB1F0];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380CD0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543844E0);
  sub_2412E3504();
  sub_2412E34A8();
  swift_getOpaqueTypeConformance2();
  sub_2412C8030(&qword_254380B00, v0, MEMORY[0x24BDEB200]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241413548@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  float v5;
  uint64_t result;
  float v7;
  float v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = sub_241413618();
  if ((v4 & 1) != 0)
  {
    v11 = sub_2414B4B88();
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, v1, v11);
  }
  v5 = (float)v3;
  result = UIAnimationDragCoefficient();
  v8 = v7 * v5;
  if ((~LODWORD(v8) & 0x7F800000) != 0)
  {
    if (v8 > -9.2234e18)
    {
      if (v8 < 9.2234e18)
      {
        *a1 = (uint64_t)v8;
        v9 = *MEMORY[0x24BEE5400];
        v10 = sub_2414B4B88();
        return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(a1, v9, v10);
      }
      goto LABEL_9;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_241413618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t result;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(char *, uint64_t);
  os_log_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  os_log_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;

  v1 = v0;
  v2 = sub_2414B2CA4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2414B4B88();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v27 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (uint64_t *)((char *)&v27 - v14);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v16((char *)&v27 - v14, v1, v6);
  LODWORD(result) = (*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 88))(v15, v6);
  if ((_DWORD)result == *MEMORY[0x24BEE5420])
  {
    (*(void (**)(uint64_t *, uint64_t))(v7 + 96))(v15, v6);
    result = 1000000000 * *v15;
    if ((unsigned __int128)(*v15 * (__int128)1000000000) >> 64 == result >> 63)
      return result;
    __break(1u);
  }
  if ((_DWORD)result == *MEMORY[0x24BEE5410])
  {
    (*(void (**)(uint64_t *, uint64_t))(v7 + 96))(v15, v6);
    result = 1000000 * *v15;
    if ((unsigned __int128)(*v15 * (__int128)1000000) >> 64 == result >> 63)
      return result;
    __break(1u);
  }
  if ((_DWORD)result == *MEMORY[0x24BEE5408])
  {
    (*(void (**)(uint64_t *, uint64_t))(v7 + 96))(v15, v6);
    result = 1000 * *v15;
    if ((unsigned __int128)(*v15 * (__int128)1000) >> 64 != result >> 63)
      __break(1u);
  }
  else if ((_DWORD)result == *MEMORY[0x24BEE5400])
  {
    (*(void (**)(uint64_t *, uint64_t))(v7 + 96))(v15, v6);
    return *v15;
  }
  else
  {
    if ((_DWORD)result != *MEMORY[0x24BEE5418])
    {
      sub_2414B2C98();
      v16(v13, v1, v6);
      v18 = sub_2414B2C8C();
      v19 = sub_2414B51AC();
      v32 = v19;
      if (os_log_type_enabled(v18, v19))
      {
        v20 = swift_slowAlloc();
        v30 = v18;
        v21 = v20;
        v31 = swift_slowAlloc();
        v34 = v31;
        *(_DWORD *)v21 = 136315394;
        v28 = v21 + 4;
        v33 = sub_2412E4890(0xD000000000000014, 0x80000002414D3880, &v34);
        v29 = &v34;
        sub_2414B541C();
        *(_WORD *)(v21 + 12) = 2080;
        v28 = v21 + 14;
        v16(v10, (uint64_t)v13, v6);
        v22 = sub_2414B4D8C();
        v33 = sub_2412E4890(v22, v23, &v34);
        sub_2414B541C();
        swift_bridgeObjectRelease();
        v24 = *(void (**)(char *, uint64_t))(v7 + 8);
        v24(v13, v6);
        v25 = v30;
        _os_log_impl(&dword_2412C1000, v30, (os_log_type_t)v32, "Unhandled case for %s: %s", (uint8_t *)v21, 0x16u);
        v26 = v31;
        swift_arrayDestroy();
        MEMORY[0x242695BD8](v26, -1, -1);
        MEMORY[0x242695BD8](v21, -1, -1);

      }
      else
      {
        v24 = *(void (**)(char *, uint64_t))(v7 + 8);
        v24(v13, v6);

      }
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v24((char *)v15, v6);
    }
    return 0;
  }
  return result;
}

id sub_241413A2C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&qword_257123990, type metadata accessor for MaterialMotionContentObserver, (uint64_t)&unk_2414BC2AC);
  sub_2414B2B84();
  swift_release();
  v4 = *(void **)(v3 + 16);
  *a2 = v4;
  return v4;
}

void sub_241413AB8(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&qword_257123990, type metadata accessor for MaterialMotionContentObserver, (uint64_t)&unk_2414BC2AC);
  v2 = v1;
  sub_2414B2B78();
  swift_release();

}

id sub_241413B6C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&qword_257123990, type metadata accessor for MaterialMotionContentObserver, (uint64_t)&unk_2414BC2AC);
  sub_2414B2B84();
  swift_release();
  v4 = *(void **)(v3 + 24);
  *a2 = v4;
  return v4;
}

void sub_241413BF8(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&qword_257123990, type metadata accessor for MaterialMotionContentObserver, (uint64_t)&unk_2414BC2AC);
  v2 = v1;
  sub_2414B2B78();
  swift_release();

}

void MCUINamespace<A>.materialChin<A, B>(image:height:placeholder:content:)()
{
  sub_241413DA8();
}

void type metadata accessor for MaterialChinModifier()
{
  JUMPOUT(0x242695A4CLL);
}

void sub_241413CCC(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  *(double *)a2 = a3;
  *(_QWORD *)(a2 + 8) = a1;
  type metadata accessor for MaterialChinModifier();
}

uint64_t sub_241413D2C()
{
  void (*v0)(uint64_t);
  uint64_t (*v1)(void);
  uint64_t v2;

  v2 = v1();
  v0(v2);
  return sub_241413EC0((uint64_t)sub_241413F24, 0);
}

void MCUINamespace<A>.motionMaterialChin<A, B>(keyframe:height:placeholder:content:)()
{
  sub_241413DA8();
}

void sub_241413DA8()
{
  type metadata accessor for MaterialChinModifier();
}

void sub_241413E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;

  MEMORY[0x24BDAC7A8](a1);
  v12 = (char *)&a9 - v11;
  v13 = v9;
  sub_241413CCC((uint64_t)v9, (uint64_t)v12, v10);
}

uint64_t sub_241413E6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  MEMORY[0x242693DC0](v2, *(_QWORD *)(*(_QWORD *)(v3 - 144) + 16), v0, *(_QWORD *)(v3 - 152));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_241413EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  type metadata accessor for MaterialMotionContentObserver(0);
  return sub_2414B4AEC();
}

uint64_t sub_241413F24()
{
  uint64_t v0;

  type metadata accessor for MaterialMotionContentObserver(0);
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  sub_2414B2BA8();
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&qword_257123990, type metadata accessor for MaterialMotionContentObserver, (uint64_t)&unk_2414BC2AC);
  sub_2414B2B78();
  swift_release();
  swift_getKeyPath();
  sub_2414B2B78();
  swift_release();
  return v0;
}

void sub_24141403C(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t OpaqueTypeConformance2;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[7];
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  _QWORD v66[2];
  _QWORD v67[2];
  _QWORD v68[2];

  v49 = a1;
  v53 = a3;
  v4 = *(a2 - 1);
  v40 = a2;
  v50 = v4;
  v52 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v51 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571281A0);
  MEMORY[0x242695AE8](&unk_2414C5B30, a2);
  sub_2414B3B08();
  v42 = a2[2];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571281A8);
  sub_2414B3514();
  v41 = a2[3];
  v6 = sub_2414B3514();
  v68[0] = a2[5];
  v7 = v68[0];
  v68[1] = MEMORY[0x24BDEBEE0];
  v8 = MEMORY[0x24BDED308];
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v6, v68);
  sub_2414B3604();
  sub_2414B3514();
  swift_getTupleTypeMetadata2();
  v9 = sub_2414B4B1C();
  sub_2412C8FC4(&qword_2571281B0, &qword_2571281A0, MEMORY[0x24BDEB998]);
  v10 = sub_2414B3304();
  v47 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v45 = (char *)v34 - v11;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383DF0);
  v12 = sub_2414B3514();
  v48 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v55 = (char *)v34 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381558);
  v15 = sub_2412C8FC4(&qword_2571281B8, &qword_2571281A0, MEMORY[0x24BDEB9A8]);
  v16 = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v9);
  v67[0] = v15;
  v67[1] = v16;
  v17 = MEMORY[0x242695AE8](MEMORY[0x24BDEC550], v10, v67);
  v34[0] = v17;
  v18 = sub_2412C8FC4(&qword_254383DE8, &qword_254383DF0, MEMORY[0x24BDEB950]);
  v66[0] = v17;
  v66[1] = v18;
  v19 = MEMORY[0x242695AE8](v8, v12, v66);
  v20 = sub_241416D54();
  v62 = v12;
  v63 = v14;
  v34[2] = v12;
  v34[5] = v14;
  v64 = v19;
  v65 = v20;
  v34[4] = v19;
  v34[3] = v20;
  v21 = MEMORY[0x242695A94](0, &v62, MEMORY[0x24BDF3908], 0);
  v46 = *(_QWORD *)(v21 - 8);
  v39 = v21;
  MEMORY[0x24BDAC7A8](v21);
  v34[6] = (char *)v34 - v22;
  v23 = type metadata accessor for MaterialMotionContentObserver(255);
  v38 = v23;
  v62 = v12;
  v63 = v14;
  v64 = v19;
  v65 = v20;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v36 = OpaqueTypeConformance2;
  v35 = sub_2412C8030((unint64_t *)&qword_257123990, type metadata accessor for MaterialMotionContentObserver, (uint64_t)&unk_2414BC2AC);
  v62 = v21;
  v63 = v23;
  v64 = OpaqueTypeConformance2;
  v65 = v35;
  v43 = MEMORY[0x242695A94](0, &v62, MEMORY[0x24BDF2358], 0);
  v44 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v34[1] = (char *)v34 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v37 = (char *)v34 - v27;
  v28 = v54;
  v29 = *v54;
  v30 = v40[4];
  v31 = (_QWORD *)swift_allocObject();
  v32 = v42;
  v33 = v41;
  v31[2] = v42;
  v31[3] = v33;
  v31[4] = v30;
  v31[5] = v7;
  v31[6] = v29;
  v56 = v32;
  v57 = v33;
  v58 = v30;
  v59 = v7;
  v60 = v49;
  v61 = v28;
  sub_241414780();
}

uint64_t sub_24141451C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);

  swift_release();
  sub_2414B44EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 328) + 8))(v3, v1);
  v9 = v6;
  v10 = *(void **)(v6 + 8);
  *(_QWORD *)(v8 - 184) = v10;
  v11 = *(_QWORD *)(v8 - 304);
  v12 = *(_QWORD *)(v8 - 296);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v12, v9, v0);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (char *)swift_allocObject();
  *((_QWORD *)v14 + 2) = v4;
  *((_QWORD *)v14 + 3) = v7;
  *((_QWORD *)v14 + 4) = v5;
  *((_QWORD *)v14 + 5) = v2;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(&v14[v13], v12, v0);
  v15 = v10;
  v16 = *(_QWORD *)(v8 - 432);
  v17 = *(_QWORD *)(v8 - 464);
  v18 = *(_QWORD *)(v8 - 264);
  sub_2414B4564();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 320) + 8))(v18, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257125390);
  sub_2414B4AF8();
  v19 = *(_QWORD *)(v8 - 472);
  v20 = *(_QWORD *)(v8 - 392);
  v21 = *(_QWORD *)(v8 - 400);
  v22 = *(_QWORD *)(v8 - 416);
  v23 = *(_QWORD *)(v8 - 424);
  sub_2414B41BC();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 336) + 8))(v16, v20);
  *(_QWORD *)(v8 - 184) = v20;
  *(_QWORD *)(v8 - 176) = v21;
  *(_QWORD *)(v8 - 168) = v22;
  *(_QWORD *)(v8 - 160) = v23;
  swift_getOpaqueTypeConformance2();
  v24 = *(_QWORD *)(v8 - 408);
  v25 = *(_QWORD *)(v8 - 360);
  sub_2412FBF34(v19, v25, v24);
  v26 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 352) + 8);
  v26(v19, v25);
  sub_2412EEA1C(v24, v25, *(_QWORD *)(v8 - 280));
  return ((uint64_t (*)(uint64_t, uint64_t))v26)(v24, v25);
}

void sub_241414780()
{
  type metadata accessor for MaterialChinModifier();
}

uint64_t sub_2414147CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD v10[17];

  MEMORY[0x242695AE8](&unk_2414C5B30, a1);
  sub_2414B3B08();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571281A8);
  sub_2414B3514();
  v5 = sub_2414B3514();
  v10[0] = v2;
  v10[1] = MEMORY[0x24BDEBEE0];
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v5, v10);
  sub_2414B3604();
  sub_2414B3514();
  swift_getTupleTypeMetadata2();
  v6 = sub_2414B4B1C();
  v7 = sub_2414170E4();
  v8 = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v6);
  return sub_2413A6270(v3, v1, (uint64_t)&type metadata for MaterialChinLayout, v6, v7, v8, v4);
}

void sub_2414148F0(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[12];
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];

  v17[6] = a1;
  v24 = a6;
  v25 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v17[4] = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571281A8);
  v11 = sub_2414B3514();
  v12 = *(_QWORD *)(v11 - 8);
  v17[10] = v11;
  v23 = v12;
  MEMORY[0x24BDAC7A8](v11);
  v17[7] = (char *)v17 - v13;
  v18 = sub_2414B3514();
  v30[0] = a5;
  v30[1] = MEMORY[0x24BDEBEE0];
  v20 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v18, v30);
  v21 = sub_2414B3604();
  v14 = sub_2414B3514();
  v22 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v17 - v16;
  v26 = a2;
  v27 = a3;
  v17[2] = a3;
  v28 = a4;
  v29 = a5;
  v17[1] = a5;
  type metadata accessor for MaterialChinModifier();
}

uint64_t sub_241414AC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  _BYTE v34[96];

  MEMORY[0x242695AE8](&unk_2414C5B30, a1);
  v10 = sub_2414B3B08();
  *(_QWORD *)(v8 - 392) = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  *(_QWORD *)(v8 - 408) = &v34[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = &v34[-v14];
  *(_QWORD *)(v8 - 440) = &v34[-v14];
  *(_QWORD *)(v8 - 416) = MEMORY[0x242695AE8](MEMORY[0x24BDEFB78], v10, v13);
  sub_2412FBF34(*(_QWORD *)(v8 - 432), v10, (uint64_t)v15);
  v16 = *(int *)(a1 + 56);
  *(_QWORD *)(v8 - 456) = v6;
  v17 = *(_QWORD *)(v8 - 448);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 328) + 16))(v17, v6 + v16, v3);
  *(_QWORD *)(v8 - 240) = v3;
  *(_QWORD *)(v8 - 232) = v7;
  *(_QWORD *)(v8 - 224) = v4;
  *(_QWORD *)(v8 - 216) = v5;
  *(_QWORD *)(v8 - 208) = v6;
  sub_2414B4A44();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571281D0);
  sub_241416FAC();
  v18 = *(_QWORD *)(v8 - 424);
  sub_2414B4504();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 328) + 8))(v17, v3);
  sub_2414B4A2C();
  *(_QWORD *)(v8 - 304) = v3;
  *(_QWORD *)(v8 - 296) = *(_QWORD *)(v8 - 464);
  *(_QWORD *)(v8 - 288) = v4;
  *(_QWORD *)(v8 - 280) = *(_QWORD *)(v8 - 472);
  *(_QWORD *)(v8 - 272) = *(_QWORD *)(v8 - 456);
  v19 = MEMORY[0x24BDEDC10];
  v20 = sub_2412C8FC4(&qword_257128210, &qword_2571281A8, MEMORY[0x24BDEDC10]);
  *(_QWORD *)(v8 - 152) = v4;
  *(_QWORD *)(v8 - 144) = v20;
  v21 = MEMORY[0x24BDED308];
  v22 = *(_QWORD *)(v8 - 400);
  v23 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v22, v8 - 152);
  sub_2414B4504();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 344) + 8))(v18, v22);
  v24 = MEMORY[0x242695AE8](v19, *(_QWORD *)(v8 - 360));
  *(_QWORD *)(v8 - 168) = v23;
  *(_QWORD *)(v8 - 160) = v24;
  v25 = MEMORY[0x242695AE8](v21, v1, v8 - 168);
  v26 = *(_QWORD *)(v8 - 376);
  sub_2412FBF34(v2, v1, v26);
  v27 = *(_QWORD *)(v8 - 352);
  v28 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
  v28(v2, v1);
  v29 = *(_QWORD *)(v8 - 392);
  v30 = *(_QWORD *)(v8 - 408);
  v31 = *(_QWORD *)(v8 - 440);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v30, v31, v10);
  *(_QWORD *)(v8 - 136) = v30;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v2, v26, v1);
  *(_QWORD *)(v8 - 128) = v2;
  *(_QWORD *)(v8 - 184) = v10;
  *(_QWORD *)(v8 - 176) = v1;
  *(_QWORD *)(v8 - 200) = *(_QWORD *)(v8 - 416);
  *(_QWORD *)(v8 - 192) = v25;
  sub_2412F68CC((uint64_t *)(v8 - 136), 2uLL, v8 - 184);
  v28(v26, v1);
  v32 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
  v32(v31, v10);
  v28(v2, v1);
  return ((uint64_t (*)(uint64_t, uint64_t))v32)(v30, v10);
}

void sub_241414E28()
{
  type metadata accessor for MaterialChinModifier();
}

uint64_t sub_241414E64()
{
  uint64_t v0;
  unsigned __int8 v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  __int128 v9;
  char v10;
  __int128 v11;
  void *v12;
  void *v13;
  unsigned __int8 v14;

  sub_241414F68((uint64_t)&v12);
  v1 = v14;
  if (v14 == 255)
  {
    v3 = 0;
    v2 = 0;
    v4 = 0;
    v7 = 0;
    KeyPath = 0;
    v6 = 0;
    result = 0;
    v10 = 0;
    v9 = 0uLL;
  }
  else
  {
    v3 = v12;
    v2 = v13;
    v4 = v14 & 1;
    v12 = 0;
    sub_241316AC8(v3, v13, v14 & 1);
    __swift_instantiateConcreteTypeFromMangledName(qword_257121BB0);
    sub_2414B4798();
    KeyPath = swift_getKeyPath();
    v6 = swift_getKeyPath();
    v7 = sub_2414B4648();
    sub_24138EE34(v3, v2, v1);
    result = swift_getKeyPath();
    v9 = v11;
    v10 = 2;
  }
  *(_QWORD *)v0 = v3;
  *(_QWORD *)(v0 + 8) = v2;
  *(_QWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 24) = v7;
  *(_OWORD *)(v0 + 32) = v9;
  *(_QWORD *)(v0 + 48) = KeyPath;
  *(_QWORD *)(v0 + 56) = 0;
  *(_QWORD *)(v0 + 64) = v6;
  *(_QWORD *)(v0 + 72) = 0;
  *(_QWORD *)(v0 + 80) = result;
  *(_BYTE *)(v0 + 88) = v10;
  return result;
}

void sub_241414F68(uint64_t a1@<X8>)
{
  void *v2;
  id v3;
  void *v4;
  id v5;
  char v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257125390);
  sub_2414B4AF8();
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&qword_257123990, type metadata accessor for MaterialMotionContentObserver, (uint64_t)&unk_2414BC2AC);
  sub_2414B2B84();
  swift_release();
  v2 = *(void **)(v7 + 24);
  v3 = v2;
  swift_release();
  sub_2414B4AF8();
  swift_getKeyPath();
  sub_2414B2B84();
  swift_release();
  v4 = *(void **)(v7 + 16);
  v5 = v4;
  swift_release();
  if (v2)
  {
    v6 = v4 == 0;
  }
  else
  {

    v4 = 0;
    v6 = -1;
  }
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v6;
}

void sub_2414150B4()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_2414B3514();
  MEMORY[0x24BDAC7A8](v0);
  MEMORY[0x24BDAC7A8](v1);
  type metadata accessor for MaterialChinModifier();
}

uint64_t sub_241415160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  sub_2414B4A44();
  sub_2414B44A4();
  v6 = MEMORY[0x24BDEBEE0];
  *(_QWORD *)(v5 - 128) = v3;
  *(_QWORD *)(v5 - 120) = v6;
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v5 - 128);
  sub_2412FBF34(v4, v1, v2);
  v7 = *(void (**)(uint64_t, uint64_t))(v0 + 8);
  v7(v4, v1);
  sub_2412EEA1C(v2, v1, *(_QWORD *)(v5 - 136));
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(v2, v1);
}

void sub_241415220()
{
  type metadata accessor for MaterialChinModifier();
}

void sub_241415258()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  uint64_t v9;
  uint64_t KeyPath;
  id v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257125390);
  sub_2414B4AF8();
  v2 = *(_QWORD *)(v1 - 112);
  swift_getKeyPath();
  *(_QWORD *)(v1 - 112) = v2;
  sub_2412C8030((unint64_t *)&qword_257123990, type metadata accessor for MaterialMotionContentObserver, (uint64_t)&unk_2414BC2AC);
  sub_2414B2B84();
  swift_release();
  v3 = *(void **)(v2 + 24);
  v4 = v3;
  swift_release();
  v5 = *(void **)(v0 + 8);
  if (v3)
  {
    if (v5)
    {
      sub_241416DD0();
      v6 = v4;
      v7 = v5;
      v8 = sub_2414B532C();

      if ((v8 & 1) != 0)
        return;
    }
    else
    {

    }
LABEL_8:
    sub_2414B4AF8();
    v9 = *(_QWORD *)(v1 - 112);
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    *(_QWORD *)(v1 - 112) = v9;
    v11 = v5;
    sub_2414B2B78();
    swift_release();
    swift_release();

    return;
  }
  if (v5)
    goto LABEL_8;
}

double sub_24141540C(uint64_t a1, int a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  void (*v19)(_BYTE *, uint64_t);
  BOOL v20;
  double v21;
  double v22;
  _BYTE v24[4];
  int v25;
  uint64_t v26;
  BOOL v27;
  char v28;

  v25 = a2;
  v26 = a1;
  v8 = sub_2414B3430();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_2414B32BC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = &v24[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v16);
  v18 = &v24[-v17];
  sub_2414155A8((void (*)(uint64_t, uint64_t, uint64_t))&v24[-v17], (uint64_t)v15, a5);
  v19 = *(void (**)(_BYTE *, uint64_t))(v13 + 8);
  v19(v15, v12);
  v20 = (a4 & 1) != 0 || *(double *)&a3 == 0.0;
  v28 = v25 & 1;
  v27 = v20;
  sub_2414B328C();
  sub_2414B3418();
  v22 = v21;
  sub_2414B3424();
  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
  v19(v18, v12);
  return v22;
}

uint64_t sub_2414155A8(void (*a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t (*v22)(uint64_t, char *, uint64_t);
  void (*v23)(uint64_t *, _QWORD);
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t *, _QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v34 = a1;
  v5 = sub_2414B33A0();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEC778];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v32 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126950);
  MEMORY[0x24BDAC7A8](v9);
  v33 = (uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v31 = (uint64_t)&v30 - v12;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v30 - v14;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v30 - v17;
  sub_2412C8030((unint64_t *)&qword_254382810, v6, MEMORY[0x24BDEC7A0]);
  sub_2414B50F8();
  sub_2414B5128();
  if (sub_2414B511C() == 2)
  {
    v30 = v7;
    sub_2414AFD3C((uint64_t)v18);
    v19 = sub_2414B32BC();
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    if (v21(v18, 1, v19) == 1)
    {
      v15 = v18;
    }
    else
    {
      v22 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v20 + 32);
      v22((uint64_t)v34, v18, v19);
      if ((sub_2414B5110() & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v15, 1, 1, v19);
      }
      else
      {
        sub_2414B5128();
        sub_2412C8030(qword_257128228, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC778], MEMORY[0x24BDEC788]);
        sub_2414B4C9C();
        v23 = (void (*)(uint64_t *, _QWORD))sub_2414B5164();
        (*(void (**)(char *))(v20 + 16))(v15);
        v23(&v35, 0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v15, 0, 1, v19);
        if (v21(v15, 1, v19) != 1)
          return v22(a2, v15, v19);
      }
      (*(void (**)(void (*)(uint64_t, uint64_t, uint64_t), uint64_t))(v20 + 8))(v34, v19);
    }
    sub_241417484((uint64_t)v15);
    v7 = v30;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v32, a3, v5);
  v35 = 0;
  v36 = 0xE000000000000000;
  sub_2414B5578();
  v37 = v35;
  v38 = v36;
  sub_2414B4DF8();
  sub_2414B50F8();
  sub_2414B5128();
  v35 = sub_2414B511C();
  sub_2414B57A0();
  sub_2414B4DF8();
  swift_bridgeObjectRelease();
  sub_2414B4DF8();
  v25 = v31;
  sub_2414AFD3C(v31);
  v26 = sub_2414B32BC();
  v27 = *(_QWORD *)(v26 - 8);
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  v34(v25, 1, v26);
  sub_241417484(v25);
  sub_2414B4DF8();
  swift_bridgeObjectRelease();
  sub_2414B4DF8();
  if ((sub_2414B5110() & 1) != 0)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v33, 1, 1, v26);
  }
  else
  {
    sub_2414B5128();
    sub_2412C8030(qword_257128228, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC778], MEMORY[0x24BDEC788]);
    sub_2414B4C9C();
    v28 = (void (*)(uint64_t *, _QWORD))sub_2414B5164();
    v29 = v33;
    (*(void (**)(uint64_t))(v27 + 16))(v33);
    v28(&v35, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v27 + 56))(v29, 0, 1, v26);
    ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v34)(v29, 1, v26);
  }
  sub_241417484(v33);
  sub_2414B4DF8();
  swift_bridgeObjectRelease();
  result = sub_2414B5674();
  __break(1u);
  return result;
}

uint64_t sub_241415B44(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, char a6, uint64_t a7, char a8, uint64_t a9)
{
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  BOOL v27;
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  char v35;
  BOOL v36;
  char v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;

  v17 = sub_2414B3430();
  v30 = *(_QWORD *)(v17 - 8);
  v31 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_2414B32BC();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v30 - v25;
  sub_2414155A8((void (*)(uint64_t, uint64_t, uint64_t))((char *)&v30 - v25), (uint64_t)v23, a9);
  v27 = (a8 & 1) != 0 || *(double *)&a7 == 0.0;
  v37 = a6 & 1;
  v36 = v27;
  sub_2414B328C();
  v38.origin.x = a1;
  v38.origin.y = a2;
  v38.size.width = a3;
  v38.size.height = a4;
  CGRectGetMidX(v38);
  v39.origin.x = a1;
  v39.origin.y = a2;
  v39.size.width = a3;
  v39.size.height = a4;
  CGRectGetMinY(v39);
  sub_2414B4B4C();
  sub_2414B3418();
  sub_2414B3424();
  v35 = 0;
  v34 = 0;
  sub_2414B32A4();
  sub_2414B3418();
  sub_2414B3424();
  v40.origin.x = a1;
  v40.origin.y = a2;
  v40.size.width = a3;
  v40.size.height = a4;
  CGRectGetMidX(v40);
  v41.origin.x = a1;
  v41.origin.y = a2;
  v41.size.width = a3;
  v41.size.height = a4;
  CGRectGetMinY(v41);
  sub_2414B3424();
  sub_2414B4B4C();
  v33 = 0;
  v32 = 0;
  sub_2414B32A4();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v31);
  v28 = *(void (**)(char *, uint64_t))(v21 + 8);
  v28(v23, v20);
  return ((uint64_t (*)(char *, uint64_t))v28)(v26, v20);
}

double sub_241415DDC(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  return sub_24141540C(a1, a2 & 1, a3, a4 & 1, a5);
}

uint64_t sub_241415DF8(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  return sub_241415B44(a6, a7, a8, a9, a1, a2 & 1, a3, a4 & 1, a5);
}

uint64_t View.materialChin<A, B>(image:height:placeholder:content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_241415E7C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, uint64_t, uint64_t, uint64_t))MCUINamespace<A>.materialChin<A, B>(image:height:placeholder:content:));
}

uint64_t View.motionMaterialChin<A, B>(keyframe:height:placeholder:content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_241415E7C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, uint64_t, uint64_t, uint64_t))MCUINamespace<A>.motionMaterialChin<A, B>(keyframe:height:placeholder:content:));
}

uint64_t sub_241415E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, uint64_t a10, uint64_t a11, uint64_t a12, void (*a13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, uint64_t, uint64_t, uint64_t))
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a7;
  v28 = a8;
  v25 = a4;
  v26 = a5;
  v22 = a2;
  v23 = a3;
  v24 = a13;
  v16 = type metadata accessor for MCUINamespace(0, a6, a3, a4);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v21 - v18;
  View.mcui.getter(a6, (uint64_t)&v21 - v18);
  v24(a1, v22, v23, v25, v26, v16, v27, v28, a9, a10, a11, a12);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
}

void sub_241415F7C()
{
  type metadata accessor for MaterialChinModifier();
}

uint64_t sub_241415FB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[12];

  v3 = sub_2414B3514();
  v5[0] = v1;
  v5[1] = MEMORY[0x242695AE8](&unk_2414C5B30, a1);
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v3, v5);
}

void sub_241416004()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
    {
      sub_241416CCC();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *sub_2414160C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  uint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  _QWORD *v24;
  void **v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v39 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v39 - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v6 = v5;
  v40 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v40 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v38 = *(_QWORD *)(v4 + 64) + v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543828B0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = v13 & 0xF8 | 7;
  v15 = v10 + v14;
  v16 = *(_QWORD *)(v12 + 64) + 7;
  v17 = v8 | (unint64_t)v5 | v14;
  v18 = (v8 | v5 | v13) & 0x100000;
  if (v17 != 7
    || v18 != 0
    || (v16 & 0xFFFFFFFFFFFFFFF8)
     + ((v15
       + ((v38 + ((v5 + 16) & ~(unint64_t)v5)) & ~(unint64_t)v8)) & ~v14)
     + 8 > 0x18)
  {
    v21 = *a2;
    *a1 = *a2;
    v23 = (uint64_t *)(v21 + ((v17 + 16) & ~v17));
  }
  else
  {
    v22 = ~(unint64_t)v8;
    v23 = a1;
    *a1 = *a2;
    v36 = v11;
    v37 = ~v14;
    v24 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    v25 = (void **)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    v26 = *v25;
    *v24 = *v25;
    v27 = ((unint64_t)v24 + v6 + 8) & ~v6;
    v28 = ((unint64_t)v25 + v6 + 8) & ~v6;
    v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    v30 = v16;
    v31 = v26;
    v29(v27, v28, v39);
    v32 = (v27 + v38) & ~v9;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v7 + 16))(v32, (v28 + v38) & v22, v40);
    v33 = (v32 + v15) & v37;
    v34 = (((v28 + v38) & v22) + v15) & v37;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 16))(v33, v34, v36);
    *(_QWORD *)((v30 + v33) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v30 + v34) & 0xFFFFFFFFFFFFF8);
  }
  swift_retain();
  return v23;
}

uint64_t sub_241416298(uint64_t a1, uint64_t a2)
{
  id *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = (id *)((a1 + 15) & 0xFFFFFFFFFFFFFFF8);

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v5 = ((unint64_t)v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v5);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t))(v7 + 8))(v8);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543828B0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80) & 0xF8 | 7;
  (*(void (**)(unint64_t, uint64_t))(v11 + 8))((v8 + v9 + v12) & ~v12, v10);
  return swift_release();
}

_QWORD *sub_241416368(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  void **v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *a1 = *a2;
  v5 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (void **)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  v7 = *v6;
  *v5 = *v6;
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = ((unint64_t)v5 + v10 + 8) & ~v10;
  v12 = ((unint64_t)v6 + v10 + 8) & ~v10;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v14 = v7;
  v13(v11, v12, v8);
  v15 = *(_QWORD *)(v9 + 64);
  v16 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v15 + v17;
  v19 = (v18 + v11) & ~v17;
  v20 = (v18 + v12) & ~v17;
  (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v19, v20);
  v21 = *(_QWORD *)(v16 + 64);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543828B0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_DWORD *)(v23 + 80) & 0xF8 | 7;
  v25 = (v21 + v24 + v19) & ~v24;
  v26 = (v21 + v24 + v20) & ~v24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v25, v26, v22);
  *(_QWORD *)((*(_QWORD *)(v23 + 64) + 7 + v25) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v23 + 64) + 7 + v26) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  return a1;
}

_QWORD *sub_241416498(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void **v5;
  void **v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *a1 = *a2;
  v5 = (void **)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (void **)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  v7 = *v6;
  v8 = *v5;
  *v5 = *v6;
  v9 = v7;

  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = ((unint64_t)v5 + v11 + 8) & ~v11;
  v13 = ((unint64_t)v6 + v11 + 8) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v12, v13);
  v14 = *(_QWORD *)(v10 + 64);
  v15 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = v14 + v16;
  v18 = (v17 + v12) & ~v16;
  v19 = (v17 + v13) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v15 + 24))(v18, v19);
  v20 = *(_QWORD *)(v15 + 64);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543828B0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(_DWORD *)(v22 + 80) & 0xF8 | 7;
  v24 = (v20 + v23 + v18) & ~v23;
  v25 = (v20 + v23 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 24))(v24, v25, v21);
  *(_QWORD *)((*(_QWORD *)(v22 + 64) + 7 + v24) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v22 + 64)
                                                                                       + 7
                                                                                       + v25) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_2414165D0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *a1 = *a2;
  v5 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)v5 + v8 + 8) & ~v8;
  v10 = ((unint64_t)v6 + v8 + 8) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v9, v10);
  v11 = *(_QWORD *)(v7 + 64);
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v11 + v13;
  v15 = (v14 + v9) & ~v13;
  v16 = (v14 + v10) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v12 + 32))(v15, v16);
  v17 = *(_QWORD *)(v12 + 64);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543828B0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_DWORD *)(v19 + 80) & 0xF8 | 7;
  v21 = (v17 + v20 + v15) & ~v20;
  v22 = (v17 + v20 + v16) & ~v20;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v21, v22, v18);
  *(_QWORD *)((*(_QWORD *)(v19 + 64) + 7 + v21) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v19 + 64) + 7 + v22) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *sub_2414166EC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void **v5;
  void **v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *a1 = *a2;
  v5 = (void **)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (void **)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  v7 = *v5;
  *v5 = *v6;

  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)v5 + v9 + 8) & ~v9;
  v11 = ((unint64_t)v6 + v9 + 8) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v10, v11);
  v12 = *(_QWORD *)(v8 + 64);
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543828B0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_DWORD *)(v20 + 80) & 0xF8 | 7;
  v22 = (v18 + v21 + v16) & ~v21;
  v23 = (v18 + v21 + v17) & ~v21;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 40))(v22, v23, v19);
  *(_QWORD *)((*(_QWORD *)(v20 + 64) + 7 + v22) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v20 + 64)
                                                                                       + 7
                                                                                       + v23) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_241416818(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v5 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v8 <= v10)
    v11 = *(_DWORD *)(v9 + 84);
  else
    v11 = *(_DWORD *)(v7 + 84);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543828B0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int *)(v13 + 84);
  if (v14 <= 0x7FFFFFFE)
    v15 = 2147483646;
  else
    v15 = *(_DWORD *)(v13 + 84);
  if (v11 > v15)
    v15 = v11;
  if (!a2)
    return 0;
  v16 = v12;
  v17 = *(unsigned __int8 *)(v7 + 80);
  v18 = *(_QWORD *)(v7 + 64);
  v19 = *(unsigned __int8 *)(v9 + 80);
  v20 = *(_QWORD *)(v9 + 64);
  v21 = *(_DWORD *)(v13 + 80) & 0xF8 | 7;
  if (v15 < a2)
  {
    if (((((*(_QWORD *)(v13 + 64) + 7) & 0xFFFFFFFFFFFFFFF8)
         + ((v20 + v21 + ((v18 + v19 + ((v17 + 16) & ~v17)) & ~v19)) & ~v21)
         + 8) & 0xFFFFFFF8) != 0)
      v22 = 2;
    else
      v22 = a2 - v15 + 1;
    if (v22 >= 0x10000)
      v23 = 4;
    else
      v23 = 2;
    if (v22 < 0x100)
      v23 = 1;
    if (v22 >= 2)
      v24 = v23;
    else
      v24 = 0;
    __asm { BR              X3 }
  }
  v26 = (uint64_t *)((a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (v15 > 0x7FFFFFFE)
  {
    v28 = ((unint64_t)v26 + v17 + 8) & ~v17;
    if ((_DWORD)v8 == v15)
    {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v28, v8, v6);
    }
    else
    {
      v29 = (v28 + v18 + v19) & ~v19;
      if ((_DWORD)v10 == v15)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v29, v10, v5);
      else
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))((v29 + v20 + v21) & ~v21, v14, v16);
    }
  }
  else
  {
    v27 = *v26;
    if ((unint64_t)*v26 >= 0xFFFFFFFF)
      LODWORD(v27) = -1;
    if ((v27 + 1) >= 2)
      return v27;
    else
      return 0;
  }
}

void sub_241416A44(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  size_t v13;
  unsigned int v14;
  int v15;
  int v16;
  unsigned int v17;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v7 + 84) <= *(_DWORD *)(v8 + 84))
    v9 = *(_DWORD *)(v8 + 84);
  else
    v9 = *(_DWORD *)(v7 + 84);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543828B0) - 8);
  if (*(_DWORD *)(v10 + 84) <= 0x7FFFFFFEu)
    v11 = 2147483646;
  else
    v11 = *(_DWORD *)(v10 + 84);
  if (v9 <= v11)
    v12 = v11;
  else
    v12 = v9;
  v13 = ((*(_QWORD *)(v8 + 64)
        + (*(_DWORD *)(v10 + 80) & 0xF8 | 7)
        + ((*(_QWORD *)(v7 + 64)
          + *(unsigned __int8 *)(v8 + 80)
          + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))) & ~(*(_DWORD *)(v10 + 80) & 0xF8 | 7))
      + ((*(_QWORD *)(v10 + 64) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v12 >= a3)
  {
    v16 = 0;
    if (a2 <= v12)
      goto LABEL_23;
  }
  else
  {
    if ((_DWORD)v13)
      v14 = 2;
    else
      v14 = a3 - v12 + 1;
    if (v14 >= 0x10000)
      v15 = 4;
    else
      v15 = 2;
    if (v14 < 0x100)
      v15 = 1;
    if (v14 >= 2)
      v16 = v15;
    else
      v16 = 0;
    if (a2 <= v12)
LABEL_23:
      __asm { BR              X6 }
  }
  if ((_DWORD)v13)
  {
    v17 = ~v12 + a2;
    bzero(a1, v13);
    *a1 = v17;
  }
  __asm { BR              X10 }
}

void sub_241416BBC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x241416C84);
}

void sub_241416BC4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = 0;
  if (v0)
    JUMPOUT(0x241416BCCLL);
  JUMPOUT(0x241416C84);
}

void sub_241416C14()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x241416C84);
}

void sub_241416C1C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x241416C84);
}

void sub_241416C24()
{
  unsigned int v0;
  unsigned int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  *(_WORD *)(v2 + v4) = 0;
  if (v1)
  {
    if (v0 > 0x7FFFFFFE)
    {
      if (v3 == v0)
        JUMPOUT(0x241416CACLL);
      JUMPOUT(0x241416C30);
    }
    *(_QWORD *)((v2 + 15) & 0xFFFFFFFFFFFFFFF8) = v1;
  }
  JUMPOUT(0x241416C84);
}

void sub_241416CCC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2543828B8)
  {
    type metadata accessor for MaterialMotionContentObserver(255);
    v0 = sub_2414B4B04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2543828B8);
  }
}

uint64_t sub_241416D20()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_241416D54()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2571281C0;
  if (!qword_2571281C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381558);
    v2 = sub_2412C8030(&qword_2571281C8, (uint64_t (*)(uint64_t))sub_241416DD0, MEMORY[0x24BEE5BE0]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2571281C0);
  }
  return result;
}

unint64_t sub_241416DD0()
{
  unint64_t result;

  result = qword_254384FE0;
  if (!qword_254384FE0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254384FE0);
  }
  return result;
}

void sub_241416E0C(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_2414148F0(v1[6], v1[2], v1[3], v1[4], v1[5], a1);
}

void sub_241416E1C()
{
  type metadata accessor for MaterialChinModifier();
}

uint64_t sub_241416E5C(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v4 = *(unsigned __int8 *)(*((_QWORD *)a1 - 1) + 80);
  v5 = v2 + ((v4 + 48) & ~v4);

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v5 + a1[14], v1);
  (*(void (**)(uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v5 + a1[15]);
  v6 = v5 + a1[16];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543828B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257125390);
  swift_release();
  return swift_deallocObject();
}

void sub_241416F24()
{
  type metadata accessor for MaterialChinModifier();
}

void sub_241416F58()
{
  sub_241415220();
}

void sub_241416F9C()
{
  sub_241414E28();
}

unint64_t sub_241416FAC()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_2571281D8;
  if (!qword_2571281D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571281D0);
    v2 = sub_241417010();
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2571281D8);
  }
  return result;
}

unint64_t sub_241417010()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571281E0;
  if (!qword_2571281E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571281E8);
    v2[0] = sub_2412C8FC4(&qword_2571281F0, &qword_2571281F8, (uint64_t)&protocol conformance descriptor for MaterialView<A>);
    v2[1] = sub_2412C8FC4((unint64_t *)&qword_257128200, &qword_257128208, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571281E0);
  }
  return result;
}

void sub_2414170AC()
{
  sub_2414150B4();
}

uint64_t sub_2414170D4()
{
  return swift_deallocObject();
}

unint64_t sub_2414170E4()
{
  unint64_t result;

  result = qword_257128218;
  if (!qword_257128218)
  {
    result = MEMORY[0x242695AE8](&unk_2414C5C84, &type metadata for MaterialChinLayout);
    atomic_store(result, (unint64_t *)&qword_257128218);
  }
  return result;
}

uint64_t sub_241417128@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_241417150()
{
  swift_release();
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for MaterialChinLayout()
{
  return &type metadata for MaterialChinLayout;
}

void sub_241417184()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571281A0);
  type metadata accessor for MaterialChinModifier();
}

uint64_t sub_2414171E0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t OpaqueTypeConformance2;
  uint64_t v14;
  _QWORD v16[2];
  _QWORD v17[2];
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  MEMORY[0x242695AE8](&unk_2414C5B30, a1);
  sub_2414B3B08();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571281A8);
  sub_2414B3514();
  v3 = sub_2414B3514();
  v18[0] = v2;
  v18[1] = MEMORY[0x24BDEBEE0];
  v4 = MEMORY[0x24BDED308];
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v3, v18);
  sub_2414B3604();
  sub_2414B3514();
  swift_getTupleTypeMetadata2();
  v5 = sub_2414B4B1C();
  sub_2412C8FC4(&qword_2571281B0, v1, MEMORY[0x24BDEB998]);
  v6 = sub_2414B3304();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383DF0);
  v7 = sub_2414B3514();
  v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381558);
  v17[0] = sub_2412C8FC4(&qword_2571281B8, v1, MEMORY[0x24BDEB9A8]);
  v17[1] = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v5);
  v16[0] = MEMORY[0x242695AE8](MEMORY[0x24BDEC550], v6, v17);
  v16[1] = sub_2412C8FC4(&qword_254383DE8, &qword_254383DF0, MEMORY[0x24BDEB950]);
  v9 = MEMORY[0x242695AE8](v4, v7, v16);
  v10 = sub_241416D54();
  v19 = v7;
  v20 = v8;
  v21 = v9;
  v22 = v10;
  v11 = MEMORY[0x242695A94](255, &v19, MEMORY[0x24BDF3908], 0);
  v12 = type metadata accessor for MaterialMotionContentObserver(255);
  v19 = v7;
  v20 = v8;
  v21 = v9;
  v22 = v10;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v14 = sub_2412C8030((unint64_t *)&qword_257123990, type metadata accessor for MaterialMotionContentObserver, (uint64_t)&unk_2414BC2AC);
  v19 = v11;
  v20 = v12;
  v21 = OpaqueTypeConformance2;
  v22 = v14;
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_241417440()
{
  unint64_t result;

  result = qword_257128220;
  if (!qword_257128220)
  {
    result = MEMORY[0x242695AE8](&unk_2414C5C34, &type metadata for MaterialChinLayout);
    atomic_store(result, (unint64_t *)&qword_257128220);
  }
  return result;
}

uint64_t sub_241417484(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257126950);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2414174C4()
{
  sub_2413A4C4C();
}

void sub_2414174D8()
{
  sub_2413A4C2C();
}

uint64_t sub_2414174EC()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    __break(1u);
    JUMPOUT(0x2414175FCLL);
  }
  return ((uint64_t (*)(double, double, double, double))((char *)&loc_24141751C
                                                                 + *((int *)qword_241417600
                                                                   + *(unsigned __int8 *)(v0 + 18))))(*(double *)v0, 78.0, 117.0, *(double *)(v0 + 8));
}

uint64_t sub_241417610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[2];
  _QWORD v43[2];
  uint64_t v44;

  v38 = a3;
  v4 = *(_QWORD *)(a1 + 16);
  v31 = *(_QWORD *)(a1 + 24);
  _s11ContentViewVMa(255, v4, v31, a2);
  sub_2414B3514();
  _s13FooterButtonsVMa(255, v4, v31, v5);
  swift_getTupleTypeMetadata2();
  v6 = sub_2414B4B1C();
  v30 = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v6);
  v7 = sub_2414B4894();
  v32 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v30 - v8;
  v10 = sub_2414B3514();
  v36 = *(_QWORD *)(v10 - 8);
  v34 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v39 = (char *)&v30 - v11;
  v12 = sub_2414B3514();
  v37 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v33 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v35 = (uint64_t)&v30 - v15;
  v16 = *(_QWORD *)v3;
  v17 = *(_QWORD *)(v3 + 8);
  v18 = *(_QWORD *)(v3 + 16);
  v19 = *(_BYTE *)(v3 + 24);
  v40 = v4;
  v41 = v31;
  sub_2414B3964();
  sub_2414B4888();
  sub_2414B3E38();
  sub_241321D28(v16, v17, v18, v19);
  sub_241346128(v16, v17, v18, v19, &v44);
  sub_24132196C(v16, v17, v18, v19);
  v20 = MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v7);
  sub_2414B4528();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v7);
  sub_2414B3E5C();
  sub_241321D28(v16, v17, v18, v19);
  sub_241346128(v16, v17, v18, v19, &v44);
  sub_24132196C(v16, v17, v18, v19);
  v21 = MEMORY[0x24BDECC60];
  v43[0] = v20;
  v43[1] = MEMORY[0x24BDECC60];
  v22 = MEMORY[0x24BDED308];
  v23 = v34;
  v24 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v34, v43);
  v25 = (uint64_t)v33;
  v26 = v39;
  sub_2414B4528();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v26, v23);
  v42[0] = v24;
  v42[1] = v21;
  MEMORY[0x242695AE8](v22, v12, v42);
  v27 = v35;
  sub_2412FBF34(v25, v12, v35);
  v28 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
  v28(v25, v12);
  sub_2412EEA1C(v27, v12, v38);
  return ((uint64_t (*)(uint64_t, uint64_t))v28)(v27, v12);
}

uint64_t sub_2414179A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  _QWORD v21[4];
  _QWORD v22[2];
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  char v34;
  uint64_t v35[2];
  _QWORD v36[2];
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  char v48;
  _OWORD v49[8];
  char v50;
  _OWORD v51[11];
  char v52;
  _OWORD v53[11];
  char v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  char v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  char v78;

  v21[1] = a4;
  v6 = _s13FooterButtonsVMa(0, a1, a2, a3);
  v21[0] = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v21 - v10;
  sub_241417DA8((uint64_t)v49);
  v61 = v49[6];
  v62 = v49[7];
  LOBYTE(v63) = v50;
  v57 = v49[2];
  v58 = v49[3];
  v60 = v49[5];
  v59 = v49[4];
  v55 = v49[0];
  v56 = v49[1];
  sub_2414B3E80();
  v13 = _s11ContentViewVMa(0, a1, a2, v12);
  v14 = MEMORY[0x242695AE8](&unk_2414C5E90, v13);
  sub_2414B4528();
  sub_2414195A4((uint64_t)v49);
  v51[8] = v75;
  v51[9] = v76;
  v51[10] = v77;
  v51[4] = v71;
  v51[5] = v72;
  v51[6] = v73;
  v51[7] = v74;
  v51[0] = v67;
  v51[1] = v68;
  v51[2] = v69;
  v51[3] = v70;
  v63 = v75;
  v64 = v76;
  v65 = v77;
  v59 = v71;
  v60 = v72;
  v61 = v73;
  v62 = v74;
  v55 = v67;
  v56 = v68;
  v52 = v78;
  v66 = v78;
  v57 = v69;
  v58 = v70;
  v15 = sub_2414B3514();
  v36[0] = v14;
  v36[1] = MEMORY[0x24BDECC60];
  v16 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v15, v36);
  sub_2412FBF34((uint64_t)&v55, v15, (uint64_t)&v37);
  sub_2414195A4((uint64_t)v51);
  sub_241434CA0(a1, a2, (uint64_t)v8);
  v17 = MEMORY[0x242695AE8](&unk_2414C70A0, v6);
  sub_2412FBF34((uint64_t)v8, v6, (uint64_t)v11);
  v18 = v21[0];
  v19 = *(void (**)(char *, uint64_t))(v21[0] + 8);
  v19(v8, v6);
  v53[8] = v45;
  v53[9] = v46;
  v53[10] = v47;
  v53[4] = v41;
  v53[5] = v42;
  v53[6] = v43;
  v53[7] = v44;
  v53[0] = v37;
  v53[1] = v38;
  v53[2] = v39;
  v53[3] = v40;
  v31 = v45;
  v32 = v46;
  v33 = v47;
  v27 = v41;
  v28 = v42;
  v29 = v43;
  v30 = v44;
  v23 = v37;
  v24 = v38;
  v54 = v48;
  v34 = v48;
  v25 = v39;
  v26 = v40;
  v35[0] = (uint64_t)&v23;
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v8, v11, v6);
  v35[1] = (uint64_t)v8;
  sub_241419674((uint64_t)v53);
  v22[0] = v15;
  v22[1] = v6;
  v21[2] = v16;
  v21[3] = v17;
  sub_2412F68CC(v35, 2uLL, (uint64_t)v22);
  v19(v11, v6);
  v63 = v45;
  v64 = v46;
  v65 = v47;
  v66 = v48;
  v59 = v41;
  v60 = v42;
  v61 = v43;
  v62 = v44;
  v55 = v37;
  v56 = v38;
  v57 = v39;
  v58 = v40;
  sub_2414195A4((uint64_t)&v55);
  v19(v8, v6);
  v75 = v31;
  v76 = v32;
  v77 = v33;
  v78 = v34;
  v71 = v27;
  v72 = v28;
  v73 = v29;
  v74 = v30;
  v67 = v23;
  v68 = v24;
  v69 = v25;
  v70 = v26;
  return sub_2414195A4((uint64_t)&v67);
}

double sub_241417DA8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  char v8;
  double result;

  v2 = sub_2414B3658();
  v4 = v3;
  KeyPath = swift_getKeyPath();
  v6 = swift_getKeyPath();
  type metadata accessor for WindowProperties();
  sub_24141975C();
  v7 = sub_2414B2FEC();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = KeyPath;
  result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_WORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = v6;
  *(_QWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = v7;
  *(_BYTE *)(a1 + 128) = v8 & 1;
  return result;
}

uint64_t sub_241417E68@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  result = swift_getKeyPath();
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 24) = 0;
  return result;
}

void sub_241417EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[80];
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _OWORD v17[4];
  char v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];
  _OWORD v23[3];
  _OWORD v24[2];
  _BYTE v25[96];

  _s18DefaultContentViewVMa(255, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_257122900);
  sub_2414B3514();
  sub_2414B53B0();
  swift_getTupleTypeMetadata2();
  v5 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v5);
  v6 = sub_2414B4804();
  MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v7);
  v8 = v4[5];
  v17[0] = v4[4];
  v17[1] = v8;
  v9 = v4[7];
  v17[2] = v4[6];
  v17[3] = v9;
  v18 = *((_BYTE *)v4 + 128);
  v10 = v4[3];
  v15 = v4[2];
  v16 = v10;
  v11 = v4[1];
  v13 = *v4;
  v14 = v11;
  v23[2] = v10;
  v24[0] = v17[0];
  *(_OWORD *)((char *)v24 + 10) = *(_OWORD *)((char *)v17 + 10);
  v23[0] = v11;
  v23[1] = v15;
  v21 = v10;
  v22[0] = v17[0];
  *(_OWORD *)((char *)v22 + 10) = *(_OWORD *)((char *)v17 + 10);
  v19 = v11;
  v20 = v15;
  sub_2413139F4((uint64_t)v23, (uint64_t)v25);
  sub_2412FD220((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
  sub_2412FD278((uint64_t)v12);
  sub_2412FD220((uint64_t)v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
  __asm { BR              X10 }
}

uint64_t sub_241418080(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  MEMORY[0x24BDAC7A8](a1);
  sub_2414B3880();
  sub_2414B47F8();
  MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v2);
  sub_2412FBF34(v4, v2, v3);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 16) + 8);
  v5(v4, v2);
  sub_2412EEA1C(v3, v2, *(_QWORD *)(v1 + 24));
  return ((uint64_t (*)(uint64_t, uint64_t))v5)(v3, v2);
}

uint64_t sub_24141817C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  ValueMetadata *KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  ValueMetadata *v26;
  char v27;
  uint64_t v28;
  ValueMetadata *v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  void (*v33)(ValueMetadata ***__return_ptr, uint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;
  uint64_t AssociatedConformanceWitness;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  unint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v48;
  char *v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  ValueMetadata *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  ValueMetadata **v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[2];
  uint64_t v66;
  uint64_t v67;
  ValueMetadata **v68;
  char *v69;
  ValueMetadata **v70;
  char *v71;
  _QWORD v72[2];
  ValueMetadata *v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int16 v78;
  __int128 v79;
  ValueMetadata *v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int16 v85;
  __int128 v86;

  v60 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v53 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v51 = (uint64_t)&v48 - v8;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_257122900);
  v55 = AssociatedTypeWitness;
  v9 = sub_2414B3514();
  v56 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v52 = (uint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v54 = (ValueMetadata *)((char *)&v48 - v12);
  v62 = sub_2414B53B0();
  v59 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v63 = (uint64_t)&v48 - v16;
  KeyPath = (ValueMetadata *)swift_getKeyPath();
  *(_QWORD *)&v50 = *(_QWORD *)(a3 + 8);
  v18 = sub_2414B3658();
  v73 = KeyPath;
  v74 = 0u;
  v75 = 0u;
  v76 = 0u;
  v77 = 0u;
  v78 = 0;
  *(_QWORD *)&v79 = v18;
  *((_QWORD *)&v79 + 1) = v19;
  v21 = _s18DefaultContentViewVMa(0, a2, a3, v20);
  v57 = MEMORY[0x242695AE8](&unk_2414C5F40, v21);
  v58 = (ValueMetadata **)v21;
  sub_2412FBF34((uint64_t)&v73, v21, (uint64_t)&v80);
  sub_2412C823C((uint64_t)KeyPath, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  swift_unknownObjectRelease();
  v22 = *(_QWORD *)(a1 + 96);
  v23 = *(_QWORD *)(a1 + 104);
  v24 = *(_BYTE *)(a1 + 112);
  sub_2412C72E4(v22, v23, v24);
  sub_2412EEDF4(v22, v23, v24, (uint64_t *)&v73);
  sub_2412C822C(v22, v23, v24);
  v25 = v74;
  v61 = v9;
  if ((_QWORD)v74)
  {
    v49 = v14;
    v26 = v73;
    v27 = *(_BYTE *)(a1 + 128);
    v28 = swift_retain();
    v29 = (ValueMetadata *)sub_2412F0D3C(v28, v27);
    swift_release();
    swift_getKeyPath();
    v73 = v29;
    sub_24141975C();
    sub_2414B2B84();
    swift_release();
    v30 = BYTE1(v29[8].Description);
    swift_release();
    if ((v30 & 1) == 0)
    {
      sub_2412C84FC(*(_QWORD *)a1);
      v33 = *(void (**)(ValueMetadata ***__return_ptr, uint64_t, uint64_t))(a3 + 296);
      swift_unknownObjectRetain();
      v33(&v70, a2, a3);
      swift_unknownObjectRelease();
      v68 = v70;
      v69 = v71;
      v66 = (uint64_t)v26;
      v67 = v25;
      v34 = sub_2413826B8();
      v35 = v55;
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      v73 = &type metadata for NowPlayingHostedContentID;
      *(_QWORD *)&v74 = v35;
      *((_QWORD *)&v74 + 1) = v34;
      *(_QWORD *)&v75 = AssociatedConformanceWitness;
      type metadata accessor for ContentLookup();
    }
    swift_bridgeObjectRelease();
    v14 = v49;
    v9 = v61;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56))(v14, 1, 1, v9);
  v31 = swift_getAssociatedConformanceWitness();
  v32 = sub_241419DCC();
  v55 = v31;
  v72[0] = v31;
  v72[1] = v32;
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v9, v72);
  sub_2412F65F0((uint64_t)v14, v63);
  v37 = v59;
  v56 = *(_QWORD *)(v59 + 8);
  ((void (*)(char *, uint64_t))v56)(v14, v62);
  v53 = v81;
  v54 = v80;
  v38 = *((_QWORD *)&v81 + 1);
  v40 = v82;
  v39 = v83;
  v51 = v84;
  v52 = *((_QWORD *)&v83 + 1);
  v41 = *((_QWORD *)&v84 + 1);
  LOBYTE(v31) = v85;
  v42 = HIBYTE(v85);
  v73 = v80;
  v74 = v81;
  v75 = v82;
  v76 = v83;
  v77 = v84;
  v78 = v85;
  v50 = v86;
  v79 = v86;
  v70 = &v73;
  v43 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 16);
  v44 = v62;
  v43(v14, v63, v62);
  v71 = v14;
  sub_2412C6F48((uint64_t)v54, v53, v38, v40, *((uint64_t *)&v40 + 1), v39, v52, v51, v41, v31, v42);
  swift_unknownObjectRetain();
  v68 = v58;
  v69 = (char *)v44;
  v66 = v57;
  v45 = sub_241419DCC();
  v65[0] = v55;
  v65[1] = v45;
  v64 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v61, v65);
  v67 = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v44, &v64);
  sub_2412F68CC((uint64_t *)&v70, 2uLL, (uint64_t)&v68);
  v46 = (void (*)(char *, uint64_t))v56;
  ((void (*)(uint64_t, uint64_t))v56)(v63, v44);
  sub_2412C823C((uint64_t)v80, v81, *((uint64_t *)&v81 + 1), v82, *((uint64_t *)&v82 + 1), v83, *((uint64_t *)&v83 + 1), v84, *((uint64_t *)&v84 + 1), v85, SHIBYTE(v85));
  swift_unknownObjectRelease();
  v46(v14, v44);
  sub_2412C823C((uint64_t)v73, v74, *((uint64_t *)&v74 + 1), v75, *((uint64_t *)&v75 + 1), v76, *((uint64_t *)&v76 + 1), v77, *((uint64_t *)&v77 + 1), v78, SHIBYTE(v78));
  return swift_unknownObjectRelease();
}

uint64_t sub_241418854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];
  _OWORD v20[21];
  _BYTE v21[336];
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _OWORD v25[2];
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[32];
  __int128 v30;
  _OWORD v31[3];
  _OWORD v32[2];
  _BYTE __dst[288];
  _BYTE __src[336];
  _OWORD v35[21];

  v4 = v2[3];
  v28 = v2[2];
  *(_OWORD *)v29 = v4;
  v5 = v2[5];
  *(_OWORD *)&v29[16] = v2[4];
  v30 = v5;
  v6 = v2[1];
  v26 = *v2;
  v27 = v6;
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  sub_2414B3964();
  *(_QWORD *)&v35[0] = _s21FullScreenArtworkViewVMa(255, v7, v8, v9);
  *((_QWORD *)&v35[0] + 1) = _s33DefaultMetadataAndContextMenuViewVMa(255, v7, v8, v10);
  *(_QWORD *)&v35[1] = _s10BannerViewVMa(255, v7, v8, v11);
  _s15TimeControlViewVMa(255, v7, v8, v12);
  *((_QWORD *)&v35[1] + 1) = sub_2414B3514();
  *(_QWORD *)&v35[2] = _s12ControlsViewVMa(255, v7, v8, v13);
  swift_getTupleTypeMetadata();
  v14 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v14);
  sub_2414B4888();
  memcpy(__dst, __src, 0x119uLL);
  memcpy(v21, __src, 0x119uLL);
  v31[2] = v28;
  v32[0] = *(_OWORD *)v29;
  *(_OWORD *)((char *)v32 + 10) = *(_OWORD *)&v29[10];
  v31[0] = v26;
  v31[1] = v27;
  v24 = v28;
  v25[0] = *(_OWORD *)v29;
  *(_OWORD *)((char *)v25 + 10) = *(_OWORD *)&v29[10];
  v22 = v26;
  v23 = v27;
  sub_2412FD220((uint64_t)v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
  sub_2412FD278((uint64_t)v20);
  sub_2412FD220((uint64_t)v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
  v35[0] = v20[0];
  LOBYTE(v35[1]) = v20[1];
  *(_WORD *)((char *)&v35[1] + 1) = *(_WORD *)((char *)&v20[1] + 1);
  *((_QWORD *)&v35[1] + 1) = *((_QWORD *)&v20[1] + 1);
  LOBYTE(v35[2]) = v20[2];
  *(_OWORD *)((char *)&v35[2] + 8) = *(_OWORD *)((char *)&v20[2] + 8);
  *(_OWORD *)((char *)&v35[3] + 8) = *(_OWORD *)((char *)&v20[3] + 8);
  BYTE8(v35[4]) = BYTE8(v20[4]);
  sub_2414174EC();
  sub_2414B4A44();
  v15 = sub_2414B4894();
  v16 = MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v15);
  sub_2414B44A4();
  sub_24141A20C((uint64_t)__dst);
  memcpy(__src, v35, sizeof(__src));
  memcpy(v20, v35, sizeof(v20));
  v17 = sub_2414B3514();
  v19[0] = v16;
  v19[1] = MEMORY[0x24BDEBEE0];
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v17, v19);
  sub_2412FBF34((uint64_t)v20, v17, (uint64_t)v21);
  sub_24141A20C((uint64_t)__src);
  memcpy(v35, v21, sizeof(v35));
  memcpy(v20, v21, sizeof(v20));
  sub_2412EEA1C((uint64_t)v20, v17, a2);
  return sub_24141A20C((uint64_t)v35);
}

uint64_t sub_241418B7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[5];
  char v49;
  __int128 v50;
  __int128 v51;
  char v52;
  __int128 v53;
  uint64_t v54;
  char v55;
  _QWORD v56[2];
  uint64_t v57[5];
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  __int16 v64;
  __int128 v65;
  __int128 v66;
  char v67;
  _BYTE v68[24];
  _BYTE v69[32];
  __int128 v70;
  __int16 v71;
  __int128 v72;
  __int128 v73;
  char v74;
  _BYTE v75[24];
  _BYTE v76[32];
  __int128 v77;
  __int16 v78;
  __int128 v79;
  __int128 v80;
  char v81;
  _QWORD v82[2];
  _BYTE v83[8];
  __int128 v84;
  __int128 v85;
  char v86;
  __int128 v87;
  uint64_t v88;
  char v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  char v93;
  _QWORD v94[2];
  _OWORD v95[3];
  _OWORD v96[3];

  v5 = (_OWORD *)a1;
  v6 = *(_QWORD *)(a1 + 80);
  sub_2412C84FC(v6);
  v7 = *(void (**)(uint64_t, uint64_t))(a3 + 208);
  swift_unknownObjectRetain();
  v7(a2, a3);
  swift_unknownObjectRelease();
  swift_retain();
  swift_release();
  *(_QWORD *)v75 = sub_24144C2F0();
  *(_QWORD *)&v75[8] = v8;
  v47 = _s21FullScreenArtworkViewVMa(0, a2, a3, v9);
  MEMORY[0x242695AE8](&unk_2414C8490, v47);
  sub_2412FBF34((uint64_t)v75, v47, (uint64_t)v94);
  swift_release();
  sub_24144C340((uint64_t)v75);
  v10 = *(_QWORD *)&v75[16];
  v11 = v76[0];
  *(_OWORD *)v68 = *(_OWORD *)v75;
  *(_QWORD *)&v68[16] = *(_QWORD *)&v75[16];
  v69[0] = v76[0];
  v46 = _s33DefaultMetadataAndContextMenuViewVMa(0, a2, a3, v12);
  MEMORY[0x242695AE8](&unk_2414C8440, v46);
  sub_2412FBF34((uint64_t)v68, v46, (uint64_t)&v91);
  swift_unknownObjectRelease();
  sub_2412C821C(v10, v11);
  sub_2412C84FC(v6);
  swift_unknownObjectRetain();
  v7(a2, a3);
  swift_unknownObjectRelease();
  swift_retain();
  swift_release();
  sub_241434644((uint64_t)v75);
  v13 = *(_QWORD *)&v75[16];
  v14 = v76[0];
  *(_OWORD *)v68 = *(_OWORD *)v75;
  *(_QWORD *)&v68[16] = *(_QWORD *)&v75[16];
  v69[0] = v76[0];
  *(_OWORD *)&v69[8] = *(_OWORD *)&v76[8];
  v45 = _s10BannerViewVMa(0, a2, a3, v15);
  MEMORY[0x242695AE8](&unk_2414C6F68, v45);
  sub_2412FBF34((uint64_t)v68, v45, (uint64_t)&v87);
  swift_release();
  sub_2412C821C(v13, v14);
  swift_unknownObjectRelease();
  CGSizeMake(a2, a3);
  sub_2414B3E5C();
  v16 = v5[3];
  v95[2] = v5[2];
  v96[0] = v16;
  *(_OWORD *)((char *)v96 + 10) = *(_OWORD *)((char *)v5 + 58);
  v17 = v5[1];
  v95[0] = *v5;
  v95[1] = v17;
  sub_2412FD220((uint64_t)v95, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
  sub_2412FD278((uint64_t)v75);
  sub_2412FD220((uint64_t)v95, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
  *(_OWORD *)v68 = *(_OWORD *)v75;
  v68[16] = v75[16];
  *(_WORD *)&v68[17] = *(_WORD *)&v75[17];
  *(_QWORD *)v69 = *(_QWORD *)v76;
  v69[8] = v76[8];
  *(_OWORD *)&v69[16] = *(_OWORD *)&v76[16];
  v70 = v77;
  LOBYTE(v71) = v78;
  sub_24143F99C();
  v19 = _s15TimeControlViewVMa(0, a2, a3, v18);
  v20 = MEMORY[0x242695AE8](&unk_2414C7B98, v19);
  sub_2414B4528();
  v75[0] = v68[0];
  *(_OWORD *)&v75[8] = *(_OWORD *)&v68[8];
  *(_OWORD *)v76 = *(_OWORD *)v69;
  v76[16] = v69[16];
  v44 = sub_2414B3514();
  v82[0] = v20;
  v82[1] = MEMORY[0x24BDECC60];
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v44, v82);
  sub_2412FBF34((uint64_t)v75, v44, (uint64_t)v83);
  sub_2413EABA8((uint64_t)v68);
  v40 = *(_QWORD *)&v68[8];
  v41 = *(_QWORD *)v68;
  v39 = *(_QWORD *)&v68[16];
  v21 = *(_QWORD *)v69;
  v22 = *(_OWORD *)&v69[8];
  v23 = *(_QWORD *)&v69[24];
  v24 = v70;
  LOBYTE(v10) = v71;
  LOBYTE(v20) = HIBYTE(v71);
  v58 = *(_OWORD *)v68;
  v59 = *(_QWORD *)&v68[16];
  v60 = *(_QWORD *)v69;
  v61 = *(_OWORD *)&v69[8];
  v62 = *(_QWORD *)&v69[24];
  v63 = v70;
  v64 = v71;
  v65 = v72;
  v66 = v73;
  v67 = v74;
  v43 = _s12ControlsViewVMa(0, a2, a3, v25);
  MEMORY[0x242695AE8](&unk_2414C4138, v43);
  sub_2412FBF34((uint64_t)&v58, v43, (uint64_t)v75);
  sub_2412C823C(v41, v40, v39, v21, v22, *((uint64_t *)&v22 + 1), v23, v24, *((uint64_t *)&v24 + 1), v10, v20);
  swift_unknownObjectRelease();
  swift_release();
  v56[0] = v94[0];
  v56[1] = v94[1];
  v42 = v92;
  LOBYTE(v40) = v93;
  v53 = v91;
  v54 = v92;
  v55 = v93;
  v57[0] = (uint64_t)v56;
  v57[1] = (uint64_t)&v53;
  v38 = v88;
  v37 = v89;
  v58 = v87;
  v59 = v88;
  LOBYTE(v60) = v89;
  v61 = v90;
  v49 = v83[0];
  v50 = v84;
  v51 = v85;
  v52 = v86;
  v57[2] = (uint64_t)&v58;
  v57[3] = (uint64_t)&v49;
  v26 = *(_OWORD *)v75;
  v27 = *(_QWORD *)&v75[16];
  v28 = *(_QWORD *)v76;
  v29 = *(_OWORD *)&v76[8];
  v30 = *(_QWORD *)&v76[24];
  v31 = v77;
  LOBYTE(v23) = v78;
  LOBYTE(v5) = HIBYTE(v78);
  *(_OWORD *)v68 = *(_OWORD *)v75;
  *(_QWORD *)&v68[16] = *(_QWORD *)&v75[16];
  *(_QWORD *)v69 = *(_QWORD *)v76;
  *(_OWORD *)&v69[8] = *(_OWORD *)&v76[8];
  *(_QWORD *)&v69[24] = *(_QWORD *)&v76[24];
  v70 = v77;
  v71 = v78;
  v72 = v79;
  v73 = v80;
  v74 = v81;
  v57[4] = (uint64_t)v68;
  swift_unknownObjectRetain();
  swift_retain();
  sub_2412C7080(v42, v40);
  swift_retain();
  sub_2412C7080(v38, v37);
  swift_unknownObjectRetain();
  sub_2412C6F48(v26, *((uint64_t *)&v26 + 1), v27, v28, v29, *((uint64_t *)&v29 + 1), v30, v31, *((uint64_t *)&v31 + 1), v23, (char)v5);
  swift_retain();
  swift_unknownObjectRetain();
  v48[0] = v47;
  v48[1] = v46;
  v48[2] = v45;
  v48[3] = v44;
  v48[4] = v43;
  sub_2412F68CC(v57, 5uLL, (uint64_t)v48);
  sub_2412C823C(*(uint64_t *)v75, *(uint64_t *)&v75[8], *(uint64_t *)&v75[16], *(uint64_t *)v76, *(uint64_t *)&v76[8], *(uint64_t *)&v76[16], *(uint64_t *)&v76[24], v77, *((uint64_t *)&v77 + 1), v78, SHIBYTE(v78));
  swift_unknownObjectRelease();
  swift_release();
  v32 = v88;
  LOBYTE(v10) = v89;
  swift_release();
  sub_2412C821C(v32, v10);
  swift_unknownObjectRelease();
  v33 = v92;
  LOBYTE(v10) = v93;
  swift_unknownObjectRelease();
  sub_2412C821C(v33, v10);
  swift_release();
  sub_2412C823C(*(uint64_t *)v68, *(uint64_t *)&v68[8], *(uint64_t *)&v68[16], *(uint64_t *)v69, *(uint64_t *)&v69[8], *(uint64_t *)&v69[16], *(uint64_t *)&v69[24], v70, *((uint64_t *)&v70 + 1), v71, SHIBYTE(v71));
  swift_unknownObjectRelease();
  swift_release();
  v34 = v59;
  LOBYTE(v10) = v60;
  swift_release();
  sub_2412C821C(v34, v10);
  swift_unknownObjectRelease();
  v35 = v54;
  LOBYTE(v10) = v55;
  swift_unknownObjectRelease();
  sub_2412C821C(v35, v10);
  return swift_release();
}

double sub_2414193A4@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  double v4;

  DeviceMetrics.padding.getter((uint64_t)&v3);
  result = v4;
  *(_OWORD *)a1 = v3;
  *(double *)(a1 + 16) = result;
  return result;
}

uint64_t sub_241419428(uint64_t a1)
{
  return sub_24132196C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t sub_24141943C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_241321D28(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t sub_241419498(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_241321D28(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_24132196C(v7, v8, v9, v10);
  return a1;
}

uint64_t sub_241419504(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_24132196C(v5, v7, v6, v8);
  return a1;
}

uint64_t _s37FullScreenContentView_RegularExtendedVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s37FullScreenContentView_RegularExtendedVMn);
}

uint64_t sub_24141955C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t _s11ContentViewVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s11ContentViewVMn);
}

uint64_t sub_24141959C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2414179A4(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a1, a2);
}

uint64_t sub_2414195A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 72);
  v7 = *(_QWORD *)(a1 + 80);
  v8 = *(_BYTE *)(a1 + 88);
  v9 = *(_BYTE *)(a1 + 89);
  v10 = *(_QWORD *)(a1 + 96);
  v13 = *(_QWORD *)(a1 + 104);
  v14 = *(_QWORD *)(a1 + 32);
  v12 = *(_BYTE *)(a1 + 112);
  swift_unknownObjectRelease();
  sub_2412C823C(v16, v15, v14, v2, v3, v4, v5, v6, v7, v8, v9);
  sub_2412C822C(v10, v13, v12);
  swift_release();
  return a1;
}

uint64_t sub_241419674(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 72);
  v7 = *(_QWORD *)(a1 + 80);
  v8 = *(_BYTE *)(a1 + 88);
  v9 = *(_BYTE *)(a1 + 89);
  v10 = *(_QWORD *)(a1 + 96);
  v13 = *(_QWORD *)(a1 + 104);
  v14 = *(_QWORD *)(a1 + 32);
  v12 = *(_BYTE *)(a1 + 112);
  swift_unknownObjectRetain();
  sub_2412C6F48(v16, v15, v14, v2, v3, v4, v5, v6, v7, v8, v9);
  sub_2412C72E4(v10, v13, v12);
  swift_retain();
  return a1;
}

unint64_t sub_24141975C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25437E490;
  if (!qword_25437E490)
  {
    v1 = type metadata accessor for WindowProperties();
    result = MEMORY[0x242695AE8](&unk_2414BE240, v1);
    atomic_store(result, (unint64_t *)&qword_25437E490);
  }
  return result;
}

uint64_t sub_2414197A4(uint64_t a1)
{
  swift_unknownObjectRelease();
  sub_2412C823C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88), *(_BYTE *)(a1 + 89));
  sub_2412C822C(*(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_BYTE *)(a1 + 112));
  return swift_release();
}

uint64_t sub_24141980C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  v18 = *(_QWORD *)(a2 + 24);
  v19 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 80);
  v17 = *(_QWORD *)(a2 + 72);
  v11 = *(_BYTE *)(a2 + 88);
  v12 = *(_BYTE *)(a2 + 89);
  swift_unknownObjectRetain();
  sub_2412C6F48(v19, v18, v5, v6, v7, v8, v9, v17, v10, v11, v12);
  *(_QWORD *)(a1 + 16) = v19;
  *(_QWORD *)(a1 + 24) = v18;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v17;
  *(_QWORD *)(a1 + 80) = v10;
  *(_BYTE *)(a1 + 88) = v11;
  *(_BYTE *)(a1 + 89) = v12;
  v13 = *(_QWORD *)(a2 + 96);
  v14 = *(_QWORD *)(a2 + 104);
  LOBYTE(v10) = *(_BYTE *)(a2 + 112);
  sub_2412C72E4(v13, v14, v10);
  *(_QWORD *)(a1 + 96) = v13;
  *(_QWORD *)(a1 + 104) = v14;
  *(_BYTE *)(a1 + 112) = v10;
  v15 = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = v15;
  swift_retain();
  return a1;
}

uint64_t sub_241419920(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v30;
  char v31;
  char v32;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 72);
  v30 = *(_QWORD *)(a2 + 80);
  v31 = *(_BYTE *)(a2 + 88);
  v32 = *(_BYTE *)(a2 + 89);
  sub_2412C6F48(v4, v5, v6, v7, v8, v9, v10, v11, v30, v31, v32);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 48);
  v17 = *(_QWORD *)(a1 + 56);
  v18 = *(_QWORD *)(a1 + 64);
  v19 = *(_QWORD *)(a1 + 72);
  v20 = *(_QWORD *)(a1 + 80);
  v21 = *(_BYTE *)(a1 + 88);
  v22 = *(_BYTE *)(a1 + 89);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v30;
  *(_BYTE *)(a1 + 88) = v31;
  *(_BYTE *)(a1 + 89) = v32;
  sub_2412C823C(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  v23 = *(_QWORD *)(a2 + 96);
  v24 = *(_QWORD *)(a2 + 104);
  LOBYTE(v6) = *(_BYTE *)(a2 + 112);
  sub_2412C72E4(v23, v24, v6);
  v25 = *(_QWORD *)(a1 + 96);
  v26 = *(_QWORD *)(a1 + 104);
  v27 = *(_BYTE *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v23;
  *(_QWORD *)(a1 + 104) = v24;
  *(_BYTE *)(a1 + 112) = v6;
  sub_2412C822C(v25, v26, v27);
  v28 = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = v28;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy129_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t sub_241419AB4(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRelease();
  v4 = *(_BYTE *)(a2 + 88);
  v5 = *(_BYTE *)(a2 + 89);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_QWORD *)(a1 + 64);
  v13 = *(_QWORD *)(a1 + 72);
  v14 = *(_QWORD *)(a1 + 80);
  v15 = *(_BYTE *)(a1 + 88);
  v16 = *(_BYTE *)(a1 + 89);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = v4;
  *(_BYTE *)(a1 + 89) = v5;
  sub_2412C823C(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16);
  v17 = *(_BYTE *)(a2 + 112);
  v18 = *(_QWORD *)(a1 + 96);
  v19 = *(_QWORD *)(a1 + 104);
  v20 = *(_BYTE *)(a1 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 112) = v17;
  sub_2412C822C(v18, v19, v20);
  v21 = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = v21;
  swift_release();
  return a1;
}

uint64_t sub_241419B88(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 129))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_241419BE4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 128) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 129) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 129) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_241419C5C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  _QWORD v16[2];

  v4 = *a1;
  v5 = a1[1];
  _s11ContentViewVMa(255, *a1, v5, a4);
  sub_2414B3514();
  _s13FooterButtonsVMa(255, v4, v5, v6);
  swift_getTupleTypeMetadata2();
  v7 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v7);
  v8 = sub_2414B4894();
  v9 = sub_2414B3514();
  v10 = sub_2414B3514();
  v11 = MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v8);
  v12 = MEMORY[0x24BDECC60];
  v16[0] = v11;
  v16[1] = MEMORY[0x24BDECC60];
  v13 = MEMORY[0x24BDED308];
  v15[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v9, v16);
  v15[1] = v12;
  return MEMORY[0x242695AE8](v13, v10, v15);
}

uint64_t sub_241419D80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t _s18DefaultContentViewVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s18DefaultContentViewVMn);
}

uint64_t sub_241419DC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_24141817C(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_241419DCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2571228F8;
  if (!qword_2571228F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_257122900);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDEFB48], v1);
    atomic_store(result, (unint64_t *)&qword_2571228F8);
  }
  return result;
}

uint64_t sub_241419E20(uint64_t a1)
{
  sub_2412C823C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_BYTE *)(a1 + 72), *(_BYTE *)(a1 + 73));
  return swift_unknownObjectRelease();
}

uint64_t sub_241419E74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  char v16;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v14 = *(_QWORD *)(a2 + 64);
  v15 = *(_BYTE *)(a2 + 72);
  v16 = *(_BYTE *)(a2 + 73);
  sub_2412C6F48(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v14, v15, v16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v14;
  *(_BYTE *)(a1 + 72) = v15;
  *(_BYTE *)(a1 + 73) = v16;
  v12 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v12;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_241419F48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v24;
  char v25;
  char v26;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v24 = *(_QWORD *)(a2 + 64);
  v25 = *(_BYTE *)(a2 + 72);
  v26 = *(_BYTE *)(a2 + 73);
  sub_2412C6F48(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v24, v25, v26);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_QWORD *)(a1 + 64);
  v21 = *(_BYTE *)(a1 + 72);
  v22 = *(_BYTE *)(a1 + 73);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v24;
  *(_BYTE *)(a1 + 72) = v25;
  *(_BYTE *)(a1 + 73) = v26;
  sub_2412C823C(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  return a1;
}

uint64_t sub_24141A05C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  __int128 v18;
  __int128 v19;

  v4 = *(_QWORD *)(a2 + 64);
  v5 = *(_BYTE *)(a2 + 72);
  v6 = *(_BYTE *)(a2 + 73);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 48);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *(_QWORD *)(a1 + 64);
  v16 = *(_BYTE *)(a1 + 72);
  v17 = *(_BYTE *)(a1 + 73);
  v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  *(_QWORD *)(a1 + 64) = v4;
  *(_BYTE *)(a1 + 72) = v5;
  *(_BYTE *)(a1 + 73) = v6;
  sub_2412C823C(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  return a1;
}

void sub_24141A0F4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  _s18DefaultContentViewVMa(255, *a1, a1[1], a4);
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_257122900);
  sub_2414B3514();
  sub_2414B53B0();
  swift_getTupleTypeMetadata2();
  v4 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v4);
  sub_2414B4804();
  JUMPOUT(0x242695AE8);
}

uint64_t sub_24141A1CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24141A200()
{
  uint64_t *v0;

  return sub_241418B7C(v0[4], v0[2], v0[3]);
}

uint64_t sub_24141A20C(uint64_t a1)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_BYTE *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 88);
  v5 = *(_BYTE *)(a1 + 96);
  v16 = *(_QWORD *)(a1 + 176);
  v17 = *(_QWORD *)(a1 + 168);
  v14 = *(_QWORD *)(a1 + 192);
  v15 = *(_QWORD *)(a1 + 184);
  v12 = *(_QWORD *)(a1 + 208);
  v13 = *(_QWORD *)(a1 + 200);
  v6 = *(_QWORD *)(a1 + 232);
  v10 = *(_QWORD *)(a1 + 224);
  v11 = *(_QWORD *)(a1 + 216);
  v7 = *(_BYTE *)(a1 + 240);
  v8 = *(_BYTE *)(a1 + 241);
  swift_release();
  swift_unknownObjectRelease();
  sub_2412C821C(v2, v3);
  swift_release();
  sub_2412C821C(v4, v5);
  swift_unknownObjectRelease();
  sub_2412C823C(v17, v16, v15, v14, v13, v12, v11, v10, v6, v7, v8);
  swift_unknownObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_24141A320(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[7];

  v4 = *a1;
  v5 = a1[1];
  v14[2] = _s21FullScreenArtworkViewVMa(255, *a1, v5, a4);
  v14[3] = _s33DefaultMetadataAndContextMenuViewVMa(255, v4, v5, v6);
  v14[4] = _s10BannerViewVMa(255, v4, v5, v7);
  _s15TimeControlViewVMa(255, v4, v5, v8);
  v14[5] = sub_2414B3514();
  v14[6] = _s12ControlsViewVMa(255, v4, v5, v9);
  swift_getTupleTypeMetadata();
  v10 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v10);
  v11 = sub_2414B4894();
  v12 = sub_2414B3514();
  v14[0] = MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v11);
  v14[1] = MEMORY[0x24BDEBEE0];
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v12, v14);
}

uint64_t sub_24141A450()
{
  uint64_t v1;

  sub_2413173D4();
  sub_2414B3838();
  return v1;
}

uint64_t sub_24141A488()
{
  id v0;
  uint64_t result;

  v0 = MTLCreateSystemDefaultDevice();
  type metadata accessor for MetalRenderContext();
  swift_allocObject();
  result = sub_24141A4CC(v0);
  qword_2571370F8 = result;
  return result;
}

uint64_t sub_24141A4CC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  uint64_t v5;
  id v6;
  CVMetalTextureCacheRef v7;
  const __CFAllocator *v8;
  __CVMetalTextureCache *v9;
  CVReturn v10;
  CVMetalTextureCacheRef v11;
  id v12;
  __CVMetalTextureCache *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  __CVMetalTextureCache *v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _QWORD *v31;
  id v32;
  __CVMetalTextureCache *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  NSObject *log;
  CVMetalTextureCacheRef cacheOut[2];

  v2 = v1;
  cacheOut[1] = *(CVMetalTextureCacheRef *)MEMORY[0x24BDAC8D0];
  if (!a1)
  {
    if (qword_2571209B0 != -1)
      swift_once();
    v15 = sub_2414B2CA4();
    __swift_project_value_buffer(v15, (uint64_t)qword_257137100);
    v16 = sub_2414B2C8C();
    v17 = sub_2414B51A0();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_2412C1000, v16, v17, "Couldn't init MetalRenderContext, device was nil", v18, 2u);
      MEMORY[0x242695BD8](v18, -1, -1);
    }

    goto LABEL_32;
  }
  *(_QWORD *)(v1 + 16) = a1;
  v4 = objc_msgSend((id)swift_unknownObjectRetain_n(), sel_newCommandQueue);
  if (!v4)
  {
    if (qword_2571209B0 != -1)
      swift_once();
    v19 = sub_2414B2CA4();
    __swift_project_value_buffer(v19, (uint64_t)qword_257137100);
    v20 = sub_2414B2C8C();
    v21 = sub_2414B51A0();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_2412C1000, v20, v21, "Couldn't create command queue", v22, 2u);
      MEMORY[0x242695BD8](v22, -1, -1);
    }

    swift_unknownObjectRelease_n();
    goto LABEL_31;
  }
  *(_QWORD *)(v1 + 24) = v4;
  v5 = qword_2543846C8;
  swift_unknownObjectRetain();
  if (v5 != -1)
    swift_once();
  cacheOut[0] = 0;
  v6 = objc_msgSend(a1, sel_newDefaultLibraryWithBundle_error_, qword_25438E910, cacheOut);
  v7 = cacheOut[0];
  if (!v6)
  {
    v23 = cacheOut[0];
    v24 = (void *)sub_2414B29D4();

    swift_willThrow();
    if (qword_2571209B0 != -1)
      swift_once();
    v25 = sub_2414B2CA4();
    __swift_project_value_buffer(v25, (uint64_t)qword_257137100);
    v26 = v24;
    v27 = v24;
    v28 = sub_2414B2C8C();
    v29 = sub_2414B51A0();
    if (os_log_type_enabled(v28, v29))
    {
      log = v28;
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v30 = 138543362;
      v32 = v24;
      v33 = (__CVMetalTextureCache *)_swift_stdlib_bridgeErrorToNSError();
      cacheOut[0] = v33;
      sub_2414B541C();
      *v31 = v33;

      _os_log_impl(&dword_2412C1000, log, v29, "Couldn't create default library: %{public}@", v30, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25712B570);
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v31, -1, -1);
      MEMORY[0x242695BD8](v30, -1, -1);

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();

    }
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_31;
  }
  *(_QWORD *)(v2 + 32) = v6;
  cacheOut[0] = 0;
  v8 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  v9 = v7;
  v10 = CVMetalTextureCacheCreate(v8, 0, a1, 0, cacheOut);
  v11 = cacheOut[0];
  if (!cacheOut[0] || v10)
  {
    if (qword_2571209B0 != -1)
      swift_once();
    v34 = sub_2414B2CA4();
    __swift_project_value_buffer(v34, (uint64_t)qword_257137100);
    v35 = sub_2414B2C8C();
    v36 = sub_2414B51A0();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v37 = 67109120;
      sub_2414B541C();
      _os_log_impl(&dword_2412C1000, v35, v36, "Couldn't create CVMetalTextureCache: %d", v37, 8u);
      MEMORY[0x242695BD8](v37, -1, -1);
      swift_unknownObjectRelease();

    }
    else
    {

      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease_n();

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
LABEL_31:
    swift_unknownObjectRelease();
LABEL_32:
    type metadata accessor for MetalRenderContext();
    swift_deallocPartialClassInstance();
    return 0;
  }
  *(CVMetalTextureCacheRef *)(v2 + 56) = cacheOut[0];
  v12 = objc_allocWithZone(MEMORY[0x24BDDDB48]);
  v13 = v11;
  *(_QWORD *)(v2 + 40) = objc_msgSend(v12, sel_initWithDevice_, a1);
  v14 = sub_24141AAE0();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease_n();
  *(_QWORD *)(v2 + 48) = v14;

  return v2;
}

uint64_t sub_24141AAE0()
{
  void *v0;
  void *v1;
  int v2;

  if (objc_msgSend(v0, sel_supportsFamily_, 1003)
    && (v1 = (void *)sub_2414B4D44(), v2 = MGGetBoolAnswer(), v1, v2)
    && MGGetProductType() != 33245053)
  {
    return 552;
  }
  else
  {
    return 80;
  }
}

uint64_t sub_24141AB60()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MetalRenderContext()
{
  return objc_opt_self();
}

uint64_t sub_24141ABC4()
{
  if (qword_2571209A0 != -1)
    swift_once();
  qword_257128330 = qword_2571370F8;
  return swift_retain();
}

uint64_t sub_24141AC0C@<X0>(_QWORD *a1@<X8>)
{
  if (qword_2571209A8 != -1)
    swift_once();
  *a1 = qword_257128330;
  return swift_retain();
}

uint64_t sub_24141AC5C()
{
  uint64_t v0;

  v0 = sub_2414B2CA4();
  __swift_allocate_value_buffer(v0, qword_257137100);
  __swift_project_value_buffer(v0, (uint64_t)qword_257137100);
  return sub_2414B2C98();
}

ValueMetadata *_s21MetalRenderContextKeyVMa()
{
  return &_s21MetalRenderContextKeyVN;
}

uint64_t sub_24141ACDC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *a1;
  v5 = a1[1];
  KeyPath = swift_getKeyPath();
  type metadata accessor for Geometry();
  sub_2412C8030(&qword_2543806C8, (uint64_t (*)(uint64_t))type metadata accessor for Geometry, (uint64_t)&unk_2414C61A8);
  swift_bridgeObjectRetain();
  v10 = KeyPath;
  v11 = 0;
  v12 = sub_2414B3658();
  v13 = v8;
  v14 = v6;
  v15 = v5;
  MEMORY[0x242693DC0](&v10, a2, &type metadata for PublishGeometryModifier, a3);
  sub_2412C821C(KeyPath, 0);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_24141ADC8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;

  sub_2412C85DC();
  result = sub_2414B3838();
  if ((v4 & 1) != 0)
    __break(1u);
  else
    *a1 = v3;
  return result;
}

uint64_t sub_24141AE20()
{
  sub_2412C85DC();
  return sub_2414B3844();
}

uint64_t NowPlayingGeometryIdentifier.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_2414B4DD4();
  return swift_bridgeObjectRelease();
}

uint64_t static NowPlayingGeometryIdentifier.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_2414B57D0();
}

uint64_t NowPlayingGeometryIdentifier.hashValue.getter()
{
  sub_2414B58CC();
  swift_bridgeObjectRetain();
  sub_2414B4DD4();
  swift_bridgeObjectRelease();
  return sub_2414B58FC();
}

uint64_t sub_24141AF38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)();
  __int128 v22;
  uint64_t (**v23)();
  _OWORD *v24;
  __int128 v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;

  v30 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571284A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571284A8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v2[1];
  v31 = *v2;
  v32 = v10;
  v33 = v2[2];
  v34 = v33;
  v11 = v33;
  v12 = v31;
  v13 = BYTE8(v31);
  sub_2412EAEE8((uint64_t)&v34);
  sub_2412C7080(v12, v13);
  v14 = sub_2412F0F50(v12, v13);
  sub_2412C821C(v12, v13);
  LODWORD(v12) = sub_2414B3CA0();
  sub_2414B4B64();
  v16 = v15;
  v18 = v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571284B0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v6, a1, v19);
  v20 = &v6[*(int *)(v4 + 36)];
  *(_OWORD *)v20 = v11;
  *((_QWORD *)v20 + 2) = v14;
  *((_DWORD *)v20 + 6) = v12;
  *((_QWORD *)v20 + 4) = v16;
  *((_QWORD *)v20 + 5) = v18;
  v20[48] = 1;
  v21 = (uint64_t (*)())swift_allocObject();
  v22 = v32;
  *((_OWORD *)v21 + 1) = v31;
  *((_OWORD *)v21 + 2) = v22;
  *((_OWORD *)v21 + 3) = v33;
  sub_2412DC3FC((uint64_t)v6, (uint64_t)v9, &qword_2571284A0);
  v23 = (uint64_t (**)())&v9[*(int *)(v7 + 36)];
  *v23 = sub_24141BEBC;
  v23[1] = v21;
  v23[2] = 0;
  v23[3] = 0;
  sub_24141BEC4((uint64_t)&v31);
  sub_2412CBE78((uint64_t)v6, &qword_2571284A0);
  v24 = (_OWORD *)swift_allocObject();
  v25 = v32;
  v24[1] = v31;
  v24[2] = v25;
  v24[3] = v33;
  v26 = v30;
  sub_2412DC3FC((uint64_t)v9, v30, &qword_2571284A8);
  v27 = (_QWORD *)(v26 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2571284B8) + 36));
  *v27 = 0;
  v27[1] = 0;
  v27[2] = sub_24141BF14;
  v27[3] = v24;
  sub_24141BEC4((uint64_t)&v31);
  return sub_2412CBE78((uint64_t)v9, &qword_2571284A8);
}

uint64_t sub_24141B18C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t *, _QWORD);
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  if (a1[2])
  {
    v1 = a1[4];
    v2 = a1[5];
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    swift_bridgeObjectRetain();
    v3 = (void (*)(uint64_t *, _QWORD))sub_2414B2E30();
    sub_24141DE14(&v6, v1, v2);
    swift_bridgeObjectRelease();
    v3(&v5, 0);
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    type metadata accessor for Geometry();
    sub_2412C8030(&qword_2543806C8, (uint64_t (*)(uint64_t))type metadata accessor for Geometry, (uint64_t)&unk_2414C61A8);
    result = sub_2414B364C();
    __break(1u);
  }
  return result;
}

uint64_t sub_24141B298(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t *, _QWORD);
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  if (a1[2])
  {
    v1 = a1[4];
    v2 = a1[5];
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    swift_bridgeObjectRetain();
    v3 = (void (*)(uint64_t *, _QWORD))sub_2414B2E30();
    sub_241420C68(v1, v2, &v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3(&v5, 0);
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    type metadata accessor for Geometry();
    sub_2412C8030(&qword_2543806C8, (uint64_t (*)(uint64_t))type metadata accessor for Geometry, (uint64_t)&unk_2414C61A8);
    result = sub_2414B364C();
    __break(1u);
  }
  return result;
}

uint64_t sub_24141B3B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;

  if (*(_QWORD *)(v2 + 16))
  {
    v5 = *(_QWORD *)v2;
    v6 = *(_BYTE *)(v2 + 8);
    v8 = *(_QWORD *)(v2 + 32);
    v7 = *(_QWORD *)(v2 + 40);
    v9 = *(_DWORD *)(v2 + 48);
    v10 = *(_QWORD *)(v2 + 56);
    v11 = *(_QWORD *)(v2 + 64);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_2414B2E3C();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRetain();
    v12 = sub_24147330C(v8, v7, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) != 0)
    {
      swift_bridgeObjectRetain();
      sub_2412C7080(v5, v6);
      v13 = sub_2412F0F50(v5, v6);
      sub_2412C821C(v5, v6);
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571284D0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a2, a1, v14);
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571284C8);
      v16 = a2 + *(int *)(v15 + 36);
      *(_QWORD *)v16 = v8;
      *(_QWORD *)(v16 + 8) = v7;
      *(_QWORD *)(v16 + 16) = v13;
      *(_DWORD *)(v16 + 24) = v9;
      *(_QWORD *)(v16 + 32) = v10;
      *(_QWORD *)(v16 + 40) = v11;
      *(_BYTE *)(v16 + 48) = 0;
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a2, 0, 1, v15);
    }
    else
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571284C8);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a2, 1, 1, v18);
    }
  }
  else
  {
    type metadata accessor for Geometry();
    sub_2412C8030(&qword_2543806C8, (uint64_t (*)(uint64_t))type metadata accessor for Geometry, (uint64_t)&unk_2414C61A8);
    result = sub_2414B364C();
    __break(1u);
  }
  return result;
}

uint64_t MCUINamespace<A>.matchToNowPlayingView(_:properties:anchor:)(uint64_t *a1, int a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  double v23;
  double v24;

  v12 = *a1;
  v11 = a1[1];
  KeyPath = swift_getKeyPath();
  type metadata accessor for Geometry();
  sub_2412C8030(&qword_2543806C8, (uint64_t (*)(uint64_t))type metadata accessor for Geometry, (uint64_t)&unk_2414C61A8);
  swift_bridgeObjectRetain();
  v16 = KeyPath;
  v17 = 0;
  v18 = sub_2414B3658();
  v19 = v14;
  v20 = v12;
  v21 = v11;
  v22 = a2;
  v23 = a5;
  v24 = a6;
  MEMORY[0x242693DC0](&v16, *(_QWORD *)(a3 + 16), &type metadata for MatchGeometryModifier, a4);
  sub_2412C821C(KeyPath, 0);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_24141B6B8()
{
  sub_2412C85DC();
  return sub_2414B3844();
}

uint64_t MCUINamespace<A>.matchToNowPlayingButton(_:properties:anchor:)(double a1, double a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12[2];

  swift_bridgeObjectRetain();
  sub_2414B5578();
  swift_bridgeObjectRelease();
  v12[0] = 0xD000000000000011;
  v12[1] = 0x80000002414D2060;
  swift_bridgeObjectRetain();
  sub_2414B4DF8();
  swift_bridgeObjectRelease_n();
  MCUINamespace<A>.matchToNowPlayingView(_:properties:anchor:)(v12, a4, a5, a6, a1, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24141B7F8()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_24141B868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI8Geometry__visibleViews;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571284E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_24141B8BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for Geometry();
  result = sub_2414B2DA0();
  *a1 = result;
  return result;
}

uint64_t View.matchToNowPlayingView(_:properties:anchor:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  return sub_24141B910(a1, a2, a3, a4, (void (*)(_QWORD *, uint64_t, uint64_t, uint64_t, double, double))MCUINamespace<A>.matchToNowPlayingView(_:properties:anchor:), a5, a6);
}

uint64_t View.matchToNowPlayingButton(_:properties:anchor:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  return sub_24141B910(a1, a2, a3, a4, (void (*)(_QWORD *, uint64_t, uint64_t, uint64_t, double, double))MCUINamespace<A>.matchToNowPlayingButton(_:properties:anchor:), a5, a6);
}

uint64_t sub_24141B910(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD *, uint64_t, uint64_t, uint64_t, double, double), double a6, double a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  void (*v21)(_QWORD *, uint64_t, uint64_t, uint64_t, double, double);
  _QWORD v22[2];

  v21 = a5;
  v13 = type metadata accessor for MCUINamespace(0, a3, a3, a4);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v20 - v15;
  v17 = *a1;
  v18 = a1[1];
  View.mcui.getter(a3, (uint64_t)&v20 - v15);
  v22[0] = v17;
  v22[1] = v18;
  v21(v22, a2, v13, a4, a6, a7);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_24141BA00()
{
  return type metadata accessor for Geometry();
}

uint64_t sub_24141BA08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_2414B3514();
  v4[0] = v1;
  v4[1] = sub_24141BA5C();
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_24141BA5C()
{
  unint64_t result;

  result = qword_257128498;
  if (!qword_257128498)
  {
    result = MEMORY[0x242695AE8](&unk_2414C6158, &type metadata for MatchGeometryModifier);
    atomic_store(result, (unint64_t *)&qword_257128498);
  }
  return result;
}

uint64_t initializeWithCopy for MatchGeometryModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_2412C7080(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MatchGeometryModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_2412C7080(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_2412C821C(v6, v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for MatchGeometryModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_2412C821C(v6, v7);
  *(_QWORD *)(a1 + 16) = a2[2];
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  *(_QWORD *)(a1 + 40) = a2[5];
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
  return a1;
}

uint64_t getEnumTagSinglePayload for MatchGeometryModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MatchGeometryModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MatchGeometryModifier()
{
  return &type metadata for MatchGeometryModifier;
}

uint64_t _s11MediaCoreUI21MatchGeometryModifierVwxx_0(uint64_t a1)
{
  sub_2412C821C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PublishGeometryModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_2412C7080(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PublishGeometryModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_2412C7080(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_2412C821C(v6, v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PublishGeometryModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_2412C821C(v6, v7);
  *(_QWORD *)(a1 + 16) = a2[2];
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  *(_QWORD *)(a1 + 40) = a2[5];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PublishGeometryModifier()
{
  return &type metadata for PublishGeometryModifier;
}

uint64_t sub_24141BE98()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24141BEA8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24141BEBC()
{
  uint64_t v0;

  return sub_24141B18C((_QWORD *)(v0 + 16));
}

uint64_t sub_24141BEC4(uint64_t a1)
{
  sub_2412C7080(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24141BF14()
{
  uint64_t v0;

  return sub_24141B298((_QWORD *)(v0 + 16));
}

uint64_t sub_24141BF1C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_24141BF9C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_2414B2E48();
}

uint64_t sub_24141C018()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571284D8);
  v3 = sub_2414B5548();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v28 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_33;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_33;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_33;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v28;
                v27 = 1 << *(_BYTE *)(v2 + 32);
                if (v27 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
      result = sub_2414B5320();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_24141C2B4(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  unint64_t *v45;
  uint64_t v46;

  v45 = a4;
  v46 = a5;
  v7 = v5;
  v44 = a2;
  v8 = a2(0);
  v43 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v39 - v9;
  v11 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v12 = sub_2414B5548();
  v13 = v12;
  if (*(_QWORD *)(v11 + 16))
  {
    v14 = 1 << *(_BYTE *)(v11 + 32);
    v15 = *(_QWORD *)(v11 + 56);
    v42 = (_QWORD *)(v11 + 56);
    if (v14 < 64)
      v16 = ~(-1 << v14);
    else
      v16 = -1;
    v17 = v16 & v15;
    v40 = v5;
    v41 = (unint64_t)(v14 + 63) >> 6;
    v18 = v12 + 56;
    result = swift_retain();
    v20 = 0;
    while (1)
    {
      if (v17)
      {
        v22 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        v23 = v22 | (v20 << 6);
      }
      else
      {
        v24 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v24 >= v41)
          goto LABEL_33;
        v25 = v42[v24];
        ++v20;
        if (!v25)
        {
          v20 = v24 + 1;
          if (v24 + 1 >= v41)
            goto LABEL_33;
          v25 = v42[v20];
          if (!v25)
          {
            v20 = v24 + 2;
            if (v24 + 2 >= v41)
              goto LABEL_33;
            v25 = v42[v20];
            if (!v25)
            {
              v26 = v24 + 3;
              if (v26 >= v41)
              {
LABEL_33:
                swift_release();
                v7 = v40;
                v38 = 1 << *(_BYTE *)(v11 + 32);
                if (v38 > 63)
                  bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v42 = -1 << v38;
                *(_QWORD *)(v11 + 16) = 0;
                break;
              }
              v25 = v42[v26];
              if (!v25)
              {
                while (1)
                {
                  v20 = v26 + 1;
                  if (__OFADD__(v26, 1))
                    goto LABEL_39;
                  if (v20 >= v41)
                    goto LABEL_33;
                  v25 = v42[v20];
                  ++v26;
                  if (v25)
                    goto LABEL_23;
                }
              }
              v20 = v26;
            }
          }
        }
LABEL_23:
        v17 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v20 << 6);
      }
      v27 = v11;
      v28 = *(_QWORD *)(v11 + 48);
      v29 = *(_QWORD *)(v43 + 72);
      v30 = *(void (**)(char *, unint64_t, uint64_t))(v43 + 32);
      v30(v10, v28 + v29 * v23, v8);
      sub_2412C8030(v45, v44, v46);
      result = sub_2414B4C78();
      v31 = -1 << *(_BYTE *)(v13 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6))) != 0)
      {
        v21 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v18 + 8 * v33);
        }
        while (v37 == -1);
        v21 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v30)(*(_QWORD *)(v13 + 48) + v21 * v29, v10, v8);
      ++*(_QWORD *)(v13 + 16);
      v11 = v27;
    }
  }
  result = swift_release();
  *v7 = v13;
  return result;
}

uint64_t sub_24141C614()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257128500);
  v3 = sub_2414B5548();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_2414B58CC();
      sub_2414B4DD4();
      result = sub_2414B58FC();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_24141C8F0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  int64_t v28;
  _QWORD *v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571284F0);
  v3 = sub_2414B5548();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v27 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v29 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v28 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v13 = v12 | (v10 << 6);
      }
      else
      {
        v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v28)
          goto LABEL_33;
        v15 = v29[v14];
        ++v10;
        if (!v15)
        {
          v10 = v14 + 1;
          if (v14 + 1 >= v28)
            goto LABEL_33;
          v15 = v29[v10];
          if (!v15)
          {
            v10 = v14 + 2;
            if (v14 + 2 >= v28)
              goto LABEL_33;
            v15 = v29[v10];
            if (!v15)
            {
              v16 = v14 + 3;
              if (v16 >= v28)
              {
LABEL_33:
                swift_release();
                v1 = v27;
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero(v29, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v29 = -1 << v26;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v15 = v29[v16];
              if (!v15)
              {
                while (1)
                {
                  v10 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_39;
                  if (v10 >= v28)
                    goto LABEL_33;
                  v15 = v29[v10];
                  ++v16;
                  if (v15)
                    goto LABEL_23;
                }
              }
              v10 = v16;
            }
          }
        }
LABEL_23:
        v7 = (v15 - 1) & v15;
        v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v13);
      sub_2414B4D68();
      sub_2414B58CC();
      sub_2414B4DD4();
      v18 = sub_2414B58FC();
      result = swift_bridgeObjectRelease();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = v18 & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v8 + 8 * (v20 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v8 + 8 * v21);
        }
        while (v25 == -1);
        v11 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v11) = v17;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_24141CC00()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571284E8);
  result = sub_2414B5548();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v27 = v1;
    v5 = 0;
    v6 = (uint64_t *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    v26 = -1 << v7;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v28 = 1 << *(_BYTE *)(v2 + 32);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64)
                  bzero((void *)(v2 + 56), 8 * v10);
                else
                  *v6 = v26;
                v1 = v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      result = sub_2414B58C0();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_24141CE94()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571284C0);
  v3 = sub_2414B5548();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_2414B58CC();
      swift_bridgeObjectRetain();
      sub_2414B4DD4();
      swift_bridgeObjectRelease();
      result = sub_2414B58FC();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

unint64_t sub_24141D180(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_2414B5320();
  result = sub_2414B547C();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_24141D200(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_2414B2A88();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_2412C8030(&qword_257126EE0, v11, MEMORY[0x24BDCDAF0]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_2414B4C78();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_2412C8030(&qword_257121D40, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
      v21 = sub_2414B4CE4();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_24141E1B4((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_24141D45C(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_2414B2B30();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_2412C8030(&qword_257126EF0, v11, MEMORY[0x24BDCEA88]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_2414B4C78();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_2412C8030(&qword_257126EF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v21 = sub_2414B4CE4();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_24141E408((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_24141D6B8(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char isUniquelyReferenced_nonNull_native;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_2414B54D0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_241421558();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v26;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_2414B54C4();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_24141DFD0(v7, result + 1);
    v27 = v21;
    if (*(_QWORD *)(v21 + 24) <= *(_QWORD *)(v21 + 16))
    {
      v25 = v8;
      sub_24141C018();
      v22 = v27;
    }
    else
    {
      v22 = v21;
      v23 = v8;
    }
    sub_24141D180((uint64_t)v8, v22);
    *v3 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_2414B5320();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_241421558();
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_2414B532C();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_2414B532C();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_24141E65C((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_24141D934(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_2414B58CC();
  swift_bridgeObjectRetain();
  sub_2414B4DD4();
  v8 = sub_2414B58FC();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_2414B57D0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_2414B57D0() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_24141E7D0(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_24141DAE0(_QWORD *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  char isUniquelyReferenced_nonNull_native;
  id v24;
  void *v26;
  id v27;
  uint64_t v28;

  v3 = v2;
  v6 = *v2;
  sub_2414B4D68();
  sub_2414B58CC();
  swift_bridgeObjectRetain();
  sub_2414B4DD4();
  v7 = sub_2414B58FC();
  swift_bridgeObjectRelease();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = *v3;
    *v3 = 0x8000000000000000;
    v24 = a2;
    sub_24141E968((uint64_t)v24, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v28;
    swift_bridgeObjectRelease();
    *a1 = v24;
    return 1;
  }
  v10 = sub_2414B4D68();
  v12 = v11;
  if (v10 == sub_2414B4D68() && v12 == v13)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v15 = sub_2414B57D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      v16 = ~v8;
      do
      {
        v9 = (v9 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
          goto LABEL_15;
        v17 = sub_2414B4D68();
        v19 = v18;
        if (v17 == sub_2414B4D68() && v19 == v20)
          goto LABEL_16;
        v22 = sub_2414B57D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v22 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  v26 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v9);
  *a1 = v26;
  v27 = v26;
  return 0;
}

uint64_t sub_24141DD08(double *a1, double a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t result;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;

  v3 = v2;
  v6 = *v2;
  v7 = sub_2414B58C0();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_8:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v3;
    *v3 = 0x8000000000000000;
    sub_24141EB94(v9, isUniquelyReferenced_nonNull_native, a2);
    *v3 = v15;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_9;
  }
  v10 = *(_QWORD *)(v6 + 48);
  v11 = *(double *)(v10 + 8 * v9);
  if (v11 != a2)
  {
    v13 = ~v8;
    do
    {
      v9 = (v9 + 1) & v13;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_8;
      v11 = *(double *)(v10 + 8 * v9);
    }
    while (v11 != a2);
  }
  result = 0;
  a2 = v11;
LABEL_9:
  *a1 = a2;
  return result;
}

uint64_t sub_24141DE14(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_2414B58CC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2414B4DD4();
  swift_bridgeObjectRelease();
  v8 = sub_2414B58FC();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_2414B57D0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_2414B57D0() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_24141ECC4(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_24141DFD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571284D8);
    v2 = sub_2414B5554();
    v14 = v2;
    sub_2414B5494();
    if (sub_2414B54E8())
    {
      sub_241421558();
      do
      {
        swift_dynamicCast();
        v2 = v14;
        if (*(_QWORD *)(v14 + 24) <= *(_QWORD *)(v14 + 16))
        {
          sub_24141C018();
          v2 = v14;
        }
        result = sub_2414B5320();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v9 = 0;
          v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v11 = v7 == v10;
            if (v7 == v10)
              v7 = 0;
            v9 |= v11;
            v12 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v13;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_2414B54E8());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B08];
  }
  return v2;
}

uint64_t sub_24141E1B4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, unint64_t, uint64_t);
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v28 = a1;
  v6 = sub_2414B2A88();
  v7 = *(_QWORD *)(v6 - 8);
  v8.n128_f64[0] = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v27 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  v13 = v11 + 1;
  if ((a3 & 1) != 0)
  {
    sub_24141C2B4(v13, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], &qword_2571284F8, &qword_257126EE0, MEMORY[0x24BDCDAF0]);
  }
  else
  {
    if (v12 > v11)
    {
      sub_24141F014((uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0], &qword_2571284F8);
      goto LABEL_12;
    }
    sub_24141FB4C(v13, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], &qword_2571284F8, &qword_257126EE0, MEMORY[0x24BDCDAF0]);
  }
  v14 = *v3;
  sub_2412C8030(&qword_257126EE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  v15 = sub_2414B4C78();
  v16 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v15 & ~v16;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v17 = ~v16;
    v18 = *(_QWORD *)(v7 + 72);
    v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v19(v10, *(_QWORD *)(v14 + 48) + v18 * a2, v6);
      sub_2412C8030(&qword_257121D40, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
      v20 = sub_2414B4CE4();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v20 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v17;
    }
    while (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v21 = v28;
  v22 = *v27;
  *(_QWORD *)(*v27 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v22 + 48) + *(_QWORD *)(v7 + 72) * a2, v21, v6, v8);
  v24 = *(_QWORD *)(v22 + 16);
  v25 = __OFADD__(v24, 1);
  v26 = v24 + 1;
  if (!v25)
  {
    *(_QWORD *)(v22 + 16) = v26;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_2414B5830();
  __break(1u);
  return result;
}

uint64_t sub_24141E408(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, unint64_t, uint64_t);
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v28 = a1;
  v6 = sub_2414B2B30();
  v7 = *(_QWORD *)(v6 - 8);
  v8.n128_f64[0] = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v27 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  v13 = v11 + 1;
  if ((a3 & 1) != 0)
  {
    sub_24141C2B4(v13, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], &qword_257128508, &qword_257126EF0, MEMORY[0x24BDCEA88]);
  }
  else
  {
    if (v12 > v11)
    {
      sub_24141F014((uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], &qword_257128508);
      goto LABEL_12;
    }
    sub_24141FB4C(v13, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], &qword_257128508, &qword_257126EF0, MEMORY[0x24BDCEA88]);
  }
  v14 = *v3;
  sub_2412C8030(&qword_257126EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v15 = sub_2414B4C78();
  v16 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v15 & ~v16;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v17 = ~v16;
    v18 = *(_QWORD *)(v7 + 72);
    v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v19(v10, *(_QWORD *)(v14 + 48) + v18 * a2, v6);
      sub_2412C8030(&qword_257126EF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v20 = sub_2414B4CE4();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v20 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v17;
    }
    while (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v21 = v28;
  v22 = *v27;
  *(_QWORD *)(*v27 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v22 + 48) + *(_QWORD *)(v7 + 72) * a2, v21, v6, v8);
  v24 = *(_QWORD *)(v22 + 16);
  v25 = __OFADD__(v24, 1);
  v26 = v24 + 1;
  if (!v25)
  {
    *(_QWORD *)(v22 + 16) = v26;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_2414B5830();
  __break(1u);
  return result;
}

void sub_24141E65C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_24141C018();
  }
  else
  {
    if (v7 > v6)
    {
      sub_24141EE6C();
      goto LABEL_14;
    }
    sub_24141F8D4();
  }
  v8 = *v3;
  v9 = sub_2414B5320();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  a2 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_241421558();
    v11 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
    v12 = sub_2414B532C();

    if ((v12 & 1) != 0)
    {
LABEL_13:
      sub_2414B5830();
      __break(1u);
    }
    else
    {
      v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v14 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
        v15 = sub_2414B532C();

        if ((v15 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v16 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * a2) = a1;
  v17 = *(_QWORD *)(v16 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
    __break(1u);
  else
    *(_QWORD *)(v16 + 16) = v19;
}

uint64_t sub_24141E7D0(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_24141C614();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_24141F238();
      goto LABEL_22;
    }
    sub_24141FE68();
  }
  v11 = *v4;
  sub_2414B58CC();
  sub_2414B4DD4();
  result = sub_2414B58FC();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_2414B57D0(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_2414B5830();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_2414B57D0();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_24141E968(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v4 = v3;
  v6 = result;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_22;
  if ((a3 & 1) != 0)
  {
    sub_24141C8F0();
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_24141F3E8();
LABEL_22:
      v25 = *v4;
      *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(_QWORD *)(*(_QWORD *)(v25 + 48) + 8 * a2) = v6;
      v26 = *(_QWORD *)(v25 + 16);
      v27 = __OFADD__(v26, 1);
      v28 = v26 + 1;
      if (!v27)
      {
        *(_QWORD *)(v25 + 16) = v28;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_241420114();
  }
  v9 = *v3;
  sub_2414B4D68();
  sub_2414B58CC();
  sub_2414B4DD4();
  v10 = sub_2414B58FC();
  result = swift_bridgeObjectRelease();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
    goto LABEL_22;
  v12 = sub_2414B4D68();
  v14 = v13;
  if (v12 == sub_2414B4D68() && v14 == v15)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  v17 = sub_2414B57D0();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    v18 = ~v11;
    do
    {
      a2 = (a2 + 1) & v18;
      if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_22;
      v19 = sub_2414B4D68();
      v21 = v20;
      if (v19 == sub_2414B4D68() && v21 == v22)
        goto LABEL_25;
      v24 = sub_2414B57D0();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
    while ((v24 & 1) == 0);
  }
LABEL_26:
  type metadata accessor for URLResourceKey(0);
  result = sub_2414B5830();
  __break(1u);
  return result;
}

uint64_t sub_24141EB94(uint64_t result, char a2, double a3)
{
  uint64_t *v3;
  unint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v4 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a2 & 1) != 0)
    goto LABEL_14;
  if ((a2 & 1) != 0)
  {
    sub_24141CC00();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_24141F590();
      goto LABEL_14;
    }
    sub_2414203F0();
  }
  v8 = *v3;
  result = sub_2414B58C0();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  v4 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(double *)(v10 + 8 * v4) == a3)
    {
LABEL_13:
      result = sub_2414B5830();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        v4 = (v4 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
          break;
        if (*(double *)(v10 + 8 * v4) == a3)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (v4 >> 6) + 56) |= 1 << v4;
  *(double *)(*(_QWORD *)(v12 + 48) + 8 * v4) = a3;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_24141ECC4(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_24141CE94();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_24141F724();
      goto LABEL_22;
    }
    sub_241420660();
  }
  v11 = *v4;
  sub_2414B58CC();
  swift_bridgeObjectRetain();
  sub_2414B4DD4();
  swift_bridgeObjectRelease();
  result = sub_2414B58FC();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_2414B57D0(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_2414B5830();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_2414B57D0();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

id sub_24141EE6C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571284D8);
  v2 = *v0;
  v3 = sub_2414B553C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_24141F014(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v4 = v2;
  v5 = a1(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - v7;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *v2;
  v10 = sub_2414B553C();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v4 = v11;
    return result;
  }
  v28 = v4;
  result = (void *)(v10 + 56);
  v13 = v9 + 56;
  v14 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v14)
    result = memmove(result, (const void *)(v9 + 56), 8 * v14);
  v16 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v17 = 1 << *(_BYTE *)(v9 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(v9 + 56);
  v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v24 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v24);
    ++v16;
    if (!v25)
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v20)
        goto LABEL_28;
      v25 = *(_QWORD *)(v13 + 8 * v16);
      if (!v25)
      {
        v16 = v24 + 2;
        if (v24 + 2 >= v20)
          goto LABEL_28;
        v25 = *(_QWORD *)(v13 + 8 * v16);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v19 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_12:
    v23 = *(_QWORD *)(v6 + 72) * v22;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(_QWORD *)(v9 + 48) + v23, v5);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v23, v8, v5);
  }
  v26 = v24 + 3;
  if (v26 >= v20)
  {
LABEL_28:
    result = (void *)swift_release();
    v4 = v28;
    goto LABEL_30;
  }
  v25 = *(_QWORD *)(v13 + 8 * v26);
  if (v25)
  {
    v16 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v16 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v16);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_24141F238()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257128500);
  v2 = *v0;
  v3 = sub_2414B553C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_24141F3E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571284F0);
  v2 = *v0;
  v3 = sub_2414B553C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_24141F590()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571284E8);
  v2 = *v0;
  v3 = sub_2414B553C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_24141F724()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571284C0);
  v2 = *v0;
  v3 = sub_2414B553C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_24141F8D4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571284D8);
  v3 = sub_2414B5548();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v27 = v0;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = sub_2414B5320();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v27;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24141FB4C(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  int64_t v38;
  uint64_t (*v39)(uint64_t);
  unint64_t *v40;
  uint64_t v41;

  v40 = a4;
  v41 = a5;
  v7 = v5;
  v39 = a2;
  v8 = a2(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v36 - v10;
  v12 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v13 = sub_2414B5548();
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
  {
    result = swift_release();
LABEL_35:
    *v7 = v14;
    return result;
  }
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 56);
  v36 = v5;
  v37 = v12 + 56;
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v38 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 56;
  result = swift_retain();
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_24;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v25 >= v38)
      goto LABEL_33;
    v26 = *(_QWORD *)(v37 + 8 * v25);
    ++v21;
    if (!v26)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v38)
        goto LABEL_33;
      v26 = *(_QWORD *)(v37 + 8 * v21);
      if (!v26)
      {
        v21 = v25 + 2;
        if (v25 + 2 >= v38)
          goto LABEL_33;
        v26 = *(_QWORD *)(v37 + 8 * v21);
        if (!v26)
          break;
      }
    }
LABEL_23:
    v18 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_24:
    v28 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v11, *(_QWORD *)(v12 + 48) + v28 * v24, v8);
    sub_2412C8030(v40, v39, v41);
    result = sub_2414B4C78();
    v29 = -1 << *(_BYTE *)(v14 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v19 + 8 * v31);
      }
      while (v35 == -1);
      v22 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(_QWORD *)(v14 + 48) + v22 * v28, v11, v8);
    ++*(_QWORD *)(v14 + 16);
  }
  v27 = v25 + 3;
  if (v27 >= v38)
  {
LABEL_33:
    result = swift_release_n();
    v7 = v36;
    goto LABEL_35;
  }
  v26 = *(_QWORD *)(v37 + 8 * v27);
  if (v26)
  {
    v21 = v27;
    goto LABEL_23;
  }
  while (1)
  {
    v21 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v21 >= v38)
      goto LABEL_33;
    v26 = *(_QWORD *)(v37 + 8 * v21);
    ++v27;
    if (v26)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24141FE68()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257128500);
  v3 = sub_2414B5548();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_2414B58CC();
    swift_bridgeObjectRetain();
    sub_2414B4DD4();
    result = sub_2414B58FC();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_241420114()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571284F0);
  v3 = sub_2414B5548();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v27 = v0;
  v28 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29)
      goto LABEL_33;
    v15 = *(_QWORD *)(v28 + 8 * v14);
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_33;
      v15 = *(_QWORD *)(v28 + 8 * v10);
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_33;
        v15 = *(_QWORD *)(v28 + 8 * v10);
        if (!v15)
          break;
      }
    }
LABEL_23:
    v7 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v13);
    sub_2414B4D68();
    sub_2414B58CC();
    v18 = v17;
    sub_2414B4DD4();
    v19 = sub_2414B58FC();
    result = swift_bridgeObjectRelease();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = v19 & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v8 + 8 * v22);
      }
      while (v26 == -1);
      v11 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v11) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v27;
    goto LABEL_35;
  }
  v15 = *(_QWORD *)(v28 + 8 * v16);
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v29)
      goto LABEL_33;
    v15 = *(_QWORD *)(v28 + 8 * v10);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2414203F0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571284E8);
  result = sub_2414B5548();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    result = sub_2414B58C0();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_241420660()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571284C0);
  v3 = sub_2414B5548();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_2414B58CC();
    swift_bridgeObjectRetain_n();
    sub_2414B4DD4();
    swift_bridgeObjectRelease();
    result = sub_2414B58FC();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_241420918(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v18;

  v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = a1;
    v5 = sub_2414B54F4();

    if ((v5 & 1) != 0)
    {
      v6 = sub_24142106C();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v7 = sub_2414B5320();
  v8 = -1 << *(_BYTE *)(v3 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
    goto LABEL_12;
  sub_241421558();
  v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
  v11 = sub_2414B532C();

  if ((v11 & 1) == 0)
  {
    v12 = ~v8;
    do
    {
      v9 = (v9 + 1) & v12;
      if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_12;
      v13 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
      v14 = sub_2414B532C();

    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v16 = *v1;
  v18 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_24141EE6C();
    v16 = v18;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * v9);
  sub_2414211F4(v9);
  *v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_241420ADC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_2414B58CC();
  swift_bridgeObjectRetain();
  sub_2414B4DD4();
  v6 = sub_2414B58FC();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_2414B57D0() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_2414B57D0() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_24141F238();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_241421394(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_241420C68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  _QWORD *v21;
  BOOL v22;
  uint64_t v23;

  v7 = *v3;
  sub_2414B58CC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2414B4DD4();
  swift_bridgeObjectRelease();
  v8 = sub_2414B58FC();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_18:
    result = swift_bridgeObjectRelease();
    *a3 = 0;
    a3[1] = 0;
    return result;
  }
  v11 = *(_QWORD *)(v7 + 48);
  v12 = (_QWORD *)(v11 + 16 * v10);
  v13 = *v12 == a1 && v12[1] == a2;
  if (!v13 && (sub_2414B57D0() & 1) == 0)
  {
    v20 = ~v9;
    do
    {
      v10 = (v10 + 1) & v20;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_18;
      v21 = (_QWORD *)(v11 + 16 * v10);
      v22 = *v21 == a1 && v21[1] == a2;
    }
    while (!v22 && (sub_2414B57D0() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v15 = *v3;
  v23 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_24141F724();
    v15 = v23;
  }
  v16 = (uint64_t *)(*(_QWORD *)(v15 + 48) + 16 * v10);
  v18 = *v16;
  v17 = v16[1];
  *a3 = v18;
  a3[1] = v17;
  sub_241421394(v10);
  *v3 = v23;
  return swift_bridgeObjectRelease();
}

uint64_t sub_241420E20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_2414B2A88();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_2412C8030(&qword_257126EE0, v11, MEMORY[0x24BDCDAF0]);
  swift_bridgeObjectRetain();
  v29 = a1;
  v12 = sub_2414B4C78();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a2;
    v15 = ~v13;
    v16 = *(_QWORD *)(v7 + 72);
    v30 = v7;
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v18 = v16 * v14;
      v17(v9, *(_QWORD *)(v10 + 48) + v16 * v14, v6);
      sub_2412C8030(&qword_257121D40, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
      v19 = sub_2414B4CE4();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
      if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v20 = 1;
        a2 = v28;
        v7 = v30;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
      }
    }
    swift_bridgeObjectRelease();
    v21 = v27;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v21;
    v31 = *v21;
    *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_24141F014((uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0], &qword_2571284F8);
      v23 = v31;
    }
    v24 = *(_QWORD *)(v23 + 48) + v18;
    v7 = v30;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 32))(v28, v24, v6);
    sub_241421594(v14);
    *v21 = v31;
    swift_bridgeObjectRelease();
    v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
}

uint64_t sub_24142106C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  char v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v1 = v0;
  swift_bridgeObjectRelease();
  v2 = sub_2414B54C4();
  v3 = swift_unknownObjectRetain();
  v4 = sub_24141DFD0(v3, v2);
  v15 = v4;
  swift_retain();
  v5 = sub_2414B5320();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    sub_241421558();
    v8 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
    v9 = sub_2414B532C();

    if ((v9 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v13 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v7);
      sub_2414211F4(v7);
      if ((sub_2414B532C() & 1) != 0)
      {
        *v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      v10 = ~v6;
      while (1)
      {
        v7 = (v7 + 1) & v10;
        if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          break;
        v11 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
        v12 = sub_2414B532C();

        if ((v12 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_2414211F4(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_2414B5470();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v11 = sub_2414B5320();

        v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(v3 + 48);
            v16 = (_QWORD *)(v15 + 8 * v2);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_241421394(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_2414B5470();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_2414B58CC();
        swift_bridgeObjectRetain();
        sub_2414B4DD4();
        v10 = sub_2414B58FC();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_241421558()
{
  unint64_t result;

  result = qword_2571240D0;
  if (!qword_2571240D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2571240D0);
  }
  return result;
}

void sub_241421594(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t *v24;
  void (*v25)(char *, unint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;

  v3 = sub_2414B2A88();
  v27 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = *v1 + 56;
  v8 = -1 << *(_BYTE *)(*v1 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(v7 + 8 * (v9 >> 6))) != 0)
  {
    v24 = v1;
    v10 = ~v8;
    swift_retain();
    v11 = sub_2414B5470();
    v26 = v7;
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v12 = (v11 + 1) & v10;
      v13 = *(_QWORD *)(v27 + 72);
      v25 = *(void (**)(char *, unint64_t, uint64_t))(v27 + 16);
      do
      {
        v14 = v13 * v9;
        v25(v5, *(_QWORD *)(v6 + 48) + v13 * v9, v3);
        sub_2412C8030(&qword_257126EE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
        v15 = sub_2414B4C78();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v3);
        v16 = v15 & v10;
        if (a1 >= (uint64_t)v12)
        {
          if (v16 < v12 || a1 < (uint64_t)v16)
            goto LABEL_6;
        }
        else if (v16 < v12 && a1 < (uint64_t)v16)
        {
          goto LABEL_6;
        }
        v19 = v13 * a1;
        if (v13 * a1 < v14 || *(_QWORD *)(v6 + 48) + v13 * a1 >= (unint64_t)(*(_QWORD *)(v6 + 48) + v14 + v13))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v9;
          if (v19 == v14)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v9;
LABEL_6:
        v9 = (v9 + 1) & v10;
      }
      while (((*(_QWORD *)(v26 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    *(_QWORD *)(v26 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    swift_release();
    v1 = v24;
  }
  else
  {
    *(_QWORD *)(v7 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v20 = *v1;
  v21 = *(_QWORD *)(*v1 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v20 + 16) = v23;
    ++*(_DWORD *)(v20 + 36);
  }
}

unint64_t sub_241421814()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257128510;
  if (!qword_257128510)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571284B8);
    v2[0] = sub_241421880();
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257128510);
  }
  return result;
}

unint64_t sub_241421880()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257128518;
  if (!qword_257128518)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571284A8);
    v2[0] = sub_241421994(&qword_257128520, &qword_2571284A0, &qword_257128528, &qword_2571284B0);
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257128518);
  }
  return result;
}

unint64_t sub_241421910()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_257128540;
  if (!qword_257128540)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128548);
    v2 = sub_241421994(&qword_257128550, &qword_2571284C8, &qword_257128558, &qword_2571284D0);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_257128540);
  }
  return result;
}

uint64_t sub_241421994(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = sub_2412C8FC4(a3, a4, MEMORY[0x24BDEFB78]);
    v9[1] = sub_2412C8FC4(&qword_257128530, &qword_257128538, MEMORY[0x24BDEFFA0]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

void ParallaxHeader.init(parallaxBackground:content:fixedBackground:)(uint64_t a1@<X8>)
{
  char v2;

  type metadata accessor for ParallaxContext();
  sub_2413E5CE4();
  *(_QWORD *)a1 = sub_2414B2FEC();
  *(_BYTE *)(a1 + 8) = v2 & 1;
  type metadata accessor for ParallaxHeader();
}

uint64_t sub_241421AC0(int *a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t (*v3)(uint64_t);
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;

  v5 = (_QWORD *)(v1 + a1[20]);
  sub_2414B4798();
  *v5 = v13;
  v5[1] = v14;
  v6 = (_QWORD *)(v1 + a1[21]);
  sub_2414B4798();
  *v6 = v13;
  v6[1] = v14;
  v7 = (_QWORD *)(v1 + a1[22]);
  v8 = sub_2414B4798();
  *v7 = v13;
  v7[1] = v14;
  v9 = v3(v8);
  v10 = v2(v9);
  return v12(v10);
}

void type metadata accessor for ParallaxHeader()
{
  JUMPOUT(0x242695A4CLL);
}

void ParallaxHeader.init<>(parallaxBackground:)(uint64_t a1@<X8>)
{
  char v2;

  type metadata accessor for ParallaxContext();
  sub_2413E5CE4();
  *(_QWORD *)a1 = sub_2414B2FEC();
  *(_BYTE *)(a1 + 8) = v2 & 1;
  type metadata accessor for ParallaxHeader();
}

uint64_t sub_241421C2C(int *a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v4 = (_QWORD *)(v2 + a1[20]);
  sub_2414B4798();
  *v4 = v9;
  v4[1] = v10;
  v5 = (_QWORD *)(v2 + a1[21]);
  sub_2414B4798();
  *v5 = v9;
  v5[1] = v10;
  v6 = (_QWORD *)(v2 + a1[22]);
  v7 = sub_2414B4798();
  *v6 = v9;
  v6[1] = v10;
  return v1(v7);
}

uint64_t sub_241421CE4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_BYTE *)(v0 + 8);
  v2 = swift_retain();
  v3 = sub_24134631C(v2, v1);
  swift_release();
  return v3;
}

double sub_241421D24()
{
  double v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C0);
  sub_2414B47A4();
  return v1;
}

uint64_t sub_241421D78()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C0);
  return sub_2414B47B0();
}

double sub_241421DCC()
{
  double v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C0);
  sub_2414B47A4();
  return v1;
}

uint64_t sub_241421E20()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C0);
  return sub_2414B47B0();
}

uint64_t sub_241421E74()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C0);
  return sub_2414B47B0();
}

void sub_241421EC8()
{
  double v0;
  double v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;

  v0 = sub_241421DCC();
  if (qword_2571209E0 != -1)
    swift_once();
  v1 = v0 + *(double *)&qword_257137158;
  v2 = sub_241421CE4();
  swift_getKeyPath();
  sub_2413E5CE4();
  sub_2414B2B84();
  swift_release();
  v3 = *(double *)(v2 + 48);
  swift_release();
  v4 = sub_241421D24() - v3 - v1;
  if (v4 > 0.0)
    v5 = v4;
  else
    v5 = 0.0;
  v6 = sub_241421D24() + 0.0 - v3;
  if (v6 > 0.0)
    v7 = v6;
  else
    v7 = 0.0;
  if (v5 > v7)
    __break(1u);
}

void sub_241421FEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v1 + *(int *)(v5 + 72), v2, v3);
  LODWORD(v2) = swift_dynamicCast();
  sub_241421EC8();
  if ((_DWORD)v2)
  {
    if (v7 < 0.0)
      __break(1u);
  }
}

uint64_t ParallaxHeader.body.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t OpaqueTypeConformance2;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(uint64_t, uint64_t);
  _QWORD v115[4];
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD v174[2];
  _QWORD v175[3];
  _QWORD v176[2];
  _QWORD v177[2];
  _QWORD v178[2];
  _QWORD v179[2];
  _QWORD v180[2];
  _QWORD v181[2];
  _QWORD v182[2];
  _QWORD v183[2];
  _QWORD v184[2];
  _QWORD v185[2];
  _QWORD v186[2];
  _QWORD v187[2];
  _QWORD v188[2];
  _QWORD v189[2];
  _QWORD v190[2];
  _QWORD v191[2];
  _QWORD v192[2];
  _QWORD v193[2];
  _OWORD v194[2];
  char v195;

  v148 = a2;
  v3 = *(_QWORD *)(*(a1 - 1) + 64);
  v141 = *(a1 - 1);
  v142 = v3;
  MEMORY[0x24BDAC7A8](a1);
  v140 = (char *)v115 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = *(_QWORD *)(v5 + 16);
  v6 = sub_2414B3514();
  v145 = *(_QWORD *)(v6 - 8);
  v156 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v153 = (char *)v115 - v7;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257124620);
  v8 = sub_2414B3514();
  v144 = *(_QWORD *)(v8 - 8);
  v157 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v139 = (char *)v115 - v9;
  v10 = sub_2414B3514();
  v146 = *(_QWORD *)(v10 - 8);
  v158 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v155 = (char *)v115 - v11;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128560);
  v150 = sub_2414B3514();
  v147 = *(_QWORD *)(v150 - 8);
  MEMORY[0x24BDAC7A8](v150);
  v143 = (char *)v115 - v12;
  v13 = sub_2414B3514();
  v14 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128568);
  v133 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128570);
  v134 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128578);
  v135 = sub_2414B3514();
  v152 = a1[4];
  v138 = a1[7];
  v136 = sub_2414B3604();
  v132 = (char *)sub_2414B3514();
  v15 = a1[3];
  v16 = a1;
  v137 = a1;
  v151 = v15;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571245E8);
  sub_2414B3514();
  swift_getTupleTypeMetadata2();
  v17 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v17);
  v18 = sub_2414B4894();
  MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v18);
  v19 = sub_2414B3604();
  v20 = sub_2414B3514();
  v21 = sub_2414B3514();
  v22 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128580);
  v23 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128588);
  v24 = sub_2414B3514();
  v149 = v16[5];
  v193[0] = v149;
  v193[1] = MEMORY[0x24BDEC438];
  v25 = MEMORY[0x24BDED308];
  v192[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v13, v193);
  v192[1] = MEMORY[0x24BDEBF50];
  v26 = MEMORY[0x242695AE8](v25, v14, v192);
  v27 = MEMORY[0x24BDEDC10];
  v28 = sub_2412C8FC4(&qword_257128590, &qword_257128568, MEMORY[0x24BDEDC10]);
  v191[0] = v26;
  v191[1] = v28;
  v29 = MEMORY[0x242695AE8](v25, v133, v191);
  v30 = sub_2412C8FC4(&qword_257128598, &qword_257128570, MEMORY[0x24BDEB950]);
  v190[0] = v29;
  v190[1] = v30;
  v31 = MEMORY[0x242695AE8](v25, v134, v190);
  v32 = sub_2412C8FC4(&qword_2571285A0, &qword_257128578, MEMORY[0x24BDF0B90]);
  v189[0] = v31;
  v189[1] = v32;
  v33 = MEMORY[0x242695AE8](v25, v135, v189);
  v34 = MEMORY[0x242695AE8](v27, v136);
  v188[0] = v33;
  v188[1] = v34;
  v35 = MEMORY[0x242695AE8](v25, v132, v188);
  v36 = MEMORY[0x242695AE8](v27, v19);
  v187[0] = v35;
  v187[1] = v36;
  v186[0] = MEMORY[0x242695AE8](v25, v20, v187);
  v186[1] = MEMORY[0x24BDF0390];
  v185[0] = MEMORY[0x242695AE8](v25, v21, v186);
  v185[1] = MEMORY[0x24BDECC38];
  v37 = MEMORY[0x242695AE8](v25, v22, v185);
  v38 = MEMORY[0x24BDF0B90];
  v39 = sub_2412C8FC4(&qword_2571285A8, &qword_257128580, MEMORY[0x24BDF0B90]);
  v184[0] = v37;
  v184[1] = v39;
  v40 = MEMORY[0x242695AE8](v25, v23, v184);
  v41 = sub_2412C8FC4(&qword_2571285B0, &qword_257128588, v38);
  v183[0] = v40;
  v183[1] = v41;
  MEMORY[0x242695AE8](v25, v24, v183);
  v42 = sub_2414B3388();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254382878);
  v43 = sub_2414B3514();
  v44 = MEMORY[0x242695AE8](MEMORY[0x24BDEC6F8], v42);
  v45 = sub_2412C8FC4((unint64_t *)&qword_254382870, &qword_254382878, MEMORY[0x24BDF1028]);
  v182[0] = v44;
  v182[1] = v45;
  v133 = v43;
  v134 = MEMORY[0x242695AE8](v25, v43, v182);
  v46 = sub_2414B3604();
  v47 = v150;
  v48 = sub_2414B3514();
  v136 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v131 = (char *)v115 - v49;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571285B8);
  v122 = v48;
  v50 = sub_2414B3514();
  v135 = *(_QWORD *)(v50 - 8);
  v51 = MEMORY[0x24BDAC7A8](v50);
  v132 = (char *)v115 - v52;
  v53 = v149;
  v181[0] = v149;
  v181[1] = MEMORY[0x24BDEEC40];
  v54 = MEMORY[0x242695AE8](v25, v156, v181, v51);
  v115[1] = v54;
  v55 = sub_2412C8FC4(&qword_257124618, &qword_257124620, MEMORY[0x24BDF09B0]);
  v180[0] = v54;
  v180[1] = v55;
  v56 = MEMORY[0x242695AE8](v25, v157, v180);
  v115[2] = v56;
  v57 = sub_2413C65E4();
  v179[0] = v56;
  v179[1] = v57;
  v58 = MEMORY[0x242695AE8](v25, v158, v179);
  v115[3] = v58;
  v59 = MEMORY[0x24BDEDC10];
  v60 = sub_2412C8FC4(&qword_2571285C0, &qword_257128560, MEMORY[0x24BDEDC10]);
  v178[0] = v58;
  v178[1] = v60;
  v61 = MEMORY[0x242695AE8](v25, v47, v178);
  v117 = v61;
  v62 = MEMORY[0x242695AE8](v59, v46);
  v177[0] = v61;
  v177[1] = v62;
  v63 = MEMORY[0x242695AE8](v25, v48, v177);
  v119 = v63;
  v64 = sub_2412C8FC4(&qword_2571285C8, &qword_2571285B8, MEMORY[0x24BDF0B90]);
  v176[0] = v63;
  v176[1] = v64;
  v121 = v50;
  v120 = MEMORY[0x242695AE8](v25, v50, v176);
  *(_QWORD *)&v194[0] = v50;
  *((_QWORD *)&v194[0] + 1) = v120;
  v65 = MEMORY[0x242695A94](0, v194, MEMORY[0x24BDF29A8], 0);
  v126 = *(_QWORD *)(v65 - 8);
  v123 = v65;
  MEMORY[0x24BDAC7A8](v65);
  v116 = (char *)v115 - v66;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126C00);
  v67 = sub_2414B3514();
  v68 = *(_QWORD *)(v67 - 8);
  v125 = v67;
  v129 = v68;
  MEMORY[0x24BDAC7A8](v67);
  v118 = (char *)v115 - v69;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126BF0);
  v128 = sub_2414B3514();
  v130 = *(_QWORD *)(v128 - 8);
  MEMORY[0x24BDAC7A8](v128);
  v124 = (char *)v115 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v71);
  v127 = (uint64_t)v115 - v72;
  v73 = v137;
  v74 = v154;
  v75 = v159;
  sub_2414B4264();
  v77 = v140;
  v76 = v141;
  (*(void (**)(char *, uint64_t, _QWORD *))(v141 + 16))(v140, v74, v73);
  v78 = v76;
  v79 = (*(unsigned __int8 *)(v76 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
  v80 = (char *)swift_allocObject();
  v82 = v151;
  v81 = v152;
  *((_QWORD *)v80 + 2) = v75;
  *((_QWORD *)v80 + 3) = v82;
  *((_QWORD *)v80 + 4) = v81;
  *((_QWORD *)v80 + 5) = v53;
  v142 = v73[6];
  v83 = v138;
  *((_QWORD *)v80 + 6) = v142;
  *((_QWORD *)v80 + 7) = v83;
  (*(void (**)(char *, char *, _QWORD *))(v78 + 32))(&v80[v79], v77, v73);
  sub_241422E8C();
  sub_2412C4858();
  v84 = v139;
  v85 = v156;
  v86 = v153;
  sub_2414B4390();
  swift_release();
  (*(void (**)(char *, uint64_t))(v145 + 8))(v86, v85);
  v87 = v157;
  sub_2414B44BC();
  (*(void (**)(char *, uint64_t))(v144 + 8))(v84, v87);
  v167 = v159;
  v168 = v82;
  v169 = v81;
  v88 = v149;
  v89 = v142;
  v170 = v149;
  v171 = v142;
  v172 = v83;
  v90 = v154;
  v173 = v154;
  sub_2414B4A44();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571285D8);
  sub_2412C8FC4(&qword_2571285E0, &qword_2571285D8, MEMORY[0x24BDEC6F8]);
  v91 = v143;
  v92 = v158;
  v93 = v155;
  sub_2414B4504();
  (*(void (**)(char *, uint64_t))(v146 + 8))(v93, v92);
  v160 = v159;
  v161 = v151;
  v162 = v152;
  v163 = v88;
  v164 = v89;
  v165 = v83;
  v166 = v90;
  sub_2414B4A44();
  v94 = v131;
  v95 = v150;
  sub_2414B4504();
  (*(void (**)(char *, uint64_t))(v147 + 8))(v91, v95);
  LOBYTE(v194[0]) = 1;
  sub_241423838();
  v96 = v132;
  v97 = v122;
  sub_2414B4150();
  (*(void (**)(char *, uint64_t))(v136 + 8))(v94, v97);
  sub_2414B3154();
  v98 = v116;
  v100 = v120;
  v99 = v121;
  sub_2414B42F4();
  (*(void (**)(char *, uint64_t))(v135 + 8))(v96, v99);
  v175[2] = sub_2414B4648();
  *(_QWORD *)&v194[0] = v99;
  *((_QWORD *)&v194[0] + 1) = v100;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v102 = v118;
  v103 = v123;
  sub_2414B4318();
  swift_release();
  (*(void (**)(char *, uint64_t))(v126 + 8))(v98, v103);
  v104 = MEMORY[0x24BDEFB48];
  v105 = sub_2412C8FC4(&qword_257126C08, &qword_257126C00, MEMORY[0x24BDEFB48]);
  memset(v194, 0, sizeof(v194));
  v195 = 0;
  v175[0] = OpaqueTypeConformance2;
  v175[1] = v105;
  v106 = MEMORY[0x24BDED308];
  v107 = v125;
  v108 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v125, v175);
  v109 = (uint64_t)v124;
  sub_2414B4270();
  (*(void (**)(char *, uint64_t))(v129 + 8))(v102, v107);
  v110 = sub_2412C8FC4(&qword_257126BF8, &qword_257126BF0, v104);
  v174[0] = v108;
  v174[1] = v110;
  v111 = v128;
  MEMORY[0x242695AE8](v106, v128, v174);
  v112 = v127;
  sub_2412FBF34(v109, v111, v127);
  v113 = *(void (**)(uint64_t, uint64_t))(v130 + 8);
  v113(v109, v111);
  sub_2412EEA1C(v112, v111, v148);
  return ((uint64_t (*)(uint64_t, uint64_t))v113)(v112, v111);
}

void sub_241422DEC()
{
  type metadata accessor for ParallaxHeader();
}

void sub_241422E34()
{
  type metadata accessor for ParallaxHeader();
}

uint64_t sub_241422E64()
{
  return sub_241421E74();
}

unint64_t sub_241422E8C()
{
  unint64_t result;

  result = qword_2571285D0;
  if (!qword_2571285D0)
  {
    result = MEMORY[0x242695AE8](&unk_2414C65A0, &type metadata for ParallaxHeaderMinYPreferenceKey);
    atomic_store(result, (unint64_t *)&qword_2571285D0);
  }
  return result;
}

void sub_241422ED0()
{
  type metadata accessor for ParallaxHeader();
}

uint64_t sub_241422F24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  void (**v16)();
  _BYTE v17[96];

  v8 = *(_QWORD *)(a1 - 8);
  v9 = MEMORY[0x24BDAC7A8](a1);
  v11 = &v17[-v10];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v8 + 16))(&v17[-v10], v5, a1, v9);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = (char *)swift_allocObject();
  *((_QWORD *)v13 + 2) = v4;
  *((_QWORD *)v13 + 3) = v3;
  *((_QWORD *)v13 + 4) = v2;
  *((_QWORD *)v13 + 5) = v1;
  v14 = *(_QWORD *)(v6 - 144);
  *((_QWORD *)v13 + 6) = *(_QWORD *)(v6 - 152);
  *((_QWORD *)v13 + 7) = v14;
  result = (*(uint64_t (**)(char *, _BYTE *, uint64_t))(v8 + 32))(&v13[v12], v11, a1);
  v16 = *(void (***)())(v6 - 136);
  *v16 = sub_2414268E0;
  v16[1] = (void (*)())v13;
  return result;
}

void sub_241422FE4()
{
  sub_241422ED0();
}

void sub_241422FF8()
{
  type metadata accessor for ParallaxHeader();
}

uint64_t sub_241423050(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  _BYTE v21[112];

  v5 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = &v21[-v6];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571286A8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)(v3 - 144) = sub_2414B4648();
  sub_2414B325C();
  *(_QWORD *)(v3 - 152) = v12;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v1, a1);
  v13 = (*(unsigned __int8 *)(v5 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v14 = (char *)swift_allocObject();
  v15 = *(_QWORD *)(v3 - 200);
  *((_QWORD *)v14 + 2) = v2;
  *((_QWORD *)v14 + 3) = v15;
  v16 = *(_QWORD *)(v3 - 184);
  *((_QWORD *)v14 + 4) = *(_QWORD *)(v3 - 192);
  *((_QWORD *)v14 + 5) = v16;
  v17 = *(_QWORD *)(v3 - 168);
  *((_QWORD *)v14 + 6) = *(_QWORD *)(v3 - 176);
  *((_QWORD *)v14 + 7) = v17;
  (*(void (**)(char *, _BYTE *, uint64_t))(v5 + 32))(&v14[v13], v7, a1);
  sub_2412C4858();
  sub_2414B4558();
  swift_release();
  swift_release();
  v18 = sub_241421D24();
  v19 = *(_QWORD *)(v3 - 160);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v9 + 16))(v19, v11, v8);
  *(double *)(v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2571286B0) + 36)) = v18;
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_2414231F8()
{
  type metadata accessor for ParallaxHeader();
}

uint64_t sub_241423254(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  double v10;
  uint64_t v11;
  _BYTE *v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  _BYTE v63[96];

  v9 = *(_QWORD *)(a1 - 8);
  v10 = MEMORY[0x24BDAC7A8](a1);
  v12 = &v63[-v11];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v9 + 16))(&v63[-v11], v2, a1, v10);
  v13 = (*(unsigned __int8 *)(v9 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = (char *)swift_allocObject();
  *((_QWORD *)v14 + 2) = v3;
  *((_QWORD *)v14 + 3) = v5;
  *((_QWORD *)v14 + 4) = *(_QWORD *)(v1 + 56);
  *((_QWORD *)v14 + 5) = v4;
  *((_QWORD *)v14 + 6) = v6;
  *((_QWORD *)v14 + 7) = *(_QWORD *)(v1 + 16);
  (*(void (**)(char *, _BYTE *, uint64_t))(v9 + 32))(&v14[v13], v12, a1);
  v15 = sub_2414B3514();
  v16 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128568);
  *(_QWORD *)(v1 + 32) = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128570);
  *(_QWORD *)v1 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128578);
  *(_QWORD *)(v1 + 48) = sub_2414B3514();
  *(_QWORD *)(v1 + 56) = sub_2414B3604();
  *(_QWORD *)(v1 + 8) = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571245E8);
  sub_2414B3514();
  swift_getTupleTypeMetadata2();
  v17 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v17);
  v18 = sub_2414B4894();
  MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v18);
  v19 = sub_2414B3604();
  v20 = sub_2414B3514();
  v21 = sub_2414B3514();
  *(_QWORD *)(v1 + 16) = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128580);
  *(_QWORD *)(v1 + 24) = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128588);
  v22 = sub_2414B3514();
  v23 = MEMORY[0x24BDEC438];
  *(_QWORD *)(v7 - 184) = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v7 - 176) = v23;
  v24 = MEMORY[0x24BDED308];
  v25 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v15, v7 - 184);
  v26 = MEMORY[0x24BDEBF50];
  *(_QWORD *)(v7 - 200) = v25;
  *(_QWORD *)(v7 - 192) = v26;
  v27 = MEMORY[0x242695AE8](v24, v16, v7 - 200);
  v28 = MEMORY[0x24BDEDC10];
  v29 = sub_2412C8FC4(&qword_257128590, &qword_257128568, MEMORY[0x24BDEDC10]);
  *(_QWORD *)(v7 - 216) = v27;
  *(_QWORD *)(v7 - 208) = v29;
  v30 = MEMORY[0x242695AE8](v24, *(_QWORD *)(v1 + 32), v7 - 216);
  v31 = sub_2412C8FC4(&qword_257128598, &qword_257128570, MEMORY[0x24BDEB950]);
  *(_QWORD *)(v1 + 232) = v30;
  *(_QWORD *)(v1 + 240) = v31;
  v32 = MEMORY[0x242695AE8](v24, *(_QWORD *)v1, v1 + 232);
  v33 = MEMORY[0x24BDF0B90];
  v34 = sub_2412C8FC4(&qword_2571285A0, &qword_257128578, MEMORY[0x24BDF0B90]);
  *(_QWORD *)(v1 + 216) = v32;
  *(_QWORD *)(v1 + 224) = v34;
  v35 = MEMORY[0x242695AE8](v24, *(_QWORD *)(v1 + 48), v1 + 216);
  v36 = MEMORY[0x242695AE8](v28, *(_QWORD *)(v1 + 56));
  *(_QWORD *)(v1 + 200) = v35;
  *(_QWORD *)(v1 + 208) = v36;
  v37 = MEMORY[0x242695AE8](v24, *(_QWORD *)(v1 + 8), v1 + 200);
  v38 = MEMORY[0x242695AE8](v28, v19);
  *(_QWORD *)(v1 + 184) = v37;
  *(_QWORD *)(v1 + 192) = v38;
  v39 = MEMORY[0x242695AE8](v24, v20, v1 + 184);
  v40 = MEMORY[0x24BDF0390];
  *(_QWORD *)(v1 + 168) = v39;
  *(_QWORD *)(v1 + 176) = v40;
  v41 = MEMORY[0x242695AE8](v24, v21, v1 + 168);
  v42 = MEMORY[0x24BDECC38];
  *(_QWORD *)(v1 + 152) = v41;
  *(_QWORD *)(v1 + 160) = v42;
  v43 = MEMORY[0x242695AE8](v24, *(_QWORD *)(v1 + 16), v1 + 152);
  v44 = sub_2412C8FC4(&qword_2571285A8, &qword_257128580, v33);
  *(_QWORD *)(v1 + 136) = v43;
  *(_QWORD *)(v1 + 144) = v44;
  v45 = MEMORY[0x242695AE8](v24, *(_QWORD *)(v1 + 24), v1 + 136);
  v46 = sub_2412C8FC4(&qword_2571285B0, &qword_257128588, v33);
  *(_QWORD *)(v1 + 120) = v45;
  *(_QWORD *)(v1 + 128) = v46;
  MEMORY[0x242695AE8](v24, v22, v1 + 120);
  *(_QWORD *)(v7 - 168) = sub_2414B337C();
  *(_QWORD *)(v7 - 160) = v47;
  v48 = sub_2414B3388();
  v49 = MEMORY[0x242695AE8](MEMORY[0x24BDEC6F8], v48);
  View.mcui.getter(v48, v7 - 136);
  swift_release();
  v50 = *(_QWORD *)(v7 - 128);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(v7 - 136);
  *(_QWORD *)(v1 + 96) = v50;
  *(_BYTE *)(v1 + 119) = 3;
  v53 = type metadata accessor for MCUINamespace(0, v48, v51, v52);
  MCUINamespace<A>.motionCollection(policy:)(v1 + 119, v53);
  swift_release();
  v54 = *(_QWORD *)(v7 - 160);
  v55 = *(_QWORD *)(v7 - 152);
  v56 = *(_BYTE *)(v7 - 144);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(v7 - 168);
  *(_QWORD *)(v1 + 96) = v54;
  *(_QWORD *)(v1 + 104) = v55;
  *(_BYTE *)(v1 + 112) = v56;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254382878);
  v57 = sub_2414B3514();
  v58 = sub_2412C8FC4((unint64_t *)&qword_254382870, &qword_254382878, MEMORY[0x24BDF1028]);
  *(_QWORD *)(v1 + 72) = v49;
  *(_QWORD *)(v1 + 80) = v58;
  MEMORY[0x242695AE8](v24, v57, v1 + 72);
  sub_2412FBF34(v1 + 88, v57, v7 - 136);
  swift_release();
  swift_release();
  v59 = *(_QWORD *)(v7 - 128);
  v60 = *(_QWORD *)(v7 - 120);
  v61 = *(_BYTE *)(v7 - 112);
  *(_QWORD *)(v7 - 168) = *(_QWORD *)(v7 - 136);
  *(_QWORD *)(v7 - 160) = v59;
  *(_QWORD *)(v7 - 152) = v60;
  *(_BYTE *)(v7 - 144) = v61;
  sub_2412EEA1C(v7 - 168, v57, *(_QWORD *)(v1 + 64));
  swift_release();
  return swift_release();
}

void sub_241423824()
{
  sub_2414231F8();
}

unint64_t sub_241423838()
{
  unint64_t result;

  result = qword_2571285E8[0];
  if (!qword_2571285E8[0])
  {
    result = MEMORY[0x242695AE8](&unk_2414C6558, &type metadata for ParallaxHeaderIsInViewHierarchyKey);
    atomic_store(result, qword_2571285E8);
  }
  return result;
}

uint64_t sub_24142387C()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2414238B8(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  double v45;
  CGFloat v46;
  double v47;
  CGFloat v48;
  double v49;
  CGFloat v50;
  double v51;
  CGFloat v52;
  _QWORD v53[39];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  CGRect v65;
  CGRect v66;

  v57 = a5;
  v58 = a4;
  v55 = a7;
  v56 = a1;
  v10 = sub_2414B3514();
  v53[4] = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_2414B3514();
  v53[6] = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v53[5] = (char *)v53 - v12;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128568);
  v53[7] = v11;
  v13 = sub_2414B3514();
  v53[9] = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v53[8] = (char *)v53 - v14;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128570);
  v53[10] = v13;
  v15 = sub_2414B3514();
  v53[12] = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v53[11] = (char *)v53 - v16;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128578);
  v53[14] = v15;
  v17 = sub_2414B3514();
  v53[23] = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v53[21] = (char *)v53 - v18;
  v19 = a3;
  v20 = sub_2414B3604();
  v53[25] = v17;
  v53[26] = v20;
  v21 = sub_2414B3514();
  v53[31] = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v53[30] = (char *)v53 - v22;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571245E8);
  v23 = a2;
  sub_2414B3514();
  swift_getTupleTypeMetadata2();
  v24 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v24);
  v25 = sub_2414B4894();
  v26 = MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v25);
  v53[15] = v25;
  v53[13] = v26;
  v27 = sub_2414B3604();
  v53[32] = v21;
  v53[16] = v27;
  v28 = sub_2414B3514();
  v53[18] = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v53[17] = (char *)v53 - v29;
  v53[19] = v30;
  v31 = sub_2414B3514();
  v53[22] = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v53[20] = (char *)v53 - v32;
  v53[24] = v33;
  v34 = sub_2414B3514();
  v53[28] = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v53[27] = (char *)v53 - v35;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128580);
  v53[29] = v34;
  v36 = sub_2414B3514();
  v53[34] = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v53[33] = (char *)v53 - v37;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128588);
  v53[36] = v36;
  v54 = sub_2414B3514();
  v53[38] = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v53[35] = (char *)v53 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v39);
  v53[37] = (char *)v53 - v40;
  v41 = sub_2414B3AFC();
  v42 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v44 = (char *)v53 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414B3B8C();
  sub_2414B3268();
  v46 = v45;
  v48 = v47;
  v50 = v49;
  v52 = v51;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v41);
  v65.origin.x = v46;
  v65.origin.y = v48;
  v65.size.width = v50;
  v65.size.height = v52;
  if (CGRectGetMinX(v65) >= 0.0)
  {
    v66.origin.x = v46;
    v66.origin.y = v48;
    v66.size.width = v50;
    v66.size.height = v52;
    CGRectGetMinY(v66);
  }
  if (qword_2571209D8 != -1)
    swift_once();
  v59 = v56;
  v60 = v23;
  v53[2] = v23;
  v53[1] = v19;
  v61 = v19;
  v62 = v58;
  v63 = v57;
  v64 = a6;
  type metadata accessor for ParallaxHeader();
}

void sub_24142475C()
{
  if (sub_241421D24() != 0.0)
  {
    sub_241421EC8();
    sub_241421EC8();
  }
}

void sub_241424808(uint64_t a1)
{
  MEMORY[0x24BDAC7A8](a1);
  type metadata accessor for ParallaxHeader();
}

uint64_t sub_241424874(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_2412FBF34(v2 + *(int *)(a1 + 76), v1, v4);
  sub_2412EEA1C(v4, v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v1);
}

uint64_t sub_2414248C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v23 = a6;
  v24 = a7;
  v22 = a5;
  v25 = a8;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571245E8);
  sub_2414B3514();
  swift_getTupleTypeMetadata2();
  v12 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v12);
  v13 = sub_2414B4894();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v22 - v18;
  sub_2414B3964();
  v26 = a2;
  v27 = a3;
  v28 = a4;
  v29 = v22;
  v30 = v23;
  v31 = v24;
  v32 = a1;
  sub_2414B4888();
  MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v13);
  sub_2412FBF34((uint64_t)v16, v13, (uint64_t)v19);
  v20 = *(void (**)(char *, uint64_t))(v14 + 8);
  v20(v16, v13);
  sub_2412EEA1C((uint64_t)v19, v13, v25);
  return ((uint64_t (*)(char *, uint64_t))v20)(v19, v13);
}

void sub_241424A78()
{
  type metadata accessor for ParallaxHeader();
}

uint64_t sub_241424AC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_BYTE *, uint64_t);
  _BYTE v29[96];

  v5 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = &v29[-v6];
  v8 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v3 - 272) = v8;
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571245E8);
  v12 = sub_2414B3514();
  *(_QWORD *)(v3 - 216) = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = &v29[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v3 - 264) = &v29[-v17];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v8 + 16))(v11, v1 + *(int *)(a1 + 72), v2, v16);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v1, a1);
  v18 = (*(unsigned __int8 *)(v5 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v19 = (char *)swift_allocObject();
  v20 = *(_QWORD *)(v3 - 256);
  *((_QWORD *)v19 + 2) = *(_QWORD *)(v3 - 248);
  *((_QWORD *)v19 + 3) = v2;
  v21 = *(_QWORD *)(v3 - 232);
  *((_QWORD *)v19 + 4) = *(_QWORD *)(v3 - 240);
  *((_QWORD *)v19 + 5) = v21;
  v22 = *(_QWORD *)(v3 - 224);
  *((_QWORD *)v19 + 6) = v20;
  *((_QWORD *)v19 + 7) = v22;
  (*(void (**)(char *, _BYTE *, uint64_t))(v5 + 32))(&v19[v18], v7, a1);
  sub_2412C4858();
  sub_2414B4300();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v3 - 272) + 8))(v11, v2);
  v23 = sub_2412C8FC4(&qword_257125530, &qword_2571245E8, MEMORY[0x24BDF0400]);
  *(_QWORD *)(v3 - 152) = v20;
  *(_QWORD *)(v3 - 144) = v23;
  v24 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v12, v3 - 152);
  v25 = *(_QWORD *)(v3 - 264);
  sub_2412FBF34((uint64_t)v14, v12, v25);
  v26 = *(_QWORD *)(v3 - 216);
  v27 = *(void (**)(_BYTE *, uint64_t))(v26 + 8);
  v27(v14, v12);
  *(_QWORD *)(v3 - 168) = 0;
  *(_BYTE *)(v3 - 160) = 0;
  *(_QWORD *)(v3 - 136) = v3 - 168;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v26 + 16))(v14, v25, v12);
  *(_QWORD *)(v3 - 128) = v14;
  *(_QWORD *)(v3 - 184) = MEMORY[0x24BDF4638];
  *(_QWORD *)(v3 - 176) = v12;
  *(_QWORD *)(v3 - 200) = MEMORY[0x24BDF4610];
  *(_QWORD *)(v3 - 192) = v24;
  sub_2412F68CC((uint64_t *)(v3 - 136), 2uLL, v3 - 184);
  v27((_BYTE *)v25, v12);
  return ((uint64_t (*)(_BYTE *, uint64_t))v27)(v14, v12);
}

uint64_t sub_241424D74@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_2414B325C();
  *a1 = v3;
  return result;
}

void sub_241424D9C()
{
  type metadata accessor for ParallaxHeader();
}

void sub_241424DD0()
{
  double v0;

  if (v0 != sub_241421DCC())
    sub_241421E20();
}

uint64_t sub_241424E04()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_241424EC8(uint64_t a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v3 = a3[2];
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v6 = *(_QWORD *)(a3[3] - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_QWORD *)(v4 + 64) + v7;
  v9 = a3[4];
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = *(_QWORD *)(v6 + 64) + v11;
  v13 = *(_QWORD *)(v10 + 64) + 7;
  v14 = v7 | v5 | v11;
  if (v14 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v4 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0
    || ((((((v13 + ((v12 + ((v8 + ((v5 + 9) & ~v5)) & ~v7)) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    v17 = *a2;
    *(_QWORD *)a1 = *a2;
    v27 = v17 + ((v14 & 0xF8 ^ 0x1F8) & (v14 + 16));
  }
  else
  {
    v18 = ~v7;
    v35 = a3[3];
    v36 = ~v11;
    v19 = *((_BYTE *)a2 + 8);
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = v19;
    v20 = (a1 + v5 + 9) & ~v5;
    v21 = ((unint64_t)a2 + v5 + 9) & ~v5;
    v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    v34 = v9;
    swift_retain();
    v22(v20, v21, v3);
    v23 = (v20 + v8) & v18;
    v24 = (v21 + v8) & v18;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v23, v24, v35);
    v25 = (v23 + v12) & v36;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v25, (v24 + v12) & v36, v34);
    v26 = (_QWORD *)((v13 + v25) & 0xFFFFFFFFFFFFFFF8);
    v27 = a1;
    v28 = (_QWORD *)((v13 + ((v24 + v12) & v36)) & 0xFFFFFFFFFFFFFFF8);
    *v26 = *v28;
    v26[1] = v28[1];
    v29 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
    v30 = (_QWORD *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v29 = *v30;
    v29[1] = v30[1];
    v31 = (_QWORD *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
    v32 = (_QWORD *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v31 = *v32;
    v31[1] = v32[1];
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v27;
}

uint64_t sub_2414250E8(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  swift_release();
  v4 = *(_QWORD *)(a2[2] - 8);
  v5 = (a1 + *(unsigned __int8 *)(v4 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v5);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(a2[3] - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t))(v7 + 8))(v8);
  (*(void (**)(unint64_t))(*(_QWORD *)(a2[4] - 8) + 8))((v8
                                                                             + *(_QWORD *)(v7 + 64)
                                                                             + *(unsigned __int8 *)(*(_QWORD *)(a2[4] - 8)
                                                                                                  + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a2[4] - 8) + 80));
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_2414251C0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;

  v5 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = a3[2];
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 9 + a1) & ~v8;
  v10 = (v8 + 9 + a2) & ~v8;
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  swift_retain();
  v11(v9, v10, v6);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[3] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v9) & ~v14;
  v17 = (v15 + v10) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v16, v17);
  v18 = *(_QWORD *)(a3[4] - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = *(_QWORD *)(v13 + 64) + v19;
  v21 = (v20 + v16) & ~v19;
  v22 = (v20 + v17) & ~v19;
  (*(void (**)(uint64_t, uint64_t))(v18 + 16))(v21, v22);
  v23 = *(_QWORD *)(v18 + 64) + 7;
  v24 = (_QWORD *)((v23 + v21) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_QWORD *)((v23 + v22) & 0xFFFFFFFFFFFFFFF8);
  *v24 = *v25;
  v24[1] = v25[1];
  v26 = (_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  v27 = (_QWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v26 = *v27;
  v26[1] = v27[1];
  v28 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  v29 = (_QWORD *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v28 = *v29;
  v28[1] = v29[1];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_241425328(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;

  v6 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(a3[2] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 9 + a1) & ~v8;
  v10 = (v8 + 9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v9, v10);
  v11 = *(_QWORD *)(v7 + 64);
  v12 = *(_QWORD *)(a3[3] - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v11 + v13;
  v15 = (v14 + v9) & ~v13;
  v16 = (v14 + v10) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v12 + 24))(v15, v16);
  v17 = *(_QWORD *)(v12 + 64);
  v18 = *(_QWORD *)(a3[4] - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = v17 + v19;
  v21 = (v20 + v15) & ~v19;
  v22 = (v20 + v16) & ~v19;
  (*(void (**)(uint64_t, uint64_t))(v18 + 24))(v21, v22);
  v23 = *(_QWORD *)(v18 + 64) + 7;
  v24 = (_QWORD *)((v23 + v21) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_QWORD *)((v23 + v22) & 0xFFFFFFFFFFFFFFF8);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_retain();
  swift_release();
  v26 = (_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  v27 = (_QWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v26 = *v27;
  v26[1] = v27[1];
  swift_retain();
  swift_release();
  v28 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  v29 = (_QWORD *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v28 = *v29;
  v28[1] = v29[1];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2414254B0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  _OWORD *v24;
  _OWORD *v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(_QWORD *)(a3[2] - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 9 + a1) & ~v6;
  v8 = (v6 + 9 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v7, v8);
  v9 = *(_QWORD *)(v5 + 64);
  v10 = *(_QWORD *)(a3[3] - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v9 + v11;
  v13 = (v12 + v7) & ~v11;
  v14 = (v12 + v8) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 32))(v13, v14);
  v15 = *(_QWORD *)(v10 + 64);
  v16 = *(_QWORD *)(a3[4] - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v15 + v17;
  v19 = (v18 + v13) & ~v17;
  v20 = (v18 + v14) & ~v17;
  (*(void (**)(uint64_t, uint64_t))(v16 + 32))(v19, v20);
  v21 = *(_QWORD *)(v16 + 64) + 7;
  v22 = (_OWORD *)((v21 + v19) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_OWORD *)((v21 + v20) & 0xFFFFFFFFFFFFFFF8);
  *v22 = *v23;
  v24 = (_OWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_OWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v24 = *v25;
  *(_OWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2414255CC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;

  v6 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v6;
  swift_release();
  v7 = *(_QWORD *)(a3[2] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 9 + a1) & ~v8;
  v10 = (v8 + 9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v9, v10);
  v11 = *(_QWORD *)(v7 + 64);
  v12 = *(_QWORD *)(a3[3] - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v11 + v13;
  v15 = (v14 + v9) & ~v13;
  v16 = (v14 + v10) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v12 + 40))(v15, v16);
  v17 = *(_QWORD *)(v12 + 64);
  v18 = *(_QWORD *)(a3[4] - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = v17 + v19;
  v21 = (v20 + v15) & ~v19;
  v22 = (v20 + v16) & ~v19;
  (*(void (**)(uint64_t, uint64_t))(v18 + 40))(v21, v22);
  v23 = *(_QWORD *)(v18 + 64) + 7;
  v24 = (_QWORD *)((v23 + v21) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_QWORD *)((v23 + v22) & 0xFFFFFFFFFFFFFFF8);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_release();
  v26 = (_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  v27 = (_QWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v26 = *v27;
  v26[1] = v27[1];
  swift_release();
  v28 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  v29 = (_QWORD *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v28 = *v29;
  v28[1] = v29[1];
  swift_release();
  return a1;
}

uint64_t sub_241425734(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  unint64_t v26;
  int v27;

  v5 = a3[2];
  v4 = a3[3];
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v4 - 8);
  v9 = *(_DWORD *)(v8 + 84);
  if (v7 <= v9)
    v10 = *(_DWORD *)(v8 + 84);
  else
    v10 = *(_DWORD *)(v6 + 84);
  v11 = a3[4];
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int *)(v12 + 84);
  if (v10 <= v13)
    v10 = *(_DWORD *)(v12 + 84);
  if (v10 <= 0x7FFFFFFE)
    v10 = 2147483646;
  if (!a2)
    return 0;
  v14 = *(unsigned __int8 *)(v6 + 80);
  v15 = *(_QWORD *)(v6 + 64);
  v16 = *(unsigned __int8 *)(v8 + 80);
  v17 = *(unsigned __int8 *)(v12 + 80);
  v18 = *(_QWORD *)(v8 + 64) + v17;
  v19 = *(_QWORD *)(v12 + 64) + 7;
  if (v10 < a2)
  {
    if (((((((((v19 + ((v18 + ((v15 + v16 + ((v14 + 9) & ~v14)) & ~v16)) & ~v17)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
           + 23) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v20 = 2;
    else
      v20 = a2 - v10 + 1;
    if (v20 >= 0x10000)
      v21 = 4;
    else
      v21 = 2;
    if (v20 < 0x100)
      v21 = 1;
    if (v20 >= 2)
      v22 = v21;
    else
      v22 = 0;
    __asm { BR              X22 }
  }
  v24 = (a1 + v14 + 9) & ~v14;
  if (v7 == v10)
  {
    v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    v13 = *(unsigned int *)(v6 + 84);
    v11 = v5;
    return v25(v24, v13, v11);
  }
  v24 = (v24 + v15 + v16) & ~v16;
  if (v9 == v10)
  {
    v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    v13 = *(unsigned int *)(v8 + 84);
    v11 = v4;
    return v25(v24, v13, v11);
  }
  v24 = (v18 + v24) & ~v17;
  if ((_DWORD)v13 == v10)
  {
    v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v25(v24, v13, v11);
  }
  v26 = *(_QWORD *)(((v19 + v24) & 0xFFFFFFFFFFFFF8) + 8);
  if (v26 >= 0xFFFFFFFF)
    LODWORD(v26) = -1;
  v27 = v26 - 1;
  if (v27 < 0)
    v27 = -1;
  return (v27 + 1);
}

void sub_241425928(unsigned int *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(a4[2] - 8);
  v6 = *(_QWORD *)(a4[3] - 8);
  if (*(_DWORD *)(v5 + 84) <= *(_DWORD *)(v6 + 84))
    v7 = *(_DWORD *)(v6 + 84);
  else
    v7 = *(_DWORD *)(v5 + 84);
  v8 = *(_QWORD *)(a4[4] - 8);
  if (v7 <= *(_DWORD *)(v8 + 84))
    v7 = *(_DWORD *)(v8 + 84);
  if (v7 <= 0x7FFFFFFE)
    v7 = 2147483646;
  if (v7 >= a3)
  {
    v10 = 0;
    if (a2 <= v7)
      goto LABEL_20;
  }
  else
  {
    if (((((((*(_DWORD *)(v8 + 64)
             + 7
             + ((*(_DWORD *)(v6 + 64)
               + *(unsigned __int8 *)(v8 + 80)
               + ((*(_DWORD *)(v5 + 64)
                 + *(unsigned __int8 *)(v6 + 80)
                 + ((*(unsigned __int8 *)(v5 + 80) + 9) & ~*(unsigned __int8 *)(v5 + 80))) & ~*(unsigned __int8 *)(v6 + 80))) & ~*(unsigned __int8 *)(v8 + 80))) & 0xFFFFFFF8)
           + 23) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v9 = a3 - v7 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 < 2)
      v10 = 0;
    if (a2 <= v7)
LABEL_20:
      __asm { BR              X24 }
  }
  if (((((((*(_DWORD *)(v8 + 64)
           + 7
           + ((*(_DWORD *)(v6 + 64)
             + *(unsigned __int8 *)(v8 + 80)
             + ((*(_DWORD *)(v5 + 64)
               + *(unsigned __int8 *)(v6 + 80)
               + ((*(unsigned __int8 *)(v5 + 80) + 9) & ~*(unsigned __int8 *)(v5 + 80))) & ~*(unsigned __int8 *)(v6 + 80))) & ~*(unsigned __int8 *)(v8 + 80))) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8)
       + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v11 = ~v7 + a2;
    bzero(a1, ((((((*(_QWORD *)(v8 + 64)+ 7+ ((*(_QWORD *)(v6 + 64)+ *(unsigned __int8 *)(v8 + 80)+ ((*(_QWORD *)(v5 + 64)+ *(unsigned __int8 *)(v6 + 80)+ ((*(unsigned __int8 *)(v5 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v11;
  }
  __asm { BR              X10 }
}

void sub_241425A98()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x241425B64);
}

void sub_241425AA0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x241425AA8);
  JUMPOUT(0x241425B64);
}

void sub_241425AF0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x241425B64);
}

void sub_241425AF8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x241425B64);
}

void sub_241425B00(uint64_t a1, int a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (a2)
  {
    if (v3 != v4 && v2 != v4)
      JUMPOUT(0x241425B0CLL);
    JUMPOUT(0x241425B20);
  }
  JUMPOUT(0x241425B64);
}

uint64_t sub_241425B80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t OpaqueTypeConformance2;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[2];
  _QWORD v43[2];
  _QWORD v44[2];
  _QWORD v45[2];
  _QWORD v46[2];
  _QWORD v47[2];
  _QWORD v48[2];
  _QWORD v49[2];
  _QWORD v50[2];
  _QWORD v51[2];
  _QWORD v52[2];
  _QWORD v53[2];
  _QWORD v54[2];
  _QWORD v55[2];
  _QWORD v56[2];
  _QWORD v57[2];
  _QWORD v58[2];
  _QWORD v59[3];

  v1 = *(_QWORD *)(a1 + 24);
  v33 = v1;
  v35 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257124620);
  v36 = sub_2414B3514();
  v37 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128560);
  v34 = sub_2414B3514();
  v2 = sub_2414B3514();
  v3 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128568);
  v4 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128570);
  v30 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128578);
  v31 = sub_2414B3514();
  v32 = sub_2414B3604();
  v29 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571245E8);
  sub_2414B3514();
  swift_getTupleTypeMetadata2();
  v5 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v5);
  v6 = sub_2414B4894();
  MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v6);
  v7 = sub_2414B3604();
  v8 = sub_2414B3514();
  v9 = sub_2414B3514();
  v10 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128580);
  v11 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128588);
  v12 = sub_2414B3514();
  v59[0] = v1;
  v59[1] = MEMORY[0x24BDEC438];
  v13 = MEMORY[0x24BDED308];
  v58[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v59);
  v58[1] = MEMORY[0x24BDEBF50];
  v14 = MEMORY[0x242695AE8](v13, v3, v58);
  v15 = MEMORY[0x24BDEDC10];
  v57[0] = v14;
  v57[1] = sub_2412C8FC4(&qword_257128590, &qword_257128568, MEMORY[0x24BDEDC10]);
  v56[0] = MEMORY[0x242695AE8](v13, v4, v57);
  v56[1] = sub_2412C8FC4(&qword_257128598, &qword_257128570, MEMORY[0x24BDEB950]);
  v16 = MEMORY[0x242695AE8](v13, v30, v56);
  v17 = MEMORY[0x24BDF0B90];
  v55[0] = v16;
  v55[1] = sub_2412C8FC4(&qword_2571285A0, &qword_257128578, MEMORY[0x24BDF0B90]);
  v54[0] = MEMORY[0x242695AE8](v13, v31, v55);
  v54[1] = MEMORY[0x242695AE8](v15, v32);
  v53[0] = MEMORY[0x242695AE8](v13, v29, v54);
  v53[1] = MEMORY[0x242695AE8](v15, v7);
  v52[0] = MEMORY[0x242695AE8](v13, v8, v53);
  v52[1] = MEMORY[0x24BDF0390];
  v51[0] = MEMORY[0x242695AE8](v13, v9, v52);
  v51[1] = MEMORY[0x24BDECC38];
  v50[0] = MEMORY[0x242695AE8](v13, v10, v51);
  v50[1] = sub_2412C8FC4(&qword_2571285A8, &qword_257128580, v17);
  v49[0] = MEMORY[0x242695AE8](v13, v11, v50);
  v49[1] = sub_2412C8FC4(&qword_2571285B0, &qword_257128588, v17);
  MEMORY[0x242695AE8](v13, v12, v49);
  v18 = sub_2414B3388();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254382878);
  v19 = sub_2414B3514();
  v48[0] = MEMORY[0x242695AE8](MEMORY[0x24BDEC6F8], v18);
  v48[1] = sub_2412C8FC4((unint64_t *)&qword_254382870, &qword_254382878, MEMORY[0x24BDF1028]);
  MEMORY[0x242695AE8](v13, v19, v48);
  v20 = sub_2414B3604();
  v21 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571285B8);
  v22 = sub_2414B3514();
  v47[0] = v33;
  v47[1] = MEMORY[0x24BDEEC40];
  v46[0] = MEMORY[0x242695AE8](v13, v35, v47);
  v46[1] = sub_2412C8FC4(&qword_257124618, &qword_257124620, MEMORY[0x24BDF09B0]);
  v45[0] = MEMORY[0x242695AE8](v13, v36, v46);
  v45[1] = sub_2413C65E4();
  v44[0] = MEMORY[0x242695AE8](v13, v37, v45);
  v44[1] = sub_2412C8FC4(&qword_2571285C0, &qword_257128560, v15);
  v43[0] = MEMORY[0x242695AE8](v13, v34, v44);
  v43[1] = MEMORY[0x242695AE8](v15, v20);
  v42[0] = MEMORY[0x242695AE8](v13, v21, v43);
  v42[1] = sub_2412C8FC4(&qword_2571285C8, &qword_2571285B8, v17);
  v23 = MEMORY[0x242695AE8](v13, v22, v42);
  v40 = v22;
  v41 = v23;
  MEMORY[0x242695A94](255, &v40, MEMORY[0x24BDF29A8], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126C00);
  v24 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257126BF0);
  v25 = sub_2414B3514();
  v40 = v22;
  v41 = v23;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v27 = MEMORY[0x24BDEFB48];
  v39[0] = OpaqueTypeConformance2;
  v39[1] = sub_2412C8FC4(&qword_257126C08, &qword_257126C00, MEMORY[0x24BDEFB48]);
  v38[0] = MEMORY[0x242695AE8](v13, v24, v39);
  v38[1] = sub_2412C8FC4(&qword_257126BF8, &qword_257126BF0, v27);
  return MEMORY[0x242695AE8](v13, v25, v38);
}

ValueMetadata *type metadata accessor for ParallaxHeaderIsInViewHierarchyKey()
{
  return &type metadata for ParallaxHeaderIsInViewHierarchyKey;
}

ValueMetadata *type metadata accessor for ParallaxScrollTargetOffsetRangeKey()
{
  return &type metadata for ParallaxScrollTargetOffsetRangeKey;
}

ValueMetadata *type metadata accessor for ParallaxAnimationProgressPreferenceKey()
{
  return &type metadata for ParallaxAnimationProgressPreferenceKey;
}

ValueMetadata *type metadata accessor for DefaultParallaxTopGradient()
{
  return &type metadata for DefaultParallaxTopGradient;
}

ValueMetadata *type metadata accessor for ParallaxHeaderHeightKey()
{
  return &type metadata for ParallaxHeaderHeightKey;
}

ValueMetadata *type metadata accessor for ParallaxHeaderMinYPreferenceKey()
{
  return &type metadata for ParallaxHeaderMinYPreferenceKey;
}

void sub_2414262E0()
{
  qword_257137120 = 0;
}

double sub_2414262EC@<D0>(_QWORD *a1@<X8>)
{
  return sub_2412CBF48(&qword_2571209B8, (double *)&qword_257137120, a1);
}

char *sub_24142630C(char *result, _QWORD *(*a2)(uint64_t *__return_ptr))
{
  char *v2;
  char v3;
  uint64_t v4;

  v2 = result;
  if ((*result & 1) != 0)
  {
    v3 = 1;
  }
  else
  {
    result = (char *)a2(&v4);
    v3 = v4;
  }
  *v2 = v3;
  return result;
}

void sub_241426354()
{
  xmmword_257137130 = 0uLL;
}

double sub_241426364@<D0>(_OWORD *a1@<X8>)
{
  double result;

  if (qword_2571209C0 != -1)
    swift_once();
  result = *(double *)&xmmword_257137130;
  *a1 = xmmword_257137130;
  return result;
}

_QWORD *sub_2414263B4(double *a1, _QWORD *(*a2)(double *__return_ptr))
{
  double v4;
  _QWORD *v5;
  double v6;
  double v7;
  _QWORD *result;
  double v9;
  double v10;
  double v11;

  v4 = *a1;
  v5 = a2(&v10);
  v6 = v4 + v10;
  v7 = a1[1];
  result = ((_QWORD *(*)(double *__return_ptr, _QWORD *))a2)(&v10, v5);
  v9 = v7 + v11;
  if (v6 > v7 + v11)
  {
    __break(1u);
  }
  else
  {
    *a1 = v6;
    a1[1] = v9;
  }
  return result;
}

void sub_241426428()
{
  qword_257137140 = 0;
}

double sub_241426434@<D0>(_QWORD *a1@<X8>)
{
  return sub_2412CBF48(&qword_2571209C8, (double *)&qword_257137140, a1);
}

double sub_241426450(double *a1, void (*a2)(double *__return_ptr))
{
  double result;
  double v4;

  a2(&v4);
  result = v4 + *a1;
  *a1 = result;
  return result;
}

uint64_t sub_241426490()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2414264A0()
{
  qword_257137148 = 0;
}

double sub_2414264AC@<D0>(_QWORD *a1@<X8>)
{
  return sub_2412CBF48(&qword_2571209D0, (double *)&qword_257137148, a1);
}

void sub_2414264C8()
{
  qword_257137150 = 0x3FD0000000000000;
}

void sub_2414264D8()
{
  qword_257137158 = 0x4049000000000000;
}

void sub_2414264E8()
{
  qword_257137160 = 0x4030000000000000;
}

void sub_2414264F8()
{
  qword_257137168 = 0x4049000000000000;
}

uint64_t sub_241426508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257122088);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2414B8AC0;
  sub_2414B463C();
  sub_2414B466C();
  swift_release();
  *(_QWORD *)(v0 + 32) = sub_2414B49C0();
  *(_QWORD *)(v0 + 40) = v1;
  sub_2414B463C();
  sub_2414B466C();
  swift_release();
  *(_QWORD *)(v0 + 48) = sub_2414B49C0();
  *(_QWORD *)(v0 + 56) = v2;
  sub_2414B463C();
  sub_2414B466C();
  swift_release();
  *(_QWORD *)(v0 + 64) = sub_2414B49C0();
  *(_QWORD *)(v0 + 72) = v3;
  result = MEMORY[0x24269424C](v0);
  qword_257137170 = result;
  return result;
}

double sub_2414265FC@<D0>(uint64_t a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  double result;
  __int128 v6;
  _BYTE v7[40];
  _OWORD v8[9];
  uint64_t v9;

  if (qword_2571209F8 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  sub_2414B4B4C();
  sub_2414B4B58();
  sub_2414B33B8();
  sub_2414B4A44();
  sub_24133FD80(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v8, 0.0, 1, 174.0, 0);
  sub_2413D94F4((uint64_t)v7);
  v2 = v8[7];
  *(_OWORD *)(a1 + 96) = v8[6];
  *(_OWORD *)(a1 + 112) = v2;
  *(_OWORD *)(a1 + 128) = v8[8];
  *(_QWORD *)(a1 + 144) = v9;
  v3 = v8[3];
  *(_OWORD *)(a1 + 32) = v8[2];
  *(_OWORD *)(a1 + 48) = v3;
  v4 = v8[5];
  *(_OWORD *)(a1 + 64) = v8[4];
  *(_OWORD *)(a1 + 80) = v4;
  result = *(double *)v8;
  v6 = v8[1];
  *(_OWORD *)a1 = v8[0];
  *(_OWORD *)(a1 + 16) = v6;
  return result;
}

void sub_241426730()
{
  sub_2414268EC();
}

double sub_24142673C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  result = -*(double *)(v1 + 16);
  *(_QWORD *)a1 = 0;
  *(double *)(a1 + 8) = result;
  return result;
}

unint64_t sub_241426750()
{
  unint64_t result;

  result = qword_257128680;
  if (!qword_257128680)
  {
    result = MEMORY[0x242695AE8](&unk_2414C6478, &type metadata for DefaultParallaxTopGradient);
    atomic_store(result, (unint64_t *)&qword_257128680);
  }
  return result;
}

uint64_t sub_241426794()
{
  return sub_24134E778((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_241424808);
}

uint64_t sub_2414267A0()
{
  return sub_24134E778((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2414248C8);
}

unint64_t sub_2414267AC()
{
  unint64_t result;

  result = qword_257128698;
  if (!qword_257128698)
  {
    result = MEMORY[0x242695AE8](&unk_2414C64C8, &type metadata for ParallaxAnimationProgressPreferenceKey);
    atomic_store(result, (unint64_t *)&qword_257128698);
  }
  return result;
}

unint64_t sub_2414267F0()
{
  unint64_t result;

  result = qword_2571286A0;
  if (!qword_2571286A0)
  {
    result = MEMORY[0x242695AE8](&unk_2414C6510, &type metadata for ParallaxScrollTargetOffsetRangeKey);
    atomic_store(result, (unint64_t *)&qword_2571286A0);
  }
  return result;
}

uint64_t sub_24142683C()
{
  return sub_24134E778((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_241424A78);
}

void sub_24142684C()
{
  type metadata accessor for ParallaxHeader();
}

void sub_241426890()
{
  sub_241424D9C();
}

void sub_2414268E0()
{
  sub_2414268EC();
}

void sub_2414268EC()
{
  type metadata accessor for ParallaxHeader();
}

uint64_t sub_24142693C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  return v11(v1, v2 + ((v9 + 64) & ~v9), v3, v4, v5, v6, v7, v8);
}

void sub_241426998()
{
  type metadata accessor for ParallaxHeader();
}

void sub_2414269E0()
{
  type metadata accessor for ParallaxHeader();
}

uint64_t sub_241426A10()
{
  return sub_241421D78();
}

uint64_t sub_241426A38()
{
  return sub_2412DC484(&qword_2571286B8, &qword_2571286C0, (uint64_t (*)(void))sub_241426A6C, MEMORY[0x24BDEDBB8]);
}

unint64_t sub_241426A6C()
{
  unint64_t result;

  result = qword_2571286C8;
  if (!qword_2571286C8)
  {
    result = MEMORY[0x242695AE8](MEMORY[0x24BDEC7C0], MEMORY[0x24BDEC7D0]);
    atomic_store(result, (unint64_t *)&qword_2571286C8);
  }
  return result;
}

uint64_t Alert.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Alert.message.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void Alert.style.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

uint64_t Alert.actions.getter()
{
  return swift_bridgeObjectRetain();
}

void __swiftcall Alert.init(title:message:style:actions:)(MediaCoreUI::Alert *__return_ptr retstr, Swift::String_optional title, Swift::String_optional message, MediaCoreUI::Alert::Style style, Swift::OpaquePointer actions)
{
  MediaCoreUI::Alert::Style v5;

  v5 = *(_BYTE *)style;
  retstr->title = title;
  retstr->message = message;
  retstr->style = v5;
  retstr->actions = actions;
}

BOOL static Alert.Style.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t Alert.Style.hash(into:)()
{
  return sub_2414B58D8();
}

uint64_t Alert.Action.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Alert.Action.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void Alert.Action.role.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

uint64_t Alert.Action.perform.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_2412D2824(v1);
  return v1;
}

void Alert.Action.init(id:title:role:perform:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v23 = a7;
  v15 = sub_2414B2B30();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *a5;
  if (!a2)
  {
    sub_2414B2B24();
    a1 = sub_2414B2B0C();
    a2 = v20;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  *(_QWORD *)a8 = a1;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = a3;
  *(_QWORD *)(a8 + 24) = a4;
  *(_BYTE *)(a8 + 32) = v19;
  v21 = v23;
  *(_QWORD *)(a8 + 40) = a6;
  *(_QWORD *)(a8 + 48) = v21;
}

unint64_t sub_241426CF4()
{
  unint64_t result;

  result = qword_2571286D0;
  if (!qword_2571286D0)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for Alert.Style, &type metadata for Alert.Style);
    atomic_store(result, (unint64_t *)&qword_2571286D0);
  }
  return result;
}

unint64_t sub_241426D3C()
{
  unint64_t result;

  result = qword_2571286D8;
  if (!qword_2571286D8)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for Alert.Action.Role, &type metadata for Alert.Action.Role);
    atomic_store(result, (unint64_t *)&qword_2571286D8);
  }
  return result;
}

uint64_t sub_241426D80()
{
  return MEMORY[0x24BEE0D10];
}

uint64_t sub_241426D8C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t destroy for Alert()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Alert(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Alert(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Alert(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Alert.Style()
{
  return &type metadata for Alert.Style;
}

uint64_t destroy for Alert.Action(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40))
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for Alert.Action(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = (_OWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    v8 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = v6;
    *(_QWORD *)(a1 + 48) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *v7;
  }
  return a1;
}

uint64_t assignWithCopy for Alert.Action(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a1 + 40);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  if (!v4)
  {
    if (v5)
    {
      v7 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v5;
      *(_QWORD *)(a1 + 48) = v7;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for Alert.Action(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a1 + 40);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  if (!v7)
  {
    if (v6)
    {
      v9 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v6;
      *(_QWORD *)(a1 + 48) = v9;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v8;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Alert.Action(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Alert.Action(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Alert.Action()
{
  return &type metadata for Alert.Action;
}

uint64_t _s11MediaCoreUI5AlertV5StyleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_241427240 + 4 * byte_2414C6615[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_241427274 + 4 * byte_2414C6610[v4]))();
}

uint64_t sub_241427274(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24142727C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241427284);
  return result;
}

uint64_t sub_241427290(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241427298);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24142729C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2414272A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Alert.Action.Role()
{
  return &type metadata for Alert.Action.Role;
}

uint64_t sub_2414272C8()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    type metadata accessor for NowPlayingRouteObserver();
    sub_2412C8030(&qword_25437FFB0, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingRouteObserver, (uint64_t)&unk_2414C67A0);
    sub_2414B2DA0();
    sub_2414B2DE8();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_241427360()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  swift_release();
  return v1;
}

void sub_2414273D0(void *a1)
{
  id v2;
  void *v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v2 = a1;
  swift_retain();
  sub_2414B2E48();
  sub_2412DA060(v3);

}

uint64_t sub_2414274A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI23NowPlayingRouteObserver__route;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380AD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_241427518()
{
  return type metadata accessor for NowPlayingRouteObserver();
}

uint64_t sub_241427520()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_241427544(uint64_t a1)
{
  uint64_t v1;

  return sub_2412D0220(a1, v1, (uint64_t)sub_2413022A8, (uint64_t)&block_descriptor_12_1);
}

uint64_t sub_241427574()
{
  return sub_2414272C8();
}

uint64_t View.allowsMotion(_:)()
{
  swift_getKeyPath();
  sub_2414B41C8();
  return swift_release();
}

uint64_t sub_2414275FC()
{
  unsigned __int8 v1;

  sub_241427774();
  sub_2414B3838();
  return v1;
}

uint64_t sub_241427634@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_241427774();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

uint64_t sub_241427680()
{
  sub_241427774();
  return sub_2414B3844();
}

uint64_t sub_2414276C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381330);
  v2 = sub_2414B3514();
  v4[0] = v1;
  v4[1] = sub_241427728();
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_241427728()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254381328;
  if (!qword_254381328)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381330);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_254381328);
  }
  return result;
}

unint64_t sub_241427774()
{
  unint64_t result;

  result = qword_2571286E0;
  if (!qword_2571286E0)
  {
    result = MEMORY[0x242695AE8](&unk_2414C685C, &_s15AllowsMotionKeyVN);
    atomic_store(result, (unint64_t *)&qword_2571286E0);
  }
  return result;
}

ValueMetadata *_s15AllowsMotionKeyVMa()
{
  return &_s15AllowsMotionKeyVN;
}

uint64_t sub_2414277C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  void *v15;
  char v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  int64_t v29;
  _OWORD v30[4];
  _OWORD v31[2];
  _OWORD v32[3];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254384FE8);
    v2 = sub_2414B56EC();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v29 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v29 << 6);
      goto LABEL_28;
    }
    v11 = v29 + 1;
    if (__OFADD__(v29, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v27)
      goto LABEL_37;
    v12 = *(_QWORD *)(v28 + 8 * v11);
    v13 = v29 + 1;
    if (!v12)
    {
      v13 = v29 + 2;
      if (v29 + 2 >= v27)
        goto LABEL_37;
      v12 = *(_QWORD *)(v28 + 8 * v13);
      if (!v12)
      {
        v13 = v29 + 3;
        if (v29 + 3 >= v27)
          goto LABEL_37;
        v12 = *(_QWORD *)(v28 + 8 * v13);
        if (!v12)
        {
          v13 = v29 + 4;
          if (v29 + 4 >= v27)
            goto LABEL_37;
          v12 = *(_QWORD *)(v28 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v29 = v13;
LABEL_28:
    v15 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * v10);
    v16 = *(_BYTE *)(*(_QWORD *)(a1 + 56) + v10);
    *(_QWORD *)&v32[0] = v15;
    LOBYTE(v31[0]) = v16;
    v17 = v15;
    swift_dynamicCast();
    v18 = *(_QWORD *)&v32[0];
    sub_2412D8D3C((_OWORD *)((char *)v32 + 8), v30);
    sub_2412D8D3C(v30, v32);
    sub_2412D8D3C(v32, v31);
    sub_2414B4D68();
    sub_2414B58CC();
    sub_2414B4DD4();
    v19 = sub_2414B58FC();
    result = swift_bridgeObjectRelease();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = v19 & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v8 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v8 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v18;
    result = (uint64_t)sub_2412D8D3C(v31, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v8));
    ++*(_QWORD *)(v2 + 16);
  }
  v14 = v29 + 5;
  if (v29 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_2413C648C();
    return v2;
  }
  v12 = *(_QWORD *)(v28 + 8 * v14);
  if (v12)
  {
    v13 = v29 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v27)
      goto LABEL_37;
    v12 = *(_QWORD *)(v28 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_241427B58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257121AA0);
    v2 = sub_2414B56EC();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_2412E4960(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_2412D8D3C(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_2412D8D3C(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_2412D8D3C(v36, v37);
    sub_2412D8D3C(v37, &v33);
    result = sub_2414B550C();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_2412D8D3C(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_2413C648C();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_241427F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;

  v9 = sub_241312070(MEMORY[0x24BEE4AF8]);
  *(_OWORD *)(v4 + 24) = 0u;
  *(_QWORD *)(v4 + 16) = v9;
  *(_OWORD *)(v4 + 40) = 0u;
  *(_QWORD *)(v4 + 72) = a1;
  *(_QWORD *)(v4 + 80) = a2;
  *(_QWORD *)(v4 + 56) = a3;
  *(_QWORD *)(v4 + 64) = a4;
  swift_bridgeObjectRetain();
  v10 = (void *)sub_2414B4D44();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v11 = (void *)sub_2414B4D44();
  swift_bridgeObjectRelease();
  v12 = PPSCreateTelemetryIdentifier();

  if (v12)
  {
    *((_QWORD *)&v15 + 1) = MEMORY[0x24BEE27D0];
    *(_QWORD *)&v14 = v12;
  }
  else
  {
    v14 = 0u;
    v15 = 0u;
  }
  swift_beginAccess();
  sub_241310358((uint64_t)&v14, v4 + 24);
  swift_endAccess();
  return v4;
}

void sub_24142802C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20[4];

  v2 = v1;
  swift_beginAccess();
  sub_241310310((uint64_t)(v1 + 3), (uint64_t)v20);
  if (v20[3])
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      if (qword_257120A10 != -1)
        swift_once();
      v4 = sub_2414B2CA4();
      __swift_project_value_buffer(v4, (uint64_t)qword_2571286F8);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      v5 = sub_2414B2C8C();
      v6 = sub_2414B5194();
      if (os_log_type_enabled(v5, v6))
      {
        v7 = swift_slowAlloc();
        v19 = swift_slowAlloc();
        v20[0] = v19;
        *(_DWORD *)v7 = 136446722;
        v8 = v2[9];
        v9 = v2[10];
        swift_bridgeObjectRetain();
        sub_2412E4890(v8, v9, v20);
        sub_2414B541C();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v7 + 12) = 2082;
        v11 = v2[7];
        v10 = v2[8];
        swift_bridgeObjectRetain();
        sub_2412E4890(v11, v10, v20);
        sub_2414B541C();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v7 + 22) = 2082;
        swift_bridgeObjectRetain();
        v12 = sub_2414B4C18();
        v14 = v13;
        swift_bridgeObjectRelease();
        sub_2412E4890(v12, v14, v20);
        sub_2414B541C();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2412C1000, v5, v6, "Will report subsystem=%{public}s category=%{public}s payload=%{public}s", (uint8_t *)v7, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x242695BD8](v19, -1, -1);
        MEMORY[0x242695BD8](v7, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_release_n();
      }
      sub_241427B58(a1);
      v16 = sub_2414B4C00();
      swift_bridgeObjectRelease();
      PPSSendTelemetry();
      goto LABEL_14;
    }
  }
  else
  {
    sub_24135C67C((uint64_t)v20);
  }
  if (qword_257120A10 != -1)
    swift_once();
  v15 = sub_2414B2CA4();
  __swift_project_value_buffer(v15, (uint64_t)qword_2571286F8);
  v16 = sub_2414B2C8C();
  v17 = sub_2414B51A0();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_2412C1000, v16, v17, "Telemetry identifier for power log is not available. Reporting is not possible.", v18, 2u);
    MEMORY[0x242695BD8](v18, -1, -1);
  }
LABEL_14:

}

uint64_t sub_241428418()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_24135C67C(v0 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PowerLogReporter()
{
  return objc_opt_self();
}

uint64_t sub_241428474(uint64_t a1)
{
  return sub_24142859C(a1, 0xD000000000000013, 0x80000002414D3AA0, &qword_2571286E8);
}

uint64_t sub_241428498(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 96) = a1;
  return swift_task_switch();
}

uint64_t sub_2414284B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  unint64_t v3;

  if (qword_257120A00 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 96);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571240B0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2414B72B0;
  *(_QWORD *)(inited + 32) = 0xD000000000000013;
  *(_QWORD *)(inited + 40) = 0x80000002414D3AA0;
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(inited + 48) = v1;
  v3 = sub_241312070(inited);
  sub_24142802C(v3);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241428578(uint64_t a1)
{
  return sub_24142859C(a1, 0xD000000000000016, 0x80000002414D3AC0, &qword_2571286F0);
}

uint64_t sub_24142859C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t result;

  type metadata accessor for PowerLogReporter();
  v7 = swift_allocObject();
  result = sub_241427F1C(0x61447265646E6552, 0xEA00000000006174, a2, a3);
  *a4 = v7;
  return result;
}

uint64_t sub_241428608(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 96) = a1;
  return swift_task_switch();
}

uint64_t sub_241428620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  unint64_t v3;

  if (qword_257120A08 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 96);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571240B0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2414B72B0;
  *(_QWORD *)(inited + 32) = 0xD000000000000016;
  *(_QWORD *)(inited + 40) = 0x80000002414D3AC0;
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(inited + 48) = v1;
  v3 = sub_241312070(inited);
  sub_24142802C(v3);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2414286E8()
{
  uint64_t v0;

  v0 = sub_2414B2CA4();
  __swift_allocate_value_buffer(v0, qword_2571286F8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2571286F8);
  return sub_2414B2C98();
}

uint64_t sub_24142875C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t);
  uint64_t v16;

  v7 = _s11ContentViewVMa_0(0, a1, a2, a3);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v16 - v12;
  sub_241428860(a1, a2, (uint64_t)v10);
  MEMORY[0x242695AE8](&unk_2414C6B48, v7);
  sub_2412FBF34((uint64_t)v10, v7, (uint64_t)v13);
  v14 = *(void (**)(char *, uint64_t))(v8 + 8);
  v14(v10, v7);
  sub_2412EEA1C((uint64_t)v13, v7, a4);
  return ((uint64_t (*)(char *, uint64_t))v14)(v13, v7);
}

uint64_t sub_241428860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;

  *(_QWORD *)a3 = sub_2414B3658();
  *(_QWORD *)(a3 + 8) = v6;
  _s5QueueCMa();
  sub_2412C8030(&qword_25437F1A8, (uint64_t (*)(uint64_t))_s5QueueCMa, (uint64_t)&unk_2414C2E08);
  *(_QWORD *)(a3 + 16) = sub_2414B3658();
  *(_QWORD *)(a3 + 24) = v7;
  _s17TransportControlsCMa();
  sub_2412C8030((unint64_t *)&qword_25437EDE0, (uint64_t (*)(uint64_t))_s17TransportControlsCMa, (uint64_t)&unk_2414C0048);
  *(_QWORD *)(a3 + 32) = sub_2414B3658();
  *(_QWORD *)(a3 + 40) = v8;
  *(_QWORD *)(a3 + 48) = swift_getKeyPath();
  *(_OWORD *)(a3 + 56) = 0u;
  *(_OWORD *)(a3 + 72) = 0u;
  *(_OWORD *)(a3 + 88) = 0u;
  *(_OWORD *)(a3 + 104) = 0u;
  *(_WORD *)(a3 + 120) = 0;
  *(_QWORD *)(a3 + 128) = swift_getKeyPath();
  *(_BYTE *)(a3 + 136) = 0;
  *(_QWORD *)(a3 + 144) = swift_getKeyPath();
  *(_QWORD *)(a3 + 152) = 0;
  *(_BYTE *)(a3 + 160) = 0;
  v10 = _s11ContentViewVMa_0(0, a1, a2, v9);
  v11 = (uint64_t *)(a3 + *(int *)(v10 + 56));
  *v11 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  swift_storeEnumTagMultiPayload();
  v12 = (uint64_t *)(a3 + *(int *)(v10 + 60));
  *v12 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2414289D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return sub_24142875C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2, a3);
}

uint64_t sub_2414289DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t AssociatedConformanceWitness;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (**v70)(char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t KeyPath;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t (**v90)();
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(char *, uint64_t, uint64_t);
  uint64_t v113;
  void (**v114)(char *, uint64_t);
  uint64_t result;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  void (**v127)(char *, uint64_t);
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD v160[3];
  uint64_t v161[3];
  _QWORD v162[2];
  _QWORD v163[5];
  uint64_t v164;
  unint64_t v165;
  _QWORD v166[2];
  _QWORD v167[2];
  _QWORD v168[3];
  uint64_t v169;
  _QWORD v170[2];
  _QWORD v171[2];
  _QWORD v172[2];
  _QWORD v173[2];
  uint64_t v174;

  v148 = a3;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  _s18DefaultContentViewVMa_0(255, v3, v4, a2);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128848);
  sub_2414B3514();
  v6 = _s10HeaderViewVMa(255, v3, v4, v5);
  v7 = sub_2414B53B0();
  v174 = MEMORY[0x242695AE8](&unk_2414C5338, v6);
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v7, &v174);
  sub_2414B3604();
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128850);
  sub_2414B3514();
  _s28ControlsAndFooterButtonsViewVMa(255, v3, v4, v8);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128858);
  sub_2414B3514();
  sub_2414B3514();
  swift_getTupleTypeMetadata2();
  v9 = sub_2414B4B1C();
  v132 = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v9);
  v133 = v9;
  v10 = sub_2414B4894();
  v135 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v134 = (char *)&v116 - v11;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381070);
  v137 = v10;
  v12 = sub_2414B3514();
  v141 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v139 = (char *)&v116 - v13;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380FD0);
  v142 = v12;
  v147 = sub_2414B3514();
  v143 = *(_QWORD *)(v147 - 8);
  MEMORY[0x24BDAC7A8](v147);
  v146 = (char *)&v116 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v140 = (char *)&v116 - v16;
  MEMORY[0x24BDAC7A8](v17);
  v145 = (uint64_t)&v116 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257128860);
  v130 = *(_QWORD *)(v19 - 8);
  v131 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v122 = (uint64_t)&v116 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for NowPlayingContrastSensitiveBackdrop();
  MEMORY[0x24BDAC7A8](v21);
  v117 = (uint64_t *)((char *)&v116 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v23);
  v118 = (uint64_t)&v116 - v24;
  v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_257128868);
  MEMORY[0x24BDAC7A8](v121);
  v119 = (uint64_t)&v116 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_257128870);
  MEMORY[0x24BDAC7A8](v26);
  v120 = (char *)&v116 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_257128878);
  MEMORY[0x24BDAC7A8](v136);
  v138 = (uint64_t)&v116 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v151 = (uint64_t)&v116 - v30;
  v152 = v3;
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381280);
  v31 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2543812C0);
  v32 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_257122900);
  v33 = sub_2414B3514();
  v34 = sub_2414B3514();
  v123 = sub_2414B53B0();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v36 = MEMORY[0x24BDF1028];
  v37 = sub_2412C8FC4(&qword_254381278, &qword_254381280, MEMORY[0x24BDF1028]);
  v173[0] = AssociatedConformanceWitness;
  v173[1] = v37;
  v38 = MEMORY[0x24BDED308];
  v39 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v31, v173);
  v40 = sub_2412C8FC4(&qword_2543812B8, (uint64_t *)&unk_2543812C0, v36);
  v172[0] = v39;
  v172[1] = v40;
  v41 = MEMORY[0x242695AE8](v38, v32, v172);
  v42 = sub_2412C8FC4((unint64_t *)&qword_2571228F8, qword_257122900, MEMORY[0x24BDEFB48]);
  v171[0] = v41;
  v171[1] = v42;
  v170[0] = MEMORY[0x242695AE8](v38, v33, v171);
  v170[1] = MEMORY[0x24BDF1050];
  v169 = MEMORY[0x242695AE8](v38, v34, v170);
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v123, &v169);
  v124 = sub_2414B3A6C();
  v43 = sub_2414B3514();
  v125 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v45 = (char *)&v116 - v44;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571278D0);
  v46 = sub_2414B3514();
  v127 = *(void (***)(char *, uint64_t))(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v48 = (char *)&v116 - v47;
  sub_2414B3DB4();
  v49 = sub_2414B3514();
  v149 = *(_QWORD *)(v49 - 8);
  v150 = v49;
  MEMORY[0x24BDAC7A8](v49);
  v129 = (char *)&v116 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v51);
  v126 = (char *)&v116 - v52;
  MEMORY[0x24BDAC7A8](v53);
  v153 = (uint64_t)&v116 - v54;
  v168[2] = sub_2414B4648();
  v154 = v152;
  v155 = v4;
  v144 = v4;
  v55 = v128;
  v156 = v128;
  sub_2414B4A44();
  v56 = MEMORY[0x24BDF3E20];
  sub_2414B4120();
  swift_release();
  v164 = 0x746E65746E6F63;
  v165 = 0xE700000000000000;
  v57 = *(_QWORD *)(v55 + 128);
  v58 = *(_BYTE *)(v55 + 136);
  sub_2412C7080(v57, v58);
  sub_2412F0F50(v57, v58);
  sub_2412C821C(v57, v58);
  sub_2414B3CA0();
  sub_2414B4B64();
  v59 = MEMORY[0x242695AE8](MEMORY[0x24BDEF370], v124);
  v168[0] = v56;
  v168[1] = v59;
  v60 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v43, v168);
  sub_24140DA48();
  sub_2414B43D8();
  (*(void (**)(char *, uint64_t))(v125 + 8))(v45, v43);
  v61 = *(_QWORD *)(v55 + 144);
  v62 = *(_QWORD *)(v55 + 152);
  LOBYTE(v43) = *(_BYTE *)(v55 + 160);
  sub_2412C72E4(v61, v62, v43);
  sub_2412EEDF4(v61, v62, v43, &v164);
  sub_2412C822C(v61, v62, v43);
  if (v165)
    swift_bridgeObjectRelease();
  v63 = sub_2412C8FC4(&qword_2571278C8, &qword_2571278D0, MEMORY[0x24BDEFFA0]);
  v167[0] = v60;
  v167[1] = v63;
  v64 = MEMORY[0x24BDED308];
  v65 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v46, v167);
  v66 = (uint64_t)v126;
  sub_2414B439C();
  v127[1](v48, v46);
  v67 = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v166[0] = v65;
  v166[1] = v67;
  v68 = v150;
  v69 = MEMORY[0x242695AE8](v64, v150, v166);
  sub_2412FBF34(v66, v68, v153);
  v70 = *(void (***)(char *, uint64_t))(v149 + 8);
  ((void (*)(uint64_t, uint64_t))v70)(v66, v68);
  v71 = *(_QWORD *)(v55 + 32);
  if (!v71)
    goto LABEL_9;
  v126 = (char *)v69;
  v127 = v70;
  swift_beginAccess();
  if ((*(_BYTE *)(v71 + 58) & 1) != 0)
  {
    v72 = 1;
    v73 = v139;
    v74 = v151;
    v75 = v131;
  }
  else
  {
    KeyPath = swift_getKeyPath();
    v77 = (uint64_t)v117;
    *v117 = KeyPath;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    swift_storeEnumTagMultiPayload();
    v78 = v118;
    sub_2413D1D7C(v77, v118);
    v79 = *(_QWORD *)(v55 + 128);
    v80 = *(_BYTE *)(v55 + 136);
    sub_2412C7080(v79, v80);
    v81 = sub_2412F0F50(v79, v80);
    sub_2412C821C(v79, v80);
    LODWORD(v79) = sub_2414B3CA0();
    sub_2414B4B64();
    v83 = v82;
    v85 = v84;
    v86 = v119;
    sub_2413ED154(v78, v119);
    v87 = v86 + *(int *)(v121 + 36);
    *(_QWORD *)v87 = 0x736C6F72746E6F63;
    *(_QWORD *)(v87 + 8) = 0xE800000000000000;
    *(_QWORD *)(v87 + 16) = v81;
    *(_DWORD *)(v87 + 24) = v79;
    *(_QWORD *)(v87 + 32) = v83;
    *(_QWORD *)(v87 + 40) = v85;
    *(_BYTE *)(v87 + 48) = 0;
    sub_2413ED198(v78);
    sub_24142FF50();
    v88 = (uint64_t)v120;
    sub_2414B439C();
    sub_2412CBE78(v86, &qword_257128868);
    v89 = v122;
    sub_2412DC3FC(v88, v122, &qword_257128870);
    v75 = v131;
    v90 = (uint64_t (**)())(v89 + *(int *)(v131 + 36));
    *v90 = sub_2413EC5C8;
    v90[1] = 0;
    sub_2412CBE78(v88, &qword_257128870);
    v74 = v151;
    sub_2412EAEA4(v89, v151, &qword_257128860);
    v72 = 0;
    v73 = v139;
  }
  v91 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v130 + 56))(v74, v72, 1, v75);
  MEMORY[0x24BDAC7A8](v91);
  v92 = v144;
  *(&v116 - 4) = v152;
  *(&v116 - 3) = v92;
  *(&v116 - 2) = v55;
  sub_2414B3964();
  v93 = v134;
  sub_2414B4888();
  v94 = v137;
  v95 = MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v137);
  sub_241473708();
  (*(void (**)(char *, uint64_t))(v135 + 8))(v93, v94);
  sub_2414B4A80();
  v96 = *(_QWORD *)(v55 + 32);
  if (v96)
  {
    swift_beginAccess();
    LOBYTE(v161[0]) = *(_BYTE *)(v96 + 58);
    v97 = sub_2412C8FC4(&qword_254381068, &qword_254381070, MEMORY[0x24BDEFB48]);
    v163[0] = v95;
    v163[1] = v97;
    v98 = MEMORY[0x24BDED308];
    v99 = v142;
    v100 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v142, v163);
    v101 = (uint64_t)v140;
    sub_2414B457C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v141 + 8))(v73, v99);
    v102 = sub_2412C8FC4((unint64_t *)&qword_254380FC0, &qword_254380FD0, MEMORY[0x24BDEEC10]);
    v162[0] = v100;
    v162[1] = v102;
    v103 = v147;
    v104 = MEMORY[0x242695AE8](v98, v147, v162);
    v105 = v145;
    sub_2412FBF34(v101, v103, v145);
    v106 = v143;
    v107 = *(void (**)(uint64_t, uint64_t))(v143 + 8);
    v107(v101, v103);
    v108 = v150;
    v109 = (uint64_t)v129;
    (*(void (**)(char *, uint64_t, uint64_t))(v149 + 16))(v129, v153, v150);
    v161[0] = v109;
    v110 = v151;
    v111 = v138;
    sub_2412DC3FC(v151, v138, &qword_257128878);
    v161[1] = v111;
    v112 = *(void (**)(char *, uint64_t, uint64_t))(v106 + 16);
    v113 = (uint64_t)v146;
    v112(v146, v105, v103);
    v161[2] = v113;
    v160[0] = v108;
    v160[1] = v136;
    v160[2] = v103;
    v157 = v126;
    v158 = sub_24143010C(&qword_257128888, &qword_257128878, (uint64_t (*)(void))sub_24142FFF8);
    v159 = v104;
    sub_2412F68CC(v161, 3uLL, (uint64_t)v160);
    v107(v105, v103);
    sub_2412CBE78(v110, &qword_257128878);
    v114 = v127;
    ((void (*)(uint64_t, uint64_t))v127)(v153, v108);
    v107(v113, v103);
    sub_2412CBE78(v111, &qword_257128878);
    return ((uint64_t (*)(uint64_t, uint64_t))v114)(v109, v108);
  }
  else
  {
LABEL_9:
    _s17TransportControlsCMa();
    sub_2412C8030((unint64_t *)&qword_25437EDE0, (uint64_t (*)(uint64_t))_s17TransportControlsCMa, (uint64_t)&unk_2414C0048);
    result = sub_2414B364C();
    __break(1u);
  }
  return result;
}

uint64_t sub_241429838@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  ValueMetadata *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD *__return_ptr, uint64_t, uint64_t);
  unint64_t v38;
  uint64_t AssociatedConformanceWitness;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v63[5];
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  ValueMetadata *v91;
  uint64_t v92;
  _QWORD v93[10];
  uint64_t v94;
  _QWORD v95[2];
  _QWORD v96[2];
  _QWORD v97[2];
  _QWORD v98[2];
  _QWORD v99[2];
  _QWORD v100[2];
  _QWORD v101[2];
  _QWORD v102[2];
  ValueMetadata *v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;

  v83 = a4;
  v72 = sub_2414B3934();
  v70 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v68 = (char *)v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v67 = (char *)v63 - v9;
  v64 = sub_2414B2F8C();
  v78 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v63[4] = (char *)v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = a3;
  v87 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v66 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v65 = (char *)v63 - v12;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381280);
  v13 = sub_2414B3514();
  v69 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v84 = (char *)v63 - v14;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2543812C0);
  v88 = v13;
  v15 = sub_2414B3514();
  v73 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v71 = (char *)v63 - v16;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_257122900);
  v86 = v15;
  v17 = sub_2414B3514();
  v76 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v74 = (char *)v63 - v18;
  v19 = sub_2414B3514();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v75 = (char *)v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v77 = (char *)v63 - v23;
  v24 = sub_2414B53B0();
  v80 = *(_QWORD *)(v24 - 8);
  v81 = v24;
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v82 = (uint64_t)v63 - v28;
  v29 = *(_QWORD *)(a1 + 144);
  v30 = *(_QWORD *)(a1 + 152);
  v31 = *(_BYTE *)(a1 + 160);
  sub_2412C72E4(v29, v30, v31);
  sub_2412EEDF4(v29, v30, v31, (uint64_t *)&v103);
  sub_2412C822C(v29, v30, v31);
  v32 = v104;
  v33 = MEMORY[0x24BDF1050];
  if (v104)
  {
    v63[1] = v20;
    v63[2] = v26;
    v63[3] = v17;
    v34 = v103;
    v35 = v79;
    v36 = v87;
    sub_2412C84FC(*(_QWORD *)a1);
    v37 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v35 + 296);
    swift_unknownObjectRetain();
    v37(v93, v36, v35);
    swift_unknownObjectRelease();
    v89 = v93[0];
    v90 = v93[1];
    v91 = v34;
    v92 = v32;
    v38 = sub_2413826B8();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v103 = &type metadata for NowPlayingHostedContentID;
    v104 = AssociatedTypeWitness;
    v63[0] = AssociatedTypeWitness;
    v105 = v38;
    v106 = AssociatedConformanceWitness;
    type metadata accessor for ContentLookup();
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v26, 1, 1, v19);
  v40 = swift_getAssociatedConformanceWitness();
  v41 = MEMORY[0x24BDF1028];
  v42 = sub_2412C8FC4(&qword_254381278, &qword_254381280, MEMORY[0x24BDF1028]);
  v85 = v40;
  v102[0] = v40;
  v102[1] = v42;
  v43 = MEMORY[0x24BDED308];
  v44 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v88, v102);
  v45 = sub_2412C8FC4(&qword_2543812B8, (uint64_t *)&unk_2543812C0, v41);
  v101[0] = v44;
  v101[1] = v45;
  v46 = v86;
  v47 = MEMORY[0x242695AE8](v43, v86, v101);
  v48 = sub_2412C8FC4((unint64_t *)&qword_2571228F8, qword_257122900, MEMORY[0x24BDEFB48]);
  v100[0] = v47;
  v100[1] = v48;
  v99[0] = MEMORY[0x242695AE8](v43, v17, v100);
  v99[1] = v33;
  MEMORY[0x242695AE8](v43, v19, v99);
  v49 = v17;
  v50 = v80;
  v51 = v81;
  v52 = v26;
  v53 = v82;
  sub_2412F65F0((uint64_t)v26, v82);
  v54 = *(void (**)(char *, uint64_t))(v50 + 8);
  v54(v52, v51);
  v55 = MEMORY[0x24BDF1028];
  v56 = sub_2412C8FC4(&qword_254381278, &qword_254381280, MEMORY[0x24BDF1028]);
  v98[0] = v85;
  v98[1] = v56;
  v57 = MEMORY[0x24BDED308];
  v58 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v88, v98);
  v59 = sub_2412C8FC4(&qword_2543812B8, (uint64_t *)&unk_2543812C0, v55);
  v97[0] = v58;
  v97[1] = v59;
  v60 = MEMORY[0x242695AE8](v57, v46, v97);
  v61 = sub_2412C8FC4((unint64_t *)&qword_2571228F8, qword_257122900, MEMORY[0x24BDEFB48]);
  v96[0] = v60;
  v96[1] = v61;
  v95[0] = MEMORY[0x242695AE8](v57, v49, v96);
  v95[1] = MEMORY[0x24BDF1050];
  v94 = MEMORY[0x242695AE8](v57, v19, v95);
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v51, &v94);
  sub_2412EEA1C(v53, v51, v83);
  return ((uint64_t (*)(uint64_t, uint64_t))v54)(v53, v51);
}

double MCUINamespace<A>.nowPlayingHorizontalPadding.getter()
{
  double v1;

  sub_24142A2D0();
  sub_2414B3838();
  return v1;
}

unint64_t sub_24142A2D0()
{
  unint64_t result;

  result = qword_257128840;
  if (!qword_257128840)
  {
    result = MEMORY[0x242695AE8](&unk_2414C6900, &type metadata for NowPlayingHorizontalPaddingKey);
    atomic_store(result, (unint64_t *)&qword_257128840);
  }
  return result;
}

double sub_24142A314@<D0>(double *a1@<X8>)
{
  double result;
  double v3;

  sub_24142A2D0();
  sub_2414B3838();
  result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_24142A360()
{
  sub_24142A2D0();
  return sub_2414B3844();
}

uint64_t MCUINamespace<A>.nowPlayingHorizontalPadding.setter()
{
  sub_24142A2D0();
  return sub_2414B3844();
}

uint64_t sub_24142A3E0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t);
  _BYTE *v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v77;
  uint64_t result;
  _BYTE v79[12];
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _BYTE *v93;
  _BYTE *v94;
  _BYTE *v95;
  _BYTE *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _BYTE *v101;
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _BYTE *v106;
  _BYTE *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  _BYTE *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD v129[2];
  uint64_t v130[2];
  _QWORD v131[2];
  _QWORD v132[5];
  _QWORD v133[2];
  _QWORD v134[2];
  _QWORD v135[2];
  _BYTE v136[408];
  _QWORD v137[2];
  _BYTE v138[280];
  uint64_t v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  uint64_t v144;
  char v145;
  char v146;
  __int128 v147;
  unsigned __int8 v148;
  uint64_t v149;
  uint64_t v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  uint64_t v155;
  char v156;
  char v157;
  __int128 v158;
  unsigned __int8 v159;
  uint64_t v160;
  _BYTE v161[280];
  _BYTE v162[408];
  uint64_t v163;
  _BYTE v164[280];
  _BYTE v165[424];

  v109 = a5;
  v8 = _s28ControlsAndFooterButtonsViewVMa(0, a2, a3, a4);
  v99 = *(_QWORD *)(v8 - 8);
  v97 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v95 = &v79[-v9];
  v10 = sub_2414B3514();
  v100 = *(_QWORD *)(v10 - 8);
  v98 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v96 = &v79[-v11];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128858);
  v12 = sub_2414B3514();
  v103 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v94 = &v79[-v13];
  v104 = v14;
  v108 = sub_2414B3514();
  v105 = *(_QWORD *)(v108 - 8);
  MEMORY[0x24BDAC7A8](v108);
  v107 = &v79[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v16);
  v102 = &v79[-v17];
  MEMORY[0x24BDAC7A8](v18);
  v106 = &v79[-v19];
  v21 = _s18DefaultContentViewVMa_0(255, a2, a3, v20);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128848);
  v88 = sub_2414B3514();
  v22 = a2;
  v24 = _s10HeaderViewVMa(255, a2, a3, v23);
  v25 = sub_2414B53B0();
  v163 = MEMORY[0x242695AE8](&unk_2414C5338, v24);
  v90 = v25;
  v89 = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v25, &v163);
  v92 = sub_2414B3604();
  v91 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128850);
  v114 = sub_2414B3514();
  v112 = *(_QWORD *)(v114 - 8);
  MEMORY[0x24BDAC7A8](v114);
  v101 = &v79[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v27);
  v93 = &v79[-v28];
  MEMORY[0x24BDAC7A8](v29);
  v113 = &v79[-v30];
  v31 = *a1;
  v32 = a1;
  v111 = a1;
  sub_2412C84FC(v31);
  v33 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 208);
  swift_unknownObjectRetain();
  v34 = v33(v22, a3);
  swift_unknownObjectRelease();
  v87 = v22;
  v110 = a3;
  sub_24142AD9C(v34, (uint64_t)&v150);
  v140 = v151;
  v141 = v152;
  v142 = v153;
  v143 = v154;
  v139 = v150;
  v144 = v155;
  v145 = v156;
  v146 = v157;
  v147 = v158;
  v148 = v159;
  v149 = v160;
  sub_2414B4A2C();
  v124 = v22;
  v125 = a3;
  v126 = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571288A0);
  v86 = MEMORY[0x242695AE8](&unk_2414C6CA0, v21);
  sub_24143010C(&qword_2571288A8, &qword_2571288A0, (uint64_t (*)(void))sub_241430170);
  sub_2414B4504();
  v35 = v140;
  v36 = v141;
  v37 = v142;
  v83 = v143;
  v84 = *((_QWORD *)&v142 + 1);
  v38 = *((_QWORD *)&v143 + 1);
  v39 = v144;
  LOBYTE(v34) = v145;
  LOBYTE(v22) = v146;
  v81 = *((_QWORD *)&v147 + 1);
  v82 = v147;
  v80 = v148;
  v85 = v149;
  swift_release();
  sub_2412C823C(v35, *((uint64_t *)&v35 + 1), v36, *((uint64_t *)&v36 + 1), v37, v84, v83, v38, v39, v34, v22);
  sub_2412C822C(v82, v81, v80);
  swift_release();
  memcpy(v138, v161, sizeof(v138));
  sub_2414B4A2C();
  v40 = v87;
  v41 = v110;
  v42 = v111;
  v121 = v87;
  v122 = v110;
  v123 = v111;
  v43 = MEMORY[0x24BDEDC10];
  v44 = sub_2412C8FC4(&qword_2571288E0, &qword_257128848, MEMORY[0x24BDEDC10]);
  v137[0] = v86;
  v137[1] = v44;
  v45 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v88, v137);
  sub_2414B4504();
  memcpy(v164, v138, sizeof(v164));
  sub_2414302AC((uint64_t)v164);
  memcpy(v136, v162, sizeof(v136));
  v118 = v40;
  v119 = v41;
  v120 = v42;
  sub_2414B4A44();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571288E8);
  v46 = MEMORY[0x242695AE8](v43, v92);
  v135[0] = v45;
  v135[1] = v46;
  v47 = MEMORY[0x24BDED308];
  v48 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v91, v135);
  sub_24143007C(&qword_2571288F0, &qword_2571288E8, (uint64_t (*)(void))sub_241430440);
  v49 = (uint64_t)v93;
  sub_2414B4120();
  memcpy(v165, v136, 0x198uLL);
  sub_2414304C4((uint64_t)v165);
  v50 = sub_2412C8FC4(&qword_257128908, &qword_257128850, MEMORY[0x24BDEF370]);
  v134[0] = v48;
  v134[1] = v50;
  v51 = v114;
  v92 = MEMORY[0x242695AE8](v47, v114, v134);
  sub_2412FBF34(v49, v51, (uint64_t)v113);
  v52 = *(void (**)(uint64_t, uint64_t))(v112 + 8);
  v52(v49, v51);
  v53 = v95;
  v54 = v110;
  sub_24142BC04(v40, v110, (uint64_t)v95);
  sub_2414B3E50();
  v55 = v97;
  v56 = MEMORY[0x242695AE8](&unk_2414C6C50, v97);
  v57 = v96;
  sub_2414B4528();
  (*(void (**)(_BYTE *, uint64_t))(v99 + 8))(v53, v55);
  v115 = v40;
  v116 = v54;
  v58 = v111;
  v117 = v111;
  sub_2414B4A44();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257128910);
  v133[0] = v56;
  v133[1] = MEMORY[0x24BDECC60];
  v59 = v98;
  v60 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v98, v133);
  sub_241430760();
  v61 = v94;
  sub_2414B4120();
  (*(void (**)(_BYTE *, uint64_t))(v100 + 8))(v57, v59);
  if (v58[4])
  {
    swift_beginAccess();
    sub_2414B4A44();
    v62 = sub_2412C8FC4(&qword_257128940, &qword_257128858, MEMORY[0x24BDEF370]);
    v132[0] = v60;
    v132[1] = v62;
    v63 = MEMORY[0x24BDED308];
    v64 = v104;
    v65 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v104, v132);
    v66 = (uint64_t)v102;
    sub_2414B44A4();
    (*(void (**)(_BYTE *, uint64_t))(v103 + 8))(v61, v64);
    v131[0] = v65;
    v131[1] = MEMORY[0x24BDEBEE0];
    v67 = v63;
    v68 = v108;
    v69 = MEMORY[0x242695AE8](v67, v108, v131);
    v70 = v106;
    sub_2412FBF34(v66, v68, (uint64_t)v106);
    v71 = v105;
    v72 = *(void (**)(uint64_t, uint64_t))(v105 + 8);
    v72(v66, v68);
    v73 = v113;
    v74 = (uint64_t)v101;
    v75 = v114;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v112 + 16))(v101, v113, v114);
    v130[0] = v74;
    v76 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v71 + 16);
    v77 = (uint64_t)v107;
    v76(v107, v70, v68);
    v130[1] = v77;
    v129[0] = v75;
    v129[1] = v68;
    v127 = v92;
    v128 = v69;
    sub_2412F68CC(v130, 2uLL, (uint64_t)v129);
    v72((uint64_t)v70, v68);
    v52((uint64_t)v73, v75);
    v72(v77, v68);
    return ((uint64_t (*)(uint64_t, uint64_t))v52)(v74, v75);
  }
  else
  {
    _s17TransportControlsCMa();
    sub_2412C8030((unint64_t *)&qword_25437EDE0, (uint64_t (*)(uint64_t))_s17TransportControlsCMa, (uint64_t)&unk_2414C0048);
    result = sub_2414B364C();
    __break(1u);
  }
  return result;
}

uint64_t sub_24142AD9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  *(_QWORD *)a2 = a1;
  *(_QWORD *)(a2 + 8) = swift_getKeyPath();
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_WORD *)(a2 + 80) = 0;
  *(_QWORD *)(a2 + 88) = swift_getKeyPath();
  *(_QWORD *)(a2 + 96) = 0;
  *(_BYTE *)(a2 + 104) = 0;
  sub_2414B31F0();
  sub_2414B4A68();
  sub_2414B4A8C();
  swift_release();
  sub_2414B3214();
  swift_release();
  swift_release();
  sub_2414B31E4();
  if (qword_257120730 != -1)
    swift_once();
  swift_retain();
  sub_2414B3214();
  swift_release();
  swift_release();
  sub_2414B31FC();
  swift_release();
  swift_release();
  sub_2414B31F0();
  sub_2414B4A68();
  sub_2414B4A8C();
  swift_release();
  sub_2414B3214();
  swift_release();
  swift_release();
  sub_2414B31E4();
  if (qword_257120728 != -1)
    swift_once();
  swift_retain();
  sub_2414B3214();
  swift_release();
  swift_release();
  sub_2414B31FC();
  swift_release();
  swift_release();
  v3 = sub_2414B31CC();
  swift_release();
  result = swift_release();
  *(_QWORD *)(a2 + 112) = v3;
  return result;
}

uint64_t sub_24142B018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t result;
  int v49;
  _BOOL4 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE v55[7];
  char v56;
  _BYTE v57[7];
  _BYTE v58[7];
  _QWORD v59[2];
  char v60;
  char v61;
  char v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  _BYTE v70[7];
  _DWORD v71[2];
  _DWORD v72[2];
  _DWORD v73[2];
  __int128 v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  _BYTE v80[7];
  char v81;
  _BYTE v82[7];
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  _BYTE v88[7];
  __int128 v89;
  uint64_t v90;
  char v91;
  _BYTE v92[7];
  uint64_t v93;
  _OWORD v94[3];
  _OWORD v95[2];
  _QWORD v96[2];
  char v97;
  char v98;
  char v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;

  v54 = a4;
  v7 = sub_2414B38A4();
  v53 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v52 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v49 - v10;
  v13 = _s11ContentViewVMa_0(0, a2, a3, v12);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v49 - v15;
  v17 = *(_QWORD *)(a1 + 144);
  v18 = *(_QWORD *)(a1 + 152);
  v19 = *(_BYTE *)(a1 + 160);
  sub_2412C72E4(v17, v18, v19);
  sub_2412EEDF4(v17, v18, v19, (uint64_t *)v94);
  sub_2412C822C(v17, v18, v19);
  if (!*((_QWORD *)&v94[0] + 1))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (v94[0] == __PAIR128__(0xE500000000000000, 0x6575657571))
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v20 = sub_2414B57D0();
  swift_bridgeObjectRelease();
  if ((v20 & 1) == 0)
  {
LABEL_10:
    sub_241430808(&v74);
LABEL_16:
    sub_2412EAEA4((uint64_t)&v74, (uint64_t)v96, &qword_2571288A0);
    return sub_2412EAEA4((uint64_t)v96, v54, &qword_2571288A0);
  }
LABEL_6:
  v21 = *(_QWORD *)(a1 + 128);
  v22 = *(_BYTE *)(a1 + 136);
  sub_2412C7080(v21, v22);
  v23 = sub_2412F0F50(v21, v22);
  sub_2412C821C(v21, v22);
  v24 = *(_QWORD *)(a1 + 16);
  if (v24)
  {
    swift_beginAccess();
    v25 = *(_BYTE *)(v24 + 32);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, v13);
    v51 = v23;
    if ((v25 & 1) == 0)
    {
      v50 = 0;
      goto LABEL_12;
    }
    v26 = *((_QWORD *)v16 + 2);
    if (v26)
    {
      swift_beginAccess();
      v50 = *(_QWORD *)(v26 + 24) < 1;
LABEL_12:
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      v49 = sub_2414B3CA0();
      sub_2414B4B64();
      v28 = v27;
      v30 = v29;
      v31 = sub_2414B3E38();
      v32 = *(_OWORD *)(a1 + 48);
      v94[1] = *(_OWORD *)(a1 + 64);
      v33 = *(_OWORD *)(a1 + 96);
      v94[2] = *(_OWORD *)(a1 + 80);
      v95[0] = v33;
      *(_OWORD *)((char *)v95 + 10) = *(_OWORD *)(a1 + 106);
      v94[0] = v32;
      sub_2412FD220((uint64_t)v94, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
      sub_2412FD278((uint64_t)v59);
      sub_2412FD220((uint64_t)v94, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
      v96[0] = v59[0];
      v96[1] = v59[1];
      v97 = v60;
      v98 = v61;
      if (v62)
      {
        v99 = v62;
        v100 = v63;
        v101 = v64;
        v102 = v65;
        v103 = v66;
        v104 = v67;
        v105 = v68;
        v106 = v69;
        sub_24144F9F0((uint64_t)&v74);
      }
      else
      {
        v99 = 0;
        v100 = v63;
        v101 = v64;
        v102 = v65;
        v103 = v66;
        v104 = v67;
        v105 = v68;
        v106 = v69;
        sub_24144F8F8((uint64_t)&v74);
      }
      sub_2414B2F20();
      v35 = v34;
      v37 = v36;
      v39 = v38;
      v41 = v40;
      v42 = sub_2414B3520();
      v43 = sub_2414B3E44();
      v56 = 0;
      sub_2414B3898();
      v44 = v53;
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v52, v11, v7);
      sub_2412C8030(&qword_2571271D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEE9A8], MEMORY[0x24BDEE998]);
      v45 = sub_2414B3220();
      v73[0] = *(_DWORD *)v58;
      *(_DWORD *)((char *)v73 + 3) = *(_DWORD *)&v58[3];
      v72[0] = *(_DWORD *)v57;
      *(_DWORD *)((char *)v72 + 3) = *(_DWORD *)&v57[3];
      v46 = v56;
      v71[0] = *(_DWORD *)v55;
      *(_DWORD *)((char *)v71 + 3) = *(_DWORD *)&v55[3];
      (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v7);
      *(_DWORD *)v80 = v73[0];
      *(_DWORD *)&v80[3] = *(_DWORD *)((char *)v73 + 3);
      *(_DWORD *)v82 = v72[0];
      *(_DWORD *)&v82[3] = *(_DWORD *)((char *)v72 + 3);
      *(_DWORD *)v88 = v71[0];
      *(_DWORD *)&v88[3] = *(_DWORD *)((char *)v71 + 3);
      *(_DWORD *)&v92[3] = *(_DWORD *)&v70[3];
      *(_DWORD *)v92 = *(_DWORD *)v70;
      *(_QWORD *)&v74 = 0x49676E6979616C70;
      *((_QWORD *)&v74 + 1) = 0xEB000000006D6574;
      v75 = v51;
      v76 = v49;
      v77 = v28;
      v78 = v30;
      v79 = v50;
      v81 = v31;
      v83 = v35;
      v84 = v37;
      v85 = v39;
      v86 = v41;
      v87 = v46;
      v89 = xmmword_2414C2370;
      v90 = v42;
      v91 = v43;
      v93 = v45;
      CGSizeMake(&v74, v47);
      goto LABEL_16;
    }
  }
  _s5QueueCMa();
  sub_2412C8030(&qword_25437F1A8, (uint64_t (*)(uint64_t))_s5QueueCMa, (uint64_t)&unk_2414C2E08);
  result = sub_2414B364C();
  __break(1u);
  return result;
}

uint64_t sub_24142B564@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  char v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  char v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  __int16 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t result;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  __int16 v92;
  __int128 v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int16 v99;
  uint64_t v100;
  __int16 v101;
  uint64_t v102;
  _BYTE v103[24];
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int16 v109;
  __int128 v110;
  uint64_t v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  uint64_t v116;
  uint64_t v117;
  __int16 v118;

  v8 = *(_QWORD *)(a1 + 144);
  v9 = *(_QWORD *)(a1 + 152);
  v10 = *(_BYTE *)(a1 + 160);
  sub_2412C72E4(v8, v9, v10);
  sub_2412EEDF4(v8, v9, v10, (uint64_t *)&v110);
  sub_2412C822C(v8, v9, v10);
  v11 = *((_QWORD *)&v110 + 1);
  swift_bridgeObjectRelease();
  v83 = a4;
  if (!v11)
  {
    *(_QWORD *)v103 = 1;
    v13 = _s10HeaderViewVMa(0, a2, a3, v12);
    *(_OWORD *)&v103[8] = 0u;
    v104 = 0u;
    v105 = 0u;
    v106 = 0u;
    v107 = 0u;
    v108 = 0u;
    v109 = 0;
    MEMORY[0x242695AE8](&unk_2414C5338, v13);
    sub_2412F65F0((uint64_t)v103, (uint64_t)&v110);
    v15 = *((_QWORD *)&v110 + 1);
    v14 = v110;
    v16 = v111;
    v17 = *((_QWORD *)&v112 + 1);
    v18 = v112;
    v20 = *((_QWORD *)&v113 + 1);
    v19 = v113;
    v22 = *((_QWORD *)&v114 + 1);
    v21 = v114;
    v24 = *((_QWORD *)&v115 + 1);
    v23 = v115;
    v25 = v116;
    v26 = a3;
    v27 = a2;
    v28 = v117;
    v29 = v118;
LABEL_18:
    v69 = v18;
    v72 = v17;
    v75 = v14;
    v79 = v19;
    v80 = v20;
    v82 = v21;
    *(_QWORD *)&v110 = v14;
    *((_QWORD *)&v110 + 1) = v15;
    v111 = v16;
    *(_QWORD *)&v112 = v18;
    *((_QWORD *)&v112 + 1) = v17;
    *(_QWORD *)&v113 = v19;
    *((_QWORD *)&v113 + 1) = v20;
    *(_QWORD *)&v114 = v21;
    *((_QWORD *)&v114 + 1) = v22;
    *(_QWORD *)&v115 = v23;
    *((_QWORD *)&v115 + 1) = v24;
    v116 = v25;
    v117 = v28;
    v118 = v29;
    v62 = v23;
    v63 = v24;
    v64 = _s10HeaderViewVMa(255, v27, v26, v18);
    v65 = sub_2414B53B0();
    v102 = MEMORY[0x242695AE8](&unk_2414C5338, v64);
    MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v65, &v102);
    sub_2412EEA1C((uint64_t)&v110, v65, v83);
    return sub_24143068C(v75, v15, v16, v69, v72, v79, v80, v82, v22, v62, v63, v25, SBYTE1(v25), v28, v29);
  }
  sub_2412C72E4(v8, v9, v10);
  sub_2412EEDF4(v8, v9, v10, (uint64_t *)&v110);
  sub_2412C822C(v8, v9, v10);
  if (!*((_QWORD *)&v110 + 1))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (v110 == __PAIR128__(0xE500000000000000, 0x6575657571))
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v30 = sub_2414B57D0();
  swift_bridgeObjectRelease();
  if ((v30 & 1) == 0)
  {
LABEL_10:
    v32 = 0;
    goto LABEL_11;
  }
LABEL_8:
  v31 = *(_QWORD *)(a1 + 16);
  if (v31)
  {
    swift_beginAccess();
    v32 = *(_BYTE *)(v31 + 32) ^ 1;
LABEL_11:
    sub_24140D5F8(v32 & 1, (uint64_t)v103);
    v33 = v104;
    v34 = a3;
    v67 = a3;
    v35 = *((_QWORD *)&v104 + 1);
    v36 = v105;
    v37 = v106;
    v76 = *(_QWORD *)&v103[16];
    v38 = v107;
    v39 = v108;
    v40 = BYTE1(v108);
    v41 = *((_QWORD *)&v108 + 1);
    v68 = v109;
    v93 = *(_OWORD *)v103;
    v94 = *(_QWORD *)&v103[16];
    v95 = v104;
    v96 = v105;
    v97 = v106;
    v98 = v107;
    v99 = v108;
    v100 = *((_QWORD *)&v108 + 1);
    v101 = v109;
    v81 = _s10HeaderViewVMa(0, a2, v34, v42);
    MEMORY[0x242695AE8](&unk_2414C5338, v81);
    sub_2412FBF34((uint64_t)&v93, v81, (uint64_t)&v110);
    swift_unknownObjectRelease();
    sub_2412C823C(v76, v33, v35, v36, *((uint64_t *)&v36 + 1), v37, *((uint64_t *)&v37 + 1), v38, *((uint64_t *)&v38 + 1), v39, v40);
    sub_2412C821C(v41, v68);
    v73 = v112;
    v77 = v111;
    v43 = v113;
    v70 = *((_QWORD *)&v112 + 1);
    v44 = *((_QWORD *)&v113 + 1);
    v45 = v114;
    v46 = v115;
    v47 = v116;
    v48 = BYTE1(v116);
    v49 = v117;
    v50 = v118;
    *(_OWORD *)v103 = v110;
    *(_QWORD *)&v103[16] = v111;
    v104 = v112;
    v105 = v113;
    v106 = v114;
    v107 = v115;
    LOWORD(v108) = v116;
    *((_QWORD *)&v108 + 1) = v117;
    v109 = v118;
    sub_2412EEA1C((uint64_t)v103, v81, (uint64_t)&v93);
    swift_unknownObjectRelease();
    sub_2412C823C(v77, v73, v70, v43, v44, v45, *((uint64_t *)&v45 + 1), v46, *((uint64_t *)&v46 + 1), v47, v48);
    sub_2412C821C(v49, v50);
    v74 = v95;
    v78 = v94;
    v51 = v96;
    v71 = *((_QWORD *)&v95 + 1);
    v52 = *((_QWORD *)&v96 + 1);
    v53 = v97;
    v54 = v98;
    v55 = v99;
    v56 = HIBYTE(v99);
    v57 = v100;
    v58 = v101;
    if (HIBYTE(v99))
      v59 = 256;
    else
      v59 = 0;
    v60 = v59 | v99;
    if (HIBYTE(v101))
      v61 = 256;
    else
      v61 = 0;
    v84 = v93;
    v85 = v94;
    v86 = v95;
    v87 = v96;
    v88 = v97;
    v89 = v98;
    v90 = v60;
    v91 = v100;
    v92 = v61 | v101;
    sub_2412F65F0((uint64_t)&v84, (uint64_t)v103);
    swift_unknownObjectRelease();
    sub_2412C823C(v78, v74, v71, v51, v52, v53, *((uint64_t *)&v53 + 1), v54, *((uint64_t *)&v54 + 1), v55, v56);
    sub_2412C821C(v57, v58);
    v26 = v67;
    v27 = a2;
    v14 = *(_QWORD *)v103;
    v15 = *(_QWORD *)&v103[8];
    v16 = *(_QWORD *)&v103[16];
    v17 = *((_QWORD *)&v104 + 1);
    v18 = v104;
    v20 = *((_QWORD *)&v105 + 1);
    v19 = v105;
    v22 = *((_QWORD *)&v106 + 1);
    v21 = v106;
    v24 = *((_QWORD *)&v107 + 1);
    v23 = v107;
    v28 = *((_QWORD *)&v108 + 1);
    v25 = v108;
    v29 = v109;
    goto LABEL_18;
  }
  _s5QueueCMa();
  sub_2412C8030(&qword_25437F1A8, (uint64_t (*)(uint64_t))_s5QueueCMa, (uint64_t)&unk_2414C2E08);
  result = sub_2414B364C();
  __break(1u);
  return result;
}

uint64_t sub_24142BB20(uint64_t a1)
{
  uint64_t v2;

  sub_2414B4648();
  v2 = *(_QWORD *)(a1 + 128);
  LOBYTE(a1) = *(_BYTE *)(a1 + 136);
  sub_2412C7080(v2, a1);
  sub_2412F0F50(v2, a1);
  sub_2412C821C(v2, a1);
  sub_2414B3CA0();
  sub_2414B4B64();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257128900);
  sub_241430440();
  sub_2414B439C();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_24142BC04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t result;
  uint64_t v11;

  *(_QWORD *)a3 = swift_getKeyPath();
  v7 = _s28ControlsAndFooterButtonsViewVMa(0, a1, a2, v6);
  *(_OWORD *)(a3 + 8) = 0u;
  *(_OWORD *)(a3 + 24) = 0u;
  *(_OWORD *)(a3 + 40) = 0u;
  *(_OWORD *)(a3 + 56) = 0u;
  *(_WORD *)(a3 + 72) = 0;
  v8 = (uint64_t *)(a3 + *(int *)(v7 + 36));
  *v8 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  swift_storeEnumTagMultiPayload();
  v9 = (uint64_t *)(a3 + *(int *)(v7 + 40));
  _s17TransportControlsCMa();
  sub_2412C8030((unint64_t *)&qword_25437EDE0, (uint64_t (*)(uint64_t))_s17TransportControlsCMa, (uint64_t)&unk_2414C0048);
  result = sub_2414B3658();
  *v9 = result;
  v9[1] = v11;
  return result;
}

uint64_t sub_24142BCE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t (**v16)();
  _QWORD v18[4];
  int v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257128928);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2414B4648();
  v8 = *(_QWORD *)(a1 + 128);
  LOBYTE(a1) = *(_BYTE *)(a1 + 136);
  sub_2412C7080(v8, a1);
  v9 = sub_2412F0F50(v8, a1);
  sub_2412C821C(v8, a1);
  LODWORD(a1) = sub_2414B3CA0();
  sub_2414B4B64();
  v11 = v10;
  v13 = v12;
  v14 = sub_2414B3520();
  v15 = sub_2414B3E44();
  v18[0] = v7;
  v18[1] = 0x736C6F72746E6F63;
  v18[2] = 0xE800000000000000;
  v18[3] = v9;
  v19 = a1;
  v20 = v11;
  v21 = v13;
  v22 = 1;
  v23 = v14;
  v24 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257128938);
  sub_2414307E4();
  sub_2414B439C();
  swift_bridgeObjectRelease();
  swift_release();
  sub_2412DC3FC((uint64_t)v6, a2, &qword_257128928);
  v16 = (uint64_t (**)())(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257128910) + 36));
  *v16 = sub_2413EC5C8;
  v16[1] = 0;
  return sub_2412CBE78((uint64_t)v6, &qword_257128928);
}

uint64_t sub_24142BE6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  __int128 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 *v32;
  _QWORD v33[2];
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;

  v28 = a1;
  v29 = a3;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  _s21FullScreenArtworkViewVMa(255, v4, v5, a2);
  sub_2414B3DB4();
  sub_2414B3514();
  v25 = v4;
  _s33DefaultMetadataAndContextMenuViewVMa(255, v4, v5, v6);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_257122900);
  sub_2414B3514();
  sub_2414B53B0();
  _s10BannerViewVMa(255, v4, v5, v7);
  sub_2414B3514();
  sub_2414B3514();
  sub_2414B53B0();
  swift_getTupleTypeMetadata3();
  v8 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v8);
  v9 = sub_2414B4894();
  v26 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v24 - v10;
  v12 = sub_2414B3514();
  v27 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v24 - v16;
  v18 = v3[5];
  v46 = v3[4];
  v47 = v18;
  v48 = v3[6];
  v49 = *((_QWORD *)v3 + 14);
  v19 = v3[1];
  v42 = *v3;
  v43 = v19;
  v20 = v3[3];
  v44 = v3[2];
  v45 = v20;
  v30 = v25;
  v31 = v5;
  v32 = &v42;
  sub_2414B3964();
  sub_2414B4888();
  sub_2414B3E5C();
  v38 = v46;
  v39 = v47;
  v40 = v48;
  v41 = v49;
  v34 = v42;
  v35 = v43;
  v36 = v44;
  v37 = v45;
  sub_24142D388();
  v21 = MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v9);
  sub_2414B4528();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
  v33[0] = v21;
  v33[1] = MEMORY[0x24BDECC60];
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v12, v33);
  sub_2412FBF34((uint64_t)v14, v12, (uint64_t)v17);
  v22 = *(void (**)(char *, uint64_t))(v27 + 8);
  v22(v14, v12);
  sub_2412EEA1C((uint64_t)v17, v12, v29);
  return ((uint64_t (*)(char *, uint64_t))v22)(v17, v12);
}

uint64_t sub_24142C1B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(__int128 *, __int128 *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(__int128 *, __int128 *, uint64_t);
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t (*v102)(char *, uint64_t);
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  char *v124;
  __int128 v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD v128[2];
  _QWORD v129[2];
  _BYTE v130[144];
  _QWORD v131[2];
  _QWORD v132[2];
  _OWORD v133[7];
  _OWORD v134[2];
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  _OWORD v142[2];
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  _OWORD v150[2];
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  _OWORD v158[2];
  __int128 v159;
  __int128 v160;
  _BYTE v161[48];
  __int128 v162;
  __int128 v163;
  _OWORD v164[2];
  __int128 v165;
  __int16 v166;
  char v167;
  uint64_t v168;
  char v169;
  uint64_t v170;
  __int128 v171;
  uint64_t v172;
  char v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char v177;
  __int128 v178;
  char v179;
  __int128 v180;
  __int128 v181;
  char v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char v186;
  __int128 v187;
  char v188;
  __int128 v189;
  __int128 v190;
  char v191;
  uint64_t v192;
  _QWORD v193[2];
  _QWORD v194[2];
  uint64_t v195;
  _QWORD v196[2];
  _QWORD v197[2];
  _QWORD v198[2];
  _QWORD v199[2];
  __int128 v200;
  __int128 v201;
  _OWORD v202[3];
  __int128 v203;
  __int128 v204;
  _OWORD v205[2];
  __int128 v206;
  __int128 v207;
  _OWORD v208[3];
  __int128 v209;
  __int128 v210;
  _OWORD v211[2];
  __int128 v212;
  __int128 v213;
  _OWORD v214[3];
  __int128 v215;
  __int128 v216;
  _OWORD v217[2];
  _QWORD v218[2];
  _QWORD v219[2];
  _QWORD v220[2];
  _OWORD v221[3];
  _OWORD v222[2];
  _OWORD v223[3];
  _OWORD v224[3];

  v110 = a5;
  v8 = _s21FullScreenArtworkViewVMa(255, a2, a3, a4);
  sub_2414B3DB4();
  v126 = sub_2414B3514();
  v113 = *(_QWORD *)(v126 - 8);
  MEMORY[0x24BDAC7A8](v126);
  v114 = (char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v104 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v124 = (char *)&v104 - v14;
  *(_QWORD *)&v106 = *(_QWORD *)a1;
  swift_retain();
  v127 = a2;
  v115 = a3;
  *(_QWORD *)&v212 = sub_24144C2F0();
  *((_QWORD *)&v212 + 1) = v15;
  v16 = *(_QWORD *)(a1 + 88);
  v17 = *(_QWORD *)(a1 + 96);
  v111 = a1;
  v18 = *(_BYTE *)(a1 + 104);
  sub_2412C72E4(v16, v17, v18);
  sub_2412EEDF4(v16, v17, v18, (uint64_t *)&v206);
  sub_2412C822C(v16, v17, v18);
  if (*((_QWORD *)&v206 + 1))
    swift_bridgeObjectRelease();
  v19 = MEMORY[0x242695AE8](&unk_2414C8490, v8);
  sub_2414B439C();
  swift_release();
  v20 = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v220[0] = v19;
  v220[1] = v20;
  v21 = v126;
  v108 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v126, v220);
  sub_2412FBF34((uint64_t)v12, v21, (uint64_t)v124);
  v109 = *(void (**)(char *, uint64_t))(v113 + 8);
  v109(v12, v21);
  sub_2412C72E4(v16, v17, v18);
  sub_2412EEDF4(v16, v17, v18, (uint64_t *)&v212);
  sub_2412C822C(v16, v17, v18);
  v22 = *((_QWORD *)&v212 + 1);
  swift_bridgeObjectRelease();
  v24 = MEMORY[0x24BDECC60];
  if (v22)
  {
    v25 = v115;
    v26 = _s33DefaultMetadataAndContextMenuViewVMa(255, v127, v115, v23);
    v27 = sub_2414B3514();
    v206 = 0u;
    v207 = 0u;
    memset(v208, 0, sizeof(v208));
    *(_QWORD *)&v209 = 0;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_257122900);
    v28 = sub_2414B3514();
    v219[0] = MEMORY[0x242695AE8](&unk_2414C8440, v26);
    v219[1] = v24;
    v29 = MEMORY[0x24BDED308];
    v30 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v27, v219);
    v31 = sub_2412C8FC4((unint64_t *)&qword_2571228F8, qword_257122900, MEMORY[0x24BDEFB48]);
    v218[0] = v30;
    v218[1] = v31;
    MEMORY[0x242695AE8](v29, v28, v218);
    sub_2412F65F0((uint64_t)&v206, (uint64_t)&v212);
    v122 = *((_QWORD *)&v212 + 1);
    *(_QWORD *)&v123 = v212;
    v107 = *((_QWORD *)&v213 + 1);
    v120 = *(_QWORD *)&v214[0];
    v121 = v213;
    v118 = *((_QWORD *)&v214[1] + 1);
    v112 = *(_QWORD *)&v214[1];
    v119 = *((_QWORD *)&v214[0] + 1);
    *(_QWORD *)&v125 = *((_QWORD *)&v214[2] + 1);
    v117 = *(_QWORD *)&v214[2];
    v32 = v215;
  }
  else
  {
    v33 = v115;
    sub_24144C340((uint64_t)&v200);
    v34 = v201;
    v35 = BYTE8(v201);
    v125 = v200;
    v159 = v200;
    *(_QWORD *)&v160 = v201;
    BYTE8(v160) = BYTE8(v201);
    LODWORD(v123) = sub_2414B3E38();
    v36 = *(_OWORD *)(v111 + 24);
    v37 = *(_OWORD *)(v111 + 56);
    v223[2] = *(_OWORD *)(v111 + 40);
    v224[0] = v37;
    *(_OWORD *)((char *)v224 + 10) = *(_OWORD *)(v111 + 66);
    v223[0] = *(_OWORD *)(v111 + 8);
    v223[1] = v36;
    sub_2412FD220((uint64_t)v223, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
    sub_2412FD278((uint64_t)&v206);
    sub_2412FD220((uint64_t)v223, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
    v212 = v206;
    LOWORD(v213) = v207;
    if (BYTE2(v207))
    {
      BYTE2(v213) = BYTE2(v207);
      *((_QWORD *)&v213 + 1) = *((_QWORD *)&v207 + 1);
      LOBYTE(v214[0]) = v208[0];
      *((_QWORD *)&v214[0] + 1) = *((_QWORD *)&v208[0] + 1);
      v214[1] = v208[1];
      *(_QWORD *)&v214[2] = *(_QWORD *)&v208[2];
      BYTE8(v214[2]) = BYTE8(v208[2]);
      sub_24144F9F0((uint64_t)&v151);
    }
    else
    {
      BYTE2(v213) = 0;
      *((_QWORD *)&v213 + 1) = *((_QWORD *)&v207 + 1);
      LOBYTE(v214[0]) = v208[0];
      *((_QWORD *)&v214[0] + 1) = *((_QWORD *)&v208[0] + 1);
      v214[1] = v208[1];
      *(_QWORD *)&v214[2] = *(_QWORD *)&v208[2];
      BYTE8(v214[2]) = BYTE8(v208[2]);
      sub_24144F8F8((uint64_t)&v151);
    }
    v39 = _s33DefaultMetadataAndContextMenuViewVMa(0, v127, v33, v38);
    v40 = MEMORY[0x242695AE8](&unk_2414C8440, v39);
    sub_2414B4528();
    swift_unknownObjectRelease();
    sub_2412C821C(v34, v35);
    v41 = v213;
    v42 = BYTE8(v213);
    v125 = v212;
    v200 = v212;
    *(_QWORD *)&v201 = v213;
    BYTE8(v201) = BYTE8(v213);
    LOBYTE(v202[0]) = v214[0];
    *(_OWORD *)((char *)v202 + 8) = *(_OWORD *)((char *)v214 + 8);
    *(_OWORD *)((char *)&v202[1] + 8) = *(_OWORD *)((char *)&v214[1] + 8);
    BYTE8(v202[2]) = BYTE8(v214[2]);
    v43 = sub_2414B3514();
    v129[0] = v40;
    v129[1] = MEMORY[0x24BDECC60];
    v44 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v43, v129);
    sub_2414B4174();
    swift_unknownObjectRelease();
    sub_2412C821C(v41, v42);
    v45 = v207;
    LOBYTE(v41) = BYTE8(v207);
    *(_QWORD *)&v125 = v209;
    v123 = v206;
    v200 = v206;
    *(_QWORD *)&v201 = v207;
    BYTE8(v201) = BYTE8(v207);
    LOBYTE(v202[0]) = v208[0];
    *(_OWORD *)((char *)v202 + 8) = *(_OWORD *)((char *)v208 + 8);
    *(_OWORD *)((char *)&v202[1] + 8) = *(_OWORD *)((char *)&v208[1] + 8);
    BYTE8(v202[2]) = BYTE8(v208[2]);
    *(_QWORD *)&v203 = v209;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_257122900);
    v46 = sub_2414B3514();
    v47 = sub_2412C8FC4((unint64_t *)&qword_2571228F8, qword_257122900, MEMORY[0x24BDEFB48]);
    v128[0] = v44;
    v128[1] = v47;
    MEMORY[0x242695AE8](MEMORY[0x24BDED308], v46, v128);
    sub_2412FBF34((uint64_t)&v200, v46, (uint64_t)&v212);
    swift_unknownObjectRelease();
    sub_2412C821C(v45, v41);
    swift_release();
    v48 = v213;
    v49 = BYTE8(v213);
    v125 = v212;
    v206 = v212;
    *(_QWORD *)&v207 = v213;
    BYTE8(v207) = BYTE8(v213);
    LOBYTE(v208[0]) = v214[0];
    *(_OWORD *)((char *)v208 + 8) = *(_OWORD *)((char *)v214 + 8);
    *(_OWORD *)((char *)&v208[1] + 8) = *(_OWORD *)((char *)&v214[1] + 8);
    BYTE8(v208[2]) = BYTE8(v214[2]);
    *(_QWORD *)&v209 = v215;
    sub_2412EEA1C((uint64_t)&v206, v46, (uint64_t)&v200);
    swift_unknownObjectRelease();
    sub_2412C821C(v48, v49);
    swift_release();
    v50 = v201;
    v51 = BYTE8(v201);
    v125 = v200;
    v159 = v200;
    *(_QWORD *)&v160 = v201;
    *((_QWORD *)&v160 + 1) = BYTE8(v201);
    *(_OWORD *)&v161[8] = *(_OWORD *)((char *)v202 + 8);
    v25 = v115;
    *(_OWORD *)&v161[24] = *(_OWORD *)((char *)&v202[1] + 8);
    *(_QWORD *)v161 = LOBYTE(v202[0]);
    *(_QWORD *)&v161[40] = BYTE8(v202[2]);
    *(_QWORD *)&v162 = v203;
    sub_2412F65F0((uint64_t)&v159, (uint64_t)&v206);
    swift_unknownObjectRelease();
    sub_2412C821C(v50, v51);
    v24 = MEMORY[0x24BDECC60];
    swift_release();
    v122 = *((_QWORD *)&v206 + 1);
    *(_QWORD *)&v123 = v206;
    v107 = *((_QWORD *)&v207 + 1);
    v120 = *(_QWORD *)&v208[0];
    v121 = v207;
    v118 = *((_QWORD *)&v208[1] + 1);
    v112 = *(_QWORD *)&v208[1];
    v119 = *((_QWORD *)&v208[0] + 1);
    *(_QWORD *)&v125 = *((_QWORD *)&v208[2] + 1);
    v117 = *(_QWORD *)&v208[2];
    v32 = v209;
  }
  v116 = v32;
  sub_2412C72E4(v16, v17, v18);
  sub_2412EEDF4(v16, v17, v18, (uint64_t *)&v212);
  sub_2412C822C(v16, v17, v18);
  v52 = *((_QWORD *)&v212 + 1);
  swift_bridgeObjectRelease();
  if (v52)
  {
    sub_24143197C(&v200);
    v54 = _s10BannerViewVMa(255, v127, v25, v53);
    v55 = sub_2414B3514();
    v56 = sub_2414B3514();
    v57 = sub_2414B53B0();
    v58 = *(void (**)(__int128 *, __int128 *, uint64_t))(*(_QWORD *)(v57 - 8) + 32);
    v58(&v206, &v200, v57);
    v199[0] = MEMORY[0x242695AE8](&unk_2414C6F68, v54);
    v199[1] = v24;
    v59 = MEMORY[0x24BDED308];
    v198[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v55, v199);
    v198[1] = v24;
    MEMORY[0x242695AE8](v59, v56, v198);
    sub_2412F65F0((uint64_t)&v206, (uint64_t)&v212);
    v58(&v206, &v212, v57);
    v58(&v212, &v206, v57);
  }
  else
  {
    swift_retain();
    v60 = v127;
    sub_241434644((uint64_t)&v212);
    v61 = v213;
    v62 = BYTE8(v213);
    v206 = v212;
    *(_QWORD *)&v207 = v213;
    BYTE8(v207) = BYTE8(v213);
    v106 = v214[0];
    v208[0] = v214[0];
    sub_2414B3E50();
    v64 = _s10BannerViewVMa(0, v60, v25, v63);
    v65 = MEMORY[0x242695AE8](&unk_2414C6F68, v64);
    sub_2414B4528();
    swift_release();
    sub_2412C821C(v61, v62);
    swift_unknownObjectRelease();
    v66 = v185;
    v67 = v186;
    v174 = v183;
    v175 = v184;
    v176 = v185;
    v177 = v186;
    v106 = v187;
    v178 = v187;
    v179 = v188;
    v180 = v189;
    v181 = v190;
    v182 = v191;
    LODWORD(v105) = sub_2414B3E38();
    v68 = *(_OWORD *)(v111 + 24);
    v69 = *(_OWORD *)(v111 + 56);
    v221[2] = *(_OWORD *)(v111 + 40);
    v222[0] = v69;
    *(_OWORD *)((char *)v222 + 10) = *(_OWORD *)(v111 + 66);
    v221[0] = *(_OWORD *)(v111 + 8);
    v221[1] = v68;
    sub_2412FD220((uint64_t)v221, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
    sub_2412FD278((uint64_t)&v165);
    sub_2412FD220((uint64_t)v221, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
    v212 = v165;
    LOWORD(v213) = v166;
    if (v167)
    {
      BYTE2(v213) = v167;
      *((_QWORD *)&v213 + 1) = v168;
      LOBYTE(v214[0]) = v169;
      *((_QWORD *)&v214[0] + 1) = v170;
      v214[1] = v171;
      *(_QWORD *)&v214[2] = v172;
      BYTE8(v214[2]) = v173;
      sub_24144F9F0((uint64_t)&v206);
    }
    else
    {
      BYTE2(v213) = 0;
      *((_QWORD *)&v213 + 1) = v168;
      LOBYTE(v214[0]) = v169;
      *((_QWORD *)&v214[0] + 1) = v170;
      v214[1] = v171;
      *(_QWORD *)&v214[2] = v172;
      BYTE8(v214[2]) = v173;
      sub_24144F8F8((uint64_t)&v206);
    }
    v70 = sub_2414B3514();
    v132[0] = v65;
    v71 = MEMORY[0x24BDECC60];
    v132[1] = MEMORY[0x24BDECC60];
    v72 = MEMORY[0x24BDED308];
    v73 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v70, v132);
    sub_2414B4528();
    swift_release();
    sub_2412C821C(v66, v67);
    swift_unknownObjectRelease();
    v133[6] = v204;
    v134[0] = v205[0];
    *(_OWORD *)((char *)v134 + 9) = *(_OWORD *)((char *)v205 + 9);
    v133[2] = v202[0];
    v133[3] = v202[1];
    v133[4] = v202[2];
    v133[5] = v203;
    v133[0] = v200;
    v133[1] = v201;
    v216 = v204;
    v217[0] = v205[0];
    *(_OWORD *)((char *)v217 + 9) = *(_OWORD *)((char *)v205 + 9);
    v214[0] = v202[0];
    v214[1] = v202[1];
    v215 = v203;
    v214[2] = v202[2];
    v213 = v201;
    v212 = v200;
    v74 = sub_2414B3514();
    v131[0] = v73;
    v131[1] = v71;
    MEMORY[0x242695AE8](v72, v74, v131);
    sub_2412FBF34((uint64_t)&v212, v74, (uint64_t)&v206);
    sub_241431B3C((uint64_t)v133);
    v141 = v210;
    v142[0] = v211[0];
    *(_OWORD *)((char *)v142 + 9) = *(_OWORD *)((char *)v211 + 9);
    v137 = v208[0];
    v138 = v208[1];
    v139 = v208[2];
    v140 = v209;
    v135 = v206;
    v136 = v207;
    v216 = v210;
    v217[0] = v211[0];
    *(_OWORD *)((char *)v217 + 9) = *(_OWORD *)((char *)v211 + 9);
    v214[0] = v208[0];
    v214[1] = v208[1];
    v215 = v209;
    v214[2] = v208[2];
    v213 = v207;
    v212 = v206;
    sub_2412EEA1C((uint64_t)&v212, v74, (uint64_t)&v159);
    sub_241431B3C((uint64_t)&v135);
    v149 = v163;
    v150[0] = v164[0];
    *(_OWORD *)((char *)v150 + 9) = *(_OWORD *)((char *)v164 + 9);
    v145 = *(_OWORD *)v161;
    v146 = *(_OWORD *)&v161[16];
    v147 = *(_OWORD *)&v161[32];
    v148 = v162;
    v143 = v159;
    v144 = v160;
    v157 = v163;
    v158[0] = v164[0];
    *(_OWORD *)((char *)v158 + 9) = *(_OWORD *)((char *)v164 + 9);
    v153 = *(_OWORD *)v161;
    v154 = *(_OWORD *)&v161[16];
    v155 = *(_OWORD *)&v161[32];
    v156 = v162;
    v151 = v159;
    v152 = v160;
    CGSizeMake(&v151, v75);
    v76 = sub_2414B53B0();
    v77 = *(void (**)(__int128 *, __int128 *, uint64_t))(*(_QWORD *)(v76 - 8) + 32);
    v77((__int128 *)v130, &v151, v76);
    sub_2412F65F0((uint64_t)v130, (uint64_t)&v212);
    sub_241431B3C((uint64_t)&v143);
    v77(&v159, &v212, v76);
    v77(&v212, &v159, v76);
  }
  v78 = v114;
  (*(void (**)(void))(v113 + 16))();
  v79 = v122;
  v80 = v123;
  *(_QWORD *)&v159 = v123;
  *((_QWORD *)&v159 + 1) = v122;
  v82 = v120;
  v81 = v121;
  *(_QWORD *)&v160 = v121;
  v83 = v107;
  *((_QWORD *)&v160 + 1) = v107;
  *(_QWORD *)v161 = v120;
  *(_QWORD *)&v161[8] = v119;
  *(_QWORD *)&v161[16] = v112;
  v84 = v117;
  *(_QWORD *)&v161[24] = v118;
  *(_QWORD *)&v161[32] = v117;
  *(_QWORD *)&v161[40] = v125;
  v85 = v116;
  *(_QWORD *)&v162 = v116;
  *(_QWORD *)&v151 = v78;
  *((_QWORD *)&v151 + 1) = &v159;
  v86 = v115;
  v105 = _s10BannerViewVMa(255, v127, v115, v87);
  *(_QWORD *)&v106 = sub_2414B3514();
  v111 = sub_2414B3514();
  v104 = sub_2414B53B0();
  v113 = *(_QWORD *)(*(_QWORD *)(v104 - 8) + 32);
  ((void (*)(__int128 *, __int128 *, uint64_t))v113)(&v200, &v212, v104);
  *(_QWORD *)&v152 = &v200;
  v88 = v81;
  LOBYTE(v81) = v83;
  v89 = v112;
  sub_241431998(v80, v79, v88, v83, v82, v119, v112, v118, v84, v125, v85);
  sub_241431A8C((uint64_t)&v212, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2414319EC);
  *(_QWORD *)&v143 = v126;
  v91 = _s33DefaultMetadataAndContextMenuViewVMa(255, v127, v86, v90);
  v92 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_257122900);
  v93 = sub_2414B3514();
  v94 = sub_2414B53B0();
  *((_QWORD *)&v143 + 1) = v94;
  v95 = v104;
  *(_QWORD *)&v144 = v104;
  *(_QWORD *)&v135 = v108;
  v197[0] = MEMORY[0x242695AE8](&unk_2414C8440, v91);
  v96 = MEMORY[0x24BDECC60];
  v197[1] = MEMORY[0x24BDECC60];
  v97 = MEMORY[0x24BDED308];
  v98 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v92, v197);
  v99 = sub_2412C8FC4((unint64_t *)&qword_2571228F8, qword_257122900, MEMORY[0x24BDEFB48]);
  v196[0] = v98;
  v196[1] = v99;
  v195 = MEMORY[0x242695AE8](v97, v93, v196);
  v100 = MEMORY[0x24BDF5578];
  *((_QWORD *)&v135 + 1) = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v94, &v195);
  v194[0] = MEMORY[0x242695AE8](&unk_2414C6F68, v105);
  v194[1] = v96;
  v193[0] = MEMORY[0x242695AE8](v97, v106, v194);
  v193[1] = v96;
  v192 = MEMORY[0x242695AE8](v97, v111, v193);
  *(_QWORD *)&v136 = MEMORY[0x242695AE8](v100, v95, &v192);
  sub_2412F68CC((uint64_t *)&v151, 3uLL, (uint64_t)&v143);
  sub_241431A38(v123, v122, v121, v81, v120, v119, v89, v118, v117, v125, v116);
  sub_241431A8C((uint64_t)&v212, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_241431AF0);
  v101 = v126;
  v102 = (uint64_t (*)(char *, uint64_t))v109;
  v109(v124, v126);
  ((void (*)(__int128 *, __int128 *, uint64_t))v113)(&v206, &v200, v95);
  sub_241431A8C((uint64_t)&v206, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_241431AF0);
  sub_241431A38(v159, *((uint64_t *)&v159 + 1), v160, SBYTE8(v160), *(uint64_t *)v161, *(uint64_t *)&v161[8], *(uint64_t *)&v161[16], *(uint64_t *)&v161[24], *(uint64_t *)&v161[32], *(uint64_t *)&v161[40], v162);
  return v102(v114, v101);
}

void sub_24142D388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[80];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 72);
  v8 = *(_BYTE *)(v0 + 80);
  v9 = *(_BYTE *)(v0 + 81);
  v11 = *(_QWORD *)(v0 + 16);
  v12 = *(_QWORD *)(v0 + 8);
  v14 = v12;
  v15 = v11;
  v16 = v1;
  v17 = v2;
  v18 = v3;
  v19 = v4;
  v20 = v5;
  v21 = v6;
  v22 = v7;
  v23 = v8;
  v24 = v9;
  sub_2412C6F48(v12, v11, v1, v2, v3, v4, v5, v6, v7, v8, v9);
  sub_2412FD278((uint64_t)v13);
  sub_2412C823C(v12, v11, v1, v2, v3, v4, v5, v6, v7, v8, v9);
  if (v13[17])
  {
    v10 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
    objc_msgSend(v10, sel_displayScale);

  }
}

uint64_t sub_24142D570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  __int128 *v3;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t OpaqueTypeConformance2;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  uint64_t result;
  _QWORD v67[4];
  int v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  __int16 v95;
  char v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  __int128 v100;
  uint64_t v101;
  char v102;
  _BYTE v103[24];
  __int128 v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  __int128 v109;
  uint64_t v110;
  char v111;
  _QWORD v112[2];
  _QWORD v113[2];
  _QWORD v114[2];
  _QWORD v115[2];
  __int128 v116;
  __int128 v117;
  __int128 v118;
  _BYTE v119[26];
  __int128 v120;
  __int128 v121;
  __int128 v122;
  _OWORD v123[3];

  v4 = v3;
  v89 = a3;
  v80 = a1;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  _s15TimeControlViewVMa(255, v5, v6, a2);
  sub_2414B3514();
  sub_2414B3514();
  _s12ControlsViewVMa(255, v5, v6, v7);
  v92 = v6;
  v93 = v5;
  _s13FooterButtonsVMa(255, v5, v6, v8);
  swift_getTupleTypeMetadata3();
  v9 = sub_2414B4B1C();
  v67[1] = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v9);
  v67[2] = v9;
  v10 = sub_2414B4894();
  v70 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v67[0] = (char *)v67 - v11;
  v12 = sub_2414B3514();
  v81 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v90 = (char *)v67 - v13;
  v14 = sub_2414B3514();
  v87 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v85 = (char *)v67 - v15;
  v16 = sub_2414B3B50();
  v17 = sub_2414B3514();
  v71 = v10;
  v18 = MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v10);
  v19 = MEMORY[0x24BDECC60];
  v67[3] = v18;
  v115[0] = v18;
  v115[1] = MEMORY[0x24BDECC60];
  v20 = MEMORY[0x24BDED308];
  v82 = v12;
  v72 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v12, v115);
  v114[0] = v72;
  v114[1] = v19;
  v21 = MEMORY[0x242695AE8](v20, v14, v114);
  v113[0] = MEMORY[0x242695AE8](MEMORY[0x24BDEFDC0], v16);
  v113[1] = MEMORY[0x24BDEC438];
  v22 = MEMORY[0x242695AE8](v20, v17, v113);
  *(_QWORD *)&v120 = v14;
  *((_QWORD *)&v120 + 1) = v17;
  *(_QWORD *)&v121 = v21;
  *((_QWORD *)&v121 + 1) = v22;
  v23 = MEMORY[0x24BDF3968];
  v24 = MEMORY[0x242695A94](0, &v120, MEMORY[0x24BDF3968], 0);
  v86 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v91 = (char *)v67 - v25;
  v26 = sub_2414B3B50();
  v27 = sub_2414B3514();
  v83 = v14;
  *(_QWORD *)&v120 = v14;
  *((_QWORD *)&v120 + 1) = v17;
  v78 = v17;
  v73 = v22;
  v74 = v21;
  *(_QWORD *)&v121 = v21;
  *((_QWORD *)&v121 + 1) = v22;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v112[0] = MEMORY[0x242695AE8](MEMORY[0x24BDEFDC0], v26);
  v112[1] = MEMORY[0x24BDECC38];
  v29 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v27, v112);
  v88 = v24;
  *(_QWORD *)&v120 = v24;
  *((_QWORD *)&v120 + 1) = v27;
  v77 = v27;
  v84 = OpaqueTypeConformance2;
  *(_QWORD *)&v121 = OpaqueTypeConformance2;
  *((_QWORD *)&v121 + 1) = v29;
  v30 = MEMORY[0x242695A94](0, &v120, v23, 0);
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)v67 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v37 = *(_QWORD *)((char *)v4 + *(int *)(v80 + 40));
  if (v37)
  {
    v75 = v34;
    v76 = v29;
    v69 = v32;
    v79 = (uint64_t)v67 - v35;
    v80 = v36;
    v38 = swift_beginAccess();
    v68 = *(unsigned __int8 *)(v37 + 58);
    v39 = v68 ^ 1;
    MEMORY[0x24BDAC7A8](v38);
    v40 = v92;
    v67[-4] = v93;
    v67[-3] = v40;
    v67[-2] = v4;
    LOBYTE(v67[-1]) = v39;
    sub_2414B3964();
    v41 = v67[0];
    sub_2414B4888();
    sub_2414B3E38();
    v42 = v4[3];
    v122 = v4[2];
    v123[0] = v42;
    *(_OWORD *)((char *)v123 + 10) = *(__int128 *)((char *)v4 + 58);
    v43 = v4[1];
    v120 = *v4;
    v121 = v43;
    sub_2412FD220((uint64_t)&v120, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
    sub_2412FD278((uint64_t)&v116);
    sub_2412FD220((uint64_t)&v120, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
    v104 = v116;
    LOWORD(v105) = v117;
    if (BYTE2(v117))
    {
      BYTE2(v105) = BYTE2(v117);
      v106 = *((_QWORD *)&v117 + 1);
      v107 = v118;
      v108 = *((_QWORD *)&v118 + 1);
      v109 = *(_OWORD *)v119;
      v110 = *(_QWORD *)&v119[16];
      v111 = v119[24];
      sub_24144F9F0((uint64_t)&v94);
    }
    else
    {
      BYTE2(v105) = 0;
      v106 = *((_QWORD *)&v117 + 1);
      v107 = v118;
      v108 = *((_QWORD *)&v118 + 1);
      v109 = *(_OWORD *)v119;
      v110 = *(_QWORD *)&v119[16];
      v111 = v119[24];
      sub_24144F8F8((uint64_t)&v94);
    }
    v44 = v88;
    v45 = v82;
    v46 = v83;
    v47 = v71;
    sub_2414B4528();
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v41, v47);
    sub_2414B3E5C();
    v48 = v4[3];
    v118 = v4[2];
    *(_OWORD *)v119 = v48;
    *(_OWORD *)&v119[10] = *(__int128 *)((char *)v4 + 58);
    v49 = v4[1];
    v116 = *v4;
    v117 = v49;
    sub_2412FD220((uint64_t)&v116, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
    sub_2412FD278((uint64_t)&v104);
    sub_2412FD220((uint64_t)&v116, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
    v94 = v104;
    v95 = v105;
    if (BYTE2(v105))
    {
      v96 = BYTE2(v105);
      v97 = v106;
      v98 = v107;
      v99 = v108;
      v100 = v109;
      v101 = v110;
      v102 = v111;
      sub_24144F9F0((uint64_t)v103);
    }
    else
    {
      v96 = 0;
      v97 = v106;
      v98 = v107;
      v99 = v108;
      v100 = v109;
      v101 = v110;
      v102 = v111;
      sub_24144F8F8((uint64_t)v103);
    }
    v50 = v93;
    v51 = v85;
    v52 = v90;
    sub_2414B4528();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v52, v45);
    v53 = sub_2414B4A80();
    MEMORY[0x24BDAC7A8](v53);
    v54 = v92;
    v67[-4] = v50;
    v67[-3] = v54;
    LOBYTE(v67[-2]) = v39;
    swift_checkMetadataState();
    sub_2414B4570();
    swift_release();
    (*(void (**)(char *, uint64_t))(v87 + 8))(v51, v46);
    v55 = sub_2414B4A80();
    v56 = v80;
    MEMORY[0x24BDAC7A8](v55);
    v57 = v92;
    v67[-4] = v93;
    v67[-3] = v57;
    LOBYTE(v67[-2]) = v39;
    v58 = swift_checkMetadataState();
    v59 = (uint64_t)v69;
    v60 = v84;
    v61 = v76;
    v62 = v91;
    sub_2414B4570();
    swift_release();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v62, v44);
    *(_QWORD *)&v104 = v44;
    *((_QWORD *)&v104 + 1) = v58;
    v105 = v60;
    v106 = v61;
    swift_getOpaqueTypeConformance2();
    v63 = v79;
    v64 = v75;
    sub_2412FBF34(v59, v75, v79);
    v65 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
    v65(v59, v64);
    sub_2412EEA1C(v63, v64, v89);
    return ((uint64_t (*)(uint64_t, uint64_t))v65)(v63, v64);
  }
  else
  {
    _s17TransportControlsCMa();
    sub_2412C8030((unint64_t *)&qword_25437EDE0, (uint64_t (*)(uint64_t))_s17TransportControlsCMa, (uint64_t)&unk_2414C0048);
    result = sub_2414B364C();
    __break(1u);
  }
  return result;
}

uint64_t sub_24142DE3C@<X0>(_OWORD *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, void (*a4)(uint64_t, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[3];
  uint64_t v63[3];
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  __int16 v70;
  __int128 v71;
  __int128 v72;
  char v73;
  _BYTE v74[24];
  __int128 v75;
  _OWORD v76[2];
  __int16 v77;
  __int128 v78;
  __int128 v79;
  char v80;
  _BYTE v81[24];
  __int128 v82;
  _OWORD v83[2];
  __int16 v84;
  __int128 v85;
  __int128 v86;
  char v87;
  _QWORD v88[2];
  _QWORD v89[2];
  _BYTE v90[8];
  __int128 v91;
  __int128 v92;
  char v93;
  __int128 v94;
  _OWORD v95[3];
  _OWORD v96[3];

  v55 = a5;
  v54 = _s13FooterButtonsVMa(0, a3, (uint64_t)a4, (uint64_t)a4);
  v57 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v56 = (uint64_t)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v58 = (uint64_t)&v41 - v11;
  CGSizeMake(a3, a4);
  sub_2414B3E5C();
  v12 = a1[3];
  v95[2] = a1[2];
  v96[0] = v12;
  *(_OWORD *)((char *)v96 + 10) = *(_OWORD *)((char *)a1 + 58);
  v13 = a1[1];
  v95[0] = *a1;
  v95[1] = v13;
  sub_2412FD220((uint64_t)v95, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
  sub_2412FD278((uint64_t)v81);
  sub_2412FD220((uint64_t)v95, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
  *(_OWORD *)v74 = *(_OWORD *)v81;
  v74[16] = v81[16];
  *(_WORD *)&v74[17] = *(_WORD *)&v81[17];
  *(_QWORD *)&v75 = v82;
  BYTE8(v75) = BYTE8(v82);
  v76[0] = v83[0];
  v76[1] = v83[1];
  LOBYTE(v77) = v84;
  sub_24143F99C();
  v14 = (uint64_t)a4;
  v16 = _s15TimeControlViewVMa(0, a3, (uint64_t)a4, v15);
  v17 = MEMORY[0x242695AE8](&unk_2414C7B98, v16);
  sub_2414B4528();
  LOBYTE(v64) = v74[0];
  v65 = *(_OWORD *)&v74[8];
  v66 = v75;
  LOBYTE(v67) = v76[0];
  v18 = sub_2414B3514();
  v89[0] = v17;
  v89[1] = MEMORY[0x24BDECC60];
  v19 = MEMORY[0x24BDED308];
  v20 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v18, v89);
  sub_2414B44C8();
  v74[0] = v81[0];
  *(_OWORD *)&v74[8] = *(_OWORD *)&v81[8];
  v75 = v82;
  LOBYTE(v76[0]) = v83[0];
  *(_OWORD *)((char *)v76 + 8) = *(_OWORD *)((char *)v83 + 8);
  v21 = sub_2414B3514();
  v52 = v21;
  v88[0] = v20;
  v88[1] = MEMORY[0x24BDEC438];
  v53 = MEMORY[0x242695AE8](v19, v21, v88);
  sub_2412FBF34((uint64_t)v74, v21, (uint64_t)v90);
  v49 = a4;
  sub_2413EAC48(a2, (uint64_t)v74);
  v22 = *(_QWORD *)v74;
  v23 = *(_QWORD *)&v74[8];
  v46 = v75;
  *(_QWORD *)&v47 = *(_QWORD *)&v74[16];
  v24 = *((_QWORD *)&v75 + 1);
  v25 = *(_QWORD *)&v76[1];
  v44 = *((_QWORD *)&v76[0] + 1);
  *(_QWORD *)&v45 = *(_QWORD *)&v76[0];
  v26 = *((_QWORD *)&v76[1] + 1);
  LOBYTE(v21) = v77;
  v27 = HIBYTE(v77);
  v64 = *(_QWORD *)v74;
  v65 = *(_OWORD *)&v74[8];
  v66 = v75;
  v67 = *(_QWORD *)&v76[0];
  v68 = *(_OWORD *)((char *)v76 + 8);
  v69 = *((_QWORD *)&v76[1] + 1);
  v70 = v77;
  v43 = v78;
  v48 = v79;
  v71 = v78;
  v72 = v79;
  v73 = v80;
  v29 = _s12ControlsViewVMa(0, a3, v14, v28);
  v50 = v29;
  v51 = MEMORY[0x242695AE8](&unk_2414C4138, v29);
  sub_2412FBF34((uint64_t)&v64, v29, (uint64_t)v81);
  sub_2412C823C(v22, v23, v47, v46, v24, v45, v44, v25, v26, v21, v27);
  swift_unknownObjectRelease();
  swift_release();
  v30 = v56;
  sub_241434CA0(a3, (uint64_t)v49, v56);
  v31 = v54;
  *(_QWORD *)&v48 = MEMORY[0x242695AE8](&unk_2414C70A0, v54);
  sub_2412FBF34(v30, v31, v58);
  v49 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
  v49(v30, v31);
  LOBYTE(v64) = v90[0];
  v65 = v91;
  v66 = v92;
  LOBYTE(v67) = v93;
  v68 = v94;
  v32 = *(_QWORD *)&v81[8];
  v33 = *(_QWORD *)&v81[16];
  v34 = v82;
  v42 = *(_QWORD *)v81;
  v44 = *((_QWORD *)&v83[0] + 1);
  *(_QWORD *)&v43 = *(_QWORD *)&v83[0];
  v35 = *((_QWORD *)&v83[1] + 1);
  v46 = *(_QWORD *)&v83[1];
  LOBYTE(v21) = v84;
  v80 = v87;
  v36 = HIBYTE(v84);
  *(_QWORD *)v74 = *(_QWORD *)v81;
  *(_QWORD *)&v74[8] = *(_QWORD *)&v81[8];
  *(_QWORD *)&v74[16] = *(_QWORD *)&v81[16];
  v75 = v82;
  v76[0] = v83[0];
  v76[1] = v83[1];
  v77 = v84;
  v45 = v85;
  v47 = v86;
  v78 = v85;
  v79 = v86;
  v63[0] = (uint64_t)&v64;
  v63[1] = (uint64_t)v74;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16))(v30, v58, v31);
  v63[2] = v30;
  sub_2412C6F48(v42, v32, v33, v34, *((uint64_t *)&v34 + 1), v43, v44, v46, v35, v21, v36);
  swift_retain();
  swift_unknownObjectRetain();
  v62[0] = v52;
  v62[1] = v50;
  v62[2] = v31;
  v59 = v53;
  v60 = v51;
  v61 = v48;
  sub_2412F68CC(v63, 3uLL, (uint64_t)v62);
  v37 = v31;
  v38 = v31;
  v39 = v49;
  v49(v58, v37);
  sub_2412C823C(*(uint64_t *)v81, *(uint64_t *)&v81[8], *(uint64_t *)&v81[16], v82, *((uint64_t *)&v82 + 1), *(uint64_t *)&v83[0], *((uint64_t *)&v83[0] + 1), *(uint64_t *)&v83[1], *((uint64_t *)&v83[1] + 1), v84, SHIBYTE(v84));
  swift_unknownObjectRelease();
  swift_release();
  v39(v56, v38);
  sub_2412C823C(*(uint64_t *)v74, *(uint64_t *)&v74[8], *(uint64_t *)&v74[16], v75, *((uint64_t *)&v75 + 1), *(uint64_t *)&v76[0], *((uint64_t *)&v76[0] + 1), *(uint64_t *)&v76[1], *((uint64_t *)&v76[1] + 1), v77, SHIBYTE(v77));
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t sub_24142E484@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  _QWORD v20[2];

  _s15TimeControlViewVMa(255, a1, a2, a2);
  sub_2414B3514();
  sub_2414B3514();
  _s12ControlsViewVMa(255, a1, a2, v6);
  _s13FooterButtonsVMa(255, a1, a2, v7);
  swift_getTupleTypeMetadata3();
  v8 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v8);
  sub_2414B4894();
  sub_2414B3514();
  sub_2414B3514();
  v9 = sub_2414B3B50();
  v10 = sub_2414B3514();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v20 - v15;
  v17 = MEMORY[0x242695AE8](MEMORY[0x24BDEFDC0], v9);
  sub_2414B44C8();
  v20[0] = v17;
  v20[1] = MEMORY[0x24BDEC438];
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v10, v20);
  sub_2412FBF34((uint64_t)v13, v10, (uint64_t)v16);
  v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v13, v10);
  sub_2412EEA1C((uint64_t)v16, v10, a3);
  return ((uint64_t (*)(char *, uint64_t))v18)(v16, v10);
}

uint64_t sub_24142E6C8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  _QWORD v30[2];
  _QWORD v31[4];
  _QWORD v32[2];
  _QWORD v33[2];
  _QWORD v34[2];

  _s15TimeControlViewVMa(255, a1, a2, a2);
  sub_2414B3514();
  sub_2414B3514();
  _s12ControlsViewVMa(255, a1, a2, v6);
  _s13FooterButtonsVMa(255, a1, a2, v7);
  swift_getTupleTypeMetadata3();
  v8 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v8);
  v9 = sub_2414B4894();
  v10 = sub_2414B3514();
  v11 = sub_2414B3514();
  v12 = sub_2414B3B50();
  v13 = sub_2414B3514();
  v14 = MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v9);
  v15 = MEMORY[0x24BDECC60];
  v34[0] = v14;
  v34[1] = MEMORY[0x24BDECC60];
  v16 = MEMORY[0x24BDED308];
  v33[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v10, v34);
  v33[1] = v15;
  v17 = MEMORY[0x242695AE8](v16, v11, v33);
  v18 = MEMORY[0x24BDEFDC0];
  v32[0] = MEMORY[0x242695AE8](MEMORY[0x24BDEFDC0], v12);
  v32[1] = MEMORY[0x24BDEC438];
  v31[0] = v11;
  v31[1] = v13;
  v31[2] = v17;
  v31[3] = MEMORY[0x242695AE8](v16, v13, v32);
  MEMORY[0x242695A94](255, v31, MEMORY[0x24BDF3968], 0);
  v19 = sub_2414B3B50();
  v20 = sub_2414B3514();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)v30 - v25;
  v27 = MEMORY[0x242695AE8](v18, v19);
  sub_2414B44F8();
  v30[0] = v27;
  v30[1] = MEMORY[0x24BDECC38];
  MEMORY[0x242695AE8](v16, v20, v30);
  sub_2412FBF34((uint64_t)v23, v20, (uint64_t)v26);
  v28 = *(void (**)(char *, uint64_t))(v21 + 8);
  v28(v23, v20);
  sub_2412EEA1C((uint64_t)v26, v20, a3);
  return ((uint64_t (*)(char *, uint64_t))v28)(v26, v20);
}

uint64_t (*MCUINamespace<A>.nowPlayingHorizontalPadding.modify(uint64_t a1))(_QWORD *a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  *(_QWORD *)(a1 + 24) = sub_24142A2D0();
  sub_2414B3838();
  return sub_24142EA1C;
}

uint64_t sub_24142EA1C(_QWORD *a1)
{
  a1[1] = *a1;
  return sub_2414B3844();
}

double EnvironmentValues.nowPlayingHorizontalPadding.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  _QWORD v7[2];

  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2414B382C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v3, v0, v4);
  sub_24142A2D0();
  sub_2414B3838();
  v5 = *(double *)&v7[1];
  sub_2412CBE78((uint64_t)v3, qword_25437D4A0);
  return v5;
}

uint64_t sub_24142EB10@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2414B382C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v6, a1, v7);
  sub_24142A2D0();
  sub_2414B3838();
  v8 = v10[1];
  result = sub_2412CBE78((uint64_t)v6, qword_25437D4A0);
  *a2 = v8;
  return result;
}

uint64_t sub_24142EBD4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  v8 = sub_2414B382C();
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v6, a2, v8);
  v11[1] = v7;
  sub_24142A2D0();
  sub_2414B3844();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, v8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v6, v8);
}

uint64_t EnvironmentValues.nowPlayingHorizontalPadding.setter(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2414B382C();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, v2, v7);
  *(double *)&v10[1] = a1;
  sub_24142A2D0();
  sub_2414B3844();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v7);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v2, v6, v7);
}

void (*EnvironmentValues.nowPlayingHorizontalPadding.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, uint64_t, uint64_t);
  uint64_t v9;

  v3 = malloc(0x50uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[5] = v5;
  v6 = sub_2414B382C();
  v3[6] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, uint64_t, uint64_t))(v7 + 16);
  v3[7] = v7;
  v3[8] = v8;
  v8(v5, v1, v6);
  v3[9] = sub_24142A2D0();
  sub_2414B3838();
  v9 = v3[1];
  sub_2412CBE78((uint64_t)v5, qword_25437D4A0);
  *v3 = v9;
  return sub_24142EE70;
}

void sub_24142EE70(uint64_t **a1, char a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *a1;
  v4 = (*a1)[7];
  v5 = **a1;
  ((void (*)(uint64_t, uint64_t, uint64_t))(*a1)[8])((*a1)[5], v3[4], v3[6]);
  v6 = (void *)v3[5];
  v7 = v3[6];
  v8 = v3[4];
  v9 = 3;
  if ((a2 & 1) != 0)
    v9 = 2;
  v3[v9] = v5;
  sub_2414B3844();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v7);
  (*(void (**)(uint64_t, void *, uint64_t))(v4 + 32))(v8, v6, v7);
  free(v6);
  free(v3);
}

double sub_24142EF28@<D0>(double *a1@<X8>)
{
  double result;
  double v3;

  sub_24142A2D0();
  sub_2414B3838();
  result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_24142EF74()
{
  sub_24142A2D0();
  return sub_2414B3844();
}

uint64_t sub_24142EFBC()
{
  return 0;
}

ValueMetadata *type metadata accessor for NowPlayingHorizontalPaddingKey()
{
  return &type metadata for NowPlayingHorizontalPaddingKey;
}

uint64_t _s36FullScreenContentView_CompactRegularVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s36FullScreenContentView_CompactRegularVMn);
}

uint64_t sub_24142EFF0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t _s11ContentViewVMa_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s11ContentViewVMn_0);
}

void sub_24142F064()
{
  unint64_t v0;
  unint64_t v1;

  sub_2412C8EDC(319, (unint64_t *)&qword_254380B60, (void (*)(uint64_t))MEMORY[0x24BDEB418]);
  if (v0 <= 0x3F)
  {
    sub_2412C8EDC(319, (unint64_t *)&qword_25437DAA8, (void (*)(uint64_t))MEMORY[0x24BDEEE00]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_24142F134(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v7 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v7;
    v8 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v8;
    v33 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    v9 = a2[7];
    v10 = a2[8];
    v11 = a2[9];
    v29 = a2[10];
    v30 = a2[11];
    v12 = a2[14];
    v31 = a2[13];
    v32 = a2[12];
    v13 = *((_BYTE *)a2 + 120);
    v14 = *((_BYTE *)a2 + 121);
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    sub_2412C6F48(v33, v9, v10, v11, v29, v30, v32, v31, v12, v13, v14);
    *(_QWORD *)(a1 + 48) = v33;
    *(_QWORD *)(a1 + 56) = v9;
    *(_QWORD *)(a1 + 64) = v10;
    *(_QWORD *)(a1 + 72) = v11;
    *(_QWORD *)(a1 + 80) = v29;
    *(_QWORD *)(a1 + 88) = v30;
    *(_QWORD *)(a1 + 96) = v32;
    *(_QWORD *)(a1 + 104) = v31;
    *(_QWORD *)(a1 + 112) = v12;
    *(_BYTE *)(a1 + 120) = v13;
    *(_BYTE *)(a1 + 121) = v14;
    v15 = a2[16];
    v16 = *((_BYTE *)a2 + 136);
    sub_2412C7080(v15, v16);
    *(_QWORD *)(a1 + 128) = v15;
    *(_BYTE *)(a1 + 136) = v16;
    v17 = a2[18];
    v18 = a2[19];
    v19 = *((_BYTE *)a2 + 160);
    sub_2412C72E4(v17, v18, v19);
    *(_QWORD *)(a1 + 144) = v17;
    *(_QWORD *)(a1 + 152) = v18;
    *(_BYTE *)(a1 + 160) = v19;
    v20 = *(int *)(a3 + 56);
    v21 = (_QWORD *)(a1 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v23 = sub_2414B2F8C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v24 = *(int *)(a3 + 60);
    v25 = (_QWORD *)(a1 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v27 = sub_2414B3934();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24142F39C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  sub_2412C823C(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_BYTE *)(a1 + 120), *(_BYTE *)(a1 + 121));
  sub_2412C821C(*(_QWORD *)(a1 + 128), *(_BYTE *)(a1 + 136));
  sub_2412C822C(*(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_BYTE *)(a1 + 160));
  v4 = a1 + *(int *)(a2 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2414B2F8C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = a1 + *(int *)(a2 + 60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v7 = sub_2414B3934();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_24142F4D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_QWORD *)(a2 + 56);
  v32 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 72);
  v28 = *(_QWORD *)(a2 + 80);
  v29 = *(_QWORD *)(a2 + 88);
  v11 = *(_QWORD *)(a2 + 112);
  v30 = *(_QWORD *)(a2 + 104);
  v31 = *(_QWORD *)(a2 + 96);
  v12 = *(_BYTE *)(a2 + 120);
  v13 = *(_BYTE *)(a2 + 121);
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  sub_2412C6F48(v32, v8, v9, v10, v28, v29, v31, v30, v11, v12, v13);
  *(_QWORD *)(a1 + 48) = v32;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  *(_QWORD *)(a1 + 80) = v28;
  *(_QWORD *)(a1 + 88) = v29;
  *(_QWORD *)(a1 + 96) = v31;
  *(_QWORD *)(a1 + 104) = v30;
  *(_QWORD *)(a1 + 112) = v11;
  *(_BYTE *)(a1 + 120) = v12;
  *(_BYTE *)(a1 + 121) = v13;
  v14 = *(_QWORD *)(a2 + 128);
  v15 = *(_BYTE *)(a2 + 136);
  sub_2412C7080(v14, v15);
  *(_QWORD *)(a1 + 128) = v14;
  *(_BYTE *)(a1 + 136) = v15;
  v16 = *(_QWORD *)(a2 + 144);
  v17 = *(_QWORD *)(a2 + 152);
  v18 = *(_BYTE *)(a2 + 160);
  sub_2412C72E4(v16, v17, v18);
  *(_QWORD *)(a1 + 144) = v16;
  *(_QWORD *)(a1 + 152) = v17;
  *(_BYTE *)(a1 + 160) = v18;
  v19 = *(int *)(a3 + 56);
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v22 = sub_2414B2F8C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  }
  else
  {
    *v20 = *v21;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v23 = *(int *)(a3 + 60);
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v26 = sub_2414B3934();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  }
  else
  {
    *v24 = *v25;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_24142F708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v42;
  char v43;
  char v44;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 72);
  v9 = *(_QWORD *)(a2 + 80);
  v10 = *(_QWORD *)(a2 + 88);
  v12 = *(_QWORD *)(a2 + 96);
  v11 = *(_QWORD *)(a2 + 104);
  v42 = *(_QWORD *)(a2 + 112);
  v43 = *(_BYTE *)(a2 + 120);
  v44 = *(_BYTE *)(a2 + 121);
  sub_2412C6F48(v5, v6, v7, v8, v9, v10, v12, v11, v42, v43, v44);
  v13 = *(_QWORD *)(a1 + 48);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *(_QWORD *)(a1 + 64);
  v16 = *(_QWORD *)(a1 + 72);
  v17 = *(_QWORD *)(a1 + 80);
  v18 = *(_QWORD *)(a1 + 88);
  v19 = *(_QWORD *)(a1 + 96);
  v20 = *(_QWORD *)(a1 + 104);
  v21 = *(_QWORD *)(a1 + 112);
  v22 = *(_BYTE *)(a1 + 120);
  v23 = *(_BYTE *)(a1 + 121);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 88) = v10;
  *(_QWORD *)(a1 + 96) = v12;
  *(_QWORD *)(a1 + 104) = v11;
  *(_QWORD *)(a1 + 112) = v42;
  *(_BYTE *)(a1 + 120) = v43;
  *(_BYTE *)(a1 + 121) = v44;
  sub_2412C823C(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23);
  v24 = *(_QWORD *)(a2 + 128);
  LOBYTE(v5) = *(_BYTE *)(a2 + 136);
  sub_2412C7080(v24, v5);
  v25 = *(_QWORD *)(a1 + 128);
  v26 = *(_BYTE *)(a1 + 136);
  *(_QWORD *)(a1 + 128) = v24;
  *(_BYTE *)(a1 + 136) = v5;
  sub_2412C821C(v25, v26);
  v27 = *(_QWORD *)(a2 + 144);
  v28 = *(_QWORD *)(a2 + 152);
  LOBYTE(v6) = *(_BYTE *)(a2 + 160);
  sub_2412C72E4(v27, v28, v6);
  v29 = *(_QWORD *)(a1 + 144);
  v30 = *(_QWORD *)(a1 + 152);
  v31 = *(_BYTE *)(a1 + 160);
  *(_QWORD *)(a1 + 144) = v27;
  *(_QWORD *)(a1 + 152) = v28;
  *(_BYTE *)(a1 + 160) = v6;
  sub_2412C822C(v29, v30, v31);
  if (a1 != a2)
  {
    v32 = *(int *)(a3 + 56);
    v33 = (_QWORD *)(a1 + v32);
    v34 = (_QWORD *)(a2 + v32);
    sub_2412CBE78(a1 + v32, &qword_254380B58);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v35 = sub_2414B2F8C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    }
    else
    {
      *v33 = *v34;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v36 = *(int *)(a3 + 60);
    v37 = (_QWORD *)(a1 + v36);
    v38 = (_QWORD *)(a2 + v36);
    sub_2412CBE78(a1 + v36, &qword_25437DAA0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v39 = sub_2414B3934();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    }
    else
    {
      *v37 = *v38;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24142F9CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 106) = *(_OWORD *)(a2 + 106);
  v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  v9 = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = v9;
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  v10 = *(int *)(a3 + 56);
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_2414B2F8C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  v15 = *(int *)(a3 + 60);
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = sub_2414B3934();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v16, v17, v19);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  return a1;
}

uint64_t sub_24142FB3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  void *v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_release();
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_release();
  v8 = *(_BYTE *)(a2 + 120);
  v9 = *(_BYTE *)(a2 + 121);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_QWORD *)(a1 + 64);
  v13 = *(_QWORD *)(a1 + 72);
  v14 = *(_QWORD *)(a1 + 80);
  v15 = *(_QWORD *)(a1 + 88);
  v16 = *(_QWORD *)(a1 + 96);
  v17 = *(_QWORD *)(a1 + 104);
  v18 = *(_QWORD *)(a1 + 112);
  v19 = *(_BYTE *)(a1 + 120);
  v20 = *(_BYTE *)(a1 + 121);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 120) = v8;
  *(_BYTE *)(a1 + 121) = v9;
  sub_2412C823C(v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20);
  v21 = *(_BYTE *)(a2 + 136);
  v22 = *(_QWORD *)(a1 + 128);
  v23 = *(_BYTE *)(a1 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = v21;
  sub_2412C821C(v22, v23);
  v24 = *(_BYTE *)(a2 + 160);
  v25 = *(_QWORD *)(a1 + 144);
  v26 = *(_QWORD *)(a1 + 152);
  v27 = *(_BYTE *)(a1 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 160) = v24;
  sub_2412C822C(v25, v26, v27);
  if (a1 != a2)
  {
    v28 = *(int *)(a3 + 56);
    v29 = (void *)(a1 + v28);
    v30 = (const void *)(a2 + v28);
    sub_2412CBE78(a1 + v28, &qword_254380B58);
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v32 = sub_2414B2F8C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v29, v30, v32);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    v33 = *(int *)(a3 + 60);
    v34 = (void *)(a1 + v33);
    v35 = (const void *)(a2 + v33);
    sub_2412CBE78(a1 + v33, &qword_25437DAA0);
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v37 = sub_2414B3934();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v34, v35, v37);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_24142FD60()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24142FD6C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(qword_2571261F0);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 56);
    }
    else
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571226F0);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 60);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a1[v12], a2, v11);
  }
}

uint64_t sub_24142FE20()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_24142FE2C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)result = a2;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2571261F0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 56);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571226F0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 60);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_24142FED0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s11ContentViewVMa_0(255, *a1, a1[1], a4);
  JUMPOUT(0x242695AE8);
}

uint64_t sub_24142FEF8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t _s18DefaultContentViewVMa_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s18DefaultContentViewVMn_0);
}

uint64_t _s28ControlsAndFooterButtonsViewVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s28ControlsAndFooterButtonsViewVMn);
}

uint64_t sub_24142FF44@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_241429838(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_24142FF50()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257128880;
  if (!qword_257128880)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128868);
    v2[0] = sub_2412C8030(&qword_257127638, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingContrastSensitiveBackdrop, (uint64_t)&unk_2414C41E4);
    v2[1] = sub_2412C8FC4(&qword_2571278C8, &qword_2571278D0, MEMORY[0x24BDEFFA0]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257128880);
  }
  return result;
}

uint64_t sub_24142FFEC@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_24142A3E0(*(uint64_t **)(v2 + 32), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a1, a2);
}

unint64_t sub_24142FFF8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257128890;
  if (!qword_257128890)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128860);
    v2[0] = sub_24143007C(&qword_257128898, &qword_257128870, (uint64_t (*)(void))sub_24142FF50);
    v2[1] = MEMORY[0x24BDEF830];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257128890);
  }
  return result;
}

uint64_t sub_24143007C(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241430100@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_24142B018(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_24143010C(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3();
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_241430170()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571288B0;
  if (!qword_2571288B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571288B8);
    v2[0] = sub_2412DC484(&qword_2571288C0, &qword_2571288C8, (uint64_t (*)(void))sub_241430214, MEMORY[0x24BDF1050]);
    v2[1] = sub_2412C8FC4((unint64_t *)&qword_2571228F8, qword_257122900, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571288B0);
  }
  return result;
}

unint64_t sub_241430214()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571288D0;
  if (!qword_2571288D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571288D8);
    v2[0] = sub_2412DC484(&qword_2571278A0, &qword_2571278A8, (uint64_t (*)(void))sub_2413F1460, MEMORY[0x24BDECC60]);
    v2[1] = sub_24137771C();
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571288D0);
  }
  return result;
}

uint64_t sub_2414302A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_24142B564(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_2414302AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v15 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_BYTE *)(a1 + 80);
  v7 = *(_BYTE *)(a1 + 81);
  v8 = *(_QWORD *)(a1 + 88);
  v11 = *(_QWORD *)(a1 + 96);
  v12 = *(_QWORD *)(a1 + 40);
  v10 = *(_BYTE *)(a1 + 104);
  v17 = *(_QWORD *)(a1 + 128);
  v18 = *(_QWORD *)(a1 + 120);
  swift_release();
  sub_2412C823C(v16, v15, v14, v13, v12, v2, v3, v4, v5, v6, v7);
  sub_2412C822C(v8, v11, v10);
  swift_release();
  sub_241430404(v18, v17);
  return a1;
}

uint64_t sub_241430404(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_241430434()
{
  uint64_t v0;

  return sub_24142BB20(*(_QWORD *)(v0 + 32));
}

unint64_t sub_241430440()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2571288F8;
  if (!qword_2571288F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128900);
    v2 = sub_2412C8FC4(&qword_2571278C8, &qword_2571278D0, MEMORY[0x24BDEFFA0]);
    v3[0] = MEMORY[0x24BDF3E20];
    v3[1] = v2;
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2571288F8);
  }
  return result;
}

uint64_t sub_2414304C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  __int16 v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v17 = *(_QWORD *)(a1 + 16);
  v18 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v15 = *(_QWORD *)(a1 + 48);
  v16 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 72);
  v13 = *(_QWORD *)(a1 + 64);
  v14 = *(_QWORD *)(a1 + 56);
  v5 = *(_BYTE *)(a1 + 80);
  v6 = *(_BYTE *)(a1 + 81);
  v11 = *(_QWORD *)(a1 + 96);
  v12 = *(_QWORD *)(a1 + 88);
  v10 = *(_BYTE *)(a1 + 104);
  v27 = *(_QWORD *)(a1 + 128);
  v28 = *(_QWORD *)(a1 + 120);
  v29 = *(_QWORD *)(a1 + 288);
  v30 = *(_QWORD *)(a1 + 280);
  v20 = *(_OWORD *)(a1 + 344);
  v19 = *(_OWORD *)(a1 + 360);
  v21 = *(_QWORD *)(a1 + 296);
  v22 = *(_QWORD *)(a1 + 304);
  v23 = *(_QWORD *)(a1 + 312);
  v24 = *(_QWORD *)(a1 + 320);
  v25 = *(_QWORD *)(a1 + 328);
  v26 = *(_QWORD *)(a1 + 336);
  v7 = *(_QWORD *)(a1 + 376);
  v8 = *(_WORD *)(a1 + 384);
  swift_release();
  sub_2412C823C(v18, v17, v16, v2, v3, v15, v14, v13, v4, v5, v6);
  sub_2412C822C(v12, v11, v10);
  swift_release();
  sub_241430404(v28, v27);
  sub_24143068C(v30, v29, v21, v22, v23, v24, v25, v26, v20, *((uint64_t *)&v20 + 1), v19, SBYTE8(v19), SBYTE9(v19), v7, v8);
  return a1;
}

uint64_t sub_24143068C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char a13, uint64_t a14, char a15)
{
  if (result != 1)
  {
    swift_unknownObjectRelease();
    sub_2412C823C(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13 & 1);
    return sub_2412C821C(a14, a15 & 1);
  }
  return result;
}

uint64_t sub_241430754@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24142BCE0(*(_QWORD *)(v1 + 32), a1);
}

unint64_t sub_241430760()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257128918;
  if (!qword_257128918)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128910);
    v2[0] = sub_24143007C(&qword_257128920, &qword_257128928, sub_2414307E4);
    v2[1] = MEMORY[0x24BDEF830];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257128918);
  }
  return result;
}

uint64_t sub_2414307E4()
{
  return sub_2412DC484(&qword_257128930, &qword_257128938, (uint64_t (*)(void))sub_241430440, MEMORY[0x24BDF1050]);
}

double sub_241430808(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

void sub_24143082C()
{
  unint64_t v0;

  sub_2412C8EDC(319, (unint64_t *)&qword_25437DAA8, (void (*)(uint64_t))MEMORY[0x24BDEEE00]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

unint64_t sub_2414308B8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char v26;
  char v27;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v6 = *(_QWORD *)a2;
    v7 = *(_QWORD *)(a2 + 8);
    v8 = *(_QWORD *)(a2 + 16);
    v9 = *(_QWORD *)(a2 + 24);
    v10 = *(_QWORD *)(a2 + 32);
    v11 = *(_QWORD *)(a2 + 40);
    v13 = *(_QWORD *)(a2 + 48);
    v12 = *(_QWORD *)(a2 + 56);
    v25 = *(_QWORD *)(a2 + 64);
    v26 = *(_BYTE *)(a2 + 72);
    v27 = *(_BYTE *)(a2 + 73);
    sub_2412C6F48(*(_QWORD *)a2, v7, v8, v9, v10, v11, v13, v12, v25, v26, v27);
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v9;
    *(_QWORD *)(a1 + 32) = v10;
    *(_QWORD *)(a1 + 40) = v11;
    *(_QWORD *)(a1 + 48) = v13;
    *(_QWORD *)(a1 + 56) = v12;
    *(_QWORD *)(a1 + 64) = v25;
    *(_BYTE *)(a1 + 72) = v26;
    v14 = *(int *)(a3 + 36);
    v15 = (_QWORD *)(a1 + v14);
    v16 = (_QWORD *)(a2 + v14);
    *(_BYTE *)(a1 + 73) = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_2414B3934();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v19 = *(int *)(a3 + 40);
    v20 = (_QWORD *)(a1 + v19);
    v21 = (uint64_t *)(a2 + v19);
    v22 = *v21;
    v23 = v21[1];
    *v20 = v22;
    v20[1] = v23;
  }
  swift_retain();
  return a1;
}

uint64_t sub_241430A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_2412C823C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_BYTE *)(a1 + 72), *(_BYTE *)(a1 + 73));
  v4 = a1 + *(int *)(a2 + 36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2414B3934();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  return swift_release();
}

uint64_t sub_241430AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char v24;
  char v25;

  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v12 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v23 = *(_QWORD *)(a2 + 64);
  v24 = *(_BYTE *)(a2 + 72);
  v25 = *(_BYTE *)(a2 + 73);
  sub_2412C6F48(*(_QWORD *)a2, v6, v7, v8, v9, v10, v12, v11, v23, v24, v25);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v23;
  *(_BYTE *)(a1 + 72) = v24;
  v13 = *(int *)(a3 + 36);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *(_BYTE *)(a1 + 73) = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = sub_2414B3934();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v17 = *(int *)(a3 + 40);
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v20 = *v19;
  v21 = v19[1];
  *v18 = v20;
  v18[1] = v21;
  swift_retain();
  return a1;
}

uint64_t sub_241430C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  char v33;
  char v34;

  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v12 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v32 = *(_QWORD *)(a2 + 64);
  v33 = *(_BYTE *)(a2 + 72);
  v34 = *(_BYTE *)(a2 + 73);
  sub_2412C6F48(*(_QWORD *)a2, v6, v7, v8, v9, v10, v12, v11, v32, v33, v34);
  v13 = *(_QWORD *)a1;
  v14 = *(_QWORD *)(a1 + 8);
  v15 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 24);
  v17 = *(_QWORD *)(a1 + 32);
  v18 = *(_QWORD *)(a1 + 40);
  v19 = *(_QWORD *)(a1 + 48);
  v20 = *(_QWORD *)(a1 + 56);
  v21 = *(_QWORD *)(a1 + 64);
  v22 = *(_BYTE *)(a1 + 72);
  v23 = *(_BYTE *)(a1 + 73);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v32;
  *(_BYTE *)(a1 + 72) = v33;
  *(_BYTE *)(a1 + 73) = v34;
  sub_2412C823C(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23);
  if (a1 != a2)
  {
    v24 = *(int *)(a3 + 36);
    v25 = (_QWORD *)(a1 + v24);
    v26 = (_QWORD *)(a2 + v24);
    sub_2412CBE78(a1 + v24, &qword_25437DAA0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v27 = sub_2414B3934();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v28 = *(int *)(a3 + 40);
  v29 = a1 + v28;
  v30 = a2 + v28;
  *(_QWORD *)(a1 + v28) = *(_QWORD *)(a2 + v28);
  swift_retain();
  swift_release();
  *(_QWORD *)(v29 + 8) = *(_QWORD *)(v30 + 8);
  return a1;
}

_OWORD *sub_241430E00(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  *(_OWORD *)((char *)a1 + 58) = *(_OWORD *)((char *)a2 + 58);
  v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  v8 = *(int *)(a3 + 36);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2414B3934();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 40)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_241430ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  v6 = *(_QWORD *)(a2 + 64);
  v7 = *(_BYTE *)(a2 + 72);
  v8 = *(_BYTE *)(a2 + 73);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  v15 = *(_QWORD *)(a1 + 48);
  v16 = *(_QWORD *)(a1 + 56);
  v17 = *(_QWORD *)(a1 + 64);
  v18 = *(_BYTE *)(a1 + 72);
  v19 = *(_BYTE *)(a1 + 73);
  v20 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v20;
  v21 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v21;
  *(_QWORD *)(a1 + 64) = v6;
  *(_BYTE *)(a1 + 72) = v7;
  *(_BYTE *)(a1 + 73) = v8;
  sub_2412C823C(v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
  if (a1 != a2)
  {
    v22 = *(int *)(a3 + 36);
    v23 = (void *)(a1 + v22);
    v24 = (const void *)(a2 + v22);
    sub_2412CBE78(a1 + v22, &qword_25437DAA0);
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v26 = sub_2414B3934();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v23, v24, v26);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
  }
  v27 = *(int *)(a3 + 40);
  v28 = a1 + v27;
  v29 = (_QWORD *)(a2 + v27);
  *(_QWORD *)(a1 + v27) = *v29;
  swift_release();
  *(_QWORD *)(v28 + 8) = v29[1];
  return a1;
}

uint64_t sub_24143101C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241431028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571226F0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 36), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 40));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_2414310B8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2414310C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_2571226F0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 36), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 40)) = a2;
  return result;
}

uint64_t sub_241431144(uint64_t a1)
{
  swift_release();
  sub_2412C823C(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80), *(_BYTE *)(a1 + 81));
  sub_2412C822C(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_BYTE *)(a1 + 104));
  return swift_release();
}

uint64_t sub_2414311AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 24);
  v17 = *(_QWORD *)(a2 + 16);
  v18 = v4;
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 72);
  v16 = *(_QWORD *)(a2 + 64);
  v11 = *(_BYTE *)(a2 + 80);
  v12 = *(_BYTE *)(a2 + 81);
  swift_retain();
  sub_2412C6F48(v18, v17, v5, v6, v7, v8, v9, v16, v10, v11, v12);
  *(_QWORD *)(a1 + 8) = v18;
  *(_QWORD *)(a1 + 16) = v17;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v16;
  *(_QWORD *)(a1 + 72) = v10;
  *(_BYTE *)(a1 + 80) = v11;
  *(_BYTE *)(a1 + 81) = v12;
  v13 = *(_QWORD *)(a2 + 88);
  v14 = *(_QWORD *)(a2 + 96);
  LOBYTE(v10) = *(_BYTE *)(a2 + 104);
  sub_2412C72E4(v13, v14, v10);
  *(_QWORD *)(a1 + 88) = v13;
  *(_QWORD *)(a1 + 96) = v14;
  *(_BYTE *)(a1 + 104) = v10;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_retain();
  return a1;
}

uint64_t sub_2414312B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v29;
  char v30;
  char v31;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v29 = *(_QWORD *)(a2 + 72);
  v30 = *(_BYTE *)(a2 + 80);
  v31 = *(_BYTE *)(a2 + 81);
  sub_2412C6F48(v4, v5, v6, v7, v8, v9, v10, v11, v29, v30, v31);
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 48);
  v18 = *(_QWORD *)(a1 + 56);
  v19 = *(_QWORD *)(a1 + 64);
  v20 = *(_QWORD *)(a1 + 72);
  v21 = *(_BYTE *)(a1 + 80);
  v22 = *(_BYTE *)(a1 + 81);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v29;
  *(_BYTE *)(a1 + 80) = v30;
  *(_BYTE *)(a1 + 81) = v31;
  sub_2412C823C(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  v23 = *(_QWORD *)(a2 + 88);
  v24 = *(_QWORD *)(a2 + 96);
  LOBYTE(v6) = *(_BYTE *)(a2 + 104);
  sub_2412C72E4(v23, v24, v6);
  v25 = *(_QWORD *)(a1 + 88);
  v26 = *(_QWORD *)(a1 + 96);
  v27 = *(_BYTE *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = v23;
  *(_QWORD *)(a1 + 96) = v24;
  *(_BYTE *)(a1 + 104) = v6;
  sub_2412C822C(v25, v26, v27);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_241431404(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 72);
  v5 = *(_BYTE *)(a2 + 80);
  v6 = *(_BYTE *)(a2 + 81);
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(_QWORD *)(a1 + 56);
  v14 = *(_QWORD *)(a1 + 64);
  v15 = *(_QWORD *)(a1 + 72);
  v16 = *(_BYTE *)(a1 + 80);
  v17 = *(_BYTE *)(a1 + 81);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = v4;
  *(_BYTE *)(a1 + 80) = v5;
  *(_BYTE *)(a1 + 81) = v6;
  sub_2412C823C(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
  v18 = *(_BYTE *)(a2 + 104);
  v19 = *(_QWORD *)(a1 + 88);
  v20 = *(_QWORD *)(a1 + 96);
  v21 = *(_BYTE *)(a1 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = v18;
  sub_2412C822C(v19, v20, v21);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_release();
  return a1;
}

uint64_t sub_2414314D0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  _QWORD v26[2];

  v1 = *a1;
  v2 = a1[1];
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381280);
  v3 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2543812C0);
  v4 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_257122900);
  v5 = sub_2414B3514();
  v6 = sub_2414B3514();
  v7 = sub_2414B53B0();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v9 = MEMORY[0x24BDF1028];
  v26[0] = AssociatedConformanceWitness;
  v26[1] = sub_2412C8FC4(&qword_254381278, &qword_254381280, MEMORY[0x24BDF1028]);
  v10 = MEMORY[0x24BDED308];
  v25[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v3, v26);
  v25[1] = sub_2412C8FC4(&qword_2543812B8, (uint64_t *)&unk_2543812C0, v9);
  v24[0] = MEMORY[0x242695AE8](v10, v4, v25);
  v24[1] = sub_2412C8FC4((unint64_t *)&qword_2571228F8, qword_257122900, MEMORY[0x24BDEFB48]);
  v23[0] = MEMORY[0x242695AE8](v10, v5, v24);
  v23[1] = MEMORY[0x24BDF1050];
  v22 = MEMORY[0x242695AE8](v10, v6, v23);
  v11 = MEMORY[0x24BDF5578];
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v7, &v22);
  sub_2414B3A6C();
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571278D0);
  sub_2414B3514();
  sub_2414B3DB4();
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128878);
  _s18DefaultContentViewVMa_0(255, v1, v2, v12);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128848);
  sub_2414B3514();
  v14 = _s10HeaderViewVMa(255, v1, v2, v13);
  v15 = sub_2414B53B0();
  v21 = MEMORY[0x242695AE8](&unk_2414C5338, v14);
  MEMORY[0x242695AE8](v11, v15, &v21);
  sub_2414B3604();
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128850);
  sub_2414B3514();
  _s28ControlsAndFooterButtonsViewVMa(255, v1, v2, v16);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128858);
  sub_2414B3514();
  sub_2414B3514();
  swift_getTupleTypeMetadata2();
  v17 = sub_2414B4B1C();
  v18 = MEMORY[0x24BDF5428];
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v17);
  sub_2414B4894();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381070);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380FD0);
  sub_2414B3514();
  swift_getTupleTypeMetadata3();
  v19 = sub_2414B4B1C();
  return MEMORY[0x242695AE8](v18, v19);
}

uint64_t sub_241431908()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24143193C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241431970@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_24142C1B4(v2[4], v2[2], v2[3], a1, a2);
}

double sub_24143197C(_OWORD *a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)a1 + 121) = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_241431998(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  char v12;
  uint64_t result;

  if (a11)
  {
    v12 = a4 & 1;
    swift_unknownObjectRetain();
    sub_2412C7080(a3, v12);
    return swift_retain();
  }
  return result;
}

uint64_t sub_2414319EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5;
  uint64_t result;

  if (a2)
  {
    v5 = a4 & 1;
    swift_retain();
    sub_2412C7080(a3, v5);
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_241431A38(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  char v12;
  uint64_t result;

  if (a11)
  {
    v12 = a4 & 1;
    swift_unknownObjectRelease();
    sub_2412C821C(a3, v12);
    return swift_release();
  }
  return result;
}

uint64_t sub_241431A8C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 136);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), v4);
  return a1;
}

uint64_t sub_241431AF0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (a2)
  {
    swift_release();
    sub_2412C821C(a3, a4 & 1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_241431B3C(uint64_t a1)
{
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_BYTE *)(a1 + 24);
  swift_release();
  sub_2412C821C(v2, v3);
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_241431B8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24142DE3C(*(_OWORD **)(v1 + 32), *(_BYTE *)(v1 + 40), *(_QWORD *)(v1 + 16), *(void (**)(uint64_t, uint64_t))(v1 + 24), a1);
}

uint64_t sub_241431B9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24142E484(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_241431BA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24142E6C8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_241431BB4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  v4 = *a1;
  v5 = a1[1];
  _s21FullScreenArtworkViewVMa(255, *a1, v5, a4);
  sub_2414B3DB4();
  sub_2414B3514();
  _s33DefaultMetadataAndContextMenuViewVMa(255, v4, v5, v6);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_257122900);
  sub_2414B3514();
  sub_2414B53B0();
  _s10BannerViewVMa(255, v4, v5, v7);
  sub_2414B3514();
  sub_2414B3514();
  sub_2414B53B0();
  swift_getTupleTypeMetadata3();
  v8 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v8);
  v9 = sub_2414B4894();
  v10 = sub_2414B3514();
  v12[0] = MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v9);
  v12[1] = MEMORY[0x24BDECC60];
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v10, v12);
}

uint64_t sub_241431D40(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t OpaqueTypeConformance2;
  uint64_t v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  _QWORD v32[2];
  _QWORD v33[2];

  v4 = *a1;
  v5 = a1[1];
  _s15TimeControlViewVMa(255, *a1, v5, a4);
  sub_2414B3514();
  sub_2414B3514();
  _s12ControlsViewVMa(255, v4, v5, v6);
  _s13FooterButtonsVMa(255, v4, v5, v7);
  swift_getTupleTypeMetadata3();
  v8 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v8);
  v9 = sub_2414B4894();
  v10 = sub_2414B3514();
  v11 = sub_2414B3514();
  v12 = sub_2414B3B50();
  v13 = sub_2414B3514();
  v14 = MEMORY[0x242695AE8](MEMORY[0x24BDF4700], v9);
  v15 = MEMORY[0x24BDECC60];
  v33[0] = v14;
  v33[1] = MEMORY[0x24BDECC60];
  v16 = MEMORY[0x24BDED308];
  v32[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v10, v33);
  v32[1] = v15;
  v17 = MEMORY[0x242695AE8](v16, v11, v32);
  v18 = MEMORY[0x24BDEFDC0];
  v31[0] = MEMORY[0x242695AE8](MEMORY[0x24BDEFDC0], v12);
  v31[1] = MEMORY[0x24BDEC438];
  v19 = MEMORY[0x242695AE8](v16, v13, v31);
  v27 = v11;
  v28 = v13;
  v29 = v17;
  v30 = v19;
  v20 = MEMORY[0x242695A94](255, &v27, MEMORY[0x24BDF3968], 0);
  v21 = sub_2414B3B50();
  v22 = sub_2414B3514();
  v27 = v11;
  v28 = v13;
  v29 = v17;
  v30 = v19;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v26[0] = MEMORY[0x242695AE8](v18, v21);
  v26[1] = MEMORY[0x24BDECC38];
  v24 = MEMORY[0x242695AE8](v16, v22, v26);
  v27 = v20;
  v28 = v22;
  v29 = OpaqueTypeConformance2;
  v30 = v24;
  return swift_getOpaqueTypeConformance2();
}

void *sub_241431FB4()
{
  uint64_t v0;
  void *result;

  type metadata accessor for MotionEnabledState();
  v0 = swift_allocObject();
  result = sub_24143224C();
  qword_257137178 = v0;
  return result;
}

uint64_t sub_241431FF0()
{
  swift_getKeyPath();
  sub_2412C8030(&qword_257121D10, (uint64_t (*)(uint64_t))type metadata accessor for MotionEnabledState, (uint64_t)&unk_2414C6D98);
  sub_2414B2B84();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_24143208C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030(&qword_257121D10, (uint64_t (*)(uint64_t))type metadata accessor for MotionEnabledState, (uint64_t)&unk_2414C6D98);
  sub_2414B2B84();
  swift_release();
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_241432130()
{
  swift_getKeyPath();
  sub_2412C8030(&qword_257121D10, (uint64_t (*)(uint64_t))type metadata accessor for MotionEnabledState, (uint64_t)&unk_2414C6D98);
  swift_bridgeObjectRetain();
  sub_2414B2B78();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2414321E8(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(_QWORD *)(a1 + 24) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void *sub_24143224C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  void *v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  char *v41;
  id *v42;
  _QWORD *v43;
  id v44;
  void *v45;
  void *v46;
  id v47;
  _QWORD *v48;
  id v49;
  id v50;
  id v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  void (**v80)(char *, id *);
  id *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  void (*v95)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;

  v1 = (void *)v0;
  v92 = sub_2414B526C();
  v87 = *(_QWORD *)(v92 - 8);
  MEMORY[0x24BDAC7A8](v92);
  v82 = (char *)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380A40);
  v85 = *(_QWORD *)(v93 - 8);
  MEMORY[0x24BDAC7A8](v93);
  v83 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = (id *)__swift_instantiateConcreteTypeFromMangledName(&qword_257128B70);
  v80 = (void (**)(char *, id *))*(v81 - 1);
  MEMORY[0x24BDAC7A8](v81);
  v79 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&qword_257128B78);
  v88 = *(v89 - 1);
  MEMORY[0x24BDAC7A8](v89);
  v86 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_254384330);
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v72 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_254384320);
  v76 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v75 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543842B0);
  MEMORY[0x24BDAC7A8](v8);
  v91 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_257128B80);
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v11 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257128B88);
  v84 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v71 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254384300 != -1)
    swift_once();
  v14 = (void *)qword_25438E8C0;
  *(_QWORD *)(v0 + 16) = qword_25438E8C0;
  *(_QWORD *)(v0 + 24) = MEMORY[0x24BEE4B08];
  v97 = v0 + 24;
  *(_WORD *)(v0 + 32) = 0;
  v15 = v0 + OBJC_IVAR____TtC11MediaCoreUI18MotionEnabledState___observationRegistrar;
  v16 = v14;
  sub_2414B2BA8();
  if (qword_25437D278 != -1)
    swift_once();
  v17 = sub_2414B2CA4();
  __swift_project_value_buffer(v17, (uint64_t)qword_25438E7D0);
  swift_retain_n();
  v18 = sub_2414B2C8C();
  v19 = sub_2414B51B8();
  v20 = os_log_type_enabled(v18, v19);
  v78 = v15;
  if (v20)
  {
    v21 = swift_slowAlloc();
    v22 = (void *)swift_slowAlloc();
    v104 = v22;
    *(_DWORD *)v21 = 67109378;
    swift_getKeyPath();
    v96 = v12;
    v98 = v0;
    sub_2412C8030(&qword_257121D10, (uint64_t (*)(uint64_t))type metadata accessor for MotionEnabledState, (uint64_t)&unk_2414C6D98);
    sub_2414B2B84();
    swift_release();
    v23 = *(unsigned __int8 *)(v0 + 33);
    swift_release();
    LODWORD(v98) = v23;
    sub_2414B541C();
    swift_release();
    *(_WORD *)(v21 + 8) = 2082;
    v24 = sub_241433DF8();
    v98 = sub_2412E4890(v24, v25, (uint64_t *)&v104);
    v12 = v96;
    sub_2414B541C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2412C1000, v18, v19, "isMotionEnabled was initialized to %{BOOL}d by default. attributesDescription=(%{public}s)", (uint8_t *)v21, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v22, -1, -1);
    MEMORY[0x242695BD8](v21, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  sub_241433968();
  v26 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  swift_getKeyPath();
  sub_2414B29E0();

  swift_release();
  v27 = sub_2412FFFC8();
  v104 = (id)sub_2414B5230();
  v28 = sub_2414B520C();
  v95 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
  v96 = v28;
  v29 = (uint64_t)v91;
  v95(v91, 1, 1, v28);
  sub_2412C8FC4(&qword_257128B90, &qword_257128B80, MEMORY[0x24BDD0230]);
  v90 = sub_2412C8030((unint64_t *)&qword_2543843B0, (uint64_t (*)(uint64_t))sub_2412FFFC8, MEMORY[0x24BEE5670]);
  v30 = v71;
  v31 = v70;
  sub_2414B2E84();
  sub_2412CBE78(v29, (uint64_t *)&unk_2543842B0);

  (*(void (**)(char *, uint64_t))(v69 + 8))(v11, v31);
  swift_allocObject();
  swift_weakInit();
  sub_2412C8FC4(&qword_257128B98, &qword_257128B88, MEMORY[0x24BDB9A08]);
  sub_2414B2EB4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v30, v12);
  swift_getKeyPath();
  v104 = v1;
  v32 = sub_2412C8030(&qword_257121D10, (uint64_t (*)(uint64_t))type metadata accessor for MotionEnabledState, (uint64_t)&unk_2414C6D98);
  sub_2414B2B84();
  swift_release();
  v104 = v1;
  swift_getKeyPath();
  sub_2414B2B9C();
  swift_release();
  swift_beginAccess();
  sub_2414B2D70();
  swift_endAccess();
  swift_release();
  v104 = v1;
  swift_getKeyPath();
  sub_2414B2B90();
  swift_release();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254384338);
  v33 = v72;
  sub_2414B2E18();
  swift_endAccess();
  v94 = v27;
  v104 = (id)sub_2414B5230();
  v34 = v96;
  v95((char *)v29, 1, 1, v96);
  sub_2412C8FC4(&qword_254384328, &qword_254384330, MEMORY[0x24BDB9EE8]);
  v35 = v75;
  v36 = v74;
  sub_2414B2E84();
  sub_2412CBE78(v29, (uint64_t *)&unk_2543842B0);

  (*(void (**)(char *, uint64_t))(v73 + 8))(v33, v36);
  swift_allocObject();
  swift_weakInit();
  sub_2412C8FC4(&qword_254384318, &qword_254384320, MEMORY[0x24BDB9A08]);
  v37 = v77;
  sub_2414B2EB4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v35, v37);
  swift_getKeyPath();
  v104 = v1;
  sub_2414B2B84();
  swift_release();
  v104 = v1;
  swift_getKeyPath();
  sub_2414B2B9C();
  swift_release();
  swift_beginAccess();
  sub_2414B2D70();
  swift_endAccess();
  swift_release();
  v104 = v1;
  swift_getKeyPath();
  sub_2414B2B90();
  swift_release();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384340);
  v38 = v79;
  sub_2414B2E18();
  swift_endAccess();
  v104 = (id)sub_2414B5230();
  v39 = (uint64_t)v91;
  v40 = v95;
  v95(v91, 1, 1, v34);
  sub_2412C8FC4(&qword_257128BA0, &qword_257128B70, MEMORY[0x24BDB9EE8]);
  v41 = v86;
  v42 = v81;
  sub_2414B2E84();
  sub_2412CBE78(v39, (uint64_t *)&unk_2543842B0);

  v80[1](v38, v42);
  swift_allocObject();
  swift_weakInit();
  sub_2412C8FC4(&qword_257128BA8, &qword_257128B78, MEMORY[0x24BDB9A08]);
  v43 = v89;
  sub_2414B2EB4();
  swift_release();
  (*(void (**)(char *, _QWORD *))(v88 + 8))(v41, v43);
  swift_getKeyPath();
  v104 = v1;
  sub_2414B2B84();
  swift_release();
  v104 = v1;
  swift_getKeyPath();
  v84 = v32;
  sub_2414B2B9C();
  swift_release();
  swift_beginAccess();
  sub_2414B2D70();
  swift_endAccess();
  swift_release();
  v104 = v1;
  swift_getKeyPath();
  sub_2414B2B90();
  swift_release();
  v99 = xmmword_2414C3180;
  v81 = &v100;
  v100 = (id)*MEMORY[0x24BDD1160];
  v44 = v100;
  v45 = (void *)sub_2414B5290();
  v46 = (void *)*MEMORY[0x24BEBDF58];
  v101 = v45;
  v102 = v46;
  v103 = (id)*MEMORY[0x24BEBDEB8];
  v47 = v103;
  v48 = (_QWORD *)objc_opt_self();
  v89 = v48;
  v49 = v46;
  v50 = v47;
  v80 = (void (**)(char *, id *))v44;
  v51 = objc_msgSend(v48, sel_defaultCenter);
  v52 = v82;
  sub_2414B5278();

  v104 = (id)sub_2414B5230();
  v53 = (uint64_t)v91;
  v40(v91, 1, 1, v96);
  v88 = sub_2412C8030((unint64_t *)&unk_254381520, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0078], MEMORY[0x24BDD0070]);
  v54 = v83;
  v55 = v92;
  sub_2414B2E84();
  sub_2412CBE78(v53, (uint64_t *)&unk_2543842B0);

  v87 = *(_QWORD *)(v87 + 8);
  ((void (*)(char *, uint64_t))v87)(v52, v55);
  swift_allocObject();
  swift_weakInit();
  v86 = (char *)sub_2412C8FC4((unint64_t *)&qword_254380A30, &qword_254380A40, MEMORY[0x24BDB9A08]);
  v56 = v93;
  sub_2414B2EB4();
  swift_release();
  v85 = *(_QWORD *)(v85 + 8);
  ((void (*)(char *, uint64_t))v85)(v54, v56);
  swift_getKeyPath();
  v104 = v1;
  sub_2414B2B84();
  swift_release();
  v104 = v1;
  swift_getKeyPath();
  sub_2414B2B9C();
  swift_release();
  swift_beginAccess();
  sub_2414B2D70();
  swift_endAccess();
  swift_release();
  v104 = v1;
  swift_getKeyPath();
  sub_2414B2B90();

  swift_release();
  v80 = (void (**)(char *, id *))v101;
  v57 = objc_msgSend(v89, sel_defaultCenter);
  sub_2414B5278();

  v104 = (id)sub_2414B5230();
  v58 = (uint64_t)v91;
  v95(v91, 1, 1, v96);
  v59 = v92;
  sub_2414B2E84();
  sub_2412CBE78(v58, (uint64_t *)&unk_2543842B0);

  ((void (*)(char *, uint64_t))v87)(v52, v59);
  swift_allocObject();
  swift_weakInit();
  v60 = v93;
  sub_2414B2EB4();
  swift_release();
  ((void (*)(char *, uint64_t))v85)(v54, v60);
  swift_getKeyPath();
  v104 = v1;
  sub_2414B2B84();
  swift_release();
  v104 = v1;
  swift_getKeyPath();
  sub_2414B2B9C();
  swift_release();
  swift_beginAccess();
  sub_2414B2D70();
  swift_endAccess();
  swift_release();
  v104 = v1;
  swift_getKeyPath();
  sub_2414B2B90();

  swift_release();
  v80 = (void (**)(char *, id *))v102;
  v61 = objc_msgSend(v89, sel_defaultCenter);
  sub_2414B5278();

  v104 = (id)sub_2414B5230();
  v95((char *)v58, 1, 1, v96);
  v62 = v92;
  sub_2414B2E84();
  sub_2412CBE78(v58, (uint64_t *)&unk_2543842B0);

  ((void (*)(char *, uint64_t))v87)(v52, v62);
  swift_allocObject();
  swift_weakInit();
  v63 = v93;
  sub_2414B2EB4();
  swift_release();
  ((void (*)(char *, uint64_t))v85)(v54, v63);
  swift_getKeyPath();
  v104 = v1;
  sub_2414B2B84();
  swift_release();
  v104 = v1;
  swift_getKeyPath();
  sub_2414B2B9C();
  swift_release();
  swift_beginAccess();
  sub_2414B2D70();
  swift_endAccess();
  swift_release();
  v104 = v1;
  swift_getKeyPath();
  sub_2414B2B90();

  swift_release();
  v64 = v103;
  v65 = objc_msgSend(v89, sel_defaultCenter);
  sub_2414B5278();

  v104 = (id)sub_2414B5230();
  v95((char *)v58, 1, 1, v96);
  v66 = v92;
  sub_2414B2E84();
  sub_2412CBE78(v58, (uint64_t *)&unk_2543842B0);

  ((void (*)(char *, uint64_t))v87)(v52, v66);
  swift_allocObject();
  swift_weakInit();
  v67 = v93;
  sub_2414B2EB4();
  swift_release();
  ((void (*)(char *, uint64_t))v85)(v54, v67);
  swift_getKeyPath();
  v104 = v1;
  sub_2414B2B84();
  swift_release();
  v104 = v1;
  swift_getKeyPath();
  sub_2414B2B9C();
  swift_release();
  swift_beginAccess();
  sub_2414B2D70();
  swift_endAccess();
  swift_release();
  v104 = v1;
  swift_getKeyPath();
  sub_2414B2B90();

  swift_release();
  type metadata accessor for Name(0);
  swift_arrayDestroy();
  return v1;
}

uint64_t sub_24143375C()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_241433968();
    return swift_release();
  }
  return result;
}

uint64_t sub_2414337B0()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_2412C8030(&qword_257121D10, (uint64_t (*)(uint64_t))type metadata accessor for MotionEnabledState, (uint64_t)&unk_2414C6D98);
  sub_2414B2B84();
  swift_release();
  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t sub_241433834@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030(&qword_257121D10, (uint64_t (*)(uint64_t))type metadata accessor for MotionEnabledState, (uint64_t)&unk_2414C6D98);
  sub_2414B2B84();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + 33);
  return result;
}

uint64_t sub_2414338C0()
{
  swift_getKeyPath();
  sub_2412C8030(&qword_257121D10, (uint64_t (*)(uint64_t))type metadata accessor for MotionEnabledState, (uint64_t)&unk_2414C6D98);
  sub_2414B2B78();
  return swift_release();
}

uint64_t sub_241433968()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  unsigned __int8 v3;
  id v4;
  id v5;
  id v6;
  int v7;
  uint64_t result;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;

  v1 = v0;
  if ((*(_BYTE *)(v0 + 32) & 1) != 0)
    goto LABEL_10;
  if (UIAccessibilityIsReduceMotionEnabled())
    goto LABEL_10;
  if ((sub_2414B5284() & 1) == 0)
    goto LABEL_10;
  if (!UIAccessibilityIsVideoAutoplayEnabled())
    goto LABEL_10;
  v2 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v3 = objc_msgSend(v2, sel_isLowPowerModeEnabled);

  if ((v3 & 1) != 0)
    goto LABEL_10;
  v4 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v5 = objc_msgSend(v4, sel_motionMode);

  if (!v5)
    goto LABEL_10;
  if (v5 == (id)1)
  {
    v6 = objc_msgSend((id)objc_opt_self(), sel_sharedMonitor);
    objc_msgSend(v6, sel_networkType);

    if (!ICEnvironmentNetworkTypeIsWiFi())
      goto LABEL_10;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  swift_release();
  if ((v17 & 1) != 0)
  {
LABEL_10:
    v7 = 0;
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2414B2E3C();
    swift_release();
    swift_release();
    v7 = v17 < 0x1E;
  }
  swift_getKeyPath();
  v17 = v1;
  sub_2412C8030(&qword_257121D10, (uint64_t (*)(uint64_t))type metadata accessor for MotionEnabledState, (uint64_t)&unk_2414C6D98);
  sub_2414B2B84();
  result = swift_release();
  if (v7 != *(unsigned __int8 *)(v1 + 33))
  {
    if (qword_25437D278 != -1)
      swift_once();
    v9 = sub_2414B2CA4();
    __swift_project_value_buffer(v9, (uint64_t)qword_25438E7D0);
    swift_retain_n();
    v10 = sub_2414B2C8C();
    v11 = sub_2414B51B8();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v13 = swift_slowAlloc();
      v17 = v13;
      *(_DWORD *)v12 = 67109634;
      swift_getKeyPath();
      sub_2414B2B84();
      swift_release();
      swift_release();
      sub_2414B541C();
      swift_release();
      *(_WORD *)(v12 + 8) = 1024;
      sub_2414B541C();
      *(_WORD *)(v12 + 14) = 2082;
      v14 = sub_241433DF8();
      sub_2412E4890(v14, v15, &v17);
      sub_2414B541C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2412C1000, v10, v11, "Updated isMotionEnabled from %{BOOL}d to %{BOOL}d: attributesDescription=(%{public}s)", (uint8_t *)v12, 0x18u);
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v13, -1, -1);
      MEMORY[0x242695BD8](v12, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    v17 = v1;
    sub_2414B2B78();
    return swift_release();
  }
  return result;
}

uint64_t sub_241433DF8()
{
  id v0;
  id v1;

  sub_2414B5578();
  sub_2414B4DF8();
  sub_2414B4DF8();
  swift_bridgeObjectRelease();
  sub_2414B4DF8();
  UIAccessibilityIsReduceMotionEnabled();
  sub_2414B4DF8();
  swift_bridgeObjectRelease();
  sub_2414B4DF8();
  sub_2414B5284();
  sub_2414B4DF8();
  swift_bridgeObjectRelease();
  sub_2414B4DF8();
  UIAccessibilityIsVideoAutoplayEnabled();
  sub_2414B4DF8();
  swift_bridgeObjectRelease();
  sub_2414B4DF8();
  v0 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  objc_msgSend(v0, sel_isLowPowerModeEnabled);

  sub_2414B4DF8();
  swift_bridgeObjectRelease();
  sub_2414B4DF8();
  v1 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  objc_msgSend(v1, sel_motionMode);

  sub_2414B57A0();
  sub_2414B4DF8();
  swift_bridgeObjectRelease();
  sub_2414B4DF8();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  swift_release();
  sub_2414B4DF8();
  swift_bridgeObjectRelease();
  sub_2414B4DF8();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  swift_release();
  sub_2414B57A0();
  sub_2414B4DF8();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_2414341AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI18MotionEnabledState___observationRegistrar;
  v2 = sub_2414B2BB4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_24143420C(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  v2 = sub_24143423C();

  return v2;
}

uint64_t sub_24143423C()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  v1 = (void *)sub_2414B4D44();
  v2 = objc_msgSend(v0, sel_valueForKey_, v1);

  if (v2)
  {
    sub_2414B544C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_2412FFB60((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    if (swift_dynamicCast())
      return v4;
  }
  else
  {
    sub_2412CBE78((uint64_t)v6, &qword_25437D280);
  }
  return 2;
}

uint64_t static MotionViewDeferral.isDeferred.getter()
{
  if (qword_257120A18 != -1)
    swift_once();
  return *(unsigned __int8 *)(qword_257137178 + 32);
}

uint64_t static MotionViewDeferral.isDeferred.setter(uint64_t result)
{
  char v1;
  int v2;

  v1 = result;
  if (qword_257120A18 != -1)
    result = swift_once();
  v2 = *(unsigned __int8 *)(qword_257137178 + 32);
  *(_BYTE *)(qword_257137178 + 32) = v1 & 1;
  if (v2 != (v1 & 1))
    return sub_241433968();
  return result;
}

unsigned __int8 *(*static MotionViewDeferral.isDeferred.modify(_BYTE *a1))(unsigned __int8 *result)
{
  if (qword_257120A18 != -1)
    swift_once();
  *a1 = *(_BYTE *)(qword_257137178 + 32);
  return sub_24143442C;
}

unsigned __int8 *sub_24143442C(unsigned __int8 *result)
{
  int v1;
  int v2;

  v1 = *result;
  v2 = *(unsigned __int8 *)(qword_257137178 + 32);
  *(_BYTE *)(qword_257137178 + 32) = v1;
  if (v1 != v2)
    return (unsigned __int8 *)sub_241433968();
  return result;
}

uint64_t MotionViewDeferral.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MotionViewDeferral.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_24143447C()
{
  return type metadata accessor for MotionEnabledState();
}

uint64_t type metadata accessor for MotionEnabledState()
{
  uint64_t result;

  result = qword_257128978;
  if (!qword_257128978)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2414344C0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2414B2BB4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for MotionViewDeferral()
{
  return objc_opt_self();
}

uint64_t method lookup function for MotionViewDeferral()
{
  return swift_lookUpClassMethod();
}

void sub_241434598()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 33) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_2414345B0()
{
  uint64_t v0;

  return sub_2414321E8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

char *keypath_get_selector_motionMode()
{
  return sel_motionMode;
}

id sub_2414345D4@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_motionMode);
  *a2 = result;
  return result;
}

uint64_t sub_241434604()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_241434628()
{
  return sub_24143375C();
}

void sub_241434630()
{
  sub_241434598();
}

uint64_t sub_241434644@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  _s6BannerCMa();
  sub_2414349EC();
  *(_QWORD *)a1 = sub_2414B33C4();
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = swift_getKeyPath();
  *(_BYTE *)(a1 + 24) = 0;
  result = sub_2414B3658();
  *(_QWORD *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v4;
  return result;
}

uint64_t sub_2414346C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t AssociatedConformanceWitness;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  void (*v24)(char *, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  uint64_t v33;

  v31 = a2;
  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v27 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v28 = (uint64_t)&v26 - v8;
  v9 = sub_2414B53B0();
  v30 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v26 - v13;
  v16 = *(_QWORD *)(v2 + 8);
  v15 = *(_QWORD *)(v2 + 16);
  v17 = *(_BYTE *)(v2 + 24);
  v26 = *(_QWORD *)(v2 + 32);
  sub_2412C7080(v15, v17);
  sub_2412F65C0(v15, v17, v32);
  sub_2412C821C(v15, v17);
  if (v32[0] == 1 && (swift_beginAccess(), *(_BYTE *)(v16 + 16) == 1))
  {
    sub_2412C84FC(v26);
    v18 = *(void (**)(uint64_t, uint64_t))(v3 + 328);
    swift_unknownObjectRetain();
    v19 = (uint64_t)v27;
    v18(v4, v3);
    swift_unknownObjectRelease();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v21 = v28;
    sub_2412FBF34(v19, AssociatedTypeWitness, v28);
    v22 = v29;
    v23 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    v23(v19, AssociatedTypeWitness);
    sub_2412EEA1C(v21, AssociatedTypeWitness, (uint64_t)v11);
    v23(v21, AssociatedTypeWitness);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v11, 0, 1, AssociatedTypeWitness);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v11, 1, 1, AssociatedTypeWitness);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  }
  sub_2412F65F0((uint64_t)v11, (uint64_t)v14);
  v24 = *(void (**)(char *, uint64_t))(v30 + 8);
  v24(v11, v9);
  v33 = AssociatedConformanceWitness;
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v9, &v33);
  sub_2412EEA1C((uint64_t)v14, v9, v31);
  return ((uint64_t (*)(char *, uint64_t))v24)(v14, v9);
}

uint64_t sub_2414349AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  _s6BannerCMa();
  result = sub_2414B2DA0();
  *a1 = result;
  return result;
}

unint64_t sub_2414349EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254383BE0;
  if (!qword_254383BE0)
  {
    v1 = _s6BannerCMa();
    result = MEMORY[0x242695AE8](&unk_2414C6ED0, v1);
    atomic_store(result, (unint64_t *)&qword_254383BE0);
  }
  return result;
}

uint64_t sub_241434A30(uint64_t a1)
{
  swift_release();
  sub_2412C821C(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  return swift_unknownObjectRelease();
}

uint64_t sub_241434A64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  swift_retain();
  sub_2412C7080(v5, v6);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_241434AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  sub_2412C7080(v4, v5);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  sub_2412C821C(v6, v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t sub_241434B58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release();
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v5;
  sub_2412C821C(v6, v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t _s10BannerViewVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s10BannerViewVMn);
}

uint64_t sub_241434BCC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241434C00()
{
  uint64_t v0;
  uint64_t AssociatedConformanceWitness;

  swift_getAssociatedTypeWitness();
  v0 = sub_2414B53B0();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v0, &AssociatedConformanceWitness);
}

uint64_t sub_241434CA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;

  *(_QWORD *)a3 = sub_2414B3658();
  *(_QWORD *)(a3 + 8) = v6;
  _s5DebugCMa();
  sub_2414360E8();
  *(_QWORD *)(a3 + 16) = sub_2414B3658();
  *(_QWORD *)(a3 + 24) = v7;
  *(_QWORD *)(a3 + 32) = swift_getKeyPath();
  v9 = _s13FooterButtonsVMa(0, a1, a2, v8);
  *(_OWORD *)(a3 + 40) = 0u;
  *(_OWORD *)(a3 + 56) = 0u;
  *(_OWORD *)(a3 + 72) = 0u;
  *(_OWORD *)(a3 + 88) = 0u;
  *(_WORD *)(a3 + 104) = 0;
  v10 = (uint64_t *)(a3 + *(int *)(v9 + 44));
  *v10 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_241434D60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _OWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t AssociatedConformanceWitness;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t result;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _OWORD *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char v68;
  void (*v69)(char *, uint64_t);
  unsigned int *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t);
  uint64_t v105;
  void (*v106)(uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(char *);
  unsigned int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _OWORD *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD v161[2];
  _QWORD v162[2];
  _QWORD v163[2];
  _QWORD v164[2];
  _QWORD v165[2];
  _QWORD v166[2];
  _QWORD v167[2];
  uint64_t v168;
  _QWORD v169[2];
  _QWORD v170[2];
  _QWORD v171[2];
  _QWORD v172[2];
  _QWORD v173[2];
  _QWORD v174[2];
  _QWORD v175[2];
  _QWORD v176[2];
  _QWORD v177[2];
  _QWORD v178[2];
  _QWORD v179[2];
  _QWORD v180[2];
  _QWORD v181[2];
  _QWORD v182[2];
  _BYTE v183[18];
  unsigned __int8 v184;
  _OWORD v185[3];
  _OWORD v186[3];

  v153 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381398);
  MEMORY[0x24BDAC7A8](v4);
  v143 = (char *)&v118 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = sub_2414B3934();
  v129 = *(_QWORD *)(v135 - 8);
  MEMORY[0x24BDAC7A8](v135);
  v133 = (char *)&v118 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v132 = (uint64_t)&v118 - v8;
  v148 = sub_2414B4AE0();
  v146 = *(_QWORD *)(v148 - 8);
  MEMORY[0x24BDAC7A8](v148);
  v131 = (char *)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128BB0);
  v11 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v147 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v158 = v10;
  v13 = swift_getAssociatedTypeWitness();
  v14 = sub_2414B3A90();
  sub_2412C8FC4(&qword_257128BB8, &qword_257128BB0, MEMORY[0x24BDEB998]);
  v159 = v14;
  v15 = sub_2414B3304();
  v128 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v144 = (uint64_t)&v118 - v16;
  sub_2414B35EC();
  v157 = v15;
  v17 = sub_2414B3514();
  v130 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v145 = (char *)&v118 - v18;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254384168);
  v154 = v17;
  v19 = sub_2414B3514();
  v136 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v134 = (char *)&v118 - v20;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543812F8);
  v156 = v19;
  v21 = sub_2414B3514();
  v138 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v137 = (char *)&v118 - v22;
  v160 = v23;
  v24 = sub_2414B3514();
  v140 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v139 = (char *)&v118 - v25;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128BC0);
  v26 = sub_2414B3514();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v141 = (char *)&v118 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v142 = (uint64_t)&v118 - v30;
  v152 = sub_2414B53B0();
  v150 = *(_QWORD *)(v152 - 8);
  MEMORY[0x24BDAC7A8](v152);
  v32 = (char *)&v118 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v151 = (uint64_t)&v118 - v34;
  v35 = v2[5];
  v185[2] = v2[4];
  v186[0] = v35;
  *(_OWORD *)((char *)v186 + 10) = *(_OWORD *)((char *)v2 + 90);
  v37 = v2[2];
  v36 = v2[3];
  v149 = v2;
  v185[0] = v37;
  v185[1] = v36;
  sub_2412FD220((uint64_t)v185, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
  sub_2412FD278((uint64_t)v183);
  sub_2412FD220((uint64_t)v185, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
  v38 = v184;
  v155 = v24;
  if (v184 == 3)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v32, 1, 1, v26);
    v39 = sub_2412C8FC4(&qword_257128BC8, &qword_257128BB0, MEMORY[0x24BDEB9A8]);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v147 = swift_getAssociatedConformanceWitness();
    v148 = AssociatedConformanceWitness;
    v182[0] = AssociatedConformanceWitness;
    v182[1] = v147;
    v41 = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v159, v182);
    v181[0] = v39;
    v181[1] = v41;
    v42 = v157;
    v180[0] = MEMORY[0x242695AE8](MEMORY[0x24BDEC550], v157, v181);
    v180[1] = MEMORY[0x24BDEDB58];
    v43 = MEMORY[0x24BDED308];
    v44 = v154;
    v45 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v154, v180);
    v46 = MEMORY[0x24BDF1028];
    v47 = sub_2412C8FC4(&qword_254384160, &qword_254384168, MEMORY[0x24BDF1028]);
    v179[0] = v45;
    v179[1] = v47;
    v48 = v156;
    v49 = MEMORY[0x242695AE8](v43, v156, v179);
    v50 = sub_2412C8FC4(&qword_2543812F0, &qword_2543812F8, v46);
    v178[0] = v49;
    v178[1] = v50;
    v177[0] = MEMORY[0x242695AE8](v43, v160, v178);
    v177[1] = MEMORY[0x24BDEBEE0];
    v51 = MEMORY[0x242695AE8](v43, v24, v177);
    v52 = sub_2412C8FC4(&qword_257128BD0, &qword_257128BC0, MEMORY[0x24BDEDC10]);
    v176[0] = v51;
    v176[1] = v52;
    MEMORY[0x242695AE8](v43, v26, v176);
    v53 = v42;
    v54 = v48;
    v55 = v150;
    v56 = (uint64_t)v32;
LABEL_17:
    v105 = v151;
    sub_2412F65F0(v56, v151);
    v106 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
    v107 = v152;
    v106(v56, v152);
    v108 = sub_2412C8FC4(&qword_257128BC8, &qword_257128BB0, MEMORY[0x24BDEB9A8]);
    v175[0] = v148;
    v175[1] = v147;
    v109 = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v159, v175);
    v174[0] = v108;
    v174[1] = v109;
    v173[0] = MEMORY[0x242695AE8](MEMORY[0x24BDEC550], v53, v174);
    v173[1] = MEMORY[0x24BDEDB58];
    v110 = MEMORY[0x24BDED308];
    v111 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v44, v173);
    v112 = MEMORY[0x24BDF1028];
    v113 = sub_2412C8FC4(&qword_254384160, &qword_254384168, MEMORY[0x24BDF1028]);
    v172[0] = v111;
    v172[1] = v113;
    v114 = MEMORY[0x242695AE8](v110, v54, v172);
    v115 = sub_2412C8FC4(&qword_2543812F0, &qword_2543812F8, v112);
    v171[0] = v114;
    v171[1] = v115;
    v170[0] = MEMORY[0x242695AE8](v110, v160, v171);
    v170[1] = MEMORY[0x24BDEBEE0];
    v116 = MEMORY[0x242695AE8](v110, v155, v170);
    v117 = sub_2412C8FC4(&qword_257128BD0, &qword_257128BC0, MEMORY[0x24BDEDC10]);
    v169[0] = v116;
    v169[1] = v117;
    v168 = MEMORY[0x242695AE8](v110, v26, v169);
    MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v107, &v168);
    sub_2412EEA1C(v105, v107, v153);
    return ((uint64_t (*)(uint64_t, uint64_t))v106)(v105, v107);
  }
  v122 = AssociatedTypeWitness;
  v123 = v13;
  v124 = v27;
  v125 = v32;
  v126 = v26;
  v127 = v11;
  v57 = sub_2414B3868();
  sub_2412FD220((uint64_t)v185, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
  sub_2412FD278((uint64_t)v183);
  result = sub_2412FD220((uint64_t)v185, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
  if (v184 - 1 < 2)
  {
    v59 = 0x4044000000000000;
    v60 = v158;
    v61 = v127;
LABEL_7:
    v62 = swift_allocObject();
    *(_QWORD *)(v62 + 16) = v61;
    *(_QWORD *)(v62 + 24) = v60;
    *(_QWORD *)(v62 + 32) = v57;
    *(_QWORD *)(v62 + 40) = v59;
    *(_BYTE *)(v62 + 48) = 0;
    MEMORY[0x24BDAC7A8](v62);
    *(&v118 - 4) = v61;
    *(&v118 - 3) = v60;
    v63 = v149;
    *(&v118 - 2) = (uint64_t)v149;
    *((_BYTE *)&v118 - 8) = v38;
    sub_241435BD4((uint64_t)sub_241436AC8, (uint64_t)(&v118 - 6), v57, v59, 0, v144);
    swift_release();
    v121 = (uint64_t)v63 + *(int *)(v147 + 44);
    v64 = v132;
    sub_2412C8A04(v132);
    v120 = *MEMORY[0x24BDEEDE8];
    v65 = v129;
    v119 = *(void (**)(char *))(v129 + 104);
    v66 = v133;
    v67 = v135;
    v119(v133);
    v68 = sub_2414B2F80();
    v69 = *(void (**)(char *, uint64_t))(v65 + 8);
    v69(v66, v67);
    v69((char *)v64, v67);
    v70 = (unsigned int *)MEMORY[0x24BDF5098];
    if ((v68 & 1) == 0)
      v70 = (unsigned int *)MEMORY[0x24BDF50D0];
    v71 = v131;
    (*(void (**)(char *, _QWORD, uint64_t))(v146 + 104))(v131, *v70, v148);
    v72 = sub_2412C8FC4(&qword_257128BC8, &qword_257128BB0, MEMORY[0x24BDEB9A8]);
    v73 = swift_getAssociatedConformanceWitness();
    v74 = swift_getAssociatedConformanceWitness();
    v167[0] = v73;
    v167[1] = v74;
    v147 = v74;
    v75 = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v159, v167);
    v166[0] = v72;
    v166[1] = v75;
    v76 = v157;
    v77 = MEMORY[0x242695AE8](MEMORY[0x24BDEC550], v157, v166);
    v78 = v144;
    sub_2414B4588();
    (*(void (**)(char *, uint64_t))(v146 + 8))(v71, v148);
    (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v78, v76);
    sub_2412C8A04(v64);
    ((void (*)(char *, _QWORD, uint64_t))v119)(v66, v120, v67);
    LOBYTE(v78) = sub_2414B2F80();
    v69(v66, v67);
    v69((char *)v64, v67);
    if ((v78 & 1) != 0)
      sub_2414B46C0();
    else
      sub_2414B460C();
    v79 = v154;
    v80 = (uint64_t)v143;
    v81 = v136;
    v82 = v137;
    v165[0] = v77;
    v165[1] = MEMORY[0x24BDEDB58];
    v83 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v154, v165);
    v84 = v134;
    v85 = v145;
    sub_2414B448C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v130 + 8))(v85, v79);
    if (qword_254383B50 != -1)
      swift_once();
    v148 = v73;
    sub_2414B3EF8();
    v86 = sub_2414B3ED4();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v80, 1, 1, v86);
    sub_2414B3F04();
    sub_2412CBE78(v80, &qword_254381398);
    v87 = sub_2412C8FC4(&qword_254384160, &qword_254384168, MEMORY[0x24BDF1028]);
    v164[0] = v83;
    v164[1] = v87;
    v88 = v156;
    v89 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v156, v164);
    sub_2414B4468();
    swift_release();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v84, v88);
    v90 = v160;
    if (qword_254383B58 != -1)
      swift_once();
    sub_2414B4A44();
    v91 = sub_2412C8FC4(&qword_2543812F0, &qword_2543812F8, MEMORY[0x24BDF1028]);
    v163[0] = v89;
    v163[1] = v91;
    v92 = MEMORY[0x24BDED308];
    v93 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v90, v163);
    v94 = v139;
    sub_2414B44A4();
    (*(void (**)(char *, uint64_t))(v138 + 8))(v82, v160);
    sub_2414B3970();
    v95 = sub_2414B3868();
    MEMORY[0x24BDAC7A8](v95);
    v96 = v158;
    *(&v118 - 4) = v127;
    *(&v118 - 3) = v96;
    *(&v118 - 2) = (uint64_t)v149;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257128BD8);
    v162[0] = v93;
    v162[1] = MEMORY[0x24BDEBEE0];
    v97 = v92;
    v98 = v155;
    v99 = MEMORY[0x242695AE8](v97, v155, v162);
    sub_241436AF4();
    v100 = (uint64_t)v141;
    sub_2414B4504();
    (*(void (**)(char *, uint64_t))(v140 + 8))(v94, v98);
    v101 = sub_2412C8FC4(&qword_257128BD0, &qword_257128BC0, MEMORY[0x24BDEDC10]);
    v161[0] = v99;
    v161[1] = v101;
    v26 = v126;
    MEMORY[0x242695AE8](MEMORY[0x24BDED308], v126, v161);
    v102 = v142;
    sub_2412FBF34(v100, v26, v142);
    v103 = v124;
    v104 = *(void (**)(uint64_t, uint64_t))(v124 + 8);
    v104(v100, v26);
    v56 = (uint64_t)v125;
    sub_2412EEA1C(v102, v26, (uint64_t)v125);
    v104(v102, v26);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v103 + 56))(v56, 0, 1, v26);
    v54 = v156;
    v53 = v157;
    v44 = v154;
    v55 = v150;
    goto LABEL_17;
  }
  v60 = v158;
  v61 = v127;
  if (!v184)
  {
    v59 = 0x4056400000000000;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_241435BD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD v13[4];
  char v14;

  v13[2] = a3;
  v13[3] = a4;
  v14 = a5 & 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  v9 = sub_2414B3A90();
  v10 = sub_241436C58();
  v13[0] = swift_getAssociatedConformanceWitness();
  v13[1] = swift_getAssociatedConformanceWitness();
  v11 = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v9, v13);
  return sub_2413A6270(a1, a2, MEMORY[0x24BDEBB10], v9, v10, v11, a6);
}

void sub_241435D14()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for NowPlayingFooterConfiguration();
}

uint64_t sub_241435DE4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(_BYTE *, uint64_t);
  _BYTE v19[96];

  v6 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = &v19[-v7];
  v9 = sub_2414B3A90();
  *(_QWORD *)(v4 - 168) = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v12);
  v14 = &v19[-v13];
  sub_2412C84FC(*v1);
  v15 = *(void (**)(uint64_t, uint64_t))(v2 + 304);
  swift_unknownObjectRetain();
  v15(v3, v2);
  swift_unknownObjectRelease();
  *(_BYTE *)(v4 - 112) = *(_DWORD *)(v4 - 140);
  sub_2413D9F68((_BYTE *)(v4 - 112), a1, (uint64_t)v11);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, a1);
  v16 = *(_QWORD *)(v4 - 160);
  *(_QWORD *)(v4 - 128) = *(_QWORD *)(v4 - 152);
  *(_QWORD *)(v4 - 120) = v16;
  MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v9, v4 - 128);
  sub_2412FBF34((uint64_t)v11, v9, (uint64_t)v14);
  v17 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v4 - 168) + 8);
  v17(v11, v9);
  sub_2412EEA1C((uint64_t)v14, v9, *(_QWORD *)(v4 - 136));
  return ((uint64_t (*)(_BYTE *, uint64_t))v17)(v14, v9);
}

uint64_t sub_241435F5C@<X0>(uint64_t a1@<X0>, int64x2_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  int64x2_t v12;
  uint64_t (*v13)();
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    swift_beginAccess();
    if ((*(_BYTE *)(v2 + 18) & 1) != 0)
    {
      v4 = sub_2414B4654();
      sub_2414B4A44();
      sub_2414B31B4();
      v5 = v14;
      v6 = v15;
      v7 = v16;
      v8 = v17;
      v9 = v18;
      v10 = v19;
      result = sub_2414B3868();
      v12 = vdupq_n_s64(0x100uLL);
      v12.i64[0] = v4;
      v13 = sub_241436080;
    }
    else
    {
      v5 = 0;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      result = 0;
      v13 = 0;
      v12 = 0uLL;
    }
    *a2 = v12;
    a2[1].i64[0] = v5;
    a2[1].i64[1] = v6;
    a2[2].i64[0] = v7;
    a2[2].i64[1] = v8;
    a2[3].i64[0] = v9;
    a2[3].i64[1] = v10;
    a2[4].i64[0] = result;
    a2[4].i64[1] = (uint64_t)v13;
    a2[5].i64[0] = 0;
  }
  else
  {
    _s5DebugCMa();
    sub_2414360E8();
    result = sub_2414B364C();
    __break(1u);
  }
  return result;
}

uint64_t sub_241436080()
{
  uint64_t v0;

  v0 = sub_2414B3868();
  return MEMORY[0x242692CBC](v0);
}

double sub_2414360A8()
{
  double result;

  result = -10.0;
  xmmword_25438E860 = xmmword_2414C6FC0;
  *(_OWORD *)&qword_25438E870 = xmmword_2414C6FD0;
  return result;
}

void sub_2414360C8()
{
  qword_25438E890 = 0x4065000000000000;
}

void sub_2414360D8()
{
  qword_25438E898 = 0x4034000000000000;
}

unint64_t sub_2414360E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25437F060;
  if (!qword_25437F060)
  {
    v1 = _s5DebugCMa();
    result = MEMORY[0x242695AE8](&unk_2414C3E98, v1);
    atomic_store(result, (unint64_t *)&qword_25437F060);
  }
  return result;
}

uint64_t _s13FooterButtonsVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s13FooterButtonsVMn);
}

void sub_241436150()
{
  unint64_t v0;

  sub_24133ACB8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_2414361D0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v7 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v7;
    v8 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    v9 = a2[5];
    v10 = a2[6];
    v11 = a2[7];
    v12 = a2[8];
    v23 = a2[10];
    v24 = v8;
    v13 = a2[12];
    v21 = a2[11];
    v22 = a2[9];
    v14 = *((_BYTE *)a2 + 104);
    v15 = *((_BYTE *)a2 + 105);
    swift_unknownObjectRetain();
    swift_retain();
    sub_2412C6F48(v24, v9, v10, v11, v12, v22, v23, v21, v13, v14, v15);
    *(_QWORD *)(a1 + 32) = v24;
    *(_QWORD *)(a1 + 40) = v9;
    *(_QWORD *)(a1 + 48) = v10;
    *(_QWORD *)(a1 + 56) = v11;
    *(_QWORD *)(a1 + 64) = v12;
    *(_QWORD *)(a1 + 72) = v22;
    *(_QWORD *)(a1 + 80) = v23;
    *(_QWORD *)(a1 + 88) = v21;
    *(_QWORD *)(a1 + 96) = v13;
    *(_BYTE *)(a1 + 104) = v14;
    v16 = *(int *)(a3 + 44);
    v17 = (_QWORD *)(a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    *(_BYTE *)(a1 + 105) = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = sub_2414B3934();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_241436378(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_unknownObjectRelease();
  swift_release();
  sub_2412C823C(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_BYTE *)(a1 + 104), *(_BYTE *)(a1 + 105));
  v4 = a1 + *(int *)(a2 + 44);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_2414B3934();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_241436430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 64);
  v21 = *(_QWORD *)(a2 + 80);
  v22 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 96);
  v19 = *(_QWORD *)(a2 + 72);
  v20 = *(_QWORD *)(a2 + 88);
  v12 = *(_BYTE *)(a2 + 104);
  v13 = *(_BYTE *)(a2 + 105);
  v23 = v13;
  swift_unknownObjectRetain();
  swift_retain();
  sub_2412C6F48(v22, v7, v8, v9, v10, v19, v21, v20, v11, v12, v13);
  *(_QWORD *)(a1 + 32) = v22;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v19;
  *(_QWORD *)(a1 + 80) = v21;
  *(_QWORD *)(a1 + 88) = v20;
  *(_QWORD *)(a1 + 96) = v11;
  *(_BYTE *)(a1 + 104) = v12;
  v14 = *(int *)(a3 + 44);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *(_BYTE *)(a1 + 105) = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = sub_2414B3934();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    *v15 = *v16;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2414365A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v30;
  char v31;
  char v32;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 72);
  v12 = *(_QWORD *)(a2 + 80);
  v11 = *(_QWORD *)(a2 + 88);
  v30 = *(_QWORD *)(a2 + 96);
  v31 = *(_BYTE *)(a2 + 104);
  v32 = *(_BYTE *)(a2 + 105);
  sub_2412C6F48(v5, v6, v7, v8, v9, v10, v12, v11, v30, v31, v32);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  v15 = *(_QWORD *)(a1 + 48);
  v16 = *(_QWORD *)(a1 + 56);
  v17 = *(_QWORD *)(a1 + 64);
  v18 = *(_QWORD *)(a1 + 72);
  v19 = *(_QWORD *)(a1 + 80);
  v20 = *(_QWORD *)(a1 + 88);
  v21 = *(_QWORD *)(a1 + 96);
  v22 = *(_BYTE *)(a1 + 104);
  v23 = *(_BYTE *)(a1 + 105);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  *(_QWORD *)(a1 + 80) = v12;
  *(_QWORD *)(a1 + 88) = v11;
  *(_QWORD *)(a1 + 96) = v30;
  *(_BYTE *)(a1 + 104) = v31;
  *(_BYTE *)(a1 + 105) = v32;
  sub_2412C823C(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23);
  if (a1 != a2)
  {
    v24 = *(int *)(a3 + 44);
    v25 = (_QWORD *)(a1 + v24);
    v26 = (_QWORD *)(a2 + v24);
    sub_2412CBE78(a1 + v24, &qword_25437DAA0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v27 = sub_2414B3934();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_24143676C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  *(_OWORD *)((char *)a1 + 90) = *(_OWORD *)((char *)a2 + 90);
  v6 = a2[3];
  v7 = *(int *)(a3 + 44);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  a1[2] = a2[2];
  a1[3] = v6;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2414B3934();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  return a1;
}

uint64_t sub_24143682C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_release();
  v7 = *(_BYTE *)(a2 + 104);
  v8 = *(_BYTE *)(a2 + 105);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_QWORD *)(a1 + 64);
  v14 = *(_QWORD *)(a1 + 72);
  v15 = *(_QWORD *)(a1 + 80);
  v16 = *(_QWORD *)(a1 + 88);
  v17 = *(_QWORD *)(a1 + 96);
  v18 = *(_BYTE *)(a1 + 104);
  v19 = *(_BYTE *)(a1 + 105);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = v7;
  *(_BYTE *)(a1 + 105) = v8;
  sub_2412C823C(v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
  if (a1 != a2)
  {
    v20 = *(int *)(a3 + 44);
    v21 = (void *)(a1 + v20);
    v22 = (const void *)(a2 + v20);
    sub_2412CBE78(a1 + v20, &qword_25437DAA0);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v24 = sub_2414B3934();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_241436978()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241436984(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571226F0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(&a1[*(int *)(a3 + 44)], a2, v9);
  }
}

uint64_t sub_241436A10()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_241436A1C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)result = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571226F0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 44)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_241436A94()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_241436AC8()
{
  sub_241435D14();
}

void sub_241436AD8()
{
  qword_25438E8A0 = 0x403C000000000000;
}

uint64_t sub_241436AE8@<X0>(int64x2_t *a1@<X8>)
{
  uint64_t v1;

  return sub_241435F5C(*(_QWORD *)(v1 + 32), a1);
}

unint64_t sub_241436AF4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_257128BE0;
  if (!qword_257128BE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128BD8);
    v2 = sub_241436B58();
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_257128BE0);
  }
  return result;
}

unint64_t sub_241436B58()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257128BE8;
  if (!qword_257128BE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128BF0);
    v2[0] = sub_241436BC4();
    v2[1] = sub_24135E51C();
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257128BE8);
  }
  return result;
}

unint64_t sub_241436BC4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257128BF8;
  if (!qword_257128BF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128C00);
    v2[0] = sub_2412C8FC4(&qword_257128C08, &qword_257128C10, MEMORY[0x24BDEB358]);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257128BF8);
  }
  return result;
}

uint64_t sub_241436C48()
{
  return swift_deallocObject();
}

unint64_t sub_241436C58()
{
  unint64_t result;

  result = qword_257128C18;
  if (!qword_257128C18)
  {
    result = MEMORY[0x242695AE8](MEMORY[0x24BDEBAF8], MEMORY[0x24BDEBB10]);
    atomic_store(result, (unint64_t *)&qword_257128C18);
  }
  return result;
}

uint64_t sub_241436C9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];
  _QWORD v17[2];
  _QWORD v18[2];
  _QWORD v19[2];
  _QWORD v20[3];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128BB0);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  v0 = sub_2414B3A90();
  sub_2412C8FC4(&qword_257128BB8, &qword_257128BB0, MEMORY[0x24BDEB998]);
  v1 = sub_2414B3304();
  sub_2414B35EC();
  v2 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254384168);
  v3 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543812F8);
  v9 = sub_2414B3514();
  v10 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128BC0);
  v11 = sub_2414B3514();
  v12 = sub_2414B53B0();
  v4 = sub_2412C8FC4(&qword_257128BC8, &qword_257128BB0, MEMORY[0x24BDEB9A8]);
  v20[0] = swift_getAssociatedConformanceWitness();
  v20[1] = swift_getAssociatedConformanceWitness();
  v19[0] = v4;
  v19[1] = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v0, v20);
  v18[0] = MEMORY[0x242695AE8](MEMORY[0x24BDEC550], v1, v19);
  v18[1] = MEMORY[0x24BDEDB58];
  v5 = MEMORY[0x24BDED308];
  v6 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v2, v18);
  v7 = MEMORY[0x24BDF1028];
  v17[0] = v6;
  v17[1] = sub_2412C8FC4(&qword_254384160, &qword_254384168, MEMORY[0x24BDF1028]);
  v16[0] = MEMORY[0x242695AE8](v5, v3, v17);
  v16[1] = sub_2412C8FC4(&qword_2543812F0, &qword_2543812F8, v7);
  v15[0] = MEMORY[0x242695AE8](v5, v9, v16);
  v15[1] = MEMORY[0x24BDEBEE0];
  v14[0] = MEMORY[0x242695AE8](v5, v10, v15);
  v14[1] = sub_2412C8FC4(&qword_257128BD0, &qword_257128BC0, MEMORY[0x24BDEDC10]);
  v13 = MEMORY[0x242695AE8](v5, v11, v14);
  return MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v12, &v13);
}

uint64_t BackdropView.init(image:useMask:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = result;
  *(_BYTE *)(a3 + 8) = a2;
  return result;
}

id BackdropView.makeUIView(context:)()
{
  uint64_t v0;
  void *v1;
  char v2;
  id v3;
  id v4;

  v1 = *(void **)v0;
  v2 = *(_BYTE *)(v0 + 8);
  v3 = objc_allocWithZone((Class)type metadata accessor for BackdropHostView());
  v4 = v1;
  return sub_241437AC8(v1, v2, 1);
}

uint64_t type metadata accessor for BackdropHostView()
{
  return objc_opt_self();
}

uint64_t BackdropView.updateUIView(_:context:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  int v11;
  void *v12;
  id v13;
  int v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  void *v22;
  id v23;
  int v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;

  v3 = sub_2414B382C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v28 - v8;
  v10 = *(void **)v1;
  v11 = *(unsigned __int8 *)(v1 + 8);
  v12 = *(void **)(a1 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_image);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_image) = v10;
  v13 = v10;

  sub_24143763C();
  v14 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_useMask);
  *(_BYTE *)(a1 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_useMask) = v11;
  if (v11 != v14)
  {
    if (qword_257120A20 != -1)
      swift_once();
    v15 = sub_2414B2CA4();
    __swift_project_value_buffer(v15, (uint64_t)qword_257137180);
    v16 = sub_2414B2C8C();
    v17 = sub_2414B51B8();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_2412C1000, v16, v17, "changing useMask on already created BackdropHostView", v18, 2u);
      MEMORY[0x242695BD8](v18, -1, -1);
    }

    sub_2414378D8();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254384128);
  sub_2414B3CE8();
  sub_2414384B8();
  sub_2414B3838();
  v19 = v29;
  v20 = *(void (**)(char *, uint64_t))(v4 + 8);
  v20(v9, v3);
  v21 = OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_isPaused;
  *(_BYTE *)(a1 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_isPaused) = v19;
  v22 = *(void **)(a1 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_contentView);
  if (v22)
  {
    v23 = v22;
    if (objc_msgSend(v23, sel_isPaused) != *(unsigned __int8 *)(a1 + v21))
    {
      objc_msgSend(v23, sel_setPaused_);
      objc_msgSend(v23, sel_setEnableSetNeedsDisplay_, *(unsigned __int8 *)(a1 + v21));
    }

  }
  sub_2414B3CE8();
  sub_2414384FC();
  sub_2414B3838();
  v24 = v29;
  result = ((uint64_t (*)(char *, uint64_t))v20)(v6, v3);
  *(_DWORD *)(a1 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_intensity) = v24;
  v26 = *(_QWORD *)(a1 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_renderer);
  if (v26)
  {
    v27 = v26 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis;
    result = swift_beginAccess();
    *(_DWORD *)(*(_QWORD *)v27 + 64) = v24;
  }
  return result;
}

uint64_t sub_241437300()
{
  unsigned __int8 v1;

  sub_2414384B8();
  sub_2414B3838();
  return v1;
}

float sub_241437338()
{
  float v1;

  sub_2414384FC();
  sub_2414B3838();
  return v1;
}

id sub_241437370()
{
  uint64_t v0;
  void *v1;
  char v2;
  id v3;
  id v4;

  v1 = *(void **)v0;
  v2 = *(_BYTE *)(v0 + 8);
  v3 = objc_allocWithZone((Class)type metadata accessor for BackdropHostView());
  v4 = v1;
  return sub_241437AC8(v1, v2, 1);
}

uint64_t sub_2414373C0()
{
  sub_241438A9C();
  return sub_2414B3A54();
}

uint64_t sub_241437410()
{
  sub_241438A9C();
  return sub_2414B3A00();
}

void sub_241437460()
{
  sub_241438A9C();
  sub_2414B3A48();
  __break(1u);
}

uint64_t MCUINamespace<A>.backdropIsPaused(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  v3 = a1;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v5 + 16))(v8, v2, v4, v6);
  swift_getKeyPath();
  v10[15] = v3;
  sub_2414B41C8();
  swift_release();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t MCUINamespace<A>.backdropIntensity(_:)(uint64_t a1, float a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  _DWORD v10[4];

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, v2, v4, v6);
  swift_getKeyPath();
  *(float *)&v10[3] = a2;
  sub_2414B41C8();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

void sub_241437624(_DWORD *a1@<X8>)
{
  *a1 = 1065353216;
}

uint64_t sub_241437630()
{
  return sub_2414B3340();
}

void sub_24143763C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  char *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  char v10;
  id v11;
  char *v12;
  uint64_t v13;
  char v14;
  id v15;
  char *v16;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_contentView);
  if (v1)
  {
    v2 = v0;
    v3 = *(char **)(v0 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_renderer);
    if (v3)
    {
      v4 = *(void **)&v3[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_imageStorage];
      v5 = OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_image;
      v6 = *(void **)(v0 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_image);
      if (v4)
      {
        if (v6)
        {
          sub_2412CC884(0, (unint64_t *)&qword_254384FE0);
          v7 = v1;
          v16 = v3;
          v8 = v6;
          v9 = v4;
          v10 = sub_2414B532C();

          if ((v10 & 1) != 0)
          {
LABEL_12:

            return;
          }
          v6 = *(void **)(v2 + v5);
LABEL_9:
          v13 = OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_isPaused;
          v14 = *(_BYTE *)(v2 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_isPaused);
          v15 = v6;
          sub_2413F2548(v6, (v14 & 1) == 0);

          if (*(_BYTE *)(v2 + v13) == 1)
            objc_msgSend(v1, sel_setNeedsDisplay);
          v7 = v3;
          v16 = (char *)v1;
          goto LABEL_12;
        }
      }
      else if (!v6)
      {
        return;
      }
      v11 = v1;
      v12 = v3;
      goto LABEL_9;
    }
  }
}

void sub_2414377A8(id a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  id v10;

  v2 = v1;
  v3 = OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_contentView;
  v4 = *(void **)&v1[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_contentView];
  if (!a1)
  {
    if (!v4)
      return;
    goto LABEL_5;
  }
  v5 = a1;
  if (!v4
    || (sub_2412CC884(0, &qword_257128C60),
        v6 = v4,
        v5 = v5,
        v7 = sub_2414B532C(),
        v5,
        v6,
        (v7 & 1) == 0))
  {
    objc_msgSend(v5, sel_removeFromSuperview);
    v4 = *(void **)&v2[v3];
    if (v4)
    {
LABEL_5:
      v10 = v4;
      v8 = objc_msgSend(v10, sel_isPaused);
      v9 = OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_isPaused;
      if (v8 != v2[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_isPaused])
      {
        objc_msgSend(v10, sel_setPaused_);
        objc_msgSend(v10, sel_setEnableSetNeedsDisplay_, v2[v9]);
      }
      sub_24143763C();
      objc_msgSend(v2, sel_addSubview_, v10);

    }
  }
}

void sub_2414378D8()
{
  uint64_t v0;
  unsigned __int8 v1[16];

  v1[0] = *(_BYTE *)(v0 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_useMask);
  sub_241437D78(v1);
}

id sub_241437AC8(void *a1, char a2, char a3)
{
  _BYTE *v3;
  objc_class *ObjectType;
  uint64_t v8;
  void *v9;
  _BYTE *v10;
  id v11;
  id v12;
  objc_super v14;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v3[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_renderer] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_contentView] = 0;
  v8 = OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_image;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_image] = 0;
  v3[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_isPaused] = 0;
  *(_DWORD *)&v3[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_intensity] = 1045220557;
  v9 = *(void **)&v3[v8];
  *(_QWORD *)&v3[v8] = a1;
  v10 = v3;
  v11 = a1;

  v10[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_useMask] = a2;
  v10[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_allowsDisplayCompositing] = a3;

  v14.receiver = v10;
  v14.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v14, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_2414378D8();

  return v12;
}

Swift::Void __swiftcall BackdropHostView.layoutSubviews()()
{
  char *v0;
  void *v1;
  id v2;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, sel_layoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_contentView];
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v0, sel_bounds);
    objc_msgSend(v2, sel_setFrame_);

  }
}

void sub_241437D78(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  char *v12;
  char *v13;
  id v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  unsigned int v21;
  id v22;
  uint64_t v23;
  char *v24;
  id v25;
  uint64_t v26;
  void *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  char v36[24];
  uint64_t v37[5];
  char v38;
  uint64_t v39;

  v3 = v1;
  v4 = *a1;
  if (qword_2543845D0 != -1)
    swift_once();
  v5 = (void *)qword_254384630;
  if (qword_254384630)
  {
    v6 = qword_254384638;
    v7 = qword_254384640;
    v9 = (void *)qword_254384648;
    v8 = qword_254384650;
    v37[0] = qword_254384630;
    v37[1] = qword_254384638;
    v37[2] = qword_254384640;
    v37[3] = qword_254384648;
    v37[4] = qword_254384650;
    v38 = byte_254384658 & 1;
    v36[0] = v4;
    v10 = objc_allocWithZone((Class)type metadata accessor for Backdrop.CompositeRenderer());
    swift_unknownObjectRetain_n();
    v35 = v6;
    swift_unknownObjectRetain_n();
    v34 = v7;
    swift_unknownObjectRetain_n();
    v33 = v9;
    v11 = v9;
    v12 = (char *)Backdrop.CompositeRenderer.init(context:configuration:)(v37, v36);
    v13 = &v12[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis];
    swift_beginAccess();
    *(_DWORD *)(*(_QWORD *)v13 + 64) = 1065353216;
    sub_2413F31BC();
    v14 = objc_msgSend((id)objc_opt_self(), sel_systemGrayColor);
    sub_2413F2A5C(v14, 0);

    v15 = (uint64_t *)&v12[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_framebufferPixelFormat];
    swift_beginAccess();
    v16 = *v15;
    *v15 = v8;
    if (v16 != v8)
    {
      v17 = *(_QWORD *)&v12[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_renderers + 16];
      *(_QWORD *)(v17 + 16) = v8;
      *(_QWORD *)(v17 + 160) = sub_2413F6798();
      swift_unknownObjectRelease();
    }
    v18 = *(void **)(v3 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_image);
    v19 = v18;
    sub_2413F2548(v18, 0);

    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDDB50]), sel_initWithFrame_device_, v5, 0.0, 0.0, 0.0, 0.0);
    v21 = objc_msgSend(v5, sel_supportsFamily_, 1005);
    v39 = v2;
    if (v21)
    {
      v22 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
      v23 = (uint64_t)objc_msgSend(v22, sel_maximumFramesPerSecond);

    }
    else
    {
      v24 = &v12[OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_state];
      swift_beginAccess();
      if (*v24)
        v23 = 30;
      else
        v23 = 15;
    }
    objc_msgSend(v20, sel_setPreferredFramesPerSecond_, v23);
    objc_msgSend(v20, sel_setColorPixelFormat_, *v15);
    objc_msgSend(v20, sel_setDelegate_, v12);
    v25 = objc_msgSend(v20, sel_layer);
    objc_msgSend(v25, sel_setAllowsDisplayCompositing_, *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_allowsDisplayCompositing));

    if (v4)
    {
      objc_msgSend(v20, sel_setOpaque_, 0);
      objc_msgSend(v20, sel_setClearColor_, 0.0, 0.0, 0.0, 0.0);
    }
    v26 = OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_renderer;
    v27 = *(void **)(v3 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_renderer);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_renderer) = v12;
    v28 = v12;

    v29 = *(_QWORD *)(v3 + v26);
    if (v29)
    {
      v30 = v29 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_spectrumAnalysis;
      swift_beginAccess();
      *(_DWORD *)(*(_QWORD *)v30 + 64) = *(_DWORD *)(v3 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_intensity);
    }
    sub_24143763C();

    v31 = *(void **)(v3 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_contentView);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_contentView) = v20;
    v32 = v20;
    sub_2414377A8(v31);

    sub_2413F86CC((uint64_t)v5, v35, v34, v33);
  }
  else
  {
    sub_241438AE0();
    swift_allocError();
    swift_willThrow();
  }
}

uint64_t BackdropHostView.accessibilityIgnoresInvertColors.getter()
{
  return 1;
}

uint64_t (*BackdropHostView.accessibilityIgnoresInvertColors.modify(_BYTE *a1))(_QWORD, _QWORD)
{
  *a1 = 1;
  return CGSizeMake;
}

id BackdropHostView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void BackdropHostView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BackdropHostView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void BackdropHostView.didChangeState(renderer:)(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v4;
  id v5;
  uint64_t v6;
  _BYTE *v7;
  id v8;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC11MediaCoreUI16BackdropHostView_contentView);
  if (v2)
  {
    v8 = v2;
    v4 = objc_msgSend(v8, sel_device);
    if (v4)
    {
      if ((objc_msgSend(v4, sel_supportsFamily_, 1005) & 1) != 0)
      {
        v5 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
        v6 = (uint64_t)objc_msgSend(v5, sel_maximumFramesPerSecond);

      }
      else
      {
        v7 = (_BYTE *)(a1 + OBJC_IVAR____TtCO11MediaCoreUI8Backdrop17CompositeRenderer_state);
        swift_beginAccess();
        if (*v7)
          v6 = 30;
        else
          v6 = 15;
      }
      objc_msgSend(v8, sel_setPreferredFramesPerSecond_, v6);

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

uint64_t sub_24143843C()
{
  uint64_t v0;

  v0 = sub_2414B2CA4();
  __swift_allocate_value_buffer(v0, qword_257137180);
  __swift_project_value_buffer(v0, (uint64_t)qword_257137180);
  return sub_2414B2C98();
}

unint64_t sub_2414384B8()
{
  unint64_t result;

  result = qword_257128C30;
  if (!qword_257128C30)
  {
    result = MEMORY[0x242695AE8](&unk_2414C72FC, &type metadata for BackdropIsPausedKey);
    atomic_store(result, (unint64_t *)&qword_257128C30);
  }
  return result;
}

unint64_t sub_2414384FC()
{
  unint64_t result;

  result = qword_254383C80;
  if (!qword_254383C80)
  {
    result = MEMORY[0x242695AE8](&unk_2414C72C4, &type metadata for BackdropIntensityKey);
    atomic_store(result, (unint64_t *)&qword_254383C80);
  }
  return result;
}

uint64_t View.backdropIsPaused(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v6 = type metadata accessor for MCUINamespace(0, a2, a3, a4);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - v8;
  View.mcui.getter(a2, (uint64_t)&v11 - v8);
  MCUINamespace<A>.backdropIsPaused(_:)(a1, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t View.backdropIntensity(_:)(uint64_t a1, float a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v7 = type metadata accessor for MCUINamespace(0, a1, a4, a5);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v12 - v9;
  View.mcui.getter(a1, (uint64_t)&v12 - v9);
  MCUINamespace<A>.backdropIntensity(_:)(v7, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_2414386AC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_2414384B8();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

uint64_t sub_2414386F8()
{
  sub_2414384B8();
  return sub_2414B3844();
}

float sub_241438740@<S0>(float *a1@<X8>)
{
  float result;
  float v3;

  sub_2414384FC();
  sub_2414B3838();
  result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_24143878C()
{
  sub_2414384FC();
  return sub_2414B3844();
}

unint64_t sub_2414387D8()
{
  unint64_t result;

  result = qword_2543830C0;
  if (!qword_2543830C0)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for BackdropView, &type metadata for BackdropView);
    atomic_store(result, (unint64_t *)&qword_2543830C0);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for BackdropView(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for BackdropView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for BackdropView(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for BackdropView(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 9))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BackdropView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for BackdropView()
{
  return &type metadata for BackdropView;
}

uint64_t method lookup function for BackdropHostView()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_2414389A0(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVySbGGAaBHPxAaBHD1__AgA0cI0HPyHCHCTm(a1, &qword_254381330, (unint64_t *)&qword_254381328);
}

uint64_t sub_2414389B4(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVySbGGAaBHPxAaBHD1__AgA0cI0HPyHCHCTm(a1, &qword_254384178, &qword_254384170);
}

uint64_t get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVySbGGAaBHPxAaBHD1__AgA0cI0HPyHCHCTm(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v5 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
  v6 = sub_2414B3514();
  v8[0] = v5;
  v8[1] = sub_241438A3C(a3, a2);
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v6, v8);
}

uint64_t sub_241438A3C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF1028], v4);
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for BackdropIntensityKey()
{
  return &type metadata for BackdropIntensityKey;
}

ValueMetadata *type metadata accessor for BackdropIsPausedKey()
{
  return &type metadata for BackdropIsPausedKey;
}

unint64_t sub_241438A9C()
{
  unint64_t result;

  result = qword_2543830C8;
  if (!qword_2543830C8)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for BackdropView, &type metadata for BackdropView);
    atomic_store(result, (unint64_t *)&qword_2543830C8);
  }
  return result;
}

unint64_t sub_241438AE0()
{
  unint64_t result;

  result = qword_257128C68;
  if (!qword_257128C68)
  {
    result = MEMORY[0x242695AE8](&unk_2414C73A4, &type metadata for BackdropHostView.Error);
    atomic_store(result, (unint64_t *)&qword_257128C68);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BackdropHostView.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_241438B64 + 4 * byte_2414C70F0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_241438B84 + 4 * byte_2414C70F5[v4]))();
}

_BYTE *sub_241438B64(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_241438B84(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_241438B8C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_241438B94(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_241438B9C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_241438BA4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BackdropHostView.Error()
{
  return &type metadata for BackdropHostView.Error;
}

unint64_t sub_241438BC4()
{
  unint64_t result;

  result = qword_257128C70;
  if (!qword_257128C70)
  {
    result = MEMORY[0x242695AE8](&unk_2414C737C, &type metadata for BackdropHostView.Error);
    atomic_store(result, (unint64_t *)&qword_257128C70);
  }
  return result;
}

uint64_t NowPlayingHostedContentToggleButton.id.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t NowPlayingHostedContentToggleButton.hostedContentID.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 40);
  *a1 = *(_QWORD *)(v1 + 32);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_241438C24()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t sub_241438C54(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 48) = a1;
  return result;
}

uint64_t (*sub_241438C90())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_241438CCC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_241438D1C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_241438CF8()
{
  return sub_241438DE8();
}

uint64_t sub_241438D1C()
{
  uint64_t v0;
  _QWORD *KeyPath;

  KeyPath = (_QWORD *)swift_getKeyPath();
  sub_2414392C4(KeyPath);
  swift_release();
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t sub_241438D80@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_241438D1C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_241438DAC()
{
  return sub_241438DE8();
}

uint64_t sub_241438DD0()
{
  return 16;
}

__n128 sub_241438DDC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_241438DE8()
{
  _QWORD *KeyPath;

  KeyPath = (_QWORD *)swift_getKeyPath();
  sub_241439384(KeyPath);
  return swift_release();
}

void (*sub_241438E64(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *KeyPath;
  uint64_t v8;
  uint64_t v9;

  v2 = v1;
  v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[4] = v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 88);
  KeyPath = (_QWORD *)swift_getKeyPath();
  sub_2414392C4(KeyPath);
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  v9 = type metadata accessor for NowPlayingHostedContentToggleButton(255, v5, v6, v8);
  MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingHostedContentToggleButton<A>, v9);
  sub_2414B2B9C();
  swift_release();
  v4[5] = sub_241438C90();
  return sub_241438F60;
}

void sub_241438F60(_QWORD *a1)
{
  void *v1;
  uint64_t v2;

  v1 = (void *)*a1;
  v2 = *(_QWORD *)(*a1 + 32);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  sub_241438F98(v2);
  free(v1);
}

uint64_t sub_241438F98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 88);
  swift_getKeyPath();
  v4 = type metadata accessor for NowPlayingHostedContentToggleButton(255, v1, v2, v3);
  MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingHostedContentToggleButton<A>, v4);
  sub_2414B2B90();
  return swift_release();
}

uint64_t NowPlayingHostedContentToggleButton.__allocating_init(_:presenting:label:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v6;

  v6 = swift_allocObject();
  NowPlayingHostedContentToggleButton.init(_:presenting:label:)(a1, a2, a3);
  return v6;
}

uint64_t NowPlayingHostedContentToggleButton.init(_:presenting:label:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v5 = *(_QWORD *)(*(_QWORD *)v3 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v9;
  v11 = v9[1];
  v13 = *v12;
  v14 = v12[1];
  *(_BYTE *)(v3 + 48) = 1;
  v15 = sub_2414B2BA8();
  *(_QWORD *)(v3 + 16) = v10;
  *(_QWORD *)(v3 + 24) = v11;
  *(_QWORD *)(v3 + 32) = v13;
  *(_QWORD *)(v3 + 40) = v14;
  a3(v15);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v3 + *(_QWORD *)(*(_QWORD *)v3 + 120), v8, v5);
  return v3;
}

uint64_t sub_241439150@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v13[2];

  v4 = *(_QWORD *)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *((_QWORD *)v2 + 5);
  v13[0] = *((_QWORD *)v2 + 4);
  v13[1] = v9;
  (*(void (**)(char *, char *, uint64_t, double))(v10 + 16))(v8, &v2[*(_QWORD *)(v4 + 120)], v5, v6);
  swift_bridgeObjectRetain();
  v11 = sub_241438D1C();
  return sub_241439200(v13, (uint64_t)v8, v11 & 1, v5, *(_QWORD *)(v4 + 88), a2);
}

uint64_t sub_241439200@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v11 = *a1;
  v12 = a1[1];
  *(_QWORD *)a6 = swift_getKeyPath();
  *(_QWORD *)(a6 + 8) = 0;
  *(_QWORD *)(a6 + 16) = 0;
  *(_QWORD *)(a6 + 24) = 0;
  *(_BYTE *)(a6 + 32) = 0;
  *(_QWORD *)(a6 + 40) = swift_getKeyPath();
  *(_QWORD *)(a6 + 48) = 0;
  *(_BYTE *)(a6 + 56) = 0;
  *(_QWORD *)(a6 + 64) = swift_getKeyPath();
  *(_QWORD *)(a6 + 72) = 0;
  *(_BYTE *)(a6 + 80) = 0;
  *(_QWORD *)(a6 + 88) = v11;
  *(_QWORD *)(a6 + 96) = v12;
  v14 = type metadata accessor for ToggleButton(0, a4, a5, v13);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(a6 + *(int *)(v14 + 48), a2, a4);
  *(_BYTE *)(a6 + *(int *)(v14 + 52)) = a3;
  return result;
}

uint64_t sub_2414392C4(_QWORD *a1)
{
  MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingHostedContentToggleButton<A>, *(_QWORD *)(*a1 + *MEMORY[0x24BEE46A8]));
  return sub_2414B2B84();
}

uint64_t sub_241439334()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 24);
  result = swift_beginAccess();
  *(_BYTE *)(v1 + 48) = v2;
  return result;
}

uint64_t sub_241439384(_QWORD *a1)
{
  MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingHostedContentToggleButton<A>, *(_QWORD *)(*a1 + *MEMORY[0x24BEE46A8]));
  return sub_2414B2B78();
}

uint64_t type metadata accessor for NowPlayingHostedContentToggleButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NowPlayingHostedContentToggleButton);
}

uint64_t *NowPlayingHostedContentToggleButton.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 120));
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 128);
  v3 = sub_2414B2BB4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return v0;
}

uint64_t NowPlayingHostedContentToggleButton.__deallocating_deinit()
{
  NowPlayingHostedContentToggleButton.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_2414394D0@<X0>(_QWORD *a1@<X8>)
{
  return NowPlayingHostedContentToggleButton.id.getter(a1);
}

uint64_t sub_2414394F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241439150(a1, a2);
}

uint64_t sub_241439510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t OpaqueTypeConformance2;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  char *v42;
  void (*v43)(char *, __int128 *, uint64_t, double);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  unsigned __int128 v57;
  __int128 *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  char *v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  __int128 v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  char *v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  __int128 *v148;
  uint64_t v149;
  uint64_t v150;
  void (*v151)(uint64_t, char *, uint64_t);
  void (*v152)(char *, __int128 *, uint64_t);
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  __int128 *v159;
  _QWORD v160[2];
  _QWORD v161[2];
  _QWORD v162[2];
  _QWORD v163[4];
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  _QWORD v168[2];
  unsigned __int128 v169;
  __int128 v170;
  char v171;

  v147 = a2;
  v4 = sub_2414B3A9C();
  v141 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v140 = (char *)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for NowPlayingHostedContentToggleButtonStyle();
  MEMORY[0x24BDAC7A8](v6);
  v114 = (uint64_t *)((char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(_QWORD *)(a1 + 24);
  v156 = *(_QWORD *)(a1 + 16);
  v155 = v8;
  v9 = sub_2414B487C();
  v116 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v111 = (char *)&v107 - v11;
  v12 = MEMORY[0x242695AE8](MEMORY[0x24BDF46D0], v9, v10);
  v13 = sub_2412C8030(&qword_257128EC0, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingHostedContentToggleButtonStyle, (uint64_t)&protocol conformance descriptor for NowPlayingHostedContentToggleButtonStyle);
  *(_QWORD *)&v169 = v9;
  *((_QWORD *)&v169 + 1) = v6;
  v108 = v9;
  v14 = v6;
  v107 = v6;
  *(_QWORD *)&v170 = v12;
  *((_QWORD *)&v170 + 1) = v13;
  v110 = v12;
  v15 = v13;
  v109 = v13;
  v16 = MEMORY[0x242695A94](0, &v169, MEMORY[0x24BDF2460], 0);
  v120 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v112 = (char *)&v107 - v17;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254384090);
  v123 = v16;
  v18 = sub_2414B3514();
  v122 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v119 = (char *)&v107 - v19;
  *(_QWORD *)&v169 = v9;
  *((_QWORD *)&v169 + 1) = v14;
  *(_QWORD *)&v170 = v12;
  *((_QWORD *)&v170 + 1) = v15;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v21 = sub_2412C8FC4(&qword_254384088, &qword_254384090, MEMORY[0x24BDEFAD8]);
  v115 = OpaqueTypeConformance2;
  v168[0] = OpaqueTypeConformance2;
  v168[1] = v21;
  v22 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v18, v168);
  v23 = sub_2412C8030(&qword_254382BA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEF428], MEMORY[0x24BDEF420]);
  v125 = v18;
  *(_QWORD *)&v169 = v18;
  *((_QWORD *)&v169 + 1) = v4;
  v153 = v4;
  v118 = v22;
  *(_QWORD *)&v170 = v22;
  *((_QWORD *)&v170 + 1) = v23;
  v117 = v23;
  v24 = MEMORY[0x242695A94](0, &v169, MEMORY[0x24BDF2380], 0);
  v121 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v113 = (char *)&v107 - v25;
  v124 = v26;
  v27 = sub_2414B3514();
  v130 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v127 = (char *)&v107 - v28;
  sub_2414B3DB4();
  v132 = v27;
  v29 = sub_2414B3514();
  v134 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v133 = (char *)&v107 - v30;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381390);
  v135 = v29;
  v31 = sub_2414B3514();
  v138 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v137 = (char *)&v107 - v32;
  v139 = v33;
  v34 = sub_2414B3514();
  v143 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v142 = (char *)&v107 - v35;
  v144 = v36;
  v146 = sub_2414B3514();
  v145 = *(_QWORD *)(v146 - 8);
  MEMORY[0x24BDAC7A8](v146);
  v154 = (char *)&v107 - v37;
  v150 = a1;
  v38 = *(_QWORD *)(a1 - 8);
  v39 = *(_QWORD *)(v38 + 64);
  v41 = MEMORY[0x24BDAC7A8](v40);
  v42 = (char *)&v107 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = *(void (**)(char *, __int128 *, uint64_t, double))(v38 + 16);
  v148 = v2;
  v43(v42, v2, a1, v41);
  sub_2414B4FC0();
  v44 = sub_2414B4FB4();
  v45 = *(unsigned __int8 *)(v38 + 80);
  v46 = (v45 + 48) & ~v45;
  v126 = v39;
  v151 = (void (*)(uint64_t, char *, uint64_t))(v46 + v39);
  v149 = v45;
  v47 = v45 | 7;
  v48 = (char *)swift_allocObject();
  v49 = MEMORY[0x24BEE6930];
  *((_QWORD *)v48 + 2) = v44;
  *((_QWORD *)v48 + 3) = v49;
  v50 = v156;
  v51 = v155;
  *((_QWORD *)v48 + 4) = v156;
  *((_QWORD *)v48 + 5) = v51;
  v52 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
  v53 = v150;
  v52(&v48[v46], v42, v150);
  v152 = (void (*)(char *, __int128 *, uint64_t))v43;
  ((void (*)(char *, __int128 *, uint64_t))v43)(v42, v2, v53);
  v54 = sub_2414B4FB4();
  v136 = v47;
  v55 = (char *)swift_allocObject();
  *((_QWORD *)v55 + 2) = v54;
  *((_QWORD *)v55 + 3) = MEMORY[0x24BEE6930];
  *((_QWORD *)v55 + 4) = v50;
  v56 = v155;
  *((_QWORD *)v55 + 5) = v155;
  v128 = v42;
  v151 = (void (*)(uint64_t, char *, uint64_t))v52;
  v52(&v55[v46], v42, v53);
  sub_2414B48E8();
  v57 = v169;
  v157 = v50;
  v158 = v56;
  v58 = v148;
  v159 = v148;
  swift_retain();
  swift_retain();
  v59 = v111;
  v129 = v57 >> 64;
  v131 = v57;
  sub_2414B4870();
  v60 = *((_QWORD *)v58 + 12);
  v61 = (uint64_t)v114;
  *v114 = *((_QWORD *)v58 + 11);
  *(_QWORD *)(v61 + 8) = v60;
  v62 = v107;
  v63 = (uint64_t *)(v61 + *(int *)(v107 + 20));
  *v63 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  swift_storeEnumTagMultiPayload();
  v64 = v61 + *(int *)(v62 + 24);
  type metadata accessor for NowPlayingViewModel.Metrics();
  sub_2412C8030(&qword_25437D0B8, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingViewModel.Metrics, (uint64_t)&protocol conformance descriptor for NowPlayingViewModel.Metrics);
  swift_bridgeObjectRetain();
  v65 = v112;
  *(_QWORD *)v64 = sub_2414B2FEC();
  *(_BYTE *)(v64 + 8) = v66 & 1;
  v67 = v108;
  sub_2414B4228();
  sub_2412C68F4(v61, (uint64_t (*)(_QWORD))type metadata accessor for NowPlayingHostedContentToggleButtonStyle);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v59, v67);
  if (qword_257120A28 != -1)
    swift_once();
  v68 = ~v149;
  *(_QWORD *)&v169 = qword_257128C78;
  sub_24143E880();
  v69 = v119;
  v70 = v123;
  sub_2414B4234();
  (*(void (**)(char *, uint64_t))(v120 + 8))(v65, v70);
  v71 = v140;
  v72 = v125;
  v73 = v153;
  v74 = v118;
  v75 = v117;
  sub_24140DCEC();
  v76 = v113;
  sub_2414B41D4();
  (*(void (**)(char *, uint64_t))(v141 + 8))(v71, v73);
  (*(void (**)(char *, uint64_t))(v122 + 8))(v69, v72);
  v77 = v58[1];
  v169 = *v58;
  v170 = v77;
  v171 = *((_BYTE *)v58 + 32);
  sub_2412C8378((uint64_t)&v169, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2412C72F4);
  sub_2412E1CCC((uint64_t)&v164);
  sub_2412C8378((uint64_t)&v169, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2412C68A4);
  if (v165 != 1)
    sub_2412C68C0(v164, v165);
  v164 = v72;
  v165 = v153;
  v166 = v74;
  v167 = v75;
  v78 = swift_getOpaqueTypeConformance2();
  v79 = v127;
  v80 = v124;
  sub_2414B42DC();
  (*(void (**)(char *, uint64_t))(v121 + 8))(v76, v80);
  v164 = 0;
  v165 = 0xE000000000000000;
  sub_2414B5578();
  swift_bridgeObjectRelease();
  v164 = 0xD000000000000018;
  v165 = 0x80000002414D3DE0;
  swift_bridgeObjectRetain();
  sub_2414B4DF8();
  swift_bridgeObjectRelease();
  v81 = sub_24130CB04();
  v163[2] = v78;
  v163[3] = v81;
  v82 = MEMORY[0x24BDED308];
  v83 = v132;
  v84 = MEMORY[0x242695AE8]();
  v85 = v133;
  sub_2412F6DCC();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v130 + 8))(v79, v83);
  v86 = v150;
  v153 = *(int *)(v150 + 52);
  v87 = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v163[0] = v84;
  v163[1] = v87;
  v88 = v82;
  v89 = v135;
  v90 = MEMORY[0x242695AE8](v82, v135, v163);
  v91 = v137;
  sub_2414B4534();
  (*(void (**)(char *, uint64_t))(v134 + 8))(v85, v89);
  v92 = sub_2412C8FC4(&qword_254381388, &qword_254381390, MEMORY[0x24BDF1248]);
  v162[0] = v90;
  v162[1] = v92;
  v93 = v139;
  v94 = MEMORY[0x242695AE8](v88, v139, v162);
  v95 = v142;
  sub_2414B44F8();
  (*(void (**)(char *, uint64_t))(v138 + 8))(v91, v93);
  v96 = v128;
  v97 = v86;
  v152(v128, v58, v86);
  v98 = (v149 + 32) & v68;
  v149 = v98 + v126;
  v99 = swift_allocObject();
  v100 = v155;
  *(_QWORD *)(v99 + 16) = v156;
  *(_QWORD *)(v99 + 24) = v100;
  v151(v99 + v98, v96, v86);
  v161[0] = v94;
  v161[1] = MEMORY[0x24BDECC38];
  v101 = v144;
  v102 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v144, v161);
  sub_2414B454C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v143 + 8))(v95, v101);
  LOBYTE(v164) = *((_BYTE *)v148 + v153);
  ((void (*)(char *))v152)(v96);
  v103 = swift_allocObject();
  *(_QWORD *)(v103 + 16) = v156;
  *(_QWORD *)(v103 + 24) = v100;
  v151(v103 + v98, v96, v97);
  v160[0] = v102;
  v160[1] = MEMORY[0x24BDF0910];
  v104 = v146;
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v146, v160);
  v105 = v154;
  sub_2414B4564();
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v145 + 8))(v105, v104);
}

uint64_t sub_24143A338@<X0>(uint64_t a1@<X2>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_BYTE *)(a1 + 56);
  sub_2412C72E4(v4, v5, v6);
  sub_2412EEDF4(v4, v5, v6, &v10);
  sub_2412C822C(v4, v5, v6);
  if (v11)
  {
    if (v10 == *(_QWORD *)(a1 + 88) && v11 == *(_QWORD *)(a1 + 96))
    {
      result = swift_bridgeObjectRelease();
      v8 = 1;
    }
    else
    {
      v8 = sub_2414B57D0();
      result = swift_bridgeObjectRelease();
    }
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v8 = 0;
  }
  *a2 = v8 & 1;
  return result;
}

uint64_t sub_24143A408(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  unint64_t v21;
  uint64_t v22;
  os_log_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(uint64_t *, uint64_t *);
  uint64_t v29;
  uint64_t v30;
  os_log_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[2];

  v8 = type metadata accessor for ToggleButton(0, a5, a6, a4);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v32 - v10;
  v12 = *a1;
  if (qword_2543809C0 != -1)
    swift_once();
  v13 = sub_2414B2CA4();
  __swift_project_value_buffer(v13, (uint64_t)qword_25438E7B8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a4, v8);
  v14 = sub_2414B2C8C();
  v15 = sub_2414B51B8();
  v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    v17 = swift_slowAlloc();
    v33 = v16;
    v18 = v17;
    v34 = swift_slowAlloc();
    v36[0] = v34;
    *(_DWORD *)v18 = 136315394;
    if (v12)
      v19 = 0x69746E6573657250;
    else
      v19 = 0x697373696D736944;
    v35 = sub_2412E4890(v19, 0xEA0000000000676ELL, v36);
    sub_2414B541C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    v32 = v14;
    v20 = v12;
    v22 = *((_QWORD *)v11 + 11);
    v21 = *((_QWORD *)v11 + 12);
    swift_bridgeObjectRetain();
    v35 = sub_2412E4890(v22, v21, v36);
    sub_2414B541C();
    v12 = v20;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v23 = v32;
    _os_log_impl(&dword_2412C1000, v32, (os_log_type_t)v33, "%s selected content (id=%{public}s) because its toggle button was tapped", (uint8_t *)v18, 0x16u);
    v24 = v34;
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v24, -1, -1);
    MEMORY[0x242695BD8](v18, -1, -1);

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

  }
  v25 = *(_QWORD *)(a4 + 64);
  v26 = *(_QWORD *)(a4 + 72);
  v27 = *(_BYTE *)(a4 + 80);
  sub_2412EE9B0();
  v28 = (void (*)(uint64_t *, uint64_t *))sub_241345AEC(v25, v26, v27);
  sub_2412EEDAC();
  if (v12)
  {
    v30 = *(_QWORD *)(a4 + 88);
    v29 = *(_QWORD *)(a4 + 96);
    swift_bridgeObjectRetain();
  }
  else
  {
    v30 = 0;
    v29 = 0;
  }
  v36[0] = v30;
  v36[1] = v29;
  LOBYTE(v35) = 1;
  v28(v36, &v35);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24143A708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToggleButton(0, v9, v10, v11);
  sub_2412FBF34(a1 + *(int *)(v12 + 48), a2, (uint64_t)v8);
  sub_2412EEA1C((uint64_t)v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

void sub_24143A7B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void (*v22)(uint64_t *, uint64_t *);
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v1 + *(int *)(v7 + 52)) & 1) == 0)
  {
    v8 = *(_QWORD *)(v1 + 40);
    v9 = *(_QWORD *)(v2 + 48);
    v10 = *(_BYTE *)(v2 + 56);
    sub_2412C72E4(*(_QWORD *)(v2 + 40), v9, v10);
    sub_2412EEDF4(v8, v9, v10, &v26);
    sub_2412C822C(v8, v9, v10);
    if (!v27)
    {
      swift_bridgeObjectRelease();
      return;
    }
    if (v26 == *(_QWORD *)(v2 + 88) && v27 == *(_QWORD *)(v2 + 96))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = sub_2414B57D0();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
        return;
    }
    if (qword_2543809C0 != -1)
      swift_once();
    v12 = sub_2414B2CA4();
    __swift_project_value_buffer(v12, (uint64_t)qword_25438E7B8);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, a1);
    v13 = sub_2414B2C8C();
    v14 = sub_2414B51B8();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v26 = v24;
      *(_DWORD *)v15 = 136446210;
      v23[1] = v15 + 4;
      v17 = *((_QWORD *)v6 + 11);
      v16 = *((_QWORD *)v6 + 12);
      swift_bridgeObjectRetain();
      v25 = sub_2412E4890(v17, v16, &v26);
      sub_2414B541C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
      _os_log_impl(&dword_2412C1000, v13, v14, "Dismissing selected content (id=%{public}s) because its associated button was disabled", v15, 0xCu);
      v18 = v24;
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v18, -1, -1);
      MEMORY[0x242695BD8](v15, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
    }

    v19 = *(_QWORD *)(v2 + 64);
    v20 = *(_QWORD *)(v2 + 72);
    v21 = *(_BYTE *)(v2 + 80);
    sub_2412EE9B0();
    v22 = (void (*)(uint64_t *, uint64_t *))sub_241345AEC(v19, v20, v21);
    sub_2412EEDAC();
    v26 = 0;
    v27 = 0;
    LOBYTE(v25) = 0;
    v22(&v26, &v25);
    swift_release();
  }
}

void sub_24143AAA4()
{
  qword_257128C78 = 0xC024000000000000;
}

uint64_t NowPlayingHostedContentToggleButtonStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = v2;
  v27 = a1;
  v33 = a2;
  v5 = sub_2414B3AF0();
  v6 = *(_QWORD *)(v5 - 8);
  v31 = v5;
  v32 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v29 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for NowPlayingHostedContentToggleButtonStyle();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2414B3C70();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257128C98);
  v30 = *(_QWORD *)(v28 - 8);
  v15 = MEMORY[0x24BDAC7A8](v28);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))((char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12, v15);
  v18 = v3;
  sub_2412C6A50(v3, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for NowPlayingHostedContentToggleButtonStyle);
  v19 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v20 = (v14 + *(unsigned __int8 *)(v9 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v21 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v21 + v19, (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  sub_24143AE54((uint64_t)v11, v21 + v20);
  v34 = v27;
  v35 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257128CA0);
  sub_24143B154();
  sub_2414B47D4();
  v22 = v29;
  sub_2414B3AE4();
  sub_2412C8FC4(&qword_257128CE0, &qword_257128C98, MEMORY[0x24BDF43B0]);
  sub_2412C8030(&qword_257128CE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEF8D0], MEMORY[0x24BDEF8B0]);
  v23 = v28;
  v24 = v31;
  sub_2414B4198();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v22, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v17, v23);
}

uint64_t type metadata accessor for NowPlayingHostedContentToggleButtonStyle()
{
  uint64_t result;

  result = qword_257128E00;
  if (!qword_257128E00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24143AD88(uint64_t a1, _QWORD *a2)
{
  void (*v3)(uint64_t *, _QWORD);
  BOOL *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11[4];

  v3 = (void (*)(uint64_t *, _QWORD))sub_2414B3C40();
  *v4 = !*v4;
  v3(v11, 0);
  v5 = *((_BYTE *)a2 + *(int *)(type metadata accessor for NowPlayingHostedContentToggleButtonStyle() + 24) + 8);
  v6 = swift_retain();
  sub_241346340(v6, v5);
  swift_release();
  v7 = *a2;
  v8 = a2[1];
  v11[0] = v7;
  v11[1] = v8;
  swift_bridgeObjectRetain();
  v9 = sub_2414B3C4C();
  sub_24143AE9C(v9, v11, (v9 & 1) == 0);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_24143AE54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NowPlayingHostedContentToggleButtonStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24143AE9C(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void (*v15)(char *);
  char v16;

  v6 = *a2;
  v5 = a2[1];
  v7 = *(_QWORD *)(v3 + 16);
  result = swift_beginAccess();
  v9 = *(_QWORD *)(v7 + 16);
  if (*(_QWORD *)(v9 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = sub_2412D943C(v6, v5);
    if ((v11 & 1) != 0)
    {
      v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v12 + 16))
      {
        v13 = sub_2412D96B8();
        if ((v14 & 1) != 0)
        {
          v15 = *(void (**)(char *))(*(_QWORD *)(v12 + 56) + 16 * v13);
          swift_retain();
          swift_bridgeObjectRelease();
          v16 = a3 & 1;
          v15(&v16);
          return swift_release();
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24143AF94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257128CD8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (uint64_t *)((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257128CC8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257128CB8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v8 = sub_2414B4A44();
  v8[1] = v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_257128EC8);
  sub_24143B2C8(a1, a2, (uint64_t)v8 + *(int *)(v16 + 44));
  sub_2412DC3FC((uint64_t)v8, (uint64_t)v11, &qword_257128CD8);
  sub_2412CBE78((uint64_t)v8, &qword_257128CD8);
  sub_2412DC3FC((uint64_t)v11, (uint64_t)v14, &qword_257128CC8);
  v17 = &v14[*(int *)(v12 + 36)];
  *(_QWORD *)v17 = 0x3FF0000000000000;
  *((_WORD *)v17 + 4) = 0;
  sub_2412CBE78((uint64_t)v11, &qword_257128CC8);
  LOBYTE(a1) = sub_2414B3C4C();
  sub_2412DC3FC((uint64_t)v14, a3, &qword_257128CB8);
  v18 = a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257128CA0) + 36);
  *(_QWORD *)v18 = 0;
  *(_BYTE *)(v18 + 8) = a1 & 1;
  return sub_2412CBE78((uint64_t)v14, &qword_257128CB8);
}

uint64_t sub_24143B14C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24143AF94(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_24143B154()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257128CA8;
  if (!qword_257128CA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128CA0);
    v2[0] = sub_24143B1D8();
    v2[1] = sub_2412C8FC4((unint64_t *)&qword_254380FC0, &qword_254380FD0, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257128CA8);
  }
  return result;
}

unint64_t sub_24143B1D8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257128CB0;
  if (!qword_257128CB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128CB8);
    v2[0] = sub_24143B244();
    v2[1] = MEMORY[0x24BDEEC40];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257128CB0);
  }
  return result;
}

unint64_t sub_24143B244()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257128CC0;
  if (!qword_257128CC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128CC8);
    v2[0] = sub_2412C8FC4(&qword_257128CD0, &qword_257128CD8, MEMORY[0x24BDF4750]);
    v2[1] = MEMORY[0x24BDF0390];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257128CC0);
  }
  return result;
}

uint64_t sub_24143B2C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double v43;
  uint64_t (*v44)(void);
  uint64_t v45;
  uint64_t v46;
  char v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  unsigned int *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t KeyPath;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;

  v80 = a2;
  v76 = a1;
  v94 = a3;
  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_257128CF8);
  MEMORY[0x24BDAC7A8](v3);
  v93 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2414B4AE0();
  v90 = *(_QWORD *)(v5 - 8);
  v91 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v89 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571229B0);
  MEMORY[0x24BDAC7A8](v78);
  v77 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_2414B3934();
  v74 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v9 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2414B3C58();
  v82 = *(_QWORD *)(v10 - 8);
  v83 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_257128ED0);
  MEMORY[0x24BDAC7A8](v79);
  v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_257128ED8);
  MEMORY[0x24BDAC7A8](v81);
  v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_257128EE0);
  MEMORY[0x24BDAC7A8](v84);
  v92 = (uint64_t)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v86 = (char *)&v74 - v19;
  MEMORY[0x24BDAC7A8](v20);
  v88 = (uint64_t)&v74 - v21;
  v22 = sub_2414B35A4();
  MEMORY[0x24BDAC7A8](v22);
  v24 = (_OWORD *)((char *)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383E98);
  MEMORY[0x24BDAC7A8](v25);
  v87 = (uint64_t)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v74 - v28;
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&v74 - v31;
  v33 = (char *)v24 + *(int *)(v22 + 20);
  v34 = *MEMORY[0x24BDEEB68];
  v35 = sub_2414B38C8();
  v36 = v34;
  v37 = v76;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v33, v36, v35);
  __asm { FMOV            V0.2D, #6.0 }
  *v24 = _Q0;
  if ((sub_2414B3C4C() & 1) != 0)
    v43 = 1.0;
  else
    v43 = 0.0;
  v44 = MEMORY[0x24BDED998];
  sub_2412C6A50((uint64_t)v24, (uint64_t)v29, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  *(double *)&v29[*(int *)(v25 + 36)] = v43;
  sub_2412C68F4((uint64_t)v24, (uint64_t (*)(_QWORD))v44);
  v85 = v32;
  v45 = (uint64_t)v32;
  v46 = v74;
  sub_2412EAEA4((uint64_t)v29, v45, &qword_254383E98);
  sub_2414B3C64();
  v47 = sub_2414B3C4C();
  type metadata accessor for NowPlayingHostedContentToggleButtonStyle();
  sub_2412C8A04((uint64_t)v9);
  v48 = &v77[*(int *)(v78 + 48)];
  *v77 = v47 & 1;
  v49 = v75;
  (*(void (**)(_BYTE *, char *, uint64_t))(v46 + 32))(v48, v9, v75);
  if ((v47 & 1) != 0)
  {
    v50 = sub_2414B463C();
LABEL_11:
    v51 = v50;
    (*(void (**)(_BYTE *, uint64_t))(v46 + 8))(v48, v49);
    goto LABEL_12;
  }
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(v46 + 88))(v48, v49) != *MEMORY[0x24BDEEDE8])
  {
    v50 = sub_2414B460C();
    goto LABEL_11;
  }
  if (qword_2571207C8 != -1)
    swift_once();
  v51 = qword_257136EB0;
  swift_retain();
LABEL_12:
  v53 = v82;
  v52 = v83;
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v14, v12, v83);
  *(_QWORD *)&v14[*(int *)(v79 + 36)] = v51;
  (*(void (**)(char *, uint64_t))(v53 + 8))(v12, v52);
  v54 = sub_2414B3C4C();
  v55 = (unsigned int *)MEMORY[0x24BDF50A0];
  v57 = v89;
  v56 = v90;
  if ((v54 & 1) == 0)
    v55 = (unsigned int *)MEMORY[0x24BDF50D0];
  v58 = v91;
  (*(void (**)(char *, _QWORD, uint64_t))(v90 + 104))(v89, *v55, v91);
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(&v16[*(int *)(v81 + 36)], v57, v58);
  sub_2412DC3FC((uint64_t)v14, (uint64_t)v16, &qword_257128ED0);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v58);
  sub_2412CBE78((uint64_t)v14, &qword_257128ED0);
  KeyPath = swift_getKeyPath();
  v60 = sub_2414B3C70();
  v61 = *(_QWORD *)(v60 - 8);
  v62 = (uint64_t)v93;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v93, v37, v60);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v61 + 56))(v62, 0, 1, v60);
  v63 = (uint64_t)v86;
  v64 = (uint64_t *)&v86[*(int *)(v84 + 36)];
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_257128EE8);
  sub_2412DC3FC(v62, (uint64_t)v64 + *(int *)(v65 + 28), qword_257128CF8);
  *v64 = KeyPath;
  sub_2412DC3FC((uint64_t)v16, v63, &qword_257128ED8);
  sub_2412CBE78(v62, qword_257128CF8);
  sub_2412CBE78((uint64_t)v16, &qword_257128ED8);
  v66 = v63;
  v67 = v88;
  sub_2412EAEA4(v66, v88, &qword_257128EE0);
  v68 = (uint64_t)v85;
  v69 = v87;
  sub_2412DC3FC((uint64_t)v85, v87, &qword_254383E98);
  v70 = v92;
  sub_2412DC3FC(v67, v92, &qword_257128EE0);
  v71 = v94;
  sub_2412DC3FC(v69, v94, &qword_254383E98);
  v72 = __swift_instantiateConcreteTypeFromMangledName(qword_257128EF0);
  sub_2412DC3FC(v70, v71 + *(int *)(v72 + 48), &qword_257128EE0);
  sub_2412CBE78(v67, &qword_257128EE0);
  sub_2412CBE78(v68, &qword_254383E98);
  sub_2412CBE78(v70, &qword_257128EE0);
  return sub_2412CBE78(v69, &qword_254383E98);
}

uint64_t MCUINamespace<A>.hostedContentToggleConfiguration.getter()
{
  sub_24143B9E4();
  return sub_2414B3838();
}

unint64_t sub_24143B9E4()
{
  unint64_t result;

  result = qword_257128CF0;
  if (!qword_257128CF0)
  {
    result = MEMORY[0x242695AE8](&unk_2414C7674, &type metadata for HostedContentToggleConfigurationKey);
    atomic_store(result, (unint64_t *)&qword_257128CF0);
  }
  return result;
}

uint64_t sub_24143BA28()
{
  sub_24143B9E4();
  return sub_2414B3838();
}

uint64_t sub_24143BA64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_257128CF8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - v6;
  sub_2412DC3FC(a1, (uint64_t)&v9 - v6, qword_257128CF8);
  sub_2412DC3FC((uint64_t)v7, (uint64_t)v4, qword_257128CF8);
  sub_24143B9E4();
  sub_2414B3844();
  return sub_2412CBE78((uint64_t)v7, qword_257128CF8);
}

uint64_t MCUINamespace<A>.hostedContentToggleConfiguration.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_257128CF8);
  MEMORY[0x24BDAC7A8](v2);
  sub_2412DC3FC(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), qword_257128CF8);
  sub_24143B9E4();
  sub_2414B3844();
  return sub_2412CBE78(a1, qword_257128CF8);
}

uint64_t sub_24143BBD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v5 = v3;
  v29 = a1;
  v35 = a3;
  v7 = sub_2414B3AF0();
  v8 = *(_QWORD *)(v7 - 8);
  v33 = v7;
  v34 = v8;
  MEMORY[0x24BDAC7A8](v7);
  v31 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a2 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v13 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2414B3C70();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](v14);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_257128C98);
  v32 = *(_QWORD *)(v30 - 8);
  v17 = MEMORY[0x24BDAC7A8](v30);
  v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16))((char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v14, v17);
  v20 = v5;
  sub_2412C6A50(v5, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for NowPlayingHostedContentToggleButtonStyle);
  v21 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v22 = (v16 + *(unsigned __int8 *)(v10 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v23 + v21, (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v14);
  sub_24143AE54((uint64_t)v13, v23 + v22);
  v36 = v29;
  v37 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257128CA0);
  sub_24143B154();
  sub_2414B47D4();
  v24 = v31;
  sub_2414B3AE4();
  sub_2412C8FC4(&qword_257128CE0, &qword_257128C98, MEMORY[0x24BDF43B0]);
  sub_2412C8030(&qword_257128CE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEF8D0], MEMORY[0x24BDEF8B0]);
  v25 = v30;
  v26 = v33;
  sub_2414B4198();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v24, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v19, v25);
}

uint64_t sub_24143BE68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(qword_257128CF8);
  __swift_allocate_value_buffer(v0, qword_257128C80);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_257128C80);
  v2 = sub_2414B3C70();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t sub_24143BED0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_257120A30 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_257128CF8);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_257128C80);
  return sub_2412DC3FC(v3, a1, qword_257128CF8);
}

void (*MCUINamespace<A>.hostedContentToggleConfiguration.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_257128CF8) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v3[4] = sub_24143B9E4();
  sub_2414B3838();
  return sub_24143BFDC;
}

void sub_24143BFDC(uint64_t **a1, char a2)
{
  uint64_t *v3;
  void *v4;
  void *v5;
  void *v6;

  v3 = *a1;
  sub_2412DC3FC((*a1)[3], (*a1)[2], qword_257128CF8);
  v4 = (void *)v3[3];
  v5 = (void *)v3[1];
  v6 = (void *)v3[2];
  if ((a2 & 1) != 0)
  {
    sub_2412DC3FC(v3[2], v3[1], qword_257128CF8);
    sub_2414B3844();
    sub_2412CBE78((uint64_t)v6, qword_257128CF8);
  }
  else
  {
    sub_2414B3844();
  }
  sub_2412CBE78((uint64_t)v4, qword_257128CF8);
  free(v4);
  free(v6);
  free(v5);
  free(v3);
}

uint64_t sub_24143C0B8()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_24143C0DC(unsigned __int8 *a1, uint64_t (*a2)(_QWORD))
{
  return a2(*a1);
}

uint64_t sub_24143C100()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24143C124(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t EnvironmentValues.hostedContentToggleConfiguration.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2414B382C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v3, v0, v4);
  sub_24143B9E4();
  sub_2414B3838();
  return sub_2412CBE78((uint64_t)v3, qword_25437D4A0);
}

uint64_t sub_24143C1F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2414B382C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v4, a1, v5);
  sub_24143B9E4();
  sub_2414B3838();
  return sub_2412CBE78((uint64_t)v4, qword_25437D4A0);
}

uint64_t sub_24143C2AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_257128CF8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v19 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v19 - v14;
  sub_2412DC3FC(a1, (uint64_t)&v19 - v14, qword_257128CF8);
  sub_2412DC3FC((uint64_t)v15, (uint64_t)v12, qword_257128CF8);
  v16 = sub_2414B382C();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v6, a2, v16);
  sub_2412DC3FC((uint64_t)v12, (uint64_t)v9, qword_257128CF8);
  sub_24143B9E4();
  sub_2414B3844();
  sub_2412CBE78((uint64_t)v12, qword_257128CF8);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a2, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a2, v6, v16);
  return sub_2412CBE78((uint64_t)v15, qword_257128CF8);
}

uint64_t EnvironmentValues.hostedContentToggleConfiguration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_257128CF8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v16 - v11;
  sub_2412DC3FC(a1, (uint64_t)&v16 - v11, qword_257128CF8);
  v13 = sub_2414B382C();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v6, v2, v13);
  sub_2412DC3FC((uint64_t)v12, (uint64_t)v9, qword_257128CF8);
  sub_24143B9E4();
  sub_2414B3844();
  sub_2412CBE78((uint64_t)v12, qword_257128CF8);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v2, v13);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v2, v6, v13);
  return sub_2412CBE78(a1, qword_257128CF8);
}

void (*EnvironmentValues.hostedContentToggleConfiguration.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  size_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void *, uint64_t, uint64_t);

  v3 = malloc(0x50uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_25437D4A0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_257128CF8) - 8) + 64);
  v3[2] = malloc(v6);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  v3[5] = malloc(v6);
  v7 = sub_2414B382C();
  v3[6] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(void *, uint64_t, uint64_t))(v8 + 16);
  v3[7] = v8;
  v3[8] = v9;
  v9(v5, v1, v7);
  v3[9] = sub_24143B9E4();
  sub_2414B3838();
  sub_2412CBE78((uint64_t)v5, qword_25437D4A0);
  return sub_24143C6B8;
}

void sub_24143C6B8(uint64_t **a1, char a2)
{
  uint64_t *v3;
  void (*v4)(void *, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;

  v3 = *a1;
  sub_2412DC3FC((*a1)[5], (*a1)[4], qword_257128CF8);
  v4 = (void (*)(void *, uint64_t, uint64_t))v3[8];
  v6 = v3[6];
  v5 = v3[7];
  v7 = (void *)v3[4];
  v12 = (void *)v3[5];
  v9 = (void *)v3[2];
  v8 = (void *)v3[3];
  v11 = *v3;
  v10 = (void *)v3[1];
  if ((a2 & 1) != 0)
  {
    sub_2412DC3FC((uint64_t)v7, v3[3], qword_257128CF8);
    v4(v10, v11, v6);
    sub_2412DC3FC((uint64_t)v8, (uint64_t)v9, qword_257128CF8);
    sub_2414B3844();
    sub_2412CBE78((uint64_t)v8, qword_257128CF8);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v11, v6);
    (*(void (**)(uint64_t, void *, uint64_t))(v5 + 32))(v11, v10, v6);
    sub_2412CBE78((uint64_t)v7, qword_257128CF8);
  }
  else
  {
    v4((void *)v3[1], *v3, v6);
    sub_2412DC3FC((uint64_t)v7, (uint64_t)v8, qword_257128CF8);
    sub_2414B3844();
    sub_2412CBE78((uint64_t)v7, qword_257128CF8);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v11, v6);
    (*(void (**)(uint64_t, void *, uint64_t))(v5 + 32))(v11, v10, v6);
  }
  sub_2412CBE78((uint64_t)v12, qword_257128CF8);
  free(v12);
  free(v7);
  free(v8);
  free(v9);
  free(v10);
  free(v3);
}

uint64_t sub_24143C86C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_2414B2B30();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

_OWORD *sub_24143C904(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_2412D8D3C(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_24143C968(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_2414B2A88();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_24143CA00(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = sub_2414B2A88();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3, v8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

uint64_t sub_24143CA8C(char a1, double a2, double a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v4 = v3;
  v8 = *v3;
  v10 = sub_2413D751C(a3);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a1 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a1 & 1) == 0)
  {
    result = (uint64_t)sub_24140A3E8();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(double *)(v16[7] + 8 * v10) = a2;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v18 = 8 * v10;
    *(double *)(v16[6] + v18) = a3;
    *(double *)(v16[7] + v18) = a2;
    v19 = v16[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_241407DEC(result, a1 & 1);
  result = sub_2413D751C(a3);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_2414B583C();
  __break(1u);
  return result;
}

uint64_t sub_24143CBB8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v5 = v4;
  v10 = *v4;
  v12 = sub_2412CD2DC(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_24140A7A4();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v18[7] + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v20 = (uint64_t *)(v18[6] + 16 * v12);
    *v20 = a2;
    v20[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v21 = v18[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_24140842C(result, a4 & 1);
  result = sub_2412CD2DC(a2, a3);
  if ((v16 & 1) == (v19 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_2414B583C();
  __break(1u);
  return result;
}

uint64_t sub_24143CD08(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_24143CFAC(a1, a2, a3, a4, (void (*)(void))sub_24140A950, (void (*)(void))sub_241408734);
}

_OWORD *sub_24143CD1C(_OWORD *a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _OWORD *v16;
  _OWORD *result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_2413D761C((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = (_OWORD *)(v15[7] + 32 * v9);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
        return sub_2412D8D3C(a1, v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_24140A95C();
      goto LABEL_7;
    }
    sub_241408740(v12, a3 & 1);
    v18 = sub_2413D761C((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_24143C904(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  type metadata accessor for Key(0);
  result = (_OWORD *)sub_2414B583C();
  __break(1u);
  return result;
}

uint64_t sub_24143CE3C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_2414B2A88();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_2413D7550(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_release();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_24140ACD8();
    goto LABEL_7;
  }
  sub_241408D94(v17, a3 & 1);
  v23 = sub_2413D7550(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    result = sub_2414B583C();
    __break(1u);
    return result;
  }
  v14 = v23;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_24143C968(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_24143CF98(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_24143CFAC(a1, a2, a3, a4, (void (*)(void))sub_24140AB20, (void (*)(void))sub_241408A78);
}

uint64_t sub_24143CFAC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void))
{
  _QWORD *v6;
  _QWORD *v9;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t result;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;

  v9 = v6;
  v14 = *v6;
  v16 = sub_2412CD2DC(a2, a3);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v20 = v15;
  v21 = *(_QWORD *)(v14 + 24);
  if (v21 >= v19 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v21 >= v19 && (a4 & 1) == 0)
  {
    a5();
LABEL_7:
    v22 = (_QWORD *)*v9;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = v22[7];
      result = swift_release();
      *(_QWORD *)(v23 + 8 * v16) = a1;
      return result;
    }
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    v27 = (uint64_t *)(v22[6] + 16 * v16);
    *v27 = a2;
    v27[1] = a3;
    *(_QWORD *)(v22[7] + 8 * v16) = a1;
    v28 = v22[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (!v29)
    {
      v22[2] = v30;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  a6();
  v25 = sub_2412CD2DC(a2, a3);
  if ((v20 & 1) == (v26 & 1))
  {
    v16 = v25;
    v22 = (_QWORD *)*v9;
    if ((v20 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_2414B583C();
  __break(1u);
  return result;
}

uint64_t sub_24143D11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t result;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  _QWORD *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;

  v8 = v7;
  v15 = *v7;
  v17 = sub_2412CD2DC(a5, a6);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v21 = v16;
  v22 = *(_QWORD *)(v15 + 24);
  if (v22 >= v20 && (a7 & 1) != 0)
    goto LABEL_7;
  if (v22 >= v20 && (a7 & 1) == 0)
  {
    sub_24140AF08();
LABEL_7:
    v23 = (_QWORD *)*v8;
    if ((v21 & 1) != 0)
    {
LABEL_8:
      v24 = (_QWORD *)(v23[7] + 32 * v17);
      result = swift_bridgeObjectRelease();
      *v24 = a1;
      v24[1] = a2;
      v24[2] = a3;
      v24[3] = a4;
      return result;
    }
LABEL_11:
    v23[(v17 >> 6) + 8] |= 1 << v17;
    v28 = (uint64_t *)(v23[6] + 16 * v17);
    *v28 = a5;
    v28[1] = a6;
    v29 = (_QWORD *)(v23[7] + 32 * v17);
    *v29 = a1;
    v29[1] = a2;
    v29[2] = a3;
    v29[3] = a4;
    v30 = v23[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (!v31)
    {
      v23[2] = v32;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_241409128(v20, a7 & 1);
  v26 = sub_2412CD2DC(a5, a6);
  if ((v21 & 1) == (v27 & 1))
  {
    v17 = v26;
    v23 = (_QWORD *)*v8;
    if ((v21 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_2414B583C();
  __break(1u);
  return result;
}

uint64_t sub_24143D2B0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_2413D7758(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = sub_2414B2A88();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, a1, v18);
      }
      return sub_24143CA00(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_24140B744();
      goto LABEL_7;
    }
    sub_241409704(v13, a3 & 1);
    v20 = sub_2413D7758(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_24143CA00(v10, a2, a1, v16);
    }
  }
  result = sub_2414B583C();
  __break(1u);
  return result;
}

uint64_t sub_24143D3D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24143D408()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24143D418()
{
  return 16;
}

__n128 sub_24143D424(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24143D430()
{
  sub_24143B9E4();
  return sub_2414B3838();
}

uint64_t sub_24143D470()
{
  return 0;
}

uint64_t sub_24143D488()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = sub_2414B2BB4();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for NowPlayingHostedContentToggleButton()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NowPlayingHostedContentToggleButton.isEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of NowPlayingHostedContentToggleButton.isEnabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of NowPlayingHostedContentToggleButton.isEnabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of NowPlayingHostedContentToggleButton.__allocating_init(_:presenting:label:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of NowPlayingHostedContentToggleButton.content.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t *initializeBufferWithCopyOfBuffer for NowPlayingHostedContentToggleButtonStyle(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_2414B3934();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v13 = *(int *)(a3 + 24);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = *(_QWORD *)v15;
    LOBYTE(v15) = v15[8];
    *(_QWORD *)v14 = v16;
    v14[8] = (char)v15;
  }
  swift_retain();
  return a1;
}

uint64_t destroy for NowPlayingHostedContentToggleButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2414B3934();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  return swift_release();
}

_QWORD *initializeWithCopy for NowPlayingHostedContentToggleButtonStyle(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2414B3934();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)v13;
  LOBYTE(v13) = v13[8];
  *(_QWORD *)v12 = v14;
  v12[8] = (char)v13;
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for NowPlayingHostedContentToggleButtonStyle(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_2412CBE78((uint64_t)a1 + v6, &qword_25437DAA0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2414B3934();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = *(_QWORD *)v12;
  LOBYTE(v12) = v12[8];
  *(_QWORD *)v11 = v13;
  v11[8] = (char)v12;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for NowPlayingHostedContentToggleButtonStyle(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2414B3934();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  return a1;
}

_QWORD *assignWithTake for NowPlayingHostedContentToggleButtonStyle(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_2412CBE78((uint64_t)a1 + v7, &qword_25437DAA0);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_2414B3934();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(_QWORD *)v14;
  LOBYTE(v14) = v14[8];
  *(_QWORD *)v13 = v15;
  v13[8] = (char)v14;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NowPlayingHostedContentToggleButtonStyle()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24143DABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571226F0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for NowPlayingHostedContentToggleButtonStyle()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24143DB48(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571226F0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_24143DBC0()
{
  unint64_t v0;

  sub_24133ACB8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_24143DC3C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for ToggleButton(255, *a1, a1[1], a4);
  JUMPOUT(0x242695AE8);
}

uint64_t type metadata accessor for ToggleButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ToggleButton);
}

uint64_t sub_24143DC70()
{
  uint64_t (*v0)(uint64_t);

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257128C98);
  sub_2414B3AF0();
  v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEF8D0];
  sub_2412C8FC4(&qword_257128CE0, &qword_257128C98, MEMORY[0x24BDF43B0]);
  sub_2412C8030(&qword_257128CE8, v0, MEMORY[0x24BDEF8B0]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24143DD10()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24143DDA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void (*v24)(unint64_t, uint64_t, uint64_t);
  uint64_t v26;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || v7 + ((v6 + 104) & (unint64_t)~v6) + 1 > 0x18)
  {
    v10 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16));
    swift_retain();
  }
  else
  {
    v26 = *(_QWORD *)(a3 + 16);
    v11 = *(_QWORD *)a2;
    v12 = *(_QWORD *)(a2 + 8);
    v13 = *(_QWORD *)(a2 + 16);
    v14 = *(_QWORD *)(a2 + 24);
    v15 = *(_BYTE *)(a2 + 32);
    sub_2412C72F4(*(_QWORD *)a2, v12, v13, v14, v15);
    *(_QWORD *)a1 = v11;
    *(_QWORD *)(a1 + 8) = v12;
    *(_QWORD *)(a1 + 16) = v13;
    *(_QWORD *)(a1 + 24) = v14;
    *(_BYTE *)(a1 + 32) = v15;
    v16 = a1 & 0xFFFFFFFFFFFFFFF8;
    v17 = a2 & 0xFFFFFFFFFFFFFFF8;
    v18 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 40);
    v19 = *(_QWORD *)(v17 + 48);
    LOBYTE(v12) = *(_BYTE *)(v17 + 56);
    sub_2412C72E4(v18, v19, v12);
    *(_QWORD *)(v16 + 40) = v18;
    *(_QWORD *)(v16 + 48) = v19;
    *(_BYTE *)(v16 + 56) = v12;
    v20 = *(_QWORD *)(v17 + 64);
    v21 = *(_QWORD *)(v17 + 72);
    LOBYTE(v12) = *(_BYTE *)(v17 + 80);
    sub_2412EE9B0();
    *(_QWORD *)(v16 + 64) = v20;
    *(_QWORD *)(v16 + 72) = v21;
    *(_BYTE *)(v16 + 80) = v12;
    *(_QWORD *)(v16 + 88) = *(_QWORD *)(v17 + 88);
    *(_QWORD *)(v16 + 96) = *(_QWORD *)(v17 + 96);
    v22 = ((a1 & 0xFFFFFFFFFFFFFFF8) + v6 + 104) & ~v6;
    v23 = (v17 + v6 + 104) & ~v6;
    v24 = *(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v24(v22, v23, v26);
    *(_BYTE *)(v22 + v7) = *(_BYTE *)(v23 + v7);
  }
  return a1;
}

uint64_t sub_24143DF18(uint64_t *a1, uint64_t a2)
{
  unint64_t v3;

  v3 = (unint64_t)a1;
  sub_2412C68A4(*a1, *(_QWORD *)(v3 + 8), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_BYTE *)(v3 + 32));
  v3 &= 0xFFFFFFFFFFFFFFF8;
  sub_2412C822C(*(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_BYTE *)(v3 + 56));
  sub_2412EEDAC();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((v3 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_24143DF8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void (*v22)(unint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_BYTE *)(a2 + 32);
  sub_2412C72F4(*(_QWORD *)a2, v7, v8, v9, v10);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 32) = v10;
  v11 = a1 & 0xFFFFFFFFFFFFFFF8;
  v12 = a2 & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 40);
  v14 = *(_QWORD *)(v12 + 48);
  LOBYTE(v7) = *(_BYTE *)(v12 + 56);
  sub_2412C72E4(v13, v14, v7);
  *(_QWORD *)(v11 + 40) = v13;
  *(_QWORD *)(v11 + 48) = v14;
  *(_BYTE *)(v11 + 56) = v7;
  v15 = *(_QWORD *)(v12 + 64);
  v16 = *(_QWORD *)(v12 + 72);
  LOBYTE(v7) = *(_BYTE *)(v12 + 80);
  sub_2412EE9B0();
  *(_QWORD *)(v11 + 64) = v15;
  *(_QWORD *)(v11 + 72) = v16;
  *(_BYTE *)(v11 + 80) = v7;
  *(_QWORD *)(v11 + 88) = *(_QWORD *)(v12 + 88);
  *(_QWORD *)(v11 + 96) = *(_QWORD *)(v12 + 96);
  v17 = *(_QWORD *)(a3 + 16);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v19 + 104 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v19;
  v21 = (v19 + 104 + v12) & ~v19;
  v22 = *(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 16);
  swift_bridgeObjectRetain();
  v22(v20, v21, v17);
  *(_BYTE *)(v20 + *(_QWORD *)(v18 + 64)) = *(_BYTE *)(v21 + *(_QWORD *)(v18 + 64));
  return a1;
}

uint64_t sub_24143E098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_BYTE *)(a2 + 32);
  sub_2412C72F4(*(_QWORD *)a2, v7, v8, v9, v10);
  v11 = *(_QWORD *)a1;
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 32) = v10;
  sub_2412C68A4(v11, v12, v13, v14, v15);
  v16 = a1 & 0xFFFFFFFFFFFFFFF8;
  v17 = a2 & 0xFFFFFFFFFFFFFFF8;
  v18 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 40);
  v19 = *(_QWORD *)(v17 + 48);
  LOBYTE(v7) = *(_BYTE *)(v17 + 56);
  sub_2412C72E4(v18, v19, v7);
  v20 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 40);
  v21 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 48);
  v22 = *(_BYTE *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56);
  *(_QWORD *)(v16 + 40) = v18;
  *(_QWORD *)(v16 + 48) = v19;
  *(_BYTE *)(v16 + 56) = v7;
  sub_2412C822C(v20, v21, v22);
  v23 = *(_QWORD *)(v17 + 64);
  v24 = *(_QWORD *)(v17 + 72);
  LOBYTE(v7) = *(_BYTE *)(v17 + 80);
  sub_2412EE9B0();
  *(_QWORD *)(v16 + 64) = v23;
  *(_QWORD *)(v16 + 72) = v24;
  *(_BYTE *)(v16 + 80) = v7;
  sub_2412EEDAC();
  *(_QWORD *)(v16 + 88) = *(_QWORD *)(v17 + 88);
  *(_QWORD *)(v16 + 96) = *(_QWORD *)(v17 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v27 = (v26 + 104 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v26;
  v28 = (v26 + 104 + v17) & ~v26;
  (*(void (**)(unint64_t, uint64_t))(v25 + 24))(v27, v28);
  *(_BYTE *)(v27 + *(_QWORD *)(v25 + 64)) = *(_BYTE *)(v28 + *(_QWORD *)(v25 + 64));
  return a1;
}

uint64_t sub_24143E1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  unint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 40);
  *(_BYTE *)(v5 + 56) = *(_BYTE *)((a2 & 0xFFFFFFFFFFFFFFF8) + 56);
  *(_OWORD *)(v5 + 40) = v6;
  v7 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 64);
  *(_BYTE *)(v5 + 80) = *(_BYTE *)((a2 & 0xFFFFFFFFFFFFFFF8) + 80);
  *(_OWORD *)(v5 + 64) = v7;
  *(_OWORD *)(v5 + 88) = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 88);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 + 104 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v9;
  v11 = (v9 + 104 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~v9;
  (*(void (**)(unint64_t, unint64_t))(v8 + 32))(v10, v11);
  *(_BYTE *)(v10 + *(_QWORD *)(v8 + 64)) = *(_BYTE *)(v11 + *(_QWORD *)(v8 + 64));
  return a1;
}

uint64_t sub_24143E278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v4 = a2;
  v6 = *(_BYTE *)(a2 + 32);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_BYTE *)(a1 + 32);
  v12 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v4;
  *(_OWORD *)(a1 + 16) = v12;
  *(_BYTE *)(a1 + 32) = v6;
  sub_2412C68A4(v7, v8, v9, v10, v11);
  v13 = a1 & 0xFFFFFFFFFFFFFFF8;
  v4 &= 0xFFFFFFFFFFFFFFF8;
  v14 = *(_BYTE *)(v4 + 56);
  v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 40);
  v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 48);
  v17 = *(_BYTE *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56);
  *(_OWORD *)(v13 + 40) = *(_OWORD *)(v4 + 40);
  *(_BYTE *)(v13 + 56) = v14;
  sub_2412C822C(v15, v16, v17);
  v18 = *(_BYTE *)(v4 + 80);
  *(_OWORD *)(v13 + 64) = *(_OWORD *)(v4 + 64);
  *(_BYTE *)(v13 + 80) = v18;
  sub_2412EEDAC();
  *(_QWORD *)(v13 + 88) = *(_QWORD *)(v4 + 88);
  *(_QWORD *)(v13 + 96) = *(_QWORD *)(v4 + 96);
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = (v20 + 104 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v20;
  v22 = (v20 + 104 + v4) & ~v20;
  (*(void (**)(unint64_t, uint64_t))(v19 + 40))(v21, v22);
  *(_BYTE *)(v21 + *(_QWORD *)(v19 + 64)) = *(_BYTE *)(v22 + *(_QWORD *)(v19 + 64));
  return a1;
}

uint64_t sub_24143E368(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unint64_t v15;
  unint64_t v16;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = *(_QWORD *)(v4 + 64) + ((v7 + 104) & ~v7) + 1;
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      v15 = a1 & 0xFFFFFFFFFFFFFFF8;
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((v15 + v7 + 104) & ~v7);
      v16 = *(_QWORD *)(v15 + 96);
      if (v16 >= 0xFFFFFFFF)
        LODWORD(v16) = -1;
      return (v16 + 1);
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_24143E440 + 4 * byte_2414C73F0[(v9 - 1)]))();
}

void sub_24143E4B4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64)
     + ((*(unsigned __int8 *)(v5 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + 1;
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if (*(_DWORD *)(v5 + 64) + ((*(unsigned __int8 *)(v5 + 80) + 104) & ~*(unsigned __int8 *)(v5 + 80)) != -1)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

ValueMetadata *type metadata accessor for HostedContentToggleConfigurationKey()
{
  return &type metadata for HostedContentToggleConfigurationKey;
}

uint64_t sub_24143E6C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24143E6FC@<X0>(uint64_t a1@<X3>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ToggleButton(0, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), a1)- 8)+ 80);
  return sub_24143A338(v2 + ((v4 + 48) & ~v4), a2);
}

uint64_t objectdestroy_15Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(v4 + 32);
  v6 = type metadata accessor for ToggleButton(0, v5, *(_QWORD *)(v4 + 40), a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = (v7 + 48) & ~v7;
  swift_unknownObjectRelease();
  v9 = v4 + v8;
  sub_2412C68A4(*(_QWORD *)v9, *(_QWORD *)(v9 + 8), *(_QWORD *)(v9 + 16), *(_QWORD *)(v9 + 24), *(_BYTE *)(v9 + 32));
  sub_2412C822C(*(_QWORD *)(v9 + 40), *(_QWORD *)(v9 + 48), *(_BYTE *)(v9 + 56));
  sub_2412EEDAC();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v9 + *(int *)(v6 + 48), v5);
  return swift_deallocObject();
}

uint64_t sub_24143E814(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = v4[4];
  v7 = v4[5];
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ToggleButton(0, v6, v7, a4) - 8) + 80);
  return sub_24143A408(a1, v4[2], v4[3], (uint64_t)v4 + ((v8 + 48) & ~v8), v6, v7);
}

uint64_t sub_24143E870@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24143A708(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_24143E880()
{
  unint64_t result;

  result = qword_2543841D8;
  if (!qword_2543841D8)
  {
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF52B0], MEMORY[0x24BDF52C0]);
    atomic_store(result, (unint64_t *)&qword_2543841D8);
  }
  return result;
}

uint64_t objectdestroy_23Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for ToggleButton(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = v4 + ((v7 + 32) & ~v7);
  sub_2412C68A4(*(_QWORD *)v8, *(_QWORD *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_BYTE *)(v8 + 32));
  sub_2412C822C(*(_QWORD *)(v8 + 40), *(_QWORD *)(v8 + 48), *(_BYTE *)(v8 + 56));
  sub_2412EEDAC();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v8 + *(int *)(v6 + 48), v5);
  return swift_deallocObject();
}

void sub_24143E980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v5 = type metadata accessor for ToggleButton(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  sub_24143A7B4(v5);
}

uint64_t sub_24143E9C0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(sub_2414B3C70() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NowPlayingHostedContentToggleButtonStyle() - 8) + 80);
  return sub_24143AD88(v0 + v2, (_QWORD *)(v0 + ((v2 + v3 + v4) & ~v4)));
}

uint64_t sub_24143EA40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];
  _QWORD v18[2];
  _QWORD v19[2];
  _QWORD v20[2];
  _QWORD v21[2];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v0 = sub_2414B487C();
  v1 = type metadata accessor for NowPlayingHostedContentToggleButtonStyle();
  v2 = MEMORY[0x242695AE8](MEMORY[0x24BDF46D0], v0);
  v3 = sub_2412C8030(&qword_257128EC0, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingHostedContentToggleButtonStyle, (uint64_t)&protocol conformance descriptor for NowPlayingHostedContentToggleButtonStyle);
  v23 = v0;
  v24 = v1;
  v25 = v2;
  v26 = v3;
  MEMORY[0x242695A94](255, &v23, MEMORY[0x24BDF2460], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254384090);
  v4 = sub_2414B3514();
  v5 = sub_2414B3A9C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEF428];
  v23 = v0;
  v24 = v1;
  v25 = v2;
  v26 = v3;
  v22[0] = swift_getOpaqueTypeConformance2();
  v22[1] = sub_2412C8FC4(&qword_254384088, &qword_254384090, MEMORY[0x24BDEFAD8]);
  v7 = MEMORY[0x24BDED308];
  v8 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v4, v22);
  v9 = sub_2412C8030(&qword_254382BA0, v6, MEMORY[0x24BDEF420]);
  v23 = v4;
  v24 = v5;
  v25 = v8;
  v26 = v9;
  MEMORY[0x242695A94](255, &v23, MEMORY[0x24BDF2380], 0);
  v10 = sub_2414B3514();
  sub_2414B3DB4();
  v11 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381390);
  v12 = sub_2414B3514();
  v13 = sub_2414B3514();
  v14 = sub_2414B3514();
  v23 = v4;
  v24 = v5;
  v25 = v8;
  v26 = v9;
  v21[0] = swift_getOpaqueTypeConformance2();
  v21[1] = sub_24130CB04();
  v20[0] = MEMORY[0x242695AE8](v7, v10, v21);
  v20[1] = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v19[0] = MEMORY[0x242695AE8](v7, v11, v20);
  v19[1] = sub_2412C8FC4(&qword_254381388, &qword_254381390, MEMORY[0x24BDF1248]);
  v18[0] = MEMORY[0x242695AE8](v7, v12, v19);
  v18[1] = MEMORY[0x24BDECC38];
  v17[0] = MEMORY[0x242695AE8](v7, v13, v18);
  v17[1] = MEMORY[0x24BDF0910];
  v15 = MEMORY[0x242695AE8](v7, v14, v17);
  v23 = v14;
  v24 = MEMORY[0x24BEE1328];
  v25 = v15;
  v26 = MEMORY[0x24BEE1340];
  return swift_getOpaqueTypeConformance2();
}

uint64_t NowPlayingController.transition(to:animated:)(unsigned __int8 *a1, char a2, uint64_t a3, uint64_t a4)
{
  int v7;
  uint64_t result;
  unsigned __int8 v9;

  v7 = *a1;
  result = NowPlayingController.playerStyle.getter(a3, a4);
  if (v7 != v9)
  {
    if (v7)
    {
      (*(void (**)(uint64_t, uint64_t))(a4 + 208))(a3, a4);
      swift_getKeyPath();
      swift_getKeyPath();
      sub_2414B2E48();
      return sub_24143F100(a2 & 1, a3, a4);
    }
    else
    {
      return sub_24143F100(a2 & 1 | 0xFFFFFF80, a3, a4);
    }
  }
  return result;
}

uint64_t sub_24143EE34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  char *v9;
  char v10;
  unsigned __int8 *v11;
  uint64_t v12;

  if (qword_2543809C0 != -1)
    swift_once();
  v4 = sub_2414B2CA4();
  __swift_project_value_buffer(v4, (uint64_t)qword_25438E7B8);
  swift_unknownObjectRetain_n();
  v5 = sub_2414B2C8C();
  v6 = sub_2414B51B8();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v7 = 67109120;
    v8 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 208);
    v8(a1, a2);
    swift_beginAccess();
    swift_unknownObjectRelease();
    swift_release();
    sub_2414B541C();
    swift_unknownObjectRelease();
    _os_log_impl(&dword_2412C1000, v5, v6, "NowPlayingController.togglePlayback() called, old value = %{BOOL}d", v7, 8u);
    MEMORY[0x242695BD8](v7, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
    v8 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 208);
  }
  v9 = (char *)(v8(a1, a2) + OBJC_IVAR____TtC11MediaCoreUI19NowPlayingViewModel_isPlaying);
  swift_beginAccess();
  v10 = *v9;
  *v9 ^= 1u;
  sub_2412DEA6C(v10);
  swift_release();
  v11 = (unsigned __int8 *)(v8(a1, a2) + OBJC_IVAR____TtC11MediaCoreUI19NowPlayingViewModel_isPlaying);
  swift_beginAccess();
  LODWORD(v11) = *v11;
  swift_release();
  v12 = 224;
  if ((_DWORD)v11)
    v12 = 216;
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + v12))(a1, a2);
}

uint64_t NowPlayingController.playerStyle.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 208))();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_24143F100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 208))(a2, a3);
  swift_retain();
  swift_release();
  sub_2414B2DAC();
  return swift_release();
}

uint64_t NowPlayingController.debugMenuItems.getter()
{
  return 1;
}

uint64_t NowPlayingController.isDebugEnabled.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)((*(uint64_t (**)(void))(a2 + 208))() + 128);
  swift_retain();
  swift_release();
  swift_beginAccess();
  v3 = *(unsigned __int8 *)(v2 + 16);
  swift_release();
  return v3;
}

uint64_t NowPlayingController.isDebugEnabled.setter(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;

  v4 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(a3 + 208))(a2, a3) + 128);
  swift_retain();
  swift_release();
  KeyPath = swift_getKeyPath();
  v6 = swift_getKeyPath();
  return sub_2412D82CC(a1, v4, KeyPath, v6, (uint64_t (*)(uint64_t))_s5DebugCMa, (unint64_t *)&qword_25437F060, (uint64_t)&unk_2414C3E98);
}

uint64_t (*NowPlayingController.isDebugEnabled.modify(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3;

  *(_QWORD *)(a1 + 8) = a3;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)a1 = a2;
  *(_BYTE *)(a1 + 24) = NowPlayingController.isDebugEnabled.getter(a2, a3) & 1;
  return sub_24143F2C0;
}

uint64_t sub_24143F2C0(uint64_t a1)
{
  return NowPlayingController.isDebugEnabled.setter(*(_BYTE *)(a1 + 24), *(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t sub_24143F2E8(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2412D82CC(a1, a2, a3, a4, (uint64_t (*)(uint64_t))_s18MiniPlayerMetadataCMa, &qword_25437EF28, (uint64_t)&unk_2414BA9A8);
}

uint64_t sub_24143F304(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2412D82CC(a1, a2, a3, a4, (uint64_t (*)(uint64_t))_s5QueueCMa, &qword_25437F1A8, (uint64_t)&unk_2414C2E08);
}

uint64_t sub_24143F320(uint64_t a1, uint64_t a2)
{
  void (*v4)(_QWORD *, _QWORD);
  _QWORD *v5;
  _QWORD v7[4];
  uint64_t v8;

  v7[0] = a2;
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  if (v8 == a1)
  {
    swift_release();
    swift_release();
  }
  else
  {
    _s5QueueCMa();
    sub_2412C8030(&qword_25437F1A8, (uint64_t (*)(uint64_t))_s5QueueCMa, (uint64_t)&unk_2414C2E08);
    sub_2414B2D94();
    sub_2414B2DE8();
    swift_release();
    v8 = a2;
    swift_retain();
    v4 = (void (*)(_QWORD *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
    *v5 = a1;
    v4(v7, 0);
    swift_release();
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_24143F444(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2412D82CC(a1, a2, a3, a4, (uint64_t (*)(uint64_t))_s6BannerCMa, (unint64_t *)&qword_254383BE0, (uint64_t)&unk_2414C6ED0);
}

uint64_t sub_24143F460(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2412D82CC(a1, a2, a3, a4, (uint64_t (*)(uint64_t))_s5DebugCMa, (unint64_t *)&qword_25437F060, (uint64_t)&unk_2414C3E98);
}

uint64_t keypath_get_11Tm@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

uint64_t sub_24143F4C0(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath();
  v5 = swift_getKeyPath();
  swift_retain();
  return sub_2412D82CC(v2, v3, KeyPath, v5, (uint64_t (*)(uint64_t))_s5DebugCMa, (unint64_t *)&qword_25437F060, (uint64_t)&unk_2414C3E98);
}

uint64_t sub_24143F53C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_24143F5BC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_2414B2E48();
}

uint64_t sub_24143F630@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_24143F6B0()
{
  sub_24147EA58();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_2414B2E48();
}

uint64_t sub_24143F730@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

uint64_t sub_24143F778@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = NowPlayingController.isDebugEnabled.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result & 1;
  return result;
}

uint64_t sub_24143F7B0(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return NowPlayingController.isDebugEnabled.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t sub_24143F7E0()
{
  return 16;
}

__n128 sub_24143F7EC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of NowPlayingController.viewModel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 208))();
}

uint64_t dispatch thunk of NowPlayingController.play()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 216))();
}

uint64_t dispatch thunk of NowPlayingController.stop()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 224))();
}

uint64_t dispatch thunk of NowPlayingController.performLeadingTransportAction(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 232))();
}

uint64_t dispatch thunk of NowPlayingController.performTrailingTransportAction(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 240))();
}

uint64_t dispatch thunk of NowPlayingController.performTimeControlAction(_:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 248))();
}

uint64_t dispatch thunk of NowPlayingController.primaryArtworkView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 256))();
}

uint64_t dispatch thunk of NowPlayingController.metadataArtworkView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 264))();
}

uint64_t dispatch thunk of NowPlayingController.metadataButtonAction()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 272))();
}

uint64_t dispatch thunk of NowPlayingController.contextMenuButton()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 280))();
}

uint64_t dispatch thunk of NowPlayingController.miniPlayerContextInteractionDelegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 288))();
}

uint64_t dispatch thunk of NowPlayingController.hostedContent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 296))();
}

uint64_t dispatch thunk of NowPlayingController.footerConfiguration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 304))();
}

uint64_t dispatch thunk of NowPlayingController.leadingAccessoryButton()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 312))();
}

uint64_t dispatch thunk of NowPlayingController.trailingAccessoryButton()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 320))();
}

uint64_t dispatch thunk of NowPlayingController.bannerView()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 328))();
}

uint64_t dispatch thunk of NowPlayingController.timeControlAccessoryView()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 336))();
}

uint64_t dispatch thunk of NowPlayingController.overlayView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 344))();
}

uint64_t dispatch thunk of NowPlayingController.debugMenuItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 352))();
}

uint64_t sub_24143F890()
{
  return MEMORY[0x24BDF5138];
}

uint64_t sub_24143F89C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437F040);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t NowPlayingViewModel.DurationSnapshot.init(elapsedDuration:duration:bufferedDuration:snapshotTime:rate:isLoading:)@<X0>(uint64_t result@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>)
{
  *(double *)a4 = a5;
  *(double *)(a4 + 8) = a6;
  *(_QWORD *)(a4 + 16) = result;
  *(_BYTE *)(a4 + 24) = a2 & 1;
  *(double *)(a4 + 32) = a7;
  *(double *)(a4 + 40) = a8;
  *(_BYTE *)(a4 + 48) = a3;
  return result;
}

uint64_t sub_24143F908@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_2414019D0();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

uint64_t sub_24143F954()
{
  sub_2414019D0();
  return sub_2414B3844();
}

void sub_24143F99C()
{
  __asm { BR              X11 }
}

uint64_t sub_24143FEE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  _OWORD v30[2];
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  unint64_t v37;
  unsigned __int8 v38;
  __int128 v39;
  __int128 v40;
  unint64_t v41;
  unsigned __int8 v42;
  __int128 v43;
  __int128 v44;
  unint64_t v45;
  unsigned __int8 v46;
  _QWORD v47[3];

  v34 = a4;
  v6 = _s21LegacyTimeControlViewVMa(0, a1, a2, a3);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v30 - v11;
  v14 = _s20FluidTimeControlViewVMa(255, a1, a2, v13);
  v15 = sub_2414B3A90();
  v33 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v30 - v16;
  *((_QWORD *)&v44 + 1) = &type metadata for Features;
  v45 = sub_2412FD4AC();
  v18 = swift_allocObject();
  *(_QWORD *)&v43 = v18;
  *(_QWORD *)(v18 + 16) = "MediaCoreUI";
  *(_QWORD *)(v18 + 24) = 11;
  *(_BYTE *)(v18 + 32) = 2;
  *(_QWORD *)(v18 + 40) = "FluidScrubber";
  *(_QWORD *)(v18 + 48) = 13;
  *(_BYTE *)(v18 + 56) = 2;
  v19 = sub_2414B2BCC();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
  if ((v19 & 1) != 0)
  {
    sub_2414402E0((uint64_t)&v39);
    v20 = v41;
    v21 = v42;
    v31 = v39;
    v32 = v40;
    v35 = v39;
    v36 = v40;
    v37 = v41;
    v38 = v42;
    MEMORY[0x242695AE8](&unk_2414C7D00, v14);
    sub_2412FBF34((uint64_t)&v35, v14, (uint64_t)&v43);
    swift_release();
    swift_unknownObjectRelease();
    sub_2412C8228(v20, v21);
    v22 = v45;
    v23 = v46;
    v31 = v43;
    v32 = v44;
    v35 = v43;
    v36 = v44;
    v37 = v45;
    v38 = v46;
    sub_2412EEA1C((uint64_t)&v35, v14, (uint64_t)&v39);
    v24 = v41;
    v25 = v42;
    v30[0] = v39;
    v30[1] = v40;
    v35 = v39;
    v36 = v40;
    v37 = v41;
    v38 = v42;
    MEMORY[0x242695AE8](&unk_2414C7D50, v6);
    sub_24132F340((uint64_t)&v35, v14);
    swift_release();
    swift_unknownObjectRelease();
    sub_2412C8228(v24, v25);
    swift_release();
    swift_unknownObjectRelease();
    sub_2412C8228(v22, v23);
  }
  else
  {
    sub_241440384(a1, a2, (uint64_t)v9);
    MEMORY[0x242695AE8](&unk_2414C7D50, v6);
    sub_2412FBF34((uint64_t)v9, v6, (uint64_t)v12);
    v26 = *(void (**)(char *, uint64_t))(v7 + 8);
    v26(v9, v6);
    sub_2412EEA1C((uint64_t)v12, v6, (uint64_t)v9);
    MEMORY[0x242695AE8](&unk_2414C7D00, v14);
    sub_2412F1584((uint64_t)v9, v14, v6);
    v26(v9, v6);
    v26(v12, v6);
  }
  v27 = MEMORY[0x242695AE8](&unk_2414C7D00, v14);
  v28 = MEMORY[0x242695AE8](&unk_2414C7D50, v6);
  v47[0] = v27;
  v47[1] = v28;
  MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v15, v47);
  sub_2412EEA1C((uint64_t)v17, v15, v34);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v17, v15);
}

uint64_t sub_2414402E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  _s11TimeControlCMa();
  sub_2412F0B40(&qword_25437EA10, 255, (uint64_t (*)(uint64_t))_s11TimeControlCMa, (uint64_t)&unk_2414C7AF4);
  v2 = sub_2414B3658();
  v4 = v3;
  v5 = sub_2414B3658();
  v7 = v6;
  result = swift_getKeyPath();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = result;
  *(_BYTE *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_241440384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  _BYTE v18[24];
  uint64_t v19;

  v6 = sub_2414B2B00();
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  _s11TimeControlCMa();
  sub_2412F0B40(&qword_25437EA10, 255, (uint64_t (*)(uint64_t))_s11TimeControlCMa, (uint64_t)&unk_2414C7AF4);
  *(_QWORD *)a3 = sub_2414B3658();
  *(_QWORD *)(a3 + 8) = v9;
  *(_QWORD *)(a3 + 16) = sub_2414B3658();
  *(_QWORD *)(a3 + 24) = v10;
  v18[15] = 0;
  sub_2414B4798();
  v11 = v19;
  *(_BYTE *)(a3 + 32) = v18[16];
  *(_QWORD *)(a3 + 40) = v11;
  *(_QWORD *)(a3 + 48) = sub_2414421B4();
  *(_BYTE *)(a3 + 56) = v12 & 1;
  *(_QWORD *)(a3 + 64) = v13;
  v15 = _s21LegacyTimeControlViewVMa(0, a1, a2, v14);
  sub_2414B2AB8();
  sub_241442200((uint64_t)v8);
  v16 = (uint64_t *)(a3 + *(int *)(v15 + 52));
  *v16 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2414404E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return sub_24143FEE8(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2, a3);
}

uint64_t sub_2414404F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t OpaqueTypeConformance2;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(uint64_t);
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(uint64_t, uint64_t);
  uint64_t result;
  _QWORD v91[2];
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __int128 *v111;
  uint64_t v112;
  char *v113;
  __int128 v114;
  char *v115;
  uint64_t v116;
  _QWORD v117[2];
  __int128 v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  __int128 v125;
  uint64_t v126;
  __int128 v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  __int128 v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  __int128 v138;
  uint64_t v139;
  _QWORD v140[2];
  _QWORD v141[2];
  _QWORD v142[2];
  __int128 v143;
  _BYTE v144[25];
  _BYTE v145[72];

  v103 = a2;
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122240);
  MEMORY[0x24BDAC7A8](v116);
  v115 = (char *)v91 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_254381838);
  v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257129000);
  v7 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)&v114 = v6;
  v112 = v7;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v11 = type metadata accessor for Scrubber(255, AssociatedTypeWitness, AssociatedConformanceWitness, v10);
  v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383BC8);
  v13 = MEMORY[0x242695AE8](&protocol conformance descriptor for Scrubber<A>, v11);
  v14 = sub_24144A108();
  *(_QWORD *)&v131 = v11;
  *((_QWORD *)&v131 + 1) = v12;
  v132 = v13;
  v133 = v14;
  v15 = MEMORY[0x242695A94](255, &v131, MEMORY[0x24BDF3908], 0);
  v16 = sub_2412C8FC4(qword_257129008, &qword_257129000, MEMORY[0x24BDB9AF8]);
  *(_QWORD *)&v131 = v11;
  *((_QWORD *)&v131 + 1) = v12;
  v132 = v13;
  v133 = v14;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)&v131 = v5;
  *((_QWORD *)&v131 + 1) = v15;
  v132 = v16;
  v133 = OpaqueTypeConformance2;
  v18 = sub_2414B35E0();
  v19 = sub_2412C8FC4(&qword_2571266A0, (uint64_t *)&unk_254381838, MEMORY[0x24BDB9CB0]);
  v20 = MEMORY[0x24BDEDA68];
  v21 = MEMORY[0x242695AE8](MEMORY[0x24BDEDA68], v18);
  *(_QWORD *)&v131 = v4;
  *((_QWORD *)&v131 + 1) = v18;
  v132 = v19;
  v133 = v21;
  v22 = sub_2414B35E0();
  v106 = MEMORY[0x242695AE8](v20, v22);
  v107 = v22;
  v24 = type metadata accessor for ScrubberReader(255, v22, v106, v23);
  v25 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383FB8);
  v26 = sub_2414B3514();
  sub_2414B3DB4();
  v27 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v28 = sub_2414B3514();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v113 = (char *)v91 - v31;
  v108 = v24;
  v105 = MEMORY[0x242695AE8](&protocol conformance descriptor for ScrubberReader<A>, v24, v30);
  v142[0] = v105;
  v142[1] = MEMORY[0x24BDECC38];
  v32 = MEMORY[0x24BDED308];
  v33 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v25, v142);
  v34 = sub_2412C8FC4(&qword_254383FB0, &qword_254383FB8, MEMORY[0x24BDEDC10]);
  v109 = v33;
  v141[0] = v33;
  v141[1] = v34;
  v35 = MEMORY[0x242695AE8](v32, v26, v141);
  v36 = sub_2412F0B40((unint64_t *)&qword_2543844B0, 255, v27, MEMORY[0x24BDF1078]);
  v110 = v35;
  v140[0] = v35;
  v140[1] = v36;
  v37 = MEMORY[0x242695AE8](v32, v28, v140);
  v38 = sub_2412C8FC4(&qword_257122248, &qword_257122240, MEMORY[0x24BEE30C8]);
  *(_QWORD *)&v131 = v28;
  *((_QWORD *)&v131 + 1) = v116;
  v132 = v37;
  v133 = v38;
  v39 = MEMORY[0x242695A94](0, &v131, MEMORY[0x24BDF2800], 0);
  v40 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)v91 - v41;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381330);
  v43 = sub_2414B3514();
  MEMORY[0x24BDAC7A8](v43);
  MEMORY[0x24BDAC7A8](v44);
  v49 = v111[1];
  v143 = *v111;
  *(_OWORD *)v144 = v49;
  *(_OWORD *)&v144[9] = *(__int128 *)((char *)v111 + 25);
  if ((_QWORD)v143)
  {
    v111 = (__int128 *)v26;
    v92 = v38;
    v93 = v42;
    v94 = v37;
    v95 = v40;
    v96 = v48;
    v97 = v39;
    v98 = (uint64_t)v91 - v46;
    v99 = v47;
    v100 = v45;
    v101 = v29;
    v102 = v28;
    v50 = *(_QWORD *)(v143 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_playbackPosition) + 24;
    v51 = v143;
    swift_beginAccess();
    sub_2412EAEA4(v50, (uint64_t)v145, &qword_254383BC8);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_2414B2E3C();
    v104 = v51;
    swift_release();
    swift_release();
    swift_release();
    v52 = v131;
    v53 = *(_QWORD *)(v131 + 16);
    if (v53)
    {
      v91[1] = v25;
      *(_QWORD *)&v131 = MEMORY[0x24BEE4AF8];
      sub_2413BEEC4(0, v53, 0);
      v54 = v131;
      v91[0] = v52;
      v55 = (uint64_t *)(v52 + 48);
      do
      {
        v57 = *(v55 - 2);
        v56 = *(v55 - 1);
        v58 = *v55;
        *(_QWORD *)&v131 = v54;
        v60 = *(_QWORD *)(v54 + 16);
        v59 = *(_QWORD *)(v54 + 24);
        swift_bridgeObjectRetain();
        if (v60 >= v59 >> 1)
        {
          sub_2413BEEC4(v59 > 1, v60 + 1, 1);
          v54 = v131;
        }
        *(_QWORD *)(v54 + 16) = v60 + 1;
        v61 = (_QWORD *)(v54 + 24 * v60);
        v61[4] = v57;
        v61[5] = v56;
        v61[6] = v58;
        v55 += 3;
        --v53;
      }
      while (v53);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v54 = MEMORY[0x24BEE4AF8];
    }
    v62 = swift_allocObject();
    v63 = v112;
    v64 = v114;
    *(_QWORD *)(v62 + 16) = v112;
    *(_QWORD *)(v62 + 24) = v64;
    sub_2412EAEA4((uint64_t)v145, v62 + 32, &qword_254383BC8);
    *(_QWORD *)(v62 + 88) = v54;
    v65 = *(_OWORD *)v144;
    *(_OWORD *)(v62 + 96) = v143;
    *(_OWORD *)(v62 + 112) = v65;
    *(_OWORD *)(v62 + 121) = *(_OWORD *)&v144[9];
    sub_24144A204((uint64_t)&v143);
    ScrubberReader.init(content:)((uint64_t)sub_24144A1F0, v62, &v131);
    v127 = v131;
    v128 = v132;
    v129 = v133;
    swift_beginAccess();
    sub_2414B44F8();
    swift_release();
    swift_release();
    v66 = swift_release();
    v127 = v118;
    v128 = v119;
    v129 = v120;
    v130 = v121;
    MEMORY[0x24BDAC7A8](v66);
    v91[-4] = v63;
    v91[-3] = v64;
    v91[-2] = &v143;
    sub_2414B4A44();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254384180);
    sub_24144B9D8((unint64_t *)&qword_254384188, &qword_254384180, MEMORY[0x24BDF1F80], MEMORY[0x24BDF5578]);
    sub_2414B4504();
    swift_release();
    swift_release();
    swift_release();
    v67 = v135;
    v68 = v136;
    v69 = v137;
    v118 = v131;
    v119 = v132;
    v120 = v133;
    v121 = v134;
    v122 = v135;
    v123 = v136;
    v124 = v137;
    v114 = v138;
    v125 = v138;
    v126 = v139;
    v70 = v113;
    sub_2412F6DCC();
    swift_release();
    swift_release();
    swift_release();
    sub_24144A260(v67, v68, v69, v114);
    v71 = *MEMORY[0x24BDECF38];
    v72 = sub_2414B346C();
    v73 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
    v74 = (uint64_t)v115;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 104))(v115, v71, v72);
    sub_2412F0B40(qword_257122270, 255, v73, MEMORY[0x24BDECF78]);
    if ((sub_2414B4CE4() & 1) != 0)
    {
      v76 = v93;
      v75 = v94;
      v77 = v70;
      v78 = v102;
      v79 = v116;
      v80 = v92;
      sub_2414B42B8();
      sub_2412CBE78(v74, &qword_257122240);
      (*(void (**)(char *, uint64_t))(v101 + 8))(v77, v78);
      swift_getKeyPath();
      v81 = *(_QWORD *)&v144[16];
      v82 = v144[24];
      sub_2412C6F44(*(_QWORD *)&v144[16], v144[24]);
      sub_241346358(v81, v82, &v131);
      sub_2412C8228(v81, v82);
      LOBYTE(v118) = (_BYTE)v131 != 0;
      *(_QWORD *)&v131 = v78;
      *((_QWORD *)&v131 + 1) = v79;
      v132 = v75;
      v133 = v80;
      v83 = swift_getOpaqueTypeConformance2();
      v85 = v96;
      v84 = v97;
      sub_2414B41C8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v76, v84);
      v86 = sub_2412C8FC4((unint64_t *)&qword_254381328, &qword_254381330, MEMORY[0x24BDF1028]);
      v117[0] = v83;
      v117[1] = v86;
      v87 = v100;
      MEMORY[0x242695AE8](MEMORY[0x24BDED308], v100, v117);
      v88 = v98;
      sub_2412FBF34(v85, v87, v98);
      v89 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
      v89(v85, v87);
      sub_2412EEA1C(v88, v87, v103);
      return ((uint64_t (*)(uint64_t, uint64_t))v89)(v88, v87);
    }
    __break(1u);
  }
  _s11TimeControlCMa();
  sub_2412F0B40(&qword_25437EA10, 255, (uint64_t (*)(uint64_t))_s11TimeControlCMa, (uint64_t)&unk_2414C7AF4);
  result = sub_2414B364C();
  __break(1u);
  return result;
}

uint64_t sub_241440F5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t OpaqueTypeConformance2;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t result;
  _OWORD *v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t AssociatedConformanceWitness;
  uint64_t AssociatedTypeWitness;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD v89[2];
  char v90;
  char v91[8];
  uint64_t v92;
  uint64_t v93;
  unsigned __int8 v94;
  char v95[8];
  double v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char v102;

  v80 = a3;
  v79 = a1;
  v88 = a7;
  sub_2412EAEA4(a2, (uint64_t)v91, &qword_254383BC8);
  v60 = v92;
  v58 = v93;
  v59 = v94;
  v69 = a6;
  v67 = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v12 = type metadata accessor for Scrubber(0, AssociatedTypeWitness, AssociatedConformanceWitness, v11);
  v82 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v71 = (uint64_t)&v58 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383BC8);
  v15 = MEMORY[0x242695AE8](&protocol conformance descriptor for Scrubber<A>, v12);
  v16 = sub_24144A108();
  v98 = v12;
  v99 = v14;
  v100 = v15;
  v101 = v16;
  v17 = MEMORY[0x242695A94](0, &v98, MEMORY[0x24BDF3908], 0);
  v86 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v85 = (char *)&v58 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257129000);
  v20 = sub_2412C8FC4(qword_257129008, &qword_257129000, MEMORY[0x24BDB9AF8]);
  v98 = v12;
  v99 = v14;
  v72 = v14;
  v68 = v15;
  v100 = v15;
  v101 = v16;
  v66 = v16;
  v21 = 1;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v78 = v19;
  v98 = v19;
  v99 = v17;
  v87 = v17;
  v75 = v20;
  v100 = v20;
  v101 = OpaqueTypeConformance2;
  v65 = OpaqueTypeConformance2;
  v23 = sub_2414B35E0();
  v83 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v81 = (char *)&v58 - v24;
  v25 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_254381838);
  v26 = sub_2412C8FC4(&qword_2571266A0, (uint64_t *)&unk_254381838, MEMORY[0x24BDB9CB0]);
  v27 = MEMORY[0x242695AE8](MEMORY[0x24BDEDA68], v23);
  v73 = v25;
  v98 = v25;
  v99 = v23;
  v84 = v23;
  v70 = v26;
  v100 = v26;
  v101 = v27;
  v64 = v27;
  v28 = sub_2414B35E0();
  v77 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v74 = (char *)&v58 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v76 = (uint64_t)&v58 - v31;
  v32 = a2;
  sub_2412EAEA4(a2, (uint64_t)&v98, &qword_254383BC8);
  if (v102 == 2)
  {
    v33 = 0;
    v34 = 0;
    v61 = 0;
  }
  else
  {
    v61 = v99;
    v21 = v58 & 1;
    v34 = v59 & 1;
    v33 = v60;
  }
  LOBYTE(v89[0]) = v34;
  v35 = v102 == 2;
  BYTE1(v89[0]) = v34;
  BYTE2(v89[0]) = v34;
  v89[1] = v33;
  v90 = v21;
  v36 = sub_2412EAEA4(v32, (uint64_t)v95, &qword_254383BC8);
  if (v97 == 2)
    v37 = 0.0;
  else
    v37 = v96;
  MEMORY[0x24BDAC7A8](v36);
  v38 = v67;
  v39 = v69;
  *(&v58 - 4) = v67;
  *(&v58 - 3) = v39;
  v57 = a4;
  v40 = swift_allocObject();
  *(_QWORD *)(v40 + 16) = v38;
  *(_QWORD *)(v40 + 24) = v39;
  v41 = a4[1];
  *(_OWORD *)(v40 + 32) = *a4;
  *(_OWORD *)(v40 + 48) = v41;
  *(_OWORD *)(v40 + 57) = *(_OWORD *)((char *)a4 + 25);
  v42 = (uint64_t)a4;
  v43 = v80;
  swift_bridgeObjectRetain();
  sub_24144A204(v42);
  v44 = v71;
  v45 = v43;
  v46 = (uint64_t *)v42;
  Scrubber.init(duration:loadingConfiguration:playbackRate:sections:accessoryView:onScrub:)(v61, v35, (char *)v89, v45, (void (*)(uint64_t))sub_241449A70, v71, v37, AssociatedTypeWitness, AssociatedConformanceWitness);
  sub_2412EAEA4(v32, (uint64_t)v89, &qword_254383BC8);
  v47 = swift_allocObject();
  sub_2412EAEA4(v32, v47 + 16, &qword_254383BC8);
  *(_QWORD *)(v47 + 72) = v79;
  swift_retain();
  v48 = v85;
  sub_2414B4564();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v44, v12);
  v49 = *v46;
  if (*v46)
  {
    v89[0] = *(_QWORD *)(*(_QWORD *)(v49
                                   + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_playbackPosition)
                       + 88);
    swift_retain();
    swift_retain();
    v50 = v81;
    v51 = v87;
    sub_2414B45B8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v48, v51);
    v89[0] = *(_QWORD *)(v49
                       + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_pptScrubberInteractionState);
    swift_retain();
    swift_retain();
    v52 = (uint64_t)v74;
    v53 = v84;
    sub_2414B45B8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v50, v53);
    MEMORY[0x242695AE8](MEMORY[0x24BDEDA68], v28);
    v54 = v76;
    sub_2412FBF34(v52, v28, v76);
    v55 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
    v55(v52, v28);
    sub_2412EEA1C(v54, v28, v88);
    return ((uint64_t (*)(uint64_t, uint64_t))v55)(v54, v28);
  }
  else
  {
    _s11TimeControlCMa();
    sub_2412F0B40(&qword_25437EA10, 255, (uint64_t (*)(uint64_t))_s11TimeControlCMa, (uint64_t)&unk_2414C7AF4);
    result = sub_2414B364C();
    __break(1u);
  }
  return result;
}

uint64_t sub_241441738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(uint64_t, uint64_t);
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - v13;
  sub_2412C84FC(*(_QWORD *)(a1 + 16));
  v15 = *(void (**)(uint64_t, uint64_t))(a3 + 336);
  swift_unknownObjectRetain();
  v15(a2, a3);
  swift_unknownObjectRelease();
  swift_getAssociatedConformanceWitness();
  sub_2412FBF34((uint64_t)v11, AssociatedTypeWitness, (uint64_t)v14);
  v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v11, AssociatedTypeWitness);
  sub_2412EEA1C((uint64_t)v14, AssociatedTypeWitness, a4);
  return ((uint64_t (*)(char *, uint64_t))v16)(v14, AssociatedTypeWitness);
}

uint64_t sub_24144188C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  double v5;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  void (*v12)(uint64_t, uint64_t, double);
  uint64_t result;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;

  v5 = *(double *)a1;
  if (*(_BYTE *)(a1 + 8))
  {
    if (*(_BYTE *)(a1 + 8) != 1)
    {
      if (qword_2543809C0 != -1)
        swift_once();
      v8 = sub_2414B2CA4();
      __swift_project_value_buffer(v8, (uint64_t)qword_25438E7B8);
      v9 = sub_2414B2C8C();
      v10 = sub_2414B51B8();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v11 = 134217984;
        sub_2414B541C();
        _os_log_impl(&dword_2412C1000, v9, v10, "TimeControlView finished scrubbing with time: %f", v11, 0xCu);
        MEMORY[0x242695BD8](v11, -1, -1);
      }

      if (*a2)
      {
        swift_retain();
        sub_2414B2DAC();
        swift_release();
        sub_2412C84FC(a2[2]);
        v12 = *(void (**)(uint64_t, uint64_t, double))(a4 + 248);
        swift_unknownObjectRetain();
        v12(a3, a4, v5);
        return swift_unknownObjectRelease();
      }
      goto LABEL_16;
    }
  }
  else
  {
    if (qword_2543809C0 != -1)
      swift_once();
    v14 = sub_2414B2CA4();
    __swift_project_value_buffer(v14, (uint64_t)qword_25438E7B8);
    v15 = sub_2414B2C8C();
    v16 = sub_2414B51B8();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v17 = 134217984;
      sub_2414B541C();
      _os_log_impl(&dword_2412C1000, v15, v16, "TimeControlView began scrubbing with time: %f", v17, 0xCu);
      MEMORY[0x242695BD8](v17, -1, -1);
    }

  }
  if (*a2)
  {
    swift_retain();
    sub_2414B2DAC();
    return swift_release();
  }
LABEL_16:
  _s11TimeControlCMa();
  sub_2412F0B40(&qword_25437EA10, 255, (uint64_t (*)(uint64_t))_s11TimeControlCMa, (uint64_t)&unk_2414C7AF4);
  result = sub_2414B364C();
  __break(1u);
  return result;
}

void sub_241441B80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26[7];
  uint64_t v27;
  _QWORD v28[6];
  char v29;

  v4 = sub_2414B2B00();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v26[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2412EAEA4(a1, (uint64_t)v28, &qword_254383BC8);
  v8 = 0.0;
  if (v29 != 2)
  {
    v9 = *(double *)v28;
    v10 = *(double *)&v28[1];
    v11 = *(double *)&v28[4];
    v12 = *(double *)&v28[5];
    sub_2414B2AF4();
    sub_2414B2AAC();
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v15 = v9 + v12 * (v14 - v11);
    if (v10 < v15)
      v15 = v10;
    if (v15 < 0.0)
      v8 = 0.0;
    else
      v8 = v15;
  }
  if (qword_2543809C0 != -1)
    swift_once();
  v16 = sub_2414B2CA4();
  __swift_project_value_buffer(v16, (uint64_t)qword_25438E7B8);
  swift_retain_n();
  v17 = sub_2414B2C8C();
  v18 = sub_2414B51B8();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v27 = v20;
    *(_DWORD *)v19 = 136446722;
    sub_2412EAEA4(a1, (uint64_t)v26, &qword_254383BC8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254383BC8);
    v21 = sub_2414B4D8C();
    v26[0] = sub_2412E4890(v21, v22, &v27);
    sub_2414B541C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2048;
    *(double *)v26 = v8;
    sub_2414B541C();
    *(_WORD *)(v19 + 22) = 2082;
    v26[0] = a2;
    v23 = sub_2414B4D8C();
    v26[0] = sub_2412E4890(v23, v24, &v27);
    sub_2414B541C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2412C1000, v17, v18, "TimeControlView received snapshot %{public}s, setting playhead to %f via ScrubberProxy %{public}s", (uint8_t *)v19, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v20, -1, -1);
    MEMORY[0x242695BD8](v19, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  ScrubberProxy.seek(to:)(v8);
}

void sub_241441E80(char *a1)
{
  char v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v1 = *a1;
  if (qword_2543809C0 != -1)
    swift_once();
  v2 = sub_2414B2CA4();
  __swift_project_value_buffer(v2, (uint64_t)qword_25438E7B8);
  swift_retain_n();
  v3 = sub_2414B2C8C();
  v4 = sub_2414B51B8();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v9 = v6;
    *(_DWORD *)v5 = 136446210;
    v7 = sub_2414B4D8C();
    sub_2412E4890(v7, v8, &v9);
    sub_2414B541C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2412C1000, v3, v4, "TimeControlView received changed interaction state, updating scrubber via proxy %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v6, -1, -1);
    MEMORY[0x242695BD8](v5, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  LOBYTE(v9) = v1;
  ScrubberProxy._pptChangeScrubberInteractionState(to:)((MediaCoreUI::ScrubState)&v9);
}

uint64_t sub_241442040@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  if (*a1)
  {
    v3 = *(_QWORD *)(*a1 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_playbackPosition);
    result = swift_beginAccess();
    v5 = 0;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    if ((*(_BYTE *)(v3 + 16) & 1) != 0)
    {
      sub_2414B3EE0();
      v9 = sub_2414B4000();
      v11 = v10;
      v13 = v12 & 1;
      sub_2414B4654();
      v5 = sub_2414B4048();
      v6 = v14;
      v8 = v15;
      v7 = v16 & 1;
      sub_2412F6D78(v9, v11, v13);
      swift_release();
      result = swift_bridgeObjectRelease();
    }
    *a2 = v5;
    a2[1] = v6;
    a2[2] = v7;
    a2[3] = v8;
  }
  else
  {
    _s11TimeControlCMa();
    sub_2412F0B40(&qword_25437EA10, 255, (uint64_t (*)(uint64_t))_s11TimeControlCMa, (uint64_t)&unk_2414C7AF4);
    result = sub_2414B364C();
    __break(1u);
  }
  return result;
}

uint64_t sub_2414421B4()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841F8);
  sub_2414B4798();
  return v1;
}

uint64_t sub_241442200(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_2414B2B00();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  sub_2414B4798();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t sub_2414422A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t OpaqueTypeConformance2;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t AssociatedTypeWitness;
  uint64_t v46;
  uint64_t AssociatedConformanceWitness;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  ValueMetadata *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  double v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  ValueMetadata *v101;
  ValueMetadata *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD v111[2];
  uint64_t v112;
  _QWORD v113[2];
  _QWORD v114[2];
  _QWORD v115[2];
  _QWORD v116[2];
  char v117;
  _QWORD v118[2];
  _QWORD v119[2];
  _QWORD v120[2];
  _QWORD v121[2];
  _QWORD v122[2];
  ValueMetadata *v123;
  ValueMetadata *v124;
  unint64_t v125;
  unint64_t v126;

  v108 = a2;
  v105 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v103 = v3;
  v104 = (char *)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_2414B3C94();
  MEMORY[0x24BDAC7A8](v110);
  v107 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 24);
  v82 = *(_QWORD *)(a1 + 16);
  v106 = a1;
  v81 = v5;
  v7 = _s21LegacyTimeControlViewV9TimedViewVMa(255, v82, v5, v6);
  v8 = sub_24144984C();
  v9 = MEMORY[0x242695AE8](&unk_2414C7FA8, v7);
  v123 = &type metadata for MCUIText;
  v124 = (ValueMetadata *)v7;
  v125 = v8;
  v126 = v9;
  v10 = sub_2414B4864();
  v11 = MEMORY[0x242695AE8](MEMORY[0x24BDF4608], v10);
  v12 = sub_241449890();
  v123 = (ValueMetadata *)v10;
  v124 = &type metadata for ContentBelowSliderStyle;
  v125 = v11;
  v126 = v12;
  MEMORY[0x242695A94](255, &v123, MEMORY[0x24BDF2438], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381330);
  v13 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543812A0);
  v14 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2543812E0);
  v15 = sub_2414B3514();
  v16 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254384168);
  v17 = sub_2414B3514();
  v18 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383E20);
  v123 = (ValueMetadata *)v10;
  v124 = &type metadata for ContentBelowSliderStyle;
  v125 = v11;
  v126 = v12;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v20 = MEMORY[0x24BDF1028];
  v21 = sub_2412C8FC4((unint64_t *)&qword_254381328, &qword_254381330, MEMORY[0x24BDF1028]);
  v122[0] = OpaqueTypeConformance2;
  v122[1] = v21;
  v22 = MEMORY[0x24BDED308];
  v23 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v13, v122);
  v24 = sub_2412C8FC4(&qword_254381298, &qword_2543812A0, v20);
  v121[0] = v23;
  v121[1] = v24;
  v25 = v109;
  v26 = MEMORY[0x242695AE8](v22, v14, v121);
  v27 = sub_2412C8FC4((unint64_t *)&unk_2543812D0, (uint64_t *)&unk_2543812E0, v20);
  v120[0] = v26;
  v120[1] = v27;
  v119[0] = MEMORY[0x242695AE8](v22, v15, v120);
  v119[1] = MEMORY[0x24BDEBEE0];
  v28 = MEMORY[0x242695AE8](v22, v16, v119);
  v29 = sub_2412C8FC4(&qword_254384160, &qword_254384168, v20);
  v118[0] = v28;
  v118[1] = v29;
  v30 = MEMORY[0x242695AE8](v22, v17, v118);
  v31 = sub_2412C8FC4(&qword_254383E18, &qword_254383E20, MEMORY[0x24BDEC410]);
  v102 = (ValueMetadata *)v17;
  v123 = (ValueMetadata *)v17;
  v124 = (ValueMetadata *)v18;
  v101 = (ValueMetadata *)v18;
  v89 = v30;
  v125 = v30;
  v126 = v31;
  v85 = v31;
  MEMORY[0x242695A94](255, &v123, MEMORY[0x24BDF2E88], 0);
  v32 = v82;
  v33 = v81;
  v83 = _s21LegacyTimeControlViewV39TimeControlViewStateObservationModifierVMa(255, v82, v81, v34);
  v84 = sub_2414B3514();
  v35 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383FB8);
  v86 = v35;
  v36 = sub_2414B3514();
  v38 = _s21LegacyTimeControlViewV36TimeControlViewAccessibilityModifierVMa(255, v32, v33, v37);
  v88 = v36;
  v87 = v38;
  v39 = sub_2414B3514();
  v40 = sub_2412F0B40(&qword_254384110, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDF0768], MEMORY[0x24BDF0760]);
  v92 = v39;
  v90 = v40;
  v41 = sub_2414B3148();
  v42 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v44 = (char *)&v80 - v43;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v46 = v32;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v93 = AssociatedTypeWitness;
  v91 = AssociatedConformanceWitness;
  v94 = sub_2414B3604();
  v48 = sub_2414B3514();
  v49 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v95 = (char *)&v80 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v51);
  v96 = (uint64_t)&v80 - v52;
  if (*(_QWORD *)v25)
  {
    v53 = *(_QWORD *)(*(_QWORD *)v25 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_playbackPosition);
    v54 = *(ValueMetadata **)(v25 + 40);
    LOBYTE(v123) = *(_BYTE *)(v25 + 32);
    v124 = v54;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543813E8);
    sub_2414B47A4();
    v100 = v41;
    v99 = v42;
    v98 = v44;
    v97 = v49;
    if ((v117 & 1) == 0)
      swift_beginAccess();
    v55 = (uint64_t)v107;
    sub_2414B3C88();
    v56 = v105;
    v57 = v104;
    v58 = v106;
    (*(void (**)(char *, uint64_t, uint64_t))(v105 + 16))(v104, v25, v106);
    v59 = (*(unsigned __int8 *)(v56 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
    v60 = (char *)swift_allocObject();
    *((_QWORD *)v60 + 2) = v46;
    *((_QWORD *)v60 + 3) = v33;
    *((_QWORD *)v60 + 4) = v53;
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(&v60[v59], v57, v58);
    swift_retain();
    v123 = v102;
    v124 = v101;
    v125 = v89;
    v126 = v85;
    v61 = swift_getOpaqueTypeConformance2();
    v62 = MEMORY[0x242695AE8](&unk_2414C7F58, v83);
    v116[0] = v61;
    v116[1] = v62;
    v63 = MEMORY[0x24BDED308];
    v115[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v84, v116);
    v115[1] = MEMORY[0x24BDECC38];
    v64 = MEMORY[0x242695AE8](v63, v86, v115);
    v65 = sub_2412C8FC4(&qword_254383FB0, &qword_254383FB8, MEMORY[0x24BDEDC10]);
    v114[0] = v64;
    v114[1] = v65;
    v66 = MEMORY[0x242695AE8](v63, v88, v114);
    v67 = MEMORY[0x242695AE8](&unk_2414C7F08, v87);
    v113[0] = v66;
    v113[1] = v67;
    v68 = v92;
    v69 = MEMORY[0x242695AE8](v63, v92, v113);
    v70 = v98;
    sub_2413B4344(v55, (uint64_t)sub_241449A04, (uint64_t)v60, v110, v68, v90, v69);
    v71 = sub_2414B4A38();
    v72 = MEMORY[0x24BDAC7A8](v71);
    *(&v80 - 4) = v46;
    *(&v80 - 3) = v33;
    *(&v80 - 2) = v109;
    v112 = v69;
    v73 = v100;
    v74 = MEMORY[0x242695AE8](MEMORY[0x24BDEBD40], v100, &v112, v72);
    v75 = (uint64_t)v95;
    sub_2414B4504();
    swift_release();
    (*(void (**)(char *, uint64_t))(v99 + 8))(v70, v73);
    v76 = MEMORY[0x242695AE8](MEMORY[0x24BDEDC10], v94);
    v111[0] = v74;
    v111[1] = v76;
    MEMORY[0x242695AE8](MEMORY[0x24BDED308], v48, v111);
    v77 = v96;
    sub_2412FBF34(v75, v48, v96);
    v78 = *(void (**)(uint64_t, uint64_t))(v97 + 8);
    v78(v75, v48);
    sub_2412EEA1C(v77, v48, v108);
    return ((uint64_t (*)(uint64_t, uint64_t))v78)(v77, v48);
  }
  else
  {
    _s11TimeControlCMa();
    sub_2412F0B40(&qword_25437EA10, 255, (uint64_t (*)(uint64_t))_s11TimeControlCMa, (uint64_t)&unk_2414C7AF4);
    result = sub_2414B364C();
    __break(1u);
  }
  return result;
}

uint64_t sub_241442C7C@<X0>(void (*a1)(char *, uint64_t *, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t OpaqueTypeConformance2;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  double v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);
  char *v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  double v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  double v100;
  double v101;
  id v102;
  id v103;
  unint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __int128 v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  void (*v158)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  _QWORD v163[2];
  _QWORD *v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void (*v170)(char *, uint64_t *, uint64_t);
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  _QWORD v234[2];
  _QWORD v235[2];
  __int128 v236;
  __int128 v237;
  uint64_t v238;
  _QWORD v239[2];
  _QWORD v240[5];
  __int128 v241[3];
  _QWORD v242[2];
  _QWORD v243[2];
  _QWORD v244[2];
  _QWORD v245[2];
  _QWORD v246[2];
  __int128 v247;
  __int128 v248;
  uint64_t v249;
  __int128 v250;
  __int128 v251;

  v230 = a3;
  v231 = a2;
  v170 = (void (*)(char *, uint64_t *, uint64_t))a1;
  v223 = a6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257128FF8);
  MEMORY[0x24BDAC7A8](v8);
  v220 = (char *)v163 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v233 = a4;
  v232 = a5;
  v229 = _s21LegacyTimeControlViewV39TimeControlViewStateObservationModifierVMa(0, a4, a5, v10);
  v222 = *(_QWORD *)(v229 - 8);
  MEMORY[0x24BDAC7A8](v229);
  v221 = (_QWORD *)((char *)v163 - v11);
  v228 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383E20);
  v219 = *(_QWORD *)(v228 - 8);
  MEMORY[0x24BDAC7A8](v228);
  v218 = (uint64_t)v163 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2414B3484();
  v210 = *(_QWORD *)(v13 - 8);
  v211 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v207 = (char *)v163 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = _s21LegacyTimeControlViewV9TimedViewVMa(255, a4, a5, v15);
  v17 = sub_24144984C();
  v18 = MEMORY[0x242695AE8](&unk_2414C7FA8, v16);
  *(_QWORD *)&v247 = &type metadata for MCUIText;
  *((_QWORD *)&v247 + 1) = v16;
  v176 = v16;
  v174 = v17;
  *(_QWORD *)&v248 = v17;
  *((_QWORD *)&v248 + 1) = v18;
  v172 = v18;
  v19 = sub_2414B4864();
  v181 = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v180 = (uint64_t)v163 - v21;
  v22 = MEMORY[0x242695AE8](MEMORY[0x24BDF4608], v19, v20);
  v23 = sub_241449890();
  *(_QWORD *)&v247 = v19;
  *((_QWORD *)&v247 + 1) = &type metadata for ContentBelowSliderStyle;
  *(_QWORD *)&v248 = v22;
  *((_QWORD *)&v248 + 1) = v23;
  v24 = MEMORY[0x242695A94](0, &v247, MEMORY[0x24BDF2438], 0);
  v178 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v177 = (char *)v163 - v25;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381330);
  v179 = v24;
  v26 = sub_2414B3514();
  v184 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v183 = (char *)v163 - v27;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543812A0);
  v28 = sub_2414B3514();
  v187 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v186 = (char *)v163 - v29;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2543812E0);
  v30 = sub_2414B3514();
  v194 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v192 = (char *)v163 - v31;
  v32 = sub_2414B3514();
  v195 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v193 = (char *)v163 - v33;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254384168);
  v34 = sub_2414B3514();
  v200 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v197 = (char *)v163 - v35;
  v182 = v19;
  *(_QWORD *)&v247 = v19;
  *((_QWORD *)&v247 + 1) = &type metadata for ContentBelowSliderStyle;
  *(_QWORD *)&v248 = v22;
  v175 = v22;
  v173 = v23;
  *((_QWORD *)&v248 + 1) = v23;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v37 = MEMORY[0x24BDF1028];
  v38 = sub_2412C8FC4((unint64_t *)&qword_254381328, &qword_254381330, MEMORY[0x24BDF1028]);
  v165 = OpaqueTypeConformance2;
  v246[0] = OpaqueTypeConformance2;
  v246[1] = v38;
  v39 = MEMORY[0x24BDED308];
  v185 = v26;
  v40 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v26, v246);
  v41 = sub_2412C8FC4(&qword_254381298, &qword_2543812A0, v37);
  v167 = v40;
  v245[0] = v40;
  v245[1] = v41;
  v189 = v28;
  v42 = MEMORY[0x242695AE8](v39, v28, v245);
  v43 = sub_2412C8FC4((unint64_t *)&unk_2543812D0, (uint64_t *)&unk_2543812E0, v37);
  v168 = v42;
  v244[0] = v42;
  v244[1] = v43;
  v196 = v30;
  v169 = MEMORY[0x242695AE8](v39, v30, v244);
  v243[0] = v169;
  v243[1] = MEMORY[0x24BDEBEE0];
  v198 = v32;
  v44 = MEMORY[0x242695AE8](v39, v32, v243);
  v45 = sub_2412C8FC4(&qword_254384160, &qword_254384168, v37);
  v171 = v44;
  v242[0] = v44;
  v242[1] = v45;
  v46 = MEMORY[0x242695AE8](v39, v34, v242);
  v47 = sub_2412C8FC4(&qword_254383E18, &qword_254383E20, MEMORY[0x24BDEC410]);
  v206 = v34;
  *(_QWORD *)&v247 = v34;
  *((_QWORD *)&v247 + 1) = v228;
  v227 = v46;
  *(_QWORD *)&v248 = v46;
  *((_QWORD *)&v248 + 1) = v47;
  v226 = v47;
  v48 = MEMORY[0x242695A94](0, &v247, MEMORY[0x24BDF2E88], 0);
  v190 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v188 = (char *)v163 - v49;
  v191 = v50;
  v51 = sub_2414B3514();
  v201 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v199 = (char *)v163 - v52;
  v202 = v53;
  v54 = sub_2414B3514();
  v204 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v203 = (char *)v163 - v55;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383FB8);
  v205 = v54;
  v56 = sub_2414B3514();
  v213 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v209 = (char *)v163 - v57;
  v58 = v233;
  v59 = v232;
  v61 = _s21LegacyTimeControlViewV36TimeControlViewAccessibilityModifierVMa(255, v233, v232, v60);
  v215 = v56;
  v208 = v61;
  v62 = sub_2414B3514();
  v216 = *(_QWORD *)(v62 - 8);
  v217 = v62;
  MEMORY[0x24BDAC7A8](v62);
  v212 = (char *)v163 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v64);
  v214 = (uint64_t)v163 - v65;
  v67 = _s21LegacyTimeControlViewVMa(0, v58, v59, v66);
  v68 = *(_QWORD *)(v67 - 8);
  v224 = *(_QWORD *)(v68 + 64);
  v225 = v67;
  MEMORY[0x24BDAC7A8](v67);
  v70 = (char *)v163 - v69;
  v166 = (char *)v163 - v69;
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383E10);
  v72 = *(_QWORD *)(v71 - 8);
  v164 = (_QWORD *)v71;
  v73 = *(_QWORD *)(v72 + 64);
  v74 = MEMORY[0x24BDAC7A8](v71);
  v75 = (char *)v163 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void (*)(char *, uint64_t *, uint64_t), double))(v72 + 16))(v75, v170, v74);
  v170 = *(void (**)(char *, uint64_t *, uint64_t))(v68 + 16);
  v76 = v68;
  v170(v70, v230, v67);
  v163[1] = sub_2414B4FC0();
  v77 = v231;
  swift_retain();
  v78 = sub_2414B4FB4();
  v79 = (*(unsigned __int8 *)(v72 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
  v80 = *(unsigned __int8 *)(v68 + 80);
  v81 = v76;
  v82 = (v73 + v80 + v79) & ~v80;
  v163[0] = v80 | 7;
  v83 = (char *)swift_allocObject();
  v84 = MEMORY[0x24BEE6930];
  *((_QWORD *)v83 + 2) = v78;
  *((_QWORD *)v83 + 3) = v84;
  v85 = v232;
  *((_QWORD *)v83 + 4) = v233;
  *((_QWORD *)v83 + 5) = v85;
  *((_QWORD *)v83 + 6) = v77;
  (*(void (**)(char *, char *, _QWORD *))(v72 + 32))(&v83[v79], v75, v164);
  v86 = *(void (**)(char *, char *, uint64_t))(v81 + 32);
  v87 = v166;
  v88 = v225;
  v86(&v83[v82], v166, v225);
  v89 = v230;
  v170(v87, v230, v88);
  v90 = sub_2414B4FB4();
  v91 = (_QWORD *)swift_allocObject();
  v91[2] = v90;
  v92 = v233;
  v91[3] = MEMORY[0x24BEE6930];
  v91[4] = v92;
  v91[5] = v85;
  v86((char *)v91 + ((v80 + 48) & ~v80), v87, v88);
  sub_2414B48E8();
  v93 = *v89;
  if (*v89)
  {
    v94 = v247;
    v95 = v248;
    swift_retain();
    v166 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_254381458);
    MEMORY[0x242694144](&v236);
    v96 = *(double *)&v236;
    v97 = *(_QWORD *)(v93 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_playbackPosition);
    swift_beginAccess();
    if (*(_BYTE *)(v97 + 72) == 2)
    {
      v98 = swift_release();
      v99 = 0xE500000000000000;
    }
    else
    {
      v100 = *(double *)(v97 + 32);
      v101 = v96 * v100;
      v102 = objc_msgSend(*(id *)(v93 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_elapsedTimeFormatter), sel_stringFromSeconds_, v101);
      sub_2414B4D68();

      v103 = objc_msgSend(*(id *)(v93 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_remainingTimeFormatter), sel_stringFromSeconds_, v100 - v101);
      sub_2414B4D68();
      v99 = v104;
      swift_release();

    }
    v164 = v163;
    v247 = v94;
    *(_QWORD *)&v248 = v95;
    MEMORY[0x24BDAC7A8](v98);
    MEMORY[0x24BDAC7A8](v105);
    v162 = v99;
    v106 = sub_241449E18();
    v170 = (void (*)(char *, uint64_t *, uint64_t))*((_QWORD *)&v94 + 1);
    swift_retain();
    v224 = v94;
    swift_retain();
    v107 = v176;
    v108 = MEMORY[0x24BEE13C8];
    v109 = v174;
    v110 = v172;
    sub_241444388(MEMORY[0x24BEE13C8], v106, (char *)&v236);
    v241[0] = v236;
    v161 = v107;
    v111 = v180;
    sub_2414446A8((uint64_t)&v247, (uint64_t)v241, (uint64_t)sub_241444200, 0, (uint64_t (*)(uint64_t))sub_241449DEC, (uint64_t)&v160, (void (*)(uint64_t))sub_241449DF8, (uint64_t)&v160, v180, (uint64_t)CGSizeMake, 0, (uint64_t)&type metadata for MCUIText, v161, v108, v109, v110, v106, v106);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v247 = swift_getKeyPath();
    BYTE8(v247) = 0;
    v112 = v177;
    v113 = v182;
    sub_2414B421C();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v181 + 8))(v111, v113);
    swift_beginAccess();
    v114 = v183;
    v115 = v179;
    sub_2413FB064();
    (*(void (**)(char *, uint64_t))(v178 + 8))(v112, v115);
    if (qword_254383D90 != -1)
      swift_once();
    v116 = v185;
    v117 = v186;
    sub_2413FB10C();
    (*(void (**)(char *, uint64_t))(v184 + 8))(v114, v116);
    swift_getKeyPath();
    v119 = v210;
    v118 = v211;
    v120 = v207;
    (*(void (**)(char *, _QWORD, uint64_t))(v210 + 104))(v207, *MEMORY[0x24BDED100], v211);
    v121 = v192;
    v122 = v189;
    sub_2414B41C8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v119 + 8))(v120, v118);
    (*(void (**)(char *, uint64_t))(v187 + 8))(v117, v122);
    if (qword_254383DA8 != -1)
      swift_once();
    sub_2414B4A44();
    v123 = v193;
    v124 = v196;
    sub_2414B44A4();
    (*(void (**)(char *, uint64_t))(v194 + 8))(v121, v124);
    sub_2414B46C0();
    v126 = v197;
    v125 = v198;
    sub_2414B4180();
    swift_release();
    (*(void (**)(char *, uint64_t))(v195 + 8))(v123, v125);
    v127 = v218;
    v128 = v230;
    sub_2414448B8(v225, v218);
    sub_2414B2FF8();
    v129 = v188;
    v130 = v206;
    v131 = v228;
    sub_2414B43A8();
    (*(void (**)(uint64_t, uint64_t))(v219 + 8))(v127, v131);
    (*(void (**)(char *, uint64_t))(v200 + 8))(v126, v130);
    v132 = v128[5];
    LOBYTE(v236) = *((_BYTE *)v128 + 32);
    *((_QWORD *)&v236 + 1) = v132;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543813E8);
    sub_2414B47BC();
    v133 = v247;
    LOBYTE(v126) = v248;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543841B0);
    v134 = (uint64_t)v220;
    sub_2414B47BC();
    v135 = *((_BYTE *)v128 + 56);
    v136 = v128[8];
    *(_QWORD *)&v236 = v128[6];
    BYTE8(v236) = v135;
    *(_QWORD *)&v237 = v136;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C8);
    sub_2414B47BC();
    v137 = v221;
    sub_241444B90(v133, *((uint64_t *)&v133 + 1), (char)v126, v134, v247, *((uint64_t *)&v247 + 1), v248, SBYTE8(v248), v221, v233, v232);
    *(_QWORD *)&v247 = v130;
    *((_QWORD *)&v247 + 1) = v131;
    *(_QWORD *)&v248 = v227;
    *((_QWORD *)&v248 + 1) = v226;
    v138 = swift_getOpaqueTypeConformance2();
    v139 = v199;
    v140 = v191;
    v141 = v229;
    MEMORY[0x242693DC0](v137, v191, v229, v138);
    (*(void (**)(uint64_t *, uint64_t))(v222 + 8))(v137, v141);
    (*(void (**)(char *, uint64_t))(v190 + 8))(v129, v140);
    swift_beginAccess();
    v142 = MEMORY[0x242695AE8](&unk_2414C7F58, v141);
    v240[0] = v138;
    v240[1] = v142;
    v143 = MEMORY[0x24BDED308];
    v144 = v202;
    v145 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v202, v240);
    v146 = v203;
    sub_2414B44F8();
    (*(void (**)(char *, uint64_t))(v201 + 8))(v139, v144);
    sub_2414B4A44();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254384180);
    v239[0] = v145;
    v239[1] = MEMORY[0x24BDECC38];
    v147 = v205;
    v148 = MEMORY[0x242695AE8](v143, v205, v239);
    sub_24144B9D8((unint64_t *)&qword_254384188, &qword_254384180, MEMORY[0x24BDF1F80], MEMORY[0x24BDF5578]);
    v149 = v209;
    sub_2414B4504();
    (*(void (**)(char *, uint64_t))(v204 + 8))(v146, v147);
    *(_QWORD *)&v247 = v224;
    *((_QWORD *)&v247 + 1) = v170;
    *(_QWORD *)&v248 = v95;
    MEMORY[0x242694144](&v236, v166);
    sub_241444DF0((uint64_t)&v247, *(double *)&v236);
    v250 = v247;
    v251 = v248;
    v236 = v247;
    v237 = v248;
    v238 = v249;
    v150 = sub_2412C8FC4(&qword_254383FB0, &qword_254383FB8, MEMORY[0x24BDEDC10]);
    v235[0] = v148;
    v235[1] = v150;
    v151 = v215;
    v152 = MEMORY[0x242695AE8](v143, v215, v235);
    v153 = (uint64_t)v212;
    v154 = v208;
    MEMORY[0x242693DC0](&v236, v151, v208, v152);
    swift_release();
    swift_release();
    sub_241449F00((uint64_t)&v250);
    sub_2412FAA5C((uint64_t)&v251);
    (*(void (**)(char *, uint64_t))(v213 + 8))(v149, v151);
    v155 = MEMORY[0x242695AE8](&unk_2414C7F08, v154);
    v234[0] = v152;
    v234[1] = v155;
    v156 = v217;
    MEMORY[0x242695AE8](v143, v217, v234);
    v157 = v214;
    sub_2412FBF34(v153, v156, v214);
    v158 = *(void (**)(uint64_t, uint64_t))(v216 + 8);
    v158(v153, v156);
    sub_2412EEA1C(v157, v156, v223);
    return ((uint64_t (*)(uint64_t, uint64_t))v158)(v157, v156);
  }
  else
  {
    _s11TimeControlCMa();
    sub_2412F0B40(&qword_25437EA10, 255, (uint64_t (*)(uint64_t))_s11TimeControlCMa, (uint64_t)&unk_2414C7AF4);
    result = sub_2414B364C();
    __break(1u);
  }
  return result;
}

uint64_t sub_241443EFC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, double *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  int v22;
  double v23;
  double v24;
  void (*v25)(char *, uint64_t);
  double v26;
  double v27;
  char v28;
  uint64_t v29;
  uint64_t result;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  double v37;
  double v38;
  uint64_t v39;
  double *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  char v45;

  v40 = a6;
  v8 = _s21LegacyTimeControlViewVMa(0, a4, a5, a2);
  v39 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v39 - v9;
  v11 = sub_2414B2B00();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v39 - v16;
  swift_beginAccess();
  v19 = *(double *)(a1 + 24);
  v18 = *(double *)(a1 + 32);
  v20 = *(double *)(a1 + 56);
  v21 = *(double *)(a1 + 64);
  v22 = *(unsigned __int8 *)(a1 + 72);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254383E10);
  sub_2414B3124();
  sub_2414B2AAC();
  v24 = v23;
  v25 = *(void (**)(char *, uint64_t))(v12 + 8);
  v25(v17, v11);
  v26 = 0.0;
  if (v22 != 2)
  {
    v27 = v19 + v21 * (v24 - v20);
    if (v18 < v27)
      v27 = v18;
    if (v27 < 0.0)
      v27 = 0.0;
    v26 = v27 / v18;
  }
  v28 = *(_BYTE *)(a3 + 56);
  v29 = *(_QWORD *)(a3 + 64);
  v41 = *(_QWORD *)(a3 + 48);
  LOBYTE(v42) = v28;
  v43 = v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C8);
  result = sub_2414B47A4();
  if ((v45 & 1) != 0)
    goto LABEL_14;
  v31 = v44;
  if (*(_BYTE *)(a1 + 72) == 2)
  {
    sub_2414B2AB8();
    sub_2414B2AAC();
    v33 = v32;
    v25(v14, v11);
  }
  else
  {
    v33 = *(double *)(a1 + 56);
  }
  v34 = *(_QWORD *)(a3 + 40);
  LOBYTE(v41) = *(_BYTE *)(a3 + 32);
  v42 = v34;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813E8);
  sub_2414B47A4();
  v35 = LOBYTE(v44);
  v36 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v10, a3, v8);
  if (v35 != 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543841B0);
    sub_2414B47A4();
    sub_2414B2AAC();
    v38 = v37;
    v25(v14, v11);
    result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v10, v8);
    if (v33 < v38)
      goto LABEL_15;
LABEL_14:
    v31 = v26;
    goto LABEL_15;
  }
  result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v10, v8);
LABEL_15:
  *v40 = v31;
  return result;
}

uint64_t sub_2414441A0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C8);
  return sub_2414B47B0();
}

uint64_t sub_241444200@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  result = sub_2414B38B0();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = "Slider to adjust playback progress.";
  *(_QWORD *)(a1 + 40) = 35;
  *(_BYTE *)(a1 + 48) = 2;
  return result;
}

uint64_t sub_241444268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];

  v9 = a1;
  v10 = a2;
  v7 = _s21LegacyTimeControlViewV9TimedViewVMa(0, a4, a5, a3);
  MEMORY[0x242695AE8](&unk_2414C7FA8, v7);
  sub_2412FBF34((uint64_t)&v9, v7, (uint64_t)v11);
  v9 = v11[0];
  v10 = v11[1];
  sub_2412EEA1C((uint64_t)&v9, v7, a6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2414442F8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];

  v8 = a1;
  v9 = a2;
  v6 = _s21LegacyTimeControlViewV9TimedViewVMa(0, a3, a4, a2);
  MEMORY[0x242695AE8](&unk_2414C7FA8, v6);
  sub_2412FBF34((uint64_t)&v8, v6, (uint64_t)v10);
  v8 = v10[0];
  v9 = v10[1];
  sub_2412EEA1C((uint64_t)&v8, v6, a5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_241444388@<X0>(uint64_t a1@<X2>, uint64_t a2@<X5>, char *a3@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t TupleTypeMetadata2;
  char *v35;
  uint64_t v36;

  v35 = a3;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v33 = (char *)&v31 - v8;
  v32 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v31 - v13;
  v36 = *(_QWORD *)(a2 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  MEMORY[0x24BDAC7A8](v16);
  swift_getAssociatedConformanceWitness();
  sub_2414B5800();
  sub_2414B57B8();
  sub_2414B5800();
  v17 = v11;
  sub_2414B57B8();
  v18 = *(_QWORD *)(*(_QWORD *)(v36 + 24) + 8);
  result = sub_2414B4CCC();
  if ((result & 1) != 0)
  {
    v20 = v33;
    v21 = TupleTypeMetadata2;
    v22 = &v33[*(int *)(TupleTypeMetadata2 + 48)];
    v36 = v18;
    v23 = v32;
    v24 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
    v24(v33, v14, a1);
    v24(v22, v17, a1);
    v25 = &v6[*(int *)(v21 + 48)];
    v26 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
    v26(v6, v20, a1);
    v26(v25, v22, a1);
    v27 = v35;
    v24(v35, v6, a1);
    v28 = *(void (**)(char *, uint64_t))(v23 + 8);
    v28(v25, a1);
    v29 = &v6[*(int *)(v21 + 48)];
    v24(v6, v20, a1);
    v24(v29, v22, a1);
    v30 = sub_2414B4CD8();
    v24(&v27[*(int *)(v30 + 36)], v29, a1);
    return ((uint64_t (*)(char *, uint64_t))v28)(v6, a1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2414446A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(uint64_t)@<X4>, uint64_t a6@<X5>, void (*a7)(uint64_t)@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v42 = a8;
  v43 = a7;
  v38 = a6;
  v39 = a5;
  v47 = a3;
  v48 = a4;
  v44 = a9;
  v45 = a11;
  v46 = a10;
  v37 = a16;
  v33 = a1;
  v34 = a17;
  v40 = a15;
  v41 = a12;
  v35 = a18;
  v36 = a13;
  MEMORY[0x24BDAC7A8](a1);
  MEMORY[0x24BDAC7A8](v20);
  v32 = a14;
  v21 = sub_2414B4CD8();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v32 - v23;
  v25 = sub_2414B4900();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = MEMORY[0x24BDAC7A8](v25);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v26 + 16))((char *)&v32 - v28, a1, v25, v27);
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 16))(v24, a2, v21);
  v30 = v39(v29);
  v43(v30);
  sub_2414B4858();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(a2, v21);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v33, v25);
}

uint64_t sub_2414448B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  void (*v26)(uint64_t, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v3 = v2;
  v36 = a2;
  v5 = *(_QWORD *)(a1 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2414B3AB4();
  MEMORY[0x24BDAC7A8](v8);
  v32 = sub_2414B2FC8();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB540];
  v33 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383FA0);
  v13 = *(_QWORD *)(v12 - 8);
  v34 = v12;
  v35 = v13;
  MEMORY[0x24BDAC7A8](v12);
  v29 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414B3B80();
  sub_2414B2FB0();
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v30(v7, v3, a1);
  v15 = *(unsigned __int8 *)(v5 + 80);
  v16 = (v15 + 32) & ~v15;
  v27 = v15 | 7;
  v28 = v16 + v6;
  v17 = swift_allocObject();
  v18 = *(_QWORD *)(a1 + 16);
  v19 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v17 + 16) = v18;
  *(_QWORD *)(v17 + 24) = v19;
  v26 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v26(v17 + v16, v7, a1);
  sub_2412F0B40(&qword_254382B68, 255, v9, MEMORY[0x24BDEB530]);
  sub_2412F0B40(&qword_254383DC0, 255, MEMORY[0x24BDEB500], MEMORY[0x24BDEB520]);
  v20 = v29;
  v21 = v32;
  sub_2414B496C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v21);
  v30(v7, v31, a1);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v18;
  *(_QWORD *)(v22 + 24) = v19;
  v26(v22 + v16, v7, a1);
  sub_2412C8FC4(&qword_254383F98, &qword_254383FA0, MEMORY[0x24BDED570]);
  v23 = v34;
  sub_2414B4960();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v20, v23);
}

uint64_t sub_241444B90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t *v22;
  char *v23;
  uint64_t result;
  char *v25;

  _s11TimeControlCMa();
  sub_2412F0B40(&qword_25437EA10, 255, (uint64_t (*)(uint64_t))_s11TimeControlCMa, (uint64_t)&unk_2414C7AF4);
  *a9 = sub_2414B3658();
  a9[1] = v18;
  a9[2] = sub_2414B3658();
  a9[3] = v19;
  v21 = (int *)_s21LegacyTimeControlViewV39TimeControlViewStateObservationModifierVMa(0, a10, a11, v20);
  v22 = (uint64_t *)((char *)a9 + v21[10]);
  *v22 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
  swift_storeEnumTagMultiPayload();
  v23 = (char *)a9 + v21[11];
  *(_QWORD *)v23 = a1;
  *((_QWORD *)v23 + 1) = a2;
  v23[16] = a3;
  result = sub_2412EAEA4(a4, (uint64_t)a9 + v21[12], &qword_257128FF8);
  v25 = (char *)a9 + v21[13];
  *(_QWORD *)v25 = a5;
  *((_QWORD *)v25 + 1) = a6;
  *((_QWORD *)v25 + 2) = a7;
  v25[24] = a8 & 1;
  return result;
}

uint64_t sub_241444CD4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  result = swift_beginAccess();
  v5 = 0;
  v6 = 0;
  v7 = 0;
  v8 = 0;
  if (*(_BYTE *)(a1 + 16) == 1)
  {
    sub_2414B3EE0();
    v9 = sub_2414B4000();
    v11 = v10;
    v13 = v12 & 1;
    sub_2414B4654();
    v5 = sub_2414B4048();
    v6 = v14;
    v8 = v15;
    v7 = v16 & 1;
    sub_2412F6D78(v9, v11, v13);
    swift_release();
    result = swift_bridgeObjectRelease();
  }
  *a2 = v5;
  a2[1] = v6;
  a2[2] = v7;
  a2[3] = v8;
  return result;
}

uint64_t sub_241444DF0@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  _s11TimeControlCMa();
  sub_2412F0B40(&qword_25437EA10, 255, (uint64_t (*)(uint64_t))_s11TimeControlCMa, (uint64_t)&unk_2414C7AF4);
  v4 = sub_2414B3658();
  v6 = v5;
  result = sub_2414B3658();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = result;
  *(_QWORD *)(a1 + 24) = v8;
  *(double *)(a1 + 32) = a2;
  return result;
}

uint64_t sub_241444E88()
{
  uint64_t v0;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381450);
  MEMORY[0x242694144](&v2, v0);
  return v2;
}

uint64_t sub_241444EDC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_254381450);
  return sub_2414B48D0();
}

uint64_t sub_241444F34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_2414B2B00();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257128FF8);
  sub_2414B48D0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t sub_241444FE4()
{
  uint64_t v0;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571291A0);
  MEMORY[0x242694144](&v2, v0);
  return v2;
}

uint64_t sub_241445044()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571291A0);
  return sub_2414B48D0();
}

uint64_t sub_2414450AC@<X0>(void (*a1)(uint64_t, char *, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t OpaqueTypeConformance2;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, char *, uint64_t);
  char *v53;
  _QWORD *v54;
  char v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  char v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(uint64_t, uint64_t);
  uint64_t result;
  _QWORD v90[2];
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void (*v132)(uint64_t, char *, uint64_t);
  _QWORD *v133;
  void (*v134)(char *, _QWORD *, uint64_t);
  __int128 v135;
  __int128 v136;
  __int128 v137;
  char v138;

  v132 = a1;
  v124 = a3;
  v129 = sub_2414B2F44();
  v123 = *(_QWORD *)(v129 - 8);
  MEMORY[0x24BDAC7A8](v129);
  v122 = (uint64_t)v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2414B2B00();
  v120 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v119 = (char *)v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = *(_QWORD *)(a2 - 8);
  v131 = *(_QWORD *)(v98 + 64);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v97 = (char *)v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x242695AE8](&unk_2414C7F58, a2, v8);
  v10 = sub_2414B3B08();
  v11 = MEMORY[0x242695AE8](MEMORY[0x24BDEFB78], v10);
  *(_QWORD *)&v135 = v10;
  *((_QWORD *)&v135 + 1) = MEMORY[0x24BEE1328];
  v12 = v10;
  v90[1] = v10;
  v13 = MEMORY[0x24BEE1328];
  *(_QWORD *)&v136 = v11;
  *((_QWORD *)&v136 + 1) = MEMORY[0x24BEE1340];
  v14 = v11;
  v95 = v11;
  v15 = MEMORY[0x24BEE1340];
  v16 = MEMORY[0x24BDF3908];
  v17 = MEMORY[0x242695A94](0, &v135, MEMORY[0x24BDF3908], 0);
  v99 = *(_QWORD *)(v17 - 8);
  v18 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v96 = (char *)v90 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543841F8);
  *(_QWORD *)&v135 = v12;
  *((_QWORD *)&v135 + 1) = v13;
  *(_QWORD *)&v136 = v14;
  *((_QWORD *)&v136 + 1) = v15;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v22 = sub_24144B9D8((unint64_t *)&qword_2571264B8, &qword_2543841F8, MEMORY[0x24BEE13F8], MEMORY[0x24BEE4AB8]);
  *(_QWORD *)&v135 = v18;
  *((_QWORD *)&v135 + 1) = v20;
  v23 = v18;
  v91 = v18;
  v24 = v20;
  v94 = v20;
  *(_QWORD *)&v136 = OpaqueTypeConformance2;
  *((_QWORD *)&v136 + 1) = v22;
  v93 = OpaqueTypeConformance2;
  v25 = v22;
  v92 = v22;
  v26 = MEMORY[0x242695A94](0, &v135, v16, 0);
  v106 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v128 = (char *)v90 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383BC8);
  *(_QWORD *)&v135 = v23;
  *((_QWORD *)&v135 + 1) = v24;
  *(_QWORD *)&v136 = OpaqueTypeConformance2;
  *((_QWORD *)&v136 + 1) = v25;
  v29 = swift_getOpaqueTypeConformance2();
  v30 = sub_24144A108();
  *(_QWORD *)&v135 = v26;
  *((_QWORD *)&v135 + 1) = v28;
  *(_QWORD *)&v136 = v29;
  *((_QWORD *)&v136 + 1) = v30;
  v31 = MEMORY[0x242695A94](0, &v135, v16, 0);
  v113 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v109 = (char *)v90 - v32;
  v103 = v26;
  *(_QWORD *)&v135 = v26;
  *((_QWORD *)&v135 + 1) = v28;
  v102 = v28;
  v101 = v29;
  *(_QWORD *)&v136 = v29;
  *((_QWORD *)&v136 + 1) = v30;
  v100 = v30;
  v33 = swift_getOpaqueTypeConformance2();
  v34 = sub_2412F0B40(&qword_2543830B8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  *(_QWORD *)&v135 = v31;
  *((_QWORD *)&v135 + 1) = v5;
  *(_QWORD *)&v136 = v33;
  *((_QWORD *)&v136 + 1) = v34;
  v35 = MEMORY[0x242695A94](0, &v135, v16, 0);
  v117 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v115 = (char *)v90 - v36;
  v114 = v31;
  *(_QWORD *)&v135 = v31;
  *((_QWORD *)&v135 + 1) = v5;
  v121 = v5;
  v105 = v33;
  *(_QWORD *)&v136 = v33;
  *((_QWORD *)&v136 + 1) = v34;
  v104 = v34;
  v37 = swift_getOpaqueTypeConformance2();
  v38 = sub_2412F0B40(&qword_254380B00, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB1F0], MEMORY[0x24BDEB200]);
  v118 = v35;
  *(_QWORD *)&v135 = v35;
  *((_QWORD *)&v135 + 1) = v129;
  v112 = v37;
  *(_QWORD *)&v136 = v37;
  *((_QWORD *)&v136 + 1) = v38;
  v108 = v38;
  v116 = MEMORY[0x242695A94](0, &v135, v16, 0);
  v111 = *(_QWORD *)(v116 - 8);
  MEMORY[0x24BDAC7A8](v116);
  v107 = (char *)v90 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v40);
  v110 = (uint64_t)v90 - v41;
  v42 = a2;
  v43 = v133;
  LOBYTE(v135) = sub_241444E88() & 1;
  v44 = v98;
  v134 = *(void (**)(char *, _QWORD *, uint64_t))(v98 + 16);
  v45 = v97;
  v134(v97, v43, v42);
  v46 = *(unsigned __int8 *)(v44 + 80);
  v47 = (v46 + 32) & ~v46;
  v48 = v47 + v131;
  v130 = v46 | 7;
  v49 = swift_allocObject();
  v51 = *(_QWORD *)(v42 + 16);
  v50 = *(_QWORD *)(v42 + 24);
  *(_QWORD *)(v49 + 16) = v51;
  *(_QWORD *)(v49 + 24) = v50;
  v52 = *(void (**)(uint64_t, char *, uint64_t))(v44 + 32);
  v52(v49 + v47, v45, v42);
  swift_checkMetadataState();
  v53 = v96;
  sub_2414B4564();
  swift_release();
  v54 = v133;
  *(_QWORD *)&v135 = sub_241444FE4();
  BYTE8(v135) = v55 & 1;
  v134(v45, v54, v42);
  v127 = v48;
  v56 = swift_allocObject();
  v125 = v51;
  v126 = v47;
  *(_QWORD *)(v56 + 16) = v51;
  *(_QWORD *)(v56 + 24) = v50;
  v131 = v50;
  v132 = v52;
  v57 = v45;
  v52(v56 + v47, v45, v42);
  v58 = v91;
  sub_2414B4564();
  v59 = v133;
  swift_release();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v53, v58);
  v60 = v59;
  if (*v59)
  {
    v61 = *(_QWORD *)(*v59 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_playbackPosition);
    swift_beginAccess();
    v62 = *(_BYTE *)(v61 + 72);
    v63 = *(_OWORD *)(v61 + 40);
    v135 = *(_OWORD *)(v61 + 24);
    v136 = v63;
    v137 = *(_OWORD *)(v61 + 56);
    v138 = v62;
    v134(v57, v59, v42);
    v64 = swift_allocObject();
    v65 = v125;
    v66 = v126;
    *(_QWORD *)(v64 + 16) = v125;
    v67 = v65;
    *(_QWORD *)(v64 + 24) = v131;
    v132(v64 + v66, v57, v42);
    v68 = v109;
    v69 = v103;
    v70 = v128;
    sub_2414B4564();
    swift_release();
    (*(void (**)(char *, uint64_t))(v106 + 8))(v70, v69);
    v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_257128FF8);
    v72 = v119;
    MEMORY[0x242694144](v71);
    v134(v57, v60, v42);
    v73 = swift_allocObject();
    v74 = v131;
    *(_QWORD *)(v73 + 16) = v67;
    *(_QWORD *)(v73 + 24) = v74;
    v132(v73 + v66, v57, v42);
    v75 = v115;
    v76 = v114;
    v77 = v121;
    sub_2414B4564();
    swift_release();
    (*(void (**)(char *, uint64_t))(v120 + 8))(v72, v77);
    (*(void (**)(char *, uint64_t))(v113 + 8))(v68, v76);
    v78 = v122;
    sub_2412C8890(v122);
    v134(v57, v60, v42);
    v79 = swift_allocObject();
    v80 = v131;
    *(_QWORD *)(v79 + 16) = v125;
    *(_QWORD *)(v79 + 24) = v80;
    v132(v79 + v126, v57, v42);
    v81 = (uint64_t)v107;
    v82 = v118;
    v83 = v129;
    v84 = v112;
    v85 = v108;
    sub_2414B4564();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v78, v83);
    (*(void (**)(char *, uint64_t))(v117 + 8))(v75, v82);
    *(_QWORD *)&v135 = v82;
    *((_QWORD *)&v135 + 1) = v83;
    *(_QWORD *)&v136 = v84;
    *((_QWORD *)&v136 + 1) = v85;
    swift_getOpaqueTypeConformance2();
    v86 = v110;
    v87 = v116;
    sub_2412FBF34(v81, v116, v110);
    v88 = *(void (**)(uint64_t, uint64_t))(v111 + 8);
    v88(v81, v87);
    sub_2412EEA1C(v86, v87, v124);
    return ((uint64_t (*)(uint64_t, uint64_t))v88)(v86, v87);
  }
  else
  {
    _s11TimeControlCMa();
    sub_2412F0B40(&qword_25437EA10, 255, (uint64_t (*)(uint64_t))_s11TimeControlCMa, (uint64_t)&unk_2414C7AF4);
    result = sub_2414B364C();
    __break(1u);
  }
  return result;
}

uint64_t sub_241445B1C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  double v19;
  char v20;
  void (*v21)(char *, uint64_t);
  double v22;
  void (*v23)(uint64_t, uint64_t, double);
  uint64_t result;
  _QWORD v25[5];
  char v26;

  v6 = sub_2414B2F44();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v25 - v11;
  v13 = sub_2414B2B00();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s21LegacyTimeControlViewV39TimeControlViewStateObservationModifierVMa(0, a2, a3, v16);
  if ((sub_241444E88() & 1) != 0)
  {
    sub_2414B2AF4();
  }
  else
  {
    v25[0] = sub_241444FE4();
    if ((v17 & 1) == 0)
    {
      if (!*a1)
        goto LABEL_14;
      v18 = *(_QWORD *)(*a1 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_playbackPosition);
      swift_beginAccess();
      if (*(_BYTE *)(v18 + 72) != 2)
      {
        v19 = *(double *)(v18 + 32);
        sub_2412C8890((uint64_t)v12);
        (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BDEB1E0], v6);
        v20 = sub_2414B2F38();
        v21 = *(void (**)(char *, uint64_t))(v7 + 8);
        v21(v9, v6);
        v21(v12, v6);
        if ((v20 & 1) != 0)
        {
          v22 = *(double *)v25;
          sub_2412C84FC(a1[2]);
          v23 = *(void (**)(uint64_t, uint64_t, double))(a3 + 248);
          swift_unknownObjectRetain();
          v23(a2, a3, v19 * v22);
          swift_unknownObjectRelease();
          goto LABEL_10;
        }
      }
    }
    sub_2414B2AB8();
  }
  sub_241444F34((uint64_t)v15);
LABEL_10:
  result = sub_241444E88();
  if ((result & 1) != 0)
    return result;
  if (!*a1)
  {
LABEL_14:
    _s11TimeControlCMa();
    sub_2412F0B40(&qword_25437EA10, 255, (uint64_t (*)(uint64_t))_s11TimeControlCMa, (uint64_t)&unk_2414C7AF4);
    result = sub_2414B364C();
    __break(1u);
    return result;
  }
  v25[4] = 0;
  v26 = 1;
  swift_retain();
  sub_2414B2DAC();
  return swift_release();
}

uint64_t sub_241445DB4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  _s21LegacyTimeControlViewV39TimeControlViewStateObservationModifierVMa(0, a2, a3, a4);
  result = sub_241444E88();
  if ((result & 1) != 0)
  {
    if (*a1)
    {
      swift_retain();
      sub_241444FE4();
      sub_2414B2DAC();
      return swift_release();
    }
    else
    {
      _s11TimeControlCMa();
      sub_2412F0B40(&qword_25437EA10, 255, (uint64_t (*)(uint64_t))_s11TimeControlCMa, (uint64_t)&unk_2414C7AF4);
      result = sub_2414B364C();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_241445E80(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  double v13;
  uint64_t v14;
  double v15;
  double v16;
  uint64_t v17;

  v6 = sub_2414B2B00();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s21LegacyTimeControlViewV39TimeControlViewStateObservationModifierVMa(0, a2, a3, v10);
  result = sub_241444E88();
  if ((result & 1) == 0)
  {
    if (*a1)
    {
      v12 = *(_QWORD *)(*a1 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_playbackPosition);
      result = swift_beginAccess();
      if (*(_BYTE *)(v12 + 72) != 2)
      {
        v13 = *(double *)(v12 + 56);
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257128FF8);
        MEMORY[0x242694144](v14);
        sub_2414B2AAC();
        v16 = v15;
        result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        if (v16 < v13)
          return sub_241445044();
      }
    }
    else
    {
      _s11TimeControlCMa();
      sub_2412F0B40(&qword_25437EA10, 255, (uint64_t (*)(uint64_t))_s11TimeControlCMa, (uint64_t)&unk_2414C7AF4);
      result = sub_2414B364C();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_241445FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t result;
  uint64_t v16;

  v5 = sub_2414B2B00();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v16 - v10;
  _s21LegacyTimeControlViewV39TimeControlViewStateObservationModifierVMa(0, a2, a3, v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257128FF8);
  MEMORY[0x242694144](v13);
  sub_2414B2AB8();
  LOBYTE(a3) = sub_2414B2ADC();
  v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v8, v5);
  result = ((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
  if ((a3 & 1) != 0)
    return sub_241445044();
  return result;
}

uint64_t sub_241446100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  unint64_t v30;
  os_log_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  os_log_t v35;
  int v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;

  v5 = _s21LegacyTimeControlViewV39TimeControlViewStateObservationModifierVMa(0, a2, a3, a4);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v34 - v10;
  v12 = sub_2414B2F44();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v34 - v17;
  sub_2412C8890((uint64_t)&v34 - v17);
  result = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v18, v12);
  if ((_DWORD)result == *MEMORY[0x24BDEB1D0] || (_DWORD)result == *MEMORY[0x24BDEB1E8])
    return sub_241444EDC();
  if ((_DWORD)result != *MEMORY[0x24BDEB1E0])
  {
    v39 = v8;
    if (qword_2543809C0 != -1)
      swift_once();
    v21 = sub_2414B2CA4();
    __swift_project_value_buffer(v21, (uint64_t)qword_25438E7B8);
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v22(v11, a1, v5);
    v22(v39, a1, v5);
    v23 = sub_2414B2C8C();
    v24 = sub_2414B51AC();
    v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      v26 = swift_slowAlloc();
      v37 = swift_slowAlloc();
      v41 = v37;
      *(_DWORD *)v26 = 136315394;
      v35 = (os_log_t)(v26 + 4);
      v36 = v25;
      sub_2412C8890((uint64_t)v15);
      v38 = *(void (**)(char *, uint64_t))(v13 + 8);
      v38(v15, v12);
      v40 = sub_2412E4890(0x616850656E656353, 0xEA00000000006573, &v41);
      sub_2414B541C();
      v35 = v23;
      v27 = *(void (**)(char *, uint64_t))(v6 + 8);
      v27(v11, v5);
      *(_WORD *)(v26 + 12) = 2080;
      v28 = v39;
      sub_2412C8890((uint64_t)v15);
      v29 = sub_2414B4D8C();
      v40 = sub_2412E4890(v29, v30, &v41);
      sub_2414B541C();
      swift_bridgeObjectRelease();
      v27(v28, v5);
      v31 = v35;
      _os_log_impl(&dword_2412C1000, v35, (os_log_type_t)v36, "Unhandled case for %s: %s", (uint8_t *)v26, 0x16u);
      v32 = v37;
      swift_arrayDestroy();
      MEMORY[0x242695BD8](v32, -1, -1);
      MEMORY[0x242695BD8](v26, -1, -1);

      return ((uint64_t (*)(char *, uint64_t))v38)(v18, v12);
    }
    else
    {
      v33 = *(void (**)(char *, uint64_t))(v6 + 8);
      v33(v11, v5);
      v33(v39, v5);

      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    }
  }
  return result;
}

uint64_t sub_24144649C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  id v28;
  void *v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  _QWORD *v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  char *v52;
  uint64_t v53;
  uint64_t result;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t OpaqueTypeConformance2;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v74[6];
  _QWORD v75[3];
  __int128 v76;

  OpaqueTypeConformance2 = a1;
  v72 = a3;
  v5 = sub_2414B4D20();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_2414B2B48();
  MEMORY[0x24BDAC7A8](v6);
  v68 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2414B4D38();
  MEMORY[0x24BDAC7A8](v8);
  v67 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2414B3CD0();
  v59 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x242695AE8](&unk_2414C7F08, a2, v11);
  v70 = a2;
  v14 = sub_2414B3B08();
  v15 = MEMORY[0x242695AE8](MEMORY[0x24BDEFB78], v14);
  v75[0] = v14;
  v75[1] = v15;
  v16 = v15;
  v17 = MEMORY[0x242695A94](0, v75, MEMORY[0x24BDF2F10], 0);
  v63 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v55 - v18;
  sub_2414B3DB4();
  v61 = v17;
  v62 = sub_2414B3514();
  v65 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v64 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v66 = (char *)&v55 - v22;
  MEMORY[0x24BDAC7A8](v23);
  v69 = (char *)&v55 - v24;
  v25 = *v3;
  if (!*v3)
  {
    _s11TimeControlCMa();
    sub_2412F0B40(&qword_25437EA10, 255, (uint64_t (*)(uint64_t))_s11TimeControlCMa, (uint64_t)&unk_2414C7AF4);
    result = sub_2414B364C();
    __break(1u);
    return result;
  }
  v71 = v3;
  v26 = *(_QWORD *)(v25 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_playbackPosition);
  swift_beginAccess();
  v27 = *(unsigned __int8 *)(v26 + 72);
  v73 = v25;
  if (v27 == 2)
  {
    swift_retain();
LABEL_8:
    v34 = v10;
    if (qword_254383BB8 != -1)
      swift_once();
    v35 = qword_25438E880;
    v36 = *(_QWORD *)algn_25438E888;
    swift_bridgeObjectRetain_n();
    swift_release();
    v58 = v35;
    v56 = v35;
    v57 = v36;
    goto LABEL_11;
  }
  swift_retain();
  v28 = (id)AXDurationStringForDuration();
  if (!v28)
    goto LABEL_8;
  v29 = v28;
  v30 = sub_2414B4D68();

  v31 = (id)AXDurationStringForDuration();
  if (!v31)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v32 = v31;
  v58 = v30;
  v56 = sub_2414B4D68();
  v57 = v33;
  swift_release();

  v34 = v10;
LABEL_11:
  v37 = v59;
  v38 = swift_checkMetadataState();
  sub_2414B3CAC();
  sub_2414B43B4();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v34);
  sub_2414B4CF0();
  if (qword_2543846C8 != -1)
    swift_once();
  v39 = (id)qword_25438E910;
  sub_2414B2B3C();
  *(_QWORD *)&v76 = sub_2414B4D80();
  *((_QWORD *)&v76 + 1) = v40;
  v74[3] = v38;
  v74[4] = v16;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_2412F6D88();
  v41 = v64;
  v42 = v61;
  sub_2414B433C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v19, v42);
  sub_2414B4D14();
  sub_2414B4D08();
  sub_2414B4CFC();
  sub_2414B4D08();
  sub_2414B4CFC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2414B4D08();
  sub_2414B4D2C();
  v43 = (id)qword_25438E910;
  sub_2414B2B3C();
  *(_QWORD *)&v76 = sub_2414B4D80();
  *((_QWORD *)&v76 + 1) = v44;
  v45 = v66;
  v46 = v62;
  sub_2414B34C0();
  swift_bridgeObjectRelease();
  v47 = *(void (**)(char *, uint64_t))(v65 + 8);
  v47(v41, v46);
  v48 = v71;
  v76 = *((_OWORD *)v71 + 1);
  v49 = swift_allocObject();
  v50 = *(_OWORD *)v48;
  v51 = *((_OWORD *)v48 + 1);
  *(_OWORD *)(v49 + 16) = *(_OWORD *)(v70 + 16);
  *(_OWORD *)(v49 + 32) = v50;
  *(_OWORD *)(v49 + 48) = v51;
  *(_QWORD *)(v49 + 64) = v48[4];
  swift_retain();
  sub_2412EAF10((uint64_t)&v76);
  v52 = v69;
  sub_2414B34FC();
  swift_release();
  v47(v45, v46);
  v53 = sub_2412F0B40((unint64_t *)&qword_2543844B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v74[0] = OpaqueTypeConformance2;
  v74[1] = v53;
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v46, v74);
  sub_2412F6DCC();
  return ((uint64_t (*)(char *, uint64_t))v47)(v52, v46);
}

uint64_t sub_241446C14(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  double v14;
  int v15;
  double v16;
  double v17;
  double v18;
  void (*v19)(uint64_t, uint64_t, double);
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  __int128 v28;
  uint64_t v29;
  unint64_t v30;
  os_log_t v31;
  uint64_t v32;
  os_log_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;

  v8 = sub_2414B3DCC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)a2)
  {
    v12 = *(_QWORD *)(*(_QWORD *)a2 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl_playbackPosition);
    result = swift_beginAccess();
    if (*(_BYTE *)(v12 + 72) != 2)
    {
      v14 = *(double *)(v12 + 32);
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
      v15 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
      if (v15 == *MEMORY[0x24BDF1140])
      {
        sub_2412C84FC(*((_QWORD *)a2 + 2));
        v16 = *((double *)a2 + 4);
        v17 = 0.05;
LABEL_7:
        v18 = v14 * (v16 + v17);
        v19 = *(void (**)(uint64_t, uint64_t, double))(a4 + 248);
        swift_unknownObjectRetain();
        v19(a3, a4, v18);
        return swift_unknownObjectRelease();
      }
      if (v15 == *MEMORY[0x24BDF1138])
      {
        sub_2412C84FC(*((_QWORD *)a2 + 2));
        v16 = *((double *)a2 + 4);
        v17 = -0.05;
        goto LABEL_7;
      }
      if (qword_2543809C0 != -1)
        swift_once();
      v20 = sub_2414B2CA4();
      __swift_project_value_buffer(v20, (uint64_t)qword_25438E7B8);
      v39 = a2[1];
      swift_retain();
      sub_2412EAF10((uint64_t)&v39);
      swift_retain();
      sub_2412EAF10((uint64_t)&v39);
      swift_retain();
      sub_2412EAF10((uint64_t)&v39);
      swift_retain();
      sub_2412EAF10((uint64_t)&v39);
      v21 = sub_2414B2C8C();
      v22 = sub_2414B51AC();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = swift_slowAlloc();
        v33 = v21;
        v24 = v23;
        v34 = swift_slowAlloc();
        v38 = v34;
        *(_DWORD *)v24 = 136315394;
        _s21LegacyTimeControlViewV36TimeControlViewAccessibilityModifierVMa(0, a3, a4, v25);
        v26 = sub_2414B5944();
        *(_QWORD *)&v35 = sub_2412E4890(v26, v27, &v38);
        sub_2414B541C();
        swift_release();
        swift_bridgeObjectRelease();
        sub_2412FAA5C((uint64_t)&v39);
        swift_release();
        sub_2412FAA5C((uint64_t)&v39);
        *(_WORD *)(v24 + 12) = 2080;
        v28 = a2[1];
        v35 = *a2;
        v36 = v28;
        v37 = *((_QWORD *)a2 + 4);
        swift_retain();
        sub_2412EAF10((uint64_t)&v39);
        v29 = sub_2414B4D8C();
        *(_QWORD *)&v35 = sub_2412E4890(v29, v30, &v38);
        sub_2414B541C();
        swift_release();
        swift_bridgeObjectRelease();
        sub_2412FAA5C((uint64_t)&v39);
        swift_release();
        sub_2412FAA5C((uint64_t)&v39);
        v31 = v33;
        _os_log_impl(&dword_2412C1000, v33, v22, "Unhandled case for %s: %s", (uint8_t *)v24, 0x16u);
        v32 = v34;
        swift_arrayDestroy();
        MEMORY[0x242695BD8](v32, -1, -1);
        MEMORY[0x242695BD8](v24, -1, -1);

      }
      else
      {
        swift_release();
        sub_2412FAA5C((uint64_t)&v39);
        swift_release();
        sub_2412FAA5C((uint64_t)&v39);
        swift_release();
        sub_2412FAA5C((uint64_t)&v39);
        swift_release();
        sub_2412FAA5C((uint64_t)&v39);

      }
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  else
  {
    _s11TimeControlCMa();
    sub_2412F0B40(&qword_25437EA10, 255, (uint64_t (*)(uint64_t))_s11TimeControlCMa, (uint64_t)&unk_2414C7AF4);
    result = sub_2414B364C();
    __break(1u);
  }
  return result;
}

uint64_t sub_241447074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24144649C(a1, a2, a3);
}

uint64_t sub_2414470AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (**v41)();
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v56 = a3;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571265A8);
  MEMORY[0x24BDAC7A8](v54);
  v53 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v55 = (uint64_t)&v43 - v7;
  v51 = sub_2414B4AE0();
  v49 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v48 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571265B0);
  MEMORY[0x24BDAC7A8](v47);
  v50 = (uint64_t)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v46 = (uint64_t *)((char *)&v43 - v11);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571265B8);
  MEMORY[0x24BDAC7A8](v52);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = a1;
  v58 = a2;
  sub_2412F6D88();
  swift_bridgeObjectRetain();
  v14 = sub_2414B40F0();
  v16 = v15;
  v18 = v17 & 1;
  sub_2414B3F40();
  sub_2414B3EA4();
  swift_release();
  v19 = sub_2414B4078();
  v21 = v20;
  v23 = v22;
  swift_release();
  sub_2412F6D78(v14, v16, v18);
  swift_bridgeObjectRelease();
  sub_2414B3EF8();
  v44 = sub_2414B4000();
  v45 = v24;
  v26 = v25;
  LOBYTE(v14) = v27 & 1;
  sub_2412F6D78(v19, v21, v23 & 1);
  swift_bridgeObjectRelease();
  sub_2414B4654();
  v28 = sub_2414B466C();
  swift_release();
  v30 = v48;
  v29 = v49;
  v31 = v51;
  (*(void (**)(char *, _QWORD, uint64_t))(v49 + 104))(v48, *MEMORY[0x24BDF5098], v51);
  v32 = v46;
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))((char *)v46 + *(int *)(v47 + 36), v30, v31);
  *v32 = v28;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
  LODWORD(v31) = sub_2414B3B44();
  v33 = v50;
  sub_2412DC3FC((uint64_t)v32, v50, &qword_2571265B0);
  v35 = (uint64_t)v53;
  v34 = v54;
  v36 = (uint64_t *)&v53[*(int *)(v54 + 56)];
  *v36 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  swift_storeEnumTagMultiPayload();
  sub_2412EAEA4(v33, v35, &qword_2571265B0);
  *(_DWORD *)(v35 + *(int *)(v34 + 52)) = v31;
  v37 = v55;
  sub_2412EAEA4(v35, v55, &qword_2571265A8);
  sub_2412DC3FC(v37, (uint64_t)&v13[*(int *)(v52 + 36)], &qword_2571265A8);
  v39 = v44;
  v38 = v45;
  *(_QWORD *)v13 = v44;
  *((_QWORD *)v13 + 1) = v26;
  v13[16] = v14;
  *((_QWORD *)v13 + 3) = v38;
  sub_241307638(v39, v26, v14);
  swift_bridgeObjectRetain();
  sub_2412CBE78(v37, &qword_2571265A8);
  sub_2412CBE78((uint64_t)v32, &qword_2571265B0);
  sub_2412F6D78(v39, v26, v14);
  swift_bridgeObjectRelease();
  v40 = v56;
  sub_2412DC3FC((uint64_t)v13, v56, &qword_2571265B8);
  v41 = (uint64_t (**)())(v40 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257129198) + 36));
  *v41 = sub_2413EC5C8;
  v41[1] = 0;
  return sub_2412CBE78((uint64_t)v13, &qword_2571265B8);
}

uint64_t sub_2414474CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_2414470AC(*v1, v1[1], a1);
}

uint64_t sub_2414474DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  void (*v15)(_BYTE *, uint64_t);
  char v16;
  uint64_t v17;
  uint64_t result;
  _BYTE v19[15];
  char v20;
  char v21;
  uint64_t v22;

  v7 = sub_2414B2F44();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v19[-v12];
  _s21LegacyTimeControlViewVMa(0, a3, a4, v14);
  sub_2412C8890((uint64_t)v13);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BDEB1E0], v7);
  LOBYTE(a4) = sub_2414B2F38();
  v15 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
  v15(v10, v7);
  v15(v13, v7);
  v16 = *(_BYTE *)(a2 + 32);
  v17 = *(_QWORD *)(a2 + 40);
  if ((a4 & 1) != 0)
  {
    v21 = *(_BYTE *)(a2 + 32);
    v22 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543813E8);
    result = sub_2414B47A4();
    if ((v20 & 1) != 0)
      return result;
    v21 = v16;
    v22 = v17;
    v20 = 1;
  }
  else
  {
    v21 = *(_BYTE *)(a2 + 32);
    v22 = v17;
    v20 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543813E8);
  }
  return sub_2414B47B0();
}

uint64_t sub_24144765C(unsigned __int8 *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  uint64_t v6;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  v5 = *(unsigned __int8 *)(v3 + 16);
  *(_BYTE *)(v3 + 16) = v2;
  if (v2 != v5)
  {
    type metadata accessor for NowPlayingViewModel.PlaybackPosition();
    sub_2412F0B40(&qword_25437ECC0, v6, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PlaybackPosition, (uint64_t)&protocol conformance descriptor for NowPlayingViewModel.PlaybackPosition);
    sub_2414B2DA0();
    sub_2414B2DE8();
    return swift_release();
  }
  return result;
}

uint64_t sub_2414476E8(char a1)
{
  uint64_t v1;
  int v3;
  uint64_t result;
  int v5;
  uint64_t v6;

  v3 = a1 & 1;
  result = swift_beginAccess();
  v5 = *(unsigned __int8 *)(v1 + 16);
  *(_BYTE *)(v1 + 16) = a1;
  if (v5 != v3)
  {
    type metadata accessor for NowPlayingViewModel.PlaybackPosition();
    sub_2412F0B40(&qword_25437ECC0, v6, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PlaybackPosition, (uint64_t)&protocol conformance descriptor for NowPlayingViewModel.PlaybackPosition);
    sub_2414B2DA0();
    sub_2414B2DE8();
    return swift_release();
  }
  return result;
}

void (*sub_24144777C(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  swift_beginAccess();
  *((_BYTE *)v3 + 32) = *(_BYTE *)(v1 + 16);
  return sub_2414477DC;
}

void sub_2414477DC(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(unsigned __int8 *)(*(_QWORD *)a1 + 32);
  v4 = *(unsigned __int8 *)(v2 + 16);
  *(_BYTE *)(v2 + 16) = v3;
  if (v3 != v4)
  {
    type metadata accessor for NowPlayingViewModel.PlaybackPosition();
    sub_2412F0B40(&qword_25437ECC0, v5, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PlaybackPosition, (uint64_t)&protocol conformance descriptor for NowPlayingViewModel.PlaybackPosition);
    sub_2414B2DA0();
    sub_2414B2DE8();
    swift_release();
  }
  free(v1);
}

__n128 sub_241447860@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;
  __int128 v5;
  __n128 result;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_BYTE *)(v3 + 72);
  v5 = *(_OWORD *)(v3 + 40);
  *(_OWORD *)a2 = *(_OWORD *)(v3 + 24);
  *(_OWORD *)(a2 + 16) = v5;
  result = *(__n128 *)(v3 + 56);
  *(__n128 *)(a2 + 32) = result;
  *(_BYTE *)(a2 + 48) = v4;
  return result;
}

uint64_t sub_2414478B8(__int128 *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v11;
  __int128 v12;
  _OWORD v13[3];
  char v14;

  v2 = *((_QWORD *)a1 + 2);
  v11 = *a1;
  v12 = *(__int128 *)((char *)a1 + 24);
  v3 = *((_QWORD *)a1 + 5);
  v4 = *((_BYTE *)a1 + 48);
  v5 = *a2;
  swift_beginAccess();
  v6 = *(_BYTE *)(v5 + 72);
  *(_BYTE *)(v5 + 72) = v4;
  v7 = *(_OWORD *)(v5 + 24);
  *(_OWORD *)(v5 + 24) = v11;
  v8 = *(_OWORD *)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v2;
  v9 = *(_OWORD *)(v5 + 56);
  *(_OWORD *)(v5 + 48) = v12;
  v13[0] = v7;
  v13[1] = v8;
  *(_QWORD *)(v5 + 64) = v3;
  v13[2] = v9;
  v14 = v6;
  return sub_24144794C((uint64_t *)v13);
}

uint64_t sub_24144794C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t result;
  int v10;
  __int128 v11;
  uint64_t v12;
  _QWORD v13[3];
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _OWORD v18[3];
  char v19;

  v2 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = *((unsigned __int8 *)a1 + 48);
  result = swift_beginAccess();
  v10 = *(unsigned __int8 *)(v1 + 72);
  if (v10 == 2)
  {
    if (v8 == 2)
      return result;
LABEL_6:
    type metadata accessor for NowPlayingViewModel.PlaybackPosition();
    sub_2412F0B40(&qword_25437ECC0, v12, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PlaybackPosition, (uint64_t)&protocol conformance descriptor for NowPlayingViewModel.PlaybackPosition);
    sub_2414B2DA0();
    sub_2414B2DE8();
    return swift_release();
  }
  v11 = *(_OWORD *)(v1 + 40);
  v18[0] = *(_OWORD *)(v1 + 24);
  v18[1] = v11;
  v18[2] = *(_OWORD *)(v1 + 56);
  v19 = v10;
  if (v8 == 2)
    goto LABEL_6;
  v13[0] = v2;
  v13[1] = v3;
  v13[2] = v5;
  v14 = v4 & 1;
  v15 = v6;
  v16 = v7;
  v17 = v8 & 1;
  result = _s11MediaCoreUI19NowPlayingViewModelC16DurationSnapshotV2eeoiySbAE_AEtFZ_0((uint64_t)v18, (uint64_t)v13);
  if ((result & 1) == 0)
    goto LABEL_6;
  return result;
}

__n128 sub_241447A50@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v3;
  __int128 v4;
  __n128 result;

  swift_beginAccess();
  v3 = *(_BYTE *)(v1 + 72);
  v4 = *(_OWORD *)(v1 + 40);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 16) = v4;
  result = *(__n128 *)(v1 + 56);
  *(__n128 *)(a1 + 32) = result;
  *(_BYTE *)(a1 + 48) = v3;
  return result;
}

void (*sub_241447AA4(_QWORD *a1))(uint64_t **a1)
{
  uint64_t v1;
  _QWORD *v3;
  char v4;
  __int128 v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  swift_beginAccess();
  v4 = *(_BYTE *)(v1 + 72);
  v5 = *(_OWORD *)(v1 + 40);
  *(_OWORD *)v3 = *(_OWORD *)(v1 + 24);
  *((_OWORD *)v3 + 1) = v5;
  *((_OWORD *)v3 + 2) = *(_OWORD *)(v1 + 56);
  *((_BYTE *)v3 + 48) = v4;
  return sub_241447B18;
}

void sub_241447B18(uint64_t **a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  _QWORD v18[6];
  char v19;
  _QWORD v20[3];
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v1 = *a1;
  v2 = (*a1)[10];
  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = *((unsigned __int8 *)v1 + 48);
  v11 = *(_QWORD *)(v2 + 24);
  v10 = *(_QWORD *)(v2 + 32);
  v13 = *(_QWORD *)(v2 + 40);
  v12 = *(_QWORD *)(v2 + 48);
  v15 = *(_QWORD *)(v2 + 56);
  v14 = *(_QWORD *)(v2 + 64);
  v16 = *(unsigned __int8 *)(v2 + 72);
  *(_QWORD *)(v2 + 24) = *v1;
  *(_QWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 40) = v5;
  *(_QWORD *)(v2 + 48) = v6;
  *(_QWORD *)(v2 + 56) = v7;
  *(_QWORD *)(v2 + 64) = v8;
  *(_BYTE *)(v2 + 72) = v9;
  if (v9 == 2)
  {
    if (v16 != 2)
    {
LABEL_6:
      type metadata accessor for NowPlayingViewModel.PlaybackPosition();
      sub_2412F0B40(&qword_25437ECC0, v17, (uint64_t (*)(uint64_t))type metadata accessor for NowPlayingViewModel.PlaybackPosition, (uint64_t)&protocol conformance descriptor for NowPlayingViewModel.PlaybackPosition);
      sub_2414B2DA0();
      sub_2414B2DE8();
      swift_release();
    }
  }
  else
  {
    v18[0] = v3;
    v18[1] = v4;
    v18[2] = v5;
    v18[3] = v6;
    v18[4] = v7;
    v18[5] = v8;
    v19 = v9;
    if (v16 == 2)
      goto LABEL_6;
    v20[0] = v11;
    v20[1] = v10;
    v20[2] = v13;
    v21 = v12 & 1;
    v22 = v15;
    v23 = v14;
    v24 = v16 & 1;
    if ((_s11MediaCoreUI19NowPlayingViewModelC16DurationSnapshotV2eeoiySbAE_AEtFZ_0((uint64_t)v18, (uint64_t)v20) & 1) == 0)
      goto LABEL_6;
  }
  free(v1);
}

BOOL sub_241447C18()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_BYTE *)(v0 + 72) == 2 || *(double *)(v0 + 64) == 0.0;
}

double sub_241447C64()
{
  uint64_t v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;

  swift_beginAccess();
  v1 = 0.0;
  if (*(_BYTE *)(v0 + 72) != 2)
  {
    v3 = *(double *)(v0 + 56);
    v2 = *(double *)(v0 + 64);
    v5 = *(double *)(v0 + 24);
    v4 = *(double *)(v0 + 32);
    sub_2414B2AAC();
    v7 = v5 + v2 * (v6 - v3);
    if (v4 < v7)
      v7 = v4;
    if (v7 >= 0.0)
      return v7;
  }
  return v1;
}

uint64_t sub_241447CF8()
{
  swift_retain();
  sub_2414B2DAC();
  return swift_release();
}

uint64_t NowPlayingViewModel.PlaybackPosition.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t NowPlayingViewModel.PlaybackPosition.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_241447D88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for NowPlayingViewModel.PlaybackPosition();
  result = sub_2414B2DA0();
  *a1 = result;
  return result;
}

uint64_t sub_241447DC0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t result;
  uint64_t v4;

  v0 = sub_2414B2B48();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_2414B4D38();
  MEMORY[0x24BDAC7A8](v1);
  sub_2414B4CF0();
  if (qword_2543846C8 != -1)
    swift_once();
  v2 = (id)qword_25438E910;
  sub_2414B2B3C();
  result = sub_2414B4D80();
  qword_25438E880 = result;
  *(_QWORD *)algn_25438E888 = v4;
  return result;
}

void sub_241447ED4()
{
  int64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14[2];
  uint64_t v15;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  swift_release();
  v0 = *(_QWORD *)(v14[0] + 16);
  if (v0)
  {
    v15 = MEMORY[0x24BEE4AF8];
    sub_2412FD870(0, v0, 0);
    v1 = v15;
    v2 = v14[0] + 48;
    do
    {
      v14[0] = 0;
      v14[1] = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_2414B5578();
      sub_2414B4DF8();
      swift_bridgeObjectRetain();
      sub_2414B4DF8();
      swift_bridgeObjectRelease();
      sub_2414B4DF8();
      sub_2414B5098();
      sub_2414B4DF8();
      swift_bridgeObjectRelease();
      v15 = v1;
      v4 = *(_QWORD *)(v1 + 16);
      v3 = *(_QWORD *)(v1 + 24);
      if (v4 >= v3 >> 1)
      {
        sub_2412FD870(v3 > 1, v4 + 1, 1);
        v1 = v15;
      }
      *(_QWORD *)(v1 + 16) = v4 + 1;
      v5 = v1 + 16 * v4;
      *(_QWORD *)(v5 + 32) = 0;
      *(_QWORD *)(v5 + 40) = 0xE000000000000000;
      v2 += 24;
      --v0;
    }
    while (v0);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v1 = MEMORY[0x24BEE4AF8];
  }
  v14[0] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543814A0);
  sub_2412C8FC4((unint64_t *)&qword_2543814A8, &qword_2543814A0, MEMORY[0x24BEE12B0]);
  v6 = sub_2414B4CB4();
  v8 = v7;
  swift_bridgeObjectRelease();
  if (qword_2543809C0 != -1)
    swift_once();
  v9 = sub_2414B2CA4();
  __swift_project_value_buffer(v9, (uint64_t)qword_25438E7B8);
  swift_bridgeObjectRetain();
  v10 = sub_2414B2C8C();
  v11 = sub_2414B51B8();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v14[0] = v13;
    *(_DWORD *)v12 = 136446210;
    swift_bridgeObjectRetain();
    v15 = sub_2412E4890(v6, v8, v14);
    sub_2414B541C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2412C1000, v10, v11, "TimeControl received segments: [%{public}s]", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v13, -1, -1);
    MEMORY[0x242695BD8](v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_241448288()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_2414482F8()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    _s11TimeControlCMa();
    sub_2412F0B40(&qword_25437EA10, 255, (uint64_t (*)(uint64_t))_s11TimeControlCMa, (uint64_t)&unk_2414C7AF4);
    sub_2414B2DA0();
    swift_release();
    sub_2414B2DE8();
    return swift_release();
  }
  return result;
}

uint64_t sub_241448394(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_2414483B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel11TimeControl__segments;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DA90);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_241448468@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  _s11TimeControlCMa();
  result = sub_2414B2DA0();
  *a1 = result;
  return result;
}

double NowPlayingViewModel.DurationSnapshot.elapsedDuration.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double NowPlayingViewModel.DurationSnapshot.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t NowPlayingViewModel.DurationSnapshot.bufferedDuration.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

double NowPlayingViewModel.DurationSnapshot.snapshotTime.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double NowPlayingViewModel.DurationSnapshot.rate.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

uint64_t NowPlayingViewModel.DurationSnapshot.isLoading.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t NowPlayingViewModel.DurationSnapshot.init(elapsedDuration:duration:snapshotTime:rate:isLoading:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  *(double *)a2 = a3;
  *(double *)(a2 + 8) = a4;
  *(_QWORD *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 24) = 1;
  *(double *)(a2 + 32) = a5;
  *(double *)(a2 + 40) = a6;
  *(_BYTE *)(a2 + 48) = result;
  return result;
}

uint64_t NowPlayingViewModel.DurationSnapshot.debugDescription.getter()
{
  sub_2414B5578();
  sub_2414B4DF8();
  sub_2414B5098();
  sub_2414B4DF8();
  sub_2414B5098();
  sub_2414B4DF8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841F8);
  sub_2414B4D8C();
  sub_2414B4DF8();
  swift_bridgeObjectRelease();
  sub_2414B4DF8();
  sub_2414B5098();
  sub_2414B4DF8();
  sub_2414B5098();
  sub_2414B4DF8();
  sub_2414B4DF8();
  swift_bridgeObjectRelease();
  sub_2414B4DF8();
  return 0;
}

double sub_24144872C()
{
  double result;

  result = 5.0;
  xmmword_254383D68 = xmmword_2414C7990;
  *(_OWORD *)&qword_254383D78 = xmmword_2414C7990;
  return result;
}

void sub_241448744()
{
  qword_254383D98 = 0x4045000000000000;
}

uint64_t _s11MediaCoreUI19NowPlayingViewModelC16DurationSnapshotV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  double v3;
  double v4;
  double v5;
  double v6;
  BOOL v8;

  if (*(double *)a1 != *(double *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8))
    return 0;
  v4 = *(double *)(a1 + 32);
  v3 = *(double *)(a1 + 40);
  v6 = *(double *)(a2 + 32);
  v5 = *(double *)(a2 + 40);
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 24))
      return 0;
    if (v4 != v6 || v3 != v5)
      return 0;
  }
  else
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
      return 0;
    v8 = *(double *)(a1 + 16) == *(double *)(a2 + 16) && v4 == v6;
    if (!v8 || v3 != v5)
      return 0;
  }
  return *(unsigned __int8 *)(a1 + 48) ^ *(unsigned __int8 *)(a2 + 48) ^ 1u;
}

uint64_t sub_2414487C8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

uint64_t method lookup function for NowPlayingViewModel.PlaybackPosition()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NowPlayingViewModel.PlaybackPosition.isLive.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of NowPlayingViewModel.PlaybackPosition.isLive.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of NowPlayingViewModel.PlaybackPosition.isLive.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of NowPlayingViewModel.PlaybackPosition.snapshot.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of NowPlayingViewModel.PlaybackPosition.snapshot.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of NowPlayingViewModel.PlaybackPosition.isPaused.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of NowPlayingViewModel.PlaybackPosition.elapsedTime(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of NowPlayingViewModel.PlaybackPosition.notifyJumped(by:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t sub_241448884()
{
  return _s11TimeControlCMa();
}

void sub_24144888C()
{
  unint64_t v0;

  sub_241448924();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_241448924()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25437DA98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25437DC48);
    v0 = sub_2414B2E54();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25437DA98);
  }
}

uint64_t _s16DurationSnapshotVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 48);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

ValueMetadata *type metadata accessor for NowPlayingViewModel.TimeControlAction()
{
  return &type metadata for NowPlayingViewModel.TimeControlAction;
}

uint64_t sub_2414489E8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_241448A0C()
{
  return sub_2414482F8();
}

uint64_t sub_241448A14()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t _s15TimeControlViewVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s15TimeControlViewVMn);
}

uint64_t sub_241448A44()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t _s21LegacyTimeControlViewVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s21LegacyTimeControlViewVMn);
}

uint64_t _s20FluidTimeControlViewVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s20FluidTimeControlViewVMn);
}

uint64_t sub_241448A90()
{
  return swift_deallocObject();
}

void sub_241448AB8()
{
  unint64_t v0;
  unint64_t v1;

  sub_241324D88(319, &qword_2543841B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDF42C0]);
  if (v0 <= 0x3F)
  {
    sub_241324D88(319, &qword_254380B50, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB1F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_241448B84(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  void (*v20)(uint64_t, uint64_t, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v9 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v9;
    *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
    v10 = *(int *)(a3 + 48);
    v11 = a1 + v10;
    v12 = (uint64_t)a2 + v10;
    *(_QWORD *)(a1 + 64) = a2[8];
    v13 = sub_2414B2B00();
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    v20(v11, v12, v13);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543841B0);
    *(_QWORD *)(v11 + *(int *)(v14 + 28)) = *(_QWORD *)(v12 + *(int *)(v14 + 28));
    v15 = *(int *)(a3 + 52);
    v16 = (_QWORD *)(v7 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = sub_2414B2F44();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v7;
}

uint64_t sub_241448D24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 48);
  v5 = sub_2414B2B00();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841B0);
  swift_release();
  v6 = a1 + *(int *)(a2 + 52);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v7 = sub_2414B2F44();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_241448DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v8 = *(int *)(a3 + 48);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v11 = sub_2414B2B00();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  v12(v9, v10, v11);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543841B0);
  *(_QWORD *)(v9 + *(int *)(v13 + 28)) = *(_QWORD *)(v10 + *(int *)(v13 + 28));
  v14 = *(int *)(a3 + 52);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = sub_2414B2F44();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    *v15 = *v16;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_241448F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  v7 = *(int *)(a3 + 48);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2414B2B00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543841B0);
  *(_QWORD *)(v8 + *(int *)(v11 + 28)) = *(_QWORD *)(v9 + *(int *)(v11 + 28));
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v12 = *(int *)(a3 + 52);
    v13 = (_QWORD *)(a1 + v12);
    v14 = (_QWORD *)(a2 + v12);
    sub_2412CBE78(a1 + v12, &qword_254380B48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_2414B2F44();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_241449100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v8 = *(int *)(a3 + 48);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_2414B2B00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543841B0);
  *(_QWORD *)(v9 + *(int *)(v12 + 28)) = *(_QWORD *)(v10 + *(int *)(v12 + 28));
  v13 = *(int *)(a3 + 52);
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = sub_2414B2F44();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  return a1;
}

uint64_t sub_24144920C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release();
  v7 = *(int *)(a3 + 48);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2414B2B00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543841B0);
  *(_QWORD *)(v8 + *(int *)(v11 + 28)) = *(_QWORD *)(v9 + *(int *)(v11 + 28));
  swift_release();
  if (a1 != a2)
  {
    v12 = *(int *)(a3 + 52);
    v13 = (void *)(a1 + v12);
    v14 = (const void *)(a2 + v12);
    sub_2412CBE78(a1 + v12, &qword_254380B48);
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_2414B2F44();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_241449380()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24144938C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543841B0);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 48);
    }
    else
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(qword_257127BF8);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 52);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a1[v12], a2, v11);
  }
}

uint64_t sub_241449440()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_24144944C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)result = a2;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543841B0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 48);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(qword_257127BF8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 52);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t sub_2414494F0(uint64_t a1)
{
  swift_release();
  swift_unknownObjectRelease();
  return sub_2412C8228(*(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
}

uint64_t sub_241449524(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(unsigned __int8 *)(a2 + 40);
  swift_retain();
  swift_unknownObjectRetain();
  sub_2412C6F44(v5, v6);
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = v6;
  return a1;
}

uint64_t sub_241449584(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(unsigned __int8 *)(a2 + 40);
  sub_2412C6F44(v4, v5);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(unsigned __int8 *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = v5;
  sub_2412C8228(v6, v7);
  return a1;
}

uint64_t sub_241449618(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_unknownObjectRelease();
  v5 = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(unsigned __int8 *)(a1 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = v5;
  sub_2412C8228(v6, v7);
  return a1;
}

uint64_t sub_241449678(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 41))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_2414496D4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_241449734(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  v4 = *a1;
  v5 = a1[1];
  v6 = _s20FluidTimeControlViewVMa(255, *a1, v5, a4);
  v8 = _s21LegacyTimeControlViewVMa(255, v4, v5, v7);
  v9 = sub_2414B3A90();
  v11[0] = MEMORY[0x242695AE8](&unk_2414C7D00, v6);
  v11[1] = MEMORY[0x242695AE8](&unk_2414C7D50, v8);
  return MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v9, v11);
}

uint64_t sub_2414497D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24144980C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t _s21LegacyTimeControlViewV9TimedViewVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s21LegacyTimeControlViewV9TimedViewVMn);
}

unint64_t sub_24144984C()
{
  unint64_t result;

  result = qword_254383DB0;
  if (!qword_254383DB0)
  {
    result = MEMORY[0x242695AE8](&unk_2414BCE3C, &type metadata for MCUIText);
    atomic_store(result, (unint64_t *)&qword_254383DB0);
  }
  return result;
}

unint64_t sub_241449890()
{
  unint64_t result;

  result = qword_254383D20;
  if (!qword_254383D20)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for ContentBelowSliderStyle, &type metadata for ContentBelowSliderStyle);
    atomic_store(result, (unint64_t *)&qword_254383D20);
  }
  return result;
}

uint64_t _s21LegacyTimeControlViewV39TimeControlViewStateObservationModifierVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s21LegacyTimeControlViewV39TimeControlViewStateObservationModifierVMn);
}

uint64_t _s21LegacyTimeControlViewV36TimeControlViewAccessibilityModifierVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s21LegacyTimeControlViewV36TimeControlViewAccessibilityModifierVMn);
}

uint64_t sub_2414498EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = _s21LegacyTimeControlViewVMa(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  swift_release();
  v7 = v4 + ((v6 + 40) & ~v6);
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  v8 = v7 + *(int *)(v5 + 48);
  v9 = sub_2414B2B00();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841B0);
  swift_release();
  v10 = v7 + *(int *)(v5 + 52);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2414B2F44();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_241449A04@<X0>(void (*a1)(char *, uint64_t *, uint64_t)@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = v3[2];
  v7 = v3[3];
  v8 = *(unsigned __int8 *)(*(_QWORD *)(_s21LegacyTimeControlViewVMa(0, v6, v7, a2) - 8) + 80);
  return sub_241442C7C(a1, v3[4], (_QWORD *)((char *)v3 + ((v8 + 40) & ~v8)), v6, v7, a3);
}

uint64_t sub_241449A70@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_241441738(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_241449A7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383E10);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  v8 = _s21LegacyTimeControlViewVMa(0, v1, v2, v7);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v3);
  v10 = v0 + ((v6 + v9) & ~v9);
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  v11 = v10 + *(int *)(v8 + 48);
  v12 = sub_2414B2B00();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841B0);
  swift_release();
  v13 = v10 + *(int *)(v8 + 52);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_2414B2F44();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_241449BE8@<X0>(double *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = v1[4];
  v4 = v1[5];
  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254383E10) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v6 + *(_QWORD *)(v5 + 64);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(_s21LegacyTimeControlViewVMa(0, v3, v4, v8) - 8) + 80);
  return sub_241443EFC(v1[6], (uint64_t)v1 + v6, (uint64_t)v1 + ((v7 + v9) & ~v9), v3, v4, a1);
}

uint64_t sub_241449C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = _s21LegacyTimeControlViewVMa(0, *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), a4);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  swift_unknownObjectRelease();
  v7 = v4 + ((v6 + 48) & ~v6);
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  v8 = v7 + *(int *)(v5 + 48);
  v9 = sub_2414B2B00();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841B0);
  swift_release();
  v10 = v7 + *(int *)(v5 + 52);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2414B2F44();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_241449D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  _s21LegacyTimeControlViewVMa(0, *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), a4);
  return sub_2414441A0();
}

uint64_t sub_241449DEC()
{
  return sub_241449E04((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_241444268);
}

uint64_t sub_241449DF8()
{
  return sub_241449E04((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2414442F8);
}

uint64_t sub_241449E04(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[4], v1[5], v1[6], v1[7], v1[2], v1[3]);
}

unint64_t sub_241449E18()
{
  unint64_t result;

  result = qword_2543841E0;
  if (!qword_2543841E0)
  {
    result = MEMORY[0x242695AE8](MEMORY[0x24BEE13D0], MEMORY[0x24BEE13C8]);
    atomic_store(result, (unint64_t *)&qword_2543841E0);
  }
  return result;
}

uint64_t sub_241449E5C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_2414019D0();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

uint64_t sub_241449EA8()
{
  sub_2414019D0();
  return sub_2414B3844();
}

uint64_t sub_241449EF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_241444CD4(v1, a1);
}

uint64_t sub_241449F00(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t sub_241449F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(_s21LegacyTimeControlViewVMa(0, v6, v7, a4) - 8) + 80);
  return sub_2414474DC(a1, v4 + ((v8 + 32) & ~v8), v6, v7);
}

uint64_t objectdestroy_42Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = _s21LegacyTimeControlViewVMa(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = v4 + ((v6 + 32) & ~v6);
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  v8 = v7 + *(int *)(v5 + 48);
  v9 = sub_2414B2B00();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841B0);
  swift_release();
  v10 = v7 + *(int *)(v5 + 52);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2414B2F44();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_24144A098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  _s21LegacyTimeControlViewVMa(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813E8);
  return sub_2414B47B0();
}

unint64_t sub_24144A108()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_254383BD0;
  if (!qword_254383BD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383BC8);
    v2 = sub_24144A16C();
    result = MEMORY[0x242695AE8](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254383BD0);
  }
  return result;
}

unint64_t sub_24144A16C()
{
  unint64_t result;

  result = qword_254383BC0;
  if (!qword_254383BC0)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingViewModel.DurationSnapshot, &type metadata for NowPlayingViewModel.DurationSnapshot);
    atomic_store(result, (unint64_t *)&qword_254383BC0);
  }
  return result;
}

uint64_t sub_24144A1B0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  sub_2412C8228(*(_QWORD *)(v0 + 128), *(unsigned __int8 *)(v0 + 136));
  return swift_deallocObject();
}

uint64_t sub_24144A1F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_241440F5C(a1, v2 + 32, *(_QWORD *)(v2 + 88), (_OWORD *)(v2 + 96), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_24144A204(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(unsigned __int8 *)(a1 + 40);
  swift_unknownObjectRetain();
  swift_retain();
  sub_2412C6F44(v2, v3);
  return a1;
}

uint64_t sub_24144A254@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_241442040(*(_QWORD **)(v1 + 32), a1);
}

uint64_t sub_24144A260(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_2412F6D78(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24144A298()
{
  uint64_t v0;

  swift_release();
  swift_unknownObjectRelease();
  sub_2412C8228(*(_QWORD *)(v0 + 64), *(unsigned __int8 *)(v0 + 72));
  return swift_deallocObject();
}

uint64_t sub_24144A2D0(uint64_t a1)
{
  uint64_t *v1;

  return sub_24144188C(a1, v1 + 4, v1[2], v1[3]);
}

uint64_t sub_24144A2DC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_24144A300()
{
  uint64_t v0;

  sub_241441B80(v0 + 16, *(_QWORD *)(v0 + 72));
}

void sub_24144A30C(Swift::Double *a1)
{
  ScrubberProxy.notifyJumped(by:)(*a1);
}

void sub_24144A314(char *a1)
{
  sub_241441E80(a1);
}

uint64_t sub_24144A31C()
{
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_24144A344(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_retain();
  swift_unknownObjectRetain();
  return a1;
}

_QWORD *sub_24144A388(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

_QWORD *sub_24144A3FC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_release();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_unknownObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t sub_24144A450(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_24144A4AC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

void sub_24144A508()
{
  unint64_t v0;
  unint64_t v1;

  sub_241324D88(319, &qword_254380B50, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB1F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    sub_241324D88(319, qword_257129110, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_24144A5D8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    a1[3] = a2[3];
    v9 = a3[10];
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    swift_retain();
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2414B2F44();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v13 = a3[11];
    v14 = a3[12];
    v15 = (char *)v7 + v13;
    v16 = (char *)a2 + v13;
    v17 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    v15[16] = v16[16];
    v18 = (uint64_t *)((char *)v7 + v14);
    v19 = (char *)a2 + v14;
    v20 = *(uint64_t *)((char *)a2 + v14 + 8);
    *v18 = *(uint64_t *)((char *)a2 + v14);
    v18[1] = v20;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257128FF8) + 32);
    v22 = (char *)v18 + v21;
    v23 = &v19[v21];
    v24 = sub_2414B2B00();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    v25 = a3[13];
    v26 = (char *)v7 + v25;
    v27 = (char *)a2 + v25;
    v28 = *((_QWORD *)v27 + 1);
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *((_QWORD *)v26 + 1) = v28;
    *((_QWORD *)v26 + 2) = *((_QWORD *)v27 + 2);
    v26[24] = v27[24];
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t sub_24144A784(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_release();
  swift_unknownObjectRelease();
  v4 = a1 + *(int *)(a2 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2414B2F44();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  v6 = a1 + *(int *)(a2 + 48);
  swift_release();
  swift_release();
  v7 = v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257128FF8) + 32);
  v8 = sub_2414B2B00();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_release();
  return swift_release();
}

_QWORD *sub_24144A880(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[10];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  swift_retain();
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2414B2F44();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v12 = a3[11];
  v13 = a3[12];
  v14 = (char *)a1 + v12;
  v15 = (char *)a2 + v12;
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v14[16] = v15[16];
  v17 = (_QWORD *)((char *)a1 + v13);
  v18 = (char *)a2 + v13;
  v19 = *(_QWORD *)((char *)a2 + v13 + 8);
  *v17 = *(_QWORD *)((char *)a2 + v13);
  v17[1] = v19;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257128FF8) + 32);
  v21 = (char *)v17 + v20;
  v22 = &v18[v20];
  v23 = sub_2414B2B00();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  v24 = a3[13];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = *((_QWORD *)v26 + 1);
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *((_QWORD *)v25 + 1) = v27;
  *((_QWORD *)v25 + 2) = *((_QWORD *)v26 + 2);
  v25[24] = v26[24];
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_24144AA00(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = a2[3];
  if (a1 != a2)
  {
    v6 = a3[10];
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_2412CBE78((uint64_t)a1 + v6, &qword_254380B48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2414B2F44();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v10 = a3[11];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);
  swift_retain();
  swift_release();
  *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
  swift_retain();
  swift_release();
  v11[16] = v12[16];
  v13 = a3[12];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);
  swift_retain();
  swift_release();
  *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
  swift_retain();
  swift_release();
  v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257128FF8) + 32);
  v17 = &v14[v16];
  v18 = &v15[v16];
  v19 = sub_2414B2B00();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  v20 = a3[13];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  *(_QWORD *)((char *)a1 + v20) = *(_QWORD *)((char *)a2 + v20);
  swift_retain();
  swift_release();
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  swift_retain();
  swift_release();
  v23 = *((_QWORD *)v22 + 2);
  v21[24] = v22[24];
  *((_QWORD *)v21 + 2) = v23;
  return a1;
}

_OWORD *sub_24144AC08(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[10];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2414B2F44();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  v12 = a3[11];
  v13 = a3[12];
  v14 = (char *)a1 + v12;
  v15 = (char *)a2 + v12;
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v14[16] = v15[16];
  v16 = (_QWORD *)((char *)a1 + v13);
  v17 = (char *)a2 + v13;
  v18 = *(_QWORD *)((char *)a2 + v13);
  v19 = *(_QWORD *)((char *)a2 + v13 + 8);
  *v16 = v18;
  v16[1] = v19;
  v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257128FF8) + 32);
  v21 = (char *)v16 + v20;
  v22 = &v17[v20];
  v23 = sub_2414B2B00();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
  v24 = a3[13];
  v25 = (_OWORD *)((char *)a1 + v24);
  v26 = (_OWORD *)((char *)a2 + v24);
  *v25 = *v26;
  *(_OWORD *)((char *)v25 + 9) = *(_OWORD *)((char *)v26 + 9);
  return a1;
}

_QWORD *sub_24144AD40(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;

  *a1 = *a2;
  swift_release();
  v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_unknownObjectRelease();
  a1[3] = a2[3];
  if (a1 != a2)
  {
    v7 = a3[10];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_2412CBE78((uint64_t)a1 + v7, &qword_254380B48);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_2414B2F44();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  v12 = a3[11];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  swift_release();
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_release();
  v13[16] = v14[16];
  v15 = a3[12];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  *(_QWORD *)((char *)a1 + v15) = *(_QWORD *)((char *)a2 + v15);
  swift_release();
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  swift_release();
  v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257128FF8) + 32);
  v19 = &v16[v18];
  v20 = &v17[v18];
  v21 = sub_2414B2B00();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  v22 = a3[13];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  *(_QWORD *)((char *)a1 + v22) = *(_QWORD *)v24;
  swift_release();
  *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
  swift_release();
  *((_QWORD *)v23 + 2) = *((_QWORD *)v24 + 2);
  v23[24] = v24[24];
  return a1;
}

uint64_t sub_24144AF04()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24144AF10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_257127BF8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[10];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257128FF8);
    v7 = *(_QWORD *)(v8 - 8);
    v9 = a3[12];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = *(_QWORD *)(a1 + a3[11] + 8);
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  return (v10 + 1);
}

uint64_t sub_24144AFC0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24144AFCC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = __swift_instantiateConcreteTypeFromMangledName(qword_257127BF8);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[10];
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[11] + 8) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257128FF8);
    v9 = *(_QWORD *)(v10 - 8);
    v11 = a4[12];
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

uint64_t sub_24144B078(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t OpaqueTypeConformance2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  uint64_t v38;
  _QWORD v39[2];
  _QWORD v40[2];
  _QWORD v41[2];
  _QWORD v42[2];
  _QWORD v43[2];
  _QWORD v44[2];
  _QWORD v45[2];
  _QWORD v46[2];
  _QWORD v47[2];
  uint64_t v48;
  ValueMetadata *v49;
  uint64_t v50;
  unint64_t v51;

  v1 = *a1;
  v2 = a1[1];
  v35 = v2;
  v36 = *a1;
  sub_2414B3C94();
  v4 = _s21LegacyTimeControlViewV9TimedViewVMa(255, v1, v2, v3);
  sub_24144984C();
  MEMORY[0x242695AE8](&unk_2414C7FA8, v4);
  v5 = sub_2414B4864();
  v6 = MEMORY[0x242695AE8](MEMORY[0x24BDF4608], v5);
  v7 = sub_241449890();
  v48 = v5;
  v49 = &type metadata for ContentBelowSliderStyle;
  v50 = v6;
  v51 = v7;
  MEMORY[0x242695A94](255, &v48, MEMORY[0x24BDF2438], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381330);
  v8 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543812A0);
  v9 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2543812E0);
  v10 = sub_2414B3514();
  v11 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254384168);
  v12 = sub_2414B3514();
  v33 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383E20);
  v48 = v5;
  v49 = &type metadata for ContentBelowSliderStyle;
  v50 = v6;
  v51 = v7;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v14 = MEMORY[0x24BDF1028];
  v47[0] = OpaqueTypeConformance2;
  v47[1] = sub_2412C8FC4((unint64_t *)&qword_254381328, &qword_254381330, MEMORY[0x24BDF1028]);
  v15 = MEMORY[0x24BDED308];
  v46[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v8, v47);
  v46[1] = sub_2412C8FC4(&qword_254381298, &qword_2543812A0, v14);
  v45[0] = MEMORY[0x242695AE8](v15, v9, v46);
  v45[1] = sub_2412C8FC4((unint64_t *)&unk_2543812D0, (uint64_t *)&unk_2543812E0, v14);
  v44[0] = MEMORY[0x242695AE8](v15, v10, v45);
  v44[1] = MEMORY[0x24BDEBEE0];
  v43[0] = MEMORY[0x242695AE8](v15, v11, v44);
  v43[1] = sub_2412C8FC4(&qword_254384160, &qword_254384168, v14);
  v34 = v12;
  v32 = MEMORY[0x242695AE8](v15, v12, v43);
  v16 = sub_2412C8FC4(&qword_254383E18, &qword_254383E20, MEMORY[0x24BDEC410]);
  v48 = v12;
  v49 = (ValueMetadata *)v33;
  v50 = v32;
  v51 = v16;
  MEMORY[0x242695A94](255, &v48, MEMORY[0x24BDF2E88], 0);
  v18 = _s21LegacyTimeControlViewV39TimeControlViewStateObservationModifierVMa(255, v36, v35, v17);
  v19 = sub_2414B3514();
  v20 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383FB8);
  v31 = sub_2414B3514();
  v22 = _s21LegacyTimeControlViewV36TimeControlViewAccessibilityModifierVMa(255, v36, v35, v21);
  v30 = sub_2414B3514();
  sub_2412F0B40(&qword_254384110, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDF0768], MEMORY[0x24BDF0760]);
  v23 = sub_2414B3148();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v24 = sub_2414B3604();
  v25 = sub_2414B3514();
  v48 = v34;
  v49 = (ValueMetadata *)v33;
  v50 = v32;
  v51 = v16;
  v42[0] = swift_getOpaqueTypeConformance2();
  v42[1] = MEMORY[0x242695AE8](&unk_2414C7F58, v18);
  v26 = MEMORY[0x24BDED308];
  v41[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v19, v42);
  v41[1] = MEMORY[0x24BDECC38];
  v27 = MEMORY[0x242695AE8](v26, v20, v41);
  v28 = MEMORY[0x24BDEDC10];
  v40[0] = v27;
  v40[1] = sub_2412C8FC4(&qword_254383FB0, &qword_254383FB8, MEMORY[0x24BDEDC10]);
  v39[0] = MEMORY[0x242695AE8](v26, v31, v40);
  v39[1] = MEMORY[0x242695AE8](&unk_2414C7F08, v22);
  v38 = MEMORY[0x242695AE8](v26, v30, v39);
  v37[0] = MEMORY[0x242695AE8](MEMORY[0x24BDEBD40], v23, &v38);
  v37[1] = MEMORY[0x242695AE8](v28, v24);
  return MEMORY[0x242695AE8](v26, v25, v37);
}

uint64_t sub_24144B5AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t OpaqueTypeConformance2;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[2];
  _QWORD v31[2];
  _QWORD v32[2];
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;

  v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_254381838);
  v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257129000);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = type metadata accessor for Scrubber(255, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383BC8);
  v7 = MEMORY[0x242695AE8](&protocol conformance descriptor for Scrubber<A>, v5);
  v8 = sub_24144A108();
  v34 = v5;
  v35 = v6;
  v36 = v7;
  v37 = v8;
  v9 = MEMORY[0x242695A94](255, &v34, MEMORY[0x24BDF3908], 0);
  v10 = sub_2412C8FC4(qword_257129008, &qword_257129000, MEMORY[0x24BDB9AF8]);
  v34 = v5;
  v35 = v6;
  v36 = v7;
  v37 = v8;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v34 = v1;
  v35 = v9;
  v36 = v10;
  v37 = OpaqueTypeConformance2;
  v12 = sub_2414B35E0();
  v13 = sub_2412C8FC4(&qword_2571266A0, (uint64_t *)&unk_254381838, MEMORY[0x24BDB9CB0]);
  v14 = MEMORY[0x24BDEDA68];
  v15 = MEMORY[0x242695AE8](MEMORY[0x24BDEDA68], v12);
  v34 = v0;
  v35 = v12;
  v36 = v13;
  v37 = v15;
  v16 = sub_2414B35E0();
  v17 = MEMORY[0x242695AE8](v14, v16);
  v19 = type metadata accessor for ScrubberReader(255, v16, v17, v18);
  v20 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383FB8);
  v21 = sub_2414B3514();
  sub_2414B3DB4();
  v22 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v23 = sub_2414B3514();
  v24 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257122240);
  v33[0] = MEMORY[0x242695AE8](&protocol conformance descriptor for ScrubberReader<A>, v19);
  v33[1] = MEMORY[0x24BDECC38];
  v25 = MEMORY[0x24BDED308];
  v32[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v20, v33);
  v32[1] = sub_2412C8FC4(&qword_254383FB0, &qword_254383FB8, MEMORY[0x24BDEDC10]);
  v31[0] = MEMORY[0x242695AE8](v25, v21, v32);
  v31[1] = sub_2412F0B40((unint64_t *)&qword_2543844B0, 255, v22, MEMORY[0x24BDF1078]);
  v26 = MEMORY[0x242695AE8](v25, v23, v31);
  v27 = sub_2412C8FC4(&qword_257122248, &qword_257122240, MEMORY[0x24BEE30C8]);
  v34 = v23;
  v35 = v24;
  v36 = v26;
  v37 = v27;
  MEMORY[0x242695A94](255, &v34, MEMORY[0x24BDF2800], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381330);
  v28 = sub_2414B3514();
  v34 = v23;
  v35 = v24;
  v36 = v26;
  v37 = v27;
  v30[0] = swift_getOpaqueTypeConformance2();
  v30[1] = sub_2412C8FC4((unint64_t *)&qword_254381328, &qword_254381330, MEMORY[0x24BDF1028]);
  return MEMORY[0x242695AE8](v25, v28, v30);
}

uint64_t sub_24144B938()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24144B96C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24144B9A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24144B9D8(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3;
    result = MEMORY[0x242695AE8](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24144BA38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24144BBC8((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_241445B1C, a2, a3, a4);
}

uint64_t sub_24144BA48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24144BBC8((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_241445DB4, a2, a3, a4);
}

uint64_t sub_24144BA58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24144BBC8((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_241445E80, a2, a3, a4);
}

uint64_t sub_24144BA68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24144BBC8(sub_241445FF0, a2, a3, a4);
}

uint64_t objectdestroy_68Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = _s21LegacyTimeControlViewV39TimeControlViewStateObservationModifierVMa(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = v4
     + ((*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80));
  swift_release();
  swift_unknownObjectRelease();
  v7 = v6 + *(int *)(v5 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2414B2F44();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  v9 = v6 + *(int *)(v5 + 48);
  swift_release();
  swift_release();
  v10 = v9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257128FF8) + 32);
  v11 = sub_2414B2B00();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24144BBBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24144BBC8((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_241446100, a2, a3, a4);
}

uint64_t sub_24144BBC8(uint64_t (*a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(_s21LegacyTimeControlViewV39TimeControlViewStateObservationModifierVMa(0, v5, v6, a4)- 8)+ 80);
  return a1(v4 + ((v7 + 32) & ~v7), v5, v6);
}

uint64_t sub_24144BC28()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24144BC54(uint64_t a1)
{
  uint64_t v1;

  return sub_241446C14(a1, (__int128 *)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_24144BC64()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571291A8;
  if (!qword_2571291A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257129198);
    v2[0] = sub_2413C7830();
    v2[1] = MEMORY[0x24BDEF830];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571291A8);
  }
  return result;
}

uint64_t sub_24144BCD0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t OpaqueTypeConformance2;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;

  v4 = _s21LegacyTimeControlViewV39TimeControlViewStateObservationModifierVMa(255, *a1, a1[1], a4);
  MEMORY[0x242695AE8](&unk_2414C7F58, v4);
  v5 = sub_2414B3B08();
  v6 = MEMORY[0x242695AE8](MEMORY[0x24BDEFB78], v5);
  v7 = MEMORY[0x24BEE1328];
  v29 = v5;
  v30 = MEMORY[0x24BEE1328];
  v8 = MEMORY[0x24BEE1340];
  v31 = v6;
  v32 = MEMORY[0x24BEE1340];
  v9 = MEMORY[0x24BDF3908];
  v10 = MEMORY[0x242695A94](255, &v29, MEMORY[0x24BDF3908], 0);
  v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543841F8);
  v29 = v5;
  v30 = v7;
  v31 = v6;
  v32 = v8;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v13 = sub_24144B9D8((unint64_t *)&qword_2571264B8, &qword_2543841F8, MEMORY[0x24BEE13F8], MEMORY[0x24BEE4AB8]);
  v29 = v10;
  v30 = v11;
  v31 = OpaqueTypeConformance2;
  v32 = v13;
  v14 = MEMORY[0x242695A94](255, &v29, v9, 0);
  v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383BC8);
  v29 = v10;
  v30 = v11;
  v31 = OpaqueTypeConformance2;
  v32 = v13;
  v16 = swift_getOpaqueTypeConformance2();
  v17 = sub_24144A108();
  v29 = v14;
  v30 = v15;
  v31 = v16;
  v32 = v17;
  v18 = MEMORY[0x242695A94](255, &v29, v9, 0);
  v19 = sub_2414B2B00();
  v20 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v29 = v14;
  v30 = v15;
  v31 = v16;
  v32 = v17;
  v21 = swift_getOpaqueTypeConformance2();
  v22 = sub_2412F0B40(&qword_2543830B8, 255, v20, MEMORY[0x24BDCE958]);
  v29 = v18;
  v30 = v19;
  v31 = v21;
  v32 = v22;
  v23 = MEMORY[0x242695A94](255, &v29, v9, 0);
  v24 = sub_2414B2F44();
  v25 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB1F0];
  v29 = v18;
  v30 = v19;
  v31 = v21;
  v32 = v22;
  v26 = swift_getOpaqueTypeConformance2();
  v27 = sub_2412F0B40(&qword_254380B00, 255, v25, MEMORY[0x24BDEB200]);
  v29 = v23;
  v30 = v24;
  v31 = v26;
  v32 = v27;
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24144BF24(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t OpaqueTypeConformance2;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  _QWORD v15[2];
  uint64_t v16;
  uint64_t v17;

  v4 = _s21LegacyTimeControlViewV36TimeControlViewAccessibilityModifierVMa(255, *a1, a1[1], a4);
  MEMORY[0x242695AE8](&unk_2414C7F08, v4);
  v5 = sub_2414B3B08();
  v6 = MEMORY[0x242695AE8](MEMORY[0x24BDEFB78], v5);
  v16 = v5;
  v17 = v6;
  MEMORY[0x242695A94](255, &v16, MEMORY[0x24BDF2F10], 0);
  sub_2414B3DB4();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v8 = sub_2414B3514();
  v9 = sub_2414B3514();
  v16 = v5;
  v17 = v6;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v11 = sub_2412F0B40((unint64_t *)&qword_2543844B0, 255, v7, MEMORY[0x24BDF1078]);
  v15[0] = OpaqueTypeConformance2;
  v15[1] = v11;
  v12 = MEMORY[0x24BDED308];
  v14[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v8, v15);
  v14[1] = v11;
  return MEMORY[0x242695AE8](v12, v9, v14);
}

double DeviceMetrics.padding.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  if (*(_BYTE *)(v1 + 18))
    sub_24144F9F0((uint64_t)&v5);
  else
    sub_24144F8F8((uint64_t)&v5);
  result = *(double *)&v5;
  v4 = v6;
  *(_OWORD *)a1 = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_24144C124()
{
  return sub_2414B3688();
}

uint64_t sub_24144C144(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_2414B2F8C();
  v3 = MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, double))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_2414B3694();
}

uint64_t NowPlayingController.sharedViews.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  return swift_unknownObjectRetain();
}

uint64_t NowPlayingViews.artwork.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  sub_241388844((uint64_t)&v14);
  v5 = v14;
  v6 = v15;
  v12 = v14;
  v13 = v15;
  v8 = _s24HeaderArtworkPlaceholderVMa(0, v3, v4, v7);
  MEMORY[0x242695AE8](&unk_2414BEE48, v8);
  sub_2412FBF34((uint64_t)&v12, v8, (uint64_t)&v16);
  sub_2412C821C(v5, v6);
  v9 = v16;
  v10 = v17;
  v14 = v16;
  v15 = v17;
  sub_2412EEA1C((uint64_t)&v14, v8, a2);
  return sub_2412C821C(v9, v10);
}

uint64_t NowPlayingViews.metadata.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 24) + 208))(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  result = sub_2414B3658();
  *a2 = v3;
  a2[1] = result;
  a2[2] = v5;
  return result;
}

uint64_t sub_24144C2F0()
{
  _s7ArtworkCMa();
  sub_2412C8030(&qword_25437F540, (uint64_t (*)(uint64_t))_s7ArtworkCMa, (uint64_t)&unk_2414BEE10);
  return sub_2414B33C4();
}

uint64_t sub_24144C340@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = sub_2414B3658();
  v4 = v3;
  result = swift_getKeyPath();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = result;
  *(_BYTE *)(a1 + 24) = 0;
  return result;
}

uint64_t sub_24144C38C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[2];
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  __int16 v57;
  char v58;
  _QWORD v59[2];
  _QWORD v60[2];
  __int128 v61;
  uint64_t v62;
  __int16 v63;
  char v64;

  v49 = a2;
  v42 = sub_2414B3934();
  v41 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v4 = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v39 - v6;
  v47 = sub_2414B2F8C();
  v45 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v48 = (uint64_t)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v12 = _s36FullScreenContentView_CompactRegularVMa(255, v9, v10, v11);
  v14 = _s37FullScreenContentView_RegularExtendedVMa(255, v9, v10, v13);
  v15 = sub_2414B3A90();
  v16 = sub_2414B3A90();
  v17 = sub_2414B46F0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2543812C0);
  v40 = v17;
  v18 = sub_2414B3514();
  v46 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v43 = (char *)v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v44 = (uint64_t)v39 - v22;
  v50 = v9;
  v51 = v10;
  v52 = v39[1];
  v23 = MEMORY[0x242695AE8](&unk_2414C6978, v12, v21);
  v24 = MEMORY[0x242695AE8](&unk_2414C5DA0, v14);
  v60[0] = v23;
  v60[1] = v24;
  v25 = MEMORY[0x24BDEF3E0];
  v59[0] = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v15, v60);
  v59[1] = MEMORY[0x24BDF5138];
  v26 = MEMORY[0x242695AE8](v25, v16, v59);
  sub_2414B46E4();
  v55 = v61;
  v56 = v62;
  v57 = v63;
  v58 = v64;
  sub_2412C8A04((uint64_t)v7);
  v27 = v41;
  v28 = v42;
  (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v4, *MEMORY[0x24BDEEDE8], v42);
  LOBYTE(v16) = sub_2414B2F80();
  v29 = *(void (**)(char *, uint64_t))(v27 + 8);
  v29(v4, v28);
  v29(v7, v28);
  if ((v16 & 1) != 0)
  {
    v30 = v45;
    v31 = v48;
    v32 = v47;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v45 + 104))(v48, *MEMORY[0x24BDEB3F0], v47);
  }
  else
  {
    v31 = v48;
    sub_2412FA2F8(v48);
    v32 = v47;
    v30 = v45;
  }
  v54 = v26;
  v33 = MEMORY[0x242695AE8](MEMORY[0x24BDF3F50], v40, &v54);
  v34 = (uint64_t)v43;
  sub_2414B41B0();
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v32);
  sub_24145167C(v55, *((uint64_t *)&v55 + 1), v56, v57, v58);
  v35 = sub_2412C8FC4(&qword_2543812B8, (uint64_t *)&unk_2543812C0, MEMORY[0x24BDF1028]);
  v53[0] = v33;
  v53[1] = v35;
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v18, v53);
  v36 = v44;
  sub_2412FBF34(v34, v18, v44);
  v37 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
  v37(v34, v18);
  sub_2412EEA1C(v36, v18, v49);
  return ((uint64_t (*)(uint64_t, uint64_t))v37)(v36, v18);
}

uint64_t sub_24144C7EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int16 v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  _QWORD v73[2];
  _QWORD v74[2];
  __int128 v75;
  uint64_t v76;
  char v77;
  char v78;
  __int128 v79;
  uint64_t v80;
  char v81;
  char v82;
  __int128 v83;
  uint64_t v84;
  char v85;
  _QWORD v86[2];
  _QWORD v87[2];
  _QWORD v88[2];
  __int128 v89;
  uint64_t v90;
  __int16 v91;
  char v92;
  char v93[9];

  v7 = *(_QWORD *)a1;
  v8 = *(_BYTE *)(a1 + 8);
  sub_2412C7080(*(_QWORD *)a1, v8);
  sub_2412FA328(v7, v8, v93);
  sub_2412C821C(v7, v8);
  v10 = MEMORY[0x24BDF5138];
  if (v93[0] >= 2u)
  {
    if (v93[0] == 2)
    {
      sub_241417E68((uint64_t)&v89);
      v30 = v89;
      v31 = v90;
      v32 = v91;
      v79 = v89;
      v80 = v90;
      v81 = v91;
      v71 = a4;
      v34 = _s37FullScreenContentView_RegularExtendedVMa(0, a2, a3, v33);
      v35 = MEMORY[0x242695AE8](&unk_2414C5DA0, v34);
      sub_2412FBF34((uint64_t)&v79, v34, (uint64_t)&v83);
      sub_24132196C(v30, *((uint64_t *)&v30 + 1), v31, v32);
      v66 = *((_QWORD *)&v83 + 1);
      v67 = v83;
      v65 = v84;
      v64 = v85;
      v79 = v83;
      v80 = v84;
      v81 = v85;
      sub_2412EEA1C((uint64_t)&v79, v34, (uint64_t)&v89);
      v36 = v89;
      v37 = v90;
      LOBYTE(v31) = v91;
      v75 = v89;
      v76 = v90;
      v77 = v91;
      v39 = _s36FullScreenContentView_CompactRegularVMa(0, a2, a3, v38);
      v40 = MEMORY[0x242695AE8](&unk_2414C6978, v39);
      sub_2412F1584((uint64_t)&v75, v39, v34);
      sub_24132196C(v36, *((uint64_t *)&v36 + 1), v37, v31);
      v41 = v79;
      v42 = v80;
      LOBYTE(v37) = v82;
      v69 = a2;
      v43 = a3;
      v44 = v81;
      v75 = v79;
      v76 = v80;
      v77 = v81;
      v78 = v82;
      a4 = v71;
      v45 = sub_2414B3A90();
      v74[0] = v40;
      v74[1] = v35;
      v10 = MEMORY[0x24BDF5138];
      MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v45, v74);
      sub_24132F340((uint64_t)&v75, v45);
      v46 = v44;
      a3 = v43;
      a2 = v69;
      sub_24145168C(v41, *((uint64_t *)&v41 + 1), v42, v46, v37);
      sub_24132196C(v67, v66, v65, v64);
    }
    else
    {
      v47 = _s36FullScreenContentView_CompactRegularVMa(255, a2, a3, v9);
      v49 = _s37FullScreenContentView_RegularExtendedVMa(255, a2, a3, v48);
      v50 = sub_2414B3A90();
      v88[0] = MEMORY[0x242695AE8](&unk_2414C6978, v47);
      v88[1] = MEMORY[0x242695AE8](&unk_2414C5DA0, v49);
      v51 = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v50, v88);
      sub_2412F1584(v51, v50, MEMORY[0x24BDF5158]);
    }
  }
  else
  {
    CGSizeMake(a2, a3);
    v12 = _s36FullScreenContentView_CompactRegularVMa(0, a2, a3, v11);
    v13 = MEMORY[0x242695AE8](&unk_2414C6978, v12);
    v15 = sub_2412FBF34(v13, v12, v14);
    sub_2412EEA1C(v15, v12, v16);
    v18 = _s37FullScreenContentView_RegularExtendedVMa(0, a2, a3, v17);
    v68 = a2;
    v19 = a3;
    v20 = MEMORY[0x242695AE8](&unk_2414C5DA0, v18);
    sub_24132F340(v20, v12);
    v70 = a4;
    v22 = *((_QWORD *)&v79 + 1);
    v21 = v79;
    v23 = v80;
    v24 = v82;
    v25 = v81;
    v75 = v79;
    v76 = v80;
    v77 = v81;
    v78 = v82;
    v26 = sub_2414B3A90();
    v73[0] = v13;
    v73[1] = v20;
    a3 = v19;
    a2 = v68;
    MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v26, v73);
    sub_24132F340((uint64_t)&v75, v26);
    v27 = v21;
    a4 = v70;
    v28 = v22;
    v10 = MEMORY[0x24BDF5138];
    sub_24145168C(v27, v28, v23, v25, v24);
  }
  v52 = v90;
  v53 = v91;
  v54 = v92;
  v72 = v89;
  v55 = _s36FullScreenContentView_CompactRegularVMa(255, a2, a3, v29);
  v57 = _s37FullScreenContentView_RegularExtendedVMa(255, a2, a3, v56);
  v58 = sub_2414B3A90();
  v59 = sub_2414B3A90();
  v60 = MEMORY[0x242695AE8](&unk_2414C6978, v55);
  v61 = MEMORY[0x242695AE8](&unk_2414C5DA0, v57);
  v87[0] = v60;
  v87[1] = v61;
  v62 = MEMORY[0x24BDEF3E0];
  v86[0] = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v58, v87);
  v86[1] = v10;
  MEMORY[0x242695AE8](v62, v59, v86);
  sub_2412EEA1C((uint64_t)&v89, v59, a4);
  return sub_24145167C(v72, *((uint64_t *)&v72 + 1), v52, v53, v54);
}

uint64_t sub_24144CD28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;

  *(_QWORD *)a3 = swift_getKeyPath();
  *(_BYTE *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = swift_getKeyPath();
  *(_BYTE *)(a3 + 24) = 0;
  v7 = _s21FullScreenContentViewVMa(0, a1, a2, v6);
  v8 = (uint64_t *)(a3 + *(int *)(v7 + 40));
  *v8 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  swift_storeEnumTagMultiPayload();
  v9 = (uint64_t *)(a3 + *(int *)(v7 + 44));
  *v9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24144CDF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _OWORD *v2;
  _OWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _OWORD *v82;
  __int128 v83;
  char v84;
  __int16 v85;
  uint64_t v86;
  char v87;
  __int128 v88;
  __int128 v89;
  char v90;
  __int128 v91;
  char v92;
  __int16 v93;
  uint64_t v94;
  char v95;
  __int128 v96;
  __int128 v97;
  char v98;
  _OWORD v99[3];
  _OWORD v100[3];

  v3 = v2;
  v78 = a2;
  v79 = sub_2414B3AF0();
  v77 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v76 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2414B2B48();
  MEMORY[0x24BDAC7A8](v6);
  v73 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2414B4D38();
  MEMORY[0x24BDAC7A8](v8);
  v70 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2414B3A9C();
  v11 = *(_QWORD *)(v10 - 8);
  v64 = v10;
  v65 = v11;
  MEMORY[0x24BDAC7A8](v10);
  v61 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571292C8);
  v17 = *(_QWORD *)(v16 - 8);
  v62 = v16;
  v63 = v17;
  MEMORY[0x24BDAC7A8](v16);
  v60 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571292D0);
  v67 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571292D8);
  MEMORY[0x24BDAC7A8](v68);
  v66 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571292E0);
  MEMORY[0x24BDAC7A8](v71);
  v72 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571292E8);
  v23 = MEMORY[0x24BDAC7A8](v74);
  v75 = (char *)&v60 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _OWORD *, uint64_t, double))(v13 + 16))((char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v3, a1, v23);
  v25 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v26 = swift_allocObject();
  v28 = *(_QWORD *)(a1 + 16);
  v27 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v26 + 16) = v28;
  *(_QWORD *)(v26 + 24) = v27;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v26 + v25, (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  v80 = v28;
  v81 = v27;
  v82 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571292F0);
  sub_241451838();
  v29 = v60;
  sub_2414B47D4();
  v30 = v61;
  sub_2414B3634();
  sub_2412C8FC4(&qword_257129310, &qword_2571292C8, MEMORY[0x24BDF43B0]);
  sub_2412C8030(&qword_254382BA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEF428], MEMORY[0x24BDEF420]);
  v31 = v62;
  v32 = v64;
  sub_2414B41D4();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v30, v32);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v29, v31);
  v33 = sub_2414B3E50();
  v34 = v3[4];
  v99[2] = v3[3];
  v100[0] = v34;
  *(_OWORD *)((char *)v100 + 10) = *(_OWORD *)((char *)v3 + 74);
  v35 = v3[2];
  v99[0] = v3[1];
  v99[1] = v35;
  sub_2412FD220((uint64_t)v99, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C6F48);
  sub_2412FD278((uint64_t)&v91);
  sub_2412FD220((uint64_t)v99, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_2412C823C);
  v83 = v91;
  v84 = v92;
  v85 = v93;
  v86 = v94;
  v87 = v95;
  v88 = v96;
  v89 = v97;
  v90 = v98;
  sub_24144DDB8();
  if (qword_257120A50 != -1)
    swift_once();
  sub_2414B2F20();
  v37 = v36;
  v39 = v38;
  v41 = v40;
  v43 = v42;
  v45 = v66;
  v44 = v67;
  v46 = v69;
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v66, v20, v69);
  v47 = &v45[*(int *)(v68 + 36)];
  *v47 = v33;
  *((_QWORD *)v47 + 1) = v37;
  *((_QWORD *)v47 + 2) = v39;
  *((_QWORD *)v47 + 3) = v41;
  *((_QWORD *)v47 + 4) = v43;
  v47[40] = 0;
  (*(void (**)(char *, uint64_t))(v44 + 8))(v20, v46);
  sub_2414B4CF0();
  v48 = (uint64_t)v45;
  if (qword_2543846C8 != -1)
    swift_once();
  v49 = (id)qword_25438E910;
  sub_2414B2B3C();
  *(_QWORD *)&v91 = sub_2414B4D80();
  *((_QWORD *)&v91 + 1) = v50;
  sub_2414518BC();
  sub_2412F6D88();
  v51 = (uint64_t)v72;
  sub_2414B433C();
  swift_bridgeObjectRelease();
  sub_2412CBE78(v48, &qword_2571292D8);
  v52 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v53 = sub_2412F6E9C();
  v55 = v54;

  *(_QWORD *)&v91 = v53;
  *((_QWORD *)&v91 + 1) = v55;
  sub_2414B4DF8();
  sub_2414B4DF8();
  sub_2414519AC();
  v56 = (uint64_t)v75;
  sub_2414B4408();
  swift_bridgeObjectRelease();
  sub_2412CBE78(v51, &qword_2571292E0);
  v57 = v76;
  sub_2414B3AE4();
  sub_24143007C(&qword_257129328, &qword_2571292E8, sub_2414519AC);
  sub_2412C8030(&qword_257128CE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEF8D0], MEMORY[0x24BDEF8B0]);
  v58 = v79;
  sub_2414B4198();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v57, v58);
  return sub_2412CBE78(v56, &qword_2571292E8);
}

uint64_t sub_24144D540(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v6;

  sub_2412C84FC(*a1);
  v6 = 0;
  swift_unknownObjectRetain();
  NowPlayingController.transition(to:animated:)(&v6, 1, a2, a3);
  return swift_unknownObjectRelease();
}

uint64_t sub_24144D5AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;

  v24 = a2;
  v25 = a3;
  v22 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129308);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_2414B4648();
  if (qword_257120A38 != -1)
    swift_once();
  sub_2414B4A44();
  sub_2414B31B4();
  v8 = v26;
  v9 = v27;
  v10 = v28;
  v11 = v29;
  v12 = v30;
  v21 = v31;
  v13 = sub_2414B4A2C();
  v15 = v14;
  sub_24144D720(v22, v24, v25, (uint64_t)v7);
  v16 = (uint64_t *)&v7[*(int *)(v5 + 36)];
  *v16 = v13;
  v16[1] = v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571292F0);
  sub_2412DC3FC((uint64_t)v7, a4 + *(int *)(v17 + 36), &qword_257129308);
  *(_QWORD *)a4 = v23;
  *(_QWORD *)(a4 + 8) = v8;
  *(_BYTE *)(a4 + 16) = v9;
  *(_QWORD *)(a4 + 24) = v10;
  *(_BYTE *)(a4 + 32) = v11;
  v18 = v21;
  *(_QWORD *)(a4 + 40) = v12;
  *(_QWORD *)(a4 + 48) = v18;
  return sub_2412CBE78((uint64_t)v7, &qword_257129308);
}

uint64_t sub_24144D720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  __int128 v32;
  id v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t KeyPath;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;

  v71 = a2;
  v72 = a3;
  v77 = a1;
  v81 = a4;
  v4 = sub_2414B3934();
  v75 = *(_QWORD *)(v4 - 8);
  v76 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v74 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v73 = (uint64_t)&v63 - v7;
  v8 = sub_2414B2F8C();
  v79 = *(_QWORD *)(v8 - 8);
  v80 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129330);
  MEMORY[0x24BDAC7A8](v66);
  v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2414B4A08();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v65 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v63 - v17;
  v19 = sub_2414B4918();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383F10);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129338);
  MEMORY[0x24BDAC7A8](v64);
  v26 = (char *)&v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129340);
  MEMORY[0x24BDAC7A8](v67);
  v70 = (char *)&v63 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129348);
  MEMORY[0x24BDAC7A8](v68);
  v69 = (uint64_t)&v63 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *MEMORY[0x24BDEEB68];
  v30 = sub_2414B38C8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v21, v29, v30);
  if (qword_257120A40 != -1)
    swift_once();
  v78 = v10;
  if (qword_257120A48 != -1)
    swift_once();
  sub_2414B4A44();
  sub_2414B31B4();
  sub_241327320((uint64_t)v21, (uint64_t)v24);
  v31 = &v24[*(int *)(v22 + 36)];
  v32 = v83;
  *(_OWORD *)v31 = v82;
  *((_OWORD *)v31 + 1) = v32;
  *((_OWORD *)v31 + 2) = v84;
  sub_241326D24((uint64_t)v21);
  sub_2414B49E4();
  v33 = objc_msgSend((id)objc_opt_self(), sel_systemGrayColor);
  v34 = MEMORY[0x242693E80](v33);
  v35 = v65;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v65, v18, v13);
  v36 = v66;
  v37 = (uint64_t *)&v12[*(int *)(v66 + 56)];
  *v37 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v35, v13);
  *(_QWORD *)&v12[*(int *)(v36 + 52)] = v34;
  sub_2412EAEA4((uint64_t)v12, (uint64_t)&v26[*(int *)(v64 + 36)], &qword_257129330);
  sub_2412DC3FC((uint64_t)v24, (uint64_t)v26, &qword_254383F10);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
  sub_2412CBE78((uint64_t)v24, &qword_254383F10);
  KeyPath = swift_getKeyPath();
  _s19HeaderDismissButtonVMa(0, v71, v72, v39);
  v40 = v73;
  sub_2412C8A04(v73);
  v42 = v74;
  v41 = v75;
  v43 = v76;
  (*(void (**)(char *, _QWORD, uint64_t))(v75 + 104))(v74, *MEMORY[0x24BDEEDE8], v76);
  LOBYTE(v34) = sub_2414B2F80();
  v44 = *(void (**)(char *, uint64_t))(v41 + 8);
  v44(v42, v43);
  v44((char *)v40, v43);
  if ((v34 & 1) != 0)
  {
    v46 = (uint64_t)v78;
    v45 = v79;
    v47 = v80;
    (*(void (**)(char *, _QWORD, uint64_t))(v79 + 104))(v78, *MEMORY[0x24BDEB400], v80);
  }
  else
  {
    v46 = (uint64_t)v78;
    sub_2412FA2F8((uint64_t)v78);
    v45 = v79;
    v47 = v80;
  }
  v48 = (uint64_t)v70;
  v49 = (uint64_t *)&v70[*(int *)(v67 + 36)];
  v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543812C0);
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))((char *)v49 + *(int *)(v50 + 28), v46, v47);
  *v49 = KeyPath;
  sub_2412DC3FC((uint64_t)v26, v48, &qword_257129338);
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v46, v47);
  sub_2412CBE78((uint64_t)v26, &qword_257129338);
  if (qword_257120A50 != -1)
    swift_once();
  v51 = sub_2414B3E44();
  sub_2414B2F20();
  v53 = v52;
  v55 = v54;
  v57 = v56;
  v59 = v58;
  v60 = v69;
  sub_2412DC3FC(v48, v69, &qword_257129340);
  v61 = v60 + *(int *)(v68 + 36);
  *(_BYTE *)v61 = v51;
  *(_QWORD *)(v61 + 8) = v53;
  *(_QWORD *)(v61 + 16) = v55;
  *(_QWORD *)(v61 + 24) = v57;
  *(_QWORD *)(v61 + 32) = v59;
  *(_BYTE *)(v61 + 40) = 0;
  sub_2412CBE78(v48, &qword_257129340);
  return sub_2412EAEA4(v60, v81, &qword_257129348);
}

void sub_24144DDB8()
{
  __asm { BR              X11 }
}

uint64_t sub_24144DEB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;

  *(_QWORD *)a3 = sub_2414B3658();
  *(_QWORD *)(a3 + 8) = v6;
  *(_QWORD *)(a3 + 16) = swift_getKeyPath();
  v8 = _s19HeaderDismissButtonVMa(0, a1, a2, v7);
  *(_OWORD *)(a3 + 24) = 0u;
  *(_OWORD *)(a3 + 40) = 0u;
  *(_OWORD *)(a3 + 56) = 0u;
  *(_OWORD *)(a3 + 72) = 0u;
  *(_WORD *)(a3 + 88) = 0;
  v9 = (uint64_t *)(a3 + *(int *)(v8 + 40));
  *v9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  swift_storeEnumTagMultiPayload();
  v10 = (uint64_t *)(a3 + *(int *)(v8 + 44));
  *v10 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24144DF8C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[3];
  _QWORD v44[3];
  _QWORD v45[27];

  v40 = a3;
  v5 = sub_2414B2B48();
  MEMORY[0x24BDAC7A8](v5);
  v39 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2414B4D38();
  MEMORY[0x24BDAC7A8](v7);
  v33 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2414B391C();
  v34 = *(_QWORD *)(v9 - 8);
  v35 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = _s27DefaultArtworkContainerViewVMa(255, a1, a2, v12);
  MEMORY[0x242695AE8](&unk_2414BF818, v13);
  v14 = sub_2414B3604();
  v15 = sub_2414B3514();
  sub_2414B3DB4();
  v16 = sub_2414B3514();
  v36 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v37 = (char *)&v33 - v20;
  MEMORY[0x24BDAC7A8](v21);
  v38 = (uint64_t)&v33 - v22;
  v44[2] = sub_2414B4648();
  sub_2414B4A2C();
  v41 = a1;
  v42 = a2;
  v23 = MEMORY[0x24BDF3E20];
  sub_2414B4504();
  swift_release();
  sub_2414B38EC();
  v24 = MEMORY[0x242695AE8](MEMORY[0x24BDEDC10], v14);
  v44[0] = v23;
  v44[1] = v24;
  v25 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v15, v44);
  sub_2414B43F0();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v35);
  (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v45, v15);
  sub_2414B4CF0();
  if (qword_2543846C8 != -1)
    swift_once();
  v26 = (id)qword_25438E910;
  sub_2414B2B3C();
  v45[0] = sub_2414B4D80();
  v45[1] = v27;
  sub_2412F6D88();
  v28 = (uint64_t)v37;
  sub_2414B34A8();
  swift_bridgeObjectRelease();
  v29 = *(void (**)(char *, uint64_t))(v36 + 8);
  v29(v18, v16);
  v30 = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v43[0] = v25;
  v43[1] = v30;
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v16, v43);
  v31 = v38;
  sub_2412FBF34(v28, v16, v38);
  v29((char *)v28, v16);
  sub_2412EEA1C(v31, v16, v40);
  return ((uint64_t (*)(uint64_t, uint64_t))v29)(v31, v16);
}

uint64_t sub_24144E37C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_BYTE *, uint64_t);
  _BYTE v10[184];
  _BYTE v11[184];

  sub_24138CF6C((uint64_t)v10);
  v7 = _s27DefaultArtworkContainerViewVMa(0, a1, a2, v6);
  MEMORY[0x242695AE8](&unk_2414BF818, v7);
  sub_2412FBF34((uint64_t)v10, v7, (uint64_t)v11);
  v8 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v10, v7);
  sub_2412EEA1C((uint64_t)v11, v7, a3);
  return ((uint64_t (*)(_BYTE *, uint64_t))v8)(v11, v7);
}

uint64_t sub_24144E430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24144DF8C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

void sub_24144E438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s19DefaultMetadataViewVMa(255, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  sub_2414B3DB4();
  sub_2414B3514();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  _s15ContextMenuViewVMa();
}

uint64_t sub_24144E4EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_BYTE *, uint64_t);
  _BYTE v25[96];

  sub_2414B3514();
  sub_2414B3514();
  swift_getTupleTypeMetadata2();
  v4 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v4);
  v5 = sub_2414B4804();
  v6 = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v5);
  *(_QWORD *)(v3 - 120) = v5;
  *(_QWORD *)(v3 - 112) = v6;
  *(_QWORD *)(v3 - 264) = MEMORY[0x242695A94](255, v3 - 120, MEMORY[0x24BDF2F10], 0);
  *(_QWORD *)(v3 - 120) = v5;
  *(_QWORD *)(v3 - 112) = v6;
  swift_getOpaqueTypeConformance2();
  *(_QWORD *)(v3 - 256) = sub_2414B3604();
  v7 = sub_2414B3514();
  *(_QWORD *)(v3 - 248) = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v25[-v8];
  v10 = sub_2414B3514();
  *(_QWORD *)(v3 - 240) = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13);
  v15 = &v25[-v14];
  *(_OWORD *)(v3 - 288) = *(_OWORD *)v0;
  v16 = *(_QWORD *)(v0 + 16);
  v17 = *(_BYTE *)(v0 + 24);
  *(_QWORD *)(v3 - 120) = sub_2414B4648();
  sub_2414B4A38();
  *(_QWORD *)(v3 - 208) = v2;
  *(_QWORD *)(v3 - 200) = v1;
  *(_OWORD *)(v3 - 192) = *(_OWORD *)(v3 - 288);
  *(_QWORD *)(v3 - 176) = v16;
  *(_BYTE *)(v3 - 168) = v17;
  v18 = MEMORY[0x24BDF3E20];
  sub_2414B4504();
  swift_release();
  if (qword_254383D60 != -1)
    swift_once();
  sub_2414B4A44();
  v19 = MEMORY[0x242695AE8](MEMORY[0x24BDEDC10], *(_QWORD *)(v3 - 256));
  *(_QWORD *)(v3 - 136) = v18;
  *(_QWORD *)(v3 - 128) = v19;
  v20 = MEMORY[0x24BDED308];
  v21 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v7, v3 - 136);
  sub_2414B44A4();
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v3 - 248) + 8))(v9, v7);
  v22 = MEMORY[0x24BDEBEE0];
  *(_QWORD *)(v3 - 152) = v21;
  *(_QWORD *)(v3 - 144) = v22;
  MEMORY[0x242695AE8](v20, v10, v3 - 152);
  sub_2412FBF34((uint64_t)v12, v10, (uint64_t)v15);
  v23 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v3 - 240) + 8);
  v23(v12, v10);
  sub_2412EEA1C((uint64_t)v15, v10, *(_QWORD *)(v3 - 232));
  return ((uint64_t (*)(_BYTE *, uint64_t))v23)(v15, v10);
}

void sub_24144E81C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  _QWORD v12[16];

  v12[5] = a1;
  v12[6] = a2;
  v12[11] = a5;
  v7 = sub_2414B3CD0();
  v12[9] = *(_QWORD *)(v7 - 8);
  v12[10] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v12[8] = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s19DefaultMetadataViewVMa(255, a3, a4, v9);
  sub_2414B3DB4();
  sub_2414B3514();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v12[4] = a3;
  v12[12] = a3;
  v12[13] = AssociatedTypeWitness;
  v12[7] = a4;
  v12[14] = a4;
  v12[15] = AssociatedConformanceWitness;
  _s15ContextMenuViewVMa();
}

uint64_t sub_24144E924()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  void (*v20)(_BYTE *, uint64_t);
  _BYTE v22[96];

  sub_2414B3514();
  sub_2414B3514();
  swift_getTupleTypeMetadata2();
  v3 = sub_2414B4B1C();
  *(_QWORD *)(v2 - 200) = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v3);
  v4 = sub_2414B4804();
  *(_QWORD *)(v2 - 184) = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = &v22[-v6];
  v8 = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v4, v5);
  *(_QWORD *)(v2 - 112) = v4;
  *(_QWORD *)(v2 - 104) = v8;
  v9 = MEMORY[0x242695A94](0, v2 - 112, MEMORY[0x24BDF2F10], 0);
  *(_QWORD *)(v2 - 192) = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v12);
  v14 = &v22[-v13];
  sub_2412C7080(v0, v1);
  sub_2412FA328(v0, v1, (_BYTE *)(v2 - 112));
  sub_2412C821C(v0, v1);
  if (*(_BYTE *)(v2 - 112) == 1)
    v15 = sub_2414B385C();
  else
    v15 = sub_2414B3880();
  MEMORY[0x24BDAC7A8](v15);
  v16 = *(_QWORD *)(v2 - 152);
  *(_QWORD *)&v22[-48] = *(_QWORD *)(v2 - 176);
  *(_QWORD *)&v22[-40] = v16;
  v17 = *(_QWORD *)(v2 - 160);
  *(_QWORD *)&v22[-32] = *(_QWORD *)(v2 - 168);
  *(_QWORD *)&v22[-24] = v17;
  *(_QWORD *)&v22[-16] = v0;
  v22[-8] = v18;
  sub_2414B47F8();
  v19 = *(_QWORD *)(v2 - 144);
  sub_2414B3CC4();
  sub_2414B43B4();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 136) + 8))(v19, *(_QWORD *)(v2 - 128));
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v2 - 184) + 8))(v7, v4);
  *(_QWORD *)(v2 - 112) = v4;
  *(_QWORD *)(v2 - 104) = v8;
  swift_getOpaqueTypeConformance2();
  sub_2412FBF34((uint64_t)v11, v9, (uint64_t)v14);
  v20 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v2 - 192) + 8);
  v20(v11, v9);
  sub_2412EEA1C((uint64_t)v14, v9, *(_QWORD *)(v2 - 120));
  return ((uint64_t (*)(_BYTE *, uint64_t))v20)(v14, v9);
}

void sub_24144EBC8(uint64_t a1@<X4>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  _QWORD v7[13];
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v10 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = AssociatedTypeWitness;
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v7[12] = (char *)v7 - v6;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v11 = a1;
  v12 = AssociatedTypeWitness;
  v13 = a2;
  v14 = AssociatedConformanceWitness;
  _s15ContextMenuViewVMa();
}

void sub_24144EC8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, _QWORD *);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  void (*v35)(uint64_t, _QWORD *);

  *(_QWORD *)(v9 + 136) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v9 + 80) = a1;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v9 + 56) = (char *)&a9 - v14;
  v15 = sub_2414B3514();
  v16 = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v9 + 88) = v15;
  *(_QWORD *)(v9 + 152) = v16;
  MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v9 + 64) = (char *)&a9 - v17;
  sub_2414B3DB4();
  v18 = sub_2414B3514();
  *(_QWORD *)(v9 + 128) = v18;
  *(_QWORD *)(v9 + 144) = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v9 + 72) = (char *)&a9 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v9 + 120) = (char *)&a9 - v21;
  v23 = _s19DefaultMetadataViewVMa(255, v13, (uint64_t)v12, v22);
  v24 = sub_2414B3514();
  *(_QWORD *)(v9 + 168) = v24;
  *(_QWORD *)(v9 + 192) = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v9 + 176) = (char *)&a9 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  *(_QWORD *)(v9 + 184) = (char *)&a9 - v27;
  *(_QWORD *)(v9 + 8) = v12[1];
  *(_QWORD *)(v9 + 16) = v10;
  *(_QWORD *)(v9 + 24) = v11;
  sub_2412C84FC(v10);
  v28 = (void (*)(uint64_t, _QWORD *))v12[26];
  swift_unknownObjectRetain();
  v28(v13, v12);
  swift_unknownObjectRelease();
  swift_retain();
  swift_release();
  sub_2412C84FC(v10);
  swift_unknownObjectRetain();
  v28(v13, v12);
  swift_unknownObjectRelease();
  swift_retain();
  swift_release();
  sub_241331740(v9 + 280);
  v29 = MEMORY[0x242695AE8](&unk_2414BB200, v23);
  v30 = *(_QWORD *)(v9 + 176);
  sub_2414B4420();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v9 + 280, v23);
  v31 = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  *(_QWORD *)(v9 + 32) = v31;
  *(_QWORD *)(v9 + 264) = v29;
  *(_QWORD *)(v9 + 272) = v31;
  v32 = *(_QWORD *)(v9 + 168);
  *(_QWORD *)(v9 + 40) = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v32, v9 + 264);
  sub_2412FBF34(v30, v32, *(_QWORD *)(v9 + 184));
  v33 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 + 192) + 8);
  *(_QWORD *)(v9 + 48) = v33;
  v33(v30, v32);
  v34 = *(_QWORD *)(v9 + 16);
  sub_2412C84FC(v34);
  swift_unknownObjectRetain();
  v28(v13, v12);
  swift_unknownObjectRelease();
  swift_retain();
  swift_release();
  sub_2412C84FC(v34);
  v35 = (void (*)(uint64_t, _QWORD *))v12[35];
  swift_unknownObjectRetain();
  v35(v13, v12);
  swift_unknownObjectRelease();
  sub_24137F828(*(uint64_t **)(v9 + 56));
}

uint64_t sub_24144F00C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);

  v2 = sub_2414B385C();
  v3 = v0[10];
  v4 = MEMORY[0x242695AE8](&unk_2414BDFE8, v3);
  v5 = v0[8];
  MEMORY[0x242693B14](v2, sub_24144F1BC, 0, v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v0[17] + 8))(v1, v3);
  v6 = sub_24135E51C();
  v0[31] = v4;
  v0[32] = v6;
  v7 = MEMORY[0x24BDED308];
  v8 = v0[11];
  v9 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v8, v0 + 31);
  v10 = v0[9];
  sub_2414B4420();
  (*(void (**)(uint64_t, uint64_t))(v0[19] + 8))(v5, v8);
  v11 = v0[4];
  v0[29] = v9;
  v0[30] = v11;
  v12 = v0[16];
  v13 = MEMORY[0x242695AE8](v7, v12, v0 + 29);
  v14 = v0[15];
  sub_2412FBF34(v10, v12, v14);
  v15 = v0[18];
  v16 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  v16(v10, v12);
  v17 = v0[23];
  v18 = v0[21];
  v19 = v0[22];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[24] + 16))(v19, v17, v18);
  v0[35] = v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v10, v14, v12);
  v0[36] = v10;
  v0[27] = v18;
  v0[28] = v12;
  v0[25] = v0[5];
  v0[26] = v13;
  sub_2412F68CC(v0 + 35, 2uLL, (uint64_t)(v0 + 27));
  v16(v14, v12);
  v20 = (void (*)(uint64_t, uint64_t))v0[6];
  v20(v17, v18);
  v16(v10, v12);
  return ((uint64_t (*)(uint64_t, uint64_t))v20)(v19, v18);
}

double sub_24144F1BC()
{
  uint64_t v0;

  v0 = sub_2414B385C();
  return MEMORY[0x242692CBC](v0) + 13.5;
}

void sub_24144F1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _s18HeaderMetadataViewVMa(255, a4, a5, a4);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  _s15ContextMenuViewVMa();
}

uint64_t sub_24144F28C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  void (*v13)(_BYTE *, uint64_t);
  _BYTE v15[96];

  swift_getTupleTypeMetadata2();
  v5 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v5);
  v6 = sub_2414B4804();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v15[-v11];
  sub_2414B3880();
  *(_QWORD *)(v4 - 160) = v2;
  *(_QWORD *)(v4 - 152) = v1;
  *(_QWORD *)(v4 - 144) = v3;
  *(_QWORD *)(v4 - 136) = v0;
  *(_QWORD *)(v4 - 128) = *(_QWORD *)(v4 - 192);
  sub_2414B47F8();
  MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v6);
  sub_2412FBF34((uint64_t)v9, v6, (uint64_t)v12);
  v13 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
  v13(v9, v6);
  sub_2412EEA1C((uint64_t)v12, v6, *(_QWORD *)(v4 - 184));
  return ((uint64_t (*)(_BYTE *, uint64_t))v13)(v12, v6);
}

void sub_24144F3D4(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  _QWORD v7[4];
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v9 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v7[3] = (char *)v7 - v6;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v10 = a1;
  v11 = AssociatedTypeWitness;
  v12 = a2;
  v13 = AssociatedConformanceWitness;
  _s15ContextMenuViewVMa();
}

void sub_24144F4A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);

  *(_QWORD *)(v12 - 352) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v14 = (uint64_t *)((char *)&a9 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v12 - 392) = (char *)&a9 - v16;
  swift_retain();
  sub_241331E54(v12 - 192);
  *(_QWORD *)(v12 - 104) = *(_QWORD *)(v12 - 160);
  *(_BYTE *)(v12 - 96) = *(_BYTE *)(v12 - 152);
  v18 = *(_OWORD *)(v12 - 192);
  v17 = *(_OWORD *)(v12 - 176);
  *(_OWORD *)(v12 - 144) = v18;
  *(_OWORD *)(v12 - 128) = v17;
  *(_OWORD *)(v12 - 288) = v18;
  *(_OWORD *)(v12 - 272) = v17;
  *(_OWORD *)(v12 - 263) = *(_OWORD *)(v12 - 167);
  v20 = _s18HeaderMetadataViewVMa(0, v11, v10, v19);
  *(_QWORD *)(v12 - 384) = MEMORY[0x242695AE8](&unk_2414BAC40, v20);
  sub_2412FBF34(v12 - 288, v20, v12 - 240);
  sub_2412FAA84(v12 - 144);
  sub_2412FAA5C(v12 - 128);
  sub_24144FE98(v12 - 104);
  swift_retain();
  sub_2412C84FC(v9);
  v21 = *(void (**)(uint64_t, uint64_t))(v10 + 280);
  swift_unknownObjectRetain();
  v21(v11, v10);
  swift_unknownObjectRelease();
  sub_24137F828(v14);
}

uint64_t sub_24144F614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v11;
  uint64_t v12;
  char v13;

  v4 = MEMORY[0x242695AE8](&unk_2414BDFE8, v0);
  v5 = *(_QWORD *)(v3 - 392);
  sub_2412FBF34(v1, v0, v5);
  v6 = *(_QWORD *)(v3 - 352);
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v1, v0);
  v8 = *(_QWORD *)(v3 - 232);
  v9 = *(_QWORD *)(v3 - 208);
  v10 = *(_BYTE *)(v3 - 200);
  *(_QWORD *)(v3 - 288) = *(_QWORD *)(v3 - 240);
  *(_QWORD *)(v3 - 280) = v8;
  v11 = *(_OWORD *)(v3 - 224);
  *(_OWORD *)(v3 - 368) = v11;
  *(_OWORD *)(v3 - 272) = v11;
  *(_QWORD *)(v3 - 256) = v9;
  *(_BYTE *)(v3 - 248) = v10;
  *(_QWORD *)(v3 - 304) = v3 - 288;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v1, v5, v0);
  *(_QWORD *)(v3 - 296) = v1;
  swift_unknownObjectRetain();
  swift_retain();
  sub_2412E6F7C(v9, v10);
  *(_QWORD *)(v3 - 320) = v2;
  *(_QWORD *)(v3 - 312) = v0;
  *(_QWORD *)(v3 - 336) = *(_QWORD *)(v3 - 384);
  *(_QWORD *)(v3 - 328) = v4;
  sub_2412F68CC((uint64_t *)(v3 - 304), 2uLL, v3 - 320);
  v7(v5, v0);
  swift_release();
  swift_unknownObjectRelease();
  sub_2412E6BF8(*(_QWORD *)(v3 - 208), *(_BYTE *)(v3 - 200));
  v7(v1, v0);
  v12 = *(_QWORD *)(v3 - 256);
  v13 = *(_BYTE *)(v3 - 248);
  swift_release();
  swift_unknownObjectRelease();
  return sub_2412E6BF8(v12, v13);
}

void sub_24144F7A8(uint64_t a1)
{
  uint64_t *v1;

  sub_24144F1EC(*v1, v1[1], v1[2], *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

void sub_24144F7BC()
{
  qword_254383D50 = 0x4050000000000000;
}

void sub_24144F7CC()
{
  qword_257137198 = 0x4040000000000000;
}

void sub_24144F7DC()
{
  qword_2571371A0 = 0x4041800000000000;
}

void sub_24144F7F0()
{
  qword_2571371A8 = 0x4014000000000000;
}

void sub_24144F800()
{
  qword_2571371B0 = 0x4024000000000000;
}

double DeviceMetrics.Padding.top.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double DeviceMetrics.Padding.horizontal.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double DeviceMetrics.Padding.bottom.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void sub_24144F828()
{
  xmmword_2571291B0 = 0uLL;
  qword_2571291C0 = 0;
}

double static DeviceMetrics.Padding.zero.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  if (qword_257120A58 != -1)
    swift_once();
  result = *(double *)&qword_2571291C0;
  *(_OWORD *)a1 = xmmword_2571291B0;
  *(double *)(a1 + 16) = result;
  return result;
}

BOOL static DeviceMetrics.Padding.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

BOOL sub_24144F8C8(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

void sub_24144F8F8(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v3;
  double v4;
  uint64_t v5;
  char v6;
  id v7;
  double v8;
  double v9;
  double v10;

  v3 = *(unsigned __int8 *)(v1 + 17);
  if (v3 == 9)
    goto LABEL_2;
  v5 = *(_QWORD *)(v1 + 24);
  if ((*(_BYTE *)(v1 + 32) & 1) == 0 && v5 == 1 || !*(_BYTE *)(v1 + 17))
  {
    v4 = 33.0;
    goto LABEL_17;
  }
  if (v3 != 3 || (v5 ? (v6 = 1) : (v6 = *(_BYTE *)(v1 + 32)), (v6 & 1) != 0))
  {
LABEL_2:
    v4 = 19.0;
  }
  else
  {
    v7 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
    objc_msgSend(v7, sel_displayScale);
    v9 = v8;

    v10 = 1.0;
    if (v9 >= 1.0)
    {
      v10 = v9;
      if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) == 0)
      {
        v10 = 1.0;
        if ((*(_QWORD *)&v9 & 0xFFFFFFFFFFFFFLL) == 0)
          v10 = v9;
      }
    }
    v4 = 1.0 / v10 + 17.0;
  }
LABEL_17:
  *(_OWORD *)a1 = xmmword_2414C8030;
  *(double *)(a1 + 16) = v4;
}

void sub_24144F9F0(uint64_t a1@<X8>)
{
  uint64_t v1;
  unsigned int v3;
  int v4;
  double v5;
  double v6;
  uint64_t v7;
  id v8;
  double v9;
  double v10;
  double v11;
  id v12;
  double v13;
  double v14;
  double v15;

  v3 = *(unsigned __int8 *)(v1 + 17);
  v4 = *(unsigned __int8 *)(v1 + 18);
  if (v4 == 1)
  {
    v5 = 25.0;
    v6 = 80.0;
    *(double *)&v7 = 79.0;
    switch(*(_BYTE *)(v1 + 17))
    {
      case 0:
      case 3:
        break;
      case 1:
      case 2:
      case 4:
        v6 = 80.0;
        v5 = 45.0;
        break;
      case 5:
        v12 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
        objc_msgSend(v12, sel_displayScale);
        v14 = v13;

        v15 = 1.0;
        if (v14 >= 1.0)
        {
          v15 = v14;
          if ((~*(_QWORD *)&v14 & 0x7FF0000000000000) == 0)
          {
            v15 = 1.0;
            if ((*(_QWORD *)&v14 & 0xFFFFFFFFFFFFFLL) == 0)
              v15 = v14;
          }
        }
        v6 = 1.0 / v15 + 80.0;
        break;
      case 6:
        goto LABEL_14;
      default:
        *(double *)&v7 = 80.0;
LABEL_14:
        v5 = 27.0;
        v6 = *(double *)&v7;
        break;
    }
  }
  else
  {
    v8 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
    objc_msgSend(v8, sel_displayScale);
    v10 = v9;

    v11 = 1.0;
    if (v10 >= 1.0)
    {
      v11 = v10;
      if ((~*(_QWORD *)&v10 & 0x7FF0000000000000) == 0)
      {
        v11 = 1.0;
        if ((*(_QWORD *)&v10 & 0xFFFFFFFFFFFFFLL) == 0)
          v11 = v10;
      }
    }
    v6 = 1.0 / v11 + 54.0;
    v5 = 0.0;
    if (v4 && v4 != 3)
    {
      if (v3 <= 4 && ((1 << v3) & 0x16) != 0)
        v5 = 34.0;
      else
        v5 = 14.0;
    }
  }
  *(_QWORD *)a1 = 0;
  *(double *)(a1 + 8) = v6;
  *(double *)(a1 + 16) = v5;
}

uint64_t type metadata accessor for NowPlayingViews(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NowPlayingViews);
}

ValueMetadata *type metadata accessor for DeviceMetrics.Padding()
{
  return &type metadata for DeviceMetrics.Padding;
}

void sub_24144FC00(_QWORD *a1)
{
  get_witness_table_11MediaCoreUI20NowPlayingControllerRzlAA0dE4ViewV24HeaderArtworkPlaceholderVyx_G05SwiftC00G0HPyHCTm(a1, (void (*)(uint64_t, _QWORD, _QWORD))_s24HeaderArtworkPlaceholderVMa);
}

void sub_24144FC14(_QWORD *a1)
{
  get_witness_table_11MediaCoreUI20NowPlayingControllerRzlAA0dE4ViewV24HeaderArtworkPlaceholderVyx_G05SwiftC00G0HPyHCTm(a1, (void (*)(uint64_t, _QWORD, _QWORD))_s32HeaderMetadataAndContextMenuViewVMa);
}

void get_witness_table_11MediaCoreUI20NowPlayingControllerRzlAA0dE4ViewV24HeaderArtworkPlaceholderVyx_G05SwiftC00G0HPyHCTm(_QWORD *a1, void (*a2)(uint64_t, _QWORD, _QWORD))
{
  a2(255, *a1, a1[1]);
  JUMPOUT(0x242695AE8);
}

uint64_t _s32HeaderMetadataAndContextMenuViewVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s32HeaderMetadataAndContextMenuViewVMn);
}

uint64_t sub_24144FC6C()
{
  swift_release();
  return swift_unknownObjectRelease();
}

_QWORD *sub_24144FC94(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_unknownObjectRetain();
  return a1;
}

_QWORD *sub_24144FCD0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t sub_24144FD34(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t sub_24144FD78()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24144FDBC()
{
  return sub_2414B3688();
}

uint64_t sub_24144FDF4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_2412D42A4();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

uint64_t sub_24144FE40()
{
  sub_2412D42A4();
  return sub_2414B3844();
}

void sub_24144FE88(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_24144F3D4(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_24144FE98(uint64_t a1)
{
  sub_2412E6BF8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

void sub_24144FEC4(uint64_t a1)
{
  uint64_t v1;

  v1 = *(unsigned __int8 *)(a1 + 18);
  if (qword_257120A48 != -1)
    swift_once();
  __asm { BR              X9 }
}

uint64_t sub_24144FFF0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v7 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    v8 = a2[3];
    v9 = a2[4];
    v10 = a2[5];
    v11 = a2[6];
    v12 = a2[7];
    v25 = a2[8];
    v26 = v7;
    v13 = a2[10];
    v27 = a2[9];
    v14 = *((_BYTE *)a2 + 88);
    v15 = *((_BYTE *)a2 + 89);
    swift_unknownObjectRetain();
    sub_2412C6F48(v26, v8, v9, v10, v11, v12, v25, v27, v13, v14, v15);
    *(_QWORD *)(a1 + 16) = v26;
    *(_QWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v10;
    *(_QWORD *)(a1 + 48) = v11;
    *(_QWORD *)(a1 + 56) = v12;
    *(_QWORD *)(a1 + 64) = v25;
    *(_QWORD *)(a1 + 72) = v27;
    *(_QWORD *)(a1 + 80) = v13;
    *(_BYTE *)(a1 + 88) = v14;
    v16 = *(int *)(a3 + 40);
    v17 = (_QWORD *)(a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    *(_BYTE *)(a1 + 89) = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = sub_2414B2F8C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v20 = *(int *)(a3 + 44);
    v21 = (_QWORD *)(a1 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v23 = sub_2414B3934();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2414501F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_unknownObjectRelease();
  sub_2412C823C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88), *(_BYTE *)(a1 + 89));
  v4 = a1 + *(int *)(a2 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2414B2F8C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = a1 + *(int *)(a2 + 44);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v7 = sub_2414B3934();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_241450300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v23 = *(_QWORD *)(a2 + 64);
  v24 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 80);
  v25 = *(_QWORD *)(a2 + 72);
  v12 = *(_BYTE *)(a2 + 88);
  v13 = *(_BYTE *)(a2 + 89);
  swift_unknownObjectRetain();
  sub_2412C6F48(v24, v6, v7, v8, v9, v10, v23, v25, v11, v12, v13);
  *(_QWORD *)(a1 + 16) = v24;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v23;
  *(_QWORD *)(a1 + 72) = v25;
  *(_QWORD *)(a1 + 80) = v11;
  *(_BYTE *)(a1 + 88) = v12;
  v14 = *(int *)(a3 + 40);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *(_BYTE *)(a1 + 89) = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = sub_2414B2F8C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    *v15 = *v16;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v18 = *(int *)(a3 + 44);
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v21 = sub_2414B3934();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else
  {
    *v19 = *v20;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2414504D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v34;
  char v35;
  char v36;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 72);
  v34 = *(_QWORD *)(a2 + 80);
  v35 = *(_BYTE *)(a2 + 88);
  v36 = *(_BYTE *)(a2 + 89);
  sub_2412C6F48(v5, v6, v7, v8, v9, v10, v12, v11, v34, v35, v36);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 48);
  v18 = *(_QWORD *)(a1 + 56);
  v19 = *(_QWORD *)(a1 + 64);
  v20 = *(_QWORD *)(a1 + 72);
  v21 = *(_QWORD *)(a1 + 80);
  v22 = *(_BYTE *)(a1 + 88);
  v23 = *(_BYTE *)(a1 + 89);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v34;
  *(_BYTE *)(a1 + 88) = v35;
  *(_BYTE *)(a1 + 89) = v36;
  sub_2412C823C(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23);
  if (a1 != a2)
  {
    v24 = *(int *)(a3 + 40);
    v25 = (_QWORD *)(a1 + v24);
    v26 = (_QWORD *)(a2 + v24);
    sub_2412CBE78(a1 + v24, &qword_254380B58);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v27 = sub_2414B2F8C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v28 = *(int *)(a3 + 44);
    v29 = (_QWORD *)(a1 + v28);
    v30 = (_QWORD *)(a2 + v28);
    sub_2412CBE78(a1 + v28, &qword_25437DAA0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v31 = sub_2414B3934();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    }
    else
    {
      *v29 = *v30;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_241450704(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  a1[4] = a2[4];
  *(_OWORD *)((char *)a1 + 74) = *(_OWORD *)((char *)a2 + 74);
  v7 = a2[1];
  v8 = *(int *)(a3 + 40);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  *a1 = *a2;
  a1[1] = v7;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2414B2F8C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v13 = *(int *)(a3 + 44);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = sub_2414B3934();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  return a1;
}

uint64_t sub_24145084C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRelease();
  v6 = *(_BYTE *)(a2 + 88);
  v7 = *(_BYTE *)(a2 + 89);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(_QWORD *)(a1 + 56);
  v14 = *(_QWORD *)(a1 + 64);
  v15 = *(_QWORD *)(a1 + 72);
  v16 = *(_QWORD *)(a1 + 80);
  v17 = *(_BYTE *)(a1 + 88);
  v18 = *(_BYTE *)(a1 + 89);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = v6;
  *(_BYTE *)(a1 + 89) = v7;
  sub_2412C823C(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18);
  if (a1 != a2)
  {
    v19 = *(int *)(a3 + 40);
    v20 = (void *)(a1 + v19);
    v21 = (const void *)(a2 + v19);
    sub_2412CBE78(a1 + v19, &qword_254380B58);
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v23 = sub_2414B2F8C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v20, v21, v23);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    v24 = *(int *)(a3 + 44);
    v25 = (void *)(a1 + v24);
    v26 = (const void *)(a2 + v24);
    sub_2412CBE78(a1 + v24, &qword_25437DAA0);
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v28 = sub_2414B3934();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v25, v26, v28);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_241450A18()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_241450A24(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(qword_2571261F0);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 40);
    }
    else
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571226F0);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 44);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a1[v12], a2, v11);
  }
}

uint64_t sub_241450AD8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_241450AE4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)result = a2;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2571261F0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 40);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571226F0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 44);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

unint64_t sub_241450B88(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_2412C7080(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_BYTE *)(a2 + 24);
    sub_2412C7080(v9, v10);
    *(_QWORD *)(a1 + 16) = v9;
    *(_BYTE *)(a1 + 24) = v10;
    v11 = *(int *)(a3 + 40);
    v12 = (_QWORD *)(a1 + v11);
    v13 = (_QWORD *)(a2 + v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_2414B2F8C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v16 = *(int *)(a3 + 44);
    v17 = (_QWORD *)(a1 + v16);
    v18 = (_QWORD *)(a2 + v16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = sub_2414B3934();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_241450D14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_2412C821C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  sub_2412C821C(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2414B2F8C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = a1 + *(int *)(a2 + 44);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v7 = sub_2414B3934();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_241450DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_2412C7080(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  sub_2412C7080(v8, v9);
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v9;
  v10 = *(int *)(a3 + 40);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = sub_2414B2F8C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    *v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v14 = *(int *)(a3 + 44);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = sub_2414B3934();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    *v15 = *v16;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_241450F50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_2412C7080(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_2412C821C(v8, v9);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_BYTE *)(a2 + 24);
  sub_2412C7080(v10, v11);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v10;
  *(_BYTE *)(a1 + 24) = v11;
  sub_2412C821C(v12, v13);
  if (a1 != a2)
  {
    v14 = *(int *)(a3 + 40);
    v15 = (_QWORD *)(a1 + v14);
    v16 = (_QWORD *)(a2 + v14);
    sub_2412CBE78(a1 + v14, &qword_254380B58);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_2414B2F8C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v18 = *(int *)(a3 + 44);
    v19 = (_QWORD *)(a1 + v18);
    v20 = (_QWORD *)(a2 + v18);
    sub_2412CBE78(a1 + v18, &qword_25437DAA0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = sub_2414B3934();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2414510E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(int *)(a3 + 40);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2414B2F8C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = *(int *)(a3 + 44);
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = sub_2414B3934();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  return a1;
}

uint64_t sub_241451230(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_2412C821C(v8, v9);
  v10 = *((_BYTE *)a2 + 24);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = v10;
  sub_2412C821C(v11, v12);
  if ((uint64_t *)a1 != a2)
  {
    v13 = *(int *)(a3 + 40);
    v14 = (void *)(a1 + v13);
    v15 = (char *)a2 + v13;
    sub_2412CBE78(a1 + v13, &qword_254380B58);
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_2414B2F8C();
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    v18 = *(int *)(a3 + 44);
    v19 = (void *)(a1 + v18);
    v20 = (char *)a2 + v18;
    sub_2412CBE78(a1 + v18, &qword_25437DAA0);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v22 = sub_2414B3934();
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v19, v20, v22);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2414513B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2414513C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2571261F0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 40);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571226F0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 44);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_241451464()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_241451470(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 8) = -(char)a2;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2571261F0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 40);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571226F0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 44);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_241451510(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s18HeaderMetadataViewVMa(255, *a1, a1[1], a4);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  _s15ContextMenuViewVMa();
}

uint64_t sub_241451598()
{
  uint64_t v0;
  uint64_t v1;

  swift_getTupleTypeMetadata2();
  v0 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v0);
  v1 = sub_2414B4804();
  return MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v1);
}

uint64_t sub_241451608()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24145163C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241451670@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_24144C7EC(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_24145167C(uint64_t result, uint64_t a2, uint64_t a3, __int16 a4, char a5)
{
  if ((a5 & 1) == 0)
    return sub_24145168C(result, a2, a3, a4, HIBYTE(a4) & 1);
  return result;
}

uint64_t sub_24145168C(uint64_t result, uint64_t a2, uint64_t a3, char a4, char a5)
{
  if ((a5 & 1) != 0)
    return sub_24132196C(result, a2, a3, a4 & 1);
  return result;
}

uint64_t sub_24145169C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = _s19HeaderDismissButtonVMa(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = v4 + ((v6 + 32) & ~v6);
  swift_unknownObjectRelease();
  sub_2412C823C(*(_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 24), *(_QWORD *)(v7 + 32), *(_QWORD *)(v7 + 40), *(_QWORD *)(v7 + 48), *(_QWORD *)(v7 + 56), *(_QWORD *)(v7 + 64), *(_QWORD *)(v7 + 72), *(_QWORD *)(v7 + 80), *(_BYTE *)(v7 + 88), *(_BYTE *)(v7 + 89));
  v8 = v7 + *(int *)(v5 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_2414B2F8C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  v10 = v7 + *(int *)(v5 + 44);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25437DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2414B3934();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_2414517DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(_s19HeaderDismissButtonVMa(0, v5, v6, a4) - 8) + 80);
  return sub_24144D540((uint64_t *)(v4 + ((v7 + 32) & ~v7)), v5, v6);
}

uint64_t sub_24145182C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_24144D5AC(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_241451838()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571292F8;
  if (!qword_2571292F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571292F0);
    v2[0] = sub_2413D6340();
    v2[1] = sub_2412C8FC4(&qword_257129300, &qword_257129308, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571292F8);
  }
  return result;
}

unint64_t sub_2414518BC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  _QWORD v5[6];

  result = qword_257129318;
  if (!qword_257129318)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571292D8);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571292C8);
    v3 = sub_2414B3A9C();
    v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEF428];
    v5[2] = v2;
    v5[3] = v3;
    v5[4] = sub_2412C8FC4(&qword_257129310, &qword_2571292C8, MEMORY[0x24BDF43B0]);
    v5[5] = sub_2412C8030(&qword_254382BA0, v4, MEMORY[0x24BDEF420]);
    v5[0] = swift_getOpaqueTypeConformance2();
    v5[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_257129318);
  }
  return result;
}

uint64_t sub_2414519AC()
{
  return sub_24143007C(&qword_257129320, &qword_2571292E0, (uint64_t (*)(void))sub_2414518BC);
}

uint64_t sub_2414519C8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  uint64_t v16;
  _QWORD v17[2];
  _QWORD v18[2];

  v4 = *a1;
  v5 = a1[1];
  v6 = _s36FullScreenContentView_CompactRegularVMa(255, *a1, v5, a4);
  v8 = _s37FullScreenContentView_RegularExtendedVMa(255, v4, v5, v7);
  v9 = sub_2414B3A90();
  v10 = sub_2414B3A90();
  v11 = sub_2414B46F0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2543812C0);
  v12 = sub_2414B3514();
  v18[0] = MEMORY[0x242695AE8](&unk_2414C6978, v6);
  v18[1] = MEMORY[0x242695AE8](&unk_2414C5DA0, v8);
  v13 = MEMORY[0x24BDEF3E0];
  v17[0] = MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v9, v18);
  v17[1] = MEMORY[0x24BDF5138];
  v16 = MEMORY[0x242695AE8](v13, v10, v17);
  v15[0] = MEMORY[0x242695AE8](MEMORY[0x24BDF3F50], v11, &v16);
  v15[1] = sub_2412C8FC4(&qword_2543812B8, (uint64_t *)&unk_2543812C0, MEMORY[0x24BDF1028]);
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v12, v15);
}

uint64_t sub_241451B34()
{
  uint64_t (*v0)(uint64_t);

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571292E8);
  sub_2414B3AF0();
  v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEF8D0];
  sub_24143007C(&qword_257129328, &qword_2571292E8, sub_2414519AC);
  sub_2412C8030(&qword_257128CE8, v0, MEMORY[0x24BDEF8B0]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241451BD4(uint64_t a1)
{
  swift_unknownObjectRelease();
  return sub_2412C821C(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t sub_241451C00(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  swift_unknownObjectRetain();
  sub_2412C7080(v4, v5);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  return a1;
}

uint64_t sub_241451C50(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 8) = v2[1];
  v4 = v2[2];
  LOBYTE(v2) = *((_BYTE *)v2 + 24);
  sub_2412C7080(v4, (char)v2);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = (_BYTE)v2;
  sub_2412C821C(v5, v6);
  return a1;
}

uint64_t sub_241451CC4(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRelease();
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = v4;
  sub_2412C821C(v5, v6);
  return a1;
}

uint64_t sub_241451D14(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 25))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_241451D70(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t _s33DefaultMetadataAndContextMenuViewVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s33DefaultMetadataAndContextMenuViewVMn);
}

uint64_t _s21FullScreenArtworkViewVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s21FullScreenArtworkViewVMn);
}

uint64_t sub_241451DE0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241451E14()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241451E48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24144E37C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_241451E50()
{
  return sub_241451E68((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24144E81C);
}

uint64_t sub_241451E5C()
{
  return sub_241451E68((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24144EBC8);
}

uint64_t sub_241451E68(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_241451E80(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];
  _QWORD v13[2];

  v4 = _s27DefaultArtworkContainerViewVMa(255, *a1, a1[1], a4);
  MEMORY[0x242695AE8](&unk_2414BF818, v4);
  v5 = sub_2414B3604();
  v6 = sub_2414B3514();
  sub_2414B3DB4();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v8 = sub_2414B3514();
  v9 = MEMORY[0x242695AE8](MEMORY[0x24BDEDC10], v5);
  v13[0] = MEMORY[0x24BDF3E20];
  v13[1] = v9;
  v10 = MEMORY[0x24BDED308];
  v12[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v6, v13);
  v12[1] = sub_2412C8030((unint64_t *)&qword_2543844B0, v7, MEMORY[0x24BDF1078]);
  return MEMORY[0x242695AE8](v10, v8, v12);
}

void sub_241451F7C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s19DefaultMetadataViewVMa(255, *a1, a1[1], a4);
  sub_2414B3DB4();
  sub_2414B3514();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  _s15ContextMenuViewVMa();
}

uint64_t sub_241452024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];
  _QWORD v10[2];
  uint64_t v11;
  uint64_t v12;

  sub_2414B3514();
  sub_2414B3514();
  swift_getTupleTypeMetadata2();
  v0 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v0);
  v1 = sub_2414B4804();
  v2 = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v1);
  v11 = v1;
  v12 = v2;
  MEMORY[0x242695A94](255, &v11, MEMORY[0x24BDF2F10], 0);
  v11 = v1;
  v12 = v2;
  swift_getOpaqueTypeConformance2();
  v3 = sub_2414B3604();
  v4 = sub_2414B3514();
  v5 = sub_2414B3514();
  v6 = MEMORY[0x242695AE8](MEMORY[0x24BDEDC10], v3);
  v10[0] = MEMORY[0x24BDF3E20];
  v10[1] = v6;
  v7 = MEMORY[0x24BDED308];
  v9[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v4, v10);
  v9[1] = MEMORY[0x24BDEBEE0];
  return MEMORY[0x242695AE8](v7, v5, v9);
}

uint64_t sub_24145218C()
{
  uint64_t v0;

  v0 = sub_2414B2CA4();
  __swift_allocate_value_buffer(v0, qword_25438E848);
  __swift_project_value_buffer(v0, (uint64_t)qword_25438E848);
  return sub_2414B2C98();
}

uint64_t sub_241452200(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_24145223C + 4 * byte_2414C84E0[a1]))(0xD00000000000001ELL, 0x80000002414D4260);
}

uint64_t sub_24145223C()
{
  uint64_t v0;

  return v0 + 126;
}

uint64_t sub_2414522CC()
{
  unsigned __int8 *v0;

  return sub_241452200(*v0);
}

ValueMetadata *type metadata accessor for AudioTap()
{
  return &type metadata for AudioTap;
}

uint64_t storeEnumTagSinglePayload for AudioTap.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_241452330 + 4 * byte_2414C84EE[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_241452364 + 4 * byte_2414C84E9[v4]))();
}

uint64_t sub_241452364(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24145236C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241452374);
  return result;
}

uint64_t sub_241452380(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241452388);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_24145238C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241452394(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioTap.Error()
{
  return &type metadata for AudioTap.Error;
}

unint64_t sub_2414523B4()
{
  unint64_t result;

  result = qword_257129350;
  if (!qword_257129350)
  {
    result = MEMORY[0x242695AE8](&unk_2414C856C, &type metadata for AudioTap.Error);
    atomic_store(result, (unint64_t *)&qword_257129350);
  }
  return result;
}

uint64_t sub_2414523F8(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

id sub_241452460(void *a1, void *a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  _QWORD v19[6];
  objc_super v20;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v2[OBJC_IVAR____TtC11MediaCoreUI25MetalImageTextureProvider_currentTexture] = 0;
  v6 = OBJC_IVAR____TtC11MediaCoreUI25MetalImageTextureProvider_displayModeSubject;
  LOBYTE(v19[0]) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257123FA8);
  swift_allocObject();
  v7 = v2;
  *(_QWORD *)&v2[v6] = sub_2414B2DD0();
  *(_QWORD *)&v7[OBJC_IVAR____TtC11MediaCoreUI25MetalImageTextureProvider____lazy_storage___displayModePublisher] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11MediaCoreUI25MetalImageTextureProvider_image] = a1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11MediaCoreUI25MetalImageTextureProvider_textureLoader] = a2;
  v8 = a1;
  v9 = a2;

  v20.receiver = v7;
  v20.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v20, sel_init, v19[0]);
  v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain_n();
  v12 = v10;
  v13 = objc_msgSend(v8, sel_CGImage);
  if (v13)
  {
    v14 = v13;
    if (qword_257120A68 != -1)
      swift_once();
    type metadata accessor for Option(0);
    sub_241452DD0();
    v15 = sub_2414B4C00();
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = sub_241452DC4;
    *(_QWORD *)(v16 + 24) = v11;
    v19[4] = sub_2413634B8;
    v19[5] = v16;
    v19[0] = MEMORY[0x24BDAC760];
    v19[1] = 1107296256;
    v19[2] = sub_2414523F8;
    v19[3] = &block_descriptor_19;
    v17 = _Block_copy(v19);
    swift_retain();
    swift_release();
    objc_msgSend(v9, sel_newTextureWithCGImage_options_completionHandler_, v14, v15, v17);
    _Block_release(v17);

    v9 = (id)v15;
  }
  else
  {
    sub_2414526DC((void *)1, 1, v11);
    v14 = v8;
  }

  swift_release_n();
  return v12;
}

void sub_2414526DC(void *a1, char a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v5 = a3 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x242695CC8](v5);
  if (v6)
  {
    v7 = (void *)v6;
    if ((a2 & 1) != 0)
    {
      sub_2413634C0(a1);
      if (qword_2571209B0 != -1)
        swift_once();
      v8 = sub_2414B2CA4();
      __swift_project_value_buffer(v8, (uint64_t)qword_257137100);
      sub_2413634C0(a1);
      sub_2413634C0(a1);
      v9 = sub_2414B2C8C();
      v10 = sub_2414B51A0();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        v12 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v11 = 138543362;
        sub_2413636B4();
        swift_allocError();
        *v13 = a1;
        sub_2413634C0(a1);
        v14 = _swift_stdlib_bridgeErrorToNSError();
        sub_2414B541C();
        *v12 = v14;
        sub_2413634D0(a1, 1);
        sub_2413634D0(a1, 1);
        _os_log_impl(&dword_2412C1000, v9, v10, "MetalImageTextureProvider failed to load texture: %{public}@", v11, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25712B570);
        swift_arrayDestroy();
        MEMORY[0x242695BD8](v12, -1, -1);
        MEMORY[0x242695BD8](v11, -1, -1);

        sub_2413634D0(a1, 1);
      }
      else
      {

        sub_2413634D0(a1, 1);
        sub_2413634D0(a1, 1);
        sub_2413634DC(a1);

      }
    }
    else
    {
      *(_QWORD *)(v6 + OBJC_IVAR____TtC11MediaCoreUI25MetalImageTextureProvider_currentTexture) = a1;
      sub_2413636F8(a1, 0);
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      sub_2414B2DC4();
      sub_2413634D0(a1, 0);

    }
  }
}

uint64_t sub_24145296C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC11MediaCoreUI25MetalImageTextureProvider____lazy_storage___displayModePublisher;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC11MediaCoreUI25MetalImageTextureProvider____lazy_storage___displayModePublisher))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11MediaCoreUI25MetalImageTextureProvider____lazy_storage___displayModePublisher);
  }
  else
  {
    v3 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257123FA8);
    sub_241452D54();
    v2 = sub_2414B2E60();
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

unint64_t sub_241452A08()
{
  uint64_t inited;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  unint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2571293C8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2414B9400;
  v1 = (void *)*MEMORY[0x24BDDDB10];
  v2 = MEMORY[0x24BEE1328];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDDDB10];
  *(_BYTE *)(inited + 40) = 0;
  v3 = (void *)*MEMORY[0x24BDDDB20];
  *(_QWORD *)(inited + 64) = v2;
  *(_QWORD *)(inited + 72) = v3;
  *(_QWORD *)(inited + 104) = MEMORY[0x24BEE1E88];
  *(_QWORD *)(inited + 80) = 3;
  v4 = v1;
  v5 = v3;
  result = sub_241312054(inited);
  qword_257129360 = result;
  return result;
}

uint64_t sub_241452AA4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v17;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2414B4FE4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_2414B4FC0();
  swift_unknownObjectRetain();
  swift_retain();
  v12 = a2;
  v13 = sub_2414B4FB4();
  v14 = (_QWORD *)swift_allocObject();
  v15 = MEMORY[0x24BEE6930];
  v14[2] = v13;
  v14[3] = v15;
  v14[4] = a1;
  v14[5] = a3;
  v14[6] = a4;
  v14[7] = a2;
  sub_2413EE440((uint64_t)v10, (uint64_t)&unk_2571293C0, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_241452BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  sub_2414B4FC0();
  v7[6] = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_241452C18()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, _QWORD);
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  if (v1)
  {
    v2 = *(void (**)(uint64_t, _QWORD))(v0 + 24);
    v3 = swift_unknownObjectRetain();
    v2(v3, 0);
    swift_unknownObjectRelease();
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t))(v0 + 24))(*(_QWORD *)(v0 + 40), 1);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for MetalImageTextureProvider()
{
  return objc_opt_self();
}

uint64_t sub_241452D40()
{
  return swift_unknownObjectRetain();
}

unint64_t sub_241452D54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257123FB0;
  if (!qword_257123FB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257123FA8);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDB9D10], v1);
    atomic_store(result, (unint64_t *)&qword_257123FB0);
  }
  return result;
}

uint64_t sub_241452DA0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_241452DC4(void *a1, char a2)
{
  uint64_t v2;

  sub_2414526DC(a1, a2 & 1, v2);
}

unint64_t sub_241452DD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254384FD0;
  if (!qword_254384FD0)
  {
    type metadata accessor for Option(255);
    result = MEMORY[0x242695AE8](&unk_2414B8714, v1);
    atomic_store(result, (unint64_t *)&qword_254384FD0);
  }
  return result;
}

uint64_t sub_241452E18()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_241452E3C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_241452E78(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_241310430;
  return sub_241452BA8(a1, v4, v5, v6, v7, v9, v8);
}

void destroy for MetalImageTextureProvider.Error(void **a1)
{
  void *v1;
  int v2;

  v1 = *a1;
  v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF)
    v2 = (int)v1;
  if ((v2 + 1) <= 1)

}

_QWORD *_s11MediaCoreUI25MetalImageTextureProviderC5ErrorOwCP_0(_QWORD *a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  if (((_DWORD)v4 + 1) <= 1)
    v5 = v3;
  *a1 = v3;
  return a1;
}

void **assignWithCopy for MetalImageTextureProvider.Error(void **a1, void **a2)
{
  void *v3;
  void *v4;
  int v5;
  unsigned int v6;
  void *v7;
  unsigned int v8;
  id v9;
  void *v10;
  id v11;

  v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF)
    v5 = -1;
  else
    v5 = (int)v3;
  v6 = v5 + 1;
  v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = (_DWORD)v4 + 1;
  if (v6 > 1)
  {
    if (v8 <= 1)
      v11 = v7;
    *a1 = v7;
  }
  else if (v8 > 1)
  {

    *a1 = *a2;
  }
  else
  {
    v9 = v7;
    v10 = *a1;
    *a1 = v7;

  }
  return a1;
}

void **assignWithTake for MetalImageTextureProvider.Error(void **a1, void **a2)
{
  void *v3;
  void *v4;
  int v5;
  unsigned int v6;
  void *v7;
  unsigned int v8;

  v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF)
    v5 = -1;
  else
    v5 = (int)v3;
  v6 = v5 + 1;
  v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = (_DWORD)v4 + 1;
  if (v6 > 1)
    goto LABEL_11;
  if (v8 > 1)
  {

LABEL_11:
    *a1 = v7;
    return a1;
  }
  *a1 = v7;

  return a1;
}

uint64_t getEnumTagSinglePayload for MetalImageTextureProvider.Error(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) < 2)
    LODWORD(v3) = 0;
  if (v3 >= 2)
    return (v3 - 1);
  else
    return 0;
}

ValueMetadata *type metadata accessor for MetalImageTextureProvider.Error()
{
  return &type metadata for MetalImageTextureProvider.Error;
}

uint64_t MCUINamespace<A>.marqueeFeathering(_:_:)(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  char v9;
  uint64_t KeyPath;
  char v12;
  char v13;
  uint64_t v14;
  char v15;

  v9 = a1 & 1;
  KeyPath = swift_getKeyPath();
  v12 = 0;
  v13 = v9;
  v14 = a2;
  v15 = a3 & 1;
  MEMORY[0x242693DC0](&KeyPath, *(_QWORD *)(a4 + 16), &type metadata for MarqueeFeatheringModifier, a5);
  return swift_release();
}

uint64_t sub_241453188()
{
  uint64_t v1;

  sub_24145D5E8();
  sub_2414B3838();
  return v1;
}

uint64_t sub_2414531C0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_24145D5E8();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

uint64_t sub_24145320C()
{
  sub_24145D5E8();
  swift_bridgeObjectRetain();
  return sub_2414B3844();
}

uint64_t sub_241453268@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t KeyPath;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;

  v40 = a4;
  v41 = a6;
  v16 = sub_2414B346C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_25437D9B0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = &v23[*(int *)(v21 + 36)];
  KeyPath = swift_getKeyPath();
  *((_QWORD *)v24 + 1) = 0;
  *((_QWORD *)v24 + 2) = 0;
  *(_QWORD *)v24 = KeyPath;
  v24[24] = 0;
  v26 = &v23[v20[10]];
  *(_QWORD *)v26 = swift_getKeyPath();
  v26[8] = 0;
  v27 = &v23[v20[11]];
  *(_QWORD *)v27 = swift_getKeyPath();
  v27[8] = 0;
  v28 = &v23[v20[12]];
  *(_QWORD *)v28 = swift_getKeyPath();
  v28[8] = 0;
  v29 = &v23[v20[13]];
  *(_QWORD *)v29 = swift_getKeyPath();
  v29[8] = 0;
  v30 = &v23[v20[14]];
  *(_QWORD *)v30 = swift_getKeyPath();
  v30[8] = 0;
  v31 = &v23[v20[16]];
  v46 = 0;
  sub_2414B4798();
  v32 = v43;
  *(_QWORD *)v31 = v42;
  *((_QWORD *)v31 + 1) = v32;
  *(double *)&v23[v20[17]] = a7;
  *(double *)&v23[v20[18]] = a8;
  *(double *)&v23[v20[19]] = a9;
  v23[v20[20]] = a1;
  v33 = &v23[v20[21]];
  *(_QWORD *)v33 = a2;
  *((_DWORD *)v33 + 2) = a3;
  v33[12] = BYTE4(a3) & 1;
  v42 = v40;
  v43 = a5;
  sub_2412F6D88();
  swift_bridgeObjectRetain();
  v42 = sub_2414B40F0();
  v43 = v34;
  v44 = v35 & 1;
  v45 = v36;
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x24BDECF00], v16);
  sub_2414B42AC();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  sub_2412F6D78(v42, v43, v44);
  swift_bridgeObjectRelease();
  v37 = &v23[v20[15]];
  *(_QWORD *)v37 = 0;
  v37[8] = 1;
  sub_2412EAEA4((uint64_t)v23, v41, &qword_25437D9B0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24145352C@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;

  KeyPath = swift_getKeyPath();
  v12 = swift_getKeyPath();
  v13 = swift_getKeyPath();
  v14 = swift_getKeyPath();
  v15 = swift_getKeyPath();
  v16 = swift_getKeyPath();
  sub_2414B4798();
  sub_2412F6D88();
  result = sub_2414B40F0();
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = v19;
  *(_BYTE *)(a4 + 16) = v18 & 1;
  *(_QWORD *)(a4 + 24) = v20;
  *(_QWORD *)(a4 + 32) = KeyPath;
  *(_QWORD *)(a4 + 40) = 0;
  *(_QWORD *)(a4 + 48) = 0;
  *(_BYTE *)(a4 + 56) = 0;
  *(_QWORD *)(a4 + 64) = v12;
  *(_BYTE *)(a4 + 72) = 0;
  *(_QWORD *)(a4 + 80) = v13;
  *(_BYTE *)(a4 + 88) = 0;
  *(_QWORD *)(a4 + 96) = v14;
  *(_BYTE *)(a4 + 104) = 0;
  *(_QWORD *)(a4 + 112) = v15;
  *(_BYTE *)(a4 + 120) = 0;
  *(_QWORD *)(a4 + 128) = v16;
  *(_BYTE *)(a4 + 136) = 0;
  *(_QWORD *)(a4 + 144) = 0;
  *(_BYTE *)(a4 + 152) = 1;
  *(_QWORD *)(a4 + 160) = v24;
  *(_QWORD *)(a4 + 168) = v25;
  *(double *)(a4 + 176) = a5;
  *(double *)(a4 + 184) = a6;
  *(double *)(a4 + 192) = a7;
  *(_BYTE *)(a4 + 200) = a1;
  *(_QWORD *)(a4 + 204) = a2;
  *(_DWORD *)(a4 + 212) = a3;
  *(_BYTE *)(a4 + 216) = BYTE4(a3) & 1;
  return result;
}

uint64_t Marquee.init(spacing:rate:delay:isAnimating:preferredFrameRateRange:content:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t)@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>)
{
  int *v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v18 = (int *)type metadata accessor for Marquee(0, a5, a6, (uint64_t)a4);
  v19 = a7 + v18[9];
  KeyPath = swift_getKeyPath();
  *(_QWORD *)(v19 + 8) = 0;
  *(_QWORD *)(v19 + 16) = 0;
  *(_QWORD *)v19 = KeyPath;
  *(_BYTE *)(v19 + 24) = 0;
  v21 = a7 + v18[10];
  *(_QWORD *)v21 = swift_getKeyPath();
  *(_BYTE *)(v21 + 8) = 0;
  v22 = a7 + v18[11];
  *(_QWORD *)v22 = swift_getKeyPath();
  *(_BYTE *)(v22 + 8) = 0;
  v23 = a7 + v18[12];
  *(_QWORD *)v23 = swift_getKeyPath();
  *(_BYTE *)(v23 + 8) = 0;
  v24 = a7 + v18[13];
  *(_QWORD *)v24 = swift_getKeyPath();
  *(_BYTE *)(v24 + 8) = 0;
  v25 = a7 + v18[14];
  *(_QWORD *)v25 = swift_getKeyPath();
  *(_BYTE *)(v25 + 8) = 0;
  v26 = (_QWORD *)(a7 + v18[16]);
  v27 = sub_2414B4798();
  *v26 = v31;
  v26[1] = v32;
  *(double *)(a7 + v18[17]) = a8;
  *(double *)(a7 + v18[18]) = a9;
  *(double *)(a7 + v18[19]) = a10;
  *(_BYTE *)(a7 + v18[20]) = a1;
  v28 = a7 + v18[21];
  *(_QWORD *)v28 = a2;
  *(_DWORD *)(v28 + 8) = a3;
  *(_BYTE *)(v28 + 12) = BYTE4(a3) & 1;
  result = a4(v27);
  v30 = a7 + v18[15];
  *(_QWORD *)v30 = 0;
  *(_BYTE *)(v30 + 8) = 1;
  return result;
}

uint64_t Marquee.appending(badges:foregroundColor:badgeFont:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t KeyPath;
  uint64_t v17;
  unint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;
  _QWORD v22[2];
  _QWORD v23[4];
  char v24;

  v21 = a5;
  v9 = sub_2414B3514();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v22[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v22[-1] - v14;
  KeyPath = swift_getKeyPath();
  v23[0] = a1;
  v23[1] = a2;
  v23[2] = a3;
  v23[3] = KeyPath;
  v24 = 0;
  v17 = MEMORY[0x242695AE8](&protocol conformance descriptor for Marquee<A>, a4);
  MEMORY[0x242693DC0](v23, a4, &type metadata for AppendedBadgeModifier, v17);
  swift_release();
  v18 = sub_24133C168();
  v22[0] = v17;
  v22[1] = v18;
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v9, v22);
  sub_2412FBF34((uint64_t)v12, v9, (uint64_t)v15);
  v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v19(v12, v9);
  sub_2412EEA1C((uint64_t)v15, v9, v21);
  return ((uint64_t (*)(char *, uint64_t))v19)(v15, v9);
}

uint64_t sub_241453A10()
{
  sub_2412C89C0();
  return sub_2414B3838();
}

uint64_t sub_241453A44()
{
  sub_2412C89C0();
  return sub_2414B3838();
}

uint64_t sub_241453A80(uint64_t a1)
{
  uint64_t v2;
  _BYTE v3[40];

  sub_2412F1B18(a1, (uint64_t)v3);
  sub_2412F1B18((uint64_t)v3, (uint64_t)&v2);
  sub_2412C89C0();
  sub_2414B3844();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

uint64_t MCUINamespace<A>.marqueeAnimationDirection(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _BYTE *v7;
  char v8;
  _BYTE v10[16];

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (char *)MEMORY[0x24BDAC7A8](a1);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *v5;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v7, v2, v3);
  swift_getKeyPath();
  v10[15] = v8;
  sub_2414B41C8();
  swift_release();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t MCUINamespace<A>.coordinatedMarquees()(uint64_t a1, uint64_t a2)
{
  uint64_t v5;

  sub_2414B4798();
  MEMORY[0x242693DC0](&v5, *(_QWORD *)(a1 + 16), &type metadata for CoordinatedMarquees, a2);
  return swift_release();
}

uint64_t EnvironmentValues.marqueeBoundsRestrictedEdges.getter()
{
  return sub_2413047B4((void (*)(void))sub_2412D0504);
}

uint64_t sub_241453C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2412DFCEC(a1, a2, a3, a4, (void (*)(void))sub_2412D0504);
}

uint64_t EnvironmentValues.marqueeBoundsRestrictedEdges.setter()
{
  sub_2412D0504();
  return sub_2414B3844();
}

uint64_t sub_241453C90()
{
  uint64_t v1;

  sub_2412C84B8();
  sub_2414B3838();
  return v1;
}

uint64_t MCUINamespace<A>.marqueeFeathering(_:)(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t inited;
  _QWORD v13[10];

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))(v9, v10, v5, v7);
  swift_getKeyPath();
  if ((a2 & 1) != 0)
  {
    inited = MEMORY[0x24BEE4AF8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543815D8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2414B9400;
    *(_BYTE *)(inited + 32) = 0;
    *(_QWORD *)(inited + 40) = a1;
    *(_BYTE *)(inited + 48) = 1;
    *(_QWORD *)(inited + 56) = a1;
  }
  v13[9] = sub_2412CCE8C(inited);
  sub_2414B41C8();
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_241453DF4()
{
  return sub_2413183E0((void (*)(void))sub_2413C90A4);
}

double static MarqueeDefaults.spacing.getter()
{
  return sub_241453E5C(&qword_25437E380, (uint64_t)&qword_25437E378);
}

double static MarqueeDefaults.feathering.getter()
{
  return sub_241453E5C(&qword_25437E358, (uint64_t)&qword_25437E350);
}

double static MarqueeDefaults.rate.getter()
{
  return sub_241453E5C(&qword_25437E370, (uint64_t)&qword_25437E360);
}

double sub_241453E5C(_QWORD *a1, uint64_t a2)
{
  if (*a1 != -1)
    swift_once();
  return *(double *)a2;
}

double static MarqueeDefaults.delay.getter()
{
  return 3.0;
}

uint64_t static MarqueeDefaults.isAnimating.getter()
{
  return 1;
}

uint64_t static MarqueeDefaults.repeatCount.getter()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

uint64_t Marquee.init(spacing:feathering:rate:delay:isAnimating:content:)@<X0>(char a1@<W0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  int *v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v16 = (int *)type metadata accessor for Marquee(0, a3, a4, a3);
  v17 = a5 + v16[9];
  KeyPath = swift_getKeyPath();
  *(_QWORD *)(v17 + 8) = 0;
  *(_QWORD *)(v17 + 16) = 0;
  *(_QWORD *)v17 = KeyPath;
  *(_BYTE *)(v17 + 24) = 0;
  v19 = a5 + v16[10];
  *(_QWORD *)v19 = swift_getKeyPath();
  *(_BYTE *)(v19 + 8) = 0;
  v20 = a5 + v16[11];
  *(_QWORD *)v20 = swift_getKeyPath();
  *(_BYTE *)(v20 + 8) = 0;
  v21 = a5 + v16[12];
  *(_QWORD *)v21 = swift_getKeyPath();
  *(_BYTE *)(v21 + 8) = 0;
  v22 = a5 + v16[13];
  *(_QWORD *)v22 = swift_getKeyPath();
  *(_BYTE *)(v22 + 8) = 0;
  v23 = a5 + v16[14];
  *(_QWORD *)v23 = swift_getKeyPath();
  *(_BYTE *)(v23 + 8) = 0;
  v24 = (_QWORD *)(a5 + v16[16]);
  v25 = sub_2414B4798();
  *v24 = v29;
  v24[1] = v30;
  *(double *)(a5 + v16[17]) = a6;
  *(double *)(a5 + v16[18]) = a8;
  *(double *)(a5 + v16[19]) = a9;
  *(_BYTE *)(a5 + v16[20]) = a1;
  v26 = a5 + v16[21];
  *(_QWORD *)v26 = 0;
  *(_DWORD *)(v26 + 8) = 0;
  *(_BYTE *)(v26 + 12) = 1;
  result = a2(v25);
  v28 = a5 + v16[15];
  *(double *)v28 = a7;
  *(_BYTE *)(v28 + 8) = 0;
  return result;
}

uint64_t Marquee.init(spacing:feathering:rate:delay:isAnimating:preferredFrameRateRange:content:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t)@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>, double a11@<D3>)
{
  int *v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v20 = (int *)type metadata accessor for Marquee(0, a5, a6, (uint64_t)a4);
  v21 = a7 + v20[9];
  KeyPath = swift_getKeyPath();
  *(_QWORD *)(v21 + 8) = 0;
  *(_QWORD *)(v21 + 16) = 0;
  *(_QWORD *)v21 = KeyPath;
  *(_BYTE *)(v21 + 24) = 0;
  v23 = a7 + v20[10];
  *(_QWORD *)v23 = swift_getKeyPath();
  *(_BYTE *)(v23 + 8) = 0;
  v24 = a7 + v20[11];
  *(_QWORD *)v24 = swift_getKeyPath();
  *(_BYTE *)(v24 + 8) = 0;
  v25 = a7 + v20[12];
  *(_QWORD *)v25 = swift_getKeyPath();
  *(_BYTE *)(v25 + 8) = 0;
  v26 = a7 + v20[13];
  *(_QWORD *)v26 = swift_getKeyPath();
  *(_BYTE *)(v26 + 8) = 0;
  v27 = a7 + v20[14];
  *(_QWORD *)v27 = swift_getKeyPath();
  *(_BYTE *)(v27 + 8) = 0;
  v28 = (_QWORD *)(a7 + v20[16]);
  v29 = sub_2414B4798();
  *v28 = v33;
  v28[1] = v34;
  *(double *)(a7 + v20[17]) = a8;
  *(double *)(a7 + v20[18]) = a10;
  *(double *)(a7 + v20[19]) = a11;
  *(_BYTE *)(a7 + v20[20]) = a1;
  v30 = a7 + v20[21];
  *(_QWORD *)v30 = a2;
  *(_DWORD *)(v30 + 8) = a3;
  *(_BYTE *)(v30 + 12) = BYTE4(a3) & 1;
  result = a4(v29);
  v32 = a7 + v20[15];
  *(double *)v32 = a9;
  *(_BYTE *)(v32 + 8) = 0;
  return result;
}

uint64_t sub_2414541FC()
{
  uint64_t v1;

  sub_2412CCFE0();
  sub_2414B3838();
  return v1;
}

uint64_t sub_241454238(uint64_t *a1)
{
  sub_2412E6F98(*a1);
  sub_2412CCFE0();
  return sub_2414B3844();
}

uint64_t sub_241454290(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v2 = v1 + *(int *)(a1 + 48);
  v3 = *(_QWORD *)v2;
  v4 = *(_BYTE *)(v2 + 8);
  sub_2412E6F7C(*(_QWORD *)v2, v4);
  v5 = sub_241345070(v3, v4);
  sub_2412E6BF8(v3, v4);
  return v5;
}

uint64_t sub_2414542EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, char *, int *);
  int *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  char *v91;
  void (*v92)(char *, uint64_t, int *);
  uint64_t v93;
  uint64_t inited;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(char *, uint64_t, uint64_t);
  char *v119;
  uint64_t (*v120)(uint64_t, uint64_t);
  char *v122;
  uint64_t v123;
  void (*v124)(char *, uint64_t, uint64_t);
  uint64_t v125;
  void (*v126)(char *, uint64_t, uint64_t);
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  void (*v134)(uint64_t, char *, int *);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t (*v147)(uint64_t, uint64_t);
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD v171[2];
  uint64_t v172;
  char *v173;
  _QWORD v174[2];
  _QWORD v175[2];
  _QWORD v176[2];
  _QWORD v177[2];
  _QWORD v178[2];
  _QWORD v179[2];
  _QWORD v180[4];

  v162 = a1;
  v161 = a5;
  v7 = type metadata accessor for Marquee.MarqueeingContent(0, a2, a3, a4);
  v131 = *(_QWORD *)(v7 - 8);
  v128 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v125 = (uint64_t)&v122 - v8;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381280);
  v9 = sub_2414B3514();
  v137 = *(_QWORD *)(v9 - 8);
  v130 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v127 = (char *)&v122 - v10;
  v11 = sub_2414B3514();
  v141 = *(_QWORD *)(v11 - 8);
  v133 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v129 = (char *)&v122 - v12;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381340);
  v13 = sub_2414B3514();
  v146 = *(_QWORD *)(v13 - 8);
  v140 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v132 = (char *)&v122 - v14;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381330);
  v15 = sub_2414B3514();
  v148 = *(_QWORD *)(v15 - 8);
  v144 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v138 = (char *)&v122 - v16;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381370);
  v17 = sub_2414B3514();
  v151 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v166 = (char *)&v122 - v18;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381320);
  v152 = v17;
  v19 = sub_2414B3514();
  v155 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v154 = (char *)&v122 - v20;
  v156 = v21;
  v160 = sub_2414B3514();
  v157 = *(_QWORD *)(v160 - 8);
  v22 = MEMORY[0x24BDAC7A8](v160);
  v159 = (char *)&v122 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v153 = (char *)&v122 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v158 = (uint64_t)&v122 - v26;
  v123 = type metadata accessor for Marquee(0, a2, a3, v27);
  v28 = *(_QWORD *)(v123 - 8);
  v29 = *(_QWORD *)(v28 + 64);
  v30 = MEMORY[0x24BDAC7A8](v123);
  v143 = (char *)&v122 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v163 = (char *)&v122 - v32;
  v33 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v122 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for Marquee.RegularContent(0, a2, a3, v36);
  v150 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v39 = (char *)&v122 - v38;
  v149 = (char *)&v122 - v38;
  v40 = sub_2414B3514();
  v164 = *(_QWORD *)(v40 - 8);
  v41 = MEMORY[0x24BDAC7A8](v40);
  v43 = (char *)&v122 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v41);
  v165 = (uint64_t)&v122 - v44;
  v124 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 16);
  v122 = v35;
  v45 = v162;
  v124(v35, v162, a2);
  v46 = (uint64_t)v39;
  v47 = a2;
  v167 = a2;
  v168 = a3;
  sub_241455060((uint64_t)v35, a2, a3, v46);
  v48 = v163;
  v49 = (int *)v123;
  v126 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
  v126(v163, v45, v123);
  v50 = *(unsigned __int8 *)(v28 + 80);
  v51 = (v50 + 32) & ~v50;
  v136 = v51 + v29;
  v135 = v50 | 7;
  v52 = swift_allocObject();
  *(_QWORD *)(v52 + 16) = v47;
  *(_QWORD *)(v52 + 24) = a3;
  v139 = v51;
  v145 = v28;
  v53 = *(void (**)(uint64_t, char *, int *))(v28 + 32);
  v54 = v49;
  v134 = v53;
  v53(v52 + v51, v48, v49);
  v55 = MEMORY[0x242695AE8](&unk_2414C8C20, v37);
  v56 = v149;
  sub_2414B454C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v150 + 8))(v56, v37);
  v180[2] = v55;
  v180[3] = MEMORY[0x24BDF0910];
  v57 = MEMORY[0x24BDED308];
  v142 = MEMORY[0x242695AE8]();
  sub_2412FBF34((uint64_t)v43, v40, v165);
  v58 = *(uint64_t (**)(uint64_t, uint64_t))(v164 + 8);
  v149 = v43;
  v150 = v40;
  v147 = v58;
  v58((uint64_t)v43, v40);
  v59 = (uint64_t)v122;
  v60 = v162;
  v61 = v167;
  v124(v122, v162, v167);
  v62 = sub_2412E71C8();
  v63 = v125;
  sub_2414550D0(v59, v64, v65, v61, v168, v125, v62);
  swift_getKeyPath();
  v172 = *(_QWORD *)(v60 + v54[17]);
  v66 = v128;
  v67 = MEMORY[0x242695AE8](&unk_2414C8C70, v128);
  v68 = v127;
  sub_2414B41C8();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v63, v66);
  swift_getKeyPath();
  v172 = *(_QWORD *)(v60 + v54[18]);
  v69 = sub_2412C8FC4(&qword_254381278, &qword_254381280, MEMORY[0x24BDF1028]);
  v180[0] = v67;
  v180[1] = v69;
  v70 = v57;
  v71 = v130;
  v72 = MEMORY[0x242695AE8](v57, v130, v180);
  v73 = v129;
  sub_2414B41C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v137 + 8))(v68, v71);
  swift_getKeyPath();
  v172 = *(_QWORD *)(v60 + v54[19]);
  v179[0] = v72;
  v179[1] = v69;
  v74 = v70;
  v75 = v133;
  v76 = MEMORY[0x242695AE8](v70, v133, v179);
  v77 = v132;
  sub_2414B41C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v141 + 8))(v73, v75);
  swift_getKeyPath();
  LOBYTE(v172) = *(_BYTE *)(v60 + v54[20]);
  v78 = MEMORY[0x24BDF1028];
  v79 = sub_2412C8FC4(&qword_254381338, &qword_254381340, MEMORY[0x24BDF1028]);
  v178[0] = v76;
  v178[1] = v79;
  v80 = v74;
  v81 = v140;
  v82 = MEMORY[0x242695AE8](v74, v140, v178);
  v83 = v138;
  sub_2414B41C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v146 + 8))(v77, v81);
  swift_getKeyPath();
  v84 = v60 + v54[21];
  v85 = *(_QWORD *)v84;
  v86 = *(_DWORD *)(v84 + 8);
  LOBYTE(v84) = *(_BYTE *)(v84 + 12);
  v172 = v85;
  LODWORD(v173) = v86;
  BYTE4(v173) = v84;
  v87 = sub_2412C8FC4((unint64_t *)&qword_254381328, &qword_254381330, v78);
  v177[0] = v82;
  v177[1] = v87;
  v88 = v144;
  v89 = MEMORY[0x242695AE8](v80, v144, v177);
  sub_2414B41C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v148 + 8))(v83, v88);
  swift_getKeyPath();
  v90 = (uint64_t *)(v60 + v54[15]);
  if (*((_BYTE *)v90 + 8) == 1)
  {
    v91 = v143;
    v92 = (void (*)(char *, uint64_t, int *))v126;
    v126(v143, v60, (uint64_t)v54);
LABEL_4:
    v95 = sub_2412E7418((uint64_t)v54);
    goto LABEL_5;
  }
  v93 = *v90;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543815D8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2414B9400;
  *(_BYTE *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = v93;
  *(_BYTE *)(inited + 48) = 1;
  *(_QWORD *)(inited + 56) = v93;
  v95 = sub_2412CCE8C(inited);
  v91 = v143;
  v92 = (void (*)(char *, uint64_t, int *))v126;
  v126(v143, v60, (uint64_t)v54);
  if (!v95)
    goto LABEL_4;
LABEL_5:
  (*(void (**)(char *, int *))(v145 + 8))(v91, v54);
  v172 = v95;
  v96 = sub_2412C8FC4(&qword_254381368, &qword_254381370, MEMORY[0x24BDF1028]);
  v176[0] = v89;
  v176[1] = v96;
  v97 = MEMORY[0x24BDED308];
  v98 = v152;
  v99 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v152, v176);
  v100 = v154;
  v101 = v166;
  sub_2414B41C8();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v151 + 8))(v101, v98);
  v102 = v163;
  v92(v163, v60, v54);
  v103 = swift_allocObject();
  v104 = v168;
  *(_QWORD *)(v103 + 16) = v167;
  *(_QWORD *)(v103 + 24) = v104;
  v134(v103 + v139, v102, v54);
  v105 = sub_2412C8FC4(&qword_254381318, &qword_254381320, MEMORY[0x24BDF1028]);
  v175[0] = v99;
  v175[1] = v105;
  v106 = v156;
  v107 = MEMORY[0x242695AE8](v97, v156, v175);
  v108 = (uint64_t)v153;
  sub_2414B454C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v155 + 8))(v100, v106);
  v174[0] = v107;
  v174[1] = MEMORY[0x24BDF0910];
  v109 = v97;
  v110 = v160;
  v111 = MEMORY[0x242695AE8](v109, v160, v174);
  v112 = v158;
  sub_2412FBF34(v108, v110, v158);
  v113 = v157;
  v114 = *(void (**)(uint64_t, uint64_t))(v157 + 8);
  v114(v108, v110);
  v115 = (uint64_t)v149;
  v116 = v165;
  v117 = v150;
  (*(void (**)(char *, uint64_t, uint64_t))(v164 + 16))(v149, v165, v150);
  v172 = v115;
  v118 = *(void (**)(char *, uint64_t, uint64_t))(v113 + 16);
  v119 = v159;
  v118(v159, v112, v110);
  v173 = v119;
  v171[0] = v117;
  v171[1] = v110;
  v169 = v142;
  v170 = v111;
  sub_2412F68CC(&v172, 2uLL, (uint64_t)v171);
  v114(v112, v110);
  v120 = v147;
  v147(v116, v117);
  v114((uint64_t)v119, v110);
  return v120(v115, v117);
}

uint64_t sub_241455060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a4, a1, a2);
  v8 = a4 + *(int *)(type metadata accessor for Marquee.RegularContent(0, a2, a3, v7) + 36);
  result = swift_getKeyPath();
  *(_QWORD *)v8 = result;
  *(_BYTE *)(v8 + 8) = 0;
  return result;
}

uint64_t sub_2414550D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(a6, a1, a4);
  v14 = (int *)type metadata accessor for Marquee.MarqueeingContent(0, a4, a5, v13);
  v15 = a6 + v14[9];
  *(_QWORD *)v15 = a2;
  *(_QWORD *)(v15 + 8) = a3;
  *(double *)(v15 + 16) = a7;
  v16 = a6 + v14[10];
  KeyPath = swift_getKeyPath();
  *(_QWORD *)(v16 + 8) = 0;
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)v16 = KeyPath;
  *(_BYTE *)(v16 + 24) = 0;
  v18 = a6 + v14[11];
  *(_QWORD *)v18 = swift_getKeyPath();
  *(_BYTE *)(v18 + 8) = 0;
  v19 = a6 + v14[12];
  *(_QWORD *)v19 = swift_getKeyPath();
  *(_BYTE *)(v19 + 8) = 0;
  v20 = a6 + v14[13];
  *(_QWORD *)v20 = swift_getKeyPath();
  *(_BYTE *)(v20 + 8) = 0;
  v21 = a6 + v14[14];
  result = swift_getKeyPath();
  *(_QWORD *)v21 = result;
  *(_BYTE *)(v21 + 8) = 0;
  return result;
}

double sub_2414551E4()
{
  return sub_24137B638((void (*)(void))sub_2412DFBDC);
}

double sub_2414551F8()
{
  return sub_24137B638((void (*)(void))sub_2412DFC64);
}

double sub_24145520C()
{
  return sub_24137B638((void (*)(void))sub_2412DFC20);
}

uint64_t sub_241455220()
{
  return sub_2413183E0((void (*)(void))sub_2412DFB98);
}

uint64_t sub_241455234()
{
  uint64_t v1;

  sub_2412DFB54();
  sub_2414B3838();
  return v1;
}

uint64_t sub_241455280()
{
  return sub_2413047B4((void (*)(void))sub_2412DFD48);
}

uint64_t sub_241455294@<X0>(_QWORD *a1@<X8>)
{
  return keypath_getTm((void (*)(void))sub_2412DFD48, a1);
}

uint64_t sub_2414552A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2412DFCEC(a1, a2, a3, a4, (void (*)(void))sub_2412DFD48);
}

uint64_t sub_2414552BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2412DFCEC(a1, a2, a3, a4, (void (*)(void))sub_2412DFD48);
}

double sub_2414552E0@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  uint64_t v4;

  sub_2412CCFE0();
  sub_2414B3838();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_QWORD *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_241455338@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2414B37B4();
  *a1 = result;
  return result;
}

uint64_t sub_241455360()
{
  swift_retain();
  return sub_2414B37C0();
}

uint64_t sub_241455388@<X0>(_QWORD *a1@<X8>)
{
  return keypath_getTm((void (*)(void))sub_2412D0504, a1);
}

uint64_t sub_2414553A0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_24145D5E8();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

void sub_2414553F0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for Marquee(0, a2, a3, (uint64_t)a4);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - v8;
  if (qword_254382AD8 != -1)
    swift_once();
  v10 = sub_2414B2CA4();
  __swift_project_value_buffer(v10, (uint64_t)qword_254382AB8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v11 = sub_2414B2C8C();
  v12 = sub_2414B5188();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v20 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = sub_241454290(v6);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (*(_QWORD *)(v15 + 16))
    {
      v19 = v15;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2543814A0);
      sub_2412C8FC4((unint64_t *)&qword_2543814A8, &qword_2543814A0, MEMORY[0x24BEE12B0]);
      v16 = sub_2414B4CB4();
      v18 = v17;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      v18 = 0xE400000000000000;
      v16 = 1701736270;
    }
    v19 = sub_2412E4890(v16, v18, &v20);
    sub_2414B541C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2412C1000, v11, v12, a4, v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242695BD8](v14, -1, -1);
    MEMORY[0x242695BD8](v13, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

}

uint64_t sub_241455660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  void (*v15)(_BYTE *, uint64_t);
  _BYTE v17[16];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_QWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254382B78);
  swift_getTupleTypeMetadata2();
  v6 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v6);
  v7 = sub_2414B4804();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v17[-v12];
  v14 = *(_QWORD *)(a1 + 24);
  v18 = v5;
  v19 = v14;
  v20 = v2;
  sub_2414B3880();
  sub_2414B47F8();
  MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v7);
  sub_2412FBF34((uint64_t)v10, v7, (uint64_t)v13);
  v15 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
  v15(v10, v7);
  sub_2412EEA1C((uint64_t)v13, v7, a2);
  return ((uint64_t (*)(_BYTE *, uint64_t))v15)(v13, v7);
}

uint64_t sub_2414557DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  _QWORD v28[2];
  __int128 v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];

  v28[1] = a4;
  v28[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_254382B78);
  MEMORY[0x24BDAC7A8](v28[0]);
  v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v28 - v10;
  v12 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v28 - v17;
  sub_2412FBF34(a1, a2, (uint64_t)v28 - v17);
  v20 = a1 + *(int *)(type metadata accessor for Marquee.RegularContent(0, a2, a3, v19) + 36);
  v21 = *(_QWORD *)v20;
  v22 = *(_BYTE *)(v20 + 8);
  sub_2412C7080(*(_QWORD *)v20, v22);
  v23 = sub_2412F9C24(v21, v22);
  sub_2412C821C(v21, v22);
  if ((v23 & 1) != 0)
  {
    v29 = xmmword_2414C8660;
    v30 = 0;
    v31 = MEMORY[0x24BEE4AF8];
    sub_2414B439C();
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380D08);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v11, 0, 1, v24);
  }
  else
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380D08);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v11, 1, 1, v25);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v18, a2);
  *(_QWORD *)&v29 = v15;
  sub_2412DC3FC((uint64_t)v11, (uint64_t)v8, &qword_254382B78);
  *((_QWORD *)&v29 + 1) = v8;
  v34[0] = a2;
  v34[1] = v28[0];
  v32 = a3;
  v33 = sub_2412C8620(&qword_254382B80, &qword_254382B78, (uint64_t (*)(void))sub_24145D798, MEMORY[0x24BDF5578]);
  sub_2412F68CC((uint64_t *)&v29, 2uLL, (uint64_t)v34);
  sub_2412CBE78((uint64_t)v11, &qword_254382B78);
  v26 = *(void (**)(char *, uint64_t))(v12 + 8);
  v26(v18, a2);
  sub_2412CBE78((uint64_t)v8, &qword_254382B78);
  return ((uint64_t (*)(char *, uint64_t))v26)(v15, a2);
}

uint64_t sub_241455A64()
{
  return sub_2413183E0((void (*)(void))sub_2412DFCA8);
}

uint64_t sub_241455A78@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_34Tm((void (*)(void))sub_2412DFCA8, a1);
}

uint64_t sub_241455A8C()
{
  sub_2412DFCA8();
  return sub_2414B3844();
}

uint64_t sub_241455AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_35Tm(a1, a2, a3, a4, (void (*)(void))sub_2412DFCA8);
}

double sub_241455AE8()
{
  uint64_t v0;
  double v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381458);
  MEMORY[0x242694144](&v2, v0);
  return v2;
}

double sub_241455B3C()
{
  double v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254381458);
  sub_2414B48DC();
  return v1;
}

void sub_241455B98(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t OpaqueTypeConformance2;
  unint64_t v10;
  uint64_t v11;
  _QWORD v12[11];
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];

  v15 = a2;
  v12[4] = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v14 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2414B3CD0();
  v12[10] = *(_QWORD *)(v13 - 8);
  v4 = MEMORY[0x24BDAC7A8](v13);
  v12[8] = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[7] = a1;
  v6 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 16);
  v7 = v16;
  v17 = v6;
  MEMORY[0x242695A94](255, &v16, MEMORY[0x24BDF2240], 0, v4);
  v8 = sub_2414B3514();
  v16 = v7;
  v17 = v6;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v10 = sub_2412E6820();
  v20[0] = OpaqueTypeConformance2;
  v20[1] = v10;
  v11 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v8, v20);
  v16 = v7;
  v17 = v8;
  v18 = v6;
  v19 = v11;
  type metadata accessor for Marquee.MarqueeAnimationView();
}

uint64_t sub_241455CD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t OpaqueTypeConformance2;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t);
  _BYTE v70[96];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381160);
  sub_2414B3514();
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254382BC8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380E08);
  swift_getTupleTypeMetadata3();
  v3 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v3);
  v4 = sub_2414B4804();
  *(_QWORD *)(v2 - 344) = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = &v70[-v6];
  v8 = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v4, v5);
  *(_QWORD *)(v2 - 136) = v4;
  *(_QWORD *)(v2 - 128) = v8;
  v9 = MEMORY[0x242695A94](0, v2 - 136, MEMORY[0x24BDF2F10], 0);
  *(_QWORD *)(v2 - 336) = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v70[-v10];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543812F8);
  v12 = sub_2414B3514();
  *(_QWORD *)(v2 - 288) = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v2 - 240) = &v70[-v13];
  *(_QWORD *)(v2 - 384) = v14;
  v15 = sub_2414B3514();
  *(_QWORD *)(v2 - 272) = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v2 - 232) = &v70[-v16];
  *(_QWORD *)(v2 - 376) = v17;
  v18 = sub_2414B3514();
  *(_QWORD *)(v2 - 360) = v18;
  *(_QWORD *)(v2 - 368) = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v2 - 280) = &v70[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v2 - 264) = &v70[-v21];
  *(_QWORD *)(v2 - 208) = v1;
  *(_QWORD *)(v2 - 200) = v0;
  v22 = *(int **)(v2 - 328);
  v23 = *(_QWORD *)(v2 - 312);
  *(_QWORD *)(v2 - 192) = v23;
  sub_2414B3880();
  sub_2414B47F8();
  v24 = *(_QWORD *)(v2 - 320);
  sub_2414B3CB8();
  sub_2414B43B4();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 304) + 8))(v24, *(_QWORD *)(v2 - 296));
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v2 - 344) + 8))(v7, v4);
  v25 = v23;
  v26 = v23 + v22[12];
  v27 = *(_QWORD *)v26;
  v28 = *(unsigned __int8 *)(v26 + 8);
  j__swift_retain();
  v29 = sub_2412E7220(v27, v28);
  sub_2412E6C04(v27, v28);
  if (!v29)
    sub_2414B3EB0();
  *(_QWORD *)(v2 - 136) = v4;
  *(_QWORD *)(v2 - 128) = v8;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_2414B4468();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v2 - 336) + 8))(v11, v9);
  sub_2414B3E68();
  v31 = v25;
  v32 = v25 + v22[13];
  v33 = *(_QWORD *)v32;
  v34 = *(_BYTE *)(v32 + 8);
  sub_2412E6F7C(*(_QWORD *)v32, v34);
  v35 = sub_2412E6804(v33, v34);
  sub_2412E6BF8(v33, v34);
  LOBYTE(v33) = sub_2412E66E8(0, v35);
  swift_bridgeObjectRelease();
  if ((v33 & 1) != 0)
  {
    v36 = v25 + v22[14];
    v37 = *(_QWORD *)v36;
    v38 = *(_BYTE *)(v36 + 8);
    sub_2412E6F7C(*(_QWORD *)v36, v38);
    v39 = sub_2412E7474(v37, v38);
    sub_2412E6BF8(v37, v38);
    v40 = *(_QWORD *)(v2 - 352);
    v41 = *(_QWORD *)(v2 - 384);
    if (!*(_QWORD *)(v39 + 16) || (sub_2412E7920(0), (v42 & 1) == 0))
    {
      if (qword_25437E358 != -1)
        swift_once();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v40 = *(_QWORD *)(v2 - 352);
    v41 = *(_QWORD *)(v2 - 384);
  }
  v43 = sub_2412C8FC4(&qword_2543812F0, &qword_2543812F8, MEMORY[0x24BDF1028]);
  *(_QWORD *)(v2 - 152) = OpaqueTypeConformance2;
  *(_QWORD *)(v2 - 144) = v43;
  v44 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v41, v2 - 152);
  v45 = *(_QWORD *)(v2 - 240);
  sub_2414B4528();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 288) + 8))(v45, v41);
  sub_2414B3E80();
  v46 = *(_QWORD *)v32;
  v47 = *(_BYTE *)(v32 + 8);
  sub_2412E6F7C(*(_QWORD *)v32, v47);
  v48 = sub_2412E6804(v46, v47);
  sub_2412E6BF8(v46, v47);
  LOBYTE(v46) = sub_2412E66E8(1, v48);
  swift_bridgeObjectRelease();
  v49 = *(_QWORD *)(v2 - 256);
  (*(void (**)(uint64_t, uint64_t, int *))(v40 + 16))(v49, v31, v22);
  if ((v46 & 1) == 0)
  {
    (*(void (**)(uint64_t, int *))(v40 + 8))(v49, v22);
    goto LABEL_17;
  }
  v50 = v49 + v22[11];
  v51 = *(_QWORD *)v50;
  v52 = *(_BYTE *)(v50 + 8);
  sub_2412C7080(*(_QWORD *)v50, v52);
  v53 = sub_2412F9C24(v51, v52);
  sub_2412C821C(v51, v52);
  (*(void (**)(uint64_t, int *))(v40 + 8))(v49, v22);
  if ((v53 & 1) != 0)
  {
LABEL_17:
    v60 = *(_QWORD *)(v2 - 360);
    v61 = *(_QWORD *)(v2 - 368);
    v58 = *(_QWORD *)(v2 - 376);
    goto LABEL_18;
  }
  v54 = v31 + v22[14];
  v55 = *(_QWORD *)v54;
  v56 = *(_BYTE *)(v54 + 8);
  sub_2412E6F7C(*(_QWORD *)v54, v56);
  v57 = sub_2412E7474(v55, v56);
  sub_2412E6BF8(v55, v56);
  v58 = *(_QWORD *)(v2 - 376);
  if (*(_QWORD *)(v57 + 16) && (sub_2412E7920(1), (v59 & 1) != 0))
  {
    swift_bridgeObjectRelease();
    v60 = *(_QWORD *)(v2 - 360);
    v61 = *(_QWORD *)(v2 - 368);
  }
  else
  {
    v60 = *(_QWORD *)(v2 - 360);
    v61 = *(_QWORD *)(v2 - 368);
    if (qword_25437E358 != -1)
      swift_once();
    swift_bridgeObjectRelease();
  }
LABEL_18:
  v62 = MEMORY[0x24BDECC60];
  *(_QWORD *)(v2 - 168) = v44;
  *(_QWORD *)(v2 - 160) = v62;
  v63 = MEMORY[0x24BDED308];
  v64 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v58, v2 - 168);
  v65 = *(_QWORD *)(v2 - 280);
  v66 = *(_QWORD *)(v2 - 232);
  sub_2414B4528();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 272) + 8))(v66, v58);
  *(_QWORD *)(v2 - 184) = v64;
  *(_QWORD *)(v2 - 176) = v62;
  MEMORY[0x242695AE8](v63, v60, v2 - 184);
  v67 = *(_QWORD *)(v2 - 264);
  sub_2412FBF34(v65, v60, v67);
  v68 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
  v68(v65, v60);
  sub_2412EEA1C(v67, v60, *(_QWORD *)(v2 - 248));
  return ((uint64_t (*)(uint64_t, uint64_t))v68)(v67, v60);
}

void sub_241456488(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t OpaqueTypeConformance2;
  unint64_t v24;
  _QWORD v25[10];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[15];

  v35 = a3;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380E08);
  MEMORY[0x24BDAC7A8](v33);
  v36 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v34 = (char *)v25 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380D08);
  MEMORY[0x24BDAC7A8](v8);
  v25[1] = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v25[0] = (char *)v25 - v11;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_254382BC8);
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v31 = (char *)v25 - v14;
  v15 = sub_2414B4090();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v17 = a1;
  v37 = a1;
  v38 = a2;
  v18 = a2;
  v19 = MEMORY[0x242695A94](0, &v37, MEMORY[0x24BDF2240], 0, v16);
  v29 = *(_QWORD *)(v19 - 8);
  v28 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v25[3] = (char *)v25 - v20;
  v21 = sub_2414B3514();
  MEMORY[0x24BDAC7A8](v21);
  v25[9] = (char *)v25 - v22;
  v37 = v17;
  v38 = a2;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v25[7] = OpaqueTypeConformance2;
  v24 = sub_2412E6820();
  v41[0] = OpaqueTypeConformance2;
  v41[1] = v24;
  v27 = v21;
  v26 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v21, v41);
  v37 = v17;
  v38 = v21;
  v39 = v18;
  v40 = v26;
  v25[5] = v18;
  type metadata accessor for Marquee.MarqueeAnimationView();
}

void sub_24145670C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v9[14] = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9[6] = (char *)&a9 - v16;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381160);
  v17 = sub_2414B3514();
  v18 = *(_QWORD *)(v17 - 8);
  v9[13] = v17;
  v9[16] = v18;
  MEMORY[0x24BDAC7A8](v17);
  v9[8] = (char *)&a9 - v19;
  v20 = sub_2414B3514();
  v9[27] = v20;
  v9[24] = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v9[26] = (char *)&a9 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v9[25] = (char *)&a9 - v23;
  sub_2414B4084();
  v9[4] = v11;
  v9[2] = v12;
  sub_2414B415C();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v14, v15);
  v25 = v12 + *(int *)(type metadata accessor for Marquee.MarqueeingContent(0, v11, v13, v24) + 40);
  v26 = *(_QWORD *)v25;
  v27 = *(_QWORD *)(v25 + 8);
  v28 = *(_QWORD *)(v25 + 16);
  v29 = *(_BYTE *)(v25 + 24);
  sub_2412E6F8C(*(_QWORD *)v25, v27, v28, v29);
  v30 = sub_2412E6FD4(v26, v27, v28, v29);
  v32 = v31;
  v34 = v33;
  sub_2412E6C0C(v26, v27, v28, v29);
  v9[34] = v30;
  v9[35] = v32;
  v9[36] = v34;
  v35 = v9[9];
  v36 = v9[12];
  v37 = v9[3];
  MEMORY[0x242693DC0](v9 + 34, v36, &type metadata for EmbeddedBadgeModifier, v9[7]);
  sub_2412E6C18(v30);
  (*(void (**)(uint64_t, uint64_t))(v9[15] + 8))(v37, v36);
  sub_241455B3C();
  sub_241456E5C(v35, v9[11], v9[6]);
}

uint64_t sub_24145692C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);

  *(double *)(v0 + 272) = sub_241455AE8();
  v6 = MEMORY[0x242695AE8](&unk_2414C8CC0, v2);
  sub_2412E7490();
  v7 = *(_QWORD *)(v0 + 64);
  sub_2414B4150();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 112) + 8))(v3, v2);
  KeyPath = swift_getKeyPath();
  *(_BYTE *)(v5 - 136) = 0;
  *(_QWORD *)(v0 + 272) = KeyPath;
  *(_BYTE *)(v0 + 312) = 0;
  v9 = sub_2412C8FC4(&qword_254381158, &qword_254381160, MEMORY[0x24BDF0B90]);
  *(_QWORD *)(v5 - 216) = v6;
  *(_QWORD *)(v5 - 208) = v9;
  v10 = MEMORY[0x24BDED308];
  v11 = *(_QWORD *)(v0 + 104);
  v12 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v11, v5 - 216);
  v13 = *(_QWORD *)(v0 + 208);
  MEMORY[0x242693DC0](v0 + 272, v11, &type metadata for MarqueeMaskModifier, v12);
  sub_2412E6170(v0 + 272);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 128) + 8))(v7, v11);
  v14 = sub_2412E752C();
  *(_QWORD *)(v5 - 232) = v12;
  *(_QWORD *)(v5 - 224) = v14;
  v15 = v1;
  v16 = *(_QWORD *)(v0 + 216);
  v17 = MEMORY[0x242695AE8](v10, v16, v5 - 232);
  v18 = *(_QWORD *)(v0 + 200);
  *(_QWORD *)(v0 + 120) = v17;
  sub_2412FBF34(v13, v16, v18);
  v19 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 192) + 8);
  *(_QWORD *)(v0 + 128) = v19;
  v19(v13, v16);
  v20 = v15 + *(int *)(v4 + 44);
  v21 = *(_QWORD *)v20;
  LOBYTE(v10) = *(_BYTE *)(v20 + 8);
  sub_2412C7080(*(_QWORD *)v20, v10);
  v22 = sub_2412F9C24(v21, v10);
  sub_2412C821C(v21, v10);
  v23 = MEMORY[0x24BEE4AF8];
  if ((v22 & 1) != 0)
  {
    *(_OWORD *)(v0 + 272) = xmmword_2414C8660;
    *(_BYTE *)(v0 + 288) = 0;
    *(_QWORD *)(v0 + 296) = v23;
    v24 = *(_QWORD *)v0;
    sub_2414B439C();
    v25 = v15 + *(int *)(v4 + 56);
    v26 = *(_QWORD *)v25;
    v27 = *(_BYTE *)(v25 + 8);
    sub_2412E6F7C(*(_QWORD *)v25, v27);
    v28 = sub_2412E7474(v26, v27);
    sub_2412E6BF8(v26, v27);
    v29 = v24;
    if (!*(_QWORD *)(v28 + 16) || (sub_2412E7920(1), (v30 & 1) == 0))
    {
      if (qword_25437E358 != -1)
        swift_once();
    }
    swift_bridgeObjectRelease();
    sub_2414B4A44();
    sub_2414B31B4();
    v34 = *(_QWORD *)(v5 - 184);
    v35 = *(_BYTE *)(v5 - 176);
    v36 = *(_QWORD *)(v5 - 168);
    v37 = *(_BYTE *)(v5 - 160);
    v38 = *(_QWORD *)(v5 - 144);
    *(_QWORD *)(v0 + 112) = *(_QWORD *)(v5 - 152);
    v39 = v24;
    v40 = *(_QWORD *)(v0 + 8);
    sub_2412DC3FC(v39, v40, &qword_254380D08);
    v33 = *(_QWORD *)(v0 + 152);
    sub_2412DC3FC(v40, v33, &qword_254380D08);
    v41 = v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257129410) + 48);
    *(_QWORD *)v41 = 0;
    *(_BYTE *)(v41 + 8) = 1;
    *(_QWORD *)(v41 + 16) = v34;
    *(_BYTE *)(v41 + 24) = v35;
    *(_QWORD *)(v41 + 32) = v36;
    *(_BYTE *)(v41 + 40) = v37;
    *(_QWORD *)(v41 + 48) = *(_QWORD *)(v0 + 112);
    *(_QWORD *)(v41 + 56) = v38;
    sub_2412CBE78(v29, &qword_254380D08);
    sub_2412CBE78(v40, &qword_254380D08);
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_254382BC0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v33, 0, 1, v42);
    v32 = *(_QWORD *)(v0 + 144);
    sub_2412EAEA4(v33, v32, &qword_254382BC8);
    v23 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254382BC0);
    v32 = *(_QWORD *)(v0 + 144);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v32, 1, 1, v31);
    v33 = *(_QWORD *)(v0 + 152);
  }
  sub_2414B4A44();
  sub_2414B31B4();
  v43 = *(_QWORD *)(v5 - 136);
  v44 = *(_BYTE *)(v5 - 128);
  v45 = *(_QWORD *)(v5 - 120);
  v46 = *(_BYTE *)(v5 - 112);
  *(_OWORD *)(v0 + 272) = xmmword_2414C8660;
  *(_BYTE *)(v0 + 288) = 0;
  *(_QWORD *)(v0 + 296) = v23;
  *(_QWORD *)(v0 + 304) = v43;
  *(_BYTE *)(v0 + 312) = v44;
  *(_QWORD *)(v0 + 320) = v45;
  *(_BYTE *)(v0 + 328) = v46;
  *(_OWORD *)(v0 + 336) = *(_OWORD *)(v5 - 104);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380CF0);
  sub_2412E61AC();
  v47 = *(_QWORD *)(v0 + 168);
  sub_2414B439C();
  v48 = *(_QWORD *)(v0 + 200);
  v50 = *(_QWORD *)(v0 + 208);
  v49 = *(_QWORD *)(v0 + 216);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 192) + 16))(v50, v48, v49);
  *(_QWORD *)(v0 + 272) = v50;
  sub_2412DC3FC(v32, v33, &qword_254382BC8);
  *(_QWORD *)(v0 + 280) = v33;
  v51 = *(_QWORD *)(v0 + 184);
  sub_2412DC3FC(v47, v51, &qword_254380E08);
  *(_QWORD *)(v0 + 288) = v51;
  v52 = *(_QWORD *)(v0 + 136);
  *(_QWORD *)(v0 + 248) = v49;
  *(_QWORD *)(v0 + 256) = v52;
  *(_QWORD *)(v0 + 264) = *(_QWORD *)(v0 + 160);
  *(_QWORD *)(v0 + 224) = *(_QWORD *)(v0 + 120);
  *(_QWORD *)(v0 + 232) = sub_24145D68C();
  *(_QWORD *)(v0 + 240) = sub_24145D708();
  sub_2412F68CC((uint64_t *)(v0 + 272), 3uLL, v0 + 248);
  sub_2412CBE78(v47, &qword_254380E08);
  sub_2412CBE78(v32, &qword_254382BC8);
  v53 = *(void (**)(uint64_t, uint64_t))(v0 + 128);
  v53(v48, v49);
  sub_2412CBE78(v51, &qword_254380E08);
  sub_2412CBE78(v33, &qword_254382BC8);
  return ((uint64_t (*)(uint64_t, uint64_t))v53)(v50, v49);
}

void sub_241456E5C(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for Marquee.MarqueeAnimationView();
}

uint64_t sub_241456EC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t result;

  v5 = (_QWORD *)(v3 + *(int *)(a1 + 52));
  *v5 = v2;
  v5[1] = v1;
  v5[2] = v4;
  v6 = v3 + *(int *)(a1 + 56);
  result = swift_getKeyPath();
  *(_QWORD *)v6 = result;
  *(_BYTE *)(v6 + 8) = 0;
  return result;
}

double sub_241456F18()
{
  return sub_24137B638((void (*)(void))sub_2412DFD8C);
}

uint64_t sub_241456F2C()
{
  sub_2412C8474();
  return sub_2414B3838();
}

uint64_t sub_241456F60()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_254381458);
  return sub_2414B48D0();
}

BOOL static MarqueeAnimationDirection.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void sub_241456FE0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_24145D198();
}

void sub_241457004()
{
  uint64_t v0;
  id v1;
  void *v2;

  v0 = sub_2414B2CA4();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_2412E2058();
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_sizeThatFits_, 1.79769313e308, 1.79769313e308);

    sub_2412E7A64();
  }
  __break(1u);
  JUMPOUT(0x24145739CLL);
}

void sub_2414573A8()
{
  id v0;
  void *v1;

  v0 = sub_2412E2058();
  if (v0)
  {
    v1 = v0;
    objc_msgSend(v0, sel_frame);

  }
  else
  {
    __break(1u);
  }
}

double sub_2414573F8(void *a1)
{
  id v1;
  double v2;
  double v3;

  v1 = a1;
  sub_241457438();
  v3 = v2;

  return v3;
}

void sub_241457438()
{
  id v0;
  void *v1;

  v0 = sub_2412E2058();
  if (v0)
  {
    v1 = v0;
    objc_msgSend(v0, sel_sizeThatFits_, 1.79769313e308, 1.79769313e308);

  }
  else
  {
    __break(1u);
  }
}

void sub_24145749C()
{
  sub_24145D200();
}

void sub_2414574BC(uint64_t a1)
{
  MEMORY[0x242695AE8](&unk_2414C8D10, a1);
  sub_2414B3A48();
  __break(1u);
}

uint64_t sub_2414574EC()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_241457510@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for BackdropMaskModifier.BackdropGroup();
  result = sub_2414B2DA0();
  *a1 = result;
  return result;
}

uint64_t sub_24145754C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = sub_2414B2B30();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for BackdropMaskModifier.BackdropGroup();
  v4 = swift_allocObject();
  sub_2414B2B24();
  v5 = sub_2414B2B0C();
  v7 = v6;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  *(_QWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 24) = v7;
  return v4;
}

uint64_t sub_2414575F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(void);
  uint64_t (*v55)(void);
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  _QWORD v64[3];
  uint64_t v65;
  uint64_t v66;
  _BYTE v67[7];
  char v68;
  _BYTE v69[7];
  _BYTE v70[7];
  char v71;
  _BYTE v72[7];
  _BYTE v73[7];

  v66 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129458);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129460);
  MEMORY[0x24BDAC7A8](v65);
  v8 = (char *)v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v2 + 24);
  v10 = *(_BYTE *)(v2 + 32);
  sub_2412E6F7C(v9, v10);
  v11 = sub_2412E7474(v9, v10);
  sub_2412E6BF8(v9, v10);
  if (*(_QWORD *)(v11 + 16) && (v12 = sub_2412E7920(0), (v13 & 1) != 0))
  {
    v14 = (uint64_t *)(*(_QWORD *)(v11 + 56) + 8 * v12);
  }
  else
  {
    if (qword_25437E358 != -1)
      swift_once();
    v14 = &qword_25437E350;
  }
  v15 = *v14;
  swift_bridgeObjectRelease();
  sub_2412E6F7C(v9, v10);
  v16 = sub_2412E7474(v9, v10);
  sub_2412E6BF8(v9, v10);
  if (*(_QWORD *)(v16 + 16) && (v17 = sub_2412E7920(1), (v18 & 1) != 0))
  {
    v19 = (uint64_t *)(*(_QWORD *)(v16 + 56) + 8 * v17);
  }
  else
  {
    if (qword_25437E358 != -1)
      swift_once();
    v19 = &qword_25437E350;
  }
  v20 = *v19;
  swift_bridgeObjectRelease();
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129468);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v6, a1, v21);
  v22 = &v6[*(int *)(v4 + 36)];
  *(_QWORD *)v22 = v15;
  *((_QWORD *)v22 + 1) = v20;
  v64[2] = v20;
  *((_WORD *)v22 + 8) = 256;
  type metadata accessor for BackdropMaskModifier.BackdropGroup();
  sub_2412C8030(&qword_257129470, (uint64_t (*)(uint64_t))type metadata accessor for BackdropMaskModifier.BackdropGroup, (uint64_t)&unk_2414C8E40);
  v23 = sub_2414B3040();
  v24 = *(_QWORD *)(v23 + 16);
  v25 = *(_QWORD *)(v23 + 24);
  swift_bridgeObjectRetain();
  swift_release();
  v26 = sub_2414B3E68();
  sub_2414B2F20();
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v35 = sub_2414B3E80();
  sub_2414B2F20();
  v37 = v36;
  v39 = v38;
  v64[1] = v15;
  v41 = v40;
  v43 = v42;
  v44 = sub_2414B4A44();
  v46 = v45;
  v71 = 0;
  v68 = 0;
  sub_2412DC3FC((uint64_t)v6, (uint64_t)v8, &qword_257129458);
  v47 = &v8[*(int *)(v65 + 36)];
  *(_QWORD *)v47 = v24;
  *((_QWORD *)v47 + 1) = v25;
  v47[16] = 0;
  *(_DWORD *)(v47 + 17) = *(_DWORD *)v73;
  *((_DWORD *)v47 + 5) = *(_DWORD *)&v73[3];
  v47[24] = v26;
  *(_DWORD *)(v47 + 25) = *(_DWORD *)v72;
  *((_DWORD *)v47 + 7) = *(_DWORD *)&v72[3];
  *((_QWORD *)v47 + 4) = v28;
  *((_QWORD *)v47 + 5) = v30;
  *((_QWORD *)v47 + 6) = v32;
  *((_QWORD *)v47 + 7) = v34;
  v47[64] = v71;
  *((_DWORD *)v47 + 17) = *(_DWORD *)&v70[3];
  *(_DWORD *)(v47 + 65) = *(_DWORD *)v70;
  v47[72] = v35;
  *((_DWORD *)v47 + 19) = *(_DWORD *)&v69[3];
  *(_DWORD *)(v47 + 73) = *(_DWORD *)v69;
  *((_QWORD *)v47 + 10) = v37;
  *((_QWORD *)v47 + 11) = v39;
  *((_QWORD *)v47 + 12) = v41;
  *((_QWORD *)v47 + 13) = v43;
  v47[112] = v68;
  *((_DWORD *)v47 + 29) = *(_DWORD *)&v67[3];
  *(_DWORD *)(v47 + 113) = *(_DWORD *)v67;
  *((_QWORD *)v47 + 15) = v44;
  *((_QWORD *)v47 + 16) = v46;
  sub_2412CBE78((uint64_t)v6, &qword_257129458);
  v48 = sub_2414B4A50();
  v50 = v49;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129478);
  v52 = v66;
  v53 = v66 + *(int *)(v51 + 36);
  v54 = MEMORY[0x24BDF3CF0];
  v55 = MEMORY[0x24BDF3D10];
  sub_241457A5C(MEMORY[0x24BDF3CF0], (uint64_t)MEMORY[0x24BDF3D10], (uint64_t (*)(uint64_t))MEMORY[0x24BDF14E0], v53);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129480);
  v57 = (uint64_t *)(v53 + *(int *)(v56 + 36));
  *v57 = v48;
  v57[1] = v50;
  sub_2412EAEA4((uint64_t)v8, v52, &qword_257129460);
  v58 = sub_2414B4A5C();
  v60 = v59;
  v61 = v52 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257129488) + 36);
  result = sub_241457A5C(v55, (uint64_t)v54, (uint64_t (*)(uint64_t))MEMORY[0x24BDF14F8], v61);
  v63 = (uint64_t *)(v61 + *(int *)(v56 + 36));
  *v63 = v58;
  v63[1] = v60;
  return result;
}

uint64_t sub_241457A5C@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X2>, uint64_t (*a3)(uint64_t)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(void);
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t);
  uint64_t v66;
  uint64_t v67;
  unsigned __int8 v68;
  uint64_t v69;
  unsigned __int8 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v65 = a3;
  *(_QWORD *)&v57 = a2;
  v56 = a1;
  v66 = a4;
  v60 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543812E0);
  MEMORY[0x24BDAC7A8](v60);
  v62 = (uint64_t *)((char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_2414B3484();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v47 - v10;
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129490);
  MEMORY[0x24BDAC7A8](v58);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129498);
  MEMORY[0x24BDAC7A8](v64);
  v63 = (uint64_t)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571294A0);
  MEMORY[0x24BDAC7A8](v15);
  v61 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for BackdropMaskModifier.BackdropGroup();
  sub_2412C8030(&qword_257129470, (uint64_t (*)(uint64_t))type metadata accessor for BackdropMaskModifier.BackdropGroup, (uint64_t)&unk_2414C8E40);
  v17 = sub_2414B3040();
  v19 = *(_QWORD *)(v17 + 16);
  v18 = *(_QWORD *)(v17 + 24);
  v54 = v19;
  v55 = v18;
  swift_bridgeObjectRetain();
  swift_release();
  sub_2414B4A44();
  sub_2414B31B4();
  v53 = v67;
  v52 = v68;
  v51 = v69;
  v50 = v70;
  v49 = v71;
  v48 = v72;
  type metadata accessor for BackdropMaskModifier(0);
  sub_2412D4710((uint64_t)v11);
  v20 = *MEMORY[0x24BDED100];
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v21(v8, v20, v5);
  v22 = sub_2414B3478();
  v59 = v6;
  v23 = *(void (**)(char *, uint64_t))(v6 + 8);
  v23(v8, v5);
  v23(v11, v5);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543815E0);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_2414B9400;
  if ((v22 & 1) != 0)
  {
    *(_QWORD *)(v24 + 32) = v56();
    v25 = &v78;
  }
  else
  {
    *(_QWORD *)(v24 + 32) = ((uint64_t (*)(void))v57)();
    v25 = &v77;
  }
  *(_QWORD *)(v24 + 40) = ((uint64_t (*)(void))*(v25 - 32))();
  v73 = v24;
  sub_2414B4EDC();
  v26 = v73;
  sub_2414B4B70();
  sub_2414B4B7C();
  MEMORY[0x242694258](v26);
  sub_2414B33B8();
  v27 = v73;
  v57 = v74;
  v28 = v75;
  v29 = v76;
  KeyPath = swift_getKeyPath();
  v21(v11, v20, v5);
  v31 = v62;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))((char *)v62 + *(int *)(v60 + 28), v11, v5);
  *v31 = KeyPath;
  sub_2412DC3FC((uint64_t)v31, (uint64_t)&v13[*(int *)(v58 + 36)], (uint64_t *)&unk_2543812E0);
  v32 = v55;
  *(_QWORD *)v13 = v54;
  *((_QWORD *)v13 + 1) = v32;
  v13[16] = 0;
  *((_QWORD *)v13 + 3) = v53;
  v13[32] = v52;
  *((_QWORD *)v13 + 5) = v51;
  v13[48] = v50;
  v33 = v48;
  *((_QWORD *)v13 + 7) = v49;
  *((_QWORD *)v13 + 8) = v33;
  *((_QWORD *)v13 + 9) = v27;
  *((_OWORD *)v13 + 5) = v57;
  *((_QWORD *)v13 + 12) = v28;
  *((_QWORD *)v13 + 13) = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2412CBE78((uint64_t)v31, (uint64_t *)&unk_2543812E0);
  v23(v11, v5);
  swift_bridgeObjectRelease();
  v34 = swift_bridgeObjectRelease();
  LOBYTE(v32) = v65(v34);
  sub_2414B2F20();
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v42 = v41;
  v43 = v63;
  sub_2412DC3FC((uint64_t)v13, v63, &qword_257129490);
  v44 = v43 + *(int *)(v64 + 36);
  *(_BYTE *)v44 = v32;
  *(_QWORD *)(v44 + 8) = v36;
  *(_QWORD *)(v44 + 16) = v38;
  *(_QWORD *)(v44 + 24) = v40;
  *(_QWORD *)(v44 + 32) = v42;
  *(_BYTE *)(v44 + 40) = 0;
  sub_2412CBE78((uint64_t)v13, &qword_257129490);
  sub_2412DC484(&qword_2571294A8, &qword_257129498, (uint64_t (*)(void))sub_24145E980, MEMORY[0x24BDECC60]);
  v45 = (uint64_t)v61;
  sub_2414B439C();
  sub_2412CBE78(v43, &qword_257129498);
  return sub_2412EAEA4(v45, v66, &qword_2571294A0);
}

uint64_t sub_241458028(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  CGRect v9;
  CGRect v10;
  CGRect v11;

  CGRectGetMinX(*(CGRect *)&a1);
  v9.origin.x = a1;
  v9.origin.y = a2;
  v9.size.width = a3;
  v9.size.height = a4;
  CGRectGetMinY(v9);
  v10.origin.x = a1;
  v10.origin.y = a2;
  v10.size.width = a3;
  v10.size.height = a4;
  CGRectGetWidth(v10);
  v11.origin.x = a1;
  v11.origin.y = a2;
  v11.size.width = a3;
  v11.size.height = a4;
  CGRectGetHeight(v11);
  return sub_2414B3FDC();
}

double sub_2414580FC@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;
  char v5;

  sub_2414B3FF4();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_241458158()
{
  sub_24145F230();
  return sub_2414B478C();
}

uint64_t sub_2414581A8()
{
  sub_24145F230();
  return sub_2414B475C();
}

uint64_t sub_2414581F8()
{
  sub_24145F230();
  return sub_2414B4774();
}

uint64_t Marquee.appending(badges:foregroundColor:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];

  v32 = a1;
  v35 = a3;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381330);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571293D0);
  swift_getTupleTypeMetadata2();
  v4 = sub_2414B4B1C();
  v30 = MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v4);
  v5 = sub_2414B4804();
  v31 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v30 - v9;
  v11 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v30 - v16;
  v18 = sub_2414B3A90();
  v34 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v30 - v21;
  if (*(_QWORD *)(v23 + 16))
  {
    MEMORY[0x24BDAC7A8](v19);
    *((_OWORD *)&v30 - 3) = *(_OWORD *)(a2 + 16);
    *(&v30 - 4) = v33;
    *(&v30 - 3) = v24;
    *(&v30 - 2) = v32;
    sub_2414B3880();
    sub_2414B47F8();
    MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v5);
    sub_2412FBF34((uint64_t)v7, v5, (uint64_t)v10);
    v25 = *(void (**)(char *, uint64_t))(v31 + 8);
    v25(v7, v5);
    sub_2412EEA1C((uint64_t)v10, v5, (uint64_t)v7);
    MEMORY[0x242695AE8](&protocol conformance descriptor for Marquee<A>, a2);
    sub_2412F1584((uint64_t)v7, a2, v5);
    v25(v7, v5);
    v25(v10, v5);
  }
  else
  {
    MEMORY[0x242695AE8](&protocol conformance descriptor for Marquee<A>, a2, v20);
    sub_2412FBF34(v33, a2, (uint64_t)v17);
    sub_2412EEA1C((uint64_t)v17, a2, (uint64_t)v14);
    MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v5);
    sub_24132F340((uint64_t)v14, a2);
    v26 = *(void (**)(char *, uint64_t))(v11 + 8);
    v26(v14, a2);
    v26(v17, a2);
  }
  v27 = MEMORY[0x242695AE8](&protocol conformance descriptor for Marquee<A>, a2);
  v28 = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v5);
  v36[0] = v27;
  v36[1] = v28;
  MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v18, v36);
  sub_2412EEA1C((uint64_t)v22, v18, v35);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v22, v18);
}

uint64_t sub_2414585C4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t KeyPath;
  void (*v31)(uint64_t, _BYTE *, uint64_t);
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  _BYTE v37[4];
  int v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  _QWORD v48[2];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58[2];
  _QWORD v59[3];

  v44 = a2;
  v45 = a5;
  v6 = type metadata accessor for Marquee(255, a3, a4, a3);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381330);
  v7 = sub_2414B3514();
  v39 = *(_QWORD *)(v7 - 8);
  v8 = v39;
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v37[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v37[-v12];
  swift_getKeyPath();
  LOBYTE(v49) = 1;
  v14 = MEMORY[0x242695AE8](&protocol conformance descriptor for Marquee<A>, v6);
  sub_2414B41C8();
  swift_release();
  v15 = sub_2412C8FC4((unint64_t *)&qword_254381328, &qword_254381330, MEMORY[0x24BDF1028]);
  v59[0] = v14;
  v59[1] = v15;
  v16 = v7;
  v40 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v7, v59);
  v17 = v13;
  v41 = v13;
  sub_2412FBF34((uint64_t)v10, v7, (uint64_t)v13);
  v43 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
  v18 = (uint64_t)v10;
  v43((uint64_t)v10, v7);
  v19 = swift_bridgeObjectRetain();
  v20 = a1;
  v21 = sub_24136CA08(v19);
  v23 = v22;
  v25 = v24;
  v38 = v26 & 1;
  v27 = sub_24136CC9C(a1);
  v29 = v28;
  KeyPath = swift_getKeyPath();
  v31 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v39 + 16);
  v42 = v18;
  v31(v18, v17, v16);
  v49 = v20;
  v50 = v21;
  v51 = v23;
  LOBYTE(v17) = v38;
  v52 = v38;
  v53 = v25;
  v54 = v27;
  v55 = v29;
  v56 = KeyPath;
  v57 = v44;
  v58[0] = v18;
  v58[1] = (uint64_t)&v49;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_241307638(v21, v23, (char)v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v48[0] = v16;
  v48[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_2571293D0);
  v46 = v40;
  v47 = sub_24145D81C();
  sub_2412F68CC(v58, 2uLL, (uint64_t)v48);
  swift_bridgeObjectRelease();
  sub_2412F6D78(v21, v23, (char)v17);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v32 = v16;
  v33 = v43;
  v43((uint64_t)v41, v16);
  v34 = v50;
  v35 = v51;
  LOBYTE(v18) = v52;
  swift_bridgeObjectRelease();
  sub_2412F6D78(v34, v35, v18);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v33(v42, v32);
}

uint64_t Marquee.embedding(badges:foregroundColor:badgeFont:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getKeyPath();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  MEMORY[0x242695AE8](&protocol conformance descriptor for Marquee<A>, a4);
  sub_2414B41C8();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_2414589DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  char v58;
  uint64_t v59;

  v56 = a4;
  v53 = a3;
  v51 = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380D08);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v55 = (uint64_t)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v43 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543810D0);
  v52 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v43 - v16;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v49 = (char *)&v43 - v16;
  v19((char *)&v43 - v16, a1, v12);
  v57 = xmmword_2414C8660;
  v58 = 0;
  v59 = MEMORY[0x24BEE4AF8];
  v48 = v11;
  sub_2414B439C();
  swift_bridgeObjectRetain_n();
  v20 = sub_24136CA08(a2);
  v45 = v21;
  v46 = v20;
  v54 = v22;
  v24 = v23 & 1;
  v25 = sub_24136CC9C(a2);
  v43 = v26;
  v44 = v25;
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v28 = swift_getKeyPath();
  v50 = v15;
  v29 = v17;
  v30 = v12;
  v47 = v12;
  v19(v15, (uint64_t)v29, v12);
  v31 = v55;
  sub_2412DC3FC((uint64_t)v11, v55, &qword_254380D08);
  v32 = v51;
  v19(v51, (uint64_t)v15, v30);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129450);
  sub_2412DC3FC(v31, (uint64_t)&v32[*(int *)(v33 + 48)], &qword_254380D08);
  v34 = &v32[*(int *)(v33 + 64)];
  v35 = v45;
  v36 = v46;
  *(_QWORD *)v34 = a2;
  *((_QWORD *)v34 + 1) = v36;
  *((_QWORD *)v34 + 2) = v35;
  v34[24] = v24;
  v37 = v53;
  v39 = v43;
  v38 = v44;
  *((_QWORD *)v34 + 4) = v54;
  *((_QWORD *)v34 + 5) = v38;
  *((_QWORD *)v34 + 6) = v39;
  *((_QWORD *)v34 + 7) = KeyPath;
  *((_QWORD *)v34 + 8) = v56;
  *((_QWORD *)v34 + 9) = v28;
  *((_QWORD *)v34 + 10) = v37;
  swift_bridgeObjectRetain();
  sub_241307638(v36, v35, v24);
  swift_retain_n();
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_2412CBE78((uint64_t)v48, &qword_254380D08);
  v40 = *(void (**)(char *, uint64_t))(v52 + 8);
  v41 = v47;
  v40(v49, v47);
  swift_bridgeObjectRelease();
  sub_2412F6D78(v36, v35, v24);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2412CBE78(v55, &qword_254380D08);
  return ((uint64_t (*)(char *, uint64_t))v40)(v50, v41);
}

uint64_t sub_241458D18@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v48 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571293F8);
  MEMORY[0x24BDAC7A8](v7);
  v49 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v43 - v10;
  KeyPath = swift_getKeyPath();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129400);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, a1, v13);
  v14 = &v11[*(int *)(v7 + 36)];
  *(_QWORD *)v14 = KeyPath;
  v14[8] = a2;
  if ((a2 & 1) != 0)
  {
    v16 = *(_QWORD *)a3;
    v15 = *(_QWORD *)(a3 + 8);
    v17 = *(_QWORD *)(a3 + 16);
    swift_bridgeObjectRetain_n();
    v18 = sub_24136CA08(v16);
    v20 = v19;
    v22 = v21;
    v43 = (char *)(v23 & 1);
    v24 = sub_24136CC9C(v16);
    v50 = v25;
    v26 = v16;
    swift_bridgeObjectRelease();
    if (!v17)
    {
      v47 = 0;
      v27 = *(_QWORD *)(a3 + 24);
      v28 = *(unsigned __int8 *)(a3 + 32);
      j__swift_retain();
      v17 = sub_2412E7220(v27, v28);
      sub_2412E6C04(v27, v28);
    }
    v47 = swift_getKeyPath();
    v46 = swift_getKeyPath();
    swift_retain();
    swift_retain();
    v44 = v18;
    v45 = v15;
    v29 = v20;
    v30 = v22;
    v31 = (uint64_t)v43;
    v32 = v24;
    v33 = v50;
  }
  else
  {
    v26 = 0;
    v44 = 0;
    v45 = 0;
    v29 = 0;
    v31 = 0;
    v30 = 0;
    v32 = 0;
    v33 = 0;
    v46 = 0;
    v47 = 0;
    v17 = 0;
  }
  v34 = v49;
  sub_2412DC3FC((uint64_t)v11, v49, &qword_2571293F8);
  v35 = v34;
  v43 = v11;
  v36 = v48;
  sub_2412DC3FC(v35, v48, &qword_2571293F8);
  v37 = (uint64_t *)(v36 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257129408) + 48));
  v38 = v44;
  v39 = v45;
  *v37 = v26;
  v37[1] = v38;
  v37[2] = v29;
  v37[3] = v31;
  v37[4] = v30;
  v37[5] = v32;
  v40 = v47;
  v37[6] = v33;
  v37[7] = v40;
  v50 = v33;
  v41 = v46;
  v37[8] = v17;
  v37[9] = v41;
  v37[10] = v39;
  sub_24145C694(v26, v38, v29, v31);
  sub_2412CBE78((uint64_t)v43, &qword_2571293F8);
  sub_24145C734(v26, v38, v29, v31);
  return sub_2412CBE78(v49, &qword_2571293F8);
}

uint64_t sub_241459004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v5;
  char v6;
  uint64_t v7;
  _OWORD v9[2];
  char v10;

  v5 = *(_OWORD *)(v2 + 16);
  v9[0] = *(_OWORD *)v2;
  v9[1] = v5;
  v10 = *(_BYTE *)(v2 + 32);
  v6 = *(_QWORD *)(*(_QWORD *)&v9[0] + 16) != 0;
  *(_QWORD *)a2 = sub_2414B3880();
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571293F0);
  return sub_241458D18(a1, v6, (uint64_t)v9, a2 + *(int *)(v7 + 44));
}

void sub_241459084()
{
  qword_25438E840 = MEMORY[0x24BEE4AF8];
}

uint64_t sub_241459098@<X0>(_QWORD *a1@<X8>)
{
  if (qword_254382B88 != -1)
    swift_once();
  *a1 = qword_25438E840;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2414590E8()
{
  uint64_t v0;
  uint64_t v1;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 16))
    return 1701736270;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543814A0);
  sub_2412C8FC4((unint64_t *)&qword_2543814A8, &qword_2543814A0, MEMORY[0x24BEE12B0]);
  v1 = sub_2414B4CB4();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static EnvironmentValues.MarqueeBoundsRestrictedEdgesKey.defaultValue.getter()
{
  if (qword_254380FA0 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2414591D4()
{
  sub_2412C8FC4(&qword_257129418, &qword_257129420, MEMORY[0x24BEE1710]);
  return sub_2414B3340();
}

uint64_t (*EnvironmentValues.marqueeBoundsRestrictedEdges.modify(uint64_t a1))(_QWORD *a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  *(_QWORD *)(a1 + 24) = sub_2412D0504();
  sub_2414B3838();
  return sub_241459288;
}

uint64_t sub_241459288(_QWORD *a1, char a2)
{
  a1[1] = *a1;
  if ((a2 & 1) == 0)
    return sub_2414B3844();
  swift_bridgeObjectRetain();
  sub_2414B3844();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_241459308(double *a1, _QWORD *(*a2)(double *__return_ptr))
{
  _QWORD *result;
  double v4;
  double v5;

  result = a2(&v5);
  v4 = *a1;
  if (v5 >= *a1)
  {
    if ((*(_QWORD *)&v5 & 0xFFFFFFFFFFFFFLL) == 0)
      v4 = v5;
    if ((~*(_QWORD *)&v5 & 0x7FF0000000000000) != 0)
      v4 = v5;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_241459364@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_2412C8474();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

uint64_t sub_2414593B0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_2412C8474();
  result = sub_2414B3838();
  *a1 = v3;
  return result;
}

uint64_t sub_2414593FC()
{
  sub_2412C8474();
  return sub_2414B3844();
}

uint64_t sub_241459444()
{
  sub_2412C8474();
  return sub_2414B3844();
}

uint64_t MarqueeAnimationDirection.hash(into:)()
{
  return sub_2414B58D8();
}

uint64_t MarqueeAnimationDirection.hashValue.getter()
{
  sub_2414B58CC();
  sub_2414B58D8();
  return sub_2414B58FC();
}

uint64_t sub_2414594F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (**v12)();
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t *v15;
  _QWORD v17[4];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254383E78);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  v9 = v2[1];
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_QWORD *)(v10 + 24) = v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543840D0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v7, a1, v11);
  v12 = (uint64_t (**)())&v7[*(int *)(v5 + 36)];
  *v12 = sub_24145C808;
  v12[1] = (uint64_t (*)())v10;
  KeyPath = swift_getKeyPath();
  v17[1] = v8;
  v17[2] = v9;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813F0);
  sub_2414B47A4();
  v14 = v17[3];
  sub_2412DC3FC((uint64_t)v7, a2, &qword_254383E78);
  v15 = (uint64_t *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254383F58) + 36));
  *v15 = KeyPath;
  v15[1] = v14;
  return sub_2412CBE78((uint64_t)v7, &qword_254383E78);
}

uint64_t View.coordinatedMarquees()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v6 = type metadata accessor for MCUINamespace(0, a1, a3, a4);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - v8;
  View.mcui.getter(a1, (uint64_t)&v11 - v8);
  MCUINamespace<A>.coordinatedMarquees()(v6, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t View.marqueeFeathering(_:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v6 = a2 & 1;
  v7 = type metadata accessor for MCUINamespace(0, a3, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v12 - v9;
  View.mcui.getter(a3, (uint64_t)&v12 - v9);
  MCUINamespace<A>.marqueeFeathering(_:)(a1, v6, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_2414597C4()
{
  uint64_t v0;

  v0 = sub_2414B2CA4();
  __swift_allocate_value_buffer(v0, qword_254382AB8);
  __swift_project_value_buffer(v0, (uint64_t)qword_254382AB8);
  return sub_2414B2C98();
}

uint64_t type metadata accessor for Marquee.RegularContent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Marquee.RegularContent);
}

uint64_t type metadata accessor for Marquee.MarqueeingContent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Marquee.MarqueeingContent);
}

uint64_t sub_241459850@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_2414542EC(v2[4], v2[2], v2[3], a1, a2);
}

uint64_t sub_24145985C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_2414585C4(v1[5], v1[6], v1[2], v1[3], a1);
}

ValueMetadata *type metadata accessor for MarqueeDefaults()
{
  return &type metadata for MarqueeDefaults;
}

uint64_t *sub_241459880(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  char *v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) == 0
    && ((((((((v6 + 135) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) >= 0xFFFFFFFFFFFFFFE7)
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (char *)v4 + v6;
    v11 = (char *)a2 + v6;
    v12 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v13 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v14 = *(_QWORD *)v13;
    v15 = *(_QWORD *)(v13 + 8);
    v16 = *(_QWORD *)(v13 + 16);
    v17 = *(_BYTE *)(v13 + 24);
    sub_2412E6F8C(*(_QWORD *)v13, v15, v16, v17);
    *(_QWORD *)v12 = v14;
    *(_QWORD *)(v12 + 8) = v15;
    *(_QWORD *)(v12 + 16) = v16;
    *(_BYTE *)(v12 + 24) = v17;
    v18 = (unint64_t)(v10 + 39) & 0xFFFFFFFFFFFFFFF8;
    v19 = (unint64_t)(v11 + 39) & 0xFFFFFFFFFFFFFFF8;
    v20 = *(_QWORD *)v19;
    LOBYTE(v15) = *(_BYTE *)(v19 + 8);
    j__swift_retain();
    *(_QWORD *)v18 = v20;
    *(_BYTE *)(v18 + 8) = v15;
    v21 = (unint64_t)(v10 + 55) & 0xFFFFFFFFFFFFFFF8;
    v22 = (unint64_t)(v11 + 55) & 0xFFFFFFFFFFFFFFF8;
    v23 = *(_QWORD *)v22;
    LOBYTE(v15) = *(_BYTE *)(v22 + 8);
    sub_2412E6F7C(*(_QWORD *)v22, v15);
    *(_QWORD *)v21 = v23;
    *(_BYTE *)(v21 + 8) = v15;
    v24 = (unint64_t)(v10 + 71) & 0xFFFFFFFFFFFFFFF8;
    v25 = (unint64_t)(v11 + 71) & 0xFFFFFFFFFFFFFFF8;
    v26 = *(_QWORD *)v25;
    LOBYTE(v15) = *(_BYTE *)(v25 + 8);
    sub_2412E6F7C(*(_QWORD *)v25, v15);
    *(_QWORD *)v24 = v26;
    *(_BYTE *)(v24 + 8) = v15;
    v27 = (unint64_t)(v10 + 87) & 0xFFFFFFFFFFFFFFF8;
    v28 = (unint64_t)(v11 + 87) & 0xFFFFFFFFFFFFFFF8;
    v29 = *(_QWORD *)v28;
    LOBYTE(v15) = *(_BYTE *)(v28 + 8);
    sub_2412C7080(*(_QWORD *)v28, v15);
    *(_QWORD *)v27 = v29;
    *(_BYTE *)(v27 + 8) = v15;
    v30 = (unint64_t)(v10 + 103) & 0xFFFFFFFFFFFFFFF8;
    v31 = (unint64_t)(v11 + 103) & 0xFFFFFFFFFFFFFFF8;
    v32 = *(_QWORD *)v31;
    LOBYTE(v15) = *(_BYTE *)(v31 + 8);
    sub_2412E6F7C(*(_QWORD *)v31, v15);
    *(_QWORD *)v30 = v32;
    *(_BYTE *)(v30 + 8) = v15;
    v33 = (unint64_t)(v10 + 119) & 0xFFFFFFFFFFFFFFF8;
    v34 = (unint64_t)(v11 + 119) & 0xFFFFFFFFFFFFFFF8;
    v35 = *(_QWORD *)v34;
    *(_BYTE *)(v33 + 8) = *(_BYTE *)(v34 + 8);
    *(_QWORD *)v33 = v35;
    v36 = (_QWORD *)((unint64_t)(v10 + 135) & 0xFFFFFFFFFFFFFFF8);
    v37 = (_QWORD *)((unint64_t)(v11 + 135) & 0xFFFFFFFFFFFFFFF8);
    *v36 = *v37;
    v36[1] = v37[1];
    v38 = (_QWORD *)(((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFF8);
    v39 = (_QWORD *)(((unint64_t)v37 + 23) & 0xFFFFFFFFFFFFF8);
    *v38 = *v39;
    v40 = (_QWORD *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFF8);
    v41 = (_QWORD *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFF8);
    *v40 = *v41;
    v42 = ((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFFFF8;
    v43 = ((unint64_t)v41 + 15) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v42 = *(_QWORD *)v43;
    *(_BYTE *)(v42 + 8) = *(_BYTE *)(v43 + 8);
    v44 = *(_QWORD *)(v43 + 17);
    *(_QWORD *)(v42 + 12) = *(_QWORD *)(v43 + 12);
    *(_QWORD *)(v42 + 17) = v44;
  }
  else
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  swift_retain();
  return v4;
}

uint64_t sub_241459AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  __int128 *v10;
  __int128 v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  _OWORD *v30;
  _OWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (_OWORD *)((v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  v10 = (__int128 *)((v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  v11 = *v10;
  *(_OWORD *)((char *)v9 + 9) = *(__int128 *)((char *)v10 + 9);
  *v9 = v11;
  v12 = (v7 + 39) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v8 + 39) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = v14;
  v15 = (v7 + 55) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v8 + 55) & 0xFFFFFFFFFFFFFFF8;
  v17 = *(_BYTE *)(v16 + 8);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = v17;
  v18 = (v7 + 71) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v8 + 71) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(_BYTE *)(v19 + 8);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = v20;
  v21 = (v7 + 87) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v8 + 87) & 0xFFFFFFFFFFFFFFF8;
  v23 = *(_BYTE *)(v22 + 8);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_BYTE *)(v21 + 8) = v23;
  v24 = (v7 + 103) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v8 + 103) & 0xFFFFFFFFFFFFFFF8;
  v26 = *(_BYTE *)(v25 + 8);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_BYTE *)(v24 + 8) = v26;
  v27 = (v7 + 119) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v8 + 119) & 0xFFFFFFFFFFFFFFF8;
  v29 = *(_BYTE *)(v28 + 8);
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_BYTE *)(v27 + 8) = v29;
  v30 = (_OWORD *)((v7 + 135) & 0xFFFFFFFFFFFFFFF8);
  v31 = (_OWORD *)((v8 + 135) & 0xFFFFFFFFFFFFFFF8);
  *v30 = *v31;
  v32 = (_QWORD *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFF8);
  v33 = (_QWORD *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFF8);
  *v32 = *v33;
  v34 = (_QWORD *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFF8);
  v35 = (_QWORD *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFF8);
  *v34 = *v35;
  v36 = ((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = ((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *(_BYTE *)(v36 + 8) = *(_BYTE *)(v37 + 8);
  v38 = *(_QWORD *)(v37 + 17);
  *(_QWORD *)(v36 + 12) = *(_QWORD *)(v37 + 12);
  *(_QWORD *)(v36 + 17) = v38;
  return a1;
}

uint64_t sub_241459C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(_BYTE *)(v10 + 24);
  v13 = *(_QWORD *)v9;
  v14 = *(_QWORD *)(v9 + 8);
  v15 = *(_QWORD *)(v9 + 16);
  v16 = *(_BYTE *)(v9 + 24);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_QWORD *)(v9 + 16) = v11;
  *(_BYTE *)(v9 + 24) = v12;
  sub_2412E6C0C(v13, v14, v15, v16);
  v17 = (v7 + 39) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v8 + 39) & 0xFFFFFFFFFFFFFFF8;
  v19 = *(_QWORD *)v18;
  LOBYTE(v18) = *(_BYTE *)(v18 + 8);
  v20 = *(_QWORD *)v17;
  v21 = *(unsigned __int8 *)(v17 + 8);
  *(_QWORD *)v17 = v19;
  *(_BYTE *)(v17 + 8) = v18;
  sub_2412E6C04(v20, v21);
  v22 = (v7 + 55) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v8 + 55) & 0xFFFFFFFFFFFFFFF8;
  v24 = *(_QWORD *)v23;
  LOBYTE(v23) = *(_BYTE *)(v23 + 8);
  v25 = *(_QWORD *)v22;
  v26 = *(_BYTE *)(v22 + 8);
  *(_QWORD *)v22 = v24;
  *(_BYTE *)(v22 + 8) = v23;
  sub_2412E6BF8(v25, v26);
  v27 = (v7 + 71) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v8 + 71) & 0xFFFFFFFFFFFFFFF8;
  v29 = *(_QWORD *)v28;
  LOBYTE(v28) = *(_BYTE *)(v28 + 8);
  v30 = *(_QWORD *)v27;
  v31 = *(_BYTE *)(v27 + 8);
  *(_QWORD *)v27 = v29;
  *(_BYTE *)(v27 + 8) = v28;
  sub_2412E6BF8(v30, v31);
  v32 = (v7 + 87) & 0xFFFFFFFFFFFFFFF8;
  v33 = (v8 + 87) & 0xFFFFFFFFFFFFFFF8;
  v34 = *(_QWORD *)v33;
  LOBYTE(v33) = *(_BYTE *)(v33 + 8);
  v35 = *(_QWORD *)v32;
  v36 = *(_BYTE *)(v32 + 8);
  *(_QWORD *)v32 = v34;
  *(_BYTE *)(v32 + 8) = v33;
  sub_2412C821C(v35, v36);
  v37 = (v7 + 103) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v8 + 103) & 0xFFFFFFFFFFFFFFF8;
  v39 = *(_QWORD *)v38;
  LOBYTE(v38) = *(_BYTE *)(v38 + 8);
  v40 = *(_QWORD *)v37;
  v41 = *(_BYTE *)(v37 + 8);
  *(_QWORD *)v37 = v39;
  *(_BYTE *)(v37 + 8) = v38;
  sub_2412E6BF8(v40, v41);
  v42 = (v7 + 119) & 0xFFFFFFFFFFFFFFF8;
  v43 = (v8 + 119) & 0xFFFFFFFFFFFFFFF8;
  v44 = *(_QWORD *)v43;
  *(_BYTE *)(v42 + 8) = *(_BYTE *)(v43 + 8);
  *(_QWORD *)v42 = v44;
  v45 = (_QWORD *)((v7 + 135) & 0xFFFFFFFFFFFFFFF8);
  v46 = (_QWORD *)((v8 + 135) & 0xFFFFFFFFFFFFFFF8);
  *v45 = *v46;
  v45[1] = v46[1];
  swift_release();
  v47 = (_QWORD *)(((unint64_t)v45 + 23) & 0xFFFFFFFFFFFFF8);
  v48 = (_QWORD *)(((unint64_t)v46 + 23) & 0xFFFFFFFFFFFFF8);
  *v47 = *v48;
  v49 = (_QWORD *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFF8);
  v50 = (_QWORD *)(((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFF8);
  *v49 = *v50;
  v51 = ((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8;
  v52 = ((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v51 = *(_QWORD *)v52;
  *(_BYTE *)(v51 + 8) = *(_BYTE *)(v52 + 8);
  v53 = *(_QWORD *)(v52 + 12);
  *(_QWORD *)(v51 + 17) = *(_QWORD *)(v52 + 17);
  *(_QWORD *)(v51 + 12) = v53;
  return a1;
}

uint64_t sub_241459E60(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;
  int v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFE)
    v6 = 2147483646;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFE)
    {
      v13 = *(_QWORD *)(((a1 + v7 + 135) & 0xFFFFFFFFFFFFF8) + 8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      v14 = v13 - 1;
      if (v14 < 0)
        v14 = -1;
      return (v14 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    v8 = (a2 - v6 + 255) >> (8 * (((((((((v7 - 121) & 0xF8) + 23) & 0xF8) + 15) & 0xF8) + 15) & 0xF8) + 25));
    if ((((((((((_DWORD)v7 + 135) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 25 < 4)
      v9 = v8 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_241459F00 + 4 * byte_2414C8680[v11]))();
  }
}

void sub_241459FA0(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFEu)
    v6 = 2147483646;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((((((((*(_QWORD *)(v5 + 64) + 135) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 25;
  if (v6 >= a3)
  {
    v10 = 0;
    if (v6 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8
                              * (((((((((*(_BYTE *)(v5 + 64) - 121) & 0xF8) + 23) & 0xF8) + 15) & 0xF8) + 15) & 0xF8)
                               + 25)))
         + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (v6 >= a2)
LABEL_17:
      __asm { BR              X12 }
  }
  if (v7 >= 4)
    v11 = ~v6 + a2;
  else
    v11 = (~(_BYTE)v6 + a2);
  bzero(a1, v7);
  if ((_DWORD)v7 == 1)
    *a1 = v11;
  else
    *(_DWORD *)a1 = v11;
  __asm { BR              X10 }
}

void sub_24145A0D4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x24145A154);
}

void sub_24145A0DC(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x24145A0E4);
  JUMPOUT(0x24145A154);
}

void sub_24145A12C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x24145A154);
}

void sub_24145A134()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x24145A154);
}

uint64_t sub_24145A13C(uint64_t a1, unsigned int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFE)
  {
    if (a2 > 0x7FFFFFFE)
      JUMPOUT(0x24145A148);
    *(_QWORD *)(((v6 + v5 + 135) & 0xFFFFFFFFFFFFFFF8) + 8) = a2;
LABEL_6:
    JUMPOUT(0x24145A154);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

ValueMetadata *type metadata accessor for EnvironmentValues.MarqueeBoundsRestrictedEdgesKey()
{
  return &type metadata for EnvironmentValues.MarqueeBoundsRestrictedEdgesKey;
}

uint64_t storeEnumTagSinglePayload for MarqueeAnimationDirection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24145A1C8 + 4 * byte_2414C8694[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24145A1FC + 4 * byte_2414C868F[v4]))();
}

uint64_t sub_24145A1FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24145A204(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24145A20CLL);
  return result;
}

uint64_t sub_24145A218(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24145A220);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24145A224(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24145A22C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_24145A238(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v5 = a1[1];
  type metadata accessor for Marquee.RegularContent(255, *a1, v5, a4);
  sub_2414B3514();
  type metadata accessor for Marquee.MarqueeingContent(255, v4, v5, v6);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381280);
  sub_2414B3514();
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381340);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381330);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381370);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381320);
  sub_2414B3514();
  sub_2414B3514();
  swift_getTupleTypeMetadata2();
  v7 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v7);
  sub_2414B319C();
  JUMPOUT(0x242695AE8);
}

uint64_t sub_24145A3B0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];

  v4 = type metadata accessor for Marquee(255, *a1, a1[1], a4);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381330);
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571293D0);
  swift_getTupleTypeMetadata2();
  v5 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v5);
  v6 = sub_2414B4804();
  v7 = sub_2414B3A90();
  v9[0] = MEMORY[0x242695AE8](&protocol conformance descriptor for Marquee<A>, v4);
  v9[1] = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v6);
  return MEMORY[0x242695AE8](MEMORY[0x24BDEF3E0], v7, v9);
}

uint64_t sub_24145A4B0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];

  v4 = type metadata accessor for Marquee(255, *a1, a1[1], a4);
  v5 = sub_2414B3514();
  v7[0] = MEMORY[0x242695AE8](&protocol conformance descriptor for Marquee<A>, v4);
  v7[1] = sub_24133C168();
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v5, v7);
}

uint64_t sub_24145A528(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];

  v4 = type metadata accessor for Marquee(255, *a1, a1[1], a4);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571293D8);
  v5 = sub_2414B3514();
  v7[0] = MEMORY[0x242695AE8](&protocol conformance descriptor for Marquee<A>, v4);
  v7[1] = sub_2412C8FC4(&qword_2571293E0, &qword_2571293D8, MEMORY[0x24BDF1028]);
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v5, v7);
}

uint64_t sub_24145A5C8(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx09MediaCoreB019CoordinatedMarquees33_7D7F54989E0BD2C2C05089BF2F1B885FLLVGAaBHPxAaBHD1__AhA0C8ModifierHPyHCHCTm(a1, (uint64_t)&type metadata for CoordinatedMarquees, (uint64_t (*)(void))sub_24145A5DC);
}

unint64_t sub_24145A5DC()
{
  unint64_t result;

  result = qword_2571293E8;
  if (!qword_2571293E8)
  {
    result = MEMORY[0x242695AE8](&unk_2414C8DF0, &type metadata for CoordinatedMarquees);
    atomic_store(result, (unint64_t *)&qword_2571293E8);
  }
  return result;
}

uint64_t sub_24145A620(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVySDyAA14HorizontalEdgeO12CoreGraphics7CGFloatVGGGAaBHPxAaBHD1__AmA0cI0HPyHCHCTm(a1, &qword_254381320, &qword_254381318);
}

uint64_t sub_24145A634(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx09MediaCoreB019CoordinatedMarquees33_7D7F54989E0BD2C2C05089BF2F1B885FLLVGAaBHPxAaBHD1__AhA0C8ModifierHPyHCHCTm(a1, (uint64_t)&type metadata for MarqueeFeatheringModifier, (uint64_t (*)(void))sub_241301CC8);
}

uint64_t get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx09MediaCoreB019CoordinatedMarquees33_7D7F54989E0BD2C2C05089BF2F1B885FLLVGAaBHPxAaBHD1__AhA0C8ModifierHPyHCHCTm(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];

  v4 = *(_QWORD *)(a1 + 8);
  v5 = sub_2414B3514();
  v7[0] = v4;
  v7[1] = a3();
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v5, v7);
}

uint64_t sub_24145A6A4(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVySDyAA14HorizontalEdgeO12CoreGraphics7CGFloatVGGGAaBHPxAaBHD1__AmA0cI0HPyHCHCTm(a1, &qword_254381240, &qword_254381238);
}

uint64_t get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVySDyAA14HorizontalEdgeO12CoreGraphics7CGFloatVGGGAaBHPxAaBHD1__AmA0cI0HPyHCHCTm(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v5 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
  v6 = sub_2414B3514();
  v8[0] = v5;
  v8[1] = sub_2412C8FC4(a3, a2, MEMORY[0x24BDF1028]);
  return MEMORY[0x242695AE8](MEMORY[0x24BDED308], v6, v8);
}

uint64_t *sub_24145A734(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v10 = *v11;
    v10[1] = v11[1];
    v10[2] = v11[2];
    v12 = ((unint64_t)v10 + 31) & 0xFFFFFFFFFFFFFFF8;
    v13 = ((unint64_t)v11 + 31) & 0xFFFFFFFFFFFFFFF8;
    v14 = *(_QWORD *)v13;
    v15 = *(_BYTE *)(v13 + 8);
    swift_retain();
    swift_retain();
    sub_2412E6F7C(v14, v15);
    *(_QWORD *)v12 = v14;
    *(_BYTE *)(v12 + 8) = v15;
  }
  return v4;
}

uint64_t sub_24145A83C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_OWORD *)v8;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
  *(_OWORD *)v7 = v9;
  v10 = (v7 + 31) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  v12 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  *(_QWORD *)v10 = v12;
  return a1;
}

uint64_t sub_24145A8BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_release();
  v7[1] = v8[1];
  swift_release();
  v7[2] = v8[2];
  v9 = ((unint64_t)v7 + 31) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)v10;
  LOBYTE(v10) = *(_BYTE *)(v10 + 8);
  v12 = *(_QWORD *)v9;
  v13 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v9 = v11;
  *(_BYTE *)(v9 + 8) = v10;
  sub_2412E6BF8(v12, v13);
  return a1;
}

uint64_t sub_24145A964(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v14 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 8);
      if (v14 >= 0xFFFFFFFF)
        LODWORD(v14) = -1;
      return (v14 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    v8 = ((((v7 + 7) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 9;
    v9 = (a2 - v6 + 255) >> (8 * v8);
    if (v8 < 4)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    return ((uint64_t (*)(void))((char *)&loc_24145A9F4 + 4 * byte_2414C8699[v12]))();
  }
}

void sub_24145AA88(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v6 >= a3)
  {
    v10 = 0;
    if (v6 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (v6 >= a2)
LABEL_17:
      __asm { BR              X12 }
  }
  if (v7 >= 4)
    v11 = ~v6 + a2;
  else
    v11 = (~(_BYTE)v6 + a2);
  bzero(a1, v7);
  if ((_DWORD)v7 == 1)
    *a1 = v11;
  else
    *(_DWORD *)a1 = v11;
  __asm { BR              X10 }
}

void sub_24145ABAC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x24145AC28);
}

void sub_24145ABB4(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x24145ABBCLL);
  JUMPOUT(0x24145AC28);
}

void sub_24145AC00()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x24145AC28);
}

void sub_24145AC08()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x24145AC28);
}

uint64_t sub_24145AC10(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFF)
  {
    if (a2 < 0)
      JUMPOUT(0x24145AC1CLL);
    *(_QWORD *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) = (a2 - 1);
LABEL_6:
    JUMPOUT(0x24145AC28);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

_QWORD *sub_24145AC40(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v8 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 45) = *(uint64_t *)((char *)a2 + 45);
    *(_QWORD *)(a1 + 56) = a2[7];
    v9 = a3[19];
    v10 = a1 + v9;
    v11 = (uint64_t)a2 + v9;
    *(_OWORD *)a1 = v7;
    v12 = sub_2414B3484();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = a3[21];
    *((_BYTE *)v4 + a3[20]) = *((_BYTE *)a2 + a3[20]);
    *(_QWORD *)((char *)v4 + v13) = *(uint64_t *)((char *)a2 + v13);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_24145AD18(uint64_t a1, __int128 *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *a2;
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  v7 = *((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 45) = *(_QWORD *)((char *)a2 + 45);
  *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
  v8 = a3[19];
  v9 = a1 + v8;
  v10 = (uint64_t)a2 + v8;
  *(_OWORD *)a1 = v6;
  v11 = sub_2414B3484();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = a3[21];
  *(_BYTE *)(a1 + a3[20]) = *((_BYTE *)a2 + a3[20]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  return a1;
}

uint64_t sub_24145ADC0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 45) = *(_QWORD *)(a2 + 45);
  v7 = a3[19];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v10 = sub_2414B3484();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[21];
  *(_BYTE *)(a1 + a3[20]) = *(_BYTE *)(a2 + a3[20]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24145AE70()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24145AE7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_2414B3484();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 76), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 84));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_24145AEFC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24145AF08(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_2414B3484();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 76), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 84)) = (a2 - 1);
  return result;
}

uint64_t sub_24145AF84()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24145B014(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 111) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v10 = *v11;
    v10[1] = v11[1];
    v10[2] = v11[2];
    v12 = ((unint64_t)v10 + 31) & 0xFFFFFFFFFFFFFFF8;
    v13 = ((unint64_t)v11 + 31) & 0xFFFFFFFFFFFFFFF8;
    v14 = *(_QWORD *)v13;
    v15 = *(_QWORD *)(v13 + 8);
    v16 = *(_QWORD *)(v13 + 16);
    v17 = *(_BYTE *)(v13 + 24);
    swift_retain();
    swift_retain();
    sub_2412E6F8C(v14, v15, v16, v17);
    *(_QWORD *)v12 = v14;
    *(_QWORD *)(v12 + 8) = v15;
    *(_QWORD *)(v12 + 16) = v16;
    *(_BYTE *)(v12 + 24) = v17;
    v18 = ((unint64_t)v10 + 63) & 0xFFFFFFFFFFFFFFF8;
    v19 = ((unint64_t)v11 + 63) & 0xFFFFFFFFFFFFFFF8;
    v20 = *(_QWORD *)v19;
    LOBYTE(v14) = *(_BYTE *)(v19 + 8);
    sub_2412C7080(*(_QWORD *)v19, v14);
    *(_QWORD *)v18 = v20;
    *(_BYTE *)(v18 + 8) = v14;
    v21 = ((unint64_t)v10 + 79) & 0xFFFFFFFFFFFFFFF8;
    v22 = ((unint64_t)v11 + 79) & 0xFFFFFFFFFFFFFFF8;
    v23 = *(_QWORD *)v22;
    LOBYTE(v14) = *(_BYTE *)(v22 + 8);
    j__swift_retain();
    *(_QWORD *)v21 = v23;
    *(_BYTE *)(v21 + 8) = v14;
    v24 = ((unint64_t)v10 + 95) & 0xFFFFFFFFFFFFFFF8;
    v25 = ((unint64_t)v11 + 95) & 0xFFFFFFFFFFFFFFF8;
    v26 = *(_QWORD *)v25;
    LOBYTE(v14) = *(_BYTE *)(v25 + 8);
    sub_2412E6F7C(*(_QWORD *)v25, v14);
    *(_QWORD *)v24 = v26;
    *(_BYTE *)(v24 + 8) = v14;
    v27 = ((unint64_t)v10 + 111) & 0xFFFFFFFFFFFFFFF8;
    v28 = ((unint64_t)v11 + 111) & 0xFFFFFFFFFFFFFFF8;
    v29 = *(_QWORD *)v28;
    LOBYTE(v14) = *(_BYTE *)(v28 + 8);
    sub_2412E6F7C(*(_QWORD *)v28, v14);
    *(_QWORD *)v27 = v29;
    *(_BYTE *)(v27 + 8) = v14;
  }
  return v4;
}

uint64_t sub_24145B1EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  sub_2412E6C0C(*(_QWORD *)((v4 + 31) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((v4 + 31) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(((v4 + 31) & 0xFFFFFFFFFFFFFFF8) + 16), *(_BYTE *)(((v4 + 31) & 0xFFFFFFFFFFFFFFF8) + 24));
  sub_2412C821C(*(_QWORD *)((v4 + 63) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v4 + 63) & 0xFFFFFFFFFFFFFFF8) + 8));
  sub_2412E6C04(*(_QWORD *)((v4 + 79) & 0xFFFFFFFFFFFFFFF8), *(unsigned __int8 *)(((v4 + 79) & 0xFFFFFFFFFFFFFFF8) + 8));
  sub_2412E6BF8(*(_QWORD *)((v4 + 95) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v4 + 95) & 0xFFFFFFFFFFFFFFF8) + 8));
  return sub_2412E6BF8(*(_QWORD *)((v4 + 111) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v4 + 111) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_24145B2A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v9 = ((unint64_t)v7 + 31) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)v10;
  v12 = *(_QWORD *)(v10 + 8);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = *(_BYTE *)(v10 + 24);
  swift_retain();
  swift_retain();
  sub_2412E6F8C(v11, v12, v13, v14);
  *(_QWORD *)v9 = v11;
  *(_QWORD *)(v9 + 8) = v12;
  *(_QWORD *)(v9 + 16) = v13;
  *(_BYTE *)(v9 + 24) = v14;
  v15 = ((unint64_t)v7 + 63) & 0xFFFFFFFFFFFFFFF8;
  v16 = ((unint64_t)v8 + 63) & 0xFFFFFFFFFFFFFFF8;
  v17 = *(_QWORD *)v16;
  LOBYTE(v11) = *(_BYTE *)(v16 + 8);
  sub_2412C7080(*(_QWORD *)v16, v11);
  *(_QWORD *)v15 = v17;
  *(_BYTE *)(v15 + 8) = v11;
  v18 = ((unint64_t)v7 + 79) & 0xFFFFFFFFFFFFFFF8;
  v19 = ((unint64_t)v8 + 79) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(_QWORD *)v19;
  LOBYTE(v11) = *(_BYTE *)(v19 + 8);
  j__swift_retain();
  *(_QWORD *)v18 = v20;
  *(_BYTE *)(v18 + 8) = v11;
  v21 = ((unint64_t)v7 + 95) & 0xFFFFFFFFFFFFFFF8;
  v22 = ((unint64_t)v8 + 95) & 0xFFFFFFFFFFFFFFF8;
  v23 = *(_QWORD *)v22;
  LOBYTE(v11) = *(_BYTE *)(v22 + 8);
  sub_2412E6F7C(*(_QWORD *)v22, v11);
  *(_QWORD *)v21 = v23;
  *(_BYTE *)(v21 + 8) = v11;
  v24 = ((unint64_t)v7 + 111) & 0xFFFFFFFFFFFFFFF8;
  v25 = ((unint64_t)v8 + 111) & 0xFFFFFFFFFFFFFFF8;
  v26 = *(_QWORD *)v25;
  LOBYTE(v11) = *(_BYTE *)(v25 + 8);
  sub_2412E6F7C(*(_QWORD *)v25, v11);
  *(_QWORD *)v24 = v26;
  *(_BYTE *)(v24 + 8) = v11;
  return a1;
}

uint64_t sub_24145B41C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_retain();
  swift_release();
  v7[1] = v8[1];
  swift_retain();
  swift_release();
  v7[2] = v8[2];
  v9 = ((unint64_t)v7 + 31) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)v10;
  v12 = *(_QWORD *)(v10 + 8);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = *(_BYTE *)(v10 + 24);
  sub_2412E6F8C(*(_QWORD *)v10, v12, v13, v14);
  v15 = *(_QWORD *)v9;
  v16 = *(_QWORD *)(v9 + 8);
  v17 = *(_QWORD *)(v9 + 16);
  v18 = *(_BYTE *)(v9 + 24);
  *(_QWORD *)v9 = v11;
  *(_QWORD *)(v9 + 8) = v12;
  *(_QWORD *)(v9 + 16) = v13;
  *(_BYTE *)(v9 + 24) = v14;
  sub_2412E6C0C(v15, v16, v17, v18);
  v19 = ((unint64_t)v7 + 63) & 0xFFFFFFFFFFFFFFF8;
  v20 = ((unint64_t)v8 + 63) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_QWORD *)v20;
  LOBYTE(v12) = *(_BYTE *)(v20 + 8);
  sub_2412C7080(*(_QWORD *)v20, v12);
  v22 = *(_QWORD *)v19;
  v23 = *(_BYTE *)(v19 + 8);
  *(_QWORD *)v19 = v21;
  *(_BYTE *)(v19 + 8) = v12;
  sub_2412C821C(v22, v23);
  v24 = ((unint64_t)v7 + 79) & 0xFFFFFFFFFFFFFFF8;
  v25 = ((unint64_t)v8 + 79) & 0xFFFFFFFFFFFFFFF8;
  v26 = *(_QWORD *)v25;
  LOBYTE(v12) = *(_BYTE *)(v25 + 8);
  j__swift_retain();
  v27 = *(_QWORD *)v24;
  v28 = *(unsigned __int8 *)(v24 + 8);
  *(_QWORD *)v24 = v26;
  *(_BYTE *)(v24 + 8) = v12;
  sub_2412E6C04(v27, v28);
  v29 = ((unint64_t)v7 + 95) & 0xFFFFFFFFFFFFFFF8;
  v30 = ((unint64_t)v8 + 95) & 0xFFFFFFFFFFFFFFF8;
  v31 = *(_QWORD *)v30;
  LOBYTE(v12) = *(_BYTE *)(v30 + 8);
  sub_2412E6F7C(*(_QWORD *)v30, v12);
  v32 = *(_QWORD *)v29;
  v33 = *(_BYTE *)(v29 + 8);
  *(_QWORD *)v29 = v31;
  *(_BYTE *)(v29 + 8) = v12;
  sub_2412E6BF8(v32, v33);
  v34 = ((unint64_t)v7 + 111) & 0xFFFFFFFFFFFFFFF8;
  v35 = ((unint64_t)v8 + 111) & 0xFFFFFFFFFFFFFFF8;
  v36 = *(_QWORD *)v35;
  LOBYTE(v12) = *(_BYTE *)(v35 + 8);
  sub_2412E6F7C(*(_QWORD *)v35, v12);
  v37 = *(_QWORD *)v34;
  v38 = *(_BYTE *)(v34 + 8);
  *(_QWORD *)v34 = v36;
  *(_BYTE *)(v34 + 8) = v12;
  sub_2412E6BF8(v37, v38);
  return a1;
}

uint64_t sub_24145B5E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  _OWORD *v10;
  __int128 *v11;
  __int128 v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_OWORD *)v8;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
  *(_OWORD *)v7 = v9;
  v10 = (_OWORD *)((v7 + 31) & 0xFFFFFFFFFFFFFFF8);
  v11 = (__int128 *)((v8 + 31) & 0xFFFFFFFFFFFFFFF8);
  v12 = *v11;
  *(_OWORD *)((char *)v10 + 9) = *(__int128 *)((char *)v11 + 9);
  *v10 = v12;
  v13 = (v7 + 63) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v8 + 63) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_BYTE *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = v15;
  v16 = (v7 + 79) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v8 + 79) & 0xFFFFFFFFFFFFFFF8;
  v18 = *(_BYTE *)(v17 + 8);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = v18;
  v19 = (v7 + 95) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v8 + 95) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_BYTE *)(v20 + 8);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = v21;
  v22 = (v7 + 111) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v8 + 111) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v19) = *(_BYTE *)(v23 + 8);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_BYTE *)(v22 + 8) = v19;
  return a1;
}

uint64_t sub_24145B6E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_release();
  v7[1] = v8[1];
  swift_release();
  v7[2] = v8[2];
  v9 = ((unint64_t)v7 + 31) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(_BYTE *)(v10 + 24);
  v13 = *(_QWORD *)v9;
  v14 = *(_QWORD *)(v9 + 8);
  v15 = *(_QWORD *)(v9 + 16);
  v16 = *(_BYTE *)(v9 + 24);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_QWORD *)(v9 + 16) = v11;
  *(_BYTE *)(v9 + 24) = v12;
  sub_2412E6C0C(v13, v14, v15, v16);
  v17 = ((unint64_t)v7 + 63) & 0xFFFFFFFFFFFFFFF8;
  v18 = ((unint64_t)v8 + 63) & 0xFFFFFFFFFFFFFFF8;
  v19 = *(_QWORD *)v18;
  LOBYTE(v18) = *(_BYTE *)(v18 + 8);
  v20 = *(_QWORD *)v17;
  v21 = *(_BYTE *)(v17 + 8);
  *(_QWORD *)v17 = v19;
  *(_BYTE *)(v17 + 8) = v18;
  sub_2412C821C(v20, v21);
  v22 = ((unint64_t)v7 + 79) & 0xFFFFFFFFFFFFFFF8;
  v23 = ((unint64_t)v8 + 79) & 0xFFFFFFFFFFFFFFF8;
  v24 = *(_QWORD *)v23;
  LOBYTE(v23) = *(_BYTE *)(v23 + 8);
  v25 = *(_QWORD *)v22;
  v26 = *(unsigned __int8 *)(v22 + 8);
  *(_QWORD *)v22 = v24;
  *(_BYTE *)(v22 + 8) = v23;
  sub_2412E6C04(v25, v26);
  v27 = ((unint64_t)v7 + 95) & 0xFFFFFFFFFFFFFFF8;
  v28 = ((unint64_t)v8 + 95) & 0xFFFFFFFFFFFFFFF8;
  v29 = *(_QWORD *)v28;
  LOBYTE(v28) = *(_BYTE *)(v28 + 8);
  v30 = *(_QWORD *)v27;
  v31 = *(_BYTE *)(v27 + 8);
  *(_QWORD *)v27 = v29;
  *(_BYTE *)(v27 + 8) = v28;
  sub_2412E6BF8(v30, v31);
  v32 = ((unint64_t)v7 + 111) & 0xFFFFFFFFFFFFFFF8;
  v33 = ((unint64_t)v8 + 111) & 0xFFFFFFFFFFFFFFF8;
  v34 = *(_QWORD *)v33;
  LOBYTE(v33) = *(_BYTE *)(v33 + 8);
  v35 = *(_QWORD *)v32;
  v36 = *(_BYTE *)(v32 + 8);
  *(_QWORD *)v32 = v34;
  *(_BYTE *)(v32 + 8) = v33;
  sub_2412E6BF8(v35, v36);
  return a1;
}

uint64_t sub_24145B84C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v14 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 8);
      if (v14 >= 0xFFFFFFFF)
        LODWORD(v14) = -1;
      return (v14 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    v8 = ((((v7 + 7) & 0xFFFFFFF8) + 111) & 0xFFFFFFF8) + 9;
    v9 = (a2 - v6 + 255) >> (8 * v8);
    if (v8 < 4)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    return ((uint64_t (*)(void))((char *)&loc_24145B8DC + 4 * byte_2414C86A8[v12]))();
  }
}

void sub_24145B970(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 111) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v6 >= a3)
  {
    v10 = 0;
    if (v6 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (v6 >= a2)
LABEL_17:
      __asm { BR              X12 }
  }
  if (v7 >= 4)
    v11 = ~v6 + a2;
  else
    v11 = (~(_BYTE)v6 + a2);
  bzero(a1, v7);
  if ((_DWORD)v7 == 1)
    *a1 = v11;
  else
    *(_DWORD *)a1 = v11;
  __asm { BR              X10 }
}

void sub_24145BA94()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x24145BB10);
}

void sub_24145BA9C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x24145BAA4);
  JUMPOUT(0x24145BB10);
}

void sub_24145BAE8()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x24145BB10);
}

void sub_24145BAF0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x24145BB10);
}

uint64_t sub_24145BAF8(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFF)
  {
    if (a2 < 0)
      JUMPOUT(0x24145BB04);
    *(_QWORD *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) = (a2 - 1);
LABEL_6:
    JUMPOUT(0x24145BB10);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t sub_24145BB28()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24145BB9C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = *(_QWORD *)v11;
    v13 = *(_BYTE *)(v11 + 8);
    sub_2412C7080(*(_QWORD *)v11, v13);
    *(_QWORD *)v10 = v12;
    *(_BYTE *)(v10 + 8) = v13;
  }
  return v4;
}

uint64_t sub_24145BC60(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2412C821C(*(_QWORD *)v4, *(_BYTE *)(v4 + 8));
}

uint64_t sub_24145BCA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)v8;
  LOBYTE(v5) = *(_BYTE *)(v8 + 8);
  sub_2412C7080(*(_QWORD *)v8, v5);
  *(_QWORD *)v7 = v9;
  *(_BYTE *)(v7 + 8) = v5;
  return a1;
}

uint64_t sub_24145BD14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)v8;
  LOBYTE(v5) = *(_BYTE *)(v8 + 8);
  sub_2412C7080(*(_QWORD *)v8, v5);
  v10 = *(_QWORD *)v7;
  v11 = *(_BYTE *)(v7 + 8);
  *(_QWORD *)v7 = v9;
  *(_BYTE *)(v7 + 8) = v5;
  sub_2412C821C(v10, v11);
  return a1;
}

uint64_t sub_24145BD90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_24145BDF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)v8;
  LOBYTE(v8) = *(_BYTE *)(v8 + 8);
  v10 = *(_QWORD *)v7;
  v11 = *(_BYTE *)(v7 + 8);
  *(_QWORD *)v7 = v9;
  *(_BYTE *)(v7 + 8) = v8;
  sub_2412C821C(v10, v11);
  return a1;
}

uint64_t sub_24145BE64(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0xFE)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0xFE)
    {
      v14 = *(unsigned __int8 *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 8);
      if (v14 > 1)
        return (v14 ^ 0xFF) + 1;
      else
        return 0;
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    v8 = ((v7 + 7) & 0xFFFFFFF8) + 9;
    v9 = (a2 - v6 + 255) >> (8 * v8);
    if (v8 < 4)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    return ((uint64_t (*)(void))((char *)&loc_24145BEEC + 4 * byte_2414C86B7[v12]))();
  }
}

void sub_24145BF78(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFEu)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v6 >= a3)
  {
    v10 = 0;
    if (v6 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (v6 >= a2)
LABEL_17:
      __asm { BR              X12 }
  }
  if (v7 >= 4)
    v11 = ~v6 + a2;
  else
    v11 = (~(_BYTE)v6 + a2);
  bzero(a1, v7);
  if ((_DWORD)v7 == 1)
    *a1 = v11;
  else
    *(_DWORD *)a1 = v11;
  __asm { BR              X10 }
}

void sub_24145C094()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x24145C110);
}

void sub_24145C09C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x24145C0A4);
  JUMPOUT(0x24145C110);
}

void sub_24145C0E8()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x24145C110);
}

void sub_24145C0F0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x24145C110);
}

uint64_t sub_24145C0F8(uint64_t a1, unsigned int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0xFE)
  {
    if (a2 > 0xFE)
      JUMPOUT(0x24145C104);
    *(_BYTE *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) = -(char)a2;
LABEL_6:
    JUMPOUT(0x24145C110);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

_QWORD *assignWithCopy for CoordinatedMarquees(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for CoordinatedMarquees(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for CoordinatedMarquees()
{
  return &type metadata for CoordinatedMarquees;
}

uint64_t destroy for AppendedBadgeModifier(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_2412E6C04(*(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
}

uint64_t initializeWithCopy for AppendedBadgeModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  j__swift_retain();
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  return a1;
}

uint64_t assignWithCopy for AppendedBadgeModifier(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = v2[1];
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = v2[2];
  swift_retain();
  swift_release();
  v4 = v2[3];
  LOBYTE(v2) = *((_BYTE *)v2 + 32);
  j__swift_retain();
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(unsigned __int8 *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = (_BYTE)v2;
  sub_2412E6C04(v5, v6);
  return a1;
}

uint64_t assignWithTake for AppendedBadgeModifier(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(unsigned __int8 *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v4;
  sub_2412E6C04(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppendedBadgeModifier(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppendedBadgeModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppendedBadgeModifier()
{
  return &type metadata for AppendedBadgeModifier;
}

ValueMetadata *type metadata accessor for MarqueeLoggingContext()
{
  return &type metadata for MarqueeLoggingContext;
}

uint64_t destroy for MarqueeBadgeModel()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

_QWORD *_s11MediaCoreUI17MarqueeBadgeModelVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for MarqueeBadgeModel(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for MarqueeBadgeModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t assignWithCopy for MarqueeFeatheringModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_2412E6F7C(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_2412E6BF8(v6, v7);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v8 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v8;
  return a1;
}

uint64_t assignWithTake for MarqueeFeatheringModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_2412E6BF8(v6, v7);
  *(_BYTE *)(a1 + 9) = *((_BYTE *)a2 + 9);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  return a1;
}

uint64_t sub_24145C60C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24145C640()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24145C674()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24145C684()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24145C694(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  char v6;

  if (result)
  {
    v6 = a4 & 1;
    swift_bridgeObjectRetain();
    sub_241307638(a2, a3, v6);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_24145C734(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    sub_2412F6D78(a2, a3, a4 & 1);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_24145C7E4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24145C808()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813F0);
  return sub_2414B47B0();
}

double sub_24145C858@<D0>(double *a1@<X8>)
{
  return keypath_getTm_0((void (*)(void))sub_2412DFD8C, a1);
}

uint64_t sub_24145C86C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (void (*)(void))sub_2412DFD8C);
}

uint64_t sub_24145C880(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  unint64_t *v29;

  if (!a3)
    return MEMORY[0x24BEE4B00];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543815D0);
  result = sub_2414B56EC();
  v9 = result;
  v29 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= a2)
        return v9;
      v16 = v29[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= a2)
          return v9;
        v16 = v29[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= a2)
            return v9;
          v16 = v29[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= a2)
              return v9;
            v16 = v29[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v11 >= a2)
                  return v9;
                v16 = v29[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = *(_BYTE *)(*(_QWORD *)(v4 + 48) + v14);
    v19 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v14);
    sub_2414B58CC();
    sub_2414B3394();
    sub_2414B58E4();
    result = sub_2414B58FC();
    v20 = -1 << *(_BYTE *)(v9 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(_BYTE *)(*(_QWORD *)(v9 + 48) + v23) = v18;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v23) = v19;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_24145CB04(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  unint64_t result;
  char v13;
  uint64_t v14;
  _BOOL8 v15;
  BOOL v16;
  uint64_t v17;
  char v18;
  char v19;
  _QWORD *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;

  swift_bridgeObjectRetain();
  swift_retain();
  v7 = sub_24145CDBC();
  if (v7 == 2)
    goto LABEL_13;
  v9 = v8;
  v10 = (_QWORD *)*a5;
  v11 = v7 & 1;
  result = sub_2412E7920(v7 & 1);
  v14 = v10[2];
  v15 = (v13 & 1) == 0;
  v16 = __OFADD__(v14, v15);
  v17 = v14 + v15;
  if (v16)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v18 = v13;
  if (v10[3] < v17)
  {
    sub_2412C95E4(v17, a4 & 1);
    result = sub_2412E7920(v11);
    if ((v18 & 1) == (v19 & 1))
      goto LABEL_7;
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    result = sub_2414B583C();
    __break(1u);
  }
  if ((a4 & 1) == 0)
  {
    v21 = result;
    sub_24140B5B8();
    result = v21;
    v20 = (_QWORD *)*a5;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_10;
  }
LABEL_7:
  v20 = (_QWORD *)*a5;
  if ((v18 & 1) != 0)
  {
LABEL_8:
    *(_QWORD *)(v20[7] + 8 * result) = v9;
LABEL_12:
    v24 = sub_24145CDBC();
    if (v24 == 2)
    {
LABEL_13:
      swift_release();
      swift_bridgeObjectRelease();
      sub_2413C648C();
      return swift_release();
    }
    v9 = v25;
    v18 = 1;
    while (1)
    {
      v27 = (_QWORD *)*a5;
      v11 = v24 & 1;
      result = sub_2412E7920(v24 & 1);
      v29 = v27[2];
      v30 = (v28 & 1) == 0;
      v16 = __OFADD__(v29, v30);
      v31 = v29 + v30;
      if (v16)
        goto LABEL_23;
      a4 = v28;
      if (v27[3] < v31)
      {
        sub_2412C95E4(v31, 1);
        result = sub_2412E7920(v11);
        if ((a4 & 1) != (v32 & 1))
          goto LABEL_5;
      }
      v33 = (_QWORD *)*a5;
      if ((a4 & 1) != 0)
      {
        *(_QWORD *)(v33[7] + 8 * result) = v9;
      }
      else
      {
        v33[(result >> 6) + 8] |= 1 << result;
        *(_BYTE *)(v33[6] + result) = v11;
        *(_QWORD *)(v33[7] + 8 * result) = v9;
        v34 = v33[2];
        v16 = __OFADD__(v34, 1);
        v35 = v34 + 1;
        if (v16)
          goto LABEL_24;
        v33[2] = v35;
      }
      v24 = sub_24145CDBC();
      v9 = v26;
      if (v24 == 2)
        goto LABEL_13;
    }
  }
LABEL_10:
  v20[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(v20[6] + result) = v11;
  *(_QWORD *)(v20[7] + 8 * result) = v9;
  v22 = v20[2];
  v16 = __OFADD__(v22, 1);
  v23 = v22 + 1;
  if (!v16)
  {
    v20[2] = v23;
    goto LABEL_12;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_24145CDBC()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  void (*v9)(uint64_t *__return_ptr, char *);
  uint64_t result;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  char v18[8];
  uint64_t v19;

  v1 = *v0;
  v3 = v0[3];
  v2 = v0[4];
  v4 = v3;
  if (v2)
  {
    v5 = (v2 - 1) & v2;
    v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    v7 = *(_BYTE *)(*(_QWORD *)(v1 + 48) + v6);
    v8 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v6);
    v0[3] = v4;
    v0[4] = v5;
    v9 = (void (*)(uint64_t *__return_ptr, char *))v0[5];
    v18[0] = v7;
    v19 = v8;
    v9(&v17, v18);
    return v17;
  }
  v11 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    v12 = (unint64_t)(v0[2] + 64) >> 6;
    if (v11 < v12)
    {
      v13 = v0[1];
      v14 = *(_QWORD *)(v13 + 8 * v11);
      if (v14)
      {
LABEL_7:
        v5 = (v14 - 1) & v14;
        v6 = __clz(__rbit64(v14)) + (v11 << 6);
        v4 = v11;
        goto LABEL_3;
      }
      v15 = v3 + 2;
      v4 = v3 + 1;
      if (v3 + 2 < v12)
      {
        v14 = *(_QWORD *)(v13 + 8 * v15);
        if (v14)
        {
LABEL_10:
          v11 = v15;
          goto LABEL_7;
        }
        v4 = v3 + 2;
        if (v3 + 3 < v12)
        {
          v14 = *(_QWORD *)(v13 + 8 * (v3 + 3));
          if (v14)
          {
            v11 = v3 + 3;
            goto LABEL_7;
          }
          v15 = v3 + 4;
          v4 = v3 + 3;
          if (v3 + 4 < v12)
          {
            v14 = *(_QWORD *)(v13 + 8 * v15);
            if (v14)
              goto LABEL_10;
            v11 = v3 + 5;
            v4 = v3 + 4;
            if (v3 + 5 < v12)
            {
              v14 = *(_QWORD *)(v13 + 8 * v11);
              if (v14)
                goto LABEL_7;
              v4 = v12 - 1;
              v16 = v3 + 6;
              while (v12 != v16)
              {
                v14 = *(_QWORD *)(v13 + 8 * v16++);
                if (v14)
                {
                  v11 = v16 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v0[3] = v4;
    v0[4] = 0;
    return 2;
  }
  return result;
}

void sub_24145CF1C()
{
  _QWORD *v0;

  swift_getObjectType();
  *(_QWORD *)((char *)v0 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x80)) = 0;
  type metadata accessor for Marquee.MarqueeAnimationView.MarqueeUIView.Configuration();
}

id sub_24145CF9C(uint64_t a1)
{
  objc_class *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  objc_super v19;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v6, v5, a1);
  v9 = (_QWORD *)((char *)v2 + *(_QWORD *)((*v7 & *v2) + 0x70));
  *v9 = v4;
  v9[1] = v3;
  v9[2] = v8;
  v19.receiver = v2;
  v19.super_class = v1;
  swift_retain();
  swift_retain();
  v10 = objc_msgSendSuper2(&v19, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v11 = (void *)objc_opt_self();
  v12 = v10;
  v13 = objc_msgSend(v11, sel_clearColor, v19.receiver, v19.super_class);
  objc_msgSend(v12, sel_setBackgroundColor_, v13);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384408);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_2414B72B0;
  v15 = sub_2414B2CEC();
  v16 = MEMORY[0x24BEBC318];
  *(_QWORD *)(v14 + 32) = v15;
  *(_QWORD *)(v14 + 40) = v16;
  *(_QWORD *)(swift_allocObject() + 16) = v1;
  v17 = v12;
  sub_2414B52D8();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return v17;
}

void sub_24145D118()
{
  swift_beginAccess();
  type metadata accessor for Marquee.MarqueeAnimationView.MarqueeUIView.Configuration();
}

uint64_t sub_24145D170(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 84));
}

id sub_24145D18C(void *a1)
{
  return objc_msgSend(a1, sel_setNeedsLayout);
}

void sub_24145D198()
{
  _QWORD *v0;

  *(_QWORD *)((char *)v0 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x80)) = 0;

  sub_2414B5674();
  __break(1u);
}

void sub_24145D200()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_24145D22C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t *v19;

  v19 = (unint64_t *)result;
  v4 = 0;
  v5 = 0;
  v6 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v5 << 6);
      goto LABEL_5;
    }
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v10)
      return sub_24145C880(v19, a2, v4, a3);
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v10)
        return sub_24145C880(v19, a2, v4, a3);
      v15 = *(_QWORD *)(v6 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v10)
          return sub_24145C880(v19, a2, v4, a3);
        v15 = *(_QWORD *)(v6 + 8 * v5);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v9 = (v15 - 1) & v15;
    v12 = __clz(__rbit64(v15)) + (v5 << 6);
LABEL_5:
    v13 = sub_2414B3394();
    result = sub_2414B3394();
    if (v13 != result)
    {
      *(unint64_t *)((char *)v19 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        return sub_24145C880(v19, a2, v4, a3);
      }
    }
  }
  v16 = v14 + 3;
  if (v16 >= v10)
    return sub_24145C880(v19, a2, v4, a3);
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v10)
      return sub_24145C880(v19, a2, v4, a3);
    v15 = *(_QWORD *)(v6 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_24145D3CC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  char v7;
  unsigned int v8;
  unint64_t v9;
  size_t v10;
  char v11;
  uint64_t isStackAllocationSafe;
  uint64_t v13;
  char v14;
  void *v15;
  char v16;
  _QWORD v18[2];

  v18[1] = *MEMORY[0x24BDAC8D0];
  v7 = *(_BYTE *)(a1 + 32);
  v8 = v7 & 0x3F;
  v9 = (unint64_t)((1 << v7) + 63) >> 6;
  v10 = 8 * v9;
  v11 = a3 & 1;
  sub_2412E6F7C(a2, a3 & 1);
  isStackAllocationSafe = sub_2412E6F7C(a2, v11);
  if (v8 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    v18[0] = v18;
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v18 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    sub_2412E6F7C(a2, v11);
    v13 = sub_24145D22C((uint64_t)v18 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v9, a1);
    sub_2412E6BF8(a2, v11);
    if (v3)
      swift_willThrow();
    v14 = a3 & 1;
    sub_2412E6BF8(a2, v14);
    sub_2412E6BF8(a2, v14);
  }
  else
  {
    v15 = (void *)swift_slowAlloc();
    bzero(v15, v10);
    v16 = a3 & 1;
    sub_2412E6F7C(a2, v16);
    v13 = sub_24145D22C((uint64_t)v15, v9, a1);
    sub_2412E6BF8(a2, v16);
    MEMORY[0x242695BD8](v15, -1, -1);
    sub_2412E6BF8(a2, v16);
    sub_2412E6BF8(a2, v16);
  }
  return v13;
}

unint64_t sub_24145D5E8()
{
  unint64_t result;

  result = qword_254382B90;
  if (!qword_254382B90)
  {
    result = MEMORY[0x242695AE8](&unk_2414C9458, &_s24MarqueeLoggingContextKeyVN);
    atomic_store(result, (unint64_t *)&qword_254382B90);
  }
  return result;
}

uint64_t sub_24145D62C()
{
  return swift_deallocObject();
}

void sub_24145D640(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_241456488(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_24145D64C()
{
  sub_2412C89C0();
  return sub_2414B3838();
}

unint64_t sub_24145D68C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254382BD0;
  if (!qword_254382BD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254382BC8);
    v2 = sub_2412C8FC4(&qword_254382BB8, &qword_254382BC0, MEMORY[0x24BDF5428]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254382BD0);
  }
  return result;
}

unint64_t sub_24145D708()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254380E00;
  if (!qword_254380E00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380E08);
    v2[0] = sub_2412E61AC();
    v2[1] = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254380E00);
  }
  return result;
}

uint64_t sub_24145D78C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_2414557DC(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_24145D798()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_254382B70;
  if (!qword_254382B70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380D08);
    v2 = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_254382B70);
  }
  return result;
}

unint64_t sub_24145D81C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257129428;
  if (!qword_257129428)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571293D0);
    v2[0] = sub_24145D8A0();
    v2[1] = sub_2412C8FC4(&qword_254384160, &qword_254384168, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257129428);
  }
  return result;
}

unint64_t sub_24145D8A0()
{
  unint64_t result;

  result = qword_257129430;
  if (!qword_257129430)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for TrailingBadgesView, &type metadata for TrailingBadgesView);
    atomic_store(result, (unint64_t *)&qword_257129430);
  }
  return result;
}

void sub_24145D8E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_24145DB60("[Context: %{public}s] Marquee did appear as RegularContent", a2, a3, a4);
}

double sub_24145D8F4@<D0>(double *a1@<X8>)
{
  return keypath_getTm_0((void (*)(void))sub_2412DFBDC, a1);
}

uint64_t sub_24145D908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (void (*)(void))sub_2412DFBDC);
}

double sub_24145D91C@<D0>(double *a1@<X8>)
{
  return keypath_getTm_0((void (*)(void))sub_2412DFC64, a1);
}

uint64_t sub_24145D930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (void (*)(void))sub_2412DFC64);
}

double sub_24145D944@<D0>(double *a1@<X8>)
{
  return keypath_getTm_0((void (*)(void))sub_2412DFC20, a1);
}

uint64_t sub_24145D958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (void (*)(void))sub_2412DFC20);
}

uint64_t sub_24145D96C@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_34Tm((void (*)(void))sub_2412DFB98, a1);
}

uint64_t sub_24145D980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_35Tm(a1, a2, a3, a4, (void (*)(void))sub_2412DFB98);
}

uint64_t sub_24145D994@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  int v4;
  char v5;

  sub_2412DFB54();
  result = sub_2414B3838();
  *(_QWORD *)a1 = v3;
  *(_DWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 12) = v5;
  return result;
}

uint64_t sub_24145D9F0()
{
  sub_2412DFB54();
  return sub_2414B3844();
}

uint64_t objectdestroy_53Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = (int *)type metadata accessor for Marquee(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*((_QWORD *)v6 - 1) + 80);
  v8 = v4 + ((v7 + 32) & ~v7);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v8, v5);
  sub_2412E6C0C(*(_QWORD *)(v8 + v6[9]), *(_QWORD *)(v8 + v6[9] + 8), *(_QWORD *)(v8 + v6[9] + 16), *(_BYTE *)(v8 + v6[9] + 24));
  sub_2412E6C04(*(_QWORD *)(v8 + v6[10]), *(unsigned __int8 *)(v8 + v6[10] + 8));
  sub_2412E6BF8(*(_QWORD *)(v8 + v6[11]), *(_BYTE *)(v8 + v6[11] + 8));
  sub_2412E6BF8(*(_QWORD *)(v8 + v6[12]), *(_BYTE *)(v8 + v6[12] + 8));
  sub_2412C821C(*(_QWORD *)(v8 + v6[13]), *(_BYTE *)(v8 + v6[13] + 8));
  sub_2412E6BF8(*(_QWORD *)(v8 + v6[14]), *(_BYTE *)(v8 + v6[14] + 8));
  swift_release();
  return swift_deallocObject();
}

void sub_24145DB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_24145DB60("[Context: %{public}s] Marquee did appear as MarqueeingContent", a2, a3, a4);
}

void sub_24145DB60(const char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Marquee(0, v6, v7, a4) - 8) + 80);
  sub_2414553F0(v4 + ((v8 + 32) & ~v8), v6, v7, a1);
}

ValueMetadata *_s20MarqueeFeatheringKeyVMa()
{
  return &_s20MarqueeFeatheringKeyVN;
}

ValueMetadata *_s24MarqueeEmbeddedBadgesKeyVMa()
{
  return &_s24MarqueeEmbeddedBadgesKeyVN;
}

ValueMetadata *_s18MarqueeIsBadgedKeyVMa()
{
  return &_s18MarqueeIsBadgedKeyVN;
}

ValueMetadata *_s19MarqueeMaskStyleKeyVMa()
{
  return &_s19MarqueeMaskStyleKeyVN;
}

ValueMetadata *_s24MarqueeLoggingContextKeyVMa()
{
  return &_s24MarqueeLoggingContextKeyVN;
}

ValueMetadata *_s28MarqueeAnimationDirectionKeyVMa()
{
  return &_s28MarqueeAnimationDirectionKeyVN;
}

ValueMetadata *_s33MarqueePreferredFrameRateRangeKeyVMa()
{
  return &_s33MarqueePreferredFrameRateRangeKeyVN;
}

ValueMetadata *_s21MarqueeRepeatCountKeyVMa()
{
  return &_s21MarqueeRepeatCountKeyVN;
}

ValueMetadata *_s21MarqueeIsAnimatingKeyVMa()
{
  return &_s21MarqueeIsAnimatingKeyVN;
}

ValueMetadata *_s15MarqueeDelayKeyVMa()
{
  return &_s15MarqueeDelayKeyVN;
}

ValueMetadata *_s14MarqueeRateKeyVMa()
{
  return &_s14MarqueeRateKeyVN;
}

ValueMetadata *_s17MarqueeSpacingKeyVMa()
{
  return &_s17MarqueeSpacingKeyVN;
}

ValueMetadata *_s30MarqueeAnimationDurationMaxKeyVMa()
{
  return &_s30MarqueeAnimationDurationMaxKeyVN;
}

_OWORD *assignWithTake for MarqueeMaskModifier(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;

  if (a1 != a2)
  {
    sub_2412CBE78((uint64_t)a1, &qword_254380B20);
    v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for MarqueeMaskModifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MarqueeMaskModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_24145DD70(uint64_t a1)
{
  destroy for MarqueeBadgeModel();
  return a1;
}

uint64_t getEnumTagSinglePayload for EmbeddedBadgeModifier(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EmbeddedBadgeModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_24145DE4C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    v9 = *((_BYTE *)a2 + 16);
    sub_2412D0590();
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = v9;
    v10 = a2[3];
    LOBYTE(v8) = *((_BYTE *)a2 + 32);
    sub_2412E6F7C(v10, v8);
    *(_QWORD *)(a1 + 24) = v10;
    *(_BYTE *)(a1 + 32) = v8;
    v11 = *(int *)(a3 + 24);
    v12 = (_QWORD *)(a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_2414B3484();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24145DF68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_2412C8C2C();
  sub_2412E6BF8(*(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B68);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_2414B3484();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_24145DFF4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  v6 = *a2;
  v7 = a2[1];
  v8 = *((_BYTE *)a2 + 16);
  sub_2412D0590();
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v9 = a2[3];
  LOBYTE(v7) = *((_BYTE *)a2 + 32);
  sub_2412E6F7C(v9, v7);
  *(_QWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 32) = v7;
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (uint64_t *)((char *)a2 + v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254380B68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = sub_2414B3484();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    *v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_24145E0DC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = *a2;
  v7 = a2[1];
  v8 = *((_BYTE *)a2 + 16);
  sub_2412D0590();
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  sub_2412C8C2C();
  v9 = a2[3];
  LOBYTE(v7) = *((_BYTE *)a2 + 32);
  sub_2412E6F7C(v9, v7);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 32) = v7;
  sub_2412E6BF8(v10, v11);
  if ((uint64_t *)a1 != a2)
  {
    v12 = *(int *)(a3 + 24);
    v13 = (_QWORD *)(a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    sub_2412CBE78(a1 + v12, &qword_254380B68);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_2414B3484();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24145E1F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(int *)(a3 + 24);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2414B3484();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_24145E2B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v6;
  sub_2412C8C2C();
  v7 = *(_BYTE *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v7;
  sub_2412E6BF8(v8, v9);
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 24);
    v11 = (void *)(a1 + v10);
    v12 = (const void *)(a2 + v10);
    sub_2412CBE78(a1 + v10, &qword_254380B68);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_2414B3484();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_24145E3B0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24145E3BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122060);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_24145E434()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24145E440(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 16) = -(char)a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122060);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_24145E4B4()
{
  return sub_2412C8FC4(&qword_257129438, &qword_257129440, MEMORY[0x24BDF4498]);
}

unint64_t sub_24145E4E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254383F50;
  if (!qword_254383F50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383F58);
    v2[0] = sub_24145E568();
    v2[1] = sub_2412C8FC4(&qword_254381338, &qword_254381340, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254383F50);
  }
  return result;
}

unint64_t sub_24145E568()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254383E70;
  if (!qword_254383E70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254383E78);
    v2[0] = sub_2412C8FC4(&qword_2543840C8, (uint64_t *)&unk_2543840D0, MEMORY[0x24BDEFB78]);
    v2[1] = sub_2412C8FC4(&qword_254384118, &qword_254384120, MEMORY[0x24BDF09B0]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254383E70);
  }
  return result;
}

void sub_24145E608(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];

  v2 = a1[1];
  v7 = *a1;
  v1 = v7;
  v8 = v2;
  MEMORY[0x242695A94](255, &v7, MEMORY[0x24BDF2240], 0);
  v3 = sub_2414B3514();
  v7 = v1;
  v8 = v2;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v5 = sub_2412E6820();
  v11[0] = OpaqueTypeConformance2;
  v11[1] = v5;
  v6 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v3, v11);
  v7 = v1;
  v8 = v3;
  v9 = v2;
  v10 = v6;
  type metadata accessor for Marquee.MarqueeAnimationView();
}

uint64_t sub_24145E6AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];
  _QWORD v11[2];
  _QWORD v12[2];
  uint64_t v13;
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381160);
  sub_2414B3514();
  sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254382BC8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254380E08);
  swift_getTupleTypeMetadata3();
  v1 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v1);
  v2 = sub_2414B4804();
  v3 = MEMORY[0x242695AE8](MEMORY[0x24BDF4498], v2);
  v13 = v2;
  v14 = v3;
  MEMORY[0x242695A94](255, &v13, MEMORY[0x24BDF2F10], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543812F8);
  v4 = sub_2414B3514();
  v5 = sub_2414B3514();
  v6 = sub_2414B3514();
  v13 = v2;
  v14 = v3;
  v12[0] = swift_getOpaqueTypeConformance2();
  v12[1] = sub_2412C8FC4(&qword_2543812F0, &qword_2543812F8, MEMORY[0x24BDF1028]);
  v7 = MEMORY[0x242695AE8](v0, v4, v12);
  v8 = MEMORY[0x24BDECC60];
  v11[0] = v7;
  v11[1] = MEMORY[0x24BDECC60];
  v10[0] = MEMORY[0x242695AE8](v0, v5, v11);
  v10[1] = v8;
  return MEMORY[0x242695AE8](v0, v6, v10);
}

void sub_24145E86C()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254382B78);
  swift_getTupleTypeMetadata2();
  v0 = sub_2414B4B1C();
  MEMORY[0x242695AE8](MEMORY[0x24BDF5428], v0);
  sub_2414B4804();
  JUMPOUT(0x242695AE8);
}

uint64_t sub_24145E8E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24145E900(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MaskView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24145E944(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MaskView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24145E980()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571294B0;
  if (!qword_2571294B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257129490);
    v2[0] = sub_24145EA04();
    v2[1] = sub_2412C8FC4((unint64_t *)&unk_2543812D0, (uint64_t *)&unk_2543812E0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571294B0);
  }
  return result;
}

unint64_t sub_24145EA04()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571294B8;
  if (!qword_2571294B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571294C0);
    v2[0] = sub_2412DC484(&qword_2571294C8, &qword_2571294D0, (uint64_t (*)(void))sub_24145EAA8, MEMORY[0x24BDEBEE0]);
    v2[1] = sub_2412C8FC4(&qword_2571294D8, &qword_2571294E0, MEMORY[0x24BDEB9D0]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571294B8);
  }
  return result;
}

unint64_t sub_24145EAA8()
{
  unint64_t result;

  result = qword_254383B38;
  if (!qword_254383B38)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for BackdropLayerView, &type metadata for BackdropLayerView);
    atomic_store(result, (unint64_t *)&qword_254383B38);
  }
  return result;
}

ValueMetadata *type metadata accessor for DefaultMarqueeMaskStyle()
{
  return &type metadata for DefaultMarqueeMaskStyle;
}

ValueMetadata *type metadata accessor for BackdropMarqueeMaskStyle()
{
  return &type metadata for BackdropMarqueeMaskStyle;
}

unint64_t sub_24145EB0C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_2412E6F7C(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = *(int *)(a3 + 20);
    v10 = (_QWORD *)(a1 + v9);
    v11 = (_QWORD *)(a2 + v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254380B68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2414B3484();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24145EC08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2414B3484();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_24145ECB8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_2412E6BF8(v8, v9);
  if ((uint64_t *)a1 != a2)
  {
    v10 = *(int *)(a3 + 20);
    v11 = (void *)(a1 + v10);
    v12 = (char *)a2 + v10;
    sub_2412CBE78(a1 + v10, &qword_254380B68);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254380B68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_2414B3484();
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_24145ED94()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24145EDA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122060);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_24145EE18()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24145EE24(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 8) = -(char)a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257122060);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

ValueMetadata *type metadata accessor for BackdropMaskModifier.ClipShape()
{
  return &type metadata for BackdropMaskModifier.ClipShape;
}

unint64_t sub_24145EEB4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571294E8;
  if (!qword_2571294E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257129488);
    v2[0] = sub_24145EF38();
    v2[1] = sub_2412C8FC4(&qword_257129530, &qword_257129480, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571294E8);
  }
  return result;
}

unint64_t sub_24145EF38()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571294F0;
  if (!qword_2571294F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257129478);
    v2[0] = sub_24145EFBC();
    v2[1] = sub_2412C8FC4(&qword_257129530, &qword_257129480, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571294F0);
  }
  return result;
}

unint64_t sub_24145EFBC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2571294F8;
  if (!qword_2571294F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257129460);
    v2[0] = sub_24145F040();
    v2[1] = sub_2412C8FC4(&qword_257129520, &qword_257129528, MEMORY[0x24BDEF370]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2571294F8);
  }
  return result;
}

unint64_t sub_24145F040()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257129500;
  if (!qword_257129500)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257129458);
    v2[0] = sub_2412C8FC4(&qword_257129508, &qword_257129468, MEMORY[0x24BDEFB78]);
    v2[1] = sub_2412C8FC4(&qword_257129510, &qword_257129518, MEMORY[0x24BDEB950]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257129500);
  }
  return result;
}

uint64_t sub_24145F0DC()
{
  return sub_2412C8FC4(&qword_257129538, &qword_257129540, MEMORY[0x24BDEB358]);
}

unint64_t sub_24145F10C()
{
  unint64_t result;

  result = qword_257129548;
  if (!qword_257129548)
  {
    result = MEMORY[0x242695AE8](&unk_2414C971C, &type metadata for BackdropMaskModifier.ClipShape);
    atomic_store(result, (unint64_t *)&qword_257129548);
  }
  return result;
}

unint64_t sub_24145F154()
{
  unint64_t result;

  result = qword_257129550;
  if (!qword_257129550)
  {
    result = MEMORY[0x242695AE8](&unk_2414C96CC, &type metadata for BackdropMaskModifier.ClipShape);
    atomic_store(result, (unint64_t *)&qword_257129550);
  }
  return result;
}

uint64_t sub_24145F198(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24145F1DC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24145F220()
{
  CGFloat *v0;

  return sub_241458028(v0[2], v0[3], v0[4], v0[5]);
}

unint64_t sub_24145F230()
{
  unint64_t result;

  result = qword_257129558;
  if (!qword_257129558)
  {
    result = MEMORY[0x242695AE8](&unk_2414C976C, &type metadata for BackdropMaskModifier.ClipShape);
    atomic_store(result, (unint64_t *)&qword_257129558);
  }
  return result;
}

ValueMetadata *_s37MarqueeCanExtendContentBeyondFrameKeyVMa()
{
  return &_s37MarqueeCanExtendContentBeyondFrameKeyVN;
}

uint64_t sub_24145F284()
{
  return sub_2412DC484(&qword_254380E88, &qword_254380E90, sub_2413007A4, MEMORY[0x24BDECC60]);
}

uint64_t SlideCarousel.init(speed:isAnimating:items:itemView:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  sub_2414B4798();
  sub_2414B4798();
  sub_2414B4798();
  sub_2414B4798();
  sub_2414B4798();
  sub_2414B4798();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257129578);
  swift_allocObject();
  sub_2414B2DB8();
  sub_2414B4798();
  sub_2414B4798();
  result = sub_2414B4798();
  *(double *)a7 = a8;
  *(_QWORD *)(a7 + 8) = a1;
  *(_QWORD *)(a7 + 16) = a2;
  *(_BYTE *)(a7 + 24) = a3;
  *(_QWORD *)(a7 + 32) = a4;
  *(_QWORD *)(a7 + 40) = a5;
  *(_QWORD *)(a7 + 48) = a6;
  *(_QWORD *)(a7 + 56) = v17;
  *(_QWORD *)(a7 + 64) = v18;
  *(_QWORD *)(a7 + 72) = v17;
  *(_QWORD *)(a7 + 80) = v18;
  *(_QWORD *)(a7 + 88) = v17;
  *(_QWORD *)(a7 + 96) = v18;
  *(_QWORD *)(a7 + 104) = v17;
  *(_QWORD *)(a7 + 112) = v18;
  *(_QWORD *)(a7 + 120) = v17;
  *(_QWORD *)(a7 + 128) = v18;
  *(_QWORD *)(a7 + 136) = v17;
  *(_QWORD *)(a7 + 144) = v18;
  *(_QWORD *)(a7 + 152) = v17;
  *(_QWORD *)(a7 + 160) = v18;
  *(_QWORD *)(a7 + 168) = v17;
  *(_QWORD *)(a7 + 176) = v18;
  *(_BYTE *)(a7 + 184) = v17;
  *(_QWORD *)(a7 + 192) = v18;
  return result;
}

uint64_t sub_24145F4D0()
{
  sub_2414B4AA4();
  sub_2414B3328();
  return swift_release();
}

void sub_24145F578()
{
  type metadata accessor for SlideCarousel();
}

uint64_t sub_24145F5B4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C0);
  sub_2414B47A4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C0);
  return sub_2414B47B0();
}

uint64_t sub_24145F61C()
{
  return sub_2414B3328();
}

void sub_24145F6A4(uint64_t a1)
{
  sub_241462A38(a1);
  type metadata accessor for SlideCarousel();
}

uint64_t sub_24145F700()
{
  uint64_t v0;
  double v1;
  double v2;
  int v3;
  uint64_t v4;
  double v5;
  double v6;
  double v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C0);
  sub_2414B47A4();
  v1 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C0);
  sub_2414B47A4();
  v2 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813E8);
  sub_2414B47A4();
  v3 = LOBYTE(v8);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381450);
  MEMORY[0x242694144](&v8, v4);
  v5 = 0.0;
  if (!LOBYTE(v8))
    v5 = v1;
  v6 = -v2;
  if (!LOBYTE(v8))
    v6 = v1;
  if (v3)
    v5 = v6;
  v8 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C0);
  sub_2414B47B0();
  return sub_241463D44(v0);
}

uint64_t sub_24145F820(char a1, uint64_t a2)
{
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  void *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  _BYTE v105[32];
  __int128 v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;

  v71 = a2;
  v4 = sub_2414B4B94();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2414B4BB8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2414B4BD0();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = v2[11];
  v107 = v2[10];
  v108 = v19;
  v109 = *((_QWORD *)v2 + 24);
  v20 = v2[7];
  v104 = v2[6];
  *(_OWORD *)v105 = v20;
  v21 = v2[9];
  *(_OWORD *)&v105[16] = v2[8];
  v106 = v21;
  v22 = v2[3];
  v100 = v2[2];
  v101 = v22;
  v23 = v2[5];
  v102 = v2[4];
  v103 = v23;
  v24 = v2[1];
  v98 = *v2;
  v99 = v24;
  if ((a1 & 1) == 0)
  {
    v32 = v2[9];
    v33 = v2[11];
    v95 = v2[10];
    v96 = v33;
    v34 = v2[5];
    v35 = v2[7];
    v91 = v2[6];
    v92 = v35;
    v36 = v2[7];
    v37 = v2[9];
    v93 = v2[8];
    v94 = v37;
    v38 = v2[1];
    v39 = v2[3];
    v87 = v2[2];
    v88 = v39;
    v40 = v2[3];
    v41 = v2[5];
    v89 = v2[4];
    v90 = v41;
    v42 = v2[1];
    v85 = *v2;
    v86 = v42;
    v43 = v2[11];
    v82 = v95;
    v83 = v43;
    v78 = v91;
    v79 = v36;
    v80 = v93;
    v81 = v32;
    v74 = v87;
    v75 = v40;
    v76 = v89;
    v77 = v34;
    v97 = *((_QWORD *)v2 + 24);
    v84 = *((_QWORD *)v2 + 24);
    v72 = v85;
    v73 = v38;
    goto LABEL_5;
  }
  v62 = v18;
  v63 = (char *)&v60 - v17;
  v64 = v16;
  v65 = v11;
  v66 = v9;
  v67 = v8;
  v68 = v4;
  v69 = v7;
  v70 = v5;
  v25 = v2[11];
  v95 = v2[10];
  v96 = v25;
  v97 = *((_QWORD *)v2 + 24);
  v26 = v2[7];
  v91 = v2[6];
  v92 = v26;
  v27 = v2[9];
  v93 = v2[8];
  v94 = v27;
  v28 = v2[3];
  v87 = v2[2];
  v88 = v28;
  v29 = v2[5];
  v89 = v2[4];
  v90 = v29;
  v30 = v2[1];
  v85 = *v2;
  v86 = v30;
  v31 = v71;
  if (sub_24145FD74())
  {
    v95 = v107;
    v96 = v108;
    v91 = v104;
    v92 = *(_OWORD *)v105;
    v93 = *(_OWORD *)&v105[16];
    v94 = v106;
    v87 = v100;
    v88 = v101;
    v89 = v102;
    v90 = v103;
    v85 = v98;
    v86 = v99;
    v82 = v107;
    v83 = v108;
    v78 = v104;
    v79 = *(_OWORD *)v105;
    v80 = *(_OWORD *)&v105[16];
    v81 = v106;
    v74 = v100;
    v75 = v101;
    v76 = v102;
    v77 = v103;
    v97 = v109;
    v84 = v109;
    v72 = v98;
    v73 = v99;
LABEL_5:
    sub_24145FE84();
    sub_24145F61C();
    return swift_release();
  }
  v95 = v107;
  v96 = v108;
  v91 = v104;
  v92 = *(_OWORD *)v105;
  v93 = *(_OWORD *)&v105[16];
  v94 = v106;
  v87 = v100;
  v88 = v101;
  v89 = v102;
  v90 = v103;
  v85 = v98;
  v86 = v99;
  v82 = v107;
  v83 = v108;
  v78 = v104;
  v79 = *(_OWORD *)v105;
  v80 = *(_OWORD *)&v105[16];
  v81 = v106;
  v74 = v100;
  v75 = v101;
  v76 = v102;
  v77 = v103;
  v97 = v109;
  v84 = v109;
  v72 = v98;
  v73 = v99;
  sub_24145FF2C();
  sub_24145F61C();
  swift_release();
  sub_2412FFFC8();
  v61 = sub_2414B5230();
  sub_2414B4BC4();
  v85 = *(_OWORD *)&v105[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813F0);
  sub_2414B47A4();
  v45 = v63;
  MEMORY[0x242694468](v14, *(double *)&v72);
  v62 = *(_QWORD *)(v62 + 8);
  v46 = v64;
  ((void (*)(char *, uint64_t))v62)(v14, v64);
  v47 = swift_allocObject();
  v48 = *(_OWORD *)(v31 + 32);
  *(_OWORD *)(v47 + 16) = *(_OWORD *)(v31 + 16);
  *(_OWORD *)(v47 + 32) = v48;
  v49 = v108;
  *(_OWORD *)(v47 + 208) = v107;
  *(_OWORD *)(v47 + 224) = v49;
  *(_QWORD *)(v47 + 240) = v109;
  v50 = *(_OWORD *)v105;
  *(_OWORD *)(v47 + 144) = v104;
  *(_OWORD *)(v47 + 160) = v50;
  v51 = v106;
  *(_OWORD *)(v47 + 176) = *(_OWORD *)&v105[16];
  *(_OWORD *)(v47 + 192) = v51;
  v52 = v101;
  *(_OWORD *)(v47 + 80) = v100;
  *(_OWORD *)(v47 + 96) = v52;
  v53 = v103;
  *(_OWORD *)(v47 + 112) = v102;
  *(_OWORD *)(v47 + 128) = v53;
  v54 = v99;
  *(_OWORD *)(v47 + 48) = v98;
  *(_OWORD *)(v47 + 64) = v54;
  *(_QWORD *)&v87 = sub_241463E34;
  *((_QWORD *)&v87 + 1) = v47;
  *(_QWORD *)&v85 = MEMORY[0x24BDAC760];
  *((_QWORD *)&v85 + 1) = 1107296256;
  *(_QWORD *)&v86 = sub_2413002C8;
  *((_QWORD *)&v86 + 1) = &block_descriptor_34_0;
  v55 = _Block_copy(&v85);
  sub_241462A38((uint64_t)&v98);
  swift_release();
  v56 = v65;
  sub_2414B4BAC();
  *(_QWORD *)&v85 = MEMORY[0x24BEE4AF8];
  sub_2412C8030((unint64_t *)&qword_254384690, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543846C0);
  sub_2412C8FC4((unint64_t *)&qword_254384F80, &qword_2543846C0, MEMORY[0x24BEE12C8]);
  v57 = v68;
  v58 = v69;
  sub_2414B5464();
  v59 = (void *)v61;
  MEMORY[0x242694A80](v45, v56, v58, v55);
  _Block_release(v55);

  (*(void (**)(char *, uint64_t))(v70 + 8))(v58, v57);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v56, v67);
  return ((uint64_t (*)(char *, uint64_t))v62)(v45, v46);
}

BOOL sub_24145FD74()
{
  double v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813F0);
  sub_2414B47A4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813F0);
  sub_2414B47A4();
  if (fabs(v1) <= fabs(v1) * 0.07)
    return 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813F0);
  sub_2414B47A4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813F0);
  sub_2414B47A4();
  return fabs(v1) * 0.93 <= fabs(v1);
}

uint64_t sub_24145FE84()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813F0);
  sub_2414B47A4();
  sub_2414B4A68();
  sub_2414B4A98();
  swift_release();
  v0 = sub_2414B4A74();
  swift_release();
  return v0;
}

uint64_t sub_24145FF2C()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813F0);
  sub_2414B47A4();
  sub_2414B4A68();
  v0 = sub_2414B4A98();
  swift_release();
  return v0;
}

void sub_24145FFB8()
{
  type metadata accessor for SlideCarousel();
}

uint64_t sub_241460054()
{
  sub_24145FE84();
  sub_24145F61C();
  return swift_release();
}

uint64_t sub_24146008C()
{
  sub_2414B4AA4();
  sub_24145F61C();
  return swift_release();
}

uint64_t SlideCarousel.body.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t OpaqueTypeConformance2;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int128 *v93;
  _QWORD v94[2];
  _QWORD v95[2];
  char v96;
  _QWORD v97[2];
  _QWORD v98[2];
  _QWORD v99[2];
  _QWORD v100[2];
  _QWORD v101[2];
  _QWORD v102[2];
  _QWORD v103[2];
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  uint64_t v118;

  v88 = a2;
  v81 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257129580);
  v86 = a1[3];
  v4 = sub_2414B4F60();
  v87 = a1[2];
  v5 = sub_2414B53B0();
  v6 = MEMORY[0x242695AE8](MEMORY[0x24BEE12D8], v4);
  v85 = a1[5];
  *(_QWORD *)&v106 = v4;
  *((_QWORD *)&v106 + 1) = v86;
  *(_QWORD *)&v107 = v5;
  *((_QWORD *)&v107 + 1) = v6;
  *(_QWORD *)&v108 = v85;
  v7 = sub_2414B4954();
  v84 = a1[4];
  v105 = v84;
  v104 = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v5, &v105);
  MEMORY[0x242695AE8](MEMORY[0x24BDF4A08], v7, &v104);
  v8 = sub_2414B4984();
  MEMORY[0x242695AE8](MEMORY[0x24BDF4A68], v8);
  v9 = sub_2414B3F70();
  v10 = sub_2414B3514();
  v80 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257129588);
  v11 = sub_2414B3514();
  v79 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257129590);
  v12 = sub_2414B3514();
  v13 = sub_2414B3514();
  v14 = sub_2414B3514();
  v103[0] = MEMORY[0x242695AE8](MEMORY[0x24BDF19A8], v9);
  v103[1] = MEMORY[0x24BDECC60];
  v15 = MEMORY[0x24BDED308];
  v16 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v10, v103);
  v83 = sub_2412C8FC4(&qword_257129598, &qword_257129588, MEMORY[0x24BDEF370]);
  v102[0] = v16;
  v102[1] = v83;
  v17 = MEMORY[0x242695AE8](v15, v11, v102);
  v82 = sub_2412C8FC4(&qword_2571295A0, &qword_257129590, MEMORY[0x24BDF09B0]);
  v101[0] = v17;
  v101[1] = v82;
  v100[0] = MEMORY[0x242695AE8](v15, v12, v101);
  v100[1] = sub_241460920();
  v99[0] = MEMORY[0x242695AE8](v15, v13, v100);
  v99[1] = MEMORY[0x24BDF0910];
  v18 = MEMORY[0x242695AE8](v15, v14, v99);
  v19 = MEMORY[0x24BEE1328];
  *(_QWORD *)&v106 = v14;
  *((_QWORD *)&v106 + 1) = MEMORY[0x24BEE1328];
  v20 = MEMORY[0x24BEE1340];
  *(_QWORD *)&v107 = v18;
  *((_QWORD *)&v107 + 1) = MEMORY[0x24BEE1340];
  v21 = MEMORY[0x24BDF3908];
  v22 = MEMORY[0x242695A94](255, &v106, MEMORY[0x24BDF3908], 0);
  *(_QWORD *)&v106 = v14;
  *((_QWORD *)&v106 + 1) = v19;
  *(_QWORD *)&v107 = v18;
  *((_QWORD *)&v107 + 1) = v20;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)&v106 = v22;
  *((_QWORD *)&v106 + 1) = v19;
  *(_QWORD *)&v107 = OpaqueTypeConformance2;
  *((_QWORD *)&v107 + 1) = v20;
  v24 = MEMORY[0x242695A94](255, &v106, v21, 0);
  v25 = sub_2412C8FC4(&qword_2571295B0, &qword_257129580, MEMORY[0x24BDB9658]);
  *(_QWORD *)&v106 = v22;
  *((_QWORD *)&v106 + 1) = v19;
  *(_QWORD *)&v107 = OpaqueTypeConformance2;
  *((_QWORD *)&v107 + 1) = v20;
  v26 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)&v106 = v81;
  *((_QWORD *)&v106 + 1) = v24;
  *(_QWORD *)&v107 = v25;
  *((_QWORD *)&v107 + 1) = v26;
  v27 = sub_2414B35E0();
  v28 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571295B8);
  v29 = MEMORY[0x242695AE8](MEMORY[0x24BDEDA68], v27);
  v30 = sub_2412C8FC4(qword_2571295C0, &qword_2571295B8, MEMORY[0x24BDEC410]);
  *(_QWORD *)&v106 = v27;
  *((_QWORD *)&v106 + 1) = v28;
  *(_QWORD *)&v107 = v29;
  *((_QWORD *)&v107 + 1) = v30;
  v71 = MEMORY[0x242695A94](255, &v106, MEMORY[0x24BDF2E88], 0);
  *(_QWORD *)&v106 = v27;
  *((_QWORD *)&v106 + 1) = v28;
  *(_QWORD *)&v107 = v29;
  *((_QWORD *)&v107 + 1) = v30;
  swift_getOpaqueTypeConformance2();
  v31 = sub_2414B2F50();
  v75 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&v71 - v32;
  v74 = sub_2414B3514();
  v34 = sub_2414B3514();
  v78 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v72 = (uint64_t)&v71 - v35;
  v36 = sub_2414B3514();
  v80 = *(_QWORD *)(v36 - 8);
  v77 = v36;
  MEMORY[0x24BDAC7A8](v36);
  v73 = (char *)&v71 - v37;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381330);
  v38 = sub_2414B3514();
  v81 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v76 = (char *)&v71 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v40);
  v79 = (uint64_t)&v71 - v41;
  v42 = v2[11];
  v116 = v2[10];
  v117 = v42;
  v118 = *((_QWORD *)v2 + 24);
  v43 = v2[7];
  v112 = v2[6];
  v113 = v43;
  v44 = v2[9];
  v114 = v2[8];
  v115 = v44;
  v45 = v2[3];
  v108 = v2[2];
  v109 = v45;
  v46 = v2[5];
  v110 = v2[4];
  v111 = v46;
  v47 = v2[1];
  v106 = *v2;
  v107 = v47;
  sub_2414B3E14();
  v49 = v86;
  v48 = v87;
  v89 = v87;
  v90 = v86;
  v51 = v84;
  v50 = v85;
  v91 = v84;
  v92 = v85;
  v93 = &v106;
  sub_2414B2F5C();
  v52 = swift_allocObject();
  *(_QWORD *)(v52 + 16) = v48;
  *(_QWORD *)(v52 + 24) = v49;
  *(_QWORD *)(v52 + 32) = v51;
  *(_QWORD *)(v52 + 40) = v50;
  v53 = v117;
  *(_OWORD *)(v52 + 208) = v116;
  *(_OWORD *)(v52 + 224) = v53;
  *(_QWORD *)(v52 + 240) = v118;
  v54 = v113;
  *(_OWORD *)(v52 + 144) = v112;
  *(_OWORD *)(v52 + 160) = v54;
  v55 = v115;
  *(_OWORD *)(v52 + 176) = v114;
  *(_OWORD *)(v52 + 192) = v55;
  v56 = v109;
  *(_OWORD *)(v52 + 80) = v108;
  *(_OWORD *)(v52 + 96) = v56;
  v57 = v111;
  *(_OWORD *)(v52 + 112) = v110;
  *(_OWORD *)(v52 + 128) = v57;
  v58 = v107;
  *(_OWORD *)(v52 + 48) = v106;
  *(_OWORD *)(v52 + 64) = v58;
  sub_241462A38((uint64_t)&v106);
  v59 = MEMORY[0x242695AE8](MEMORY[0x24BDEB238], v31);
  v60 = v72;
  sub_241461FE4((uint64_t)sub_241462A2C, v52, v59, v72);
  swift_release();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v33, v31);
  sub_2414B4A44();
  v98[0] = v59;
  v98[1] = v83;
  v61 = MEMORY[0x24BDED308];
  v97[0] = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v74, v98);
  v97[1] = v82;
  v70 = MEMORY[0x242695AE8](v61, v34, v97);
  v62 = v73;
  sub_2414B44B0();
  (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v60, v34);
  swift_getKeyPath();
  v96 = 0;
  v95[0] = v70;
  v95[1] = MEMORY[0x24BDEDBB8];
  v63 = v77;
  v64 = MEMORY[0x242695AE8](v61, v77, v95);
  v65 = (uint64_t)v76;
  sub_2414B41C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v62, v63);
  v66 = sub_2412C8FC4((unint64_t *)&qword_254381328, &qword_254381330, MEMORY[0x24BDF1028]);
  v94[0] = v64;
  v94[1] = v66;
  MEMORY[0x242695AE8](v61, v38, v94);
  v67 = v79;
  sub_2412FBF34(v65, v38, v79);
  v68 = *(void (**)(uint64_t, uint64_t))(v81 + 8);
  v68(v65, v38);
  sub_2412EEA1C(v67, v38, v88);
  return ((uint64_t (*)(uint64_t, uint64_t))v68)(v67, v38);
}

unint64_t sub_241460920()
{
  unint64_t result;

  result = qword_2571295A8;
  if (!qword_2571295A8)
  {
    result = MEMORY[0x242695AE8](&unk_2414C9A9C, &type metadata for SlideEffect);
    atomic_store(result, (unint64_t *)&qword_2571295A8);
  }
  return result;
}

void sub_241460964(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, char *a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t OpaqueTypeConformance2;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  unsigned __int8 v63;
  unsigned __int8 v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  _QWORD v131[2];
  _QWORD v132[2];
  _QWORD v133[2];
  _QWORD v134[2];
  _QWORD v135[2];
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;

  v124 = a6;
  v123 = sub_2414B2F74();
  v121 = *(_QWORD *)(v123 - 8);
  MEMORY[0x24BDAC7A8](v123);
  v119 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571295B8);
  v122 = *(_QWORD *)(v128 - 8);
  MEMORY[0x24BDAC7A8](v128);
  v120 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129580);
  v118 = *(_QWORD *)(v127 - 8);
  MEMORY[0x24BDAC7A8](v127);
  v117 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2414B4F60();
  v84 = a2;
  v15 = sub_2414B53B0();
  v16 = MEMORY[0x242695AE8](MEMORY[0x24BEE12D8], v14);
  v138 = v14;
  v139 = (uint64_t)a3;
  v129 = a3;
  v140 = v15;
  v141 = v16;
  v125 = a5;
  v142 = a5;
  v17 = sub_2414B4954();
  v130 = a4;
  v137 = a4;
  v136 = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v15, &v137);
  MEMORY[0x242695AE8](MEMORY[0x24BDF4A08], v17, &v136);
  v18 = sub_2414B4984();
  v19 = MEMORY[0x242695AE8](MEMORY[0x24BDF4A68], v18);
  v80 = v18;
  v79 = v19;
  v20 = sub_2414B3F70();
  v85 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v78 = (char *)&v78 - v21;
  v22 = sub_2414B3514();
  v88 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v87 = (char *)&v78 - v23;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257129588);
  v24 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257129590);
  v25 = sub_2414B3514();
  v91 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v90 = (uint64_t)&v78 - v26;
  v27 = sub_2414B3514();
  v95 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v94 = (char *)&v78 - v28;
  v29 = sub_2414B3514();
  v102 = *(_QWORD *)(v29 - 8);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v101 = (char *)&v78 - v31;
  v81 = MEMORY[0x242695AE8](MEMORY[0x24BDF19A8], v20, v30);
  v135[0] = v81;
  v135[1] = MEMORY[0x24BDECC60];
  v32 = MEMORY[0x24BDED308];
  v89 = v22;
  v33 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v22, v135);
  v34 = sub_2412C8FC4(&qword_257129598, &qword_257129588, MEMORY[0x24BDEF370]);
  v82 = v33;
  v134[0] = v33;
  v134[1] = v34;
  v35 = MEMORY[0x242695AE8](v32, v24, v134);
  v36 = sub_2412C8FC4(&qword_2571295A0, &qword_257129590, MEMORY[0x24BDF09B0]);
  v133[0] = v35;
  v133[1] = v36;
  v92 = v25;
  v37 = MEMORY[0x242695AE8](v32, v25, v133);
  v38 = sub_241460920();
  v83 = v37;
  v132[0] = v37;
  v132[1] = v38;
  v96 = v27;
  v86 = MEMORY[0x242695AE8](v32, v27, v132);
  v131[0] = v86;
  v131[1] = MEMORY[0x24BDF0910];
  v39 = MEMORY[0x242695AE8](v32, v29, v131);
  v40 = MEMORY[0x24BEE1328];
  v138 = v29;
  v139 = MEMORY[0x24BEE1328];
  v41 = MEMORY[0x24BEE1340];
  v140 = v39;
  v141 = MEMORY[0x24BEE1340];
  v42 = MEMORY[0x24BDF3908];
  v43 = MEMORY[0x242695A94](0, &v138, MEMORY[0x24BDF3908], 0);
  v99 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v98 = (char *)&v78 - v44;
  v103 = v29;
  v138 = v29;
  v139 = v40;
  v93 = v39;
  v140 = v39;
  v141 = v41;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v138 = v43;
  v139 = v40;
  v140 = OpaqueTypeConformance2;
  v141 = v41;
  v46 = MEMORY[0x242695A94](0, &v138, v42, 0);
  v106 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v126 = (char *)&v78 - v47;
  v48 = sub_2412C8FC4(&qword_2571295B0, &qword_257129580, MEMORY[0x24BDB9658]);
  v100 = v43;
  v138 = v43;
  v139 = v40;
  v97 = OpaqueTypeConformance2;
  v140 = OpaqueTypeConformance2;
  v141 = v41;
  v49 = swift_getOpaqueTypeConformance2();
  v138 = v127;
  v139 = v46;
  v107 = v46;
  v105 = v48;
  v140 = v48;
  v141 = v49;
  v104 = v49;
  v50 = sub_2414B35E0();
  v114 = *(_QWORD *)(v50 - 8);
  v51 = MEMORY[0x24BDAC7A8](v50);
  v113 = (char *)&v78 - v52;
  v53 = MEMORY[0x242695AE8](MEMORY[0x24BDEDA68], v50, v51);
  v54 = sub_2412C8FC4(qword_2571295C0, &qword_2571295B8, MEMORY[0x24BDEC410]);
  v116 = v50;
  v138 = v50;
  v139 = v128;
  v112 = v53;
  v140 = v53;
  v141 = v54;
  v109 = v54;
  v115 = MEMORY[0x242695A94](0, &v138, MEMORY[0x24BDF2E88], 0);
  v111 = *(_QWORD *)(v115 - 8);
  MEMORY[0x24BDAC7A8](v115);
  v108 = (char *)&v78 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v56);
  v110 = (char *)&v78 - v58;
  if (qword_257120A78 != -1)
    v57 = swift_once();
  MEMORY[0x24BDAC7A8](v57);
  v59 = v84;
  *(&v78 - 6) = v84;
  v60 = v129;
  *(&v78 - 5) = v129;
  v61 = v125;
  *(&v78 - 4) = v130;
  *(&v78 - 3) = v61;
  sub_2414B4A44();
  v77 = v79;
  v76 = v80;
  v62 = v78;
  sub_2414B3F64();
  v63 = sub_2414B3E68();
  v64 = sub_2414B3E80();
  sub_2414B3E74();
  sub_2414B3E74();
  if (sub_2414B3E74() != v63)
    sub_2414B3E74();
  sub_2414B3E74();
  if (sub_2414B3E74() != v64)
    sub_2414B3E74();
  v65 = v87;
  sub_2414B4528();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v62, v20);
  v66 = swift_allocObject();
  *(_QWORD *)(v66 + 16) = v59;
  *(_QWORD *)(v66 + 24) = v60;
  v67 = v130;
  *(_QWORD *)(v66 + 32) = v130;
  *(_QWORD *)(v66 + 40) = v61;
  v68 = (uint64_t)v67;
  v69 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(v66 + 208) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(v66 + 224) = v69;
  *(_QWORD *)(v66 + 240) = *(_QWORD *)(a1 + 192);
  v70 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v66 + 144) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v66 + 160) = v70;
  v71 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v66 + 176) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v66 + 192) = v71;
  v72 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v66 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v66 + 96) = v72;
  v73 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v66 + 112) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v66 + 128) = v73;
  v74 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v66 + 48) = *(_OWORD *)a1;
  *(_OWORD *)(v66 + 64) = v74;
  sub_241462A38(a1);
  v75 = v89;
  sub_241461FE4((uint64_t)sub_241463C3C, v66, v82, v90);
  swift_release();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v65, v75);
  v138 = (uint64_t)v59;
  v139 = (uint64_t)v60;
  v140 = v68;
  v141 = (uint64_t)v61;
  type metadata accessor for SlideCarousel();
}

uint64_t sub_2414619F8()
{
  return sub_2413D1870((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_241460964);
}

uint64_t sub_241461A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v20 = a1;
  v21 = a6;
  v29 = sub_2414B4F60();
  v30 = a3;
  v31 = sub_2414B53B0();
  v32 = MEMORY[0x242695AE8](MEMORY[0x24BEE12D8], v29);
  v33 = a5;
  v10 = sub_2414B4954();
  v28 = a4;
  v27 = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v31, &v28);
  MEMORY[0x242695AE8](MEMORY[0x24BDF4A08], v10, &v27);
  v11 = sub_2414B4984();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v20 - v16;
  v22 = a2;
  v23 = a3;
  v24 = a4;
  v25 = a5;
  v26 = v20;
  sub_2414B4978();
  MEMORY[0x242695AE8](MEMORY[0x24BDF4A68], v11);
  sub_2412FBF34((uint64_t)v14, v11, (uint64_t)v17);
  v18 = *(void (**)(char *, uint64_t))(v12 + 8);
  v18(v14, v11);
  sub_2412EEA1C((uint64_t)v17, v11, v21);
  return ((uint64_t (*)(char *, uint64_t))v18)(v17, v11);
}

uint64_t sub_241461BC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[5];

  v32 = a6;
  v30 = sub_2414B4F60();
  v11 = sub_2414B53B0();
  v29 = MEMORY[0x242695AE8](MEMORY[0x24BEE12D8], v30);
  v40[0] = v30;
  v40[1] = a3;
  v40[2] = v11;
  v40[3] = v29;
  v40[4] = a5;
  v12 = sub_2414B4954();
  v31 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v28 - v16;
  v39 = *(_QWORD *)(a1 + 32);
  v40[0] = v39;
  v33 = a2;
  v34 = a3;
  v35 = a4;
  v36 = a5;
  v28[1] = swift_getKeyPath();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a2;
  *(_QWORD *)(v18 + 24) = a3;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  v19 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(v18 + 208) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(v18 + 224) = v19;
  *(_QWORD *)(v18 + 240) = *(_QWORD *)(a1 + 192);
  v20 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v18 + 144) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v18 + 160) = v20;
  v21 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v18 + 176) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v18 + 192) = v21;
  v22 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v18 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v18 + 96) = v22;
  v23 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v18 + 112) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v18 + 128) = v23;
  v24 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v18 + 48) = *(_OWORD *)a1;
  *(_OWORD *)(v18 + 64) = v24;
  sub_2413C4B94((uint64_t)v40);
  sub_241462A38(a1);
  v38 = a4;
  v27 = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v11, &v38);
  sub_2414B493C();
  v37 = v27;
  MEMORY[0x242695AE8](MEMORY[0x24BDF4A08], v12, &v37);
  sub_2412FBF34((uint64_t)v14, v12, (uint64_t)v17);
  v25 = *(void (**)(char *, uint64_t))(v31 + 8);
  v25(v14, v12);
  sub_2412EEA1C((uint64_t)v17, v12, v32);
  return ((uint64_t (*)(char *, uint64_t))v25)(v17, v12);
}

uint64_t sub_241461DF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v8 = sub_2414B53B0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v18 - v14;
  (*(void (**)(uint64_t, double))(a2 + 40))(a1, v13);
  v19 = a3;
  MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v8, &v19);
  sub_2412FBF34((uint64_t)v11, v8, (uint64_t)v15);
  v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v11, v8);
  sub_2412EEA1C((uint64_t)v15, v8, a4);
  return ((uint64_t (*)(char *, uint64_t))v16)(v15, v8);
}

void sub_241461F04(uint64_t a1)
{
  sub_241462A38(a1);
  type metadata accessor for SlideCarousel();
}

uint64_t sub_241461F68()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C0);
  sub_2414B47A4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C0);
  sub_2414B47B0();
  return sub_241463D44(v0);
}

uint64_t sub_241461FE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[4];

  v13 = a1;
  v15 = a4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257129588);
  v6 = sub_2414B3514();
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - v7;
  v16[2] = sub_241463670;
  v16[3] = 0;
  sub_2414B4A44();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257129658);
  sub_2412C8FC4(&qword_257129660, &qword_257129658, MEMORY[0x24BDEC6F8]);
  sub_2414B4138();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v13;
  *(_QWORD *)(v9 + 24) = a2;
  v10 = sub_2412C8FC4(&qword_257129598, &qword_257129588, MEMORY[0x24BDEF370]);
  v16[0] = a3;
  v16[1] = v10;
  swift_retain();
  MEMORY[0x242695AE8](MEMORY[0x24BDED308], v6, v16);
  sub_241463BD8();
  sub_2412C8030(&qword_254381548, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x24BDBD858]);
  sub_2414B4390();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v8, v6);
}

void sub_2414621C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 32);
  sub_241462A38(a1);
  MEMORY[0x2426947B0](v4, a3);
  type metadata accessor for SlideCarousel();
}

uint64_t sub_241462230(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t result;

  *(_QWORD *)(v2 - 88) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813F0);
  sub_2414B47B0();
  sub_241463D44(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813F0);
  sub_2414B47A4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813F0);
  sub_2414B47B0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C0);
  sub_2414B47A4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C0);
  sub_2414B47B0();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381450);
  result = MEMORY[0x242694144](v5);
  if (*(_BYTE *)(v2 - 88) == 1)
    return sub_24145F820(0, a1);
  return result;
}

void sub_2414623A8()
{
  type metadata accessor for SlideCarousel();
}

uint64_t sub_2414623EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381450);
  MEMORY[0x242694144](v4);
  if (*(_BYTE *)(v2 - 104) == 1)
    return sub_24145F820(1, a1);
  sub_241462A38(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813E8);
  sub_2414B47A4();
  if (*(_BYTE *)(v2 - 104) == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C0);
    sub_2414B47A4();
    v6 = fabs(*(double *)(v2 - 104));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C0);
    sub_2414B47A4();
    v7 = *(double *)(v2 - 104);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C0);
    sub_2414B47A4();
    v6 = v7 - fabs(*(double *)(v2 - 104));
  }
  *(double *)(v2 - 104) = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C0);
  sub_2414B47B0();
  sub_241463D44(v1);
  sub_241462A38(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813F0);
  sub_2414B47A4();
  v8 = *(double *)(v2 - 104);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C0);
  sub_2414B47A4();
  v9 = fabs(*(double *)(v2 - 104));
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813F0);
  sub_2414B47A4();
  v10 = v9 * *(double *)(v2 - 104);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C0);
  sub_2414B47A4();
  *(double *)(v2 - 104) = v8 - v10 / *(double *)(v2 - 104);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543813F0);
  sub_2414B47B0();
  sub_241463D44(v1);
  return sub_24145F4D0();
}

void sub_2414626D8()
{
  type metadata accessor for SlideCarousel();
}

uint64_t sub_241462718(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  double v7;

  *(_QWORD *)(v2 - 80) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C0);
  sub_2414B47B0();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381450);
  result = MEMORY[0x242694144](v5);
  if (*(_BYTE *)(v2 - 80) == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C0);
    sub_2414B47A4();
    v7 = *(double *)(v2 - 80);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C0);
    result = sub_2414B47A4();
    if (v7 == *(double *)(v2 - 80))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2543813F0);
      sub_2414B47A4();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2543813F0);
      sub_2414B47B0();
      *(_OWORD *)(v2 - 80) = *(_OWORD *)(v1 + 184);
      sub_241462A38(v1);
      sub_2412EAFBC(v2 - 80);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2543813E8);
      sub_2414B47A4();
      *(_BYTE *)(v2 - 82) = (*(_BYTE *)(v2 - 81) & 1) == 0;
      sub_2414B47B0();
      sub_2412FAA84(v2 - 80);
      sub_241463D44(v1);
      return sub_24145F820(0, a1);
    }
  }
  return result;
}

uint64_t sub_241462900(uint64_t a1)
{
  char v3;
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 8);
  sub_241462A38(a1);
  sub_241304458((uint64_t)&v4);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254381450);
  MEMORY[0x242694144](&v3);
  sub_2414B48D0();
  sub_241449F00((uint64_t)&v4);
  swift_release();
  return sub_241463D44(a1);
}

void sub_2414629B8()
{
  type metadata accessor for SlideCarousel();
}

uint64_t sub_2414629EC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543841C0);
  return sub_2414B47B0();
}

uint64_t sub_241462A2C()
{
  return sub_241463C48((uint64_t (*)(_QWORD *, _QWORD, _QWORD, _QWORD, _QWORD))sub_2414629B8);
}

uint64_t sub_241462A38(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_241462B28@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2414B36F4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_241462B54()
{
  return sub_2414B3700();
}

uint64_t sub_241462B78()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241462BB0()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_241462C38(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v6;
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v7;
  v8 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v8;
  v9 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v9;
  v10 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v10;
  v11 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v11;
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_241462D74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy200_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t sub_241462F84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v4;
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_release();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_release();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_release();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_release();
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  swift_release();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_release();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_release();
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_release();
  return a1;
}

uint64_t sub_2414630C8(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 200))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_241463110(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 200) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 200) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SlideCarousel()
{
  JUMPOUT(0x242695A4CLL);
}

uint64_t sub_24146318C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t OpaqueTypeConformance2;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  _QWORD v37[2];
  _QWORD v38[2];
  _QWORD v39[2];
  _QWORD v40[2];
  _QWORD v41[2];
  _QWORD v42[2];
  _QWORD v43[2];
  _QWORD v44[2];
  _QWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v1 = a1[1];
  v2 = a1[2];
  v3 = a1[3];
  v36 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257129580);
  v48 = sub_2414B4F60();
  v49 = v1;
  v50 = sub_2414B53B0();
  v51 = MEMORY[0x242695AE8](MEMORY[0x24BEE12D8], v48);
  v52 = v3;
  v4 = sub_2414B4954();
  v47 = v2;
  v46 = MEMORY[0x242695AE8](MEMORY[0x24BDF5578], v50, &v47);
  MEMORY[0x242695AE8](MEMORY[0x24BDF4A08], v4, &v46);
  v5 = sub_2414B4984();
  MEMORY[0x242695AE8](MEMORY[0x24BDF4A68], v5);
  v6 = sub_2414B3F70();
  v7 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257129588);
  v8 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257129590);
  v9 = sub_2414B3514();
  v10 = sub_2414B3514();
  v11 = sub_2414B3514();
  v45[0] = MEMORY[0x242695AE8](MEMORY[0x24BDF19A8], v6);
  v45[1] = MEMORY[0x24BDECC60];
  v12 = MEMORY[0x24BDED308];
  v13 = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v7, v45);
  v14 = sub_2412C8FC4(&qword_257129598, &qword_257129588, MEMORY[0x24BDEF370]);
  v44[0] = v13;
  v44[1] = v14;
  v15 = MEMORY[0x242695AE8](v12, v8, v44);
  v16 = sub_2412C8FC4(&qword_2571295A0, &qword_257129590, MEMORY[0x24BDF09B0]);
  v43[0] = v15;
  v43[1] = v16;
  v42[0] = MEMORY[0x242695AE8](v12, v9, v43);
  v42[1] = sub_241460920();
  v41[0] = MEMORY[0x242695AE8](v12, v10, v42);
  v41[1] = MEMORY[0x24BDF0910];
  v17 = MEMORY[0x242695AE8](v12, v11, v41);
  v18 = MEMORY[0x24BEE1328];
  v48 = v11;
  v49 = MEMORY[0x24BEE1328];
  v19 = MEMORY[0x24BEE1340];
  v50 = v17;
  v51 = MEMORY[0x24BEE1340];
  v20 = MEMORY[0x24BDF3908];
  v21 = MEMORY[0x242695A94](255, &v48, MEMORY[0x24BDF3908], 0);
  v48 = v11;
  v49 = v18;
  v50 = v17;
  v51 = v19;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v48 = v21;
  v49 = v18;
  v50 = OpaqueTypeConformance2;
  v51 = v19;
  v23 = MEMORY[0x242695A94](255, &v48, v20, 0);
  v24 = sub_2412C8FC4(&qword_2571295B0, &qword_257129580, MEMORY[0x24BDB9658]);
  v48 = v21;
  v49 = v18;
  v50 = OpaqueTypeConformance2;
  v51 = v19;
  v25 = swift_getOpaqueTypeConformance2();
  v48 = v36;
  v49 = v23;
  v50 = v24;
  v51 = v25;
  v26 = sub_2414B35E0();
  v27 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571295B8);
  v28 = MEMORY[0x242695AE8](MEMORY[0x24BDEDA68], v26);
  v29 = sub_2412C8FC4(qword_2571295C0, &qword_2571295B8, MEMORY[0x24BDEC410]);
  v48 = v26;
  v49 = v27;
  v50 = v28;
  v51 = v29;
  MEMORY[0x242695A94](255, &v48, MEMORY[0x24BDF2E88], 0);
  v48 = v26;
  v49 = v27;
  v50 = v28;
  v51 = v29;
  swift_getOpaqueTypeConformance2();
  v30 = sub_2414B2F50();
  v31 = sub_2414B3514();
  v32 = sub_2414B3514();
  v33 = sub_2414B3514();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254381330);
  v34 = sub_2414B3514();
  v40[0] = MEMORY[0x242695AE8](MEMORY[0x24BDEB238], v30);
  v40[1] = v14;
  v39[0] = MEMORY[0x242695AE8](v12, v31, v40);
  v39[1] = v16;
  v38[0] = MEMORY[0x242695AE8](v12, v32, v39);
  v38[1] = MEMORY[0x24BDEDBB8];
  v37[0] = MEMORY[0x242695AE8](v12, v33, v38);
  v37[1] = sub_2412C8FC4((unint64_t *)&qword_254381328, &qword_254381330, MEMORY[0x24BDF1028]);
  return MEMORY[0x242695AE8](v12, v34, v37);
}

ValueMetadata *type metadata accessor for SlideEffect()
{
  return &type metadata for SlideEffect;
}

ValueMetadata *type metadata accessor for SizePreferenceKey()
{
  return &type metadata for SizePreferenceKey;
}

uint64_t sub_241463670@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_2414B4648();
  result = sub_2414B325C();
  *a1 = v2;
  a1[1] = v4;
  a1[2] = v5;
  return result;
}

void sub_2414636AC()
{
  xmmword_257129560 = 0uLL;
}

double sub_2414636BC@<D0>(_OWORD *a1@<X8>)
{
  double result;

  if (qword_257120A70 != -1)
    swift_once();
  result = *(double *)&xmmword_257129560;
  *a1 = xmmword_257129560;
  return result;
}

_QWORD *sub_241463710(uint64_t a1, _QWORD *(*a2)(uint64_t *__return_ptr))
{
  uint64_t v3;

  return a2(&v3);
}

uint64_t sub_24146373C(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v16;
  uint64_t v17;
  _QWORD aBlock[6];

  v3 = sub_2414B4B94();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v17 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2414B4BB8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(double *)v1 = a1;
  sub_2412FFFC8();
  v11 = (void *)sub_2414B5230();
  v12 = *(_QWORD *)(v1 + 8);
  v13 = swift_allocObject();
  *(double *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_241351148;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2413002C8;
  aBlock[3] = &block_descriptor_20;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_2414B4BAC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_2412C8030((unint64_t *)&qword_254384690, v4, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543846C0);
  sub_2412C8FC4((unint64_t *)&qword_254384F80, &qword_2543846C0, MEMORY[0x24BEE12C8]);
  sub_2414B5464();
  MEMORY[0x242694ABC](0, v10, v6, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

CGFloat sub_24146395C@<D0>(uint64_t a1@<X8>)
{
  CGFloat *v1;
  CGFloat result;
  __int128 v4;
  __int128 v5;
  CGAffineTransform v6;

  CGAffineTransformMakeTranslation(&v6, *v1, 0.0);
  result = v6.a;
  v4 = *(_OWORD *)&v6.c;
  v5 = *(_OWORD *)&v6.tx;
  *(_OWORD *)a1 = *(_OWORD *)&v6.a;
  *(_QWORD *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 64) = 0x3FF0000000000000;
  return result;
}

uint64_t sub_2414639B4(double *a1)
{
  return sub_24146373C(*a1);
}

uint64_t (*sub_2414639BC(_QWORD *a1))(double *a1)
{
  _QWORD *v1;

  a1[1] = v1;
  *a1 = *v1;
  return sub_2414639D8;
}

uint64_t sub_2414639D8(double *a1)
{
  return sub_24146373C(*a1);
}

unint64_t sub_241463A00()
{
  unint64_t result;

  result = qword_257129648;
  if (!qword_257129648)
  {
    result = MEMORY[0x242695AE8](&unk_2414C9A0C, &type metadata for SlideEffect);
    atomic_store(result, (unint64_t *)&qword_257129648);
  }
  return result;
}

uint64_t sub_241463A48()
{
  sub_241463B70();
  return sub_2414B3370();
}

uint64_t sub_241463AB0()
{
  sub_241463B70();
  return sub_2414B334C();
}

uint64_t sub_241463B18()
{
  sub_241463B70();
  return sub_2414B3364();
}

unint64_t sub_241463B70()
{
  unint64_t result;

  result = qword_257129650;
  if (!qword_257129650)
  {
    result = MEMORY[0x242695AE8](&unk_2414C9A5C, &type metadata for SlideEffect);
    atomic_store(result, (unint64_t *)&qword_257129650);
  }
  return result;
}

uint64_t sub_241463BB4(double *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(double, double))(v1 + 16))(*a1, a1[1]);
}

unint64_t sub_241463BD8()
{
  unint64_t result;

  result = qword_257129668;
  if (!qword_257129668)
  {
    result = MEMORY[0x242695AE8](&unk_2414C99C4, &type metadata for SizePreferenceKey);
    atomic_store(result, (unint64_t *)&qword_257129668);
  }
  return result;
}

void sub_241463C1C()
{
  qword_257129570 = 0x4028000000000000;
}

uint64_t sub_241463C2C()
{
  return sub_2413D1870((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_241461A04);
}

uint64_t sub_241463C3C()
{
  return sub_241463C48((uint64_t (*)(_QWORD *, _QWORD, _QWORD, _QWORD, _QWORD))sub_241461F04);
}

uint64_t sub_241463C48(uint64_t (*a1)(_QWORD *, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1 + 6, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_241463C60()
{
  return sub_241463C48((uint64_t (*)(_QWORD *, _QWORD, _QWORD, _QWORD, _QWORD))sub_2414621C0);
}

uint64_t sub_241463C70()
{
  return sub_241463C48((uint64_t (*)(_QWORD *, _QWORD, _QWORD, _QWORD, _QWORD))sub_2414623A8);
}

void sub_241463C80()
{
  type metadata accessor for SlideCarousel();
}

uint64_t sub_241463CDC()
{
  return sub_24146008C();
}

void sub_241463CF8()
{
  sub_2414626D8();
}

uint64_t sub_241463D0C()
{
  return sub_241463C48((uint64_t (*)(_QWORD *, _QWORD, _QWORD, _QWORD, _QWORD))sub_241462900);
}

uint64_t sub_241463D18()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_241463D3C(uint64_t a1)
{
  uint64_t v1;

  return sub_241448394(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_241463D44(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_241463E34()
{
  return sub_241463C48((uint64_t (*)(_QWORD *, _QWORD, _QWORD, _QWORD, _QWORD))sub_24145FFB8);
}

uint64_t sub_241463E40()
{
  return sub_241463E78((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24145F6A4);
}

uint64_t sub_241463E5C()
{
  return sub_241463E78((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24145F578);
}

uint64_t sub_241463E78(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_241463E9C()
{
  return sub_2413D1870((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_241461BC0);
}

uint64_t sub_241463EAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_241461DF4(a1, v2 + 48, *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_241463ECC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&qword_2571245A0, (uint64_t (*)(uint64_t))type metadata accessor for ParallaxContext, (uint64_t)&protocol conformance descriptor for ParallaxContext);
  sub_2414B2B84();
  swift_release();
  *a2 = *(_QWORD *)(v3 + 32);
  return swift_retain();
}

uint64_t sub_241463F5C()
{
  swift_getKeyPath();
  sub_2412C8030((unint64_t *)&qword_2571245A0, (uint64_t (*)(uint64_t))type metadata accessor for ParallaxContext, (uint64_t)&protocol conformance descriptor for ParallaxContext);
  swift_retain();
  sub_2414B2B78();
  swift_release();
  return swift_release();
}

uint64_t sub_241464014()
{
  id v0;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_tertiarySystemFillColor);
  result = MEMORY[0x242693E80](v0);
  qword_257129680 = result;
  return result;
}

uint64_t ParallaxButtonStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  double v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = v2;
  v31 = a2;
  v5 = sub_2414B3BC8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129688);
  MEMORY[0x24BDAC7A8](v29);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129690);
  MEMORY[0x24BDAC7A8](v28);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129698);
  MEMORY[0x24BDAC7A8](v30);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = a1;
  sub_2414B3BD4();
  v15 = *(_BYTE *)(v3 + 24);
  v16 = swift_retain();
  v17 = sub_24134631C(v16, v15);
  swift_release();
  swift_getKeyPath();
  v32 = v17;
  sub_2412C8030((unint64_t *)&qword_2571245A0, (uint64_t (*)(uint64_t))type metadata accessor for ParallaxContext, (uint64_t)&protocol conformance descriptor for ParallaxContext);
  sub_2414B2B84();
  swift_release();
  v18 = *(_QWORD *)(v17 + 32);
  swift_retain();
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v10, v8, v5);
  *(_QWORD *)&v10[*(int *)(v29 + 36)] = v18;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v19 = sub_2414B4A44();
  v21 = v20;
  v22 = (uint64_t)&v12[*(int *)(v28 + 36)];
  sub_241464344(v3, v22);
  v23 = (uint64_t *)(v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2571296A0) + 36));
  *v23 = v19;
  v23[1] = v21;
  sub_2412EAEA4((uint64_t)v10, (uint64_t)v12, &qword_257129688);
  v24 = *(_QWORD *)v3;
  LOBYTE(v21) = *(_BYTE *)(v3 + 8);
  sub_2412C7080(*(_QWORD *)v3, v21);
  LOBYTE(v22) = sub_2412F9C24(v24, v21);
  sub_2412C821C(v24, v21);
  v25 = 0.25;
  if ((v22 & 1) != 0)
  {
    if ((sub_2414B3BE0() & 1) != 0)
      v25 = 0.5;
    else
      v25 = 1.0;
  }
  sub_2412DC3FC((uint64_t)v12, (uint64_t)v14, &qword_257129690);
  *(double *)&v14[*(int *)(v30 + 36)] = v25;
  sub_2412CBE78((uint64_t)v12, &qword_257129690);
  return sub_2412EAEA4((uint64_t)v14, v31, &qword_257129698);
}

uint64_t sub_241464344@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD *v19;
  __int128 v20;
  _BYTE v22[40];
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129760);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)&v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129768);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129770);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *v6 = sub_2414B4A44();
  v6[1] = v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129778);
  sub_2414646A8(a1, (uint64_t)v6 + *(int *)(v14 + 44));
  if (qword_257120A98 != -1)
    swift_once();
  type metadata accessor for ParallaxButtonStyle();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
  sub_2414B30F4();
  sub_2414B30F4();
  sub_2414B4A44();
  sub_2414B35F8();
  sub_2412DC3FC((uint64_t)v6, (uint64_t)v9, &qword_257129760);
  v15 = &v9[*(int *)(v7 + 36)];
  v16 = v27;
  v15[4] = v26;
  v15[5] = v16;
  v15[6] = v28;
  v17 = v23;
  *v15 = *(_OWORD *)&v22[24];
  v15[1] = v17;
  v18 = v25;
  v15[2] = v24;
  v15[3] = v18;
  sub_2412CBE78((uint64_t)v6, &qword_257129760);
  sub_2414B30F4();
  sub_2414B4A44();
  sub_2414B31B4();
  sub_2412DC3FC((uint64_t)v9, (uint64_t)v12, &qword_257129768);
  v19 = &v12[*(int *)(v10 + 36)];
  v20 = v30;
  *v19 = v29;
  v19[1] = v20;
  v19[2] = v31;
  sub_2412CBE78((uint64_t)v9, &qword_257129768);
  return sub_2412EAEA4((uint64_t)v12, a2, &qword_257129770);
}

uint64_t sub_2414646A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t KeyPath;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  unsigned int v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v72 = a1;
  v80 = a2;
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_257124980);
  MEMORY[0x24BDAC7A8](v74);
  v77 = (uint64_t)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129780);
  MEMORY[0x24BDAC7A8](v76);
  v79 = (uint64_t)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v75 = (uint64_t)&v59 - v5;
  MEMORY[0x24BDAC7A8](v6);
  v78 = (uint64_t)&v59 - v7;
  v8 = sub_2414B2F8C();
  v69 = *(_QWORD *)(v8 - 8);
  v70 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v68 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129788);
  MEMORY[0x24BDAC7A8](v62);
  v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2414B4918();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2414B4A08();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129790);
  MEMORY[0x24BDAC7A8](v60);
  v20 = (uint64_t *)((char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129798);
  MEMORY[0x24BDAC7A8](v63);
  v61 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571297A0);
  MEMORY[0x24BDAC7A8](v71);
  v73 = (uint64_t)&v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v67 = (uint64_t)&v59 - v24;
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v59 - v26;
  v28 = sub_2414B4648();
  sub_2414B49FC();
  v66 = *MEMORY[0x24BDEEB68];
  v29 = v66;
  v65 = sub_2414B38C8();
  v64 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 104);
  v64(v14, v29, v65);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v11, v18, v15);
  v30 = v62;
  v31 = (uint64_t)v14;
  sub_241327320((uint64_t)v14, (uint64_t)&v11[*(int *)(v62 + 52)]);
  *(_WORD *)&v11[*(int *)(v30 + 56)] = 256;
  sub_2412DC3FC((uint64_t)v11, (uint64_t)v20 + *(int *)(v60 + 36), &qword_257129788);
  *v20 = v28;
  swift_retain();
  sub_2412CBE78((uint64_t)v11, &qword_257129788);
  sub_241326D24((uint64_t)v14);
  v32 = v72;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  v33 = (uint64_t)v27;
  swift_release();
  KeyPath = swift_getKeyPath();
  v36 = v68;
  v35 = v69;
  v37 = v70;
  (*(void (**)(char *, _QWORD, uint64_t))(v69 + 104))(v68, *MEMORY[0x24BDEB3F0], v70);
  v38 = (uint64_t)v61;
  v39 = (uint64_t *)&v61[*(int *)(v63 + 36)];
  v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543812C0);
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))((char *)v39 + *(int *)(v40 + 28), v36, v37);
  *v39 = KeyPath;
  sub_2412DC3FC((uint64_t)v20, v38, &qword_257129790);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
  sub_2412CBE78((uint64_t)v20, &qword_257129790);
  LOBYTE(v39) = *(_BYTE *)(v32 + 24);
  v41 = swift_retain();
  v42 = sub_24134631C(v41, (char)v39);
  swift_release();
  swift_getKeyPath();
  v81 = v42;
  sub_2412C8030((unint64_t *)&qword_2571245A0, (uint64_t (*)(uint64_t))type metadata accessor for ParallaxContext, (uint64_t)&protocol conformance descriptor for ParallaxContext);
  sub_2414B2B84();
  swift_release();
  LODWORD(v39) = *(unsigned __int8 *)(v42 + 40);
  swift_release();
  v43 = 0.0;
  if ((_DWORD)v39)
    v44 = 1.0;
  else
    v44 = 0.0;
  v45 = v67;
  sub_2412DC3FC(v38, v67, &qword_257129798);
  *(double *)(v45 + *(int *)(v71 + 36)) = v44;
  sub_2412CBE78(v38, &qword_257129798);
  sub_2412EAEA4(v45, v33, &qword_2571297A0);
  v64((char *)v31, v66, v65);
  if (qword_257120A80 != -1)
    swift_once();
  v46 = qword_257129680;
  v47 = v77;
  sub_241327320(v31, v77);
  *(_QWORD *)(v47 + *(int *)(v74 + 36)) = v46;
  swift_retain();
  sub_241326D24(v31);
  v48 = *(_BYTE *)(v32 + 24);
  v49 = swift_retain();
  v50 = sub_24134631C(v49, v48);
  swift_release();
  swift_getKeyPath();
  v81 = v50;
  sub_2414B2B84();
  swift_release();
  v51 = *(unsigned __int8 *)(v50 + 40);
  swift_release();
  if (!v51)
    v43 = 1.0;
  v52 = v75;
  sub_2412DC3FC(v47, v75, &qword_257124980);
  *(double *)(v52 + *(int *)(v76 + 36)) = v43;
  sub_2412CBE78(v47, &qword_257124980);
  v53 = v78;
  sub_2412EAEA4(v52, v78, &qword_257129780);
  v54 = v73;
  sub_2412DC3FC(v33, v73, &qword_2571297A0);
  v55 = v79;
  sub_2412DC3FC(v53, v79, &qword_257129780);
  v56 = v80;
  sub_2412DC3FC(v54, v80, &qword_2571297A0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571297A8);
  sub_2412DC3FC(v55, v56 + *(int *)(v57 + 48), &qword_257129780);
  sub_2412CBE78(v53, &qword_257129780);
  sub_2412CBE78(v33, &qword_2571297A0);
  sub_2412CBE78(v55, &qword_257129780);
  return sub_2412CBE78(v54, &qword_2571297A0);
}

uint64_t type metadata accessor for ParallaxButtonStyle()
{
  uint64_t result;

  result = qword_257129700;
  if (!qword_257129700)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t _s11MediaCoreUI13MCUINamespaceVA2A19ParallaxButtonStyleVRszlE8parallaxAEvgZ_0@<X0>(uint64_t a1@<X8>)
{
  char v2;

  *(_QWORD *)a1 = swift_getKeyPath();
  *(_BYTE *)(a1 + 8) = 0;
  type metadata accessor for ParallaxContext();
  sub_2412C8030((unint64_t *)&qword_2571245A0, (uint64_t (*)(uint64_t))type metadata accessor for ParallaxContext, (uint64_t)&protocol conformance descriptor for ParallaxContext);
  *(_QWORD *)(a1 + 16) = sub_2414B2FEC();
  *(_BYTE *)(a1 + 24) = v2 & 1;
  type metadata accessor for ParallaxButtonStyle();
  if (qword_257120A98 != -1)
    swift_once();
  sub_241386654();
  return sub_2414B30E8();
}

uint64_t sub_241464F14()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t initializeBufferWithCopyOfBuffer for ParallaxButtonStyle(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_2412C7080(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = *(_BYTE *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 24) = v9;
    v10 = *(int *)(a3 + 24);
    v11 = a1 + v10;
    v12 = a2 + v10;
    swift_retain();
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  }
  return a1;
}

uint64_t destroy for ParallaxButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_2412C821C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for ParallaxButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_2412C7080(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v8;
  v9 = *(int *)(a3 + 24);
  v10 = a1 + v9;
  v11 = a2 + v9;
  swift_retain();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

uint64_t assignWithCopy for ParallaxButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_2412C7080(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_2412C821C(v8, v9);
  v10 = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v10;
  swift_retain();
  swift_release();
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for ParallaxButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for ParallaxButtonStyle(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_2412C821C(v8, v9);
  v10 = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = v10;
  swift_release();
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = (uint64_t)a2 + v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ParallaxButtonStyle()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2414652A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ParallaxButtonStyle()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_241465324(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 8) = -(char)a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_241465398()
{
  unint64_t v0;

  sub_2413865FC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

unint64_t sub_241465410()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257129740;
  if (!qword_257129740)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257129698);
    v2[0] = sub_24146547C();
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257129740);
  }
  return result;
}

unint64_t sub_24146547C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257129748;
  if (!qword_257129748)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257129690);
    v2[0] = sub_241465500();
    v2[1] = sub_2412C8FC4(&qword_257129758, &qword_2571296A0, MEMORY[0x24BDEF370]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257129748);
  }
  return result;
}

unint64_t sub_241465500()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257129750;
  if (!qword_257129750)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257129688);
    v2[0] = sub_2412C8030(&qword_25437D0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF0440], MEMORY[0x24BDF0438]);
    v2[1] = sub_2412C8FC4(&qword_254381148, &qword_254381150, MEMORY[0x24BDF0710]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257129750);
  }
  return result;
}

uint64_t sub_2414655AC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_241465628(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v3 = v2;
  return sub_2414B2E48();
}

uint64_t sub_241465694()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414B2E3C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_24146570C()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  return sub_2414B2E48();
}

void (*sub_241465774(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_2414B2E30();
  return sub_2413A4FE4;
}

uint64_t sub_2414657EC()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254384338);
  sub_2414B2E18();
  return swift_endAccess();
}

uint64_t sub_241465850(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t, double);
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254384330);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v12 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254384338);
  sub_2414B2E24();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t sub_241465960(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254384330);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254384338);
  sub_2414B2E24();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*sub_241465A34(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254384330);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC11MediaCoreUI36NowPlayingArtworkRestrictionsMonitor__isMotionDisabled;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_254384338);
  sub_2414B2E18();
  swift_endAccess();
  return sub_241465AFC;
}

void sub_241465AFC(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 88) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 104), v3[14], v3[10]);
  v5 = (void *)v3[13];
  v6 = (void *)v3[14];
  v8 = v3[11];
  v7 = (void *)v3[12];
  v9 = v3[10];
  if ((a2 & 1) != 0)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_2414B2E24();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
    v10(v5, v9);
  }
  else
  {
    swift_beginAccess();
    sub_2414B2E24();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
  }
  v10(v6, v9);
  free(v6);
  free(v5);
  free(v7);
  free(v3);
}

void sub_241465C14(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  void *v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  objc_class *v27;
  objc_super v28;
  _QWORD v29[3];
  uint64_t v30;

  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254384360);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (a1 == 0x6F4D6E6F69746F6DLL && a2 == 0xEA00000000006564 || (sub_2414B57D0() & 1) != 0)
    {
      v14 = sub_2414B4FE4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
      sub_2414B4FC0();
      v15 = v5;
      v16 = sub_2414B4FB4();
      v17 = (_QWORD *)swift_allocObject();
      v18 = MEMORY[0x24BEE6930];
      v17[2] = v16;
      v17[3] = v18;
      v17[4] = v15;
      sub_2413EE440((uint64_t)v13, (uint64_t)&unk_2571297B8, (uint64_t)v17);
      swift_release();
      return;
    }
    v19 = (void *)sub_2414B4D44();
  }
  else
  {
    v19 = 0;
  }
  sub_241310310(a3, (uint64_t)v29);
  v20 = v30;
  if (!v30)
  {
    v26 = 0;
    if (!a4)
      goto LABEL_11;
    goto LABEL_10;
  }
  v21 = __swift_project_boxed_opaque_existential_1(v29, v30);
  v22 = *(_QWORD *)(v20 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v28 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v22 + 16))(v25, v23);
  v26 = sub_2414B57C4();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  if (a4)
  {
LABEL_10:
    type metadata accessor for NSKeyValueChangeKey(0);
    sub_2412C8030(&qword_257120FF0, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_2414B7B60);
    a4 = (void *)sub_2414B4C00();
  }
LABEL_11:
  v27 = (objc_class *)type metadata accessor for NowPlayingArtworkRestrictionsMonitor();
  v28.receiver = v5;
  v28.super_class = v27;
  objc_msgSendSuper2(&v28, sel_observeValueForKeyPath_ofObject_change_context_, v19, v26, a4, a5);

  swift_unknownObjectRelease();
}

uint64_t sub_241465EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  sub_2414B4FC0();
  *(_QWORD *)(v4 + 24) = sub_2414B4FB4();
  sub_2414B4F90();
  return swift_task_switch();
}

uint64_t sub_241465F24()
{
  uint64_t v0;

  swift_release();
  sub_2412D4B14();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_241465F58()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_241465F84(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_241310430;
  return sub_241465EB8(a1, v4, v5, v6);
}

id NowPlayingArtworkRestrictionsMonitor.__deallocating_deinit()
{
  void *v0;
  id v1;
  void *v2;
  objc_super v4;

  v1 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v2 = (void *)sub_2414B4D44();
  objc_msgSend(v1, sel_removeObserver_forKeyPath_, v0, v2);

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for NowPlayingArtworkRestrictionsMonitor();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_2414662D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for NowPlayingArtworkRestrictionsMonitor();
  result = sub_2414B2DA0();
  *a1 = result;
  return result;
}

uint64_t sub_24146631C()
{
  return type metadata accessor for NowPlayingArtworkRestrictionsMonitor();
}

uint64_t method lookup function for NowPlayingArtworkRestrictionsMonitor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NowPlayingArtworkRestrictionsMonitor.isMotionDisabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of NowPlayingArtworkRestrictionsMonitor.isMotionDisabled.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of NowPlayingArtworkRestrictionsMonitor.isMotionDisabled.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of NowPlayingArtworkRestrictionsMonitor.$isMotionDisabled.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of NowPlayingArtworkRestrictionsMonitor.$isMotionDisabled.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

uint64_t sub_2414663C4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2414663E8(uint64_t a1, uint64_t a2)
{
  return sub_241466A74(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

void static NowPlayingViewModel.LeadingTransportButtonConfiguration.previous.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0xD00000000000001ALL;
  *(_QWORD *)(a1 + 8) = 0x80000002414D4540;
  *(_BYTE *)(a1 + 16) = 1;
}

double static NowPlayingViewModel.LeadingTransportButtonConfiguration.seekBackward10.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 3.29257015e161;
  *(_OWORD *)a1 = xmmword_2414C9D50;
  *(_BYTE *)(a1 + 16) = 0;
  return result;
}

double static NowPlayingViewModel.LeadingTransportButtonConfiguration.seekBackward30.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 3.29257015e161;
  *(_OWORD *)a1 = xmmword_2414C9D70;
  *(_BYTE *)(a1 + 16) = 0;
  return result;
}

double static NowPlayingViewModel.LeadingTransportButtonConfiguration.seekBackward45.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 3.29257015e161;
  *(_OWORD *)a1 = xmmword_2414C9D80;
  *(_BYTE *)(a1 + 16) = 0;
  return result;
}

double static NowPlayingViewModel.LeadingTransportButtonConfiguration.seekBackward60.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 3.29257015e161;
  *(_OWORD *)a1 = xmmword_2414C9D90;
  *(_BYTE *)(a1 + 16) = 0;
  return result;
}

void static NowPlayingViewModel.LeadingTransportButtonConfiguration.configuration(for:)(uint64_t a1@<X8>, double a2@<D0>)
{
  __int128 v2;

  if (a2 == -10.0)
  {
    v2 = xmmword_2414C9D50;
LABEL_11:
    *(_OWORD *)a1 = v2;
    *(_BYTE *)(a1 + 16) = 0;
    return;
  }
  if (a2 == -15.0)
  {
    v2 = xmmword_2414C9D60;
    goto LABEL_11;
  }
  if (a2 == -30.0)
  {
    v2 = xmmword_2414C9D70;
    goto LABEL_11;
  }
  if (a2 == -45.0)
  {
    v2 = xmmword_2414C9D80;
    goto LABEL_11;
  }
  if (a2 == -60.0)
  {
    v2 = xmmword_2414C9D90;
    goto LABEL_11;
  }
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = -1;
}

BOOL static NowPlayingViewModel.LeadingTransportButtonConfiguration.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  return sub_24146684C(a1, a2);
}

BOOL sub_241466530(uint64_t *a1, uint64_t a2)
{
  return sub_24146684C(a1, a2);
}

uint64_t sub_241466548(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2413A5D2C(*a1, *a2);
}

uint64_t sub_241466554()
{
  sub_2414B58CC();
  sub_2414B4DD4();
  swift_bridgeObjectRelease();
  return sub_2414B58FC();
}

uint64_t sub_2414665E0()
{
  sub_2414B4DD4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_241466648()
{
  sub_2414B58CC();
  sub_2414B4DD4();
  swift_bridgeObjectRelease();
  return sub_2414B58FC();
}

uint64_t sub_2414666D0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_241466AB8();
  *a1 = result;
  return result;
}

void sub_2414666FC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE500000000000000;
  v5 = 0x6573756170;
  if (v2 != 1)
  {
    v5 = 1886352499;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 2036427888;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

double static NowPlayingViewModel.TrailingTransportButtonConfiguration.seekForward10.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 9.31739788e242;
  *(_OWORD *)a1 = xmmword_2414C9DA0;
  *(_BYTE *)(a1 + 16) = 0;
  return result;
}

double static NowPlayingViewModel.TrailingTransportButtonConfiguration.seekForward15.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 9.31739788e242;
  *(_OWORD *)a1 = xmmword_2414C9DB0;
  *(_BYTE *)(a1 + 16) = 0;
  return result;
}

double static NowPlayingViewModel.TrailingTransportButtonConfiguration.seekForward45.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 9.31739788e242;
  *(_OWORD *)a1 = xmmword_2414C9DD0;
  *(_BYTE *)(a1 + 16) = 0;
  return result;
}

double static NowPlayingViewModel.TrailingTransportButtonConfiguration.seekForward60.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 9.31739788e242;
  *(_OWORD *)a1 = xmmword_2414C9DE0;
  *(_BYTE *)(a1 + 16) = 0;
  return result;
}

void static NowPlayingViewModel.TrailingTransportButtonConfiguration.configuration(for:)(uint64_t a1@<X8>, double a2@<D0>)
{
  __int128 v2;

  if (a2 == 10.0)
  {
    v2 = xmmword_2414C9DA0;
LABEL_11:
    *(_OWORD *)a1 = v2;
    *(_BYTE *)(a1 + 16) = 0;
    return;
  }
  if (a2 == 15.0)
  {
    v2 = xmmword_2414C9DB0;
    goto LABEL_11;
  }
  if (a2 == 30.0)
  {
    v2 = xmmword_2414C9DC0;
    goto LABEL_11;
  }
  if (a2 == 45.0)
  {
    v2 = xmmword_2414C9DD0;
    goto LABEL_11;
  }
  if (a2 == 60.0)
  {
    v2 = xmmword_2414C9DE0;
    goto LABEL_11;
  }
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = -1;
}

BOOL static NowPlayingViewModel.TrailingTransportButtonConfiguration.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  return sub_24146684C(a1, a2);
}

BOOL sub_24146684C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  BOOL v4;

  v3 = *a1;
  if ((a1[2] & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 16) & 1) == 0)
      return 0;
  }
  else if ((*(_BYTE *)(a2 + 16) & 1) != 0)
  {
    return 0;
  }
  v4 = v3 == *(_QWORD *)a2 && a1[1] == *(_QWORD *)(a2 + 8);
  return v4 || (sub_2414B57D0() & 1) != 0;
}

unint64_t sub_2414668B0(uint64_t a1)
{
  unint64_t result;

  result = sub_2414668D4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2414668D4()
{
  unint64_t result;

  result = qword_2543816F0;
  if (!qword_2543816F0)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for NowPlayingViewModel.LeadingTransportButtonConfiguration, &type metadata for NowPlayingViewModel.LeadingTransportButtonConfiguration);
    atomic_store(result, (unint64_t *)&qword_2543816F0);
  }
  return result;
}

uint64_t sub_24146691C(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_2412FAF80();
  return a1;
}

ValueMetadata *type metadata accessor for TransportButtonImage()
{
  return &type metadata for TransportButtonImage;
}

uint64_t _s26CenterTransportButtonStateOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2414669BC + 4 * byte_2414C9DF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2414669F0 + 4 * byte_2414C9DF0[v4]))();
}

uint64_t sub_2414669F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2414669F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241466A00);
  return result;
}

uint64_t sub_241466A0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241466A14);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_241466A18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241466A20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_241466A30()
{
  unint64_t result;

  result = qword_2571297C0;
  if (!qword_2571297C0)
  {
    result = MEMORY[0x242695AE8](&unk_2414C9FC4, &_s26CenterTransportButtonStateON);
    atomic_store(result, (unint64_t *)&qword_2571297C0);
  }
  return result;
}

uint64_t sub_241466A74(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a3 & 1) != 0)
  {
    if ((a6 & 1) == 0)
      return 0;
  }
  else if ((a6 & 1) != 0)
  {
    return 0;
  }
  if (a1 == a4 && a2 == a5)
    return 1;
  else
    return sub_2414B57D0();
}

uint64_t sub_241466AB8()
{
  unint64_t v0;

  v0 = sub_2414B571C();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

double sub_241466B04@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;

  sub_2414112BC();
  sub_2414B3838();
  result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_241466B50(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v1 = *(void **)a1;
  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  v4 = *(void **)(a1 + 24);
  sub_2414112BC();
  v5 = v1;
  v6 = v2;
  v7 = v3;
  v8 = v4;
  return sub_2414B3844();
}

_QWORD *WaveformView.init(state:)@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unint64_t WaveformView.body.getter@<X0>(uint64_t a1@<X8>)
{
  unint64_t *v1;
  unint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = *v1;
  KeyPath = swift_getKeyPath();
  v5 = swift_getKeyPath();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = KeyPath;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = 0;
  *(_BYTE *)(a1 + 64) = 0;
  return sub_24132DBF8(v3);
}

unint64_t sub_241466C38@<X0>(uint64_t a1@<X8>)
{
  unint64_t *v1;
  unint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = *v1;
  KeyPath = swift_getKeyPath();
  v5 = swift_getKeyPath();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = KeyPath;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = 0;
  *(_BYTE *)(a1 + 64) = 0;
  return sub_24132DBF8(v3);
}

id sub_241466C98()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;
  double v10;
  double v11;
  double v12;
  unint64_t v14;
  _OWORD v15[2];
  _OWORD v16[2];
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  char v21;

  v1 = *(void **)(v0 + 8);
  v14 = *(_QWORD *)v0;
  v2 = *(void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = *(void **)(v0 + 32);
  v5 = *(_BYTE *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 56);
  v8 = *(_BYTE *)(v0 + 64);
  v9 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WaveformPlayIndicator()), sel_init);
  v17 = v1;
  v18 = v2;
  v19 = v3;
  v20 = v4;
  v21 = v5;
  sub_24134E0A0(v1, v2, v3, v4, v5);
  sub_24134654C((uint64_t)v16);
  sub_24134E0E4(v1, v2, v3, v4, v5);
  v15[0] = v16[0];
  v15[1] = v16[1];
  sub_241329C6C((uint64_t)v15);
  *(_QWORD *)&v16[0] = v14;
  sub_24132DBF8(v14);
  sub_241329A0C(v16);
  sub_2414673A4(v6, v7, v8);
  v10 = sub_24134674C(v6, v7, v8);
  v12 = v11;
  sub_24134E094(v6, v7, v8);
  sub_241329D94(v10, v12);
  return v9;
}

unint64_t *sub_241466DD0()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  double v10;
  double v11;
  double v12;
  _OWORD v14[2];
  _OWORD v15[2];
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  char v20;

  v1 = *(_QWORD *)v0;
  v2 = *(void **)(v0 + 8);
  v3 = *(void **)(v0 + 16);
  v4 = *(void **)(v0 + 24);
  v5 = *(void **)(v0 + 32);
  v6 = *(_BYTE *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 56);
  v9 = *(_BYTE *)(v0 + 64);
  v16 = v2;
  v17 = v3;
  v18 = v4;
  v19 = v5;
  v20 = v6;
  sub_24134E0A0(v2, v3, v4, v5, v6);
  sub_24134654C((uint64_t)v15);
  sub_24134E0E4(v2, v3, v4, v5, v6);
  v14[0] = v15[0];
  v14[1] = v15[1];
  sub_241329C6C((uint64_t)v14);
  *(_QWORD *)&v15[0] = v1;
  sub_24132DBF8(v1);
  sub_241329A0C(v15);
  sub_2414673A4(v7, v8, v9);
  v10 = sub_24134674C(v7, v8, v9);
  v12 = v11;
  sub_24134E094(v7, v8, v9);
  return sub_241329D94(v10, v12);
}

uint64_t sub_241466EF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  double v4;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_BYTE *)(v0 + 64);
  sub_2414673A4(v1, v2, v3);
  v4 = sub_24134674C(v1, v2, v3);
  sub_24134E094(v1, v2, v3);
  return *(_QWORD *)&v4;
}

uint64_t sub_241466F64()
{
  sub_2414677A4();
  return sub_2414B3A54();
}

uint64_t sub_241466FB4()
{
  sub_2414677A4();
  return sub_2414B3A00();
}

void sub_241467004()
{
  sub_2414677A4();
  sub_2414B3A48();
  __break(1u);
}

double sub_241467028@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_2414677E8();
  sub_2414B3838();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_241467074()
{
  sub_2414677E8();
  return sub_2414B3844();
}

uint64_t sub_2414670BC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t destroy for WaveformView(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 5)
    return swift_release();
  return result;
}

unint64_t *_s11MediaCoreUI12WaveformViewVwCP_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  if (*a2 - 2 >= 3 && v3 >= 2)
  {
    *a1 = v3;
    swift_retain();
  }
  else
  {
    *a1 = v3;
  }
  return a1;
}

unint64_t *assignWithCopy for WaveformView(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *a1;
  v4 = *a1 - 2;
  v5 = *a2;
  v6 = *a2 - 2;
  if (v4 < 3)
  {
    if (v6 < 3)
      goto LABEL_8;
    goto LABEL_7;
  }
  if (v6 < 3)
  {
    sub_2414671E0((uint64_t)a1);
LABEL_12:
    *a1 = *a2;
    return a1;
  }
  if (v3 >= 2)
  {
    if (v5 >= 2)
    {
      *a1 = v5;
      swift_retain();
      swift_release();
      return a1;
    }
    swift_release();
    goto LABEL_12;
  }
LABEL_7:
  if (v5 >= 2)
  {
    *a1 = v5;
    swift_retain();
    return a1;
  }
LABEL_8:
  *a1 = v5;
  return a1;
}

uint64_t sub_2414671E0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_2571297C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t *assignWithTake for WaveformView(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if (v3 - 2 >= 3)
  {
    if (v4 - 2 >= 3)
    {
      if (v3 >= 2)
      {
        if (v4 >= 2)
        {
          *a1 = v4;
          swift_release();
          return a1;
        }
        swift_release();
      }
    }
    else
    {
      sub_2414671E0((uint64_t)a1);
    }
  }
  *a1 = v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for WaveformView(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFA && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483643);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 2;
  if (v4 < 0)
    v4 = -1;
  v5 = __OFSUB__(v4, 3);
  v6 = v4 - 3;
  if (v6 < 0 != v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for WaveformView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(_QWORD *)result = a2 - 2147483643;
    if (a3 > 0x7FFFFFFA)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 > 0x7FFFFFFA)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 4;
  }
  return result;
}

ValueMetadata *type metadata accessor for WaveformView()
{
  return &type metadata for WaveformView;
}

unint64_t sub_241467360()
{
  unint64_t result;

  result = qword_254382750;
  if (!qword_254382750)
  {
    result = MEMORY[0x242695AE8](&unk_2414CA18C, &type metadata for WaveformViewRepresentable);
    atomic_store(result, (unint64_t *)&qword_254382750);
  }
  return result;
}

uint64_t sub_2414673A4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t destroy for WaveformViewRepresentable(uint64_t a1)
{
  if (*(_QWORD *)a1 >= 5uLL)
    swift_release();
  sub_24134E0E4(*(void **)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void **)(a1 + 32), *(_BYTE *)(a1 + 40));
  return sub_24134E094(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
}

uint64_t initializeWithCopy for WaveformViewRepresentable(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v4 = *(_QWORD *)a2;
  if ((unint64_t)(*(_QWORD *)a2 - 2) >= 3 && v4 >= 2)
  {
    *(_QWORD *)a1 = v4;
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = v4;
  }
  v5 = *(void **)(a2 + 8);
  v6 = *(void **)(a2 + 16);
  v7 = *(void **)(a2 + 24);
  v8 = *(void **)(a2 + 32);
  v9 = *(_BYTE *)(a2 + 40);
  sub_24134E0A0(v5, v6, v7, v8, v9);
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v9;
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v12 = *(_BYTE *)(a2 + 64);
  sub_2414673A4(v10, v11, v12);
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  return a1;
}

uint64_t assignWithCopy for WaveformViewRepresentable(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  char v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)a1 - 2;
  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)a2 - 2;
  if (v5 < 3)
  {
    if (v7 < 3)
      goto LABEL_8;
    goto LABEL_7;
  }
  if (v7 < 3)
  {
    sub_2414671E0(a1);
LABEL_12:
    *(_QWORD *)a1 = *(_QWORD *)a2;
    goto LABEL_13;
  }
  if (v4 >= 2)
  {
    if (v6 >= 2)
    {
      *(_QWORD *)a1 = v6;
      swift_retain();
      swift_release();
      goto LABEL_13;
    }
    swift_release();
    goto LABEL_12;
  }
LABEL_7:
  if (v6 >= 2)
  {
    *(_QWORD *)a1 = v6;
    swift_retain();
    goto LABEL_13;
  }
LABEL_8:
  *(_QWORD *)a1 = v6;
LABEL_13:
  v8 = *(void **)(a2 + 8);
  v9 = *(void **)(a2 + 16);
  v10 = *(void **)(a2 + 24);
  v11 = *(void **)(a2 + 32);
  v12 = *(_BYTE *)(a2 + 40);
  sub_24134E0A0(v8, v9, v10, v11, v12);
  v13 = *(void **)(a1 + 8);
  v14 = *(void **)(a1 + 16);
  v15 = *(void **)(a1 + 24);
  v16 = *(void **)(a1 + 32);
  v17 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v10;
  *(_QWORD *)(a1 + 32) = v11;
  *(_BYTE *)(a1 + 40) = v12;
  sub_24134E0E4(v13, v14, v15, v16, v17);
  v18 = *(_QWORD *)(a2 + 48);
  v19 = *(_QWORD *)(a2 + 56);
  v20 = *(_BYTE *)(a2 + 64);
  sub_2414673A4(v18, v19, v20);
  v21 = *(_QWORD *)(a1 + 48);
  v22 = *(_QWORD *)(a1 + 56);
  v23 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)(a1 + 48) = v18;
  *(_QWORD *)(a1 + 56) = v19;
  *(_BYTE *)(a1 + 64) = v20;
  sub_24134E094(v21, v22, v23);
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for WaveformViewRepresentable(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  char v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)a2;
  if (v4 - 2 >= 3)
  {
    if (v5 - 2 >= 3)
    {
      if (v4 >= 2)
      {
        if (v5 >= 2)
        {
          *(_QWORD *)a1 = v5;
          swift_release();
          goto LABEL_8;
        }
        swift_release();
      }
    }
    else
    {
      sub_2414671E0(a1);
    }
  }
  *(_QWORD *)a1 = v5;
LABEL_8:
  v6 = *(_BYTE *)(a2 + 40);
  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a1 + 16);
  v9 = *(void **)(a1 + 24);
  v10 = *(void **)(a1 + 32);
  v11 = *(_BYTE *)(a1 + 40);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = v6;
  sub_24134E0E4(v7, v8, v9, v10, v11);
  v12 = *(_BYTE *)(a2 + 64);
  v13 = *(_QWORD *)(a1 + 48);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *(_BYTE *)(a1 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = v12;
  sub_24134E094(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for WaveformViewRepresentable(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFA && *((_BYTE *)a1 + 65))
    return (*(_DWORD *)a1 + 2147483643);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 2;
  if (v4 < 0)
    v4 = -1;
  v5 = __OFSUB__(v4, 3);
  v6 = v4 - 3;
  if (v6 < 0 != v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for WaveformViewRepresentable(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 - 2147483643;
    if (a3 > 0x7FFFFFFA)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if (a3 > 0x7FFFFFFA)
      *(_BYTE *)(result + 65) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 4;
  }
  return result;
}

ValueMetadata *type metadata accessor for WaveformViewRepresentable()
{
  return &type metadata for WaveformViewRepresentable;
}

unint64_t sub_2414677A4()
{
  unint64_t result;

  result = qword_254382748;
  if (!qword_254382748)
  {
    result = MEMORY[0x242695AE8](&unk_2414CA0FC, &type metadata for WaveformViewRepresentable);
    atomic_store(result, (unint64_t *)&qword_254382748);
  }
  return result;
}

unint64_t sub_2414677E8()
{
  unint64_t result;

  result = qword_254382588[0];
  if (!qword_254382588[0])
  {
    result = MEMORY[0x242695AE8](&unk_2414CDCB0, &type metadata for WaveformSizeKey);
    atomic_store(result, qword_254382588);
  }
  return result;
}

uint64_t sub_24146782C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2414678A0(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_2414678DC(a1);
  return v2;
}

_QWORD *sub_2414678DC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  id v4;

  type metadata accessor for LRUCache.Container(255, *(_QWORD *)(*v1 + 80), *(_QWORD *)(*v1 + 88), *(_QWORD *)(*v1 + 96));
  swift_getTupleTypeMetadata2();
  sub_2414B4F00();
  v3 = sub_2414B4C24();
  v1[3] = 0;
  v1[4] = 0;
  v1[2] = v3;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1648]), sel_init);
  v1[7] = 0;
  v1[8] = 0;
  v1[5] = v4;
  v1[6] = a1;
  return v1;
}

uint64_t *sub_241467988(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  return sub_241467AC4(a1, a2);
}

uint64_t sub_2414679D0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  sub_2412C9444(*(_QWORD *)(v0 + 56));
  return v0;
}

uint64_t sub_2414679FC()
{
  sub_2414679D0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LRUCache(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LRUCache);
}

uint64_t sub_241467A28()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t *sub_241467AC4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 120)) = 0;
  *(uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 128)) = 0;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + 80) - 8) + 32))((uint64_t)v2 + *(_QWORD *)(*v2 + 104), a1);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + 88) - 8) + 32))((uint64_t)v2 + *(_QWORD *)(*v2 + 112), a2);
  return v2;
}

uint64_t sub_241467B44()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*v0 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 104));
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 88) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 112));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LRUCache.Container(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LRUCache.Container);
}

void sub_241467BB0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[24];

  v10[8] = *(_QWORD *)(v1[10] - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10[7] = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = v1[11];
  v4 = v1[12];
  v10[10] = v5;
  v10[16] = v5;
  v10[17] = v3;
  v10[5] = v3;
  v10[1] = v6;
  v10[18] = v6;
  v10[19] = v7;
  v10[2] = v7;
  v10[3] = v8;
  v10[9] = v4;
  v10[20] = v4;
  v10[21] = v8;
  v10[4] = v9;
  v10[22] = v9;
  _s10CodingKeysOMa_0();
}

void sub_241467FF8()
{
  _s10CodingKeysOMa_0();
}

BOOL sub_241468270(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_241468280()
{
  return sub_2414B58D8();
}

uint64_t sub_2414682A4(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x80000002414D45B0 || (sub_2414B57D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C73656972746E65 && a2 == 0xEC00000074696D69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_2414B57D0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2414683A8()
{
  sub_2414B58CC();
  sub_2414B58D8();
  return sub_2414B58FC();
}

uint64_t sub_2414683EC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x4C73656972746E65;
  else
    return 0xD000000000000011;
}

BOOL sub_241468430(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_241468270(*a1, *a2);
}

uint64_t sub_241468458()
{
  return sub_2414683A8();
}

uint64_t sub_241468460()
{
  return sub_241468280();
}

uint64_t sub_241468480()
{
  sub_2414B58CC();
  sub_241468280();
  return sub_2414B58FC();
}

uint64_t sub_2414684BC()
{
  char *v0;

  return sub_2414683EC(*v0);
}

uint64_t sub_2414684C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2414682A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2414684F0()
{
  return 0;
}

uint64_t sub_2414684FC@<X0>(_QWORD *a1@<X1>, _BYTE *a2@<X8>)
{
  return sub_241468CDC(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_241468F58, a2);
}

uint64_t sub_241468508(uint64_t a1)
{
  MEMORY[0x242695AE8](&unk_2414CA610, a1);
  return sub_2414B592C();
}

uint64_t sub_24146853C(uint64_t a1)
{
  MEMORY[0x242695AE8](&unk_2414CA610, a1);
  return sub_2414B5938();
}

uint64_t sub_241468570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  return sub_241468D9C(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_241467BB0, a3);
}

uint64_t sub_24146858C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241468DF0(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_241467FF8);
}

void sub_2414685A8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[18];

  v16[3] = *(_QWORD *)(v1[11] - 8);
  MEMORY[0x24BDAC7A8](a1);
  v16[1] = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v16[6] = (char *)v16 - v4;
  v5 = v1[10];
  v16[5] = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v16[2] = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v16[8] = v9;
  v16[9] = (char *)v16 - v10;
  v11 = v1[12];
  v16[11] = v5;
  v16[12] = v12;
  v16[7] = v12;
  v16[13] = v9;
  v16[14] = v13;
  v16[15] = v11;
  v16[16] = v14;
  v16[4] = v14;
  v16[17] = v15;
  _s10CodingKeysOMa();
}

_QWORD *sub_2414686AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  MEMORY[0x242695AE8](&unk_2414CA5C0, a1);
  v5 = sub_2414B574C();
  *(_QWORD *)(v4 - 144) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - v7;
  v9 = __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  v10 = *(_QWORD *)(v4 - 72);
  sub_2414B5908();
  if (v10)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  else
  {
    *(_QWORD *)(v4 - 72) = v3;
    *(_QWORD *)(v4 - 224) = v1;
    v12 = *(_QWORD *)(v4 - 176);
    v11 = *(_QWORD *)(v4 - 168);
    *(_BYTE *)(v4 - 136) = 0;
    sub_2414B5740();
    *(_BYTE *)(v4 - 136) = 1;
    sub_2414B5740();
    (*(void (**)(char *, _QWORD))(v6 + 8))(v8, *(_QWORD *)(v4 - 144));
    v14 = *(_QWORD *)(v4 - 208);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 - 184) + 32))(v14, *(_QWORD *)(v4 - 152), v2);
    v15 = *(_QWORD *)(v4 - 216);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 200) + 32))(v15, v12, v11);
    swift_allocObject();
    v9 = sub_241467AC4(v14, v15);
    __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v4 - 72));
  }
  return v9;
}

void sub_241468880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[5];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v12[4] = a3;
  v12[2] = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v3 + 88) - 8);
  MEMORY[0x24BDAC7A8](a1);
  v12[0] = v5;
  v12[1] = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v6 + 80);
  v7 = *(_QWORD *)(v6 + 96);
  v14 = v13;
  v15 = v8;
  v12[3] = v8;
  v16 = v9;
  v17 = v10;
  v18 = v7;
  v19 = v11;
  v20 = v5;
  _s10CodingKeysOMa();
}

uint64_t sub_241468918(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  MEMORY[0x242695AE8](&unk_2414CA5C0, a1);
  v4 = sub_2414B577C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - v6;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_2414B5914();
  *(_BYTE *)(v3 - 136) = 0;
  v8 = *(_QWORD *)(v3 - 144);
  sub_2414B5770();
  if (v8)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v10 = v5;
  v11 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 112);
  swift_beginAccess();
  v13 = *(_QWORD *)(v3 - 184);
  v12 = *(_QWORD *)(v3 - 176);
  v14 = v11;
  v15 = *(_QWORD *)(v3 - 168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v13, v14, v15);
  *(_BYTE *)(v3 - 65) = 1;
  sub_2414B5770();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v7, v4);
}

uint64_t sub_241468A84(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7955819 && a2 == 0xE300000000000000;
  if (v2 || (sub_2414B57D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2414B57D0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_241468B5C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65756C6176;
  else
    return 7955819;
}

BOOL sub_241468B88(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_241468270(*a1, *a2);
}

uint64_t sub_241468BC8()
{
  return sub_2414683A8();
}

uint64_t sub_241468BE4()
{
  return sub_241468280();
}

uint64_t sub_241468C1C()
{
  sub_2414B58CC();
  sub_241468280();
  return sub_2414B58FC();
}

uint64_t sub_241468C70()
{
  char *v0;

  return sub_241468B5C(*v0);
}

uint64_t sub_241468C8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_241468A84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_241468CD0@<X0>(_QWORD *a1@<X1>, _BYTE *a2@<X8>)
{
  return sub_241468CDC(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2413E4CC4, a2);
}

uint64_t sub_241468CDC@<X0>(_QWORD *a1@<X1>, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD)@<X3>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = a2(a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8]);
  *a3 = result;
  return result;
}

uint64_t sub_241468D18(uint64_t a1)
{
  MEMORY[0x242695AE8](&unk_2414CA5C0, a1);
  return sub_2414B592C();
}

uint64_t sub_241468D4C(uint64_t a1)
{
  MEMORY[0x242695AE8](&unk_2414CA5C0, a1);
  return sub_2414B5938();
}

uint64_t sub_241468D80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  return sub_241468D9C(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_2414685A8, a3);
}

uint64_t sub_241468D9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD)@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  result = a3(a1, *(_QWORD *)(a2 - 8), *(_QWORD *)(a2 - 16), *(_QWORD *)(a2 - 24), *(_QWORD *)(a2 - 32));
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t sub_241468DD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241468DF0(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_241468880);
}

uint64_t sub_241468DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a4(a1, *(_QWORD *)(a3 - 8), *(_QWORD *)(a3 - 16), *(_QWORD *)(a3 - 24), *(_QWORD *)(a3 - 32));
}

void _s10CodingKeysOMa_0()
{
  JUMPOUT(0x242695A4CLL);
}

void _s10CodingKeysOMa()
{
  JUMPOUT(0x242695A4CLL);
}

uint64_t sub_241468E3C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_241468E88 + 4 * byte_2414CA1E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_241468EBC + 4 * byte_2414CA1E0[v4]))();
}

uint64_t sub_241468EBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241468EC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241468ECCLL);
  return result;
}

uint64_t sub_241468ED8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241468EE0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_241468EE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241468EEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_241468EF8()
{
  JUMPOUT(0x242695AE8);
}

void sub_241468F08()
{
  JUMPOUT(0x242695AE8);
}

void sub_241468F18()
{
  JUMPOUT(0x242695AE8);
}

void sub_241468F28()
{
  JUMPOUT(0x242695AE8);
}

void sub_241468F38()
{
  JUMPOUT(0x242695AE8);
}

void sub_241468F48()
{
  JUMPOUT(0x242695AE8);
}

uint64_t static PublishedOnChange.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  void (*v5)(_BYTE *, _QWORD);
  _BYTE v7[32];
  uint64_t v8;

  v4 = *a2;
  v8 = a1;
  swift_unknownObjectRetain();
  v5 = (void (*)(_BYTE *, _QWORD))swift_readAtKeyPath();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*MEMORY[0x24BEE35B8] + v4 + 8) - 8) + 16))(a3);
  v5(v7, 0);
  return swift_unknownObjectRelease();
}

uint64_t static PublishedOnChange.subscript.setter(char *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  void (*v18)(_QWORD *, _QWORD);
  uint64_t v19;
  uint64_t v20;
  uint64_t AssociatedTypeWitness;
  uint64_t v22;
  _QWORD v23[5];

  v7 = *a3;
  v8 = (_QWORD *)MEMORY[0x24BEE35B8];
  v9 = *(_QWORD *)(*a3 + *MEMORY[0x24BEE35B8]);
  v22 = a5;
  v20 = v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v20 - v11;
  v23[0] = a2;
  swift_unknownObjectRetain();
  swift_getAtKeyPath();
  swift_unknownObjectRelease();
  v13 = *(_QWORD *)(*v8 + v7 + 8);
  v14 = sub_2414B4CE4();
  v15 = *(_QWORD *)(v13 - 8);
  v16 = *(void (**)(char *, uint64_t))(v15 + 8);
  v16(v12, v13);
  if ((v14 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v16)(a1, v13);
  }
  else
  {
    sub_2414B2D94();
    sub_2414B2DF4();
    if (swift_dynamicCast())
    {
      sub_2414B2DE8();
      swift_release();
    }
    v23[4] = a2;
    swift_unknownObjectRetain();
    v18 = (void (*)(_QWORD *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 24))(v19, a1, v13);
    v18(v23, 0);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    v16(a1, v13);
    return swift_unknownObjectRelease();
  }
}

void (*static PublishedOnChange.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5))(uint64_t **a1, char a2)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  void *v14;

  v10 = malloc(0x40uLL);
  *a1 = v10;
  v10[2] = a4;
  v10[3] = a5;
  *v10 = a2;
  v10[1] = a3;
  v11 = *(_QWORD *)(*MEMORY[0x24BEE35B8] + *a3 + 8);
  v10[4] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v10[5] = v12;
  v13 = *(_QWORD *)(v12 + 64);
  v10[6] = malloc(v13);
  v14 = malloc(v13);
  v10[7] = v14;
  static PublishedOnChange.subscript.getter(a2, a3, (uint64_t)v14);
  return sub_2414692CC;
}

void sub_2414692CC(uint64_t **a1, char a2)
{
  uint64_t *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;

  v2 = *a1;
  v3 = (char *)(*a1)[6];
  v4 = (char *)(*a1)[7];
  if ((a2 & 1) != 0)
  {
    v5 = v2[4];
    v6 = v2[5];
    v8 = v2[2];
    v7 = v2[3];
    v10 = *v2;
    v9 = (uint64_t *)v2[1];
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))((*a1)[6], v4, v5);
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    static PublishedOnChange.subscript.setter(v3, v10, v9, v8, v7);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    v12 = v2[2];
    v11 = v2[3];
    v14 = *v2;
    v13 = (uint64_t *)v2[1];
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    static PublishedOnChange.subscript.setter(v4, v14, v13, v12, v11);
  }
  free(v4);
  free(v3);
  free(v2);
}

void PublishedOnChange.wrappedValue.getter()
{
  sub_2414B5674();
  __break(1u);
}

void PublishedOnChange.wrappedValue.setter()
{
  sub_241469470();
}

void PublishedOnChange.wrappedValue.modify()
{
  sub_2414B5674();
  __break(1u);
}

uint64_t PublishedOnChange.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

void sub_241469470()
{
  sub_2414B5674();
  __break(1u);
}

void sub_2414694B8()
{
  PublishedOnChange.wrappedValue.getter();
}

void sub_2414694C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for PublishedOnChange(0, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8), a4);
  sub_241469470();
}

uint64_t sub_2414694F4()
{
  return 16;
}

__n128 sub_241469500(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24146950C()
{
  uint64_t result;

  result = sub_2414B4AC8();
  qword_2571371B8 = result;
  return result;
}

void sub_241469528()
{
  qword_2571371C0 = 0x403C000000000000;
}

void sub_241469538()
{
  qword_2571299D0 = 0x4010000000000000;
}

uint64_t sub_241469548()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381398);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_2414B3F58();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v4 + 104))(v7, *MEMORY[0x24BDF1860], v3, v5);
  v8 = sub_2414B3ED4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v2, 1, 1, v8);
  sub_2414B3EF8();
  v9 = sub_2414B3F10();
  sub_2412CBE78((uint64_t)v2, &qword_254381398);
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  qword_2571299D8 = v9;
  return result;
}

void sub_241469668()
{
  qword_2571299E0 = 0x4020000000000000;
}

void sub_241469678()
{
  qword_2571299E8 = 0x402A000000000000;
}

void sub_241469688()
{
  qword_2571299F0 = 0x401C000000000000;
}

__n128 LibraryButton.init(_:action:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __n128 result;
  __int128 v5;

  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(_OWORD *)(a4 + 16) = v5;
  *(_QWORD *)(a4 + 32) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a4 + 40) = a2;
  *(_QWORD *)(a4 + 48) = a3;
  return result;
}

uint64_t LibraryButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t DynamicType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[5];
  __int128 v45[3];
  __int128 v46[2];

  v2 = v1;
  v34 = a1;
  v37 = sub_2414B3CD0();
  v36 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571299F8);
  v35 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129A00);
  v41 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129A08);
  MEMORY[0x24BDAC7A8](v10);
  v38 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129A10);
  MEMORY[0x24BDAC7A8](v32);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129A18);
  v31 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v40 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = v2;
  type metadata accessor for LibraryButtonLabel();
  sub_2412C8030(&qword_257129A20, (uint64_t (*)(uint64_t))type metadata accessor for LibraryButtonLabel, (uint64_t)&unk_2414CA770);
  swift_retain();
  sub_2414B47D4();
  sub_2414B3CB8();
  v15 = sub_2412C8FC4(&qword_257129A28, &qword_2571299F8, MEMORY[0x24BDF43B0]);
  v39 = v9;
  sub_2414B43B4();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v4, v37);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v5);
  sub_241469C08(v2, (uint64_t)v45);
  sub_2412FAA04(v45, (uint64_t)v46);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257129A30);
  LODWORD(v4) = swift_dynamicCast();
  v16 = v44[0];
  v17 = v44[1];
  sub_241469C44(v2, (uint64_t)v45);
  if (!(_DWORD)v4 || !v17)
  {
    sub_241469C08((uint64_t)v45, (uint64_t)v46);
    sub_2412FAA04(v46, (uint64_t)v44);
    __swift_project_boxed_opaque_existential_1(v44, v44[3]);
    DynamicType = swift_getDynamicType();
    v19 = v44[4];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 16))(DynamicType, v19);
    v17 = v20;
  }
  sub_241469C94((uint64_t)v45);
  v21 = v34;
  v22 = v33;
  v23 = v32;
  v24 = v31;
  *(_QWORD *)&v45[0] = v16;
  *((_QWORD *)&v45[0] + 1) = v17;
  *(_QWORD *)&v46[0] = v5;
  *((_QWORD *)&v46[0] + 1) = v15;
  swift_getOpaqueTypeConformance2();
  sub_2412F6D88();
  v25 = (uint64_t)v38;
  v26 = v42;
  v27 = v39;
  sub_2414B433C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v27, v26);
  v28 = sub_2414B460C();
  sub_2412DC3FC(v25, (uint64_t)v13, &qword_257129A08);
  *(_QWORD *)&v13[*(int *)(v23 + 36)] = v28;
  sub_2412CBE78(v25, &qword_257129A08);
  *(_QWORD *)&v45[0] = swift_getKeyPath();
  BYTE8(v45[0]) = 0;
  sub_241469CC8();
  sub_241469E18();
  v29 = v40;
  sub_2414B43C0();
  swift_release();
  sub_2412CBE78((uint64_t)v13, &qword_257129A10);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(v21, v29, v22);
}

uint64_t sub_241469B80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4[2];
  __int128 v5[2];

  sub_241469C08(a1, (uint64_t)v5);
  sub_2412FAA04(v5, (uint64_t)v4);
  return sub_241469E6C(v4, a2);
}

uint64_t sub_241469BC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_241469B80(*(_QWORD *)(v1 + 16), a1);
}

uint64_t type metadata accessor for LibraryButtonLabel()
{
  uint64_t result;

  result = qword_257129AA8;
  if (!qword_257129AA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_241469C08(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for LibraryButtonState(a2, a1);
  return a2;
}

uint64_t sub_241469C44(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  v4 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a2, a1);
  v5 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a2 + 48) = v5;
  swift_retain();
  return a2;
}

uint64_t sub_241469C94(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_release();
  return a1;
}

unint64_t sub_241469CC8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257129A38;
  if (!qword_257129A38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257129A10);
    v2[0] = sub_241469D4C();
    v2[1] = sub_2412C8FC4(&qword_2571232D0, &qword_2571232D8, MEMORY[0x24BDF1110]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257129A38);
  }
  return result;
}

unint64_t sub_241469D4C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_257129A40;
  if (!qword_257129A40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257129A08);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571299F8);
    v2[3] = sub_2412C8FC4(&qword_257129A28, &qword_2571299F8, MEMORY[0x24BDF43B0]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_2412C8030((unint64_t *)&qword_2543844B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x242695AE8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257129A40);
  }
  return result;
}

unint64_t sub_241469E18()
{
  unint64_t result;

  result = qword_257129A48;
  if (!qword_257129A48)
  {
    result = MEMORY[0x242695AE8](&protocol conformance descriptor for LibraryStandardButtonStyle, &type metadata for LibraryStandardButtonStyle);
    atomic_store(result, (unint64_t *)&qword_257129A48);
  }
  return result;
}

uint64_t sub_241469E5C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241469E6C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2412FAA04(a1, a2);
  type metadata accessor for LibraryButtonLabel();
  if (qword_257120A98 != -1)
    swift_once();
  sub_241386654();
  sub_2414B30E8();
  sub_2414B30E8();
  if (qword_257120AC0 != -1)
    swift_once();
  sub_2414B30E8();
  if (qword_257120AB0 != -1)
    swift_once();
  sub_2414B30E8();
  if (qword_257120AB8 != -1)
    swift_once();
  return sub_2414B30E8();
}

uint64_t destroy for LibraryButton(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return swift_release();
}

uint64_t initializeWithCopy for LibraryButton(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_retain();
  return a1;
}

uint64_t *assignWithCopy for LibraryButton(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v4 = a2[6];
  a1[5] = a2[5];
  a1[6] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for LibraryButton(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for LibraryButton()
{
  return &type metadata for LibraryButton;
}

uint64_t sub_24146A134()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257129A10);
  sub_241469CC8();
  sub_241469E18();
  return swift_getOpaqueTypeConformance2();
}

char *sub_24146A194(uint64_t a1, uint64_t *a2, int *a3)
{
  char *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;

  v4 = (char *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = a3[5];
    v9 = &v4[v8];
    v10 = (uint64_t)a2 + v8;
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
    v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12(&v4[a3[6]], (uint64_t)a2 + a3[6], v11);
    v12(&v4[a3[7]], (uint64_t)a2 + a3[7], v11);
    v12(&v4[a3[8]], (uint64_t)a2 + a3[8], v11);
    v12(&v4[a3[9]], (uint64_t)a2 + a3[9], v11);
  }
  return v4;
}

uint64_t sub_24146A2A4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t);

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = a1 + a2[5];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  v7(a1 + a2[6], v5);
  v7(a1 + a2[7], v5);
  v7(a1 + a2[8], v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + a2[9], v5);
}

uint64_t sub_24146A358(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  v11(a1 + a3[7], a2 + a3[7], v10);
  v11(a1 + a3[8], a2 + a3[8], v10);
  v11(a1 + a3[9], a2 + a3[9], v10);
  return a1;
}

uint64_t *sub_24146A434(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10((char *)a1 + a3[6], (char *)a2 + a3[6], v9);
  v10((char *)a1 + a3[7], (char *)a2 + a3[7], v9);
  v10((char *)a1 + a3[8], (char *)a2 + a3[8], v9);
  v10((char *)a1 + a3[9], (char *)a2 + a3[9], v9);
  return a1;
}

uint64_t sub_24146A4FC(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  v11(a1 + a3[7], a2 + a3[7], v10);
  v11(a1 + a3[8], a2 + a3[8], v10);
  v11(a1 + a3[9], a2 + a3[9], v10);
  return a1;
}

uint64_t sub_24146A5D0(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  __swift_destroy_boxed_opaque_existential_1(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  v11(a1 + a3[7], a2 + a3[7], v10);
  v11(a1 + a3[8], a2 + a3[8], v10);
  v11(a1 + a3[9], a2 + a3[9], v10);
  return a1;
}

uint64_t sub_24146A6A8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24146A6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_24146A734()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24146A740(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_24146A7B8()
{
  unint64_t v0;

  sub_2413865FC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_24146A834()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24146A844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  _OWORD *v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  char *v61;
  char *v62;
  uint64_t DynamicType;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  uint64_t v90;
  _OWORD v91[7];
  __int128 v92;
  __int128 v93;
  __int128 v94;

  v85 = a2;
  v83 = sub_2414B3CD0();
  v80 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v79 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129AF8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129B00);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129B08);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129B10);
  MEMORY[0x24BDAC7A8](v70);
  *(_QWORD *)&v86 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129B18);
  MEMORY[0x24BDAC7A8](v71);
  v72 = (uint64_t)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129B20);
  MEMORY[0x24BDAC7A8](v73);
  v74 = (uint64_t)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129B28);
  v77 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v76 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129B30);
  MEMORY[0x24BDAC7A8](v75);
  v84 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129B38);
  MEMORY[0x24BDAC7A8](v82);
  v81 = (uint64_t)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257120AA0 != -1)
    swift_once();
  v19 = qword_2571299D0;
  *(_QWORD *)v6 = sub_2414B3880();
  *((_QWORD *)v6 + 1) = v19;
  v6[16] = 0;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129B40);
  sub_24146B2B0(a1, (uint64_t)&v6[*(int *)(v20 + 44)]);
  v21 = sub_2414B3E68();
  sub_2412F1B18(a1, (uint64_t)v91);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257129A30);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v22 = *((_QWORD *)&v87 + 1);
    swift_bridgeObjectRelease();
    if (v22)
    {
      type metadata accessor for LibraryButtonLabel();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
      sub_2414B30F4();
    }
  }
  sub_2414B2F20();
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  sub_2412DC3FC((uint64_t)v6, (uint64_t)v9, &qword_257129AF8);
  v31 = &v9[*(int *)(v7 + 36)];
  *v31 = v21;
  *((_QWORD *)v31 + 1) = v24;
  *((_QWORD *)v31 + 2) = v26;
  *((_QWORD *)v31 + 3) = v28;
  *((_QWORD *)v31 + 4) = v30;
  v31[40] = 0;
  sub_2412CBE78((uint64_t)v6, &qword_257129AF8);
  v32 = sub_2414B3E80();
  sub_2412F1B18(a1, (uint64_t)v91);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v33 = *((_QWORD *)&v87 + 1);
    swift_bridgeObjectRelease();
    if (v33)
    {
      type metadata accessor for LibraryButtonLabel();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
      sub_2414B30F4();
    }
  }
  sub_2414B2F20();
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v41 = v40;
  sub_2412DC3FC((uint64_t)v9, (uint64_t)v12, &qword_257129B00);
  v42 = &v12[*(int *)(v10 + 36)];
  *v42 = v32;
  *((_QWORD *)v42 + 1) = v35;
  *((_QWORD *)v42 + 2) = v37;
  *((_QWORD *)v42 + 3) = v39;
  *((_QWORD *)v42 + 4) = v41;
  v42[40] = 0;
  sub_2412CBE78((uint64_t)v9, &qword_257129B00);
  if (qword_257120A98 != -1)
    swift_once();
  type metadata accessor for LibraryButtonLabel();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
  sub_2414B30F4();
  sub_2414B30F4();
  sub_2414B4A44();
  sub_2414B35F8();
  v43 = v86;
  sub_2412DC3FC((uint64_t)v12, v86, &qword_257129B08);
  v44 = (_OWORD *)(v43 + *(int *)(v70 + 36));
  v45 = v91[5];
  v46 = v91[6];
  v44[4] = v91[4];
  v44[5] = v45;
  v44[6] = v46;
  v47 = v91[1];
  *v44 = v91[0];
  v44[1] = v47;
  v48 = v91[3];
  v44[2] = v91[2];
  v44[3] = v48;
  sub_2412CBE78((uint64_t)v12, &qword_257129B08);
  sub_2412F1B18(a1, (uint64_t)&v87);
  if ((swift_dynamicCast() & 1) == 0 || (v49 = *((_QWORD *)&v92 + 1), swift_bridgeObjectRelease(), !v49))
    sub_2414B30F4();
  sub_2414B30F4();
  sub_2414B4A44();
  sub_2414B31B4();
  v50 = v86;
  v51 = v72;
  sub_2412DC3FC(v86, v72, &qword_257129B10);
  v52 = (_OWORD *)(v51 + *(int *)(v71 + 36));
  v53 = v93;
  *v52 = v92;
  v52[1] = v53;
  v52[2] = v94;
  sub_2412CBE78(v50, &qword_257129B10);
  v54 = sub_2414B4A44();
  v56 = v55;
  sub_24146B998(a1, (uint64_t *)&v87);
  v86 = v87;
  v71 = v88;
  v70 = v89;
  v57 = v90;
  v58 = v74;
  sub_2412DC3FC(v51, v74, &qword_257129B18);
  v59 = v58 + *(int *)(v73 + 36);
  v60 = v71;
  *(_OWORD *)v59 = v86;
  *(_OWORD *)(v59 + 16) = v60;
  *(_OWORD *)(v59 + 32) = v70;
  *(_QWORD *)(v59 + 48) = v57;
  *(_QWORD *)(v59 + 56) = v54;
  *(_QWORD *)(v59 + 64) = v56;
  sub_2412CBE78(v51, &qword_257129B18);
  v61 = v79;
  sub_2414B3CB8();
  sub_24146BCBC();
  v62 = v76;
  sub_2414B43B4();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v61, v83);
  sub_2412CBE78(v58, &qword_257129B20);
  sub_2412F1B18(a1, (uint64_t)&v87);
  __swift_project_boxed_opaque_existential_1(&v87, *((uint64_t *)&v88 + 1));
  DynamicType = swift_getDynamicType();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v87);
  v64 = v77;
  v65 = (uint64_t)v84;
  v66 = v78;
  (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v84, v62, v78);
  *(_QWORD *)(v65 + *(int *)(v75 + 52)) = DynamicType;
  (*(void (**)(char *, uint64_t))(v64 + 8))(v62, v66);
  sub_2414B31F0();
  sub_2414B4A68();
  sub_2414B4A8C();
  swift_release();
  sub_2414B3214();
  swift_release();
  swift_release();
  sub_2414B31F0();
  sub_2414B4A68();
  sub_2414B4A8C();
  swift_release();
  sub_2414B3214();
  swift_release();
  swift_release();
  v67 = sub_2414B31CC();
  swift_release();
  swift_release();
  v68 = v81;
  sub_2412DC3FC(v65, v81, &qword_257129B30);
  *(_QWORD *)(v68 + *(int *)(v82 + 36)) = v67;
  sub_2412CBE78(v65, &qword_257129B30);
  return sub_2412EAEA4(v68, v85, &qword_257129B38);
}

uint64_t sub_24146B2B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t DynamicType;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[5];

  v41 = a2;
  v42 = a1;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_254382898);
  MEMORY[0x24BDAC7A8](v43);
  v4 = (uint64_t *)((char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_2414B472C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129B88);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_257129B90);
  MEMORY[0x24BDAC7A8](v44);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v41 - v15;
  sub_2412F1B18(a1, (uint64_t)v47);
  __swift_project_boxed_opaque_existential_1(v47, v47[3]);
  DynamicType = swift_getDynamicType();
  v18 = v47[4];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(DynamicType, v18);
  v19 = sub_2414B4708();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BDF40B8], v5);
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v4 + *(int *)(v43 + 28), v8, v5);
  *v4 = KeyPath;
  sub_2412DC3FC((uint64_t)v4, (uint64_t)v11 + *(int *)(v9 + 36), &qword_254382898);
  *v11 = v19;
  swift_retain();
  sub_2412CBE78((uint64_t)v4, &qword_254382898);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  v21 = v42;
  v22 = sub_24146B6EC();
  v23 = swift_getKeyPath();
  sub_2412DC3FC((uint64_t)v11, (uint64_t)v13, &qword_257129B88);
  v24 = (uint64_t *)&v13[*(int *)(v44 + 36)];
  *v24 = v23;
  v24[1] = v22;
  sub_2412CBE78((uint64_t)v11, &qword_257129B88);
  sub_2412EAEA4((uint64_t)v13, (uint64_t)v16, &qword_257129B90);
  sub_2412F1B18(v21, (uint64_t)v47);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257129A30);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v25 = v41;
    if (v46)
    {
      v44 = (uint64_t)v16;
      v47[0] = v45;
      v47[1] = v46;
      sub_2412F6D88();
      v26 = sub_2414B40F0();
      v28 = v27;
      v30 = v29;
      if (qword_257120AA8 != -1)
        swift_once();
      v31 = v30 & 1;
      v32 = sub_2414B4078();
      v34 = v33;
      v36 = v35;
      v38 = v37 & 1;
      sub_2412F6D78(v26, v28, v31);
      swift_bridgeObjectRelease();
      v16 = (char *)v44;
    }
    else
    {
      v32 = 0;
      v34 = 0;
      v38 = 0;
      v36 = 0;
    }
  }
  else
  {
    v32 = 0;
    v34 = 0;
    v38 = 0;
    v36 = 0;
    v25 = v41;
  }
  sub_2412DC3FC((uint64_t)v16, (uint64_t)v13, &qword_257129B90);
  sub_2412DC3FC((uint64_t)v13, v25, &qword_257129B90);
  v39 = (uint64_t *)(v25 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257129B98) + 48));
  *v39 = v32;
  v39[1] = v34;
  v39[2] = v38;
  v39[3] = v36;
  sub_24146BEBC(v32, v34, v38, v36);
  sub_2412CBE78((uint64_t)v16, &qword_257129B90);
  sub_24144A260(v32, v34, v38, v36);
  return sub_2412CBE78((uint64_t)v13, &qword_257129B90);
}

uint64_t sub_24146B6EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[5];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254381398);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  v5 = sub_2414B3F58();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  sub_2412F1B18(v1, (uint64_t)v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257129A30);
  if (swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    v9 = (unsigned int *)MEMORY[0x24BDF1860];
LABEL_5:
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *v9, v5);
    v10 = sub_2414B3ED4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
    sub_2414B3EE0();
    goto LABEL_6;
  }
  if (swift_dynamicCast())
  {
    v9 = (unsigned int *)MEMORY[0x24BDF18C8];
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) != 0 || swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    type metadata accessor for LibraryButtonLabel();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
    sub_2414B30F4();
    sub_2414B3EF8();
    v13 = sub_2414B3ED4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
    v11 = sub_2414B3F04();
    sub_2412CBE78((uint64_t)v4, &qword_254381398);
    return v11;
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BDF1860], v5);
  v14 = sub_2414B3ED4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 1, 1, v14);
  sub_2414B3EF8();
LABEL_6:
  v11 = sub_2414B3F10();
  sub_2412CBE78((uint64_t)v4, &qword_254381398);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return v11;
}

uint64_t sub_24146B998@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t result;
  int v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t DynamicType;
  uint64_t v15;
  uint64_t v16;
  _DWORD v17[2];
  _QWORD v18[5];

  v4 = type metadata accessor for LibraryButtonLabel();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2412F1B18(a1, (uint64_t)v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257129A30);
  v7 = swift_dynamicCast();
  sub_24146BE2C(a1, (uint64_t)v6);
  if (v7)
  {
    sub_24146BE70((uint64_t)v6);
  }
  else
  {
    sub_2412F1B18((uint64_t)v6, (uint64_t)v18);
    sub_24146BE70((uint64_t)v6);
    result = swift_dynamicCast();
    if (!(_DWORD)result)
    {
      v16 = 0;
      v13 = 0;
      v11 = 0;
      DynamicType = 0;
      v15 = 0;
      goto LABEL_8;
    }
  }
  sub_2412F1B18(a1, (uint64_t)v18);
  v9 = swift_dynamicCast();
  v10 = v17[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571248D8);
  sub_2414B30F4();
  v11 = v18[0];
  v12 = objc_msgSend((id)objc_opt_self(), sel_tertiarySystemFillColor);
  v13 = MEMORY[0x242693F58](v12);
  sub_2412F1B18(a1, (uint64_t)v18);
  __swift_project_boxed_opaque_existential_1(v18, v18[3]);
  DynamicType = swift_getDynamicType();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  sub_2414B31F0();
  sub_2414B4A68();
  sub_2414B4A8C();
  swift_release();
  sub_2414B3214();
  swift_release();
  swift_release();
  sub_2414B31F0();
  sub_2414B4A68();
  sub_2414B4A8C();
  swift_release();
  sub_2414B3214();
  swift_release();
  swift_release();
  v15 = sub_2414B31CC();
  swift_release();
  result = swift_release();
  v16 = 0x100000000;
  if (v9)
    v16 = v10;
LABEL_8:
  *a2 = v16;
  a2[1] = v13;
  a2[2] = 0;
  a2[3] = v11;
  a2[4] = 0;
  a2[5] = DynamicType;
  a2[6] = v15;
  return result;
}

